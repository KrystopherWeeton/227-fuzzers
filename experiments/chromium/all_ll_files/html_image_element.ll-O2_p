; ModuleID = '../../third_party/blink/renderer/core/html/html_image_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_image_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1492", i32, i32, %"class.blink::Persistent.1494" }
%"class.WTF::RefCounted.1492" = type { %"class.base::RefCounted.1493" }
%"class.base::RefCounted.1493" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1494" = type { %"class.blink::PersistentBase.1495" }
%"class.blink::PersistentBase.1495" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1498" }
%"class.blink::HeapHashMap.1498" = type { %"class.WTF::HashMap.1501" }
%"class.WTF::HashMap.1501" = type { %"class.WTF::HashTable.1502" }
%"class.WTF::HashTable.1502" = type <{ %"struct.WTF::KeyValuePair.1504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1504" = type { %"class.blink::WeakMember.1505", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.2798", i64 }
%"class.std::__1::vector.2798" = type { %"class.std::__1::__vector_base.2799" }
%"class.std::__1::__vector_base.2799" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.2800" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.2800" = type { %"struct.std::__1::__compressed_pair_elem.2801" }
%"struct.std::__1::__compressed_pair_elem.2801" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable", %"class.blink::FormAssociated", %"class.blink::Member.2974", %"class.blink::Member.3006", %"class.blink::Member.3012", %"class.WTF::AtomicString", float, %"class.blink::Member.3032", i8, i8, i32, %"class.std::__1::unique_ptr.3039" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.2974" = type { %"class.blink::MemberBase.2975" }
%"class.blink::MemberBase.2975" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2978", %"class.blink::Member.343", %"class.blink::Member.2979", %"class.blink::Member.2979", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.2991", %"class.std::__1::unique_ptr.2992", %"class.std::__1::unique_ptr.2992", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.2998" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.2978" = type { i8 }
%"class.blink::Member.2979" = type { %"class.blink::MemberBase.2980" }
%"class.blink::MemberBase.2980" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.2983", float, i8, %class.scoped_refptr.2985, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2983" = type { %"class.blink::MemberBase.2984" }
%"class.blink::MemberBase.2984" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.2985 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1311", i8, %class.scoped_refptr.1313, %"class.blink::WeakPersistent.1327", i32, i8, %"class.std::__1::unique_ptr.1329" }
%"class.WTF::ThreadSafeRefCounted.1311" = type { %"class.base::RefCountedThreadSafe.1312" }
%"class.base::RefCountedThreadSafe.1312" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%class.scoped_refptr.1313 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1314", i64, %"class.WTF::Vector.1316", %"class.WTF::Vector.1321" }
%"class.WTF::RefCounted.1314" = type { %"class.base::RefCounted.1315" }
%"class.base::RefCounted.1315" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { i8*, i32, i32 }
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { %"class.std::__1::unique_ptr.1324"*, i32, i32 }
%"class.std::__1::unique_ptr.1324" = type opaque
%"class.blink::WeakPersistent.1327" = type { %"class.blink::PersistentBase.1328" }
%"class.blink::PersistentBase.1328" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.1329" = type { %"class.std::__1::__compressed_pair.1330" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2986" }
%"class.WTF::HashMap.2986" = type { %"class.WTF::HashTable.2987" }
%"class.WTF::HashTable.2987" = type <{ %"struct.WTF::KeyValuePair.2990"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2990" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.2991" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.std::__1::unique_ptr.2992" = type { %"class.std::__1::__compressed_pair.2993" }
%"class.std::__1::__compressed_pair.2993" = type { %"struct.std::__1::__compressed_pair_elem.2994" }
%"struct.std::__1::__compressed_pair_elem.2994" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1487 }
%class.scoped_refptr.1487 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::HeapVector.2998" = type { %"class.WTF::Vector.3001" }
%"class.WTF::Vector.3001" = type { %"class.WTF::VectorBuffer.3002" }
%"class.WTF::VectorBuffer.3002" = type { %"class.WTF::VectorBufferBase.3003" }
%"class.WTF::VectorBufferBase.3003" = type { %"class.blink::Member.3004"*, i32, i32 }
%"class.blink::Member.3004" = type opaque
%"class.blink::Member.3006" = type { %"class.blink::MemberBase.3007" }
%"class.blink::MemberBase.3007" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type { %"class.blink::MediaQueryListListener", %"class.blink::Member.3010" }
%"class.blink::MediaQueryListListener" = type { i32 (...)** }
%"class.blink::Member.3010" = type { %"class.blink::MemberBase.3011" }
%"class.blink::MemberBase.3011" = type { %"class.blink::HTMLImageElement"* }
%"class.blink::Member.3012" = type { %"class.blink::MemberBase.3013" }
%"class.blink::MemberBase.3013" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.3014", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector.3017", %"class.blink::HeapVector.3025", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.3014" = type { %"class.blink::MemberBase.3015" }
%"class.blink::MemberBase.3015" = type { %"class.blink::HeapHashMap.3016"* }
%"class.blink::HeapHashMap.3016" = type opaque
%"class.blink::HeapVector.3017" = type { %"class.WTF::Vector.3020" }
%"class.WTF::Vector.3020" = type { %"class.WTF::VectorBuffer.3021" }
%"class.WTF::VectorBuffer.3021" = type { %"class.WTF::VectorBufferBase.3022" }
%"class.WTF::VectorBufferBase.3022" = type { %"class.blink::Member.3023"*, i32, i32 }
%"class.blink::Member.3023" = type opaque
%"class.blink::HeapVector.3025" = type { %"class.WTF::Vector.3028" }
%"class.WTF::Vector.3028" = type { %"class.WTF::VectorBuffer.3029" }
%"class.WTF::VectorBuffer.3029" = type { %"class.WTF::VectorBufferBase.3030" }
%"class.WTF::VectorBufferBase.3030" = type { %"class.blink::Member.3010"*, i32, i32 }
%"class.blink::Member.3032" = type { %"class.blink::MemberBase.3033" }
%"class.blink::MemberBase.3033" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type { %"class.blink::HTMLElement", %"class.blink::Member.3034", %"class.blink::Member.3037", %"class.blink::TaskHandle" }
%"class.blink::Member.3034" = type { %"class.blink::MemberBase.3035" }
%"class.blink::MemberBase.3035" = type { %"class.blink::MediaQueryList"* }
%"class.blink::MediaQueryList" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.3036", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::Member.1935", %class.scoped_refptr.393, %"class.blink::HeapLinkedHashSet.1949", i8, i8, [6 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.929" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.917" }
%"class.blink::HeapVector.917" = type { %"class.WTF::Vector.920" }
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.921" }
%"class.WTF::VectorBuffer.921" = type { %"class.WTF::VectorBufferBase.922", [32 x i8] }
%"class.WTF::VectorBufferBase.922" = type { %"struct.std::__1::pair.923"*, i32, i32 }
%"struct.std::__1::pair.923" = type { %"class.WTF::AtomicString", %"class.blink::Member.924" }
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::HeapVector.926"* }
%"class.blink::HeapVector.926" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.WTF::Vector.932"* }
%"class.WTF::Vector.932" = type opaque
%"class.blink::ActiveScriptWrappable.3036" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1425" }
%"class.blink::WeakMember.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1123" }
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::WeakMember.1129"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1129" = type opaque
%"class.blink::Member.1935" = type { %"class.blink::MemberBase.1936" }
%"class.blink::MemberBase.1936" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type { %"class.blink::Member.326", %"class.blink::Member.1626", %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1949" }
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1630", i8, [7 x i8] }>
%"class.blink::Member.1630" = type { %"class.blink::MemberBase.1631" }
%"class.blink::MemberBase.1631" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type { i32 (...)** }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1941", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1941" = type { %"class.WTF::HashTable.1942" }
%"class.WTF::HashTable.1942" = type <{ %"struct.WTF::KeyValuePair.1944"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1944" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1945", i32, i32 }
%"class.WTF::Vector.1945" = type { %"class.WTF::VectorBuffer.1946" }
%"class.WTF::VectorBuffer.1946" = type { %"class.WTF::VectorBufferBase.1947" }
%"class.WTF::VectorBufferBase.1947" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1949" = type { %"class.WTF::LinkedHashSet.1952" }
%"class.WTF::LinkedHashSet.1952" = type { %"class.WTF::HashMap.1953", %"class.WTF::VectorBackedLinkedList.1957" }
%"class.WTF::HashMap.1953" = type { %"class.WTF::HashTable.1954" }
%"class.WTF::HashTable.1954" = type <{ %"struct.WTF::KeyValuePair.1956"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1956" = type opaque
%"class.WTF::VectorBackedLinkedList.1957" = type { %"class.WTF::Vector.1958", i32, i32 }
%"class.WTF::Vector.1958" = type { %"class.WTF::VectorBuffer.1959" }
%"class.WTF::VectorBuffer.1959" = type { %"class.WTF::VectorBufferBase.1960" }
%"class.WTF::VectorBufferBase.1960" = type { %"class.WTF::VectorBackedLinkedListNode.1961"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1961" = type opaque
%"class.blink::Member.3037" = type { %"class.blink::MemberBase.3038" }
%"class.blink::MemberBase.3038" = type { %"class.blink::HTMLSourceElement::Listener"* }
%"class.blink::HTMLSourceElement::Listener" = type opaque
%"class.std::__1::unique_ptr.3039" = type { %"class.std::__1::__compressed_pair.3040" }
%"class.std::__1::__compressed_pair.3040" = type { %"struct.std::__1::__compressed_pair_elem.3041" }
%"struct.std::__1::__compressed_pair_elem.3041" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.1180", %"class.blink::Member.1463", %"class.blink::Member.1465", %"class.blink::Member.1467", %"class.blink::Member.1469", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1477", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1488", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1438", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1519", double, double, i64, i64, %"class.blink::HeapHashSet.1521", %"class.blink::HeapHashSet.1528", i16, i8, %"class.blink::Member.1535", %"class.blink::Member.1537", %"class.blink::Member.1863", %"class.blink::Member.1865", %"class.blink::TextLinkColors", %"class.blink::Member.1867", i8, [7 x i8], %"class.blink::HeapHashMap.1869", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1876", %"class.blink::Member.1881", %"class.blink::Member.1883", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1885", %"class.blink::HeapVector.1887", %"class.std::__1::unique_ptr.1895", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1901", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1914", %"class.WTF::Vector.1916", i8, i8, %"class.std::__1::unique_ptr.1921", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1927", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1935", i8, i32, %"class.blink::Member.1963", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1969", %"class.WTF::HashMap.1971", %"class.blink::Member.1976", %"class.blink::Member.1978", %"class.blink::Member.1980", %"class.blink::Member.1982", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1984", i8, i32, %"class.blink::Member.1991", %"class.blink::Member.1993", i32, %"class.blink::Member.1995", %"class.blink::Member.1997", %"class.blink::Member.1999", %"class.std::__1::unique_ptr.2001", i64, %"class.std::__1::unique_ptr.2007", i32, i32, %"class.blink::Member.2018", %"class.blink::Member.2020", %"class.blink::Member.2022", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2024", %"class.WTF::Vector.1449", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2030", %"class.blink::Member.2037", %"class.std::__1::unique_ptr.2039", %"class.blink::Member.2045", i8, i8, %"class.WTF::String", %"class.blink::Member.2047", i8, [7 x i8], %"class.blink::HeapHashMap.2049", %"class.blink::HeapObserverSet.2056", %"class.blink::Member.2064", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2066", i32, i8, i8, %"class.blink::WeakMember.2068", %"class.blink::Member.2069" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1265", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1273", %"class.blink::Member.326", %"class.blink::Member.1275", i8, %"class.blink::Member.1277", %"class.blink::Member.1279", %"class.blink::Member.1281", %"class.blink::Member.1281", %"class.blink::Member.1281", %"class.blink::Member.1281", %"class.blink::Member.1281", %"class.blink::Member.1281", %"class.blink::Member.1283", %"class.blink::Member.1285", %"class.blink::Member.1287", %"class.blink::Member.1289", %"class.blink::Member.1291", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.630", %"class.blink::Member.1293", %class.scoped_refptr.1295, %"class.blink::HeapHashSet.1382", %"class.blink::Member.1389", %"class.blink::HeapHashMap.1402", %"class.std::__1::unique_ptr.1409", %"class.blink::Member.1421", %"class.blink::Member.1442", %"class.blink::Member.1444", %"class.blink::Member.1446", %"class.WTF::Vector.1449", %"class.util::TokenType", %"class.WTF::HashSet.1454", %"class.WTF::Deque.1458" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.936", %"class.blink::Member.938", %"class.blink::Member.940", %"class.blink::Member.942", i8, %"class.WTF::Vector.944" }
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2105", %"class.blink::Member.2107", %"class.blink::Member.2109", i8, i32, i8, i32, %"class.blink::Member.2111", %"class.blink::Member.938", %"class.blink::FrameLifecycle", %"class.blink::Member.936", %"class.blink::Member.936", %"class.blink::Member.936", %"class.blink::Member.936", %"class.blink::Member.936", %"class.blink::Member.936", %"class.blink::Member.1427", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2122", i8, %"class.base::UnguessableToken", %"class.absl::optional.2124", %"class.absl::optional.2129", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.936", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2105" = type { %"class.blink::MemberBase.2106" }
%"class.blink::MemberBase.2106" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2841", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.936", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2855", %"class.blink::Member.2859", %"class.blink::Member.2861", %"class.blink::Member.2865", %"class.blink::Member.2867", %"class.blink::Member.2869", %"class.blink::Member.2871", %"class.blink::Member.2873", %"class.blink::HeapObserverSet.2875", %"class.blink::Member.2883", %"class.blink::Member.2885", %"class.blink::Member.2887", %"class.blink::Member.2889", %"class.blink::Member.2891", %"class.blink::Member.2893", %"class.blink::Member.2895", %"class.blink::Member.2897", %"class.blink::Member.2899", %"class.blink::Member.2901", %"class.blink::Member.2903", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2928", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2935", %"class.blink::Member.2105", %"class.blink::Member.2105", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2943", %"class.std::__1::unique_ptr.2949", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2841" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2842" }
%"class.blink::HeapHashMap.2842" = type { %"class.WTF::HashMap.2845" }
%"class.WTF::HashMap.2845" = type { %"class.WTF::HashTable.2846" }
%"class.WTF::HashTable.2846" = type <{ %"struct.WTF::KeyValuePair.2848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2848" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2849" }
%"class.std::__1::unique_ptr.2849" = type { %"class.std::__1::__compressed_pair.2850" }
%"class.std::__1::__compressed_pair.2850" = type { %"struct.std::__1::__compressed_pair_elem.2851" }
%"struct.std::__1::__compressed_pair_elem.2851" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2855" = type { %"class.blink::MemberBase.2856" }
%"class.blink::MemberBase.2856" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2105", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.2859" = type { %"class.blink::MemberBase.2860" }
%"class.blink::MemberBase.2860" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2861" = type { %"class.blink::MemberBase.2862" }
%"class.blink::MemberBase.2862" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.2068", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.2865" = type { %"class.blink::MemberBase.2866" }
%"class.blink::MemberBase.2866" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2867" = type { %"class.blink::MemberBase.2868" }
%"class.blink::MemberBase.2868" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2869" = type { %"class.blink::MemberBase.2870" }
%"class.blink::MemberBase.2870" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2871" = type { %"class.blink::MemberBase.2872" }
%"class.blink::MemberBase.2872" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2873" = type { %"class.blink::MemberBase.2874" }
%"class.blink::MemberBase.2874" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2875" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2876" }
%"class.blink::HeapHashSet.2876" = type { %"class.WTF::HashSet.2879" }
%"class.WTF::HashSet.2879" = type { %"class.WTF::HashTable.2880" }
%"class.WTF::HashTable.2880" = type <{ %"class.blink::WeakMember.2882"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2882" = type opaque
%"class.blink::Member.2883" = type { %"class.blink::MemberBase.2884" }
%"class.blink::MemberBase.2884" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2885" = type { %"class.blink::MemberBase.2886" }
%"class.blink::MemberBase.2886" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2887" = type { %"class.blink::MemberBase.2888" }
%"class.blink::MemberBase.2888" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2889" = type { %"class.blink::MemberBase.2890" }
%"class.blink::MemberBase.2890" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2891" = type { %"class.blink::MemberBase.2892" }
%"class.blink::MemberBase.2892" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2893" = type { %"class.blink::MemberBase.2894" }
%"class.blink::MemberBase.2894" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2895" = type { %"class.blink::MemberBase.2896" }
%"class.blink::MemberBase.2896" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2897" = type { %"class.blink::MemberBase.2898" }
%"class.blink::MemberBase.2898" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2899" = type { %"class.blink::MemberBase.2900" }
%"class.blink::MemberBase.2900" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2901" = type { %"class.blink::MemberBase.2902" }
%"class.blink::MemberBase.2902" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2903" = type { %"class.blink::MemberBase.2904" }
%"class.blink::MemberBase.2904" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2905" }
%"class.WTF::Deque.2905" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2908" }
%"class.WTF::VectorBuffer.2908" = type { %"class.WTF::VectorBufferBase.2909" }
%"class.WTF::VectorBufferBase.2909" = type { %"class.std::__1::unique_ptr.2910"*, i32, i32 }
%"class.std::__1::unique_ptr.2910" = type { %"class.std::__1::__compressed_pair.2911" }
%"class.std::__1::__compressed_pair.2911" = type { %"struct.std::__1::__compressed_pair_elem.2912" }
%"struct.std::__1::__compressed_pair_elem.2912" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2916", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2916" = type { %"class.std::__1::__bitset.2917" }
%"class.std::__1::__bitset.2917" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2918" }
%"class.absl::optional.2918" = type { %"class.absl::optional_internal::optional_data.2919" }
%"class.absl::optional_internal::optional_data.2919" = type { %"class.absl::optional_internal::optional_data_base.2920" }
%"class.absl::optional_internal::optional_data_base.2920" = type { %"class.absl::optional_internal::optional_data_dtor_base.2921" }
%"class.absl::optional_internal::optional_data_dtor_base.2921" = type { i8, %union.anon.2922 }
%union.anon.2922 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2923", i64, %"class.absl::optional.1062", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2923" = type { %"class.absl::optional_internal::optional_data.2924" }
%"class.absl::optional_internal::optional_data.2924" = type { %"class.absl::optional_internal::optional_data_base.2925" }
%"class.absl::optional_internal::optional_data_base.2925" = type { %"class.absl::optional_internal::optional_data_dtor_base.2926" }
%"class.absl::optional_internal::optional_data_dtor_base.2926" = type { i8, %union.anon.2927 }
%union.anon.2927 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.1062" = type { %"class.absl::optional_internal::optional_data.1063" }
%"class.absl::optional_internal::optional_data.1063" = type { %"class.absl::optional_internal::optional_data_base.1064" }
%"class.absl::optional_internal::optional_data_base.1064" = type { %"class.absl::optional_internal::optional_data_dtor_base.1065" }
%"class.absl::optional_internal::optional_data_dtor_base.1065" = type { i8, %union.anon.1066 }
%union.anon.1066 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr.2928" = type { %"class.std::__1::unique_ptr.2929" }
%"class.std::__1::unique_ptr.2929" = type { %"class.std::__1::__compressed_pair.2930" }
%"class.std::__1::__compressed_pair.2930" = type { %"struct.std::__1::__compressed_pair_elem.2931" }
%"struct.std::__1::__compressed_pair_elem.2931" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2935" = type { %"class.WTF::HashSet.2938" }
%"class.WTF::HashSet.2938" = type { %"class.WTF::HashTable.2939" }
%"class.WTF::HashTable.2939" = type <{ %"class.blink::WeakMember.2941"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2941" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2942" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2942" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2943" = type { %"class.std::__1::__compressed_pair.2944" }
%"class.std::__1::__compressed_pair.2944" = type { %"struct.std::__1::__compressed_pair_elem.2945" }
%"struct.std::__1::__compressed_pair_elem.2945" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2949" = type { %"class.std::__1::__compressed_pair.2950" }
%"class.std::__1::__compressed_pair.2950" = type { %"struct.std::__1::__compressed_pair_elem.2951" }
%"struct.std::__1::__compressed_pair_elem.2951" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2141", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2149", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2157", %"class.blink::FrameLoader", %"class.blink::Member.2178", %"class.blink::Member.343", %"class.blink::Member.2180", %"class.blink::Member.2182", %"class.blink::Member.2184", %"class.blink::Member.2186", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2188", %class.scoped_refptr.2412, %"class.blink::Member.2413", %"class.blink::Member.2415", %"class.blink::Member.2417", %"class.blink::Member.2419", %"class.blink::Member.2421", %"class.blink::Member.2425", %"class.blink::Member.2427", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2429", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2432", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2438", %"class.std::__1::unique_ptr.2439", %"class.absl::optional.2129", i32, [4 x i8], %"class.std::__1::unique_ptr.2445", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2453", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2458", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2463", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2466", %"class.blink::Member.2468", %"class.blink::Member.2470", %"class.blink::Member.2472", %"class.mojo::StructPtr.2475", %"class.blink::Member.2484", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2486", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2141" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2142" }
%"class.blink::HeapHashMap.2142" = type { %"class.WTF::HashMap.2145" }
%"class.WTF::HashMap.2145" = type { %"class.WTF::HashTable.2146" }
%"class.WTF::HashTable.2146" = type <{ %"struct.WTF::KeyValuePair.2148"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2148" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2149" = type { %"class.std::__1::__compressed_pair.2150" }
%"class.std::__1::__compressed_pair.2150" = type { %"struct.std::__1::__compressed_pair_elem.2151" }
%"struct.std::__1::__compressed_pair_elem.2151" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1412", %"class.base::WeakPtrFactory.1417" }
%"class.WTF::HashMap.1412" = type { %"class.WTF::HashTable.1413" }
%"class.WTF::HashTable.1413" = type <{ %"struct.WTF::KeyValuePair.1416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1416" = type opaque
%"class.base::WeakPtrFactory.1417" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.963 }
%class.scoped_refptr.963 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2155" }
%"class.blink::Member.2155" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.1060", %"class.base::RepeatingCallback.3229", i64, %"class.std::__1::map.3230", i8*, i64, %"class.base::WeakPtrFactory.3239" }
%"class.base::RepeatingCallback.1060" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.3229" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3230" = type { %"class.std::__1::__tree.3231" }
%"class.std::__1::__tree.3231" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3232", %"class.std::__1::__compressed_pair.3236" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.3232" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3236" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3239" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2157" = type { %"class.WTF::HashSet.2160" }
%"class.WTF::HashSet.2160" = type { %"class.WTF::HashTable.2161" }
%"class.WTF::HashTable.2161" = type <{ %"class.blink::WeakMember.2163"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2163" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1427", %"class.blink::Member.2164", %"class.blink::Member.2166", %"class.std::__1::unique_ptr.2168", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2174" }
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2168" = type { %"class.std::__1::__compressed_pair.2169" }
%"class.std::__1::__compressed_pair.2169" = type { %"struct.std::__1::__compressed_pair_elem.2170" }
%"struct.std::__1::__compressed_pair_elem.2170" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2174" = type { %"class.WTF::HashTable.2175" }
%"class.WTF::HashTable.2175" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2565", %"class.blink::Member.1427", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2570", i8, i32, %"class.blink::Color", %"class.absl::optional.2572", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2577", %"class.blink::Member.2579", %"class.blink::Member.2579", %"class.std::__1::unique_ptr.2582", i32, [4 x i8], %"class.WTF::HashSet.2585", %"class.blink::Member.2592", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2594", %"class.blink::HeapHashSet.2601", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2609", i8, %"class.blink::Member.2615", i8, i8, i32, %"class.blink::HeapLinkedHashSet.2617", %"class.blink::HeapLinkedHashSet.2631", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2645", i8, %"class.std::__1::unique_ptr.2651", %"class.std::__1::unique_ptr.2732", %"class.WTF::Vector.2738", i32, %class.scoped_refptr.2743, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2744", %"class.blink::Member.2746", %"class.blink::Member.2748", %"class.blink::HeapHashSet.2750", %"class.blink::HeapHashSet.2757", %"class.std::__1::unique_ptr.2764", %"class.std::__1::unique_ptr.2771", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2565" = type { %"class.WTF::HashTable.2566" }
%"class.WTF::HashTable.2566" = type <{ %class.scoped_refptr.2569*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2569 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2570" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2571", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1509, %"class.base::WeakPtrFactory.1510" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1509 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.950" }>
%"class.base::RefCountedThreadSafe.950" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1510" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2571" = type { %"class.blink::MemberBase.2179" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2572" = type { %"class.absl::optional_internal::optional_data.2573" }
%"class.absl::optional_internal::optional_data.2573" = type { %"class.absl::optional_internal::optional_data_base.2574" }
%"class.absl::optional_internal::optional_data_base.2574" = type { %"class.absl::optional_internal::optional_data_dtor_base.2575" }
%"class.absl::optional_internal::optional_data_dtor_base.2575" = type { i8, %union.anon.2576 }
%union.anon.2576 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2577" = type { %"class.blink::MemberBase.2578" }
%"class.blink::MemberBase.2578" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2579" = type { %"class.blink::MemberBase.2580" }
%"class.blink::MemberBase.2580" = type { %"class.blink::HeapHashSet.2581"* }
%"class.blink::HeapHashSet.2581" = type opaque
%"class.std::__1::unique_ptr.2582" = type { %"class.std::__1::__compressed_pair.2583" }
%"class.std::__1::__compressed_pair.2583" = type { %"struct.std::__1::__compressed_pair_elem.2584" }
%"struct.std::__1::__compressed_pair_elem.2584" = type { %"class.WTF::HashSet.2585"* }
%"class.WTF::HashSet.2585" = type { %"class.WTF::HashTable.2586" }
%"class.WTF::HashTable.2586" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2805", [4 x i8] }>
%"class.WTF::RefCounted.2805" = type { %"class.base::RefCounted.2806" }
%"class.base::RefCounted.2806" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3298 }
%class.scoped_refptr.3298 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3299", %"class.WTF::Vector.630", %"class.WTF::Vector.3301", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3299" = type { %"class.base::RefCounted.3300" }
%"class.base::RefCounted.3300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3301" = type { %"class.WTF::VectorBuffer.3302" }
%"class.WTF::VectorBuffer.3302" = type { %"class.WTF::VectorBufferBase.3303" }
%"class.WTF::VectorBufferBase.3303" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3304 }
%union.anon.3304 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3288" }
%"class.WTF::Vector.3288" = type { %"class.WTF::VectorBuffer.3289" }
%"class.WTF::VectorBuffer.3289" = type { %"class.WTF::VectorBufferBase.3290" }
%"class.WTF::VectorBufferBase.3290" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3293", %"class.absl::optional.3293", %"class.absl::optional.3293" }
%"class.absl::optional.3293" = type { %"class.absl::optional_internal::optional_data.3294" }
%"class.absl::optional_internal::optional_data.3294" = type { %"class.absl::optional_internal::optional_data_base.3295" }
%"class.absl::optional_internal::optional_data_base.3295" = type { %"class.absl::optional_internal::optional_data_dtor_base.3296" }
%"class.absl::optional_internal::optional_data_dtor_base.3296" = type { i8, %union.anon.3297 }
%union.anon.3297 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3308" }
%"class.WTF::VectorBuffer.3308" = type { %"class.WTF::VectorBufferBase.3309", [32 x i8] }
%"class.WTF::VectorBufferBase.3309" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2592" = type { %"class.blink::MemberBase.2593" }
%"class.blink::MemberBase.2593" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2594" = type { %"class.WTF::HashSet.2597" }
%"class.WTF::HashSet.2597" = type { %"class.WTF::HashTable.2598" }
%"class.WTF::HashTable.2598" = type <{ %"class.blink::Member.2600"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2600" = type opaque
%"class.blink::HeapHashSet.2601" = type { %"class.WTF::HashSet.2604" }
%"class.WTF::HashSet.2604" = type { %"class.WTF::HashTable.2605" }
%"class.WTF::HashTable.2605" = type <{ %"class.blink::Member.2607"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2607" = type { %"class.blink::MemberBase.2608" }
%"class.blink::MemberBase.2608" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2795", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2784" = type { %"class.blink::MemberBase.2785" }
%"class.blink::MemberBase.2785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2786", %"class.blink::Member.2787", %"class.blink::Member.2789", %"class.blink::Member.2791", %"class.blink::Member.2793", %"class.WTF::Vector.906", i16, %class.scoped_refptr.1509 }
%"class.blink::ThreadState::PrefinalizerRegistration.2786" = type { i8 }
%"class.blink::Member.2787" = type { %"class.blink::MemberBase.2788" }
%"class.blink::MemberBase.2788" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2789" = type { %"class.blink::MemberBase.2790" }
%"class.blink::MemberBase.2790" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2791" = type { %"class.blink::MemberBase.2792" }
%"class.blink::MemberBase.2792" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2793" = type { %"class.blink::MemberBase.2794" }
%"class.blink::MemberBase.2794" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2795" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2796", { i64, i64 } }
%"class.blink::WeakMember.2796" = type { %"class.blink::MemberBase.2608" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2609" = type { %"class.std::__1::__compressed_pair.2610" }
%"class.std::__1::__compressed_pair.2610" = type { %"struct.std::__1::__compressed_pair_elem.2611" }
%"struct.std::__1::__compressed_pair_elem.2611" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2615" = type { %"class.blink::MemberBase.2616" }
%"class.blink::MemberBase.2616" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.2617" = type { %"class.WTF::LinkedHashSet.2620" }
%"class.WTF::LinkedHashSet.2620" = type { %"class.WTF::HashMap.2621", %"class.WTF::VectorBackedLinkedList.2625" }
%"class.WTF::HashMap.2621" = type { %"class.WTF::HashTable.2622" }
%"class.WTF::HashTable.2622" = type <{ %"struct.WTF::KeyValuePair.2624"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2624" = type opaque
%"class.WTF::VectorBackedLinkedList.2625" = type { %"class.WTF::Vector.2626", i32, i32 }
%"class.WTF::Vector.2626" = type { %"class.WTF::VectorBuffer.2627" }
%"class.WTF::VectorBuffer.2627" = type { %"class.WTF::VectorBufferBase.2628" }
%"class.WTF::VectorBufferBase.2628" = type { %"class.WTF::VectorBackedLinkedListNode.2629"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2629" = type opaque
%"class.blink::HeapLinkedHashSet.2631" = type { %"class.WTF::LinkedHashSet.2634" }
%"class.WTF::LinkedHashSet.2634" = type { %"class.WTF::HashMap.2635", %"class.WTF::VectorBackedLinkedList.2639" }
%"class.WTF::HashMap.2635" = type { %"class.WTF::HashTable.2636" }
%"class.WTF::HashTable.2636" = type <{ %"struct.WTF::KeyValuePair.2638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2638" = type opaque
%"class.WTF::VectorBackedLinkedList.2639" = type { %"class.WTF::Vector.2640", i32, i32 }
%"class.WTF::Vector.2640" = type { %"class.WTF::VectorBuffer.2641" }
%"class.WTF::VectorBuffer.2641" = type { %"class.WTF::VectorBufferBase.2642" }
%"class.WTF::VectorBufferBase.2642" = type { %"class.WTF::VectorBackedLinkedListNode.2643"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2643" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2645" = type { %"class.std::__1::__compressed_pair.2646" }
%"class.std::__1::__compressed_pair.2646" = type { %"struct.std::__1::__compressed_pair_elem.2647" }
%"struct.std::__1::__compressed_pair_elem.2647" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2651" = type { %"class.std::__1::__compressed_pair.2652" }
%"class.std::__1::__compressed_pair.2652" = type { %"struct.std::__1::__compressed_pair_elem.2653" }
%"struct.std::__1::__compressed_pair_elem.2653" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2654, %class.scoped_refptr.2654, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2709", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2714", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2654 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2655", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2662" }
%"class.WTF::RefCounted.2655" = type { %"class.base::RefCounted.2656" }
%"class.base::RefCounted.2656" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2657", i32, [4 x i8] }>
%"class.WTF::Vector.2657" = type { %"class.WTF::VectorBuffer.2658" }
%"class.WTF::VectorBuffer.2658" = type { %"class.WTF::VectorBufferBase.2659" }
%"class.WTF::VectorBufferBase.2659" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2662" = type { %"class.WTF::VectorBuffer.2663" }
%"class.WTF::VectorBuffer.2663" = type { %"class.WTF::VectorBufferBase.2664" }
%"class.WTF::VectorBufferBase.2664" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2665", %"class.std::__1::unique_ptr.2681", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2665" = type { %"class.std::__1::__compressed_pair.2666" }
%"class.std::__1::__compressed_pair.2666" = type { %"struct.std::__1::__compressed_pair_elem.2667" }
%"struct.std::__1::__compressed_pair_elem.2667" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2668", %"class.WTF::Vector.2673", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2668" = type { %"class.WTF::VectorBuffer.2669" }
%"class.WTF::VectorBuffer.2669" = type { %"class.WTF::VectorBufferBase.2670" }
%"class.WTF::VectorBufferBase.2670" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2673" = type { %"class.WTF::VectorBuffer.2674" }
%"class.WTF::VectorBuffer.2674" = type { %"class.WTF::VectorBufferBase.2675" }
%"class.WTF::VectorBufferBase.2675" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2681" = type { %"class.std::__1::__compressed_pair.2682" }
%"class.std::__1::__compressed_pair.2682" = type { %"struct.std::__1::__compressed_pair_elem.2683" }
%"struct.std::__1::__compressed_pair_elem.2683" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2684", %"class.absl::optional.2684" }
%"class.absl::optional.2684" = type { %"class.absl::optional_internal::optional_data.2685" }
%"class.absl::optional_internal::optional_data.2685" = type { %"class.absl::optional_internal::optional_data_base.2686" }
%"class.absl::optional_internal::optional_data_base.2686" = type { %"class.absl::optional_internal::optional_data_dtor_base.2687" }
%"class.absl::optional_internal::optional_data_dtor_base.2687" = type { i8, [3 x i8], %union.anon.2688 }
%union.anon.2688 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2662"*, %"class.absl::optional.2694", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2694" = type { %"class.absl::optional_internal::optional_data.2695" }
%"class.absl::optional_internal::optional_data.2695" = type { %"class.absl::optional_internal::optional_data_base.2696" }
%"class.absl::optional_internal::optional_data_base.2696" = type { %"class.absl::optional_internal::optional_data_dtor_base.2697" }
%"class.absl::optional_internal::optional_data_dtor_base.2697" = type { i8, %union.anon.2698 }
%union.anon.2698 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2699", %"class.WTF::Vector.2704" }
%"class.WTF::Vector.2699" = type { %"class.WTF::VectorBuffer.2700" }
%"class.WTF::VectorBuffer.2700" = type { %"class.WTF::VectorBufferBase.2701", [128 x i8] }
%"class.WTF::VectorBufferBase.2701" = type { i32*, i32, i32 }
%"class.WTF::Vector.2704" = type { %"class.WTF::VectorBuffer.2705" }
%"class.WTF::VectorBuffer.2705" = type { %"class.WTF::VectorBufferBase.2706", [128 x i8] }
%"class.WTF::VectorBufferBase.2706" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2709" = type { %"class.WTF::VectorBuffer.2710" }
%"class.WTF::VectorBuffer.2710" = type { %"class.WTF::VectorBufferBase.2711" }
%"class.WTF::VectorBufferBase.2711" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2714" = type { %"class.WTF::HashTable.2715" }
%"class.WTF::HashTable.2715" = type <{ %"struct.WTF::KeyValuePair.2718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2718" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2719", %"class.WTF::Vector.2724" }
%"class.WTF::HashMap.2719" = type { %"class.WTF::HashTable.2720" }
%"class.WTF::HashTable.2720" = type <{ %"struct.WTF::KeyValuePair.2723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2723" = type opaque
%"class.WTF::Vector.2724" = type { %"class.WTF::VectorBuffer.2725" }
%"class.WTF::VectorBuffer.2725" = type { %"class.WTF::VectorBufferBase.2726" }
%"class.WTF::VectorBufferBase.2726" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2732" = type { %"class.std::__1::__compressed_pair.2733" }
%"class.std::__1::__compressed_pair.2733" = type { %"struct.std::__1::__compressed_pair_elem.2734" }
%"struct.std::__1::__compressed_pair_elem.2734" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2738" = type { %"class.WTF::VectorBuffer.2739" }
%"class.WTF::VectorBuffer.2739" = type { %"class.WTF::VectorBufferBase.2740" }
%"class.WTF::VectorBufferBase.2740" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2743 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2744" = type { %"class.blink::MemberBase.2745" }
%"class.blink::MemberBase.2745" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2746" = type { %"class.blink::MemberBase.2747" }
%"class.blink::MemberBase.2747" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2748" = type { %"class.blink::MemberBase.2749" }
%"class.blink::MemberBase.2749" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2750" = type { %"class.WTF::HashSet.2753" }
%"class.WTF::HashSet.2753" = type { %"class.WTF::HashTable.2754" }
%"class.WTF::HashTable.2754" = type <{ %"class.blink::WeakMember.2756"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2756" = type opaque
%"class.blink::HeapHashSet.2757" = type { %"class.WTF::HashSet.2760" }
%"class.WTF::HashSet.2760" = type { %"class.WTF::HashTable.2761" }
%"class.WTF::HashTable.2761" = type <{ %"class.blink::WeakMember.2763"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2763" = type opaque
%"class.std::__1::unique_ptr.2764" = type { %"class.std::__1::__compressed_pair.2765" }
%"class.std::__1::__compressed_pair.2765" = type { %"struct.std::__1::__compressed_pair_elem.2766" }
%"struct.std::__1::__compressed_pair_elem.2766" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2767" }
%"class.base::time_internal::TimeBase.2767" = type { i64 }
%"class.std::__1::unique_ptr.2771" = type { %"class.std::__1::__compressed_pair.2772" }
%"class.std::__1::__compressed_pair.2772" = type { %"struct.std::__1::__compressed_pair_elem.2773" }
%"struct.std::__1::__compressed_pair_elem.2773" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2774", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2774" = type { %"class.absl::optional_internal::optional_data.2775" }
%"class.absl::optional_internal::optional_data.2775" = type { %"class.absl::optional_internal::optional_data_base.2776" }
%"class.absl::optional_internal::optional_data_base.2776" = type { %"class.absl::optional_internal::optional_data_dtor_base.2777" }
%"class.absl::optional_internal::optional_data_dtor_base.2777" = type { i8, %union.anon.2778 }
%union.anon.2778 = type { %"class.base::Time" }
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2182" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1427", %"class.blink::Member.2825", %"class.blink::Member.2827", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2829", %"class.blink::Member.2835" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1511" }
%"class.blink::WeakMember.1511" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2825" = type { %"class.blink::MemberBase.2826" }
%"class.blink::MemberBase.2826" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2827" = type { %"class.blink::MemberBase.2828" }
%"class.blink::MemberBase.2828" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2829" = type { %"class.std::__1::__compressed_pair.2830" }
%"class.std::__1::__compressed_pair.2830" = type { %"struct.std::__1::__compressed_pair_elem.2831" }
%"struct.std::__1::__compressed_pair_elem.2831" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2835" = type { %"class.blink::MemberBase.2836" }
%"class.blink::MemberBase.2836" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2188" = type { %"class.blink::MemberBase.2189" }
%"class.blink::MemberBase.2189" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2192", %"class.blink::HeapListHashSet.2203", %"class.blink::HeapListHashSet.2214", %"class.blink::HeapListHashSet.2225", %"class.blink::HeapListHashSet.2236", %"class.blink::HeapListHashSet.2247", %"class.blink::HeapListHashSet.2258", %"class.blink::HeapListHashSet.2269", %"class.blink::HeapListHashSet.2280", %"class.blink::HeapListHashSet.2291", %"class.blink::HeapListHashSet.2302", %"class.blink::HeapListHashSet.2313", %"class.blink::HeapListHashSet.2324", %"class.blink::HeapListHashSet.2335", %"class.blink::HeapListHashSet.2346", %"class.blink::HeapListHashSet.2357", %"class.blink::HeapListHashSet.2368", %"class.blink::HeapListHashSet.2379", %"class.blink::HeapListHashSet.2390", %"class.blink::HeapListHashSet.2401" }
%"class.blink::HeapListHashSet.2192" = type { %"class.WTF::ListHashSet.base.2202", [7 x i8] }
%"class.WTF::ListHashSet.base.2202" = type <{ %"class.WTF::HashTable.2197", %"class.blink::Member.2199", %"class.blink::Member.2199", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2197" = type <{ %"class.blink::Member.2199"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2199" = type { %"class.blink::MemberBase.2200" }
%"class.blink::MemberBase.2200" = type { %"class.blink::HeapListHashSetNode.2201"* }
%"class.blink::HeapListHashSetNode.2201" = type { %"class.blink::Member.2415", %"class.blink::Member.2199", %"class.blink::Member.2199" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.2203" = type { %"class.WTF::ListHashSet.base.2213", [7 x i8] }
%"class.WTF::ListHashSet.base.2213" = type <{ %"class.WTF::HashTable.2208", %"class.blink::Member.2210", %"class.blink::Member.2210", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2208" = type <{ %"class.blink::Member.2210"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::HeapListHashSetNode.2212"* }
%"class.blink::HeapListHashSetNode.2212" = type { %"class.blink::Member.2559", %"class.blink::Member.2210", %"class.blink::Member.2210" }
%"class.blink::Member.2559" = type { %"class.blink::MemberBase.2560" }
%"class.blink::MemberBase.2560" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2214" = type { %"class.WTF::ListHashSet.base.2224", [7 x i8] }
%"class.WTF::ListHashSet.base.2224" = type <{ %"class.WTF::HashTable.2219", %"class.blink::Member.2221", %"class.blink::Member.2221", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2219" = type <{ %"class.blink::Member.2221"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::HeapListHashSetNode.2223"* }
%"class.blink::HeapListHashSetNode.2223" = type { %"class.blink::Member.2555", %"class.blink::Member.2221", %"class.blink::Member.2221" }
%"class.blink::Member.2555" = type { %"class.blink::MemberBase.2556" }
%"class.blink::MemberBase.2556" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2225" = type { %"class.WTF::ListHashSet.base.2235", [7 x i8] }
%"class.WTF::ListHashSet.base.2235" = type <{ %"class.WTF::HashTable.2230", %"class.blink::Member.2232", %"class.blink::Member.2232", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2230" = type <{ %"class.blink::Member.2232"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2232" = type { %"class.blink::MemberBase.2233" }
%"class.blink::MemberBase.2233" = type { %"class.blink::HeapListHashSetNode.2234"* }
%"class.blink::HeapListHashSetNode.2234" = type { %"class.blink::Member.2551", %"class.blink::Member.2232", %"class.blink::Member.2232" }
%"class.blink::Member.2551" = type { %"class.blink::MemberBase.2552" }
%"class.blink::MemberBase.2552" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2236" = type { %"class.WTF::ListHashSet.base.2246", [7 x i8] }
%"class.WTF::ListHashSet.base.2246" = type <{ %"class.WTF::HashTable.2241", %"class.blink::Member.2243", %"class.blink::Member.2243", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2241" = type <{ %"class.blink::Member.2243"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2243" = type { %"class.blink::MemberBase.2244" }
%"class.blink::MemberBase.2244" = type { %"class.blink::HeapListHashSetNode.2245"* }
%"class.blink::HeapListHashSetNode.2245" = type { %"class.blink::Member.2547", %"class.blink::Member.2243", %"class.blink::Member.2243" }
%"class.blink::Member.2547" = type { %"class.blink::MemberBase.2548" }
%"class.blink::MemberBase.2548" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2247" = type { %"class.WTF::ListHashSet.base.2257", [7 x i8] }
%"class.WTF::ListHashSet.base.2257" = type <{ %"class.WTF::HashTable.2252", %"class.blink::Member.2254", %"class.blink::Member.2254", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2252" = type <{ %"class.blink::Member.2254"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2254" = type { %"class.blink::MemberBase.2255" }
%"class.blink::MemberBase.2255" = type { %"class.blink::HeapListHashSetNode.2256"* }
%"class.blink::HeapListHashSetNode.2256" = type { %"class.blink::Member.2543", %"class.blink::Member.2254", %"class.blink::Member.2254" }
%"class.blink::Member.2543" = type { %"class.blink::MemberBase.2544" }
%"class.blink::MemberBase.2544" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2258" = type { %"class.WTF::ListHashSet.base.2268", [7 x i8] }
%"class.WTF::ListHashSet.base.2268" = type <{ %"class.WTF::HashTable.2263", %"class.blink::Member.2265", %"class.blink::Member.2265", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2263" = type <{ %"class.blink::Member.2265"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2265" = type { %"class.blink::MemberBase.2266" }
%"class.blink::MemberBase.2266" = type { %"class.blink::HeapListHashSetNode.2267"* }
%"class.blink::HeapListHashSetNode.2267" = type { %"class.blink::Member.2539", %"class.blink::Member.2265", %"class.blink::Member.2265" }
%"class.blink::Member.2539" = type { %"class.blink::MemberBase.2540" }
%"class.blink::MemberBase.2540" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2269" = type { %"class.WTF::ListHashSet.base.2279", [7 x i8] }
%"class.WTF::ListHashSet.base.2279" = type <{ %"class.WTF::HashTable.2274", %"class.blink::Member.2276", %"class.blink::Member.2276", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2274" = type <{ %"class.blink::Member.2276"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2276" = type { %"class.blink::MemberBase.2277" }
%"class.blink::MemberBase.2277" = type { %"class.blink::HeapListHashSetNode.2278"* }
%"class.blink::HeapListHashSetNode.2278" = type { %"class.blink::Member.2535", %"class.blink::Member.2276", %"class.blink::Member.2276" }
%"class.blink::Member.2535" = type { %"class.blink::MemberBase.2536" }
%"class.blink::MemberBase.2536" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2280" = type { %"class.WTF::ListHashSet.base.2290", [7 x i8] }
%"class.WTF::ListHashSet.base.2290" = type <{ %"class.WTF::HashTable.2285", %"class.blink::Member.2287", %"class.blink::Member.2287", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2285" = type <{ %"class.blink::Member.2287"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2287" = type { %"class.blink::MemberBase.2288" }
%"class.blink::MemberBase.2288" = type { %"class.blink::HeapListHashSetNode.2289"* }
%"class.blink::HeapListHashSetNode.2289" = type { %"class.blink::Member.2531", %"class.blink::Member.2287", %"class.blink::Member.2287" }
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2291" = type { %"class.WTF::ListHashSet.base.2301", [7 x i8] }
%"class.WTF::ListHashSet.base.2301" = type <{ %"class.WTF::HashTable.2296", %"class.blink::Member.2298", %"class.blink::Member.2298", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2296" = type <{ %"class.blink::Member.2298"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2298" = type { %"class.blink::MemberBase.2299" }
%"class.blink::MemberBase.2299" = type { %"class.blink::HeapListHashSetNode.2300"* }
%"class.blink::HeapListHashSetNode.2300" = type { %"class.blink::Member.2527", %"class.blink::Member.2298", %"class.blink::Member.2298" }
%"class.blink::Member.2527" = type { %"class.blink::MemberBase.2528" }
%"class.blink::MemberBase.2528" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2302" = type { %"class.WTF::ListHashSet.base.2312", [7 x i8] }
%"class.WTF::ListHashSet.base.2312" = type <{ %"class.WTF::HashTable.2307", %"class.blink::Member.2309", %"class.blink::Member.2309", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2307" = type <{ %"class.blink::Member.2309"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2309" = type { %"class.blink::MemberBase.2310" }
%"class.blink::MemberBase.2310" = type { %"class.blink::HeapListHashSetNode.2311"* }
%"class.blink::HeapListHashSetNode.2311" = type { %"class.blink::Member.2419", %"class.blink::Member.2309", %"class.blink::Member.2309" }
%"class.blink::HeapListHashSet.2313" = type { %"class.WTF::ListHashSet.base.2323", [7 x i8] }
%"class.WTF::ListHashSet.base.2323" = type <{ %"class.WTF::HashTable.2318", %"class.blink::Member.2320", %"class.blink::Member.2320", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2318" = type <{ %"class.blink::Member.2320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::HeapListHashSetNode.2322"* }
%"class.blink::HeapListHashSetNode.2322" = type { %"class.blink::Member.2521", %"class.blink::Member.2320", %"class.blink::Member.2320" }
%"class.blink::Member.2521" = type { %"class.blink::MemberBase.2522" }
%"class.blink::MemberBase.2522" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2324" = type { %"class.WTF::ListHashSet.base.2334", [7 x i8] }
%"class.WTF::ListHashSet.base.2334" = type <{ %"class.WTF::HashTable.2329", %"class.blink::Member.2331", %"class.blink::Member.2331", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2329" = type <{ %"class.blink::Member.2331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2331" = type { %"class.blink::MemberBase.2332" }
%"class.blink::MemberBase.2332" = type { %"class.blink::HeapListHashSetNode.2333"* }
%"class.blink::HeapListHashSetNode.2333" = type { %"class.blink::Member.2517", %"class.blink::Member.2331", %"class.blink::Member.2331" }
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2335" = type { %"class.WTF::ListHashSet.base.2345", [7 x i8] }
%"class.WTF::ListHashSet.base.2345" = type <{ %"class.WTF::HashTable.2340", %"class.blink::Member.2342", %"class.blink::Member.2342", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2340" = type <{ %"class.blink::Member.2342"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::HeapListHashSetNode.2344"* }
%"class.blink::HeapListHashSetNode.2344" = type { %"class.blink::Member.2513", %"class.blink::Member.2342", %"class.blink::Member.2342" }
%"class.blink::Member.2513" = type { %"class.blink::MemberBase.2514" }
%"class.blink::MemberBase.2514" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2346" = type { %"class.WTF::ListHashSet.base.2356", [7 x i8] }
%"class.WTF::ListHashSet.base.2356" = type <{ %"class.WTF::HashTable.2351", %"class.blink::Member.2353", %"class.blink::Member.2353", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2351" = type <{ %"class.blink::Member.2353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2353" = type { %"class.blink::MemberBase.2354" }
%"class.blink::MemberBase.2354" = type { %"class.blink::HeapListHashSetNode.2355"* }
%"class.blink::HeapListHashSetNode.2355" = type { %"class.blink::Member.2509", %"class.blink::Member.2353", %"class.blink::Member.2353" }
%"class.blink::Member.2509" = type { %"class.blink::MemberBase.2510" }
%"class.blink::MemberBase.2510" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2357" = type { %"class.WTF::ListHashSet.base.2367", [7 x i8] }
%"class.WTF::ListHashSet.base.2367" = type <{ %"class.WTF::HashTable.2362", %"class.blink::Member.2364", %"class.blink::Member.2364", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2362" = type <{ %"class.blink::Member.2364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::HeapListHashSetNode.2366"* }
%"class.blink::HeapListHashSetNode.2366" = type { %"class.blink::Member.2505", %"class.blink::Member.2364", %"class.blink::Member.2364" }
%"class.blink::Member.2505" = type { %"class.blink::MemberBase.2506" }
%"class.blink::MemberBase.2506" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2368" = type { %"class.WTF::ListHashSet.base.2378", [7 x i8] }
%"class.WTF::ListHashSet.base.2378" = type <{ %"class.WTF::HashTable.2373", %"class.blink::Member.2375", %"class.blink::Member.2375", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2373" = type <{ %"class.blink::Member.2375"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2375" = type { %"class.blink::MemberBase.2376" }
%"class.blink::MemberBase.2376" = type { %"class.blink::HeapListHashSetNode.2377"* }
%"class.blink::HeapListHashSetNode.2377" = type { %"class.blink::Member.2501", %"class.blink::Member.2375", %"class.blink::Member.2375" }
%"class.blink::Member.2501" = type { %"class.blink::MemberBase.2502" }
%"class.blink::MemberBase.2502" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2379" = type { %"class.WTF::ListHashSet.base.2389", [7 x i8] }
%"class.WTF::ListHashSet.base.2389" = type <{ %"class.WTF::HashTable.2384", %"class.blink::Member.2386", %"class.blink::Member.2386", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2384" = type <{ %"class.blink::Member.2386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2386" = type { %"class.blink::MemberBase.2387" }
%"class.blink::MemberBase.2387" = type { %"class.blink::HeapListHashSetNode.2388"* }
%"class.blink::HeapListHashSetNode.2388" = type { %"class.blink::Member.2497", %"class.blink::Member.2386", %"class.blink::Member.2386" }
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2390" = type { %"class.WTF::ListHashSet.base.2400", [7 x i8] }
%"class.WTF::ListHashSet.base.2400" = type <{ %"class.WTF::HashTable.2395", %"class.blink::Member.2397", %"class.blink::Member.2397", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2395" = type <{ %"class.blink::Member.2397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::HeapListHashSetNode.2399"* }
%"class.blink::HeapListHashSetNode.2399" = type { %"class.blink::Member.2421", %"class.blink::Member.2397", %"class.blink::Member.2397" }
%"class.blink::HeapListHashSet.2401" = type { %"class.WTF::ListHashSet.base.2411", [7 x i8] }
%"class.WTF::ListHashSet.base.2411" = type <{ %"class.WTF::HashTable.2406", %"class.blink::Member.2408", %"class.blink::Member.2408", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2406" = type <{ %"class.blink::Member.2408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::HeapListHashSetNode.2410"* }
%"class.blink::HeapListHashSetNode.2410" = type { %"class.blink::Member.2413", %"class.blink::Member.2408", %"class.blink::Member.2408" }
%class.scoped_refptr.2412 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2413" = type { %"class.blink::MemberBase.2414" }
%"class.blink::MemberBase.2414" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2415" = type { %"class.blink::MemberBase.2416" }
%"class.blink::MemberBase.2416" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1427", %"class.WTF::Vector.1449", i32, [4 x i8], %"class.blink::HeapHashMap.2957", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.2957" = type { %"class.WTF::HashMap.2960" }
%"class.WTF::HashMap.2960" = type { %"class.WTF::HashTable.2961" }
%"class.WTF::HashTable.2961" = type <{ %"struct.WTF::KeyValuePair.2963"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2963" = type opaque
%"class.blink::Member.2417" = type { %"class.blink::MemberBase.2418" }
%"class.blink::MemberBase.2418" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2419" = type { %"class.blink::MemberBase.2420" }
%"class.blink::MemberBase.2420" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2421" = type { %"class.blink::MemberBase.2422" }
%"class.blink::MemberBase.2422" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2425" = type { %"class.blink::MemberBase.2426" }
%"class.blink::MemberBase.2426" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2429" = type { %"class.blink::Member.2430" }
%"class.blink::Member.2430" = type { %"class.blink::MemberBase.2431" }
%"class.blink::MemberBase.2431" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3242" }
%"class.mojo::Remote.3242" = type { %"class.mojo::internal::InterfacePtrState.3243" }
%"class.mojo::internal::InterfacePtrState.3243" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3244" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.947, %"class.std::__1::unique_ptr.1057", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.949, i32 }>
%class.scoped_refptr.947 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.949, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1023", %"class.absl::optional.1028", %"class.absl::optional.983", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1048", i8, [7 x i8], %class.scoped_refptr.949, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.948" }>
%"class.base::RefCountedThreadSafe.948" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.951", %"class.std::__1::unique_ptr.957", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.949, %"class.std::__1::unique_ptr.964", %"class.absl::optional.973", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.983", %"class.std::__1::unique_ptr.988", i8, i64, %class.scoped_refptr.1019, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1021", %"class.base::WeakPtrFactory.1022" }
%"class.std::__1::unique_ptr.964" = type { %"class.std::__1::__compressed_pair.965" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.949, i8, %"class.mojo::ScopedHandleBase.967", %class.scoped_refptr.968, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.969" }
%"class.mojo::ScopedHandleBase.967" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.968 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.969" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.973" = type { %"class.absl::optional_internal::optional_data.974" }
%"class.absl::optional_internal::optional_data.974" = type { %"class.absl::optional_internal::optional_data_base.975" }
%"class.absl::optional_internal::optional_data_base.975" = type { %"class.absl::optional_internal::optional_data_dtor_base.976" }
%"class.absl::optional_internal::optional_data_dtor_base.976" = type { i8, %union.anon.977 }
%union.anon.977 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.978", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.978" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.991", i8, i64, %class.scoped_refptr.992, %class.scoped_refptr.1014 }
%"class.base::RepeatingCallback.991" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.992 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.993", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.1003", i8, [7 x i8] }>
%"class.base::RefCounted.993" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.994 }
%class.scoped_refptr.994 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.995", %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1003" = type { %"class.std::__1::__tree.1004" }
%"class.std::__1::__tree.1004" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.1014 = type { %"class.base::RefCountedData.1015"* }
%"class.base::RefCountedData.1015" = type opaque
%class.scoped_refptr.1019 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1020 }
%class.scoped_refptr.1020 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2797", [4 x i8], %"class.base::RepeatingCallback.1060", %class.scoped_refptr.949, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2797" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.1021" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1022" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1023" = type { %"class.absl::optional_internal::optional_data.1024" }
%"class.absl::optional_internal::optional_data.1024" = type { %"class.absl::optional_internal::optional_data_base.1025" }
%"class.absl::optional_internal::optional_data_base.1025" = type { %"class.absl::optional_internal::optional_data_dtor_base.1026" }
%"class.absl::optional_internal::optional_data_dtor_base.1026" = type { i8, %union.anon.1027 }
%union.anon.1027 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1028" = type { %"class.absl::optional_internal::optional_data.1029" }
%"class.absl::optional_internal::optional_data.1029" = type { %"class.absl::optional_internal::optional_data_base.1030" }
%"class.absl::optional_internal::optional_data_base.1030" = type { %"class.absl::optional_internal::optional_data_dtor_base.1031" }
%"class.absl::optional_internal::optional_data_dtor_base.1031" = type { i8, [7 x i8], %union.anon.1032 }
%union.anon.1032 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.983" = type { %"class.absl::optional_internal::optional_data.984" }
%"class.absl::optional_internal::optional_data.984" = type { %"class.absl::optional_internal::optional_data_base.985" }
%"class.absl::optional_internal::optional_data_base.985" = type { %"class.absl::optional_internal::optional_data_dtor_base.986" }
%"class.absl::optional_internal::optional_data_dtor_base.986" = type { i8, %union.anon.987 }
%union.anon.987 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1033 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1033 = type { %"class.std::__1::map.1036" }
%"class.std::__1::map.1036" = type { %"class.std::__1::__tree.1037" }
%"class.std::__1::__tree.1037" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1047"*, i64 }
%"class.std::__1::unique_ptr.1047" = type opaque
%"class.std::__1::map.1048" = type { %"class.std::__1::__tree.1049" }
%"class.std::__1::__tree.1049" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1050", %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.1060", %"class.base::OnceCallback.1061", %"class.absl::optional.1062", %"class.absl::optional.1067", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1074", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1082", %"class.std::__1::map.1093", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1102", i8, %class.scoped_refptr.949, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1103" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.1061" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1067" = type { %"class.absl::optional_internal::optional_data.1068" }
%"class.absl::optional_internal::optional_data.1068" = type { %"class.absl::optional_internal::optional_data_base.1069" }
%"class.absl::optional_internal::optional_data_base.1069" = type { %"class.absl::optional_internal::optional_data_dtor_base.1070" }
%"class.absl::optional_internal::optional_data_dtor_base.1070" = type { i8, %union.anon.1071 }
%union.anon.1071 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.949, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1072" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.1072" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1073 }
%class.scoped_refptr.1073 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1077", %class.scoped_refptr.1078 }
%"class.base::RepeatingCallback.1077" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1078 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.948", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.1082" = type { %"class.std::__1::__tree.1083" }
%"class.std::__1::__tree.1083" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1084", %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1093" = type { %"class.std::__1::__tree.1094" }
%"class.std::__1::__tree.1094" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1095", %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1102" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1103" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.949 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.3244" = type { %"class.std::__1::__compressed_pair.3245" }
%"class.std::__1::__compressed_pair.3245" = type { %"struct.std::__1::__compressed_pair_elem.3246" }
%"struct.std::__1::__compressed_pair_elem.3246" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2432" = type { %"class.std::__1::__compressed_pair.2433" }
%"class.std::__1::__compressed_pair.2433" = type { %"struct.std::__1::__compressed_pair_elem.2434" }
%"struct.std::__1::__compressed_pair_elem.2434" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2438" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2439" = type { %"class.std::__1::__compressed_pair.2440" }
%"class.std::__1::__compressed_pair.2440" = type { %"struct.std::__1::__compressed_pair_elem.2441" }
%"struct.std::__1::__compressed_pair_elem.2441" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2445" = type { %"class.std::__1::__compressed_pair.2446" }
%"class.std::__1::__compressed_pair.2446" = type { %"struct.std::__1::__compressed_pair_elem.2447" }
%"struct.std::__1::__compressed_pair_elem.2447" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2451" }
%"class.blink::Member.2451" = type { %"class.blink::MemberBase.2452" }
%"class.blink::MemberBase.2452" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3252" }
%"class.mojo::AssociatedRemote.3252" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3253" }
%"class.mojo::internal::AssociatedInterfacePtrState.3253" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3254" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1057", i32 }>
%"class.std::__1::unique_ptr.3254" = type { %"class.std::__1::__compressed_pair.3255" }
%"class.std::__1::__compressed_pair.3255" = type { %"struct.std::__1::__compressed_pair_elem.3256" }
%"struct.std::__1::__compressed_pair_elem.3256" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2453" = type { %"class.blink::Member.2454" }
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3262" }
%"class.mojo::AssociatedRemote.3262" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3263" }
%"class.mojo::internal::AssociatedInterfacePtrState.3263" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3264" }
%"class.std::__1::unique_ptr.3264" = type { %"class.std::__1::__compressed_pair.3265" }
%"class.std::__1::__compressed_pair.3265" = type { %"struct.std::__1::__compressed_pair_elem.3266" }
%"struct.std::__1::__compressed_pair_elem.3266" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2456" }
%"class.blink::Member.2456" = type { %"class.blink::MemberBase.2457" }
%"class.blink::MemberBase.2457" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3272", %"class.blink::Member.1427", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3272" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3273" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1057" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3273" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2458" = type { %"class.blink::Member.2459" }
%"class.blink::Member.2459" = type { %"class.blink::MemberBase.2460" }
%"class.blink::MemberBase.2460" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3276", %"class.blink::Member.1427", %"class.mojo::AssociatedReceiver.3277" }
%"class.blink::ThreadState::PrefinalizerRegistration.3276" = type { i8 }
%"class.mojo::AssociatedReceiver.3277" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3278" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3278" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2461" }
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3281", %"class.blink::Member.1427", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3281" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.947, %"class.std::__1::unique_ptr.1057", %"class.base::WeakPtrFactory.3282" }
%"class.base::WeakPtrFactory.3282" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2463" = type { %"class.blink::Member.2464" }
%"class.blink::Member.2464" = type { %"class.blink::MemberBase.2465" }
%"class.blink::MemberBase.2465" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3285", %"class.blink::Member.1427", %"class.mojo::AssociatedReceiver.3286" }
%"class.blink::ThreadState::PrefinalizerRegistration.3285" = type { i8 }
%"class.mojo::AssociatedReceiver.3286" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3287" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3287" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2466" = type { %"class.blink::MemberBase.2467" }
%"class.blink::MemberBase.2467" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2468" = type { %"class.blink::MemberBase.2469" }
%"class.blink::MemberBase.2469" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2470" = type { %"class.blink::MemberBase.2471" }
%"class.blink::MemberBase.2471" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2472" = type { %"class.blink::MemberBase.2473" }
%"class.blink::MemberBase.2473" = type { %"class.blink::HeapHashMap.2474"* }
%"class.blink::HeapHashMap.2474" = type opaque
%"class.mojo::StructPtr.2475" = type { %"class.std::__1::unique_ptr.2476" }
%"class.std::__1::unique_ptr.2476" = type { %"class.std::__1::__compressed_pair.2477" }
%"class.std::__1::__compressed_pair.2477" = type { %"struct.std::__1::__compressed_pair_elem.2478" }
%"struct.std::__1::__compressed_pair_elem.2478" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2479", %"class.mojo::InlinedStructPtr.2480" }
%"class.mojo::InlinedStructPtr.2479" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2480" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2484" = type { %"class.blink::MemberBase.2485" }
%"class.blink::MemberBase.2485" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2486" = type { %"class.absl::optional_internal::optional_data.2487" }
%"class.absl::optional_internal::optional_data.2487" = type { %"class.absl::optional_internal::optional_data_base.2488" }
%"class.absl::optional_internal::optional_data_base.2488" = type { %"class.absl::optional_internal::optional_data_dtor_base.2489" }
%"class.absl::optional_internal::optional_data_dtor_base.2489" = type { i8, %union.anon.2490 }
%union.anon.2490 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.936", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2113" }
%"class.base::internal::flat_tree.2113" = type { %"class.std::__1::vector.2114" }
%"class.std::__1::vector.2114" = type { %"class.std::__1::__vector_base.2115" }
%"class.std::__1::__vector_base.2115" = type { %"struct.std::__1::pair.2116"*, %"struct.std::__1::pair.2116"*, %"class.std::__1::__compressed_pair.2117" }
%"struct.std::__1::pair.2116" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.2118" }
%"struct.std::__1::__compressed_pair_elem.2118" = type { %"struct.std::__1::pair.2116"* }
%"class.blink::Member.2122" = type { %"class.blink::MemberBase.2123" }
%"class.blink::MemberBase.2123" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.2124" = type { %"class.absl::optional_internal::optional_data.2125" }
%"class.absl::optional_internal::optional_data.2125" = type { %"class.absl::optional_internal::optional_data_base.2126" }
%"class.absl::optional_internal::optional_data_base.2126" = type { %"class.absl::optional_internal::optional_data_dtor_base.2127" }
%"class.absl::optional_internal::optional_data_dtor_base.2127" = type { i8, %union.anon.2128 }
%union.anon.2128 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.2129" = type { %"class.absl::optional_internal::optional_data.2130" }
%"class.absl::optional_internal::optional_data.2130" = type { %"class.absl::optional_internal::optional_data_base.2131" }
%"class.absl::optional_internal::optional_data_base.2131" = type { %"class.absl::optional_internal::optional_data_dtor_base.2132" }
%"class.absl::optional_internal::optional_data_dtor_base.2132" = type { i8, %union.anon.2133 }
%union.anon.2133 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2134" }
%"class.blink::HeapHashSet.2134" = type { %"class.WTF::HashSet.2137" }
%"class.WTF::HashSet.2137" = type { %"class.WTF::HashTable.2138" }
%"class.WTF::HashTable.2138" = type <{ %"class.blink::WeakMember.2140"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2140" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.944" = type { %"class.WTF::VectorBuffer.945" }
%"class.WTF::VectorBuffer.945" = type { %"class.WTF::VectorBufferBase.946" }
%"class.WTF::VectorBufferBase.946" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1107" }
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1115", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1186", i32, i8, [3 x i8], %"class.blink::HeapVector.1188", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1196", %"class.blink::Member.1198", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1207", %"class.blink::Member.1261", %"class.blink::Member.1263", i8 }>
%"class.blink::Supplementable.1115" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1116" }
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1130" }
%"class.blink::Supplementable.1130" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1131" }
%"class.blink::HeapHashMap.1131" = type { %"class.WTF::HashMap.1134" }
%"class.WTF::HashMap.1134" = type { %"class.WTF::HashTable.1135" }
%"class.WTF::HashTable.1135" = type <{ %"struct.WTF::KeyValuePair.1137"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1137" = type { i8*, %"class.blink::Member.3217" }
%"class.blink::Member.3217" = type { %"class.blink::MemberBase.3218" }
%"class.blink::MemberBase.3218" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3219" }
%"class.blink::Member.3219" = type { %"class.blink::MemberBase.3220" }
%"class.blink::MemberBase.3220" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1138, %"class.std::__1::unique_ptr.1147", %"class.std::__1::unique_ptr.1147", %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174", %"class.blink::Member.1180", i32, [4 x i8], %"class.WTF::HashSet.1182", i32, i32 }
%class.scoped_refptr.1138 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1139", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1141", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1146 }
%"class.WTF::RefCounted.1139" = type { %"class.base::RefCounted.1140" }
%"class.base::RefCounted.1140" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1141" = type { %"class.absl::optional_internal::optional_data.1142" }
%"class.absl::optional_internal::optional_data.1142" = type { %"class.absl::optional_internal::optional_data_base.1143" }
%"class.absl::optional_internal::optional_data_base.1143" = type { %"class.absl::optional_internal::optional_data_dtor_base.1144" }
%"class.absl::optional_internal::optional_data_dtor_base.1144" = type { i8, %union.anon.1145 }
%union.anon.1145 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.1146 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1150", %"class.std::__1::map.1161", %"class.std::__1::map.1170"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1141" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.1150" = type { %"class.std::__1::__tree.1151" }
%"class.std::__1::__tree.1151" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1152", %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1161" = type { %"class.std::__1::__tree.1162" }
%"class.std::__1::__tree.1162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1163", %"class.std::__1::__compressed_pair.1167" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1170" = type opaque
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1188" = type { %"class.WTF::Vector.1191" }
%"class.WTF::Vector.1191" = type { %"class.WTF::VectorBuffer.1192" }
%"class.WTF::VectorBuffer.1192" = type { %"class.WTF::VectorBufferBase.1193" }
%"class.WTF::VectorBufferBase.1193" = type { %"class.blink::Member.1194"*, i32, i32 }
%"class.blink::Member.1194" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1200", i32, i32 }
%"class.blink::HeapHashMap.1200" = type { %"class.WTF::HashMap.1203" }
%"class.WTF::HashMap.1203" = type { %"class.WTF::HashTable.1204" }
%"class.WTF::HashTable.1204" = type <{ %"struct.WTF::KeyValuePair.1206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1206" = type opaque
%"class.std::__1::unique_ptr.1207" = type { %"class.std::__1::__compressed_pair.1208" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1210" }
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1213" }
%"class.WTF::Vector.1213" = type { %"class.WTF::VectorBuffer.1214" }
%"class.WTF::VectorBuffer.1214" = type { %"class.WTF::VectorBufferBase.1215" }
%"class.WTF::VectorBufferBase.1215" = type { %"class.mojo::StructPtr.1216"*, i32, i32 }
%"class.mojo::StructPtr.1216" = type { %"class.std::__1::unique_ptr.1217" }
%"class.std::__1::unique_ptr.1217" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1220", %"class.WTF::HashMap.1227", %"class.WTF::HashMap.1232", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1237", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1220" = type { %"class.std::__1::unique_ptr.1221" }
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1231" = type opaque
%"class.WTF::HashMap.1232" = type { %"class.WTF::HashTable.1233" }
%"class.WTF::HashTable.1233" = type <{ %"struct.WTF::KeyValuePair.1236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1236" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1237" = type { %"class.std::__1::unique_ptr.1238" }
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1252" }
%"class.std::__1::unique_ptr.1252" = type { %"class.std::__1::__compressed_pair.1253" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1198", i8, [7 x i8], %"class.WTF::Vector.1213", %"class.blink::HeapVector.2966", i8, [7 x i8], %"class.WTF::HashSet.1182", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.2966" = type { %"class.WTF::Vector.2969" }
%"class.WTF::Vector.2969" = type { %"class.WTF::VectorBuffer.2970" }
%"class.WTF::VectorBuffer.2970" = type { %"class.WTF::VectorBufferBase.2971" }
%"class.WTF::VectorBufferBase.2971" = type { %"class.blink::Member.2972"*, i32, i32 }
%"class.blink::Member.2972" = type opaque
%"class.blink::Supplementable.1265" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1266" }
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1292" }
%"class.blink::MemberBase.1292" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1295 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1296", [4 x i8], %"class.std::__1::unique_ptr.1298", i64, %"class.WTF::Vector.1302", %"class.WTF::Vector.1307", %"class.WTF::Vector.1337", %"class.WTF::Vector.1355", %class.scoped_refptr.1138, %"class.WTF::HashMap.1361", %"class.WTF::Vector.1366", %"class.WTF::Vector.1302", %"class.WTF::Vector.1372", %"class.WTF::HashMap.1377", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1296" = type { %"class.base::RefCountedThreadSafe.1297" }
%"class.base::RefCountedThreadSafe.1297" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { i8* }
%"class.WTF::Vector.1307" = type { %"class.WTF::VectorBuffer.1308" }
%"class.WTF::VectorBuffer.1308" = type { %"class.WTF::VectorBufferBase.1309", [8 x i8] }
%"class.WTF::VectorBufferBase.1309" = type { %class.scoped_refptr.1310*, i32, i32 }
%class.scoped_refptr.1310 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.1337" = type { %"class.WTF::VectorBuffer.1338" }
%"class.WTF::VectorBuffer.1338" = type { %"class.WTF::VectorBufferBase.1339" }
%"class.WTF::VectorBufferBase.1339" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1341", %"class.std::__1::unique_ptr.1347" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1340 }
%class.scoped_refptr.1340 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1341" = type { %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1355" = type { %"class.WTF::VectorBuffer.1356" }
%"class.WTF::VectorBuffer.1356" = type { %"class.WTF::VectorBufferBase.1357" }
%"class.WTF::VectorBufferBase.1357" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1358", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1358" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"struct.WTF::KeyValuePair.1365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1365" = type opaque
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"class.mojo::ScopedHandleBase.1369"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1369" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1302" = type { %"class.WTF::VectorBuffer.1303" }
%"class.WTF::VectorBuffer.1303" = type { %"class.WTF::VectorBufferBase.1304", [16 x i8] }
%"class.WTF::VectorBufferBase.1304" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1372" = type { %"class.WTF::VectorBuffer.1373" }
%"class.WTF::VectorBuffer.1373" = type { %"class.WTF::VectorBufferBase.1374" }
%"class.WTF::VectorBufferBase.1374" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1377" = type { %"class.WTF::HashTable.1378" }
%"class.WTF::HashTable.1378" = type <{ %"struct.WTF::KeyValuePair.1381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1381" = type { i8**, %"class.std::__1::unique_ptr.3221" }
%"class.std::__1::unique_ptr.3221" = type { %"class.std::__1::__compressed_pair.3222" }
%"class.std::__1::__compressed_pair.3222" = type { %"struct.std::__1::__compressed_pair_elem.3223" }
%"struct.std::__1::__compressed_pair_elem.3223" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1382" = type { %"class.WTF::HashSet.1385" }
%"class.WTF::HashSet.1385" = type { %"class.WTF::HashTable.1386" }
%"class.WTF::HashTable.1386" = type <{ %"class.blink::WeakMember.1388"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1388" = type opaque
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1396", %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::Member.1400", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1391" }
%"class.absl::optional.1391" = type { %"class.absl::optional_internal::optional_data.1392" }
%"class.absl::optional_internal::optional_data.1392" = type { %"class.absl::optional_internal::optional_data_base.1393" }
%"class.absl::optional_internal::optional_data_base.1393" = type { %"class.absl::optional_internal::optional_data_dtor_base.1394" }
%"class.absl::optional_internal::optional_data_dtor_base.1394" = type { i8, %union.anon.1395 }
%union.anon.1395 = type { i64 }
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::Event"* }
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1402" = type { %"class.WTF::HashMap.1405" }
%"class.WTF::HashMap.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %"struct.WTF::KeyValuePair.1408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1408" = type opaque
%"class.std::__1::unique_ptr.1409" = type { %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1427", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1438", %"class.blink::Member.1440", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1429", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1431", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1431" = type { %"class.WTF::HashMap.1434" }
%"class.WTF::HashMap.1434" = type { %"class.WTF::HashTable.1435" }
%"class.WTF::HashTable.1435" = type <{ %"struct.WTF::KeyValuePair.1437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1437" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.913", %"class.blink::Member.2099", %"class.blink::Member.2101" }
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2101" = type { %"class.blink::MemberBase.2102" }
%"class.blink::MemberBase.2102" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1444" = type { %"class.blink::MemberBase.1445" }
%"class.blink::MemberBase.1445" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.913", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2095" }
%"class.blink::Member.2095" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.1447" }
%"class.blink::MemberBase.1447" = type { %"class.blink::HeapHashMap.1448"* }
%"class.blink::HeapHashMap.1448" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1454" = type { %"class.WTF::HashTable.1455" }
%"class.WTF::HashTable.1455" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1458" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { i64*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1115", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1186", i32, i8, [3 x i8], %"class.blink::HeapVector.1188", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1196", %"class.blink::Member.1198", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1207", %"class.blink::Member.1261", %"class.blink::Member.1263", i8, [7 x i8] }>
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1471" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.blink::KURL"* }
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1491 }
%class.scoped_refptr.1491 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1512" }
%"class.blink::HeapHashMap.1512" = type { %"class.WTF::HashMap.1515" }
%"class.WTF::HashMap.1515" = type { %"class.WTF::HashTable.1516" }
%"class.WTF::HashTable.1516" = type <{ %"struct.WTF::KeyValuePair.1518"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1518" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1521" = type { %"class.WTF::HashSet.1524" }
%"class.WTF::HashSet.1524" = type { %"class.WTF::HashTable.1525" }
%"class.WTF::HashTable.1525" = type <{ %"class.blink::WeakMember.1527"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1527" = type opaque
%"class.blink::HeapHashSet.1528" = type { %"class.WTF::HashSet.1531" }
%"class.WTF::HashSet.1531" = type { %"class.WTF::HashTable.1532" }
%"class.WTF::HashTable.1532" = type <{ %"class.blink::WeakMember.1534"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1534" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1541", %"class.blink::Member.1568", %"class.blink::HeapHashMap.1570", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1577", %"class.blink::HeapHashSet.1577", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1583", %"class.blink::Member.1595", %"class.blink::Member.1624", %"class.blink::Member.1626", %"class.blink::Member.1634", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1796", %"class.blink::Member.1802", %"class.blink::HeapHashMap.1804", %"class.blink::HeapHashMap.1811", %"class.std::__1::unique_ptr.1818", i32, %"class.blink::HeapVector.1824", %"class.blink::HeapVector.1824", %"class.blink::HeapVector.1553", %"class.blink::HeapHashSet.1832", %"class.blink::HeapHashMap.1839", %"class.blink::Member.1846", %"class.blink::HeapHashMap.1848", %class.scoped_refptr.1855, %class.scoped_refptr.259, %"class.blink::Member.1760", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1856", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1545", %"class.blink::HeapVector.1553", i8 }>
%"class.blink::HeapVector.1545" = type { %"class.WTF::Vector.1548" }
%"class.WTF::Vector.1548" = type { %"class.WTF::VectorBuffer.1549" }
%"class.WTF::VectorBuffer.1549" = type { %"class.WTF::VectorBufferBase.1550" }
%"class.WTF::VectorBufferBase.1550" = type { %"class.blink::Member.1551"*, i32, i32 }
%"class.blink::Member.1551" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1564", %"class.blink::Member.1566", %"class.blink::Member.1566", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1564" = type <{ %"class.blink::Member.1566"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1566", %"class.blink::Member.1566" }
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1570" = type { %"class.WTF::HashMap.1573" }
%"class.WTF::HashMap.1573" = type { %"class.WTF::HashTable.1574" }
%"class.WTF::HashTable.1574" = type <{ %"struct.WTF::KeyValuePair.1576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1576" = type opaque
%"class.blink::HeapHashSet.1577" = type { %"class.WTF::HashSet.1580" }
%"class.WTF::HashSet.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1585", %"class.blink::Member.1587" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::SVGResource"* }
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1591", %"class.blink::Member.1593" }
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.2084", %"class.blink::Member.1587", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.2084" = type { %"class.WTF::Vector.2087" }
%"class.WTF::Vector.2087" = type { %"class.WTF::VectorBuffer.2088" }
%"class.WTF::VectorBuffer.2088" = type { %"class.WTF::VectorBufferBase.2089" }
%"class.WTF::VectorBufferBase.2089" = type { %"class.blink::Member.1593"*, i32, i32 }
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1568", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1599" }
%"class.blink::HeapHashMap.1599" = type { %"class.WTF::HashMap.1602" }
%"class.WTF::HashMap.1602" = type { %"class.WTF::HashTable.1603" }
%"class.WTF::HashTable.1603" = type <{ %"struct.WTF::KeyValuePair.1605"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1605" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1606", %"class.std::__1::unique_ptr.1618" }
%"class.blink::HeapVector.1606" = type { %"class.WTF::Vector.1609" }
%"class.WTF::Vector.1609" = type { %"class.WTF::VectorBuffer.1610" }
%"class.WTF::VectorBuffer.1610" = type { %"class.WTF::VectorBufferBase.1611" }
%"class.WTF::VectorBufferBase.1611" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1612" }
%"class.WTF::Vector.1612" = type { %"class.WTF::VectorBuffer.1613" }
%"class.WTF::VectorBuffer.1613" = type { %"class.WTF::VectorBufferBase.1614", [16 x i8] }
%"class.WTF::VectorBufferBase.1614" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1624" = type { %"class.blink::MemberBase.1625" }
%"class.blink::MemberBase.1625" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1656", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1638", %"class.WTF::HashMap.1638", %"class.WTF::HashMap.1638", %"class.WTF::HashMap.1643", %class.scoped_refptr.1648, %class.scoped_refptr.1655, %class.scoped_refptr.1654, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1638" = type { %"class.WTF::HashTable.1639" }
%"class.WTF::HashTable.1639" = type <{ %"struct.WTF::KeyValuePair.1642"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1642" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3312 }
%class.scoped_refptr.3312 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1649", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1651", %"union.blink::InvalidationSet::Backing.1652", %"union.blink::InvalidationSet::Backing.1653", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1649" = type { %"class.base::RefCounted.1650" }
%"class.base::RefCounted.1650" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1651" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1652" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1653" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1643" = type { %"class.WTF::HashTable.1644" }
%"class.WTF::HashTable.1644" = type <{ %"struct.WTF::KeyValuePair.1647"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1647" = type opaque
%class.scoped_refptr.1648 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1654, %class.scoped_refptr.1654 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1649", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1651", %"union.blink::InvalidationSet::Backing.1652", %"union.blink::InvalidationSet::Backing.1653", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1655 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1654 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1660", %"class.blink::HeapHashMap.1660", %"class.blink::HeapHashMap.1660", %"class.blink::HeapHashMap.1660", %"class.blink::HeapVector.1667", %"class.blink::HeapVector.1667", %"class.blink::HeapVector.1667", %"class.blink::HeapVector.1667", %"class.blink::HeapVector.1667", %"class.blink::HeapVector.1667", %"class.blink::HeapVector.1667", %"class.blink::HeapVector.1667", %"class.blink::HeapVector.1667", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1703", %"class.blink::HeapVector.1711", %"class.blink::HeapVector.1719", %"class.blink::HeapVector.1736", %"class.blink::HeapVector.1744", %"class.blink::HeapVector.1752", %"class.blink::HeapVector.1765", %"class.WTF::Vector.1772", i32, %"class.blink::Member.1778" }
%"class.blink::HeapHashMap.1660" = type { %"class.WTF::HashMap.1663" }
%"class.WTF::HashMap.1663" = type { %"class.WTF::HashTable.1664" }
%"class.WTF::HashTable.1664" = type <{ %"struct.WTF::KeyValuePair.1666"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1666" = type { %"class.WTF::AtomicString", %"class.blink::Member.3322" }
%"class.blink::Member.3322" = type { %"class.blink::MemberBase.3323" }
%"class.blink::MemberBase.3323" = type { %"class.blink::HeapVector.1667"* }
%"class.blink::HeapVector.1667" = type { %"class.WTF::Vector.1670" }
%"class.WTF::Vector.1670" = type { %"class.WTF::VectorBuffer.1671" }
%"class.WTF::VectorBuffer.1671" = type { %"class.WTF::VectorBufferBase.1672" }
%"class.WTF::VectorBufferBase.1672" = type { %"class.blink::Member.1673"*, i32, i32 }
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1677", i64, [4 x i32] }
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1698" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1698" = type { %"class.blink::MemberBase.1699" }
%"class.blink::MemberBase.1699" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1703" = type { %"class.WTF::Vector.1706" }
%"class.WTF::Vector.1706" = type { %"class.WTF::VectorBuffer.1707" }
%"class.WTF::VectorBuffer.1707" = type { %"class.WTF::VectorBufferBase.1708" }
%"class.WTF::VectorBufferBase.1708" = type { %"class.blink::Member.1709"*, i32, i32 }
%"class.blink::Member.1709" = type { %"class.blink::MemberBase.3318" }
%"class.blink::MemberBase.3318" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1711" = type { %"class.WTF::Vector.1714" }
%"class.WTF::Vector.1714" = type { %"class.WTF::VectorBuffer.1715" }
%"class.WTF::VectorBuffer.1715" = type { %"class.WTF::VectorBufferBase.1716" }
%"class.WTF::VectorBufferBase.1716" = type { %"class.blink::Member.1717"*, i32, i32 }
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.3319" }
%"class.blink::MemberBase.3319" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1719" = type { %"class.WTF::Vector.1722" }
%"class.WTF::Vector.1722" = type { %"class.WTF::VectorBuffer.1723" }
%"class.WTF::VectorBuffer.1723" = type { %"class.WTF::VectorBufferBase.1724" }
%"class.WTF::VectorBufferBase.1724" = type { %"class.blink::Member.1725"*, i32, i32 }
%"class.blink::Member.1725" = type { %"class.blink::MemberBase.1726" }
%"class.blink::MemberBase.1726" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1727", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1727" = type { %"class.WTF::Vector.1730" }
%"class.WTF::Vector.1730" = type { %"class.WTF::VectorBuffer.1731" }
%"class.WTF::VectorBuffer.1731" = type { %"class.WTF::VectorBufferBase.1732" }
%"class.WTF::VectorBufferBase.1732" = type { %"class.blink::Member.1733"*, i32, i32 }
%"class.blink::Member.1733" = type opaque
%"class.blink::HeapVector.1736" = type { %"class.WTF::Vector.1739" }
%"class.WTF::Vector.1739" = type { %"class.WTF::VectorBuffer.1740" }
%"class.WTF::VectorBuffer.1740" = type { %"class.WTF::VectorBufferBase.1741" }
%"class.WTF::VectorBufferBase.1741" = type { %"class.blink::Member.1742"*, i32, i32 }
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.3320" }
%"class.blink::MemberBase.3320" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1744" = type { %"class.WTF::Vector.1747" }
%"class.WTF::Vector.1747" = type { %"class.WTF::VectorBuffer.1748" }
%"class.WTF::VectorBuffer.1748" = type { %"class.WTF::VectorBufferBase.1749" }
%"class.WTF::VectorBufferBase.1749" = type { %"class.blink::Member.1750"*, i32, i32 }
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.3321" }
%"class.blink::MemberBase.3321" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", i32, [4 x i8] }>
%"class.blink::HeapVector.1752" = type { %"class.WTF::Vector.1755" }
%"class.WTF::Vector.1755" = type { %"class.WTF::VectorBuffer.1756" }
%"class.WTF::VectorBuffer.1756" = type { %"class.WTF::VectorBufferBase.1757" }
%"class.WTF::VectorBufferBase.1757" = type { %"class.blink::Member.1758"*, i32, i32 }
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760", %"class.blink::Member.1760" }
%"class.blink::HeapVector.1765" = type { %"class.WTF::Vector.1768" }
%"class.WTF::Vector.1768" = type { %"class.WTF::VectorBuffer.1769" }
%"class.WTF::VectorBuffer.1769" = type { %"class.WTF::VectorBufferBase.1770" }
%"class.WTF::VectorBufferBase.1770" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1677", i32, i32 }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774" }
%"class.WTF::VectorBufferBase.1774" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1775, i8, [7 x i8] }>
%class.scoped_refptr.1775 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1778" = type { %"class.blink::MemberBase.1779" }
%"class.blink::MemberBase.1779" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1782", %"class.blink::HeapHashMap.1782", %"class.blink::HeapHashMap.1782", %"class.blink::HeapHashMap.1782" }
%"class.blink::HeapHashMap.1782" = type { %"class.WTF::HashMap.1785" }
%"class.WTF::HashMap.1785" = type { %"class.WTF::HashTable.1786" }
%"class.WTF::HashTable.1786" = type <{ %"struct.WTF::KeyValuePair.1788"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1788" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1789" }
%"class.blink::HeapHashMap.1789" = type { %"class.WTF::HashMap.1792" }
%"class.WTF::HashMap.1792" = type { %"class.WTF::HashTable.1793" }
%"class.WTF::HashTable.1793" = type <{ %"struct.WTF::KeyValuePair.1795"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1795" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3313", %"class.WTF::Vector.3313" }
%"class.WTF::Vector.3313" = type { %"class.WTF::VectorBuffer.3314" }
%"class.WTF::VectorBuffer.3314" = type { %"class.WTF::VectorBufferBase.3315" }
%"class.WTF::VectorBufferBase.3315" = type { %class.scoped_refptr.3312*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1796" = type { %"class.WTF::HashSet.1799" }
%"class.WTF::HashSet.1799" = type { %"class.WTF::HashTable.1800" }
%"class.WTF::HashTable.1800" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1802" = type { %"class.blink::MemberBase.1803" }
%"class.blink::MemberBase.1803" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1804" = type { %"class.WTF::HashMap.1807" }
%"class.WTF::HashMap.1807" = type { %"class.WTF::HashTable.1808" }
%"class.WTF::HashTable.1808" = type <{ %"struct.WTF::KeyValuePair.1810"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1810" = type opaque
%"class.blink::HeapHashMap.1811" = type { %"class.WTF::HashMap.1814" }
%"class.WTF::HashMap.1814" = type { %"class.WTF::HashTable.1815" }
%"class.WTF::HashTable.1815" = type <{ %"struct.WTF::KeyValuePair.1817"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1817" = type opaque
%"class.std::__1::unique_ptr.1818" = type { %"class.std::__1::__compressed_pair.1819" }
%"class.std::__1::__compressed_pair.1819" = type { %"struct.std::__1::__compressed_pair_elem.1820" }
%"struct.std::__1::__compressed_pair_elem.1820" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1824" = type { %"class.WTF::Vector.1827" }
%"class.WTF::Vector.1827" = type { %"class.WTF::VectorBuffer.1828" }
%"class.WTF::VectorBuffer.1828" = type { %"class.WTF::VectorBufferBase.1829" }
%"class.WTF::VectorBufferBase.1829" = type { %"struct.std::__1::pair.1830"*, i32, i32 }
%"struct.std::__1::pair.1830" = type opaque
%"class.blink::HeapVector.1553" = type { %"class.WTF::Vector.1556" }
%"class.WTF::Vector.1556" = type { %"class.WTF::VectorBuffer.1557" }
%"class.WTF::VectorBuffer.1557" = type { %"class.WTF::VectorBufferBase.1558" }
%"class.WTF::VectorBufferBase.1558" = type { %"struct.std::__1::pair.1559"*, i32, i32 }
%"struct.std::__1::pair.1559" = type opaque
%"class.blink::HeapHashSet.1832" = type { %"class.WTF::HashSet.1835" }
%"class.WTF::HashSet.1835" = type { %"class.WTF::HashTable.1836" }
%"class.WTF::HashTable.1836" = type <{ %"class.blink::WeakMember.1838"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1838" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1839" = type { %"class.WTF::HashMap.1842" }
%"class.WTF::HashMap.1842" = type { %"class.WTF::HashTable.1843" }
%"class.WTF::HashTable.1843" = type <{ %"struct.WTF::KeyValuePair.1845"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1845" = type { %"class.WTF::AtomicString", %"class.blink::Member.1725" }
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1848" = type { %"class.WTF::HashMap.1851" }
%"class.WTF::HashMap.1851" = type { %"class.WTF::HashTable.1852" }
%"class.WTF::HashTable.1852" = type <{ %"struct.WTF::KeyValuePair.1854"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1854" = type opaque
%class.scoped_refptr.1855 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1856" = type { %"class.WTF::HashSet.1859" }
%"class.WTF::HashSet.1859" = type { %"class.WTF::HashTable.1860" }
%"class.WTF::HashTable.1860" = type <{ %"class.blink::Member.1862"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1862" = type opaque
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1869" = type { %"class.WTF::HashMap.1872" }
%"class.WTF::HashMap.1872" = type { %"class.WTF::HashTable.1873" }
%"class.WTF::HashTable.1873" = type <{ %"struct.WTF::KeyValuePair.1875"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1875" = type opaque
%"class.WTF::Vector.1876" = type { %"class.WTF::VectorBuffer.1877" }
%"class.WTF::VectorBuffer.1877" = type { %"class.WTF::VectorBufferBase.1878" }
%"class.WTF::VectorBufferBase.1878" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1883" = type { %"class.blink::MemberBase.1884" }
%"class.blink::MemberBase.1884" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1885" = type { %"class.blink::MemberBase.1886" }
%"class.blink::MemberBase.1886" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1887" = type { %"class.WTF::Vector.1890" }
%"class.WTF::Vector.1890" = type { %"class.WTF::VectorBuffer.1891" }
%"class.WTF::VectorBuffer.1891" = type { %"class.WTF::VectorBufferBase.1892" }
%"class.WTF::VectorBufferBase.1892" = type { %"class.blink::Member.1893"*, i32, i32 }
%"class.blink::Member.1893" = type opaque
%"class.std::__1::unique_ptr.1895" = type { %"class.std::__1::__compressed_pair.1896" }
%"class.std::__1::__compressed_pair.1896" = type { %"struct.std::__1::__compressed_pair_elem.1897" }
%"struct.std::__1::__compressed_pair_elem.1897" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1901" = type { %"class.WTF::HashSet.1904" }
%"class.WTF::HashSet.1904" = type { %"class.WTF::HashTable.1905" }
%"class.WTF::HashTable.1905" = type <{ %"class.blink::WeakMember.1907"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1907" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1908", i32, [4 x i8] }>
%"class.WTF::Vector.1908" = type { %"class.WTF::VectorBuffer.1909" }
%"class.WTF::VectorBuffer.1909" = type { %"class.WTF::VectorBufferBase.1910" }
%"class.WTF::VectorBufferBase.1910" = type { %"struct.std::__1::pair.1911"*, i32, i32 }
%"struct.std::__1::pair.1911" = type opaque
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1916" = type { %"class.WTF::VectorBuffer.1917" }
%"class.WTF::VectorBuffer.1917" = type { %"class.WTF::VectorBufferBase.1918" }
%"class.WTF::VectorBufferBase.1918" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1921" = type { %"class.std::__1::__compressed_pair.1922" }
%"class.std::__1::__compressed_pair.1922" = type { %"struct.std::__1::__compressed_pair_elem.1923" }
%"struct.std::__1::__compressed_pair_elem.1923" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1927" = type { %"class.WTF::Vector.1930" }
%"class.WTF::Vector.1930" = type { %"class.WTF::VectorBuffer.1931" }
%"class.WTF::VectorBuffer.1931" = type { %"class.WTF::VectorBufferBase.1932" }
%"class.WTF::VectorBufferBase.1932" = type { %"class.blink::Member.1933"*, i32, i32 }
%"class.blink::Member.1933" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1971" = type { %"class.WTF::HashTable.1972" }
%"class.WTF::HashTable.1972" = type <{ %"struct.WTF::KeyValuePair.1975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1975" = type opaque
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1980" = type { %"class.blink::MemberBase.1981" }
%"class.blink::MemberBase.1981" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1511", { i64, i64 } }
%"class.blink::HeapHashSet.1984" = type { %"class.WTF::HashSet.1987" }
%"class.WTF::HashSet.1987" = type { %"class.WTF::HashTable.1988" }
%"class.WTF::HashTable.1988" = type <{ %"class.blink::Member.1990"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1990" = type opaque
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2001" = type { %"class.std::__1::__compressed_pair.2002" }
%"class.std::__1::__compressed_pair.2002" = type { %"struct.std::__1::__compressed_pair_elem.2003" }
%"struct.std::__1::__compressed_pair_elem.2003" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2007" = type { %"class.std::__1::__compressed_pair.2008" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.2010", %"class.WTF::HashMap.2010", %"class.WTF::HashMap.2010", %"class.WTF::HashMap.2010", %"class.WTF::HashMap.2010", %"class.WTF::HashMap.2010", %"class.WTF::HashMap.2010", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.2010" = type { %"class.WTF::HashTable.2011" }
%"class.WTF::HashTable.2011" = type <{ %"struct.WTF::KeyValuePair.2014"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2014" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.2018" = type { %"class.blink::MemberBase.2019" }
%"class.blink::MemberBase.2019" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2020" = type { %"class.blink::MemberBase.2021" }
%"class.blink::MemberBase.2021" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2022" = type { %"class.blink::MemberBase.2023" }
%"class.blink::MemberBase.2023" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2024" = type { %"class.blink::MemberBase.2025" }
%"class.blink::MemberBase.2025" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.2028", %"class.blink::Member.2028", i32, i8, [3 x i8] }>
%"class.blink::Member.2028" = type { %"class.blink::MemberBase.2029" }
%"class.blink::MemberBase.2029" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.WTF::Vector.1449" = type { %"class.WTF::VectorBuffer.1450" }
%"class.WTF::VectorBuffer.1450" = type { %"class.WTF::VectorBufferBase.1451" }
%"class.WTF::VectorBufferBase.1451" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.2030" = type { %"class.WTF::HashMap.2033" }
%"class.WTF::HashMap.2033" = type { %"class.WTF::HashTable.2034" }
%"class.WTF::HashTable.2034" = type <{ %"struct.WTF::KeyValuePair.2036"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2036" = type opaque
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2039" = type { %"class.std::__1::__compressed_pair.2040" }
%"class.std::__1::__compressed_pair.2040" = type { %"struct.std::__1::__compressed_pair_elem.2041" }
%"struct.std::__1::__compressed_pair_elem.2041" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2045" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2047" = type { %"class.blink::MemberBase.2048" }
%"class.blink::MemberBase.2048" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2049" = type { %"class.WTF::HashMap.2052" }
%"class.WTF::HashMap.2052" = type { %"class.WTF::HashTable.2053" }
%"class.WTF::HashTable.2053" = type <{ %"struct.WTF::KeyValuePair.2055"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2055" = type opaque
%"class.blink::HeapObserverSet.2056" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2057" }
%"class.blink::HeapHashSet.2057" = type { %"class.WTF::HashSet.2060" }
%"class.WTF::HashSet.2060" = type { %"class.WTF::HashTable.2061" }
%"class.WTF::HashTable.2061" = type <{ %"class.blink::WeakMember.2063"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2063" = type opaque
%"class.blink::Member.2064" = type { %"class.blink::MemberBase.2065" }
%"class.blink::MemberBase.2065" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2066" = type { %"class.blink::MemberBase.2067" }
%"class.blink::MemberBase.2067" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.2073", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2080", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2073" = type { %"class.WTF::HashSet.2076" }
%"class.WTF::HashSet.2076" = type { %"class.WTF::HashTable.2077" }
%"class.WTF::HashTable.2077" = type <{ %"class.blink::Member.2079"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2079" = type opaque
%"class.blink::HeapTaskRunnerTimer.2080" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2081", { i64, i64 } }
%"class.blink::WeakMember.2081" = type { %"class.blink::MemberBase.2067" }
%"class.blink::WeakMember.2068" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.2069" = type { %"class.blink::MemberBase.2070" }
%"class.blink::MemberBase.2070" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::ImageCandidate" = type <{ %"class.WTF::String", %"class.WTF::StringView", float, i32, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3108" }
%"class.WTF::Vector.3108" = type { %"class.WTF::VectorBuffer.3109" }
%"class.WTF::VectorBuffer.3109" = type { %"class.WTF::VectorBufferBase.3110", [64 x i8] }
%"class.WTF::VectorBufferBase.3110" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.3045", %"class.blink::HeapVector.3050", i8, [7 x i8] }>
%"class.blink::Member.3045" = type { %"class.blink::MemberBase.3046" }
%"class.blink::MemberBase.3046" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.3048" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3047" }
%"class.blink::WeakMember.3047" = type { %"class.blink::MemberBase.1181" }
%"class.blink::Member.3048" = type { %"class.blink::MemberBase.3049" }
%"class.blink::MemberBase.3049" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.3050" = type { %"class.WTF::Vector.3053" }
%"class.WTF::Vector.3053" = type { %"class.WTF::VectorBuffer.3054" }
%"class.WTF::VectorBuffer.3054" = type { %"class.WTF::VectorBufferBase.3055", [96 x i8] }
%"class.WTF::VectorBufferBase.3055" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1760" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3325", %"class.blink::Member.3327", %"class.blink::Member.3329", %"class.blink::Member.3348", %"class.blink::Member.3350" }
%"class.blink::Member.3325" = type { %"class.blink::MemberBase.3326" }
%"class.blink::MemberBase.3326" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3327" = type { %"class.blink::MemberBase.3328" }
%"class.blink::MemberBase.3328" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3329" = type { %"class.blink::MemberBase.3330" }
%"class.blink::MemberBase.3330" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3333", %"class.blink::HeapHashSet.3342" }
%"class.blink::HeapVector.3333" = type { %"class.WTF::Vector.3336" }
%"class.WTF::Vector.3336" = type { %"class.WTF::VectorBuffer.3337" }
%"class.WTF::VectorBuffer.3337" = type { %"class.WTF::VectorBufferBase.3338" }
%"class.WTF::VectorBufferBase.3338" = type { %"class.blink::Member.3339"*, i32, i32 }
%"class.blink::Member.3339" = type { %"class.blink::MemberBase.3340" }
%"class.blink::MemberBase.3340" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3342" = type { %"class.WTF::HashSet.3345" }
%"class.WTF::HashSet.3345" = type { %"class.WTF::HashTable.3346" }
%"class.WTF::HashTable.3346" = type <{ %"class.blink::Member.3339"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3348" = type { %"class.blink::MemberBase.3349" }
%"class.blink::MemberBase.3349" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3350" = type { %"class.blink::MemberBase.3351" }
%"class.blink::MemberBase.3351" = type { %"class.blink::HeapHashSet.3352"* }
%"class.blink::HeapHashSet.3352" = type opaque
%"class.blink::LayoutImage" = type { %"class.blink::LayoutReplaced", %"class.blink::Persistent.3102", i8, i8, float }
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.3058, %"class.WTF::Vector.3059", %"class.std::__1::unique_ptr.3064", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.3085, %"class.blink::Persistent.3086" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.3058 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.3059" = type { %"class.WTF::VectorBuffer.3060" }
%"class.WTF::VectorBuffer.3060" = type { %"class.WTF::VectorBufferBase.3061", [8 x i8] }
%"class.WTF::VectorBufferBase.3061" = type { %class.scoped_refptr.3058*, i32, i32 }
%"class.std::__1::unique_ptr.3064" = type { %"class.std::__1::__compressed_pair.3065" }
%"class.std::__1::__compressed_pair.3065" = type { %"struct.std::__1::__compressed_pair_elem.3066" }
%"struct.std::__1::__compressed_pair_elem.3066" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.3067", %"class.absl::optional.3072", %"class.absl::optional.3077" }
%"class.absl::optional.3067" = type { %"class.absl::optional_internal::optional_data.3068" }
%"class.absl::optional_internal::optional_data.3068" = type { %"class.absl::optional_internal::optional_data_base.3069" }
%"class.absl::optional_internal::optional_data_base.3069" = type { %"class.absl::optional_internal::optional_data_dtor_base.3070" }
%"class.absl::optional_internal::optional_data_dtor_base.3070" = type { i8, %union.anon.3071 }
%union.anon.3071 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.3072" = type { %"class.absl::optional_internal::optional_data.3073" }
%"class.absl::optional_internal::optional_data.3073" = type { %"class.absl::optional_internal::optional_data_base.3074" }
%"class.absl::optional_internal::optional_data_base.3074" = type { %"class.absl::optional_internal::optional_data_dtor_base.3075" }
%"class.absl::optional_internal::optional_data_dtor_base.3075" = type { i8, [3 x i8], %union.anon.3076 }
%union.anon.3076 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.3077" = type { %"class.absl::optional_internal::optional_data.3078" }
%"class.absl::optional_internal::optional_data.3078" = type { %"class.absl::optional_internal::optional_data_base.3079" }
%"class.absl::optional_internal::optional_data_base.3079" = type { %"class.absl::optional_internal::optional_data_dtor_base.3080" }
%"class.absl::optional_internal::optional_data_dtor_base.3080" = type { i8, %union.anon.3081 }
%union.anon.3081 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.3085 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.2807", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2807" = type { %"class.std::__1::__compressed_pair.2808" }
%"class.std::__1::__compressed_pair.2808" = type { %"struct.std::__1::__compressed_pair_elem.2809" }
%"struct.std::__1::__compressed_pair_elem.2809" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.2810", %"class.absl::optional.2815" }
%"class.absl::optional.2810" = type { %"class.absl::optional_internal::optional_data.2811" }
%"class.absl::optional_internal::optional_data.2811" = type { %"class.absl::optional_internal::optional_data_base.2812" }
%"class.absl::optional_internal::optional_data_base.2812" = type { %"class.absl::optional_internal::optional_data_dtor_base.2813" }
%"class.absl::optional_internal::optional_data_dtor_base.2813" = type { i8, %union.anon.2814 }
%union.anon.2814 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.2815" = type { %"class.absl::optional_internal::optional_data.2816" }
%"class.absl::optional_internal::optional_data.2816" = type { %"class.absl::optional_internal::optional_data_base.2817" }
%"class.absl::optional_internal::optional_data_base.2817" = type { %"class.absl::optional_internal::optional_data_dtor_base.2818" }
%"class.absl::optional_internal::optional_data_dtor_base.2818" = type { i8, %union.anon.2819 }
%union.anon.2819 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.3086" = type { %"class.blink::PersistentBase.3087" }
%"class.blink::PersistentBase.3087" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.3090", %"struct.blink::PhysicalRect", %"class.blink::Member.3100" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.3090" = type { %"class.std::__1::__compressed_pair.3091" }
%"class.std::__1::__compressed_pair.3091" = type { %"struct.std::__1::__compressed_pair_elem.3092" }
%"struct.std::__1::__compressed_pair_elem.3092" = type { %"class.WTF::HashSet.3093"* }
%"class.WTF::HashSet.3093" = type { %"class.WTF::HashTable.3094" }
%"class.WTF::HashTable.3094" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3100" = type { %"class.blink::MemberBase.3101" }
%"class.blink::MemberBase.3101" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::Persistent.3102" = type { %"class.blink::PersistentBase.3103" }
%"class.blink::PersistentBase.3103" = type { %"class.blink::LayoutImageResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::LayoutImageResource" = type { i32 (...)**, %"class.blink::LayoutObject"*, %"class.blink::Member.2979" }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1863", %"class.blink::Member.3106", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.3106" = type { %"class.blink::MemberBase.3107" }
%"class.blink::MemberBase.3107" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::ContentType" = type { %"class.WTF::String" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.3113", %"class.std::__1::unique_ptr.3123" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.3113" = type { %"class.blink::PersistentBase.3114" }
%"class.blink::PersistentBase.3114" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.3117", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.3117" = type { %"class.std::__1::__compressed_pair.3118" }
%"class.std::__1::__compressed_pair.3118" = type { %"struct.std::__1::__compressed_pair_elem.3119" }
%"struct.std::__1::__compressed_pair_elem.3119" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.3123" = type { %"class.std::__1::__compressed_pair.3124" }
%"class.std::__1::__compressed_pair.3124" = type { %"struct.std::__1::__compressed_pair_elem.3125" }
%"struct.std::__1::__compressed_pair_elem.3125" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.3126", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.3126" = type { %"class.WTF::HashTable.3129", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.3129" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.3132", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.3132" = type { %"class.std::__1::__compressed_pair.3133" }
%"class.std::__1::__compressed_pair.3133" = type { %"struct.std::__1::__compressed_pair_elem.3134" }
%"struct.std::__1::__compressed_pair_elem.3134" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.3135, %"class.std::__1::unique_ptr.3136", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.2807", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.3135 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.3154", i16, %class.scoped_refptr.3135 }
%"class.WTF::ThreadSafeRefCounted.3154" = type { %"class.base::RefCountedThreadSafe.3155" }
%"class.base::RefCountedThreadSafe.3155" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.3136" = type { %"class.std::__1::__compressed_pair.3137" }
%"class.std::__1::__compressed_pair.3137" = type { %"struct.std::__1::__compressed_pair_elem.3138" }
%"struct.std::__1::__compressed_pair_elem.3138" = type { %"class.WTF::Vector.3139"* }
%"class.WTF::Vector.3139" = type { %"class.WTF::VectorBuffer.3140" }
%"class.WTF::VectorBuffer.3140" = type { %"class.WTF::VectorBufferBase.3141" }
%"class.WTF::VectorBufferBase.3141" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.3150, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.3150 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::HTMLPictureElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.3168", %"class.blink::ScriptValue" }
%"class.blink::Member.3168" = type { %"class.blink::MemberBase.3169" }
%"class.blink::MemberBase.3169" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.3165", %class.scoped_refptr.1491 }
%"class.blink::TraceWrapperV8Reference.3165" = type { %"class.v8::TracedReference.3166" }
%"class.v8::TracedReference.3166" = type { %"class.v8::BasicTracedReference.3167" }
%"class.v8::BasicTracedReference.3167" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3158, %"class.blink::Member.3159", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3163" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.3158 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3159" = type { %"class.blink::MemberBase.3160" }
%"class.blink::MemberBase.3160" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3161" }
%"class.blink::Persistent.3161" = type { %"class.blink::PersistentBase.3162" }
%"class.blink::PersistentBase.3162" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.3163" = type { %"class.base::StrongAlias.3164" }
%"class.base::StrongAlias.3164" = type { %"class.base::UnguessableToken" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.3165" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::ImageLoader::Task" = type opaque
%"class.blink::SVGImage" = type { %"class.blink::Image", %"class.blink::Persistent.3170", %"class.blink::Persistent.3172", %"class.std::__1::unique_ptr.2651", %"class.std::__1::unique_ptr.3174", %"class.blink::LayoutSize", i8, i32, %"class.blink::Persistent.3180" }
%"class.blink::Persistent.3170" = type { %"class.blink::PersistentBase.3171" }
%"class.blink::PersistentBase.3171" = type { %"class.blink::SVGImageChromeClient"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::SVGImageChromeClient" = type opaque
%"class.blink::Persistent.3172" = type { %"class.blink::PersistentBase.3173" }
%"class.blink::PersistentBase.3173" = type { %"class.blink::Page"*, %"class.blink::PersistentNodePtr.269" }
%"class.std::__1::unique_ptr.3174" = type { %"class.std::__1::__compressed_pair.3175" }
%"class.std::__1::__compressed_pair.3175" = type { %"struct.std::__1::__compressed_pair_elem.3176" }
%"struct.std::__1::__compressed_pair_elem.3176" = type { %"class.blink::scheduler::WebAgentGroupScheduler"* }
%"class.blink::Persistent.3180" = type { %"class.blink::PersistentBase.3181" }
%"class.blink::PersistentBase.3181" = type { %"class.blink::SVGImage::SVGImageLocalFrameClient"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::SVGImage::SVGImageLocalFrameClient" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::SizesAttributeParser" = type <{ %class.scoped_refptr.393, %"class.blink::MediaValues"*, %"class.blink::ExecutionContext"*, float, i8, i8, [2 x i8] }>
%"class.absl::optional.3182" = type { %"class.absl::optional_internal::optional_data.3183" }
%"class.absl::optional_internal::optional_data.3183" = type { %"class.absl::optional_internal::optional_data_base.3184" }
%"class.absl::optional_internal::optional_data_base.3184" = type { %"class.absl::optional_internal::optional_data_dtor_base.3185" }
%"class.absl::optional_internal::optional_data_dtor_base.3185" = type { i8, %union.anon.3186 }
%union.anon.3186 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.3187", i8, %"class.absl::optional.3192", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.3187" = type { %"class.absl::optional_internal::optional_data.3188" }
%"class.absl::optional_internal::optional_data.3188" = type { %"class.absl::optional_internal::optional_data_base.3189" }
%"class.absl::optional_internal::optional_data_base.3189" = type { %"class.absl::optional_internal::optional_data_dtor_base.3190" }
%"class.absl::optional_internal::optional_data_dtor_base.3190" = type { i8, [7 x i8], %union.anon.3191 }
%union.anon.3191 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.3192" = type { %"class.absl::optional_internal::optional_data.3193" }
%"class.absl::optional_internal::optional_data.3193" = type { %"class.absl::optional_internal::optional_data_base.3194" }
%"class.absl::optional_internal::optional_data_base.3194" = type { %"class.absl::optional_internal::optional_data_dtor_base.3195" }
%"class.absl::optional_internal::optional_data_dtor_base.3195" = type { i8, %union.anon.3196 }
%union.anon.3196 = type { i32 }
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.blink::HTMLDimension" = type { i32, double }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.3203", i8, [7 x i8] }>
%"class.blink::Member.3203" = type { %"class.blink::MemberBase.3204" }
%"class.blink::MemberBase.3204" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::EventDispatchHandlingState" = type { i32 (...)** }
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.3207", %"class.WTF::String"* }
%"class.blink::HeapVector.3207" = type { %"class.WTF::Vector.3210" }
%"class.WTF::Vector.3210" = type { %"class.WTF::VectorBuffer.3211" }
%"class.WTF::VectorBuffer.3211" = type { %"class.WTF::VectorBufferBase.3212" }
%"class.WTF::VectorBufferBase.3212" = type { %"class.blink::Member.318"*, i32, i32 }
%"class.WTF::HashMap.3214" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::ImageBitmapOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink16HTMLImageElement14GetImageLoaderEv = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink16HTMLImageElement18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink16HTMLImageElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink16HTMLImageElement23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZNK5blink16HTMLImageElement17CanStartSelectionEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink16HTMLImageElement37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink16HTMLImageElement11IsAdRelatedEv = comdat any

$_ZNK5blink16HTMLImageElement16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink16HTMLImageElement23AreAuthorShadowsAllowedEv = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZN5blink16HTMLImageElement22ToFormAssociatedOrNullEv = comdat any

$_ZNK5blink17CanvasImageSource15IsCSSImageValueEv = comdat any

$_ZNK5blink17CanvasImageSource14IsVideoElementEv = comdat any

$_ZNK5blink17CanvasImageSource15IsCanvasElementEv = comdat any

$_ZNK5blink17CanvasImageSource13IsImageBitmapEv = comdat any

$_ZNK5blink17CanvasImageSource17IsOffscreenCanvasEv = comdat any

$_ZNK5blink17CanvasImageSource12IsVideoFrameEv = comdat any

$_ZNK5blink17CanvasImageSource10IsNeuteredEv = comdat any

$_ZThn104_NK5blink16HTMLImageElement14GetImageLoaderEv = comdat any

$_ZNK5blink17ImageBitmapSource6IsBlobEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_16HTMLImageElementEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_16HTMLImageElementEE26DispatchHasPendingActivityEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HTMLImageLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16HTMLImageElement22ViewportChangeListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink16HTMLImageElement22ViewportChangeListener5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_16HTMLImageElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HTMLSourceElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLImageElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_22MediaQueryListListenerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_22MediaQueryListListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_22MediaQueryListListenerEE7GetNameEPKv = comdat any

$_ZN5blink16HTMLImageElement22ViewportChangeListener23NotifyMediaQueryChangedEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19LayoutImageResourceEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19LayoutImageResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19LayoutImageResourceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19LayoutImageResourceEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_22MediaQueryListListenerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_22MediaQueryListListenerEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink16HTMLImageElement22ViewportChangeListenerE = comdat any

$_ZZN5blink11GCInfoTraitINS_19LayoutImageResourceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19LayoutImageResourceEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink16HTMLImageElementE = hidden unnamed_addr constant { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] } { [178 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZN5blink16HTMLImageElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZN5blink16HTMLImageElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::Visitor"*)* @_ZNK5blink16HTMLImageElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink16HTMLImageElement16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLImageElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink16HTMLImageElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink16HTMLImageElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::Document"*)* @_ZN5blink16HTMLImageElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.3214"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink16HTMLImageElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink16HTMLImageElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink16HTMLImageElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink16HTMLImageElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink16HTMLImageElement21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::HTMLImageElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink16HTMLImageElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*, %"class.blink::Attribute"*)* @_ZNK5blink16HTMLImageElement14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::HTMLImageElement"*)* @_ZN5blink16HTMLImageElement13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::HTMLImageElement"*, %"class.blink::StyleRecalcContext"*)* @_ZN5blink16HTMLImageElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::ShadowRoot"*)* @_ZN5blink16HTMLImageElement25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLImageElement"*)* @_ZN5blink16HTMLImageElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZN5blink16HTMLImageElement32EnsureCollapsedOrFallbackContentEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZN5blink16HTMLImageElement33EnsureFallbackForGeneratedContentEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZN5blink16HTMLImageElement20EnsurePrimaryContentEv to i8*), i8* bitcast (<2 x float> (%"class.blink::HTMLImageElement"*, %"class.blink::FloatSize"*, i32)* @_ZNK5blink16HTMLImageElement22DefaultDestinationSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::HTMLFormElement"*)* @_ZN5blink16HTMLImageElement13AssociateWithEPNS_15HTMLFormElementE to i8*), i8* bitcast (%"class.blink::HTMLImageLoader"* (%"class.blink::HTMLImageElement"*)* @_ZNK5blink16HTMLImageElement14GetImageLoaderEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [23 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (%"class.blink::Image"* (%"class.blink::ImageElementBase"*, i32*, %"class.blink::FloatSize"*, i32)* @_ZN5blink16ImageElementBase23GetSourceImageForCanvasEPNS_17SourceImageStatusERKNS_9FloatSizeENS_16AlphaDispositionE to i8*), i8* bitcast (i1 (%"class.blink::ImageElementBase"*)* @_ZNK5blink16ImageElementBase16WouldTaintOriginEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource15IsCSSImageValueEv to i8*), i8* bitcast (i1 (%"class.blink::ImageElementBase"*)* @_ZNK5blink16ImageElementBase14IsImageElementEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource14IsVideoElementEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource15IsCanvasElementEv to i8*), i8* bitcast (i1 (%"class.blink::ImageElementBase"*)* @_ZNK5blink16ImageElementBase11IsSVGSourceEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource13IsImageBitmapEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource17IsOffscreenCanvasEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource12IsVideoFrameEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasImageSource"*)* @_ZNK5blink17CanvasImageSource10IsNeuteredEv to i8*), i8* bitcast (<2 x float> (%"class.blink::ImageElementBase"*, %"class.blink::FloatSize"*, i32)* @_ZNK5blink16ImageElementBase11ElementSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (<2 x float> (%"class.blink::HTMLImageElement"*, %"class.blink::FloatSize"*, i32)* @_ZThn104_NK5blink16HTMLImageElement22DefaultDestinationSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::ImageElementBase"*)* @_ZNK5blink16ImageElementBase9SourceURLEv to i8*), i8* bitcast (i1 (%"class.blink::ImageElementBase"*)* @_ZNK5blink16ImageElementBase8IsOpaqueEv to i8*), i8* bitcast (i1 (%"class.blink::ImageElementBase"*)* @_ZNK5blink16ImageElementBase13IsAcceleratedEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZThn104_N5blink16HTMLImageElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZThn104_N5blink16HTMLImageElementD0Ev to i8*), i8* bitcast (%"class.blink::HTMLImageLoader"* (%"class.blink::HTMLImageElement"*)* @_ZThn104_NK5blink16HTMLImageElement14GetImageLoaderEv to i8*), i8* bitcast (i64 (%"class.blink::ImageElementBase"*)* @_ZNK5blink16ImageElementBase16BitmapSourceSizeEv to i8*), i8* bitcast (void (%"class.blink::ScriptPromise"*, %"class.blink::ImageElementBase"*, %"class.blink::ScriptState"*, %"class.absl::optional.883"*, %"class.blink::ImageBitmapOptions"*, %"class.blink::ExceptionState"*)* @_ZN5blink16ImageElementBase17CreateImageBitmapEPNS_11ScriptStateEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsERNS_14ExceptionStateE to i8*)], [7 x i8*] [i8* inttoptr (i64 -112 to i8*), i8* null, i8* bitcast (i64 (%"class.blink::ImageElementBase"*)* @_ZThn8_NK5blink16ImageElementBase16BitmapSourceSizeEv to i8*), i8* bitcast (void (%"class.blink::ScriptPromise"*, %"class.blink::ImageElementBase"*, %"class.blink::ScriptState"*, %"class.absl::optional.883"*, %"class.blink::ImageBitmapOptions"*, %"class.blink::ExceptionState"*)* @_ZThn8_N5blink16ImageElementBase17CreateImageBitmapEPNS_11ScriptStateEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::ImageBitmapSource"*)* @_ZNK5blink17ImageBitmapSource6IsBlobEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZThn112_N5blink16HTMLImageElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZThn112_N5blink16HTMLImageElementD0Ev to i8*)], [7 x i8*] [i8* inttoptr (i64 -128 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::Visitor"*)* @_ZThn128_NK5blink16HTMLImageElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZThn128_N5blink16HTMLImageElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement"*)* @_ZThn128_N5blink16HTMLImageElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_16HTMLImageElementEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_16HTMLImageElementEE26DispatchHasPendingActivityEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -136 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLImageElement"*, %"class.blink::HTMLFormElement"*)* @_ZThn136_N5blink16HTMLImageElement13AssociateWithEPNS_15HTMLFormElementE to i8*)] }, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink10html_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kBorderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kVspaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHspaceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kAlignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kValignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kAltAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [8 x i8] c"alttext\00", align 1
@_ZN5blink10html_names11kSrcsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kSizesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kUsemapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kReferrerpolicyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kDecodingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kLoadingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kImportanceAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kCrossoriginAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink19style_change_reason21kPictureSourceChangedE = external constant [0 x i8], align 1
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink14LayoutReplaced13kDefaultWidthE = external local_unnamed_addr constant i32, align 4
@_ZN5blink14LayoutReplaced14kDefaultHeightE = external local_unnamed_addr constant i32, align 4
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names11kLowsrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kLongdescAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kDraggableAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZN5blink10html_names10kIsmapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink19style_change_reason12kUseFallbackE = external constant [0 x i8], align 1
@_ZN2cc10PaintImage10kInvalidIdE = external local_unnamed_addr constant i32, align 4
@_ZTVN5blink7ElementE = external unnamed_addr constant { [157 x i8*], [3 x i8*] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink16HTMLImageElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ImageLoaderEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ImageLoader]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22MediaQueryListListenerEEEPKcv = private unnamed_addr constant [77 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MediaQueryListListener]\00", align 1
@_ZZN5blink11GCInfoTraitINS_22MediaQueryListListenerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_22MediaQueryListListenerEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_22MediaQueryListListenerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_22MediaQueryListListenerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink16HTMLImageElement22ViewportChangeListenerE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::HTMLImageElement::ViewportChangeListener"*)* @_ZN5blink16HTMLImageElement22ViewportChangeListener23NotifyMediaQueryChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::Visitor"*)* @_ZNK5blink16HTMLImageElement22ViewportChangeListener5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@_ZN5blink10html_names11kPictureTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSourceTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19LayoutImageResourceEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutImageResource]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19LayoutImageResourceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19LayoutImageResourceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19LayoutImageResourceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19LayoutImageResourceEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19LayoutImageResourceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink16HTMLImageElementC1ERNS_8DocumentENS_18CreateElementFlagsE = hidden unnamed_addr alias void (%"class.blink::HTMLImageElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*), void (%"class.blink::HTMLImageElement"*, %"class.blink::Document"*, %"class.blink::CreateElementFlags"*)* @_ZN5blink16HTMLImageElementC2ERNS_8DocumentENS_18CreateElementFlagsE
@_ZN5blink16HTMLImageElementC1ERNS_8DocumentEb = hidden unnamed_addr alias void (%"class.blink::HTMLImageElement"*, %"class.blink::Document"*, i1), void (%"class.blink::HTMLImageElement"*, %"class.blink::Document"*, i1)* @_ZN5blink16HTMLImageElementC2ERNS_8DocumentEb
@_ZN5blink16HTMLImageElementD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLImageElement"*), void (%"class.blink::HTMLImageElement"*)* @_ZN5blink16HTMLImageElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElementC2ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLImageElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %2, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 1
  %7 = icmp ne i8 %6, 0
  tail call void @_ZN5blink16HTMLImageElementC2ERNS_8DocumentEb(%"class.blink::HTMLImageElement"* %0, %"class.blink::Document"* dereferenceable(2848) %1, i1 zeroext %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElementC2ERNS_8DocumentEb(%"class.blink::HTMLImageElement"*, %"class.blink::Document"* dereferenceable(2848), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE to %"class.blink::QualifiedName"**), align 8
  %6 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.blink::Document"* %1, i32 1026) #12
  %7 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 1, i32 3
  %12 = load i32, i32* @_ZN2cc10PaintImage10kInvalidIdE, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = bitcast i32 (...)*** %9 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %14, align 8
  %15 = bitcast i32 (...)*** %13 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %15, align 8
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm(i64 136) #12
  %17 = bitcast i8* %16 to %"class.blink::HTMLImageLoader"*
  tail call void @_ZN5blink15HTMLImageLoaderC1EPNS_7ElementE(%"class.blink::HTMLImageLoader"* %17, %"class.blink::Element"* %6) #12
  %18 = getelementptr inbounds i8, i8* %16, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %23 = bitcast %"class.blink::HTMLImageLoader"** %22 to i8**
  store i8* %16, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 5, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 8
  %26 = bitcast %"class.blink::HTMLImageElement::ViewportChangeListener"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false)
  store float 1.000000e+00, float* %25, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 9, i32 0, i32 0
  store %"class.blink::HTMLSourceElement"* null, %"class.blink::HTMLSourceElement"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 10
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %30 = load i8, i8* %29, align 1
  %31 = shl nuw nsw i8 %4, 1
  %32 = and i8 %30, -8
  %33 = or i8 %32, %31
  store i8 %33, i8* %29, align 1
  %34 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 107
  %35 = load i8, i8* %34, align 8
  %36 = and i8 %35, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %39) #12
  %41 = icmp eq %"class.blink::ExecutionContext"* %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %38
  %43 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %39) #12
  %44 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %45 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* %43, i32 7, i32 1, %"class.WTF::String"* dereferenceable(8) %44, %"class.WTF::String"* dereferenceable(8) %44) #12
  %46 = xor i1 %45, true
  %47 = zext i1 %46 to i8
  %48 = shl nuw nsw i8 %47, 3
  br label %49

49:                                               ; preds = %3, %38, %42
  %50 = phi i8 [ 0, %38 ], [ 0, %3 ], [ %48, %42 ]
  %51 = load i8, i8* %29, align 1
  %52 = and i8 %51, -57
  %53 = or i8 %52, %50
  store i8 %53, i8* %29, align 1
  %54 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 12
  store i32 1, i32* %54, align 4
  %55 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 13
  %56 = bitcast %"class.std::__1::unique_ptr.3039"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = or i32 %58, 2048
  store i32 %59, i32* %57, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElementD2Ev(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast i32 (...)*** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = bitcast i32 (...)*** %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }, { [178 x i8*], [3 x i8*], [23 x i8*], [7 x i8*], [7 x i8*], [3 x i8*] }* @_ZTVN5blink16HTMLImageElementE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"*, %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"** %8, align 8
  store %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* null, %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"** %8, align 8
  %10 = icmp eq %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics", %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* %9, i64 0, i32 0
  tail call void @_ZdlPv(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %11
  %14 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %30

30:                                               ; preds = %13, %26, %29
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [157 x i8*], [3 x i8*] }, { [157 x i8*], [3 x i8*] }* @_ZTVN5blink7ElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 2
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %31) #12
  %32 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"* %32) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLImageElementD1Ev(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::ImageElementBase"* %2 to %"class.blink::HTMLImageElement"*
  tail call void @_ZN5blink16HTMLImageElementD2Ev(%"class.blink::HTMLImageElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N5blink16HTMLImageElementD1Ev(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.348"* %2 to %"class.blink::HTMLImageElement"*
  tail call void @_ZN5blink16HTMLImageElementD2Ev(%"class.blink::HTMLImageElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn128_N5blink16HTMLImageElementD1Ev(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::Animatable"* %2 to %"class.blink::HTMLImageElement"*
  tail call void @_ZN5blink16HTMLImageElementD2Ev(%"class.blink::HTMLImageElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElementD0Ev(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16HTMLImageElementD2Ev(%"class.blink::HTMLImageElement"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink16HTMLImageElementD0Ev(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::ImageElementBase"* %2 to %"class.blink::HTMLImageElement"*
  tail call void @_ZN5blink16HTMLImageElementD2Ev(%"class.blink::HTMLImageElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N5blink16HTMLImageElementD0Ev(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Member.348"* %2 to %"class.blink::HTMLImageElement"*
  tail call void @_ZN5blink16HTMLImageElementD2Ev(%"class.blink::HTMLImageElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn128_N5blink16HTMLImageElementD0Ev(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::Animatable"* %2 to %"class.blink::HTMLImageElement"*
  tail call void @_ZN5blink16HTMLImageElementD2Ev(%"class.blink::HTMLImageElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLImageElement5TraceEPNS_7VisitorE(%"class.blink::HTMLImageElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member.2974"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLImageLoaderEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::Member.3006"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLImageElement22ViewportChangeListenerEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6
  %26 = bitcast %"class.blink::Member.3012"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 9
  %37 = bitcast %"class.blink::Member.3032"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLSourceElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %47, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn128_NK5blink16HTMLImageElement5TraceEPNS_7VisitorE(%"class.blink::HTMLImageElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::Animatable", %"class.blink::Animatable"* %3, i64 18
  %5 = bitcast %"class.blink::Animatable"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLImageLoaderEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::Animatable", %"class.blink::Animatable"* %3, i64 19
  %16 = bitcast %"class.blink::Animatable"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLImageElement22ViewportChangeListenerEE5TraceEPNS_7VisitorEPKv) #12
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.blink::Animatable", %"class.blink::Animatable"* %3, i64 20
  %27 = bitcast %"class.blink::Animatable"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %36

36:                                               ; preds = %30, %25
  %37 = getelementptr inbounds %"class.blink::Animatable", %"class.blink::Animatable"* %3, i64 23
  %38 = bitcast %"class.blink::Animatable"* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = inttoptr i64 %39 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLSourceElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %47

47:                                               ; preds = %36, %41
  %48 = bitcast %"class.blink::Animatable"* %3 to %"class.blink::Element"*
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %48, %"class.blink::Visitor"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement21NotifyViewportChangedEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16HTMLImageElement15SelectSourceURLENS_11ImageLoader25UpdateFromElementBehaviorE(%"class.blink::HTMLImageElement"* %0, i32 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement15SelectSourceURLENS_11ImageLoader25UpdateFromElementBehaviorE(%"class.blink::HTMLImageElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = alloca %"class.blink::ImageCandidate", align 8
  %5 = alloca %"class.blink::ImageCandidate", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 5, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -2
  %13 = icmp ult i32 %12, 18
  br i1 %13, label %14, label %276

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 9, i32 0, i32 0
  %16 = load %"class.blink::HTMLSourceElement"*, %"class.blink::HTMLSourceElement"** %15, align 8
  %17 = bitcast %"class.blink::ImageCandidate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1, i32 2
  %20 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 2
  %21 = bitcast %"class.blink::ImageCandidate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %20, align 8
  %22 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 3
  %23 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 -86, i64 12, i1 false)
  call void @_ZN5blink16HTMLImageElement33FindBestFitImageFromPictureParentEv(%"class.blink::ImageCandidate"* nonnull sret %4, %"class.blink::HTMLImageElement"* %0)
  %24 = load i32, i32* %19, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %202

26:                                               ; preds = %14
  %27 = bitcast %"class.blink::ImageCandidate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #12
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = call float @_ZNK5blink8Document16DevicePixelRatioEv(%"class.blink::Document"* %30) #12
  %32 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %33 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = call fastcc zeroext i1 @_ZN5blinkL15SourceSizeValueEPKNS_7ElementERNS_8DocumentERf(%"class.blink::Element"* %32, %"class.blink::Document"* dereferenceable(2848) %36, float* nonnull dereferenceable(4) %3) #12
  %38 = load float, float* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %40, align 8
  %42 = icmp eq %"class.blink::ElementData"* %41, null
  br i1 %42, label %93, label %43

43:                                               ; preds = %26
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::ElementData"* %41 to %"class.blink::UniqueElementData"*
  %50 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 1, i32 1
  %51 = bitcast %"class.blink::Member.354"* %50 to %"class.blink::Attribute"**
  %52 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %49, i64 0, i32 2, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %60

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 1
  %57 = bitcast %"class.blink::ElementData"* %56 to %"class.blink::Attribute"*
  %58 = lshr i32 %45, 1
  %59 = and i32 %58, 268435455
  br label %60

60:                                               ; preds = %55, %48
  %61 = phi %"class.blink::Attribute"* [ %57, %55 ], [ %52, %48 ]
  %62 = phi i32 [ %59, %55 ], [ %54, %48 ]
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %71

71:                                               ; preds = %86, %66
  %72 = phi %"class.blink::Attribute"* [ %61, %66 ], [ %87, %86 ]
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %68
  br i1 %75, label %89, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %78, %79
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %83, %84
  br i1 %85, label %89, label %86

86:                                               ; preds = %81, %76
  %87 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %72, i64 1
  %88 = icmp eq %"class.blink::Attribute"* %87, %64
  br i1 %88, label %93, label %71

89:                                               ; preds = %81, %71
  %90 = icmp eq %"class.blink::Attribute"* %72, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %72, i64 0, i32 1
  br label %95

93:                                               ; preds = %86, %89, %60, %26
  %94 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %95

95:                                               ; preds = %91, %93
  %96 = phi %"class.WTF::AtomicString"* [ %94, %93 ], [ %92, %91 ]
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %96, i64 0, i32 0
  %98 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  br i1 %42, label %149, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 0, i32 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %111, label %104

104:                                              ; preds = %99
  %105 = bitcast %"class.blink::ElementData"* %41 to %"class.blink::UniqueElementData"*
  %106 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 1, i32 1
  %107 = bitcast %"class.blink::Member.354"* %106 to %"class.blink::Attribute"**
  %108 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %105, i64 0, i32 2, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  br label %116

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 1
  %113 = bitcast %"class.blink::ElementData"* %112 to %"class.blink::Attribute"*
  %114 = lshr i32 %101, 1
  %115 = and i32 %114, 268435455
  br label %116

116:                                              ; preds = %111, %104
  %117 = phi %"class.blink::Attribute"* [ %113, %111 ], [ %108, %104 ]
  %118 = phi i32 [ %115, %111 ], [ %110, %104 ]
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %117, i64 %119
  %121 = icmp eq i32 %118, 0
  br i1 %121, label %149, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %98, i64 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %127

127:                                              ; preds = %142, %122
  %128 = phi %"class.blink::Attribute"* [ %117, %122 ], [ %143, %142 ]
  %129 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %129, align 8
  %131 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %130, %124
  br i1 %131, label %145, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %134, %135
  br i1 %136, label %137, label %142

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 4, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %139, %140
  br i1 %141, label %145, label %142

142:                                              ; preds = %137, %132
  %143 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %128, i64 1
  %144 = icmp eq %"class.blink::Attribute"* %143, %120
  br i1 %144, label %149, label %127

145:                                              ; preds = %137, %127
  %146 = icmp eq %"class.blink::Attribute"* %128, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %128, i64 0, i32 1
  br label %151

149:                                              ; preds = %142, %145, %116, %95
  %150 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %151

151:                                              ; preds = %147, %149
  %152 = phi %"class.WTF::AtomicString"* [ %150, %149 ], [ %148, %147 ]
  %153 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %152, i64 0, i32 0
  %154 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %155 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %154, i64 0, i32 2, i32 0, i32 0
  %156 = load %"class.blink::Document"*, %"class.blink::Document"** %155, align 8
  call void @_ZN5blink31BestFitSourceForImageAttributesEffRKN3WTF6StringES3_PNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %5, float %31, float %38, %"class.WTF::String"* dereferenceable(8) %97, %"class.WTF::String"* dereferenceable(8) %153, %"class.blink::Document"* %156) #12
  %157 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %5, i64 0, i32 0, i32 0, i32 0
  %158 = bitcast %"class.blink::ImageCandidate"* %5 to i64*
  %159 = load i64, i64* %158, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %157, align 8
  %160 = bitcast %"class.blink::ImageCandidate"* %4 to i64*
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %159, i64* %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %163, label %168

163:                                              ; preds = %151
  %164 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1
  %165 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %5, i64 0, i32 1
  %166 = bitcast %"class.WTF::StringView"* %164 to i8*
  %167 = bitcast %"class.WTF::StringView"* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 36, i1 false) #12
  br label %201

168:                                              ; preds = %151
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #12
  br label %181

181:                                              ; preds = %177, %180
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %183 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1
  %184 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %5, i64 0, i32 1
  %185 = bitcast %"class.WTF::StringView"* %183 to i8*
  %186 = bitcast %"class.WTF::StringView"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 36, i1 false) #12
  %187 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #12
  br label %201

201:                                              ; preds = %163, %181, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #12
  br label %202

202:                                              ; preds = %201, %14
  %203 = load %"class.blink::HTMLSourceElement"*, %"class.blink::HTMLSourceElement"** %15, align 8
  %204 = icmp eq %"class.blink::HTMLSourceElement"* %16, %203
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  call void @_ZN5blink16HTMLImageElement26InvalidateAttributeMappingEv(%"class.blink::HTMLImageElement"* %0)
  br label %206

206:                                              ; preds = %202, %205
  %207 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %227, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #12
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !2

224:                                              ; preds = %215
  call void @llvm.trap() #12
  unreachable

225:                                              ; preds = %215
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %216, align 4
  br label %227

227:                                              ; preds = %206, %210, %225
  call void @_ZN5blink16HTMLImageElement37SetBestFitURLAndDPRFromImageCandidateERKNS_14ImageCandidateE(%"class.blink::HTMLImageElement"* %0, %"class.blink::ImageCandidate"* nonnull dereferenceable(48) %4)
  %228 = icmp eq i32 %1, 2
  br i1 %228, label %229, label %232

229:                                              ; preds = %227
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, %208
  br i1 %231, label %238, label %232

232:                                              ; preds = %229, %227
  %233 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %234 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %234, i64 0, i32 0
  %236 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 12
  %237 = load i32, i32* %236, align 4
  call void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %235, i32 %1, i32 %237) #12
  br label %238

238:                                              ; preds = %229, %232
  %239 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %240 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %240, i64 0, i32 0
  %242 = call zeroext i1 @_ZNK5blink11ImageLoader27ImageIsPotentiallyAvailableEv(%"class.blink::ImageLoader"* %241) #12
  br i1 %242, label %243, label %244

243:                                              ; preds = %238
  call void @_ZN5blink16HTMLImageElement20SetLayoutDispositionENS0_17LayoutDispositionEb(%"class.blink::HTMLImageElement"* %0, i8 zeroext 0, i1 zeroext false) #12
  br label %245

244:                                              ; preds = %238
  call void @_ZN5blink16HTMLImageElement32EnsureCollapsedOrFallbackContentEv(%"class.blink::HTMLImageElement"* %0)
  br label %245

245:                                              ; preds = %244, %243
  br i1 %209, label %259, label %246

246:                                              ; preds = %245
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #12
  br label %259

259:                                              ; preds = %245, %255, %258
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #12
  br label %275

275:                                              ; preds = %259, %271, %274
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #12
  br label %276

276:                                              ; preds = %2, %275
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLImageElement"* @_ZN5blink16HTMLImageElement22CreateForJSConstructorERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLImageElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #12
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %2, i64 0, i32 2, i32 0
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %3) #12
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %2, i64 0, i32 11
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, -3
  store i8 %6, i8* %4, align 1
  ret %"class.blink::HTMLImageElement"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLImageElement"* @_ZN5blink16HTMLImageElement22CreateForJSConstructorERNS_8DocumentEj(%"class.blink::Document"* dereferenceable(2848), i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLImageElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #12
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %3, i64 0, i32 2, i32 0
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %4) #12
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %5, %"class.blink::QualifiedName"* dereferenceable(8) %6, i32 %1, i32 0) #12
  %7 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %3, i64 0, i32 11
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, -3
  store i8 %9, i8* %7, align 1
  ret %"class.blink::HTMLImageElement"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement8setWidthEj(%"class.blink::HTMLImageElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, i32 %1, i32 0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLImageElement"* @_ZN5blink16HTMLImageElement22CreateForJSConstructorERNS_8DocumentEjj(%"class.blink::Document"* dereferenceable(2848), i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLImageElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #12
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %4, i64 0, i32 2, i32 0
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %5) #12
  %6 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %7, i32 %1, i32 0) #12
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %8, i32 %2, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %4, i64 0, i32 11
  %10 = load i8, i8* %9, align 1
  %11 = and i8 %10, -3
  store i8 %11, i8* %9, align 1
  ret %"class.blink::HTMLImageElement"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement9setHeightEj(%"class.blink::HTMLImageElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, i32 %1, i32 0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLImageElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLImageElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %42, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %42, label %14

14:                                               ; preds = %9
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kBorderAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %17
  br i1 %18, label %42, label %19

19:                                               ; preds = %14
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kVspaceAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %22
  br i1 %23, label %42, label %24

24:                                               ; preds = %19
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHspaceAttrE, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %27
  br i1 %28, label %42, label %29

29:                                               ; preds = %24
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %32
  br i1 %33, label %42, label %34

34:                                               ; preds = %29
  %35 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kValignAttrE, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %37
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"* %40, %"class.blink::QualifiedName"* dereferenceable(8) %1) #12
  br label %42

42:                                               ; preds = %2, %9, %14, %19, %24, %29, %34, %39
  %43 = phi i1 [ %41, %39 ], [ true, %34 ], [ true, %29 ], [ true, %24 ], [ true, %19 ], [ true, %14 ], [ true, %9 ], [ true, %2 ]
  ret i1 %43
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLImageElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %113

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %12, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 438, %"class.WTF::String"* dereferenceable(8) %13, i32 1, i32 1) #12
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %15, align 8
  %17 = icmp eq %"class.blink::ElementData"* %16, null
  br i1 %17, label %258, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::ElementData"* %16 to %"class.blink::UniqueElementData"*
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1, i32 1
  %26 = bitcast %"class.blink::Member.354"* %25 to %"class.blink::Attribute"**
  %27 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %24, i64 0, i32 2, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  br label %35

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1
  %32 = bitcast %"class.blink::ElementData"* %31 to %"class.blink::Attribute"*
  %33 = lshr i32 %20, 1
  %34 = and i32 %33, 268435455
  br label %35

35:                                               ; preds = %30, %23
  %36 = phi %"class.blink::Attribute"* [ %32, %30 ], [ %27, %23 ]
  %37 = phi i32 [ %34, %30 ], [ %29, %23 ]
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %258, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %62, %41
  %47 = phi %"class.blink::Attribute"* [ %36, %41 ], [ %63, %62 ]
  %48 = phi i32 [ 0, %41 ], [ %64, %62 ]
  %49 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %50, %43
  br i1 %51, label %66, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %59, %60
  br i1 %61, label %66, label %62

62:                                               ; preds = %57, %52
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 1
  %64 = add i32 %48, 1
  %65 = icmp eq %"class.blink::Attribute"* %63, %39
  br i1 %65, label %258, label %46

66:                                               ; preds = %46, %57
  %67 = icmp eq i32 %48, -1
  br i1 %67, label %258, label %68

68:                                               ; preds = %66
  br i1 %22, label %76, label %69

69:                                               ; preds = %68
  %70 = bitcast %"class.blink::ElementData"* %16 to %"class.blink::UniqueElementData"*
  %71 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1, i32 1
  %72 = bitcast %"class.blink::Member.354"* %71 to %"class.blink::Attribute"**
  %73 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %70, i64 0, i32 2, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  br label %81

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1
  %78 = bitcast %"class.blink::ElementData"* %77 to %"class.blink::Attribute"*
  %79 = lshr i32 %20, 1
  %80 = and i32 %79, 268435455
  br label %81

81:                                               ; preds = %76, %69
  %82 = phi %"class.blink::Attribute"* [ %78, %76 ], [ %73, %69 ]
  %83 = phi i32 [ %80, %76 ], [ %75, %69 ]
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %82, i64 %84
  %86 = icmp eq i32 %83, 0
  br i1 %86, label %109, label %87

87:                                               ; preds = %81, %102
  %88 = phi %"class.blink::Attribute"* [ %103, %102 ], [ %82, %81 ]
  %89 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %90, %43
  br i1 %91, label %105, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %94, %95
  br i1 %96, label %97, label %102

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 4, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %99, %100
  br i1 %101, label %105, label %102

102:                                              ; preds = %97, %92
  %103 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %88, i64 1
  %104 = icmp eq %"class.blink::Attribute"* %103, %85
  br i1 %104, label %109, label %87

105:                                              ; preds = %97, %87
  %106 = icmp eq %"class.blink::Attribute"* %88, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %88, i64 0, i32 1
  br label %111

109:                                              ; preds = %102, %105, %81
  %110 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %111

111:                                              ; preds = %107, %109
  %112 = phi %"class.WTF::AtomicString"* [ %110, %109 ], [ %108, %107 ]
  tail call void @_ZN5blink11HTMLElement23ApplyAspectRatioToStyleERKN3WTF12AtomicStringES4_PNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.WTF::AtomicString"* dereferenceable(8) %112, %"class.blink::MutableCSSPropertyValueSet"* %3) #12
  br label %258

113:                                              ; preds = %4
  %114 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %115 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  %117 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %116
  br i1 %117, label %118, label %218

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %120 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %119, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 165, %"class.WTF::String"* dereferenceable(8) %120, i32 1, i32 1) #12
  %121 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %122 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %121, align 8
  %123 = icmp eq %"class.blink::ElementData"* %122, null
  br i1 %123, label %258, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %122, i64 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %136, label %129

129:                                              ; preds = %124
  %130 = bitcast %"class.blink::ElementData"* %122 to %"class.blink::UniqueElementData"*
  %131 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %122, i64 1, i32 1
  %132 = bitcast %"class.blink::Member.354"* %131 to %"class.blink::Attribute"**
  %133 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %130, i64 0, i32 2, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  br label %141

136:                                              ; preds = %124
  %137 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %122, i64 1
  %138 = bitcast %"class.blink::ElementData"* %137 to %"class.blink::Attribute"*
  %139 = lshr i32 %126, 1
  %140 = and i32 %139, 268435455
  br label %141

141:                                              ; preds = %136, %129
  %142 = phi %"class.blink::Attribute"* [ %138, %136 ], [ %133, %129 ]
  %143 = phi i32 [ %140, %136 ], [ %135, %129 ]
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %142, i64 %144
  %146 = icmp eq i32 %143, 0
  br i1 %146, label %258, label %147

147:                                              ; preds = %141
  %148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 3, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %151

151:                                              ; preds = %167, %147
  %152 = phi %"class.blink::Attribute"* [ %142, %147 ], [ %168, %167 ]
  %153 = phi i32 [ 0, %147 ], [ %169, %167 ]
  %154 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %152, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %154, align 8
  %156 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %155, %148
  br i1 %156, label %171, label %157

157:                                              ; preds = %151
  %158 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %159, %160
  br i1 %161, label %162, label %167

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %155, i64 0, i32 4, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %164, %165
  br i1 %166, label %171, label %167

167:                                              ; preds = %162, %157
  %168 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %152, i64 1
  %169 = add i32 %153, 1
  %170 = icmp eq %"class.blink::Attribute"* %168, %145
  br i1 %170, label %258, label %151

171:                                              ; preds = %151, %162
  %172 = icmp eq i32 %153, -1
  br i1 %172, label %258, label %173

173:                                              ; preds = %171
  br i1 %128, label %181, label %174

174:                                              ; preds = %173
  %175 = bitcast %"class.blink::ElementData"* %122 to %"class.blink::UniqueElementData"*
  %176 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %122, i64 1, i32 1
  %177 = bitcast %"class.blink::Member.354"* %176 to %"class.blink::Attribute"**
  %178 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %175, i64 0, i32 2, i32 0, i32 0, i32 2
  %180 = load i32, i32* %179, align 4
  br label %186

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %122, i64 1
  %183 = bitcast %"class.blink::ElementData"* %182 to %"class.blink::Attribute"*
  %184 = lshr i32 %126, 1
  %185 = and i32 %184, 268435455
  br label %186

186:                                              ; preds = %181, %174
  %187 = phi %"class.blink::Attribute"* [ %183, %181 ], [ %178, %174 ]
  %188 = phi i32 [ %185, %181 ], [ %180, %174 ]
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %187, i64 %189
  %191 = icmp eq i32 %188, 0
  br i1 %191, label %214, label %192

192:                                              ; preds = %186, %207
  %193 = phi %"class.blink::Attribute"* [ %208, %207 ], [ %187, %186 ]
  %194 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %194, align 8
  %196 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %195, %148
  br i1 %196, label %210, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %195, i64 0, i32 3, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %199, %200
  br i1 %201, label %202, label %207

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %195, i64 0, i32 4, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %204, %205
  br i1 %206, label %210, label %207

207:                                              ; preds = %202, %197
  %208 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %193, i64 1
  %209 = icmp eq %"class.blink::Attribute"* %208, %190
  br i1 %209, label %214, label %192

210:                                              ; preds = %202, %192
  %211 = icmp eq %"class.blink::Attribute"* %193, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %193, i64 0, i32 1
  br label %216

214:                                              ; preds = %207, %210, %186
  %215 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %216

216:                                              ; preds = %212, %214
  %217 = phi %"class.WTF::AtomicString"* [ %215, %214 ], [ %213, %212 ]
  tail call void @_ZN5blink11HTMLElement23ApplyAspectRatioToStyleERKN3WTF12AtomicStringES4_PNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %119, %"class.WTF::AtomicString"* dereferenceable(8) %217, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #12
  br label %258

218:                                              ; preds = %113
  %219 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kBorderAttrE, align 8
  %220 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %219, i64 0, i32 0, i32 0
  %221 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %220, align 8
  %222 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %221
  br i1 %222, label %223, label %225

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement27ApplyBorderAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %224, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #12
  br label %258

225:                                              ; preds = %218
  %226 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kVspaceAttrE, align 8
  %227 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %226, i64 0, i32 0, i32 0
  %228 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %227, align 8
  %229 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %228
  br i1 %229, label %230, label %233

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %232 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %231, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 223, %"class.WTF::String"* dereferenceable(8) %232, i32 1, i32 1) #12
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %231, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 218, %"class.WTF::String"* dereferenceable(8) %232, i32 1, i32 1) #12
  br label %258

233:                                              ; preds = %225
  %234 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHspaceAttrE, align 8
  %235 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %234, i64 0, i32 0, i32 0
  %236 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %235, align 8
  %237 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %236
  br i1 %237, label %238, label %241

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %240 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %239, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 221, %"class.WTF::String"* dereferenceable(8) %240, i32 1, i32 1) #12
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %239, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 222, %"class.WTF::String"* dereferenceable(8) %240, i32 1, i32 1) #12
  br label %258

241:                                              ; preds = %233
  %242 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %243 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %242, i64 0, i32 0, i32 0
  %244 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %243, align 8
  %245 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %244
  br i1 %245, label %246, label %248

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement30ApplyAlignmentAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %247, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #12
  br label %258

248:                                              ; preds = %241
  %249 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kValignAttrE, align 8
  %250 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %249, i64 0, i32 0, i32 0
  %251 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %250, align 8
  %252 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %251
  br i1 %252, label %253, label %256

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %255 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"* %254, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 383, %"class.WTF::String"* dereferenceable(8) %255) #12
  br label %258

256:                                              ; preds = %248
  %257 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %257, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #12
  br label %258

258:                                              ; preds = %167, %62, %66, %171, %141, %118, %35, %11, %216, %230, %246, %256, %253, %238, %223, %111
  ret void
}

declare void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i32, i32) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement23ApplyAspectRatioToStyleERKN3WTF12AtomicStringES4_PNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement27ApplyBorderAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement30ApplyAlignmentAttributeToStyleERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #2

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLImageElement"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"class.blink::HTMLSourceElement"*, %"class.blink::HTMLSourceElement"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLSourceElement"* %4, null
  br i1 %5, label %151, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLSourceElement", %"class.blink::HTMLSourceElement"* %4, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %19 = bitcast %"class.blink::Member.354"* %18 to %"class.blink::Attribute"**
  %20 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %28

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::Attribute"*
  %26 = lshr i32 %13, 1
  %27 = and i32 %26, 268435455
  br label %28

28:                                               ; preds = %23, %16
  %29 = phi %"class.blink::Attribute"* [ %25, %23 ], [ %20, %16 ]
  %30 = phi i32 [ %27, %23 ], [ %22, %16 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %54, %34
  %40 = phi %"class.blink::Attribute"* [ %29, %34 ], [ %55, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %36
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::Attribute"* %55, %32
  br i1 %56, label %61, label %39

57:                                               ; preds = %49, %39
  %58 = icmp eq %"class.blink::Attribute"* %40, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 1
  br label %63

61:                                               ; preds = %54, %57, %28, %6
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %63

63:                                               ; preds = %59, %61
  %64 = phi %"class.WTF::AtomicString"* [ %62, %61 ], [ %60, %59 ]
  %65 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  br i1 %10, label %116, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %66
  %72 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %73 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %74 = bitcast %"class.blink::Member.354"* %73 to %"class.blink::Attribute"**
  %75 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %72, i64 0, i32 2, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  br label %83

78:                                               ; preds = %66
  %79 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %80 = bitcast %"class.blink::ElementData"* %79 to %"class.blink::Attribute"*
  %81 = lshr i32 %68, 1
  %82 = and i32 %81, 268435455
  br label %83

83:                                               ; preds = %78, %71
  %84 = phi %"class.blink::Attribute"* [ %80, %78 ], [ %75, %71 ]
  %85 = phi i32 [ %82, %78 ], [ %77, %71 ]
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %84, i64 %86
  %88 = icmp eq i32 %85, 0
  br i1 %88, label %116, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %65, i64 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %94

94:                                               ; preds = %109, %89
  %95 = phi %"class.blink::Attribute"* [ %84, %89 ], [ %110, %109 ]
  %96 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %97, %91
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %101, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 4, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %106, %107
  br i1 %108, label %112, label %109

109:                                              ; preds = %104, %99
  %110 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %95, i64 1
  %111 = icmp eq %"class.blink::Attribute"* %110, %87
  br i1 %111, label %116, label %94

112:                                              ; preds = %104, %94
  %113 = icmp eq %"class.blink::Attribute"* %95, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %95, i64 0, i32 1
  br label %118

116:                                              ; preds = %109, %112, %83, %63
  %117 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %118

118:                                              ; preds = %114, %116
  %119 = phi %"class.WTF::AtomicString"* [ %117, %116 ], [ %115, %114 ]
  %120 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %123, label %127

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %119, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %151, label %130

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %128, %"class.blink::MutableCSSPropertyValueSet"* %1, i32 438, %"class.WTF::String"* dereferenceable(8) %129, i32 1, i32 1) #12
  br label %132

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %131, %"class.blink::MutableCSSPropertyValueSet"* %1, i32 438, i32 405) #12
  br label %132

132:                                              ; preds = %130, %127
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %119, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %138 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %119, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20AddHTMLLengthToStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringENS0_15AllowPercentageENS0_9AllowZeroE(%"class.blink::HTMLElement"* %137, %"class.blink::MutableCSSPropertyValueSet"* %1, i32 165, %"class.WTF::String"* dereferenceable(8) %138, i32 1, i32 1) #12
  br label %141

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %140, %"class.blink::MutableCSSPropertyValueSet"* %1, i32 165, i32 405) #12
  br label %141

141:                                              ; preds = %139, %136
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %141
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement23ApplyAspectRatioToStyleERKN3WTF12AtomicStringES4_PNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %148, %"class.WTF::AtomicString"* dereferenceable(8) %64, %"class.WTF::AtomicString"* dereferenceable(8) %119, %"class.blink::MutableCSSPropertyValueSet"* %1) #12
  br label %151

149:                                              ; preds = %144, %141
  %150 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %150, %"class.blink::MutableCSSPropertyValueSet"* %1, i32 46, i32 405) #12
  br label %151

151:                                              ; preds = %123, %2, %149, %147
  ret void
}

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLImageElement14ImageSourceURLEv(%"class.blink::HTMLImageElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %63

6:                                                ; preds = %1
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %19 = bitcast %"class.blink::Member.354"* %18 to %"class.blink::Attribute"**
  %20 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %28

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::Attribute"*
  %26 = lshr i32 %13, 1
  %27 = and i32 %26, 268435455
  br label %28

28:                                               ; preds = %23, %16
  %29 = phi %"class.blink::Attribute"* [ %25, %23 ], [ %20, %16 ]
  %30 = phi i32 [ %27, %23 ], [ %22, %16 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %54, %34
  %40 = phi %"class.blink::Attribute"* [ %29, %34 ], [ %55, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %36
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::Attribute"* %55, %32
  br i1 %56, label %61, label %39

57:                                               ; preds = %49, %39
  %58 = icmp eq %"class.blink::Attribute"* %40, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 1
  br label %63

61:                                               ; preds = %54, %57, %28, %6
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %63

63:                                               ; preds = %61, %59, %1
  %64 = phi %"class.WTF::AtomicString"* [ %2, %1 ], [ %62, %61 ], [ %60, %59 ]
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #12
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  tail call void @llvm.trap() #12
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %63, %68, %83
  ret %"class.WTF::StringImpl"* %66
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HTMLFormElement"* @_ZNK5blink16HTMLImageElement9formOwnerEv(%"class.blink::HTMLImageElement"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %2, align 8
  ret %"class.blink::HTMLFormElement"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement19FormRemovedFromTreeERKNS_4NodeE(%"class.blink::HTMLImageElement"*, %"class.blink::Node"* readnone dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %3) #12
  %5 = icmp eq %"class.blink::ContainerNode"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"class.blink::Node"* [ %9, %6 ], [ %3, %2 ]
  %8 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #12
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %8, i64 0, i32 0
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %9) #12
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %2
  %13 = phi %"class.blink::Node"* [ %3, %2 ], [ %9, %6 ]
  %14 = icmp eq %"class.blink::Node"* %13, %1
  br i1 %14, label %43, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, -2
  store i8 %18, i8* %16, align 1
  %19 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %20 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement16FindFormAncestorEv(%"class.blink::HTMLElement"* %19) #12
  %21 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::Member.3012", %"class.blink::Member.3012"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %22, align 8
  %24 = icmp eq %"class.blink::HTMLFormElement"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %15
  %26 = icmp eq %"class.blink::HTMLFormElement"* %20, %23
  br i1 %26, label %43, label %27

27:                                               ; preds = %25
  tail call void @_ZN5blink15HTMLFormElement12DisassociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* nonnull %23, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  br label %28

28:                                               ; preds = %27, %15
  %29 = icmp eq %"class.blink::HTMLFormElement"* %20, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %28
  %31 = ptrtoint %"class.blink::HTMLFormElement"* %20 to i64
  %32 = bitcast %"class.blink::Member.3012"* %21 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::HTMLFormElement"* %20 to i8*
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %36) #12
  %38 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %22, align 8
  br label %39

39:                                               ; preds = %35, %30
  %40 = phi %"class.blink::HTMLFormElement"* [ %20, %30 ], [ %38, %35 ]
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* %40, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  br label %43

41:                                               ; preds = %28
  %42 = bitcast %"class.blink::Member.3012"* %21 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  br label %43

43:                                               ; preds = %12, %41, %39, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement14ResetFormOwnerEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, -2
  store i8 %4, i8* %2, align 1
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %6 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement16FindFormAncestorEv(%"class.blink::HTMLElement"* %5) #12
  %7 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.blink::Member.3012", %"class.blink::Member.3012"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %8, align 8
  %10 = icmp eq %"class.blink::HTMLFormElement"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = icmp eq %"class.blink::HTMLFormElement"* %6, %9
  br i1 %12, label %29, label %13

13:                                               ; preds = %11
  tail call void @_ZN5blink15HTMLFormElement12DisassociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* nonnull %9, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  br label %14

14:                                               ; preds = %1, %13
  %15 = icmp eq %"class.blink::HTMLFormElement"* %6, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %14
  %17 = ptrtoint %"class.blink::HTMLFormElement"* %6 to i64
  %18 = bitcast %"class.blink::Member.3012"* %7 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::HTMLFormElement"* %6 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %22) #12
  %24 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %8, align 8
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi %"class.blink::HTMLFormElement"* [ %6, %16 ], [ %24, %21 ]
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* %26, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  br label %29

27:                                               ; preds = %14
  %28 = bitcast %"class.blink::Member.3012"* %7 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  br label %29

29:                                               ; preds = %25, %27, %11
  ret void
}

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement16FindFormAncestorEv(%"class.blink::HTMLElement"*) local_unnamed_addr #2

declare void @_ZN5blink15HTMLFormElement12DisassociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"*, %"class.blink::HTMLImageElement"* dereferenceable(208)) local_unnamed_addr #2

declare void @_ZN5blink15HTMLFormElement9AssociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"*, %"class.blink::HTMLImageElement"* dereferenceable(208)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement37SetBestFitURLAndDPRFromImageCandidateERKNS_14ImageCandidateE(%"class.blink::HTMLImageElement"*, %"class.blink::ImageCandidate"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 0, i32 1
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* %3) #12
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %6
  %12 = load atomic i32, i32* %7 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %29

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %29

27:                                               ; preds = %6
  %28 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %29

29:                                               ; preds = %27, %25, %11
  %30 = phi %"class.WTF::StringImpl"* [ %4, %25 ], [ %4, %11 ], [ %28, %27 ]
  %31 = load atomic i32, i32* %7 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %42

42:                                               ; preds = %2, %38, %41
  %43 = phi %"class.WTF::StringImpl"* [ %30, %38 ], [ %30, %41 ], [ null, %2 ]
  %44 = ptrtoint %"class.WTF::StringImpl"* %43 to i64
  %45 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 7
  %46 = bitcast %"class.WTF::AtomicString"* %45 to i64*
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  store i64 %44, i64* %46, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #12
  br label %63

63:                                               ; preds = %62, %59, %42
  %64 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 0, i32 2
  %65 = load float, float* %64, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 8
  %67 = load float, float* %66, align 8
  %68 = fcmp ult float %65, 0.000000e+00
  br i1 %68, label %71, label %69

69:                                               ; preds = %63
  %70 = fdiv float 1.000000e+00, %65
  store float %70, float* %66, align 8
  br label %71

71:                                               ; preds = %63, %69
  %72 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %85

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %77 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %77, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::Document"*, %"class.blink::Document"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %79, i64 0, i32 2
  %81 = bitcast %"class.blink::UseCounter"* %80 to void (%"class.blink::UseCounter"*, i32)***
  %82 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %82, i64 3
  %84 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %83, align 8
  tail call void %84(%"class.blink::UseCounter"* %80, i32 524) #12
  br label %99

85:                                               ; preds = %71
  %86 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %99, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %91 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %91, i64 0, i32 2, i32 0, i32 0
  %93 = load %"class.blink::Document"*, %"class.blink::Document"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %93, i64 0, i32 2
  %95 = bitcast %"class.blink::UseCounter"* %94 to void (%"class.blink::UseCounter"*, i32)***
  %96 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %96, i64 3
  %98 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %97, align 8
  tail call void %98(%"class.blink::UseCounter"* %94, i32 523) #12
  br label %99

99:                                               ; preds = %85, %89, %75
  %100 = phi i1 [ true, %75 ], [ false, %85 ], [ false, %89 ]
  %101 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %104, label %110, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::NodeData"** %105 to %"class.blink::NodeRareData"**
  %108 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %108, i64 0, i32 1, i32 0, i32 0
  br label %112

110:                                              ; preds = %99
  %111 = bitcast %"class.blink::NodeData"** %105 to %"class.blink::NodeRenderingData"**
  br label %112

112:                                              ; preds = %106, %110
  %113 = phi %"class.blink::NodeRenderingData"** [ %109, %106 ], [ %111, %110 ]
  %114 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %114, i64 0, i32 1
  %116 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %115, align 8
  %117 = icmp eq %"class.blink::LayoutObject"* %116, null
  br i1 %117, label %137, label %118

118:                                              ; preds = %112
  %119 = bitcast %"class.blink::LayoutObject"* %116 to i1 (%"class.blink::LayoutObject"*, i32)***
  %120 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %119, align 8
  %121 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %120, i64 92
  %122 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.blink::LayoutObject"* nonnull %116, i32 12) #12
  %124 = bitcast %"class.blink::LayoutObject"* %116 to %"class.blink::LayoutImage"*
  br i1 %123, label %125, label %137

125:                                              ; preds = %118
  %126 = bitcast float* %66 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutImage", %"class.blink::LayoutImage"* %124, i64 0, i32 4
  %129 = bitcast float* %128 to i32*
  store i32 %127, i32* %129, align 4
  %130 = load float, float* %66, align 8
  %131 = fcmp une float %67, %130
  br i1 %131, label %132, label %137

132:                                              ; preds = %125
  %133 = bitcast %"class.blink::LayoutObject"* %116 to void (%"class.blink::LayoutImage"*)***
  %134 = load void (%"class.blink::LayoutImage"*)**, void (%"class.blink::LayoutImage"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::LayoutImage"*)*, void (%"class.blink::LayoutImage"*)** %134, i64 199
  %136 = load void (%"class.blink::LayoutImage"*)*, void (%"class.blink::LayoutImage"*)** %135, align 8
  tail call void %136(%"class.blink::LayoutImage"* nonnull %124) #12
  br label %137

137:                                              ; preds = %118, %112, %125, %132
  %138 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 5
  %139 = getelementptr inbounds %"class.blink::Member.3006", %"class.blink::Member.3006"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::HTMLImageElement::ViewportChangeListener"** %139, align 8
  %141 = icmp ne %"class.blink::HTMLImageElement::ViewportChangeListener"* %140, null
  br i1 %100, label %142, label %168

142:                                              ; preds = %137
  br i1 %141, label %160, label %143

143:                                              ; preds = %142
  %144 = ptrtoint %"class.blink::HTMLImageElement"* %0 to i64
  %145 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_22MediaQueryListListenerEEEPhm(i64 16) #12
  %146 = bitcast i8* %145 to %"class.blink::MediaQueryListListener"*
  tail call void @_ZN5blink22MediaQueryListListenerC2Ev(%"class.blink::MediaQueryListListener"* %146) #12
  %147 = bitcast i8* %145 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink16HTMLImageElement22ViewportChangeListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds i8, i8* %145, i64 8
  %149 = bitcast i8* %148 to i64*
  store i64 %144, i64* %149, align 8
  %150 = getelementptr inbounds i8, i8* %145, i64 -4
  %151 = bitcast i8* %150 to i16*
  %152 = load atomic i16, i16* %151 monotonic, align 2
  %153 = or i16 %152, 1
  store atomic i16 %153, i16* %151 release, align 2
  %154 = ptrtoint i8* %145 to i64
  %155 = bitcast %"class.blink::Member.3006"* %138 to i64*
  store atomic i64 %154, i64* %155 monotonic, align 8
  %156 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %143
  %159 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %145) #12
  br label %160

160:                                              ; preds = %158, %143, %142
  %161 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %162 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %162, i64 0, i32 2, i32 0, i32 0
  %164 = load %"class.blink::Document"*, %"class.blink::Document"** %163, align 8
  %165 = tail call dereferenceable(112) %"class.blink::MediaQueryMatcher"* @_ZN5blink8Document20GetMediaQueryMatcherEv(%"class.blink::Document"* %164) #12
  %166 = load %"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::HTMLImageElement::ViewportChangeListener"** %139, align 8
  %167 = getelementptr inbounds %"class.blink::HTMLImageElement::ViewportChangeListener", %"class.blink::HTMLImageElement::ViewportChangeListener"* %166, i64 0, i32 0
  tail call void @_ZN5blink17MediaQueryMatcher19AddViewportListenerEPNS_22MediaQueryListListenerE(%"class.blink::MediaQueryMatcher"* %165, %"class.blink::MediaQueryListListener"* %167) #12
  br label %177

168:                                              ; preds = %137
  br i1 %141, label %169, label %177

169:                                              ; preds = %168
  %170 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %171 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %171, i64 0, i32 2, i32 0, i32 0
  %173 = load %"class.blink::Document"*, %"class.blink::Document"** %172, align 8
  %174 = tail call dereferenceable(112) %"class.blink::MediaQueryMatcher"* @_ZN5blink8Document20GetMediaQueryMatcherEv(%"class.blink::Document"* %173) #12
  %175 = load %"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::HTMLImageElement::ViewportChangeListener"** %139, align 8
  %176 = getelementptr inbounds %"class.blink::HTMLImageElement::ViewportChangeListener", %"class.blink::HTMLImageElement::ViewportChangeListener"* %175, i64 0, i32 0
  tail call void @_ZN5blink17MediaQueryMatcher22RemoveViewportListenerEPNS_22MediaQueryListListenerE(%"class.blink::MediaQueryMatcher"* %174, %"class.blink::MediaQueryListListener"* %176) #12
  br label %177

177:                                              ; preds = %168, %169, %160
  ret void
}

declare dereferenceable(112) %"class.blink::MediaQueryMatcher"* @_ZN5blink8Document20GetMediaQueryMatcherEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink17MediaQueryMatcher19AddViewportListenerEPNS_22MediaQueryListListenerE(%"class.blink::MediaQueryMatcher"*, %"class.blink::MediaQueryListListener"*) local_unnamed_addr #2

declare void @_ZN5blink17MediaQueryMatcher22RemoveViewportListenerEPNS_22MediaQueryListListenerE(%"class.blink::MediaQueryMatcher"*, %"class.blink::MediaQueryListListener"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLImageElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %5, align 8
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %16
  br i1 %17, label %18, label %91

18:                                               ; preds = %13, %2
  %19 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %20 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %19) #12
  %21 = icmp eq %"class.blink::ShadowRoot"* %20, null
  br i1 %21, label %250, label %22

22:                                               ; preds = %18
  %23 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %19) #12
  %24 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %23, i64 0, i32 1
  %25 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #12
  %26 = call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %24, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #12
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %22, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  %44 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %46 = call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLImageElement7AltTextEv(%"class.blink::HTMLImageElement"* %0)
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.blink::Element"* %26, null
  br i1 %47, label %74, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %26, i64 0, i32 0, i32 0
  %50 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %49, i1 zeroext false) #12
  %51 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"* %46) #12
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br i1 %51, label %72, label %67

66:                                               ; preds = %62, %48
  br i1 %51, label %72, label %67

67:                                               ; preds = %65, %66
  %68 = bitcast %"class.blink::Element"* %26 to void (%"class.blink::Node"*, %"class.WTF::String"*)***
  %69 = load void (%"class.blink::Node"*, %"class.WTF::String"*)**, void (%"class.blink::Node"*, %"class.WTF::String"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %69, i64 32
  %71 = load void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %70, align 8
  call void %71(%"class.blink::Node"* %49, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  br label %72

72:                                               ; preds = %65, %66, %67
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  br label %74

74:                                               ; preds = %43, %72
  %75 = phi %"class.WTF::StringImpl"* [ %73, %72 ], [ %46, %43 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #12
  br label %90

90:                                               ; preds = %74, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  br label %250

91:                                               ; preds = %13
  %92 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %93, align 8
  %95 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %94
  br i1 %95, label %106, label %96

96:                                               ; preds = %91
  %97 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %100 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %99
  br i1 %100, label %106, label %101

101:                                              ; preds = %96
  %102 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %105 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %104
  br i1 %105, label %106, label %107

106:                                              ; preds = %101, %96, %91
  tail call void @_ZN5blink16HTMLImageElement15SelectSourceURLENS_11ImageLoader25UpdateFromElementBehaviorE(%"class.blink::HTMLImageElement"* %0, i32 1)
  br label %250

107:                                              ; preds = %101
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %110
  br i1 %111, label %112, label %119

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %115 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %114, align 8
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp ne %"class.WTF::StringImpl"* %117, null
  tail call void @_ZN5blink4Node9SetIsLinkEb(%"class.blink::Node"* %113, i1 zeroext %118) #12
  br label %250

119:                                              ; preds = %107
  %120 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kReferrerpolicyAttrE, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %120, i64 0, i32 0, i32 0
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8
  %123 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %122
  br i1 %123, label %124, label %153

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 12
  %126 = load i32, i32* %125, align 4
  store i32 1, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %128 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %127, align 8
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %136, i64 0, i32 2
  %138 = bitcast %"class.blink::UseCounter"* %137 to void (%"class.blink::UseCounter"*, i32)***
  %139 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %139, i64 3
  %141 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %140, align 8
  tail call void %141(%"class.blink::UseCounter"* %137, i32 1756) #12
  %142 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %127, align 8
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %142, i64 0, i32 0
  %144 = tail call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8) %143, i32 0, i32* %125) #12
  %145 = load i32, i32* %125, align 4
  br label %146

146:                                              ; preds = %132, %124
  %147 = phi i32 [ %145, %132 ], [ 1, %124 ]
  %148 = icmp eq i32 %147, %126
  br i1 %148, label %250, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %151 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %151, i64 0, i32 0
  tail call void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %152, i32 1, i32 %147) #12
  br label %250

153:                                              ; preds = %119
  %154 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDecodingAttrE, align 8
  %155 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %155, align 8
  %157 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %156
  br i1 %157, label %158, label %172

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %160 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %160, i64 0, i32 2, i32 0, i32 0
  %162 = load %"class.blink::Document"*, %"class.blink::Document"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %162, i64 0, i32 2
  %164 = bitcast %"class.blink::UseCounter"* %163 to void (%"class.blink::UseCounter"*, i32)***
  %165 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %165, i64 3
  %167 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %166, align 8
  tail call void %167(%"class.blink::UseCounter"* %163, i32 2347) #12
  %168 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %169 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %168, align 8
  %170 = tail call i32 @_ZN5blink16ImageElementBase22ParseImageDecodingModeERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %169) #12
  %171 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 1, i32 2
  store i32 %170, i32* %171, align 8
  br label %250

172:                                              ; preds = %153
  %173 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kLoadingAttrE, align 8
  %174 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %174, align 8
  %176 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %175
  br i1 %176, label %177, label %202

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %179 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %178, align 8
  %180 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %179, i64 0, i32 0
  %181 = tail call i32 @_ZN5blink24GetLoadingAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %180) #12
  switch i32 %181, label %250 [
    i32 2, label %196
    i32 0, label %182
  ]

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %184 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %184, i64 0, i32 2, i32 0, i32 0
  %186 = load %"class.blink::Document"*, %"class.blink::Document"** %185, align 8
  %187 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %186) #12
  %188 = icmp eq %"class.blink::LocalFrame"* %187, null
  br i1 %188, label %250, label %189

189:                                              ; preds = %182
  %190 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %183, align 8
  %191 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %190, i64 0, i32 2, i32 0, i32 0
  %192 = load %"class.blink::Document"*, %"class.blink::Document"** %191, align 8
  %193 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %192) #12
  %194 = tail call i32 @_ZNK5blink10LocalFrame23GetLazyLoadImageSettingEv(%"class.blink::LocalFrame"* %193) #12
  %195 = icmp eq i32 %194, 2
  br i1 %195, label %250, label %196

196:                                              ; preds = %177, %189
  %197 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %198 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %198, i64 0, i32 0
  %200 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 12
  %201 = load i32, i32* %200, align 4
  tail call void @_ZN5blink11ImageLoader17LoadDeferredImageEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %199, i32 %201) #12
  br label %250

202:                                              ; preds = %172
  %203 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kImportanceAttrE, align 8
  %204 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %203, i64 0, i32 0, i32 0
  %205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %204, align 8
  %206 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %205
  br i1 %206, label %207, label %226

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %209 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %208) #12
  %210 = icmp eq %"class.blink::ExecutionContext"* %209, null
  %211 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %209, i64 0, i32 4
  %212 = select i1 %210, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %211
  %213 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %212) #12
  br i1 %213, label %216, label %214

214:                                              ; preds = %207
  %215 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  br label %226

216:                                              ; preds = %207
  %217 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %218 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %218, i64 0, i32 2, i32 0, i32 0
  %220 = load %"class.blink::Document"*, %"class.blink::Document"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %220, i64 0, i32 2
  %222 = bitcast %"class.blink::UseCounter"* %221 to void (%"class.blink::UseCounter"*, i32)***
  %223 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %223, i64 3
  %225 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %224, align 8
  tail call void %225(%"class.blink::UseCounter"* %221, i32 2738) #12
  br label %250

226:                                              ; preds = %214, %202
  %227 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %215, %214 ], [ %9, %202 ]
  %228 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kCrossoriginAttrE, align 8
  %229 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %228, i64 0, i32 0, i32 0
  %230 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %229, align 8
  %231 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %227, %230
  br i1 %231, label %232, label %248

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %234 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %233, align 8
  %235 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %234, i64 0, i32 0
  %236 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %235) #12
  %237 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 1
  %238 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %237, align 8
  %239 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %238, i64 0, i32 0
  %240 = tail call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %239) #12
  %241 = icmp eq i32 %236, %240
  br i1 %241, label %250, label %242

242:                                              ; preds = %232
  %243 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %244 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %243, align 8
  %245 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %244, i64 0, i32 0
  %246 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 12
  %247 = load i32, i32* %246, align 4
  tail call void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %245, i32 1, i32 %247) #12
  br label %250

248:                                              ; preds = %226
  %249 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"* %249, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  br label %250

250:                                              ; preds = %242, %232, %196, %182, %189, %177, %149, %146, %18, %106, %248, %216, %158, %112, %90
  ret void
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16HTMLImageElement7AltTextEv(%"class.blink::HTMLImageElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.354"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %156

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %68
  tail call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %156

80:                                               ; preds = %58
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  br i1 %5, label %132, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %89 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %90 = bitcast %"class.blink::Member.354"* %89 to %"class.blink::Attribute"**
  %91 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %88, i64 0, i32 2, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  br label %99

94:                                               ; preds = %82
  %95 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %96 = bitcast %"class.blink::ElementData"* %95 to %"class.blink::Attribute"*
  %97 = lshr i32 %84, 1
  %98 = and i32 %97, 268435455
  br label %99

99:                                               ; preds = %94, %87
  %100 = phi %"class.blink::Attribute"* [ %96, %94 ], [ %91, %87 ]
  %101 = phi i32 [ %98, %94 ], [ %93, %87 ]
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %100, i64 %102
  %104 = icmp eq i32 %101, 0
  br i1 %104, label %132, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 0, i32 0, i32 0
  %107 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %107, i64 0, i32 3, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %107, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %110

110:                                              ; preds = %125, %105
  %111 = phi %"class.blink::Attribute"* [ %100, %105 ], [ %126, %125 ]
  %112 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %114 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %113, %107
  br i1 %114, label %128, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %117, %118
  br i1 %119, label %120, label %125

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 4, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %122, %123
  br i1 %124, label %128, label %125

125:                                              ; preds = %120, %115
  %126 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %111, i64 1
  %127 = icmp eq %"class.blink::Attribute"* %126, %103
  br i1 %127, label %132, label %110

128:                                              ; preds = %120, %110
  %129 = icmp eq %"class.blink::Attribute"* %111, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %111, i64 0, i32 1
  br label %134

132:                                              ; preds = %125, %128, %99, %80
  %133 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %134

134:                                              ; preds = %130, %132
  %135 = phi %"class.WTF::AtomicString"* [ %133, %132 ], [ %131, %130 ]
  %136 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %135, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %156, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i33
  %148 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %147, i33 1) #12
  %149 = extractvalue { i33, i1 } %148, 1
  %150 = extractvalue { i33, i1 } %148, 0
  %151 = icmp slt i33 %150, 0
  %152 = or i1 %149, %151
  br i1 %152, label %153, label %154, !prof !2

153:                                              ; preds = %144
  tail call void @llvm.trap() #12
  unreachable

154:                                              ; preds = %144
  %155 = trunc i33 %150 to i32
  store i32 %155, i32* %145, align 4
  br label %156

156:                                              ; preds = %154, %139, %134, %78, %63
  %157 = phi %"class.WTF::StringImpl"* [ %61, %63 ], [ %61, %78 ], [ null, %134 ], [ %137, %139 ], [ %137, %154 ]
  ret %"class.WTF::StringImpl"* %157
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink4Node9SetIsLinkEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(136) %"class.blink::HTMLImageLoader"* @_ZNK5blink16HTMLImageElement14GetImageLoaderEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %2, align 8
  ret %"class.blink::HTMLImageLoader"* %3
}

declare void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN5blink16ImageElementBase22ParseImageDecodingModeERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink24GetLoadingAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare i32 @_ZNK5blink10LocalFrame23GetLazyLoadImageSettingEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare void @_ZN5blink11ImageLoader17LoadDeferredImageEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement26InvalidateAttributeMappingEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %7, %1
  tail call void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"* %3) #12
  %14 = bitcast %"class.blink::ElementData"** %4 to %"class.blink::UniqueElementData"**
  %15 = load %"class.blink::UniqueElementData"*, %"class.blink::UniqueElementData"** %14, align 8
  br label %16

16:                                               ; preds = %7, %13
  %17 = phi %"class.blink::UniqueElementData"* [ %15, %13 ], [ %8, %7 ]
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = or i32 %19, 536870912
  store atomic i32 %20, i32* %18 monotonic, align 4
  %21 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.blink::StyleChangeReasonForTracing"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %16, %27, %42
  %45 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason21kPictureSourceChangedE, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %46, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %21, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %2) #12
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #12
  br label %62

62:                                               ; preds = %44, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  ret void
}

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16HTMLImageElement18SupportedImageTypeERKN3WTF6StringEPKNS1_7HashSetIS2_NS1_10StringHashENS1_10HashTraitsIS2_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::HashSet.2174"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ContentType", align 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %7 = bitcast %"class.blink::ContentType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN5blink11ContentTypeC1ERKN3WTF6StringE(%"class.blink::ContentType"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %0) #12
  %8 = call %"class.WTF::StringImpl"* @_ZNK5blink11ContentType7GetTypeEv(%"class.blink::ContentType"* nonnull %4) #12
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::ContentType", %"class.blink::ContentType"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #12
  br label %25

25:                                               ; preds = %24, %21
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  br label %27

27:                                               ; preds = %25, %2
  %28 = phi %"class.WTF::StringImpl"* [ %26, %25 ], [ %8, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %97, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %97, label %34

34:                                               ; preds = %30
  %35 = icmp eq %"class.WTF::HashSet.2174"* %1, null
  br i1 %35, label %95, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.WTF::HashSet.2174", %"class.WTF::HashSet.2174"* %1, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %37, align 8
  %39 = icmp eq %"class.WTF::String"* %38, null
  br i1 %39, label %95, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::HashSet.2174", %"class.WTF::HashSet.2174"* %1, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %42, -1
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = lshr i32 %46, 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %40
  %50 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %51

51:                                               ; preds = %49, %40
  %52 = phi i32 [ %50, %49 ], [ %47, %40 ]
  %53 = and i32 %52, %43
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 %54
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %95, label %59

59:                                               ; preds = %51
  %60 = xor i32 %52, -1
  %61 = lshr i32 %52, 23
  %62 = add i32 %61, %60
  %63 = shl i32 %62, 12
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 7
  %66 = xor i32 %65, %64
  %67 = shl i32 %66, 2
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 20
  %70 = xor i32 %69, %68
  %71 = or i32 %70, 1
  %72 = zext i32 %71 to i64
  br label %73

73:                                               ; preds = %84, %59
  %74 = phi %"class.WTF::StringImpl"* [ %57, %59 ], [ %91, %84 ]
  %75 = phi %"class.WTF::String"* [ %55, %59 ], [ %89, %84 ]
  %76 = phi i64 [ %54, %59 ], [ %88, %84 ]
  %77 = phi i64 [ 0, %59 ], [ %86, %84 ]
  %78 = bitcast %"class.WTF::String"* %75 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, inttoptr (i64 -1 to i8*)
  br i1 %80, label %84, label %81

81:                                               ; preds = %73
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %83 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %74, %"class.WTF::StringImpl"* %82) #12
  br i1 %83, label %93, label %84

84:                                               ; preds = %81, %73
  %85 = icmp eq i64 %77, 0
  %86 = select i1 %85, i64 %72, i64 %77
  %87 = add i64 %86, %76
  %88 = and i64 %87, %44
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 %88
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %95, label %73

93:                                               ; preds = %81
  %94 = icmp eq %"class.WTF::String"* %75, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %84, %93, %51, %36, %34
  %96 = call zeroext i1 @_ZN5blink16MIMETypeRegistry32IsSupportedImagePrefixedMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  br label %97

97:                                               ; preds = %93, %27, %30, %95
  %98 = phi i1 [ %96, %95 ], [ true, %30 ], [ false, %93 ], [ true, %27 ]
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #12
  br label %114

114:                                              ; preds = %97, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret i1 %98
}

declare void @_ZN5blink11ContentTypeC1ERKN3WTF6StringE(%"class.blink::ContentType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11ContentType7GetTypeEv(%"class.blink::ContentType"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry32IsSupportedImagePrefixedMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement33FindBestFitImageFromPictureParentEv(%"class.blink::ImageCandidate"* noalias sret, %"class.blink::HTMLImageElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = alloca %"class.WTF::HashSet.2174", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ImageCandidate", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %1, i64 0, i32 9
  %8 = bitcast %"class.blink::Member.3032"* %7 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %9) #12
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kPictureTagE, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %23 = bitcast %"class.blink::Member.318"* %22 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %26, %28
  br i1 %29, label %40, label %30

30:                                               ; preds = %17, %2, %12
  %31 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 3
  store i32 -1, i32* %38, align 4
  %39 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 4
  store i32 0, i32* %39, align 8
  br label %501

40:                                               ; preds = %17
  %41 = bitcast %"class.WTF::HashSet.2174"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.WTF::HashSet.2174", %"class.WTF::HashSet.2174"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::HashSet.2174", %"class.WTF::HashSet.2174"* %4, i64 0, i32 0, i32 1
  %44 = bitcast %"class.WTF::HashSet.2174"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 20, i1 false) #12
  %45 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %9) #12
  %46 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %47 = and i32 %46, 512
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %40
  call void @_ZN5blink5probe25GetDisabledImageTypesImplEPNS_16ExecutionContextEPN3WTF7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS5_EENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* %45, %"class.WTF::HashSet.2174"* nonnull %4) #12
  br label %50

50:                                               ; preds = %40, %49
  %51 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 1, i32 0, i32 0
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %454, label %54

54:                                               ; preds = %50
  %55 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSourceTagE, align 8
  %56 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %60 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %60, i64 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::String"* %5 to i8*
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.blink::ImageCandidate"* %6 to i8*
  %67 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 2
  %70 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 3
  %71 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %72 = bitcast float* %3 to i8*
  %73 = bitcast %"class.blink::ImageCandidate"* %6 to i64*
  %74 = bitcast %"class.blink::ImageCandidate"* %0 to i64*
  %75 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 1
  %77 = bitcast %"class.WTF::StringView"* %75 to i8*
  %78 = bitcast %"class.WTF::StringView"* %76 to i8*
  %79 = bitcast %"class.blink::ImageCandidate"* %6 to i8*
  %80 = bitcast i32* %70 to i8*
  br label %81

81:                                               ; preds = %54, %450
  %82 = phi %"class.blink::Node"* [ %52, %54 ], [ %452, %450 ]
  %83 = icmp eq %"class.blink::Node"* %82, %9
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %85, align 8
  br label %457

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 48
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %450

91:                                               ; preds = %86
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 1, i32 2
  %94 = bitcast %"class.blink::Member.318"* %93 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %95 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %97, %99
  %101 = bitcast %"class.blink::Node"* %82 to %"class.blink::HTMLSourceElement"*
  br i1 %100, label %102, label %450

102:                                              ; preds = %91
  %103 = bitcast %"class.blink::Node"* %82 to %"class.blink::Element"*
  %104 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 1, i32 3
  %105 = bitcast %"class.blink::Member.320"* %104 to %"class.blink::ElementData"**
  %106 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %105, align 8
  %107 = icmp eq %"class.blink::ElementData"* %106, null
  br i1 %107, label %157, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %106, i64 0, i32 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %108
  %114 = bitcast %"class.blink::ElementData"* %106 to %"class.blink::UniqueElementData"*
  %115 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %106, i64 1, i32 1
  %116 = bitcast %"class.blink::Member.354"* %115 to %"class.blink::Attribute"**
  %117 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %114, i64 0, i32 2, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  br label %125

120:                                              ; preds = %108
  %121 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %106, i64 1
  %122 = bitcast %"class.blink::ElementData"* %121 to %"class.blink::Attribute"*
  %123 = lshr i32 %110, 1
  %124 = and i32 %123, 268435455
  br label %125

125:                                              ; preds = %120, %113
  %126 = phi %"class.blink::Attribute"* [ %122, %120 ], [ %117, %113 ]
  %127 = phi i32 [ %124, %120 ], [ %119, %113 ]
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %126, i64 %128
  %130 = icmp eq i32 %127, 0
  br i1 %130, label %157, label %131

131:                                              ; preds = %125
  %132 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %132, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %135

135:                                              ; preds = %150, %131
  %136 = phi %"class.blink::Attribute"* [ %126, %131 ], [ %151, %150 ]
  %137 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %137, align 8
  %139 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %138, %132
  br i1 %139, label %153, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %142, %143
  br i1 %144, label %145, label %150

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %147, %148
  br i1 %149, label %153, label %150

150:                                              ; preds = %145, %140
  %151 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %136, i64 1
  %152 = icmp eq %"class.blink::Attribute"* %151, %129
  br i1 %152, label %157, label %135

153:                                              ; preds = %145, %135
  %154 = icmp eq %"class.blink::Attribute"* %136, null
  %155 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %136, i64 0, i32 1
  %156 = select i1 %154, %"class.WTF::AtomicString"* %59, %"class.WTF::AtomicString"* %155
  br label %157

157:                                              ; preds = %150, %153, %102, %125
  %158 = phi %"class.WTF::AtomicString"* [ %59, %125 ], [ %59, %102 ], [ %156, %153 ], [ %59, %150 ]
  %159 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %9) #12
  call void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %163, i32 520) #12
  %164 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %105, align 8
  br label %165

165:                                              ; preds = %162, %157
  %166 = phi %"class.blink::ElementData"* [ %164, %162 ], [ %106, %157 ]
  %167 = icmp eq %"class.blink::ElementData"* %166, null
  br i1 %167, label %217, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %166, i64 0, i32 0, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %180, label %173

173:                                              ; preds = %168
  %174 = bitcast %"class.blink::ElementData"* %166 to %"class.blink::UniqueElementData"*
  %175 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %166, i64 1, i32 1
  %176 = bitcast %"class.blink::Member.354"* %175 to %"class.blink::Attribute"**
  %177 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %174, i64 0, i32 2, i32 0, i32 0, i32 2
  %179 = load i32, i32* %178, align 4
  br label %185

180:                                              ; preds = %168
  %181 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %166, i64 1
  %182 = bitcast %"class.blink::ElementData"* %181 to %"class.blink::Attribute"*
  %183 = lshr i32 %170, 1
  %184 = and i32 %183, 268435455
  br label %185

185:                                              ; preds = %180, %173
  %186 = phi %"class.blink::Attribute"* [ %182, %180 ], [ %177, %173 ]
  %187 = phi i32 [ %184, %180 ], [ %179, %173 ]
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %186, i64 %188
  %190 = icmp eq i32 %187, 0
  br i1 %190, label %217, label %191

191:                                              ; preds = %185
  %192 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %193 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %192, i64 0, i32 3, i32 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %192, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %195

195:                                              ; preds = %210, %191
  %196 = phi %"class.blink::Attribute"* [ %186, %191 ], [ %211, %210 ]
  %197 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %197, align 8
  %199 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %198, %192
  br i1 %199, label %213, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 3, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %202, %203
  br i1 %204, label %205, label %210

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 4, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %207, %208
  br i1 %209, label %213, label %210

210:                                              ; preds = %205, %200
  %211 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 1
  %212 = icmp eq %"class.blink::Attribute"* %211, %189
  br i1 %212, label %217, label %195

213:                                              ; preds = %205, %195
  %214 = icmp eq %"class.blink::Attribute"* %196, null
  %215 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %196, i64 0, i32 1
  %216 = select i1 %214, %"class.WTF::AtomicString"* %59, %"class.WTF::AtomicString"* %215
  br label %217

217:                                              ; preds = %210, %213, %165, %185
  %218 = phi %"class.WTF::AtomicString"* [ %59, %185 ], [ %59, %165 ], [ %216, %213 ], [ %59, %210 ]
  %219 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %218, i64 0, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %450, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %239

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i33
  %231 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %230, i33 1) #12
  %232 = extractvalue { i33, i1 } %231, 1
  %233 = extractvalue { i33, i1 } %231, 0
  %234 = icmp slt i33 %233, 0
  %235 = or i1 %232, %234
  br i1 %235, label %236, label %237, !prof !2

236:                                              ; preds = %227
  call void @llvm.trap() #12
  unreachable

237:                                              ; preds = %227
  %238 = trunc i33 %233 to i32
  store i32 %238, i32* %228, align 4
  br label %239

239:                                              ; preds = %237, %222
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %435, label %243

243:                                              ; preds = %239
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %63, align 8
  %244 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %105, align 8
  %245 = icmp eq %"class.blink::ElementData"* %244, null
  br i1 %245, label %295, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %244, i64 0, i32 0, i32 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %258, label %251

251:                                              ; preds = %246
  %252 = bitcast %"class.blink::ElementData"* %244 to %"class.blink::UniqueElementData"*
  %253 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %244, i64 1, i32 1
  %254 = bitcast %"class.blink::Member.354"* %253 to %"class.blink::Attribute"**
  %255 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %252, i64 0, i32 2, i32 0, i32 0, i32 2
  %257 = load i32, i32* %256, align 4
  br label %263

258:                                              ; preds = %246
  %259 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %244, i64 1
  %260 = bitcast %"class.blink::ElementData"* %259 to %"class.blink::Attribute"*
  %261 = lshr i32 %248, 1
  %262 = and i32 %261, 268435455
  br label %263

263:                                              ; preds = %258, %251
  %264 = phi %"class.blink::Attribute"* [ %260, %258 ], [ %255, %251 ]
  %265 = phi i32 [ %262, %258 ], [ %257, %251 ]
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %264, i64 %266
  %268 = icmp eq i32 %265, 0
  br i1 %268, label %295, label %269

269:                                              ; preds = %263
  %270 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %271 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %270, i64 0, i32 3, i32 0, i32 0, i32 0
  %272 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %270, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %273

273:                                              ; preds = %288, %269
  %274 = phi %"class.blink::Attribute"* [ %264, %269 ], [ %289, %288 ]
  %275 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %274, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %275, align 8
  %277 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %276, %270
  br i1 %277, label %291, label %278

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %276, i64 0, i32 3, i32 0, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %280, %281
  br i1 %282, label %283, label %288

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %276, i64 0, i32 4, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %285, %286
  br i1 %287, label %291, label %288

288:                                              ; preds = %283, %278
  %289 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %274, i64 1
  %290 = icmp eq %"class.blink::Attribute"* %289, %267
  br i1 %290, label %295, label %273

291:                                              ; preds = %283, %273
  %292 = icmp eq %"class.blink::Attribute"* %274, null
  %293 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %274, i64 0, i32 1
  %294 = select i1 %292, %"class.WTF::AtomicString"* %59, %"class.WTF::AtomicString"* %293
  br label %295

295:                                              ; preds = %288, %291, %243, %263
  %296 = phi %"class.WTF::AtomicString"* [ %59, %263 ], [ %59, %243 ], [ %294, %291 ], [ %59, %288 ]
  %297 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %296, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  store %"class.WTF::StringImpl"* %298, %"class.WTF::StringImpl"** %63, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %317, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %317

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = zext i32 %307 to i33
  %309 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %308, i33 1) #12
  %310 = extractvalue { i33, i1 } %309, 1
  %311 = extractvalue { i33, i1 } %309, 0
  %312 = icmp slt i33 %311, 0
  %313 = or i1 %310, %312
  br i1 %313, label %314, label %315, !prof !2

314:                                              ; preds = %305
  call void @llvm.trap() #12
  unreachable

315:                                              ; preds = %305
  %316 = trunc i33 %311 to i32
  store i32 %316, i32* %306, align 4
  br label %317

317:                                              ; preds = %295, %300, %315
  %318 = call zeroext i1 @_ZN5blink16HTMLImageElement18SupportedImageTypeERKN3WTF6StringEPKNS1_7HashSetIS2_NS1_10StringHashENS1_10HashTraitsIS2_EENS1_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::HashSet.2174"* nonnull %4)
  br i1 %318, label %319, label %417

319:                                              ; preds = %317
  %320 = call zeroext i1 @_ZNK5blink17HTMLSourceElement17MediaQueryMatchesEv(%"class.blink::HTMLSourceElement"* nonnull %101) #12
  br i1 %320, label %321, label %417

321:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %66) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %69, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 -86, i64 12, i1 false)
  %322 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %323 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %322, i64 0, i32 2, i32 0, i32 0
  %324 = load %"class.blink::Document"*, %"class.blink::Document"** %323, align 8
  %325 = call float @_ZNK5blink8Document16DevicePixelRatioEv(%"class.blink::Document"* %324) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #12
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %326 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %327 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %326, i64 0, i32 2, i32 0, i32 0
  %328 = load %"class.blink::Document"*, %"class.blink::Document"** %327, align 8
  %329 = call fastcc zeroext i1 @_ZN5blinkL15SourceSizeValueEPKNS_7ElementERNS_8DocumentERf(%"class.blink::Element"* nonnull %103, %"class.blink::Document"* dereferenceable(2848) %328, float* nonnull dereferenceable(4) %3) #12
  %330 = load float, float* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #12
  %331 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %105, align 8
  %332 = icmp eq %"class.blink::ElementData"* %331, null
  br i1 %332, label %382, label %333

333:                                              ; preds = %321
  %334 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %331, i64 0, i32 0, i32 0, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = and i32 %335, 1
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %345, label %338

338:                                              ; preds = %333
  %339 = bitcast %"class.blink::ElementData"* %331 to %"class.blink::UniqueElementData"*
  %340 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %331, i64 1, i32 1
  %341 = bitcast %"class.blink::Member.354"* %340 to %"class.blink::Attribute"**
  %342 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %341, align 8
  %343 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %339, i64 0, i32 2, i32 0, i32 0, i32 2
  %344 = load i32, i32* %343, align 4
  br label %350

345:                                              ; preds = %333
  %346 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %331, i64 1
  %347 = bitcast %"class.blink::ElementData"* %346 to %"class.blink::Attribute"*
  %348 = lshr i32 %335, 1
  %349 = and i32 %348, 268435455
  br label %350

350:                                              ; preds = %345, %338
  %351 = phi %"class.blink::Attribute"* [ %347, %345 ], [ %342, %338 ]
  %352 = phi i32 [ %349, %345 ], [ %344, %338 ]
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %351, i64 %353
  %355 = icmp eq i32 %352, 0
  br i1 %355, label %382, label %356

356:                                              ; preds = %350
  %357 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %358 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %357, i64 0, i32 3, i32 0, i32 0, i32 0
  %359 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %357, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %360

360:                                              ; preds = %375, %356
  %361 = phi %"class.blink::Attribute"* [ %351, %356 ], [ %376, %375 ]
  %362 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %361, i64 0, i32 0, i32 0, i32 0
  %363 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %362, align 8
  %364 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %363, %357
  br i1 %364, label %378, label %365

365:                                              ; preds = %360
  %366 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %363, i64 0, i32 3, i32 0, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %369 = icmp eq %"class.WTF::StringImpl"* %367, %368
  br i1 %369, label %370, label %375

370:                                              ; preds = %365
  %371 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %363, i64 0, i32 4, i32 0, i32 0, i32 0
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %371, align 8
  %373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %374 = icmp eq %"class.WTF::StringImpl"* %372, %373
  br i1 %374, label %378, label %375

375:                                              ; preds = %370, %365
  %376 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %361, i64 1
  %377 = icmp eq %"class.blink::Attribute"* %376, %354
  br i1 %377, label %382, label %360

378:                                              ; preds = %370, %360
  %379 = icmp eq %"class.blink::Attribute"* %361, null
  %380 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %361, i64 0, i32 1
  %381 = select i1 %379, %"class.WTF::AtomicString"* %59, %"class.WTF::AtomicString"* %380
  br label %382

382:                                              ; preds = %375, %378, %321, %350
  %383 = phi %"class.WTF::AtomicString"* [ %59, %350 ], [ %59, %321 ], [ %381, %378 ], [ %59, %375 ]
  %384 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %383, i64 0, i32 0
  %385 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %386 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %385, i64 0, i32 2, i32 0, i32 0
  %387 = load %"class.blink::Document"*, %"class.blink::Document"** %386, align 8
  call void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %6, float %325, float %330, %"class.WTF::String"* dereferenceable(8) %384, %"class.blink::Document"* %387) #12
  %388 = load i32, i32* %68, align 8
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %399, label %390

390:                                              ; preds = %382
  %391 = ptrtoint %"class.blink::Node"* %82 to i64
  store atomic i64 %391, i64* %8 monotonic, align 8
  %392 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %397, label %394

394:                                              ; preds = %390
  %395 = bitcast %"class.blink::Node"* %82 to i8*
  %396 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %395) #12
  br label %397

397:                                              ; preds = %394, %390
  %398 = load i64, i64* %73, align 8
  store i64 %398, i64* %74, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 36, i1 false) #12
  br label %415

399:                                              ; preds = %382
  %400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %401 = icmp eq %"class.WTF::StringImpl"* %400, null
  br i1 %401, label %415, label %402

402:                                              ; preds = %399
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = and i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 0
  %408 = load i32, i32* %407, align 4
  br i1 %406, label %409, label %411

409:                                              ; preds = %402
  %410 = add i32 %408, -1
  store i32 %410, i32* %407, align 4
  br label %411

411:                                              ; preds = %409, %402
  %412 = phi i32 [ %410, %409 ], [ %408, %402 ]
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %415

414:                                              ; preds = %411
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %400) #12
  br label %415

415:                                              ; preds = %397, %399, %411, %414
  %416 = phi i32 [ 1, %397 ], [ 4, %399 ], [ 4, %411 ], [ 4, %414 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %66) #12
  br label %417

417:                                              ; preds = %319, %317, %415
  %418 = phi i32 [ %416, %415 ], [ 4, %317 ], [ 4, %319 ]
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %434, label %421

421:                                              ; preds = %417
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  br i1 %425, label %428, label %430

428:                                              ; preds = %421
  %429 = add i32 %427, -1
  store i32 %429, i32* %426, align 4
  br label %430

430:                                              ; preds = %428, %421
  %431 = phi i32 [ %429, %428 ], [ %427, %421 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %419) #12
  br label %434

434:                                              ; preds = %433, %430, %417
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12
  br label %435

435:                                              ; preds = %434, %239
  %436 = phi i32 [ %418, %434 ], [ 4, %239 ]
  %437 = load atomic i32, i32* %223 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #12
  br label %448

448:                                              ; preds = %447, %444
  %449 = icmp eq i32 %436, 4
  br i1 %449, label %450, label %466

450:                                              ; preds = %91, %217, %86, %448
  %451 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 5, i32 0, i32 0
  %452 = load %"class.blink::Node"*, %"class.blink::Node"** %451, align 8
  %453 = icmp eq %"class.blink::Node"* %452, null
  br i1 %453, label %454, label %81

454:                                              ; preds = %450, %50
  %455 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %455, align 8
  %456 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  br label %457

457:                                              ; preds = %454, %84
  %458 = phi %"class.WTF::StringView"* [ %75, %84 ], [ %456, %454 ]
  %459 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %459, align 8
  %460 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 1
  store i8* null, i8** %460, align 8
  %461 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %462 = bitcast %"class.WTF::StringView"* %458 to i64*
  store i64 %461, i64* %462, align 8
  %463 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %463, align 8
  %464 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 3
  store i32 -1, i32* %464, align 4
  %465 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 4
  store i32 0, i32* %465, align 8
  br label %466

466:                                              ; preds = %448, %457
  %467 = load %"class.WTF::String"*, %"class.WTF::String"** %42, align 8
  %468 = icmp eq %"class.WTF::String"* %467, null
  br i1 %468, label %500, label %469, !prof !3

469:                                              ; preds = %466
  %470 = load i32, i32* %43, align 8
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %498, label %472

472:                                              ; preds = %469
  %473 = zext i32 %470 to i64
  br label %474

474:                                              ; preds = %495, %472
  %475 = phi i64 [ 0, %472 ], [ %496, %495 ]
  %476 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %467, i64 %475
  %477 = bitcast %"class.WTF::String"* %476 to i8**
  %478 = load i8*, i8** %477, align 8
  %479 = bitcast i8* %478 to %"class.WTF::StringImpl"*
  %480 = ptrtoint i8* %478 to i64
  switch i64 %480, label %481 [
    i64 -1, label %495
    i64 0, label %495
  ]

481:                                              ; preds = %474
  %482 = getelementptr inbounds i8, i8* %478, i64 8
  %483 = bitcast i8* %482 to i32*
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = bitcast i8* %478 to i32*
  %488 = load i32, i32* %487, align 4
  br i1 %486, label %489, label %491

489:                                              ; preds = %481
  %490 = add i32 %488, -1
  store i32 %490, i32* %487, align 4
  br label %491

491:                                              ; preds = %489, %481
  %492 = phi i32 [ %490, %489 ], [ %488, %481 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %479) #12
  br label %495

495:                                              ; preds = %494, %491, %474, %474
  %496 = add nuw nsw i64 %475, 1
  %497 = icmp eq i64 %496, %473
  br i1 %497, label %498, label %474

498:                                              ; preds = %495, %469
  %499 = bitcast %"class.WTF::String"* %467 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %499) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %42, align 8
  br label %500

500:                                              ; preds = %466, %498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  br label %501

501:                                              ; preds = %500, %30
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLSourceElement17MediaQueryMatchesEv(%"class.blink::HTMLSourceElement"*) local_unnamed_addr #2

declare void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* sret, float, float, %"class.WTF::String"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #2

declare float @_ZNK5blink8Document16DevicePixelRatioEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink16HTMLImageElement10SourceSizeERNS_7ElementE(%"class.blink::HTMLImageElement"* nocapture readonly, %"class.blink::Element"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #12
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = call fastcc zeroext i1 @_ZN5blinkL15SourceSizeValueEPKNS_7ElementERNS_8DocumentERf(%"class.blink::Element"* %1, %"class.blink::Document"* dereferenceable(2848) %8, float* nonnull dereferenceable(4) %3)
  %10 = load float, float* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #12
  ret float %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink16HTMLImageElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::HTMLImageElement"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %5, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::ContentData"*, %"class.blink::ContentData"** %6, align 8
  %8 = icmp eq %"class.blink::ContentData"* %7, null
  br i1 %8, label %36, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::ContentData"* %7 to i1 (%"class.blink::ContentData"*)***
  %11 = load i1 (%"class.blink::ContentData"*)**, i1 (%"class.blink::ContentData"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %11, i64 3
  %13 = load i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::ContentData"* nonnull %7) #12
  br i1 %14, label %15, label %36

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::ContentData", %"class.blink::ContentData"* %7, i64 1
  %17 = bitcast %"class.blink::ContentData"* %16 to %"class.blink::StyleImage"**
  %18 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %17, align 8
  %19 = icmp eq %"class.blink::StyleImage"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::StyleImage"* %18 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %22 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %22, i64 15
  %24 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %23, align 8
  %25 = tail call %"class.blink::ImageResourceContent"* %24(%"class.blink::StyleImage"* nonnull %18) #12
  %26 = icmp eq %"class.blink::ImageResourceContent"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %21, align 8
  %29 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %28, i64 15
  %30 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %29, align 8
  %31 = tail call %"class.blink::ImageResourceContent"* %30(%"class.blink::StyleImage"* nonnull %18) #12
  %32 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"* %31) #12
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %20, %15
  %34 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %35 = tail call %"class.blink::LayoutObject"* @_ZN5blink12LayoutObject12CreateObjectEPNS_7ElementERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"* %34, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #12
  br label %59

36:                                               ; preds = %27, %3, %9
  %37 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 10
  %38 = load i8, i8* %37, align 8
  switch i8 %38, label %59 [
    i8 1, label %39
    i8 0, label %43
  ]

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateBlockFlowERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %40, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #12
  %42 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %59

43:                                               ; preds = %36
  %44 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 248) #12
  %45 = bitcast i8* %44 to %"class.blink::LayoutImage"*
  %46 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11LayoutImageC1EPNS_7ElementE(%"class.blink::LayoutImage"* %45, %"class.blink::Element"* %46) #12
  %47 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19LayoutImageResourceEEEPhm(i64 24) #12
  %48 = bitcast i8* %47 to %"class.blink::LayoutImageResource"*
  tail call void @_ZN5blink19LayoutImageResourceC1Ev(%"class.blink::LayoutImageResource"* %48) #12
  %49 = getelementptr inbounds i8, i8* %47, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  tail call void @_ZN5blink11LayoutImage16SetImageResourceEPNS_19LayoutImageResourceE(%"class.blink::LayoutImage"* %45, %"class.blink::LayoutImageResource"* %48) #12
  %53 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 8
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds i8, i8* %44, i64 244
  %57 = bitcast i8* %56 to i32*
  store i32 %55, i32* %57, align 4
  %58 = bitcast i8* %44 to %"class.blink::LayoutObject"*
  br label %59

59:                                               ; preds = %33, %36, %43, %39
  %60 = phi %"class.blink::LayoutObject"* [ %58, %43 ], [ %42, %39 ], [ %35, %33 ], [ null, %36 ]
  ret %"class.blink::LayoutObject"* %60
}

declare zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare %"class.blink::LayoutObject"* @_ZN5blink12LayoutObject12CreateObjectEPNS_7ElementERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #2

declare %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateBlockFlowERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #2

declare i8* @_ZN5blink12LayoutObjectnwEm(i64) local_unnamed_addr #2

declare void @_ZN5blink11LayoutImageC1EPNS_7ElementE(%"class.blink::LayoutImage"*, %"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink11LayoutImage16SetImageResourceEPNS_19LayoutImageResourceE(%"class.blink::LayoutImage"*, %"class.blink::LayoutImageResource"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::HTMLImageElement"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"* %3, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #12
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %53, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutObject"* %19 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* nonnull %19, i32 12) #12
  br i1 %26, label %27, label %53

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 2, i32 7
  %29 = bitcast %"class.blink::LayoutObject"** %28 to %"class.blink::LayoutImageResource"**
  %30 = load %"class.blink::LayoutImageResource"*, %"class.blink::LayoutImageResource"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %27
  tail call void @_ZN5blink19LayoutImageResource14UseBrokenImageEv(%"class.blink::LayoutImageResource"* %30) #12
  br label %36

36:                                               ; preds = %27, %35
  %37 = bitcast %"class.blink::LayoutImageResource"* %30 to i1 (%"class.blink::LayoutImageResource"*)***
  %38 = load i1 (%"class.blink::LayoutImageResource"*)**, i1 (%"class.blink::LayoutImageResource"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutImageResource"*)*, i1 (%"class.blink::LayoutImageResource"*)** %38, i64 4
  %40 = load i1 (%"class.blink::LayoutImageResource"*)*, i1 (%"class.blink::LayoutImageResource"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutImageResource"* %30) #12
  br i1 %41, label %53, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %44, i64 0, i32 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %45, align 8
  %47 = icmp eq %"class.blink::ImageResourceContent"* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::LayoutImageResource", %"class.blink::LayoutImageResource"* %30, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %49, align 8
  %51 = icmp eq %"class.blink::ImageResourceContent"* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48, %42
  tail call void @_ZN5blink19LayoutImageResource16SetImageResourceEPNS_20ImageResourceContentE(%"class.blink::LayoutImageResource"* %30, %"class.blink::ImageResourceContent"* %46) #12
  br label %53

53:                                               ; preds = %21, %15, %52, %36, %48
  ret void
}

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink19LayoutImageResource14UseBrokenImageEv(%"class.blink::LayoutImageResource"*) local_unnamed_addr #2

declare void @_ZN5blink19LayoutImageResource16SetImageResourceEPNS_20ImageResourceContentE(%"class.blink::LayoutImageResource"*, %"class.blink::ImageResourceContent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16HTMLImageElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLImageElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ImageCandidate", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %9) #12
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"class.blink::Node"* [ %15, %12 ], [ %9, %8 ]
  %14 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %13) #12
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  %16 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %15) #12
  %17 = icmp eq %"class.blink::ContainerNode"* %16, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %8
  %19 = phi %"class.blink::Node"* [ %9, %8 ], [ %15, %12 ]
  %20 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %22) #12
  %24 = icmp eq %"class.blink::ContainerNode"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %18, %25
  %26 = phi %"class.blink::Node"* [ %28, %25 ], [ %22, %18 ]
  %27 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %26) #12
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %27, i64 0, i32 0
  %29 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %28) #12
  %30 = icmp eq %"class.blink::ContainerNode"* %29, null
  br i1 %30, label %31, label %25

31:                                               ; preds = %25, %18
  %32 = phi %"class.blink::Node"* [ %22, %18 ], [ %28, %25 ]
  %33 = icmp eq %"class.blink::Node"* %19, %32
  br i1 %33, label %63, label %34

34:                                               ; preds = %31
  %35 = load i8, i8* %4, align 1
  br label %36

36:                                               ; preds = %34, %2
  %37 = phi i8 [ %35, %34 ], [ %5, %2 ]
  %38 = and i8 %37, -2
  store i8 %38, i8* %4, align 1
  %39 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %40 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement16FindFormAncestorEv(%"class.blink::HTMLElement"* %39) #12
  %41 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6
  %42 = getelementptr inbounds %"class.blink::Member.3012", %"class.blink::Member.3012"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %42, align 8
  %44 = icmp eq %"class.blink::HTMLFormElement"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = icmp eq %"class.blink::HTMLFormElement"* %40, %43
  br i1 %46, label %63, label %47

47:                                               ; preds = %45
  tail call void @_ZN5blink15HTMLFormElement12DisassociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* nonnull %43, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  br label %48

48:                                               ; preds = %47, %36
  %49 = icmp eq %"class.blink::HTMLFormElement"* %40, null
  br i1 %49, label %61, label %50

50:                                               ; preds = %48
  %51 = ptrtoint %"class.blink::HTMLFormElement"* %40 to i64
  %52 = bitcast %"class.blink::Member.3012"* %41 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.blink::HTMLFormElement"* %40 to i8*
  %57 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %56) #12
  %58 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %42, align 8
  br label %59

59:                                               ; preds = %55, %50
  %60 = phi %"class.blink::HTMLFormElement"* [ %40, %50 ], [ %58, %55 ]
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* %60, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  br label %63

61:                                               ; preds = %48
  %62 = bitcast %"class.blink::Member.3012"* %41 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  br label %63

63:                                               ; preds = %31, %61, %59, %45
  %64 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 5, i32 0, i32 0
  %65 = load %"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::HTMLImageElement::ViewportChangeListener"** %64, align 8
  %66 = icmp eq %"class.blink::HTMLImageElement::ViewportChangeListener"* %65, null
  br i1 %66, label %75, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::Document"*, %"class.blink::Document"** %70, align 8
  %72 = tail call dereferenceable(112) %"class.blink::MediaQueryMatcher"* @_ZN5blink8Document20GetMediaQueryMatcherEv(%"class.blink::Document"* %71) #12
  %73 = load %"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::HTMLImageElement::ViewportChangeListener"** %64, align 8
  %74 = getelementptr inbounds %"class.blink::HTMLImageElement::ViewportChangeListener", %"class.blink::HTMLImageElement::ViewportChangeListener"* %73, i64 0, i32 0
  tail call void @_ZN5blink17MediaQueryMatcher19AddViewportListenerEPNS_22MediaQueryListListenerE(%"class.blink::MediaQueryMatcher"* %72, %"class.blink::MediaQueryListListener"* %74) #12
  br label %75

75:                                               ; preds = %63, %67
  %76 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %76) #12
  %78 = icmp eq %"class.blink::ContainerNode"* %77, null
  br i1 %78, label %100, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %77, i64 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 48
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %100

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %77, i64 0, i32 0
  %86 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kPictureTagE, align 8
  %87 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 1, i32 2
  %90 = bitcast %"class.blink::Member.318"* %89 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %93, %95
  br i1 %96, label %97, label %100

97:                                               ; preds = %84
  %98 = bitcast %"class.blink::ContainerNode"* %77 to %"class.blink::HTMLPictureElement"*
  tail call void @_ZN5blink18HTMLPictureElement27AddListenerToSourceChildrenEv(%"class.blink::HTMLPictureElement"* nonnull %98) #12
  %99 = icmp ne %"class.blink::ContainerNode"* %77, %1
  br label %100

100:                                              ; preds = %84, %75, %79, %97
  %101 = phi i1 [ %99, %97 ], [ true, %84 ], [ true, %79 ], [ true, %75 ]
  %102 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %103, i64 0, i32 2, i32 0, i32 0
  %105 = load %"class.blink::Document"*, %"class.blink::Document"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %105, i64 0, i32 5, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, -2
  %109 = icmp ugt i32 %108, 17
  %110 = or i1 %101, %109
  br i1 %110, label %155, label %111

111:                                              ; preds = %100
  %112 = bitcast %"class.blink::ImageCandidate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %112) #12
  %113 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %3, i64 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %3, i64 0, i32 1, i32 2
  %115 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %3, i64 0, i32 2
  %116 = bitcast %"class.blink::ImageCandidate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %115, align 8
  %117 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %3, i64 0, i32 3
  %118 = bitcast i32* %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 -86, i64 12, i1 false)
  call void @_ZN5blink16HTMLImageElement33FindBestFitImageFromPictureParentEv(%"class.blink::ImageCandidate"* nonnull sret %3, %"class.blink::HTMLImageElement"* %0)
  %119 = load i32, i32* %114, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %138, label %121

121:                                              ; preds = %111
  call void @_ZN5blink16HTMLImageElement26InvalidateAttributeMappingEv(%"class.blink::HTMLImageElement"* %0)
  call void @_ZN5blink16HTMLImageElement37SetBestFitURLAndDPRFromImageCandidateERKNS_14ImageCandidateE(%"class.blink::HTMLImageElement"* %0, %"class.blink::ImageCandidate"* nonnull dereferenceable(48) %3)
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #12
  br label %137

137:                                              ; preds = %121, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %112) #12
  br label %162

138:                                              ; preds = %111
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #12
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %112) #12
  br label %155

155:                                              ; preds = %100, %154
  %156 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %157 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %157, i64 0, i32 0
  %159 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 12
  %160 = load i32, i32* %159, align 4
  %161 = call zeroext i1 @_ZNK5blink11ImageLoader26ShouldUpdateOnInsertedIntoERNS_13ContainerNodeEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %158, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 %160) #12
  br i1 %161, label %162, label %168

162:                                              ; preds = %137, %155
  %163 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %164 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %164, i64 0, i32 0
  %166 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 12
  %167 = load i32, i32* %166, align 4
  call void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %165, i32 0, i32 %167) #12
  br label %168

168:                                              ; preds = %162, %155
  %169 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %170 = call i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %169, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  ret i32 %170
}

declare void @_ZN5blink18HTMLPictureElement27AddListenerToSourceChildrenEv(%"class.blink::HTMLPictureElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink11ImageLoader26ShouldUpdateOnInsertedIntoERNS_13ContainerNodeEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"*, %"class.blink::ContainerNode"* dereferenceable(80), i32) local_unnamed_addr #2

declare i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLImageElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16HTMLImageElement26InvalidateAttributeMappingEv(%"class.blink::HTMLImageElement"* %0)
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLFormElement"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %7) #12
  %9 = icmp eq %"class.blink::ContainerNode"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::Node"* [ %13, %10 ], [ %7, %6 ]
  %12 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %11) #12
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %12, i64 0, i32 0
  %14 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %13) #12
  %15 = icmp eq %"class.blink::ContainerNode"* %14, null
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %6
  %17 = phi %"class.blink::Node"* [ %7, %6 ], [ %13, %10 ]
  %18 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %18) #12
  %20 = icmp eq %"class.blink::ContainerNode"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %16, %21
  %22 = phi %"class.blink::Node"* [ %24, %21 ], [ %18, %16 ]
  %23 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %22) #12
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0
  %25 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %24) #12
  %26 = icmp eq %"class.blink::ContainerNode"* %25, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %16
  %28 = phi %"class.blink::Node"* [ %18, %16 ], [ %24, %21 ]
  %29 = icmp eq %"class.blink::Node"* %17, %28
  br i1 %29, label %58, label %30

30:                                               ; preds = %27, %2
  %31 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, -2
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  %35 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement16FindFormAncestorEv(%"class.blink::HTMLElement"* %34) #12
  %36 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6
  %37 = getelementptr inbounds %"class.blink::Member.3012", %"class.blink::Member.3012"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %37, align 8
  %39 = icmp eq %"class.blink::HTMLFormElement"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %30
  %41 = icmp eq %"class.blink::HTMLFormElement"* %35, %38
  br i1 %41, label %58, label %42

42:                                               ; preds = %40
  tail call void @_ZN5blink15HTMLFormElement12DisassociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* nonnull %38, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  br label %43

43:                                               ; preds = %42, %30
  %44 = icmp eq %"class.blink::HTMLFormElement"* %35, null
  br i1 %44, label %56, label %45

45:                                               ; preds = %43
  %46 = ptrtoint %"class.blink::HTMLFormElement"* %35 to i64
  %47 = bitcast %"class.blink::Member.3012"* %36 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::HTMLFormElement"* %35 to i8*
  %52 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %51) #12
  %53 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %37, align 8
  br label %54

54:                                               ; preds = %50, %45
  %55 = phi %"class.blink::HTMLFormElement"* [ %35, %45 ], [ %53, %50 ]
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* %55, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  br label %58

56:                                               ; preds = %43
  %57 = bitcast %"class.blink::Member.3012"* %36 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  br label %58

58:                                               ; preds = %27, %56, %54, %40
  %59 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 5, i32 0, i32 0
  %60 = load %"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::HTMLImageElement::ViewportChangeListener"** %59, align 8
  %61 = icmp eq %"class.blink::HTMLImageElement::ViewportChangeListener"* %60, null
  br i1 %61, label %93, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %65, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::Document"*, %"class.blink::Document"** %66, align 8
  %68 = tail call dereferenceable(112) %"class.blink::MediaQueryMatcher"* @_ZN5blink8Document20GetMediaQueryMatcherEv(%"class.blink::Document"* %67) #12
  %69 = load %"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::HTMLImageElement::ViewportChangeListener"** %59, align 8
  %70 = getelementptr inbounds %"class.blink::HTMLImageElement::ViewportChangeListener", %"class.blink::HTMLImageElement::ViewportChangeListener"* %69, i64 0, i32 0
  tail call void @_ZN5blink17MediaQueryMatcher22RemoveViewportListenerEPNS_22MediaQueryListListenerE(%"class.blink::MediaQueryMatcher"* %68, %"class.blink::MediaQueryListListener"* %70) #12
  %71 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %63) #12
  %72 = icmp eq %"class.blink::ContainerNode"* %71, null
  br i1 %72, label %93, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %71, i64 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, 48
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %93

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %71, i64 0, i32 0
  %80 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kPictureTagE, align 8
  %81 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %79, i64 1, i32 2
  %84 = bitcast %"class.blink::Member.318"* %83 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %87, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %78
  %92 = bitcast %"class.blink::ContainerNode"* %71 to %"class.blink::HTMLPictureElement"*
  tail call void @_ZN5blink18HTMLPictureElement32RemoveListenerFromSourceChildrenEv(%"class.blink::HTMLPictureElement"* nonnull %92) #12
  br label %93

93:                                               ; preds = %78, %58, %62, %73, %91
  %94 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %94, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  ret void
}

declare void @_ZN5blink18HTMLPictureElement32RemoveListenerFromSourceChildrenEv(%"class.blink::HTMLPictureElement"*) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16HTMLImageElement5widthEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %3) #12
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %9, i32 15) #12
  br label %10

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %10
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %28, label %102

28:                                               ; preds = %22
  %29 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #12
  store i32 0, i32* %2, align 4
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %31, align 8
  %33 = icmp eq %"class.blink::ElementData"* %32, null
  br i1 %33, label %84, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.354"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %84, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %77, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %78, %77 ]
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %65, %59
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %74, %75
  br i1 %76, label %80, label %77

77:                                               ; preds = %72, %67
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %79 = icmp eq %"class.blink::Attribute"* %78, %55
  br i1 %79, label %84, label %62

80:                                               ; preds = %72, %62
  %81 = icmp eq %"class.blink::Attribute"* %63, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 1
  br label %86

84:                                               ; preds = %77, %80, %51, %28
  %85 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %86

86:                                               ; preds = %82, %84
  %87 = phi %"class.WTF::AtomicString"* [ %85, %84 ], [ %83, %82 ]
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0
  %89 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8) %88, i32* nonnull dereferenceable(4) %2) #12
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  br label %104

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %94 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %94, i64 0, i32 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %95, align 8
  %97 = icmp eq %"class.blink::ImageResourceContent"* %96, null
  br i1 %97, label %98, label %99

98:                                               ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  br label %102

99:                                               ; preds = %92
  %100 = call i64 @_ZNK5blink20ImageResourceContent13IntrinsicSizeENS_27RespectImageOrientationEnumE(%"class.blink::ImageResourceContent"* nonnull %96, i32 1) #12
  %101 = trunc i64 %100 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  br label %104

102:                                              ; preds = %98, %22
  %103 = call i32 @_ZNK5blink16HTMLImageElement14LayoutBoxWidthEv(%"class.blink::HTMLImageElement"* %0)
  br label %104

104:                                              ; preds = %99, %90, %102
  %105 = phi i32 [ %103, %102 ], [ %101, %99 ], [ %91, %90 ]
  ret i32 %105
}

declare zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #2

declare i64 @_ZNK5blink20ImageResourceContent13IntrinsicSizeENS_27RespectImageOrientationEnumE(%"class.blink::ImageResourceContent"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLImageElement14LayoutBoxWidthEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %2) #12
  %4 = icmp eq %"class.blink::LayoutBox"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %3) #12
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0
  %8 = bitcast %"class.blink::LayoutBox"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %9, i64 120
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %10, align 8
  %12 = tail call i32 %11(%"class.blink::LayoutBoxModelObject"* %7) #12
  %13 = icmp sgt i32 %12, -1
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %6, i32 %12) #12
  %16 = extractvalue { i32, i1 } %15, 1
  %17 = extractvalue { i32, i1 } %15, 0
  %18 = select i1 %16, i32 %14, i32 %17, !prof !2
  %19 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %8, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %19, i64 121
  %21 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %20, align 8
  %22 = tail call i32 %21(%"class.blink::LayoutBoxModelObject"* %7) #12
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %18, i32 %22) #12
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0, i32 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %36, i64 0, i32 6
  %38 = load float, float* %37, align 8
  %39 = sitofp i32 %30 to float
  %40 = fmul float %39, 1.562500e-02
  %41 = fdiv float %40, %38
  %42 = fmul float %41, 6.400000e+01
  %43 = fcmp ult float %42, 0xC1E0000000000000
  %44 = fcmp ugt float %42, 0x41DFFFFFE0000000
  %45 = fcmp ogt float %42, 0xC1E0000000000000
  %46 = select i1 %45, float %42, float 0xC1E0000000000000
  %47 = fptosi float %46 to i32
  %48 = select i1 %43, i32 0, i32 2147483647
  %49 = select i1 %44, i32 %48, i32 %47
  %50 = sdiv i32 %49, 64
  %51 = srem i32 %49, 64
  %52 = add nsw i32 %51, 32
  %53 = ashr i32 %52, 6
  %54 = add nsw i32 %53, %50
  br label %55

55:                                               ; preds = %1, %5
  %56 = phi i32 [ %54, %5 ], [ 0, %1 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16HTMLImageElement6heightEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %3) #12
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %9, i32 15) #12
  br label %10

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %10
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %28, label %103

28:                                               ; preds = %22
  %29 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #12
  store i32 0, i32* %2, align 4
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %31, align 8
  %33 = icmp eq %"class.blink::ElementData"* %32, null
  br i1 %33, label %84, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.354"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %84, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %77, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %78, %77 ]
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %65, %59
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %74, %75
  br i1 %76, label %80, label %77

77:                                               ; preds = %72, %67
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %79 = icmp eq %"class.blink::Attribute"* %78, %55
  br i1 %79, label %84, label %62

80:                                               ; preds = %72, %62
  %81 = icmp eq %"class.blink::Attribute"* %63, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 1
  br label %86

84:                                               ; preds = %77, %80, %51, %28
  %85 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %86

86:                                               ; preds = %82, %84
  %87 = phi %"class.WTF::AtomicString"* [ %85, %84 ], [ %83, %82 ]
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0
  %89 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8) %88, i32* nonnull dereferenceable(4) %2) #12
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  br label %105

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %94 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %94, i64 0, i32 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %95, align 8
  %97 = icmp eq %"class.blink::ImageResourceContent"* %96, null
  br i1 %97, label %98, label %99

98:                                               ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  br label %103

99:                                               ; preds = %92
  %100 = call i64 @_ZNK5blink20ImageResourceContent13IntrinsicSizeENS_27RespectImageOrientationEnumE(%"class.blink::ImageResourceContent"* nonnull %96, i32 1) #12
  %101 = lshr i64 %100, 32
  %102 = trunc i64 %101 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  br label %105

103:                                              ; preds = %98, %22
  %104 = call i32 @_ZNK5blink16HTMLImageElement15LayoutBoxHeightEv(%"class.blink::HTMLImageElement"* %0)
  br label %105

105:                                              ; preds = %99, %90, %103
  %106 = phi i32 [ %104, %103 ], [ %102, %99 ], [ %91, %90 ]
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLImageElement15LayoutBoxHeightEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %2) #12
  %4 = icmp eq %"class.blink::LayoutBox"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* nonnull %3) #12
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0
  %8 = bitcast %"class.blink::LayoutBox"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %9, i64 118
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %10, align 8
  %12 = tail call i32 %11(%"class.blink::LayoutBoxModelObject"* %7) #12
  %13 = icmp sgt i32 %12, -1
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %6, i32 %12) #12
  %16 = extractvalue { i32, i1 } %15, 1
  %17 = extractvalue { i32, i1 } %15, 0
  %18 = select i1 %16, i32 %14, i32 %17, !prof !2
  %19 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %8, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %19, i64 119
  %21 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %20, align 8
  %22 = tail call i32 %21(%"class.blink::LayoutBoxModelObject"* %7) #12
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %18, i32 %22) #12
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0, i32 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %36, i64 0, i32 6
  %38 = load float, float* %37, align 8
  %39 = sitofp i32 %30 to float
  %40 = fmul float %39, 1.562500e-02
  %41 = fdiv float %40, %38
  %42 = fmul float %41, 6.400000e+01
  %43 = fcmp ult float %42, 0xC1E0000000000000
  %44 = fcmp ugt float %42, 0x41DFFFFFE0000000
  %45 = fcmp ogt float %42, 0xC1E0000000000000
  %46 = select i1 %45, float %42, float 0xC1E0000000000000
  %47 = fptosi float %46 to i32
  %48 = select i1 %43, i32 0, i32 2147483647
  %49 = select i1 %44, i32 %48, i32 %47
  %50 = sdiv i32 %49, 64
  %51 = srem i32 %49, 64
  %52 = add nsw i32 %51, 32
  %53 = ashr i32 %52, 6
  %54 = add nsw i32 %53, %50
  br label %55

55:                                               ; preds = %1, %5
  %56 = phi i32 [ %54, %5 ], [ 0, %1 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16HTMLImageElement35DensityCorrectedIntrinsicDimensionsEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = load i32, i32* @_ZN5blink14LayoutReplaced13kDefaultWidthE, align 4
  %8 = load i32, i32* @_ZN5blink14LayoutReplaced14kDefaultHeightE, align 4
  %9 = icmp sgt i32 %7, 33554431
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = icmp slt i32 %7, -33554432
  %12 = shl i32 %7, 6
  %13 = select i1 %11, i32 -2147483648, i32 %12
  br label %14

14:                                               ; preds = %10, %6
  %15 = phi i32 [ 2147483647, %6 ], [ %13, %10 ]
  %16 = icmp sgt i32 %8, 33554431
  br i1 %16, label %101, label %17

17:                                               ; preds = %14
  %18 = icmp slt i32 %8, -33554432
  %19 = shl i32 %8, 6
  %20 = select i1 %18, i32 -2147483648, i32 %19
  br label %101

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %23 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %23, i64 0, i32 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %24, align 8
  %26 = icmp eq %"class.blink::ImageResourceContent"* %25, null
  br i1 %26, label %101, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %25, i64 0, i32 8, i32 0
  %29 = load %"class.blink::Image"*, %"class.blink::Image"** %28, align 8
  %30 = icmp eq %"class.blink::Image"* %29, null
  br i1 %30, label %101, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 8
  %33 = load float, float* %32, align 8
  %34 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent30HasDevicePixelRatioHeaderValueEv(%"class.blink::ImageResourceContent"* nonnull %25) #12
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = tail call float @_ZNK5blink20ImageResourceContent27DevicePixelRatioHeaderValueEv(%"class.blink::ImageResourceContent"* nonnull %25) #12
  %37 = fcmp ogt float %36, 0.000000e+00
  br i1 %37, label %38, label %41

38:                                               ; preds = %35
  %39 = tail call float @_ZNK5blink20ImageResourceContent27DevicePixelRatioHeaderValueEv(%"class.blink::ImageResourceContent"* nonnull %25) #12
  %40 = fdiv float 1.000000e+00, %39
  br label %41

41:                                               ; preds = %38, %35, %31
  %42 = phi float [ %40, %38 ], [ %33, %35 ], [ %33, %31 ]
  %43 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %46, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.blink::NodeData"** %47 to %"class.blink::NodeRareData"**
  %50 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %50, i64 0, i32 1, i32 0, i32 0
  br label %54

52:                                               ; preds = %41
  %53 = bitcast %"class.blink::NodeData"** %47 to %"class.blink::NodeRenderingData"**
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi %"class.blink::NodeRenderingData"** [ %51, %48 ], [ %53, %52 ]
  %56 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %56, i64 0, i32 1
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = tail call i32 @_ZN5blink12LayoutObject29ShouldRespectImageOrientationEPKS0_(%"class.blink::LayoutObject"* %58) #12
  %60 = tail call i64 @_ZNK5blink20ImageResourceContent13IntrinsicSizeENS_27RespectImageOrientationEnumE(%"class.blink::ImageResourceContent"* nonnull %25, i32 %59) #12
  %61 = trunc i64 %60 to i32
  %62 = lshr i64 %60, 32
  %63 = trunc i64 %62 to i32
  %64 = icmp sgt i32 %61, 33554431
  br i1 %64, label %71, label %65

65:                                               ; preds = %54
  %66 = icmp slt i32 %61, -33554432
  %67 = shl i32 %61, 6
  %68 = select i1 %66, i32 -2147483648, i32 %67
  %69 = sitofp i32 %68 to float
  %70 = fmul float %69, 1.562500e-02
  br label %71

71:                                               ; preds = %65, %54
  %72 = phi float [ 0x4180000000000000, %54 ], [ %70, %65 ]
  %73 = icmp sgt i32 %63, 33554431
  br i1 %73, label %81, label %74

74:                                               ; preds = %71
  %75 = icmp slt i32 %63, -33554432
  %76 = shl nuw nsw i64 %62, 6
  %77 = trunc i64 %76 to i32
  %78 = select i1 %75, i32 -2147483648, i32 %77
  %79 = sitofp i32 %78 to float
  %80 = fmul float %79, 1.562500e-02
  br label %81

81:                                               ; preds = %74, %71
  %82 = phi float [ 0x4180000000000000, %71 ], [ %80, %74 ]
  %83 = fmul float %42, %72
  %84 = fmul float %83, 6.400000e+01
  %85 = fcmp ult float %84, 0xC1E0000000000000
  %86 = fcmp ugt float %84, 0x41DFFFFFE0000000
  %87 = fcmp ogt float %84, 0xC1E0000000000000
  %88 = select i1 %87, float %84, float 0xC1E0000000000000
  %89 = fptosi float %88 to i32
  %90 = select i1 %85, i32 0, i32 2147483647
  %91 = select i1 %86, i32 %90, i32 %89
  %92 = fmul float %42, %82
  %93 = fmul float %92, 6.400000e+01
  %94 = fcmp ult float %93, 0xC1E0000000000000
  %95 = fcmp ugt float %93, 0x41DFFFFFE0000000
  %96 = fcmp ogt float %93, 0xC1E0000000000000
  %97 = select i1 %96, float %93, float 0xC1E0000000000000
  %98 = fptosi float %97 to i32
  %99 = select i1 %94, i32 0, i32 2147483647
  %100 = select i1 %95, i32 %99, i32 %98
  br label %101

101:                                              ; preds = %27, %17, %21, %14, %81
  %102 = phi i32 [ %91, %81 ], [ %15, %14 ], [ 0, %21 ], [ 0, %27 ], [ %15, %17 ]
  %103 = phi i32 [ %100, %81 ], [ 2147483647, %14 ], [ 0, %21 ], [ 0, %27 ], [ %20, %17 ]
  %104 = zext i32 %103 to i64
  %105 = shl nuw i64 %104, 32
  %106 = zext i32 %102 to i64
  %107 = or i64 %105, %106
  ret i64 %107
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink20ImageResourceContent30HasDevicePixelRatioHeaderValueEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare float @_ZNK5blink20ImageResourceContent27DevicePixelRatioHeaderValueEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare i32 @_ZN5blink12LayoutObject29ShouldRespectImageOrientationEPKS0_(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLImageElement12naturalWidthEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZNK5blink16HTMLImageElement35DensityCorrectedIntrinsicDimensionsEv(%"class.blink::HTMLImageElement"* %0)
  %3 = trunc i64 %2 to i32
  %4 = sdiv i32 %3, 64
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLImageElement13naturalHeightEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZNK5blink16HTMLImageElement35DensityCorrectedIntrinsicDimensionsEv(%"class.blink::HTMLImageElement"* %0)
  %3 = lshr i64 %2, 32
  %4 = trunc i64 %3 to i32
  %5 = sdiv i32 %4, 64
  ret i32 %5
}

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16HTMLImageElement10currentSrcEv(%"class.blink::HTMLImageElement"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 7, i32 0
  br label %29

13:                                               ; preds = %7, %1
  %14 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %14, align 8
  %16 = icmp eq %"class.blink::ImageResourceContent"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"* nonnull %15) #12
  br i1 %18, label %26, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %15, i64 0, i32 8, i32 0
  %21 = load %"class.blink::Image"*, %"class.blink::Image"** %20, align 8
  %22 = icmp eq %"class.blink::Image"* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %19, %13
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0
  br label %29

26:                                               ; preds = %19, %17
  %27 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink20ImageResourceContent3UrlEv(%"class.blink::ImageResourceContent"* nonnull %15) #12
  %28 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %27, i64 0, i32 4
  br label %29

29:                                               ; preds = %23, %26, %11
  %30 = phi %"class.WTF::String"* [ %12, %11 ], [ %28, %26 ], [ %25, %23 ]
  ret %"class.WTF::String"* %30
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink20ImageResourceContent3UrlEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLImageElement14IsURLAttributeERKNS_9AttributeE(%"class.blink::HTMLImageElement"* nocapture readnone, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #4 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %49, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kLowsrcAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kLongdescAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %17
  br i1 %18, label %49, label %19

19:                                               ; preds = %14
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %22
  br i1 %23, label %24, label %48

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %49, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 1
  br i1 %36, label %42, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i16
  br label %45

42:                                               ; preds = %32
  %43 = bitcast %"class.WTF::StringImpl"* %37 to i16*
  %44 = load i16, i16* %43, align 2
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i16 [ %41, %38 ], [ %44, %42 ]
  %47 = icmp eq i16 %46, 35
  br i1 %47, label %48, label %49

48:                                               ; preds = %45, %19
  br label %49

49:                                               ; preds = %28, %24, %45, %48, %14, %9, %2
  %50 = phi i1 [ true, %45 ], [ true, %14 ], [ true, %9 ], [ true, %2 ], [ false, %48 ], [ true, %28 ], [ true, %24 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLImageElement21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLImageElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1) #12
  br label %12

12:                                               ; preds = %9, %2
  %13 = phi i1 [ true, %2 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink16HTMLImageElement24SubResourceAttributeNameEv(%"class.blink::HTMLImageElement"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  ret %"class.blink::QualifiedName"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLImageElement9draggableEv(%"class.blink::HTMLImageElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kDraggableAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.354"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %66, align 8
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %67, i64* %68, align 8
  br label %76

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %75 = bitcast i8** %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %75, align 8
  br label %76

76:                                               ; preds = %65, %69
  %77 = phi i32 [ %72, %69 ], [ 0, %65 ]
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %77, i32* %78, align 8
  %79 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [6 x i8]* nonnull dereferenceable(6) @.str.1)
  %80 = xor i1 %79, true
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret i1 %80
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

declare void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLImageElement1xEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %6, i32 15) #12
  %7 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %18
  %25 = bitcast <2 x float>* %2 to %"class.blink::FloatPoint"*
  %26 = bitcast <2 x float>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  store <2 x float> zeroinitializer, <2 x float>* %2, align 8
  %27 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* nonnull %22, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %25, %"class.blink::LayoutBoxModelObject"* null, i32 4) #12
  %28 = extractelement <2 x float> %27, i32 0
  %29 = fmul float %28, 6.400000e+01
  %30 = call float @llvm.round.f32(float %29) #12
  %31 = fcmp ult float %30, 0xC1E0000000000000
  %32 = fcmp ugt float %30, 0x41DFFFFFE0000000
  %33 = fcmp ogt float %30, 0xC1E0000000000000
  %34 = select i1 %33, float %30, float 0xC1E0000000000000
  %35 = fptosi float %34 to i32
  %36 = select i1 %31, i32 0, i32 2147483647
  %37 = select i1 %32, i32 %36, i32 %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %38 = sdiv i32 %37, 64
  br label %39

39:                                               ; preds = %18, %24
  %40 = phi i32 [ %38, %24 ], [ 0, %18 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink16HTMLImageElement1yEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %6, i32 15) #12
  %7 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %18
  %25 = bitcast <2 x float>* %2 to %"class.blink::FloatPoint"*
  %26 = bitcast <2 x float>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  store <2 x float> zeroinitializer, <2 x float>* %2, align 8
  %27 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* nonnull %22, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %25, %"class.blink::LayoutBoxModelObject"* null, i32 4) #12
  %28 = extractelement <2 x float> %27, i32 1
  %29 = fmul float %28, 6.400000e+01
  %30 = call float @llvm.round.f32(float %29) #12
  %31 = fcmp ult float %30, 0xC1E0000000000000
  %32 = fcmp ugt float %30, 0x41DFFFFFE0000000
  %33 = fcmp ogt float %30, 0xC1E0000000000000
  %34 = select i1 %33, float %30, float 0xC1E0000000000000
  %35 = fptosi float %34 to i32
  %36 = select i1 %31, i32 0, i32 2147483647
  %37 = select i1 %32, i32 %36, i32 %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %38 = sdiv i32 %37, 64
  br label %39

39:                                               ; preds = %18, %24
  %40 = phi i32 [ %38, %24 ], [ 0, %18 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement6decodeEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::HTMLImageElement"* nocapture readonly, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %1, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %6, i64 0, i32 0
  tail call void @_ZN5blink11ImageLoader6DecodeEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ImageLoader"* %7, %"class.blink::ScriptState"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #12
  ret void
}

declare void @_ZN5blink11ImageLoader6DecodeEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ImageLoader"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLImageElement8completeEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 13
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 8, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 8, i32 0, i32 1
  %13 = bitcast i64* %12 to %"class.blink::ImageLoader::Task"**
  %14 = load %"class.blink::ImageLoader::Task"*, %"class.blink::ImageLoader::Task"** %13, align 8
  %15 = icmp eq %"class.blink::ImageLoader::Task"* %14, null
  br label %16

16:                                               ; preds = %1, %8, %11
  %17 = phi i1 [ false, %1 ], [ %15, %11 ], [ true, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLImageElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %4, i64 0, i32 0
  tail call void @_ZN5blink11ImageLoader27ElementDidMoveToNewDocumentEv(%"class.blink::ImageLoader"* %5) #12
  %6 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"* %6, %"class.blink::Document"* dereferenceable(2848) %1) #12
  tail call void @_ZN5blink16HTMLImageElement15SelectSourceURLENS_11ImageLoader25UpdateFromElementBehaviorE(%"class.blink::HTMLImageElement"* %0, i32 1)
  ret void
}

declare void @_ZN5blink11ImageLoader27ElementDidMoveToNewDocumentEv(%"class.blink::ImageLoader"*) local_unnamed_addr #2

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLImageElement11IsServerMapEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kIsmapAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %159, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.354"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %159, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %52, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %53, %52 ]
  %38 = phi i32 [ 0, %31 ], [ %54, %52 ]
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %40, %33
  br i1 %41, label %56, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %42
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %54 = add i32 %38, 1
  %55 = icmp eq %"class.blink::Attribute"* %53, %29
  br i1 %55, label %159, label %36

56:                                               ; preds = %36, %47
  %57 = icmp eq i32 %38, -1
  br i1 %57, label %159, label %58

58:                                               ; preds = %56
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  br i1 %12, label %67, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %62 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %63 = bitcast %"class.blink::Member.354"* %62 to %"class.blink::Attribute"**
  %64 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %61, i64 0, i32 2, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  br label %72

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %69 = bitcast %"class.blink::ElementData"* %68 to %"class.blink::Attribute"*
  %70 = lshr i32 %10, 1
  %71 = and i32 %70, 268435455
  br label %72

72:                                               ; preds = %67, %60
  %73 = phi %"class.blink::Attribute"* [ %69, %67 ], [ %64, %60 ]
  %74 = phi i32 [ %71, %67 ], [ %66, %60 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 %75
  %77 = icmp eq i32 %74, 0
  br i1 %77, label %105, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %83

83:                                               ; preds = %98, %78
  %84 = phi %"class.blink::Attribute"* [ %73, %78 ], [ %99, %98 ]
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %87 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %86, %80
  br i1 %87, label %101, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %90, %91
  br i1 %92, label %93, label %98

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 4, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %95, %96
  br i1 %97, label %101, label %98

98:                                               ; preds = %93, %88
  %99 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %84, i64 1
  %100 = icmp eq %"class.blink::Attribute"* %99, %76
  br i1 %100, label %105, label %83

101:                                              ; preds = %93, %83
  %102 = icmp eq %"class.blink::Attribute"* %84, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %84, i64 0, i32 1
  br label %107

105:                                              ; preds = %98, %101, %72
  %106 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %107

107:                                              ; preds = %103, %105
  %108 = phi %"class.WTF::AtomicString"* [ %106, %105 ], [ %104, %103 ]
  %109 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %132, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 1
  br i1 %120, label %126, label %122

122:                                              ; preds = %116
  %123 = bitcast %"class.WTF::StringImpl"* %121 to i8*
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  br label %129

126:                                              ; preds = %116
  %127 = bitcast %"class.WTF::StringImpl"* %121 to i16*
  %128 = load i16, i16* %127, align 2
  br label %129

129:                                              ; preds = %122, %126
  %130 = phi i16 [ %125, %122 ], [ %128, %126 ]
  %131 = icmp eq i16 %130, 35
  br i1 %131, label %159, label %132

132:                                              ; preds = %112, %107, %129
  %133 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %133) #12
  %134 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %135 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %135, i64 0, i32 2, i32 0, i32 0
  %137 = load %"class.blink::Document"*, %"class.blink::Document"** %136, align 8
  %138 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #12
  %139 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %108, i64 0, i32 0
  %140 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %139) #12
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %141, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Document"* %137, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %142 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %2) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #12
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %132
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #12
  br label %158

158:                                              ; preds = %132, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %133) #12
  br label %159

159:                                              ; preds = %52, %56, %25, %1, %158, %129
  %160 = phi i1 [ false, %56 ], [ %142, %158 ], [ false, %129 ], [ false, %1 ], [ false, %25 ], [ false, %52 ]
  ret i1 %160
}

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZN5blink16HTMLImageElement13ImageContentsEv(%"class.blink::HTMLImageElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 13
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 8, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #12
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 8, i32 0, i32 1
  %13 = bitcast i64* %12 to %"class.blink::ImageLoader::Task"**
  %14 = load %"class.blink::ImageLoader::Task"*, %"class.blink::ImageLoader::Task"** %13, align 8
  %15 = icmp eq %"class.blink::ImageLoader::Task"* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %8, %11
  %17 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %2, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %17, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %18, align 8
  %20 = icmp eq %"class.blink::ImageResourceContent"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %19) #12
  br label %23

23:                                               ; preds = %1, %11, %16, %21
  %24 = phi %"class.blink::Image"* [ %22, %21 ], [ null, %16 ], [ null, %11 ], [ null, %1 ]
  ret %"class.blink::Image"* %24
}

declare %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLImageElement20IsInteractiveContentEv(%"class.blink::HTMLImageElement"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.354"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %50, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %51, %50 ]
  %36 = phi i32 [ 0, %29 ], [ %52, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %31
  br i1 %39, label %54, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %52 = add i32 %36, 1
  %53 = icmp eq %"class.blink::Attribute"* %51, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %50, %45, %34, %23
  %55 = phi i32 [ -1, %23 ], [ %36, %34 ], [ %36, %45 ], [ -1, %50 ]
  %56 = icmp ne i32 %55, -1
  br label %57

57:                                               ; preds = %1, %54
  %58 = phi i1 [ false, %1 ], [ %56, %54 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink16HTMLImageElement22DefaultDestinationSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE(%"class.blink::HTMLImageElement"* nocapture readonly, %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %6, align 8
  %8 = icmp eq %"class.blink::ImageResourceContent"* %7, null
  br i1 %8, label %134, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %7, i64 0, i32 8, i32 0
  %11 = load %"class.blink::Image"*, %"class.blink::Image"** %10, align 8
  %12 = icmp eq %"class.blink::Image"* %11, null
  br i1 %12, label %134, label %13

13:                                               ; preds = %9
  %14 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %7) #12
  %15 = icmp eq %"class.blink::Image"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.blink::Image"* %14 to i1 (%"class.blink::Image"*)***
  %18 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %18, i64 2
  %20 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::Image"* nonnull %14) #12
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::Image"* %14 to %"class.blink::SVGImage"*
  %24 = tail call <2 x float> @_ZNK5blink8SVGImage18ConcreteObjectSizeERKNS_9FloatSizeE(%"class.blink::SVGImage"* nonnull %23, %"class.blink::FloatSize"* dereferenceable(8) %1) #12
  br label %134

25:                                               ; preds = %16, %13
  %26 = tail call i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"* %14, i32 %2) #12
  %27 = trunc i64 %26 to i32
  %28 = lshr i64 %26, 32
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %27, 33554431
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = icmp slt i32 %27, -33554432
  %33 = shl i32 %27, 6
  %34 = select i1 %32, i32 -2147483648, i32 %33
  br label %35

35:                                               ; preds = %31, %25
  %36 = phi i32 [ 2147483647, %25 ], [ %34, %31 ]
  %37 = icmp sgt i32 %29, 33554431
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = icmp slt i32 %29, -33554432
  %40 = shl nuw nsw i64 %28, 6
  %41 = trunc i64 %40 to i32
  %42 = select i1 %39, i32 -2147483648, i32 %41
  br label %43

43:                                               ; preds = %38, %35
  %44 = phi i32 [ 2147483647, %35 ], [ %42, %38 ]
  %45 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %48, label %54, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRareData"**
  %52 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %52, i64 0, i32 1, i32 0, i32 0
  br label %56

54:                                               ; preds = %43
  %55 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRenderingData"**
  br label %56

56:                                               ; preds = %50, %54
  %57 = phi %"class.blink::NodeRenderingData"** [ %53, %50 ], [ %55, %54 ]
  %58 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %58, i64 0, i32 1
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %125, label %62

62:                                               ; preds = %56
  br i1 %48, label %67, label %63

63:                                               ; preds = %62
  %64 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRareData"**
  %65 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %65, i64 0, i32 1, i32 0, i32 0
  br label %69

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRenderingData"**
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi %"class.blink::NodeRenderingData"** [ %66, %63 ], [ %68, %67 ]
  %71 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %71, i64 0, i32 1
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = bitcast %"class.blink::LayoutObject"* %73 to i1 (%"class.blink::LayoutObject"*, i32)***
  %75 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, i64 92
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::LayoutObject"* %73, i32 12) #12
  br i1 %78, label %79, label %125

79:                                               ; preds = %69
  %80 = bitcast %"class.blink::Image"* %14 to i1 (%"class.blink::Image"*)***
  %81 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %80, align 8
  %82 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %81, i64 12
  %83 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %82, align 8
  %84 = tail call zeroext i1 %83(%"class.blink::Image"* %14) #12
  br i1 %84, label %85, label %125

85:                                               ; preds = %79
  %86 = load i32, i32* %45, align 8
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRareData"**
  %91 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %91, i64 0, i32 1, i32 0, i32 0
  br label %95

93:                                               ; preds = %85
  %94 = bitcast %"class.blink::NodeData"** %49 to %"class.blink::NodeRenderingData"**
  br label %95

95:                                               ; preds = %89, %93
  %96 = phi %"class.blink::NodeRenderingData"** [ %92, %89 ], [ %94, %93 ]
  %97 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %97, i64 0, i32 1
  %99 = bitcast %"class.blink::LayoutObject"** %98 to %"class.blink::LayoutImage"**
  %100 = load %"class.blink::LayoutImage"*, %"class.blink::LayoutImage"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::LayoutImage", %"class.blink::LayoutImage"* %100, i64 0, i32 4
  %102 = load float, float* %101, align 4
  %103 = sitofp i32 %36 to float
  %104 = fmul float %103, 1.562500e-02
  %105 = fmul float %104, %102
  %106 = fmul float %105, 6.400000e+01
  %107 = fcmp ult float %106, 0xC1E0000000000000
  %108 = fcmp ugt float %106, 0x41DFFFFFE0000000
  %109 = fcmp ogt float %106, 0xC1E0000000000000
  %110 = select i1 %109, float %106, float 0xC1E0000000000000
  %111 = fptosi float %110 to i32
  %112 = select i1 %107, i32 0, i32 2147483647
  %113 = select i1 %108, i32 %112, i32 %111
  %114 = sitofp i32 %44 to float
  %115 = fmul float %114, 1.562500e-02
  %116 = fmul float %115, %102
  %117 = fmul float %116, 6.400000e+01
  %118 = fcmp ult float %117, 0xC1E0000000000000
  %119 = fcmp ugt float %117, 0x41DFFFFFE0000000
  %120 = fcmp ogt float %117, 0xC1E0000000000000
  %121 = select i1 %120, float %117, float 0xC1E0000000000000
  %122 = fptosi float %121 to i32
  %123 = select i1 %118, i32 0, i32 2147483647
  %124 = select i1 %119, i32 %123, i32 %122
  br label %125

125:                                              ; preds = %56, %95, %79, %69
  %126 = phi i32 [ %36, %56 ], [ %113, %95 ], [ %36, %79 ], [ %36, %69 ]
  %127 = phi i32 [ %44, %56 ], [ %124, %95 ], [ %44, %79 ], [ %44, %69 ]
  %128 = sitofp i32 %126 to float
  %129 = fmul float %128, 1.562500e-02
  %130 = sitofp i32 %127 to float
  %131 = fmul float %130, 1.562500e-02
  %132 = insertelement <2 x float> undef, float %129, i32 0
  %133 = insertelement <2 x float> %132, float %131, i32 1
  br label %134

134:                                              ; preds = %9, %3, %125, %22
  %135 = phi <2 x float> [ %133, %125 ], [ %24, %22 ], [ zeroinitializer, %3 ], [ zeroinitializer, %9 ]
  ret <2 x float> %135
}

declare <2 x float> @_ZNK5blink8SVGImage18ConcreteObjectSizeERKNS_9FloatSizeE(%"class.blink::SVGImage"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZThn104_NK5blink16HTMLImageElement22DefaultDestinationSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE(%"class.blink::HTMLImageElement"* nocapture readonly, %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 1
  %5 = bitcast %"class.blink::ImageElementBase"* %4 to %"class.blink::HTMLImageElement"*
  %6 = tail call <2 x float> @_ZNK5blink16HTMLImageElement22DefaultDestinationSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE(%"class.blink::HTMLImageElement"* %5, %"class.blink::FloatSize"* dereferenceable(8) %1, i32 %2)
  ret <2 x float> %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16HTMLImageElement16GetResourceWidthEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"struct.blink::FetchParameters::ResourceWidth"*
  %4 = bitcast i64* %2 to float*
  %5 = getelementptr inbounds %"struct.blink::FetchParameters::ResourceWidth", %"struct.blink::FetchParameters::ResourceWidth"* %3, i64 0, i32 1
  %6 = bitcast i8* %5 to i32*
  store i32 -1431655936, i32* %6, align 4
  store float 0.000000e+00, float* %4, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 9, i32 0, i32 0
  %8 = load %"class.blink::HTMLSourceElement"*, %"class.blink::HTMLSourceElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLSourceElement", %"class.blink::HTMLSourceElement"* %8, i64 0, i32 0, i32 0
  %10 = icmp eq %"class.blink::HTMLSourceElement"* %8, null
  %11 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %12 = select i1 %10, %"class.blink::Element"* %11, %"class.blink::Element"* %9
  %13 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = call fastcc zeroext i1 @_ZN5blinkL15SourceSizeValueEPKNS_7ElementERNS_8DocumentERf(%"class.blink::Element"* %12, %"class.blink::Document"* dereferenceable(2848) %16, float* nonnull dereferenceable(4) %4)
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %5, align 4
  %19 = load i64, i64* %2, align 8
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL15SourceSizeValueEPKNS_7ElementERNS_8DocumentERf(%"class.blink::Element"* nocapture readonly, %"class.blink::Document"* dereferenceable(2848), float* nocapture dereferenceable(4)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::SizesAttributeParser", align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %7, align 8
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %9, align 8
  %11 = icmp eq %"class.blink::ElementData"* %10, null
  br i1 %11, label %62, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ElementData"* %10 to %"class.blink::UniqueElementData"*
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1, i32 1
  %20 = bitcast %"class.blink::Member.354"* %19 to %"class.blink::Attribute"**
  %21 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %18, i64 0, i32 2, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  br label %29

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1
  %26 = bitcast %"class.blink::ElementData"* %25 to %"class.blink::Attribute"*
  %27 = lshr i32 %14, 1
  %28 = and i32 %27, 268435455
  br label %29

29:                                               ; preds = %24, %17
  %30 = phi %"class.blink::Attribute"* [ %26, %24 ], [ %21, %17 ]
  %31 = phi i32 [ %28, %24 ], [ %23, %17 ]
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %62, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %8, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %55, %35
  %41 = phi %"class.blink::Attribute"* [ %30, %35 ], [ %56, %55 ]
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %37
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %50, %45
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 1
  %57 = icmp eq %"class.blink::Attribute"* %56, %33
  br i1 %57, label %62, label %40

58:                                               ; preds = %50, %40
  %59 = icmp eq %"class.blink::Attribute"* %41, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 0, i32 1
  br label %64

62:                                               ; preds = %55, %58, %29, %3
  %63 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %64

64:                                               ; preds = %60, %62
  %65 = phi %"class.WTF::AtomicString"* [ %63, %62 ], [ %61, %60 ]
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %7, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %94, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #12
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %74
  tail call void @llvm.trap() #12
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %69, %84
  %89 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %90 = bitcast %"class.blink::UseCounter"* %89 to void (%"class.blink::UseCounter"*, i32)***
  %91 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %91, i64 3
  %93 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %92, align 8
  tail call void %93(%"class.blink::UseCounter"* %89, i32 522) #12
  br label %94

94:                                               ; preds = %64, %84, %88
  %95 = phi i1 [ false, %84 ], [ true, %88 ], [ false, %64 ]
  %96 = bitcast %"class.blink::SizesAttributeParser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #12
  %97 = tail call %"class.blink::MediaValues"* @_ZN5blink18MediaValuesDynamic6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %1) #12
  %98 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %1) #12
  call void @_ZN5blink20SizesAttributeParserC1EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.blink::SizesAttributeParser"* nonnull %5, %"class.blink::MediaValues"* %97, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::ExecutionContext"* %98) #12
  %99 = call float @_ZN5blink20SizesAttributeParser6lengthEv(%"class.blink::SizesAttributeParser"* nonnull %5) #12
  store float %99, float* %2, align 4
  %100 = getelementptr inbounds %"class.blink::SizesAttributeParser", %"class.blink::SizesAttributeParser"* %5, i64 0, i32 0, i32 0
  %101 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %100, align 8
  %102 = icmp eq %"class.blink::MediaQuerySet"* %101, null
  br i1 %102, label %138, label %103

103:                                              ; preds = %94
  %104 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %101, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %104) #12
  %105 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %101, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %138

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %101, i64 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.std::__1::unique_ptr.399"*, %"class.std::__1::unique_ptr.399"** %110, align 8
  %112 = icmp eq %"class.std::__1::unique_ptr.399"* %111, null
  br i1 %112, label %136, label %113, !prof !3

113:                                              ; preds = %108
  %114 = bitcast %"class.std::__1::unique_ptr.399"* %111 to i8*
  %115 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %101, i64 0, i32 1, i32 0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %134, label %118, !prof !2

118:                                              ; preds = %113
  %119 = zext i32 %116 to i64
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.399"* %111, i64 %119
  br label %121

121:                                              ; preds = %128, %118
  %122 = phi %"class.std::__1::unique_ptr.399"* [ %129, %128 ], [ %111, %118 ]
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.399"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %123, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %123, align 8
  %125 = icmp eq %"class.blink::MediaQuery"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %121
  call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %124) #12
  %127 = bitcast %"class.blink::MediaQuery"* %124 to i8*
  call void @free(i8* %127) #12
  br label %128

128:                                              ; preds = %126, %121
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.399"* %122, i64 1
  %130 = icmp eq %"class.std::__1::unique_ptr.399"* %129, %120
  br i1 %130, label %131, label %121

131:                                              ; preds = %128
  store i32 0, i32* %115, align 4
  %132 = bitcast %"class.WTF::Vector.396"* %109 to i8**
  %133 = load i8*, i8** %132, align 8
  br label %134

134:                                              ; preds = %131, %113
  %135 = phi i8* [ %133, %131 ], [ %114, %113 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %135) #12
  br label %136

136:                                              ; preds = %134, %108
  %137 = bitcast %"class.blink::MediaQuerySet"* %101 to i8*
  call void @free(i8* %137) #12
  br label %138

138:                                              ; preds = %94, %103, %136
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #12
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #12
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16HTMLImageElement11ForceReloadEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 12
  %6 = load i32, i32* %5, align 4
  tail call void @_ZN5blink11ImageLoader17UpdateFromElementENS0_25UpdateFromElementBehaviorEN7network5mojom14ReferrerPolicyE(%"class.blink::ImageLoader"* %4, i32 3, i32 %6) #12
  ret void
}

declare void @_ZN5blink31BestFitSourceForImageAttributesEffRKN3WTF6StringES3_PNS_8DocumentE(%"class.blink::ImageCandidate"* sret, float, float, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink11ImageLoader27ImageIsPotentiallyAvailableEv(%"class.blink::ImageLoader"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement20EnsurePrimaryContentEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16HTMLImageElement20SetLayoutDispositionENS0_17LayoutDispositionEb(%"class.blink::HTMLImageElement"* %0, i8 zeroext 0, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement32EnsureCollapsedOrFallbackContentEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional.3182", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %10, align 8
  %12 = getelementptr inbounds %"class.absl::optional.3182", %"class.absl::optional.3182"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %12) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 216, i1 false)
  %13 = icmp eq %"class.blink::ImageResourceContent"* %11, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  store i8 0, i8* %12, align 8
  %15 = getelementptr inbounds %"class.absl::optional.3182", %"class.absl::optional.3182"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %union.anon.3186* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 208, i1 false) #12
  br label %25

17:                                               ; preds = %7
  call void @_ZNK5blink20ImageResourceContent16GetResourceErrorEv(%"class.absl::optional.3182"* nonnull sret %2, %"class.blink::ImageResourceContent"* nonnull %11) #12
  %18 = load i8, i8* %12, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.absl::optional.3182", %"class.absl::optional.3182"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 9
  %22 = load i8, i8* %21, align 8, !range !4
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i8 1, i8 2
  br label %25

25:                                               ; preds = %17, %14, %20
  %26 = phi i8 [ 1, %17 ], [ %24, %20 ], [ 1, %14 ]
  call void @_ZN5blink16HTMLImageElement20SetLayoutDispositionENS0_17LayoutDispositionEb(%"class.blink::HTMLImageElement"* %0, i8 zeroext %26, i1 zeroext false)
  %27 = load i8, i8* %12, align 8, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.absl::optional.3182", %"class.absl::optional.3182"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.absl::optional.3182", %"class.absl::optional.3182"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 8, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN7network15CorsErrorStatusD1Ev(%"struct.network::CorsErrorStatus"* %34) #12
  store i8 0, i8* %30, align 8
  br label %35

35:                                               ; preds = %33, %29
  %36 = getelementptr inbounds %"class.absl::optional.3182", %"class.absl::optional.3182"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"class.absl::optional.3182", %"class.absl::optional.3182"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %53) #12
  store i8 0, i8* %12, align 8
  br label %54

54:                                               ; preds = %25, %52
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %12) #12
  br label %55

55:                                               ; preds = %1, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement25StartLoadingImageDocumentEPNS_20ImageResourceContentE(%"class.blink::HTMLImageElement"*, %"class.blink::ImageResourceContent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %5, i64 0, i32 0, i32 4
  %7 = ptrtoint %"class.blink::ImageResourceContent"* %1 to i64
  %8 = bitcast %"class.blink::Member.2979"* %6 to i64*
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::ImageResourceContent"* %1 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #12
  br label %14

14:                                               ; preds = %2, %11
  %15 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %17 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink20ImageResourceContent3UrlEv(%"class.blink::ImageResourceContent"* %1) #12
  %19 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %18, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = and i32 %24, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %22
  %28 = load atomic i32, i32* %23 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %45

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %45

43:                                               ; preds = %22
  %44 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %45

45:                                               ; preds = %14, %27, %41, %43
  %46 = phi %"class.WTF::StringImpl"* [ %44, %43 ], [ %20, %27 ], [ %20, %41 ], [ null, %14 ]
  %47 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %48 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %47, i64* %48, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %15, %"class.blink::QualifiedName"* dereferenceable(8) %16, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #12
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %65

65:                                               ; preds = %45, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  ret void
}

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::HTMLImageElement"*, %"class.blink::ShadowRoot"* nocapture readnone dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink23HTMLImageFallbackHelper23CreateAltTextShadowTreeERNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %3) #12
  ret void
}

declare void @_ZN5blink23HTMLImageFallbackHelper23CreateAltTextShadowTreeERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement33EnsureFallbackForGeneratedContentEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16HTMLImageElement20SetLayoutDispositionENS0_17LayoutDispositionEb(%"class.blink::HTMLImageElement"* %0, i8 zeroext 1, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement20SetLayoutDispositionENS0_17LayoutDispositionEb(%"class.blink::HTMLImageElement"*, i8 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 8
  %7 = icmp ne i8 %6, %1
  %8 = or i1 %7, %2
  br i1 %8, label %9, label %57

9:                                                ; preds = %3
  store i8 %1, i8* %5, align 8
  %10 = icmp eq i8 %1, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %13 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %12) #12
  br label %14

14:                                               ; preds = %11, %9
  %15 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #12
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #12
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %14, %21, %36
  %39 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason12kUseFallbackE, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %40, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %15, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #12
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #12
  br label %56

56:                                               ; preds = %38, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  call void @_ZN5blink4Node26SetForceReattachLayoutTreeEv(%"class.blink::Node"* %15) #12
  br label %57

57:                                               ; preds = %3, %56
  ret void
}

declare void @_ZNK5blink20ImageResourceContent16GetResourceErrorEv(%"class.absl::optional.3182"* sret, %"class.blink::ImageResourceContent"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16HTMLImageElement11IsCollapsedEv(%"class.blink::HTMLImageElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  ret i1 %4
}

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN5blink4Node26SetForceReattachLayoutTreeEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ComputedStyle"* @_ZN5blink16HTMLImageElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::HTMLImageElement"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %11 [
    i8 0, label %5
    i8 2, label %5
    i8 1, label %8
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %7 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element28OriginalStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"* %6, %"class.blink::StyleRecalcContext"* dereferenceable(8) %1) #12
  br label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 0, i32 0
  %10 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element28OriginalStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"* %9, %"class.blink::StyleRecalcContext"* dereferenceable(8) %1) #12
  tail call void @_ZN5blink23HTMLImageFallbackHelper21CustomStyleForAltTextERNS_7ElementERNS_13ComputedStyleE(%"class.blink::Element"* dereferenceable(104) %9, %"class.blink::ComputedStyle"* dereferenceable(104) %10) #12
  br label %11

11:                                               ; preds = %2, %8, %5
  %12 = phi %"class.blink::ComputedStyle"* [ %10, %8 ], [ %7, %5 ], [ null, %2 ]
  ret %"class.blink::ComputedStyle"* %12
}

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element28OriginalStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink23HTMLImageFallbackHelper21CustomStyleForAltTextERNS_7ElementERNS_13ComputedStyleE(%"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16HTMLImageElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLImageElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::HTMLFormElement"* %1, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 256
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 6
  %11 = ptrtoint %"class.blink::HTMLFormElement"* %1 to i64
  %12 = bitcast %"class.blink::Member.3012"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::HTMLFormElement"* %1 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %16) #12
  %18 = getelementptr inbounds %"class.blink::Member.3012", %"class.blink::Member.3012"* %10, i64 0, i32 0, i32 0
  %19 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %18, align 8
  br label %20

20:                                               ; preds = %9, %15
  %21 = phi %"class.blink::HTMLFormElement"* [ %1, %9 ], [ %19, %15 ]
  %22 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %23 = load i8, i8* %22, align 1
  %24 = or i8 %23, 1
  store i8 %24, i8* %22, align 1
  %25 = getelementptr inbounds %"class.blink::Member.3012", %"class.blink::Member.3012"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* %21, %"class.blink::HTMLImageElement"* dereferenceable(208) %0) #12
  %26 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %25, align 8
  tail call void @_ZN5blink15HTMLFormElement20DidAssociateByParserEv(%"class.blink::HTMLFormElement"* %26) #12
  br label %27

27:                                               ; preds = %4, %2, %20
  ret void
}

declare void @_ZN5blink15HTMLFormElement20DidAssociateByParserEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N5blink16HTMLImageElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLImageElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.blink::Member.318"* %3 to %"class.blink::HTMLImageElement"*
  %5 = icmp eq %"class.blink::HTMLFormElement"* %1, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %3, i64 20
  %13 = ptrtoint %"class.blink::HTMLFormElement"* %1 to i64
  %14 = bitcast %"class.blink::Member.318"* %12 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::HTMLFormElement"**
  br label %24

19:                                               ; preds = %11
  %20 = bitcast %"class.blink::HTMLFormElement"* %1 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %20) #12
  %22 = bitcast %"class.blink::Member.318"* %12 to %"class.blink::HTMLFormElement"**
  %23 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %22, align 8
  br label %24

24:                                               ; preds = %17, %19
  %25 = phi %"class.blink::HTMLFormElement"** [ %18, %17 ], [ %22, %19 ]
  %26 = phi %"class.blink::HTMLFormElement"* [ %1, %17 ], [ %23, %19 ]
  %27 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %4, i64 0, i32 11
  %28 = load i8, i8* %27, align 1
  %29 = or i8 %28, 1
  store i8 %29, i8* %27, align 1
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_16HTMLImageElementE(%"class.blink::HTMLFormElement"* %26, %"class.blink::HTMLImageElement"* dereferenceable(208) %4) #12
  %30 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %25, align 8
  tail call void @_ZN5blink15HTMLFormElement20DidAssociateByParserEv(%"class.blink::HTMLFormElement"* %30) #12
  br label %31

31:                                               ; preds = %2, %6, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16HTMLImageElement33GetAttributeLazyLoadDimensionTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HTMLDimension", align 8
  %3 = bitcast %"class.blink::HTMLDimension"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #12
  %4 = bitcast %"class.blink::HTMLDimension"* %2 to i64*
  store i64 -6148914691236517206, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLDimension", %"class.blink::HTMLDimension"* %2, i64 0, i32 0
  store i32 2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLDimension", %"class.blink::HTMLDimension"* %2, i64 0, i32 1
  store double 0.000000e+00, double* %6, align 8
  %7 = call zeroext i1 @_ZN5blink19ParseDimensionValueERKN3WTF6StringERNS_13HTMLDimensionE(%"class.WTF::String"* dereferenceable(8) %0, %"class.blink::HTMLDimension"* nonnull dereferenceable(16) %2) #12
  %8 = load i32, i32* %5, align 8
  %9 = icmp eq i32 %8, 2
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = load double, double* %6, align 8
  %13 = fcmp ole double %12, 1.000000e+01
  %14 = select i1 %13, i32 2, i32 1
  br label %15

15:                                               ; preds = %1, %11
  %16 = phi i32 [ %14, %11 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #12
  ret i32 %16
}

declare zeroext i1 @_ZN5blink19ParseDimensionValueERKN3WTF6StringERNS_13HTMLDimensionE(%"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLDimension"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16HTMLImageElement28GetInlineStyleDimensionsTypeEPKNS_19CSSPropertyValueSetE(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %0, i32 165) #12
  %5 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %0, i32 438) #12
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp ult i8 %9, 2
  %11 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSPrimitiveValue"*
  %12 = select i1 %10, %"class.blink::CSSPrimitiveValue"* %11, %"class.blink::CSSPrimitiveValue"* null
  br label %13

13:                                               ; preds = %3, %7
  %14 = phi %"class.blink::CSSPrimitiveValue"* [ %12, %7 ], [ null, %3 ]
  %15 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp ult i8 %18, 2
  %20 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSPrimitiveValue"*
  %21 = select i1 %19, %"class.blink::CSSPrimitiveValue"* %20, %"class.blink::CSSPrimitiveValue"* null
  %22 = icmp ne %"class.blink::CSSPrimitiveValue"* %14, null
  %23 = and i1 %22, %19
  br i1 %23, label %24, label %35

24:                                               ; preds = %16
  %25 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue4IsPxEv(%"class.blink::CSSPrimitiveValue"* nonnull %14) #12
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue4IsPxEv(%"class.blink::CSSPrimitiveValue"* nonnull %21) #12
  br i1 %27, label %28, label %35

28:                                               ; preds = %26
  %29 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %21) #12
  %30 = fcmp ugt double %29, 1.000000e+01
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = tail call double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"* nonnull %14) #12
  %33 = fcmp ole double %32, 1.000000e+01
  %34 = select i1 %33, i32 2, i32 1
  br label %35

35:                                               ; preds = %13, %26, %24, %16, %28, %31, %1
  %36 = phi i32 [ 0, %1 ], [ 0, %26 ], [ 0, %24 ], [ 0, %16 ], [ 1, %28 ], [ %34, %31 ], [ 0, %13 ]
  ret i32 %36
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue4IsPxEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare double @_ZNK5blink17CSSPrimitiveValue14GetDoubleValueEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLImageElement18HasPendingActivityEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink11ImageLoader15HasPendingEventEv(%"class.blink::ImageLoader"* %4) #12
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 8, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %8, label %9, label %14

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %3, i64 0, i32 0, i32 8, i32 0, i32 1
  %11 = bitcast i64* %10 to %"class.blink::ImageLoader::Task"**
  %12 = load %"class.blink::ImageLoader::Task"*, %"class.blink::ImageLoader::Task"** %11, align 8
  %13 = icmp ne %"class.blink::ImageLoader::Task"* %12, null
  br label %14

14:                                               ; preds = %1, %6, %9
  %15 = phi i1 [ true, %1 ], [ %13, %9 ], [ false, %6 ]
  ret i1 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #12
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16HTMLImageElement18GetWrapperTypeInfoEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16HTMLImageElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #2

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLImageElement23CanContainRangeEndPointEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLImageElement17CanStartSelectionEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #12
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #2

declare %"class.WTF::HashMap.3214"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #2

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLImageElement37HasExtraStyleForPresentationAttributeEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.blink::HTMLSourceElement"*, %"class.blink::HTMLSourceElement"** %2, align 8
  %4 = icmp ne %"class.blink::HTMLSourceElement"* %3, null
  ret i1 %4
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #2

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #2

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement13SupportsFocusEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLImageElement11IsAdRelatedEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 32
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink16HTMLImageElement16GetNamedItemTypeEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16HTMLImageElement23AreAuthorShadowsAllowedEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #2

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink16HTMLImageElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 0, i32 3
  ret %"class.blink::FormAssociated"* %2
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

declare %"class.blink::Image"* @_ZN5blink16ImageElementBase23GetSourceImageForCanvasEPNS_17SourceImageStatusERKNS_9FloatSizeENS_16AlphaDispositionE(%"class.blink::ImageElementBase"*, i32*, %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ImageElementBase16WouldTaintOriginEv(%"class.blink::ImageElementBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource15IsCSSImageValueEv(%"class.blink::CanvasImageSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink16ImageElementBase14IsImageElementEv(%"class.blink::ImageElementBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource14IsVideoElementEv(%"class.blink::CanvasImageSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource15IsCanvasElementEv(%"class.blink::CanvasImageSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink16ImageElementBase11IsSVGSourceEv(%"class.blink::ImageElementBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource13IsImageBitmapEv(%"class.blink::CanvasImageSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource17IsOffscreenCanvasEv(%"class.blink::CanvasImageSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource12IsVideoFrameEv(%"class.blink::CanvasImageSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CanvasImageSource10IsNeuteredEv(%"class.blink::CanvasImageSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare <2 x float> @_ZNK5blink16ImageElementBase11ElementSizeERKNS_9FloatSizeENS_27RespectImageOrientationEnumE(%"class.blink::ImageElementBase"*, %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ImageElementBase9SourceURLEv(%"class.blink::ImageElementBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ImageElementBase8IsOpaqueEv(%"class.blink::ImageElementBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ImageElementBase13IsAcceleratedEv(%"class.blink::ImageElementBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(136) %"class.blink::HTMLImageLoader"* @_ZThn104_NK5blink16HTMLImageElement14GetImageLoaderEv(%"class.blink::HTMLImageElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::ImageElementBase", %"class.blink::ImageElementBase"* %2, i64 6
  %4 = bitcast %"class.blink::ImageElementBase"* %3 to %"class.blink::HTMLImageLoader"**
  %5 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %4, align 8
  ret %"class.blink::HTMLImageLoader"* %5
}

declare i64 @_ZNK5blink16ImageElementBase16BitmapSourceSizeEv(%"class.blink::ImageElementBase"*) unnamed_addr #2

declare void @_ZN5blink16ImageElementBase17CreateImageBitmapEPNS_11ScriptStateEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ImageElementBase"*, %"class.blink::ScriptState"*, %"class.absl::optional.883"* byval(%"class.absl::optional.883") align 8, %"class.blink::ImageBitmapOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare i64 @_ZThn8_NK5blink16ImageElementBase16BitmapSourceSizeEv(%"class.blink::ImageElementBase"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn8_N5blink16ImageElementBase17CreateImageBitmapEPNS_11ScriptStateEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::ImageElementBase"*, %"class.blink::ScriptState"*, %"class.absl::optional.883"* byval(%"class.absl::optional.883") align 8, %"class.blink::ImageBitmapOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17ImageBitmapSource6IsBlobEv(%"class.blink::ImageBitmapSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_16HTMLImageElementEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -16
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::Node"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %3) #12
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #12
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_16HTMLImageElementEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 2
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::HTMLImageLoader"**
  %4 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink11ImageLoader15HasPendingEventEv(%"class.blink::ImageLoader"* %5) #12
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %4, i64 0, i32 0, i32 8, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #12
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %4, i64 0, i32 0, i32 8, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.blink::ImageLoader::Task"**
  %13 = load %"class.blink::ImageLoader::Task"*, %"class.blink::ImageLoader::Task"** %12, align 8
  %14 = icmp ne %"class.blink::ImageLoader::Task"* %13, null
  br label %15

15:                                               ; preds = %1, %7, %10
  %16 = phi i1 [ true, %1 ], [ %14, %10 ], [ false, %7 ]
  ret i1 %16
}

declare void @_ZN5blink7ElementC2ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink13ContainerNodeD2Ev(%"class.blink::ContainerNode"*) unnamed_addr #8

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN5blink5probe25GetDisabledImageTypesImplEPNS_16ExecutionContextEPN3WTF7HashSetINS3_6StringENS3_10StringHashENS3_10HashTraitsIS5_EENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"*, %"class.WTF::HashSet.2174"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #11

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #11

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare %"class.blink::MediaValues"* @_ZN5blink18MediaValuesDynamic6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

declare void @_ZN5blink20SizesAttributeParserC1EPNS_11MediaValuesERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.blink::SizesAttributeParser"*, %"class.blink::MediaValues"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) unnamed_addr #2

declare float @_ZN5blink20SizesAttributeParser6lengthEv(%"class.blink::SizesAttributeParser"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network15CorsErrorStatusD1Ev(%"struct.network::CorsErrorStatus"*) unnamed_addr #8

declare zeroext i1 @_ZNK5blink11ImageLoader15HasPendingEventEv(%"class.blink::ImageLoader"*) local_unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink15HTMLImageLoaderC1EPNS_7ElementE(%"class.blink::HTMLImageLoader"*, %"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11ImageLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11ImageLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ImageLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ImageLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ImageLoader"*
  tail call void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11ImageLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ImageLoader"*
  %3 = bitcast i8* %0 to void (%"class.blink::ImageLoader"*)***
  %4 = load void (%"class.blink::ImageLoader"*)**, void (%"class.blink::ImageLoader"*)*** %3, align 8
  %5 = load void (%"class.blink::ImageLoader"*)*, void (%"class.blink::ImageLoader"*)** %4, align 8
  tail call void %5(%"class.blink::ImageLoader"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11ImageLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLImageLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ImageLoader"*
  tail call void @_ZNK5blink11ImageLoader5TraceEPNS_7VisitorE(%"class.blink::ImageLoader"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLImageElement22ViewportChangeListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLImageElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16HTMLImageElement22ViewportChangeListener5TraceEPNS_7VisitorE(%"class.blink::HTMLImageElement::ViewportChangeListener"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLImageElement::ViewportChangeListener", %"class.blink::HTMLImageElement::ViewportChangeListener"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.3010"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLImageElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLImageElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 144
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLImageLoaderEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 152
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLImageElement22ViewportChangeListenerEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 160
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %35

35:                                               ; preds = %29, %24
  %36 = getelementptr inbounds i8, i8* %1, i64 184
  %37 = bitcast i8* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HTMLSourceElementEE5TraceEPNS_7VisitorEPKv) #12
  br label %46

46:                                               ; preds = %35, %40
  %47 = bitcast i8* %1 to %"class.blink::Element"*
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %47, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLFormElement"*
  tail call void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HTMLSourceElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLSourceElement"*
  tail call void @_ZNK5blink17HTMLSourceElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSourceElement"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink17HTMLSourceElement5TraceEPNS_7VisitorE(%"class.blink::HTMLSourceElement"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLImageElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLImageElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 216
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 216
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -216
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 108, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 216, i64 %47) #12
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLImageElement"*
  tail call void @_ZN5blink16HTMLImageElementC2ERNS_8DocumentEb(%"class.blink::HTMLImageElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0, i1 zeroext false)
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLImageElement"* %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_22MediaQueryListListenerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_22MediaQueryListListenerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_22MediaQueryListListenerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_22MediaQueryListListenerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22MediaQueryListListenerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22MediaQueryListListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaQueryListListener"*
  %4 = bitcast i8* %1 to void (%"class.blink::MediaQueryListListener"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MediaQueryListListener"*, %"class.blink::Visitor"*)**, void (%"class.blink::MediaQueryListListener"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MediaQueryListListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaQueryListListener"*, %"class.blink::Visitor"*)** %5, i64 1
  %7 = load void (%"class.blink::MediaQueryListListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaQueryListListener"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MediaQueryListListener"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_22MediaQueryListListenerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink22MediaQueryListListenerC2Ev(%"class.blink::MediaQueryListListener"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HTMLImageElement22ViewportChangeListener23NotifyMediaQueryChangedEv(%"class.blink::HTMLImageElement::ViewportChangeListener"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLImageElement::ViewportChangeListener", %"class.blink::HTMLImageElement::ViewportChangeListener"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLImageElement"*, %"class.blink::HTMLImageElement"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLImageElement"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink16HTMLImageElement15SelectSourceURLENS_11ImageLoader25UpdateFromElementBehaviorE(%"class.blink::HTMLImageElement"* nonnull %3, i32 2) #12
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink19LayoutImageResourceC1Ev(%"class.blink::LayoutImageResource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19LayoutImageResourceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19LayoutImageResourceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19LayoutImageResourceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19LayoutImageResourceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19LayoutImageResourceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19LayoutImageResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LayoutImageResource"*
  %4 = bitcast i8* %1 to void (%"class.blink::LayoutImageResource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::LayoutImageResource"*, %"class.blink::Visitor"*)**, void (%"class.blink::LayoutImageResource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutImageResource"*, %"class.blink::Visitor"*)*, void (%"class.blink::LayoutImageResource"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::LayoutImageResource"*, %"class.blink::Visitor"*)*, void (%"class.blink::LayoutImageResource"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutImageResource"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19LayoutImageResourceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::LayoutImageResource"*
  %3 = bitcast i8* %0 to void (%"class.blink::LayoutImageResource"*)***
  %4 = load void (%"class.blink::LayoutImageResource"*)**, void (%"class.blink::LayoutImageResource"*)*** %3, align 8
  %5 = load void (%"class.blink::LayoutImageResource"*)*, void (%"class.blink::LayoutImageResource"*)** %4, align 8
  tail call void %5(%"class.blink::LayoutImageResource"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19LayoutImageResourceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
