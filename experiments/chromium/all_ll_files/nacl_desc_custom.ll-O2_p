; ModuleID = '../../native_client/src/trusted/desc/nacl_desc_custom.c'
source_filename = "../../native_client/src/trusted/desc/nacl_desc_custom.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClDescEffector = type opaque
%struct.nacl_abi_stat = type opaque
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type { %struct.NaClImcMsgIoVec*, i32, %struct.NaClDesc**, i32, i32 }
%struct.NaClImcMsgIoVec = type { i8*, i64 }
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClDescCustomFuncs = type { void (i8*)*, i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)* }

@nacl_check_debug_mode = external local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.1 = private unnamed_addr constant [56 x i8] c"../../native_client/src/trusted/desc/nacl_desc_custom.c\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"funcs->Destroy != NULL\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"funcs->SendMsg != NULL\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"funcs->RecvMsg != NULL\00", align 1
@kNaClDescCustomVtbl = internal constant %struct.NaClDescVtbl { %struct.NaClRefCountVtbl { void (%struct.NaClRefCount*)* @NaClDescCustomDtor }, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)* @NaClDescMapNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescWriteNotImplemented, i64 (%struct.NaClDesc*, i64, i32)* @NaClDescSeekNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPWriteNotImplemented, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)* @NaClDescFstatNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFchdirNotImplemented, i32 (%struct.NaClDesc*, i32)* @NaClDescFchmodNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFsyncNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFdatasyncNotImplemented, i32 (%struct.NaClDesc*, i64)* @NaClDescFtruncateNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescGetdentsNotImplemented, i32 (%struct.NaClDesc*, i64*, i64*)* @NaClDescExternalizeSizeNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)* @NaClDescExternalizeNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescTryLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescUnlockNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*)* @NaClDescWaitNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)* @NaClDescTimedWaitAbsNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSignalNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescBroadcastNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescCustomSendMsg, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescCustomRecvMsg, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelRecvMsgNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescConnectAddrNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescAcceptConnNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescPostNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSemWaitNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescGetValueNotImplemented, i32 (%struct.NaClDesc*, i32, i32, i8*)* @NaClDescSetMetadata, i32 (%struct.NaClDesc*, i32*, i8*)* @NaClDescGetMetadata, void (%struct.NaClDesc*, i32)* @NaClDescSetFlags, i32 (%struct.NaClDesc*)* @NaClDescGetFlags, i32 (%struct.NaClDesc*)* @NaClDescIsattyNotImplemented, i32 16 }, align 8
@kNaClDescVtbl = external constant %struct.NaClDescVtbl, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClDesc* @NaClDescMakeCustomDesc(i8*, %struct.NaClDescCustomFuncs* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @malloc(i64 112) #5
  %4 = icmp eq i8* %3, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct.NaClDesc*
  %7 = tail call i32 @NaClDescCtor(%struct.NaClDesc* nonnull %6) #5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @free(i8* nonnull %3) #5
  br label %38

10:                                               ; preds = %5
  %11 = load i32, i32* @nacl_check_debug_mode, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %32, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.NaClDescCustomFuncs, %struct.NaClDescCustomFuncs* %1, i64 0, i32 0
  %15 = load void (i8*)*, void (i8*)** %14, align 8
  %16 = icmp eq void (i8*)* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #5
  %18 = load i32, i32* @nacl_check_debug_mode, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13, %17
  %21 = getelementptr inbounds %struct.NaClDescCustomFuncs, %struct.NaClDescCustomFuncs* %1, i64 0, i32 1
  %22 = load i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)** %21, align 8
  %23 = icmp eq i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1, i64 0, i64 0), i32 34, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #5
  %25 = load i32, i32* @nacl_check_debug_mode, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %20, %24
  %28 = getelementptr inbounds %struct.NaClDescCustomFuncs, %struct.NaClDescCustomFuncs* %1, i64 0, i32 2
  %29 = load i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)** %28, align 8
  %30 = icmp eq i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %32

32:                                               ; preds = %10, %17, %27, %24, %31
  %33 = getelementptr inbounds i8, i8* %3, i64 80
  %34 = bitcast i8* %33 to i8**
  store i8* %0, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %3, i64 88
  %36 = bitcast %struct.NaClDescCustomFuncs* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
  %37 = bitcast i8* %3 to %struct.NaClRefCountVtbl**
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescCustomVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %37, align 8
  br label %38

38:                                               ; preds = %2, %32, %9
  %39 = phi %struct.NaClDesc* [ %6, %32 ], [ null, %9 ], [ null, %2 ]
  ret %struct.NaClDesc* %39
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

declare i32 @NaClDescCtor(%struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal void @NaClDescCustomDtor(%struct.NaClRefCount*) #0 {
  %2 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 1, i32 1, i32 0, i32 0, i32 7
  %3 = bitcast %struct.__pthread_internal_list* %2 to void (i8*)**
  %4 = load void (i8*)*, void (i8*)** %3, align 8
  %5 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 1, i32 1, i32 0, i32 0, i32 4
  %6 = bitcast i32* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void %4(i8* %7) #5
  %8 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 0, i32 0
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %8, align 8
  %9 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0, i32 0), align 8
  tail call void %9(%struct.NaClRefCount* %0) #5
  ret void
}

declare i64 @NaClDescMapNotImplemented(%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64) #2

declare i64 @NaClDescReadNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i64 @NaClDescWriteNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i64 @NaClDescSeekNotImplemented(%struct.NaClDesc*, i64, i32) #2

declare i64 @NaClDescPReadNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #2

declare i64 @NaClDescPWriteNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #2

declare i32 @NaClDescFstatNotImplemented(%struct.NaClDesc*, %struct.nacl_abi_stat*) #2

declare i32 @NaClDescFchdirNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFchmodNotImplemented(%struct.NaClDesc*, i32) #2

declare i32 @NaClDescFsyncNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFdatasyncNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFtruncateNotImplemented(%struct.NaClDesc*, i64) #2

declare i64 @NaClDescGetdentsNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i32 @NaClDescExternalizeSizeNotImplemented(%struct.NaClDesc*, i64*, i64*) #2

declare i32 @NaClDescExternalizeNotImplemented(%struct.NaClDesc*, %struct.NaClDescXferState*) #2

declare i32 @NaClDescLockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescTryLockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescUnlockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescWaitNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*) #2

declare i32 @NaClDescTimedWaitAbsNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*) #2

declare i32 @NaClDescSignalNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescBroadcastNotImplemented(%struct.NaClDesc*) #2

; Function Attrs: nounwind ssp uwtable
define internal i64 @NaClDescCustomSendMsg(%struct.NaClDesc* nocapture readonly, %struct.NaClImcTypedMsgHdr*, i32) #0 {
  %4 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 2
  %5 = bitcast i32* %4 to i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)**
  %6 = load i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)** %5, align 8
  %7 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %8 = bitcast %struct.NaClDesc* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i64 %6(i8* %9, %struct.NaClImcTypedMsgHdr* %1, i32 %2) #5
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @NaClDescCustomRecvMsg(%struct.NaClDesc* nocapture readonly, %struct.NaClImcTypedMsgHdr*, i32) #0 {
  %4 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1, i32 0, i32 1, i32 0, i32 0, i32 4
  %5 = bitcast i32* %4 to i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)**
  %6 = load i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (i8*, %struct.NaClImcTypedMsgHdr*, i32)** %5, align 8
  %7 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %8 = bitcast %struct.NaClDesc* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i64 %6(i8* %9, %struct.NaClImcTypedMsgHdr* %1, i32 %2) #5
  ret i64 %10
}

declare i64 @NaClDescLowLevelSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #2

declare i64 @NaClDescLowLevelRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #2

declare i32 @NaClDescConnectAddrNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #2

declare i32 @NaClDescAcceptConnNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #2

declare i32 @NaClDescPostNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescSemWaitNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescGetValueNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescSetMetadata(%struct.NaClDesc*, i32, i32, i8*) #2

declare i32 @NaClDescGetMetadata(%struct.NaClDesc*, i32*, i8*) #2

declare void @NaClDescSetFlags(%struct.NaClDesc*, i32) #2

declare i32 @NaClDescGetFlags(%struct.NaClDesc*) #2

declare i32 @NaClDescIsattyNotImplemented(%struct.NaClDesc*) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
