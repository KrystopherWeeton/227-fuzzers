; ModuleID = '../../third_party/blink/renderer/platform/wtf/threading_pthreads.cc'
source_filename = "../../third_party/blink/renderer/platform/wtf/threading_pthreads.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::ThreadCondition" = type { %union.pthread_cond_t, %"struct.WTF::PlatformMutex"* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%union.pthread_mutexattr_t = type { i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%union.pthread_condattr_t = type { i32 }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.3 }
%struct.anon.3 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic", i32, i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

@.str = private unnamed_addr constant [5 x i8] c"Wait\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/platform/wtf/threading_pthreads.cc\00", align 1

@_ZN3WTF9MutexBaseC1Eb = hidden unnamed_addr alias void (%"class.WTF::MutexBase"*, i1), void (%"class.WTF::MutexBase"*, i1)* @_ZN3WTF9MutexBaseC2Eb
@_ZN3WTF9MutexBaseD1Ev = hidden unnamed_addr alias void (%"class.WTF::MutexBase"*), void (%"class.WTF::MutexBase"*)* @_ZN3WTF9MutexBaseD2Ev
@_ZN3WTF15ThreadConditionC1ERNS_5MutexE = hidden unnamed_addr alias void (%"class.WTF::ThreadCondition"*, %"class.WTF::Mutex"*), void (%"class.WTF::ThreadCondition"*, %"class.WTF::Mutex"*)* @_ZN3WTF15ThreadConditionC2ERNS_5MutexE
@_ZN3WTF15ThreadConditionD1Ev = hidden unnamed_addr alias void (%"class.WTF::ThreadCondition"*), void (%"class.WTF::ThreadCondition"*)* @_ZN3WTF15ThreadConditionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_mutexattr_t, align 4
  %4 = bitcast %union.pthread_mutexattr_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  %5 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %3, i64 0, i32 0
  store i32 -1431655766, i32* %5, align 4
  %6 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %3) #4
  %7 = zext i1 %1 to i32
  %8 = call i32 @pthread_mutexattr_settype(%union.pthread_mutexattr_t* nonnull %3, i32 %7) #4
  %9 = getelementptr inbounds %"class.WTF::MutexBase", %"class.WTF::MutexBase"* %0, i64 0, i32 0, i32 0
  %10 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %9, %union.pthread_mutexattr_t* nonnull %3) #4
  %11 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_settype(%union.pthread_mutexattr_t*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::MutexBase", %"class.WTF::MutexBase"* %0, i64 0, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %2) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::MutexBase", %"class.WTF::MutexBase"* %0, i64 0, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::MutexBase", %"class.WTF::MutexBase"* %0, i64 0, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %2) #4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3WTF14RecursiveMutex7TryLockEv(%"class.WTF::RecursiveMutex"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::RecursiveMutex", %"class.WTF::RecursiveMutex"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %2) #4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF15ThreadConditionC2ERNS_5MutexE(%"class.WTF::ThreadCondition"*, %"class.WTF::Mutex"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::ThreadCondition", %"class.WTF::ThreadCondition"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %1, i64 0, i32 0, i32 0
  store %"struct.WTF::PlatformMutex"* %4, %"struct.WTF::PlatformMutex"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadCondition", %"class.WTF::ThreadCondition"* %0, i64 0, i32 0
  %6 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %5, %union.pthread_condattr_t* null) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_condattr_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF15ThreadConditionD2Ev(%"class.WTF::ThreadCondition"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::ThreadCondition", %"class.WTF::ThreadCondition"* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %2) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_destroy(%union.pthread_cond_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF15ThreadCondition4WaitEv(%"class.WTF::ThreadCondition"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ScopedBlockingCall", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast %"class.base::ScopedBlockingCall"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  %5 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 152) #4
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3, i32 0) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.WTF::ThreadCondition", %"class.WTF::ThreadCondition"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::ThreadCondition", %"class.WTF::ThreadCondition"* %0, i64 0, i32 1
  %8 = load %"struct.WTF::PlatformMutex"*, %"struct.WTF::PlatformMutex"** %7, align 8
  %9 = getelementptr inbounds %"struct.WTF::PlatformMutex", %"struct.WTF::PlatformMutex"* %8, i64 0, i32 0
  %10 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %6, %union.pthread_mutex_t* %9) #4
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #3

declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF15ThreadCondition6SignalEv(%"class.WTF::ThreadCondition"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::ThreadCondition", %"class.WTF::ThreadCondition"* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %2) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_signal(%union.pthread_cond_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3WTF15ThreadCondition9BroadcastEv(%"class.WTF::ThreadCondition"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.WTF::ThreadCondition", %"class.WTF::ThreadCondition"* %0, i64 0, i32 0
  %3 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %2) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_broadcast(%union.pthread_cond_t*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
