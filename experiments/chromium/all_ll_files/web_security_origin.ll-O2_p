; ModuleID = '../../third_party/blink/renderer/platform/exported/web_security_origin.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_security_origin.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1 = type { %"class.blink::SecurityOrigin"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::PtrStorageImpl" = type { %"class.blink::SecurityOrigin"* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink14PtrStorageImplIKNS_14SecurityOriginELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS2_E = comdat any

@_ZN5blink17WebSecurityOriginC1E13scoped_refptrIKNS_14SecurityOriginEE = hidden unnamed_addr alias void (%"class.blink::WebSecurityOrigin"*, %"class.blink::SecurityOrigin"*), void (%"class.blink::WebSecurityOrigin"*, %"class.blink::SecurityOrigin"*)* @_ZN5blink17WebSecurityOriginC2E13scoped_refptrIKNS_14SecurityOriginEE
@_ZN5blink17WebSecurityOriginC1ERKN3url6OriginE = hidden unnamed_addr alias void (%"class.blink::WebSecurityOrigin"*, %"class.url::Origin"*), void (%"class.blink::WebSecurityOrigin"*, %"class.url::Origin"*)* @_ZN5blink17WebSecurityOriginC2ERKN3url6OriginE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WebSecurityOrigin16CreateFromStringERKNS_9WebStringE(%"class.blink::WebSecurityOrigin"* noalias sret, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.1, align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %9 = bitcast %class.scoped_refptr.1* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %3, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %8, %"class.blink::SecurityOrigin"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %11, align 8
  %12 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::PtrStorageImpl"*
  call void @_ZN5blink14PtrStorageImplIKNS_14SecurityOriginELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS2_E(%"class.blink::PtrStorageImpl"* %12, %class.scoped_refptr.1* nonnull dereferenceable(8) %3) #8
  %13 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %10, align 8
  %14 = icmp eq %"class.blink::SecurityOrigin"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %13, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #8
  %17 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %13) #8
  %21 = bitcast %"class.blink::SecurityOrigin"* %13 to i8*
  call void @free(i8* %21) #8
  br label %22

22:                                               ; preds = %20, %15, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #8
  br label %38

38:                                               ; preds = %22, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WebSecurityOrigin6CreateERKNS_6WebURLE(%"class.blink::WebSecurityOrigin"* noalias sret, %"class.blink::WebURL"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.1, align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #8
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %4, %"class.blink::WebURL"* %1) #8
  %6 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %4) #8
  %7 = bitcast %class.scoped_refptr.1* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %3, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %6, %"class.blink::SecurityOrigin"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %9, align 8
  %10 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::PtrStorageImpl"*
  call void @_ZN5blink14PtrStorageImplIKNS_14SecurityOriginELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS2_E(%"class.blink::PtrStorageImpl"* %10, %class.scoped_refptr.1* nonnull dereferenceable(8) %3) #8
  %11 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %8, align 8
  %12 = icmp eq %"class.blink::SecurityOrigin"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %11, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #8
  %15 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %11) #8
  %19 = bitcast %"class.blink::SecurityOrigin"* %11 to i8*
  call void @free(i8* %19) #8
  br label %20

20:                                               ; preds = %18, %13, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #8
  ret void
}

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* sret, %"class.blink::WebURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.scoped_refptr.1, align 8
  %3 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::PtrStorageImpl"*
  %4 = bitcast %class.scoped_refptr.1* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %5, align 8
  call void @_ZN5blink14PtrStorageImplIKNS_14SecurityOriginELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS2_E(%"class.blink::PtrStorageImpl"* %3, %class.scoped_refptr.1* nonnull dereferenceable(8) %2) #8
  %6 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %5, align 8
  %7 = icmp eq %"class.blink::SecurityOrigin"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %6, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #8
  %10 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %6) #8
  %14 = bitcast %"class.blink::SecurityOrigin"* %6 to i8*
  call void @free(i8* %14) #8
  br label %15

15:                                               ; preds = %1, %8, %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WebSecurityOrigin6AssignERKS0_(%"class.blink::WebSecurityOrigin"* nocapture, %"class.blink::WebSecurityOrigin"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebSecurityOrigin"* %1 to %"class.blink::SecurityOrigin"**
  %4 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %3, align 8
  %5 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %6 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %5, align 8
  %7 = icmp eq %"class.blink::SecurityOrigin"* %6, %4
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = icmp eq %"class.blink::SecurityOrigin"* %6, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %11) #8
  %12 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %6) #8
  %16 = bitcast %"class.blink::SecurityOrigin"* %6 to i8*
  tail call void @free(i8* %16) #8
  br label %17

17:                                               ; preds = %15, %10, %8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %5, align 8
  %18 = icmp eq %"class.blink::SecurityOrigin"* %4, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #8
  br label %21

21:                                               ; preds = %19, %17
  store %"class.blink::SecurityOrigin"* %4, %"class.blink::SecurityOrigin"** %5, align 8
  br label %22

22:                                               ; preds = %2, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17WebSecurityOrigin8ProtocolEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = bitcast %"class.blink::WebSecurityOrigin"* %1 to %"class.blink::SecurityOrigin"**
  %6 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #8
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #8
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %27, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void
}

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17WebSecurityOrigin4HostEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = bitcast %"class.blink::WebSecurityOrigin"* %1 to %"class.blink::SecurityOrigin"**
  %6 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #8
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #8
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %27, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK5blink17WebSecurityOrigin4PortEv(%"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 4
  %5 = load i16, i16* %4, align 8
  ret i16 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17WebSecurityOrigin8IsOpaqueEv(%"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17WebSecurityOrigin9CanAccessERKS0_(%"class.blink::WebSecurityOrigin"* nocapture readonly, %"class.blink::WebSecurityOrigin"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %5 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %4, align 8
  %6 = bitcast %"class.blink::WebSecurityOrigin"* %1 to %"class.blink::SecurityOrigin"**
  %7 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %6, align 8
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 -1431655766, i32* %3, align 4
  %9 = call zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"* %5, %"class.blink::SecurityOrigin"* %7, i32* nonnull dereferenceable(4) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17WebSecurityOrigin10CanRequestERKNS_6WebURLE(%"class.blink::WebSecurityOrigin"* nocapture readonly, %"class.blink::WebURL"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %5 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #8
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %3, %"class.blink::WebURL"* %1) #8
  %7 = call zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"* %5, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #8
  ret i1 %7
}

declare zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17WebSecurityOrigin10CanDisplayERKNS_6WebURLE(%"class.blink::WebSecurityOrigin"* nocapture readonly, %"class.blink::WebURL"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %5 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #8
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %3, %"class.blink::WebURL"* %1) #8
  %7 = call zeroext i1 @_ZNK5blink14SecurityOrigin10CanDisplayERKNS_4KURLE(%"class.blink::SecurityOrigin"* %5, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #8
  ret i1 %7
}

declare zeroext i1 @_ZNK5blink14SecurityOrigin10CanDisplayERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17WebSecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %3) #8
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17WebSecurityOrigin8ToStringEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = bitcast %"class.blink::WebSecurityOrigin"* %1 to %"class.blink::SecurityOrigin"**
  %6 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %5, align 8
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %6) #8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #8
  br label %24

24:                                               ; preds = %2, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17WebSecurityOrigin24CanAccessPasswordManagerEv(%"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17WebSecurityOrigin16IsSameOriginWithERKS0_(%"class.blink::WebSecurityOrigin"* nocapture readonly, %"class.blink::WebSecurityOrigin"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %4 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %3, align 8
  %5 = bitcast %"class.blink::WebSecurityOrigin"* %1 to %"class.blink::SecurityOrigin"**
  %6 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* %4, %"class.blink::SecurityOrigin"* %6) #8
  ret i1 %7
}

declare zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WebSecurityOriginC2E13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"*, %"class.blink::SecurityOrigin"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.1, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %3, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %1, %"class.blink::SecurityOrigin"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %5, align 8
  %6 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::PtrStorageImpl"*
  call void @_ZN5blink14PtrStorageImplIKNS_14SecurityOriginELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS2_E(%"class.blink::PtrStorageImpl"* %6, %class.scoped_refptr.1* nonnull dereferenceable(8) %3) #8
  %7 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %4, align 8
  %8 = icmp eq %"class.blink::SecurityOrigin"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %7, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #8
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %7) #8
  %15 = bitcast %"class.blink::SecurityOrigin"* %7 to i8*
  call void @free(i8* %15) #8
  br label %16

16:                                               ; preds = %2, %9, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::WebSecurityOrigin"* @_ZN5blink17WebSecurityOriginaSE13scoped_refptrIKNS_14SecurityOriginEE(%"class.blink::WebSecurityOrigin"* returned, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.1, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %3, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %1, %"class.blink::SecurityOrigin"** %4, align 8
  %5 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::PtrStorageImpl"*
  call void @_ZN5blink14PtrStorageImplIKNS_14SecurityOriginELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS2_E(%"class.blink::PtrStorageImpl"* %5, %class.scoped_refptr.1* nonnull dereferenceable(8) %3) #8
  %6 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %4, align 8
  %7 = icmp eq %"class.blink::SecurityOrigin"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %6, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #8
  %10 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %6) #8
  %14 = bitcast %"class.blink::SecurityOrigin"* %6 to i8*
  call void @free(i8* %14) #8
  br label %15

15:                                               ; preds = %2, %8, %13
  ret %"class.blink::WebSecurityOrigin"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZNK5blink17WebSecurityOrigincv13scoped_refptrIKNS_14SecurityOriginEEEv(%"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.blink::SecurityOrigin"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZNK5blink17WebSecurityOrigin3GetEv(%"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::SecurityOrigin"**
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  ret %"class.blink::SecurityOrigin"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17WebSecurityOriginC2ERKN3url6OriginE(%"class.blink::WebSecurityOrigin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.1, align 8
  %4 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %4, align 8
  %5 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin19CreateFromUrlOriginERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80) %1) #8
  %6 = bitcast %class.scoped_refptr.1* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  %7 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %3, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %5, %"class.blink::SecurityOrigin"** %7, align 8
  %8 = bitcast %"class.blink::WebSecurityOrigin"* %0 to %"class.blink::PtrStorageImpl"*
  call void @_ZN5blink14PtrStorageImplIKNS_14SecurityOriginELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS2_E(%"class.blink::PtrStorageImpl"* %8, %class.scoped_refptr.1* nonnull dereferenceable(8) %3) #8
  %9 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %7, align 8
  %10 = icmp eq %"class.blink::SecurityOrigin"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %9, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #8
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %9) #8
  %17 = bitcast %"class.blink::SecurityOrigin"* %9 to i8*
  call void @free(i8* %17) #8
  br label %18

18:                                               ; preds = %16, %11, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  ret void
}

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin19CreateFromUrlOriginERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17WebSecurityOrigincvN3url6OriginEEv(%"class.url::Origin"* noalias sret, %"class.blink::WebSecurityOrigin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebSecurityOrigin"* %1 to %"class.blink::SecurityOrigin"**
  %4 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %3, align 8
  tail call void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* sret %0, %"class.blink::SecurityOrigin"* %4) #8
  ret void
}

declare void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* sret, %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #8
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #8
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #8
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #8
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #8
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplIKNS_14SecurityOriginELNS_24WebPrivatePtrDestructionE0ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE0EE6AssignEO13scoped_refptrIS2_E(%"class.blink::PtrStorageImpl"*, %class.scoped_refptr.1* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %4 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %3, align 8
  %5 = icmp eq %"class.blink::SecurityOrigin"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #8
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %4) #8
  %12 = bitcast %"class.blink::SecurityOrigin"* %4 to i8*
  tail call void @free(i8* %12) #8
  br label %13

13:                                               ; preds = %2, %6, %11
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %3, align 8
  %14 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %1, i64 0, i32 0
  %15 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %14, align 8
  %16 = icmp eq %"class.blink::SecurityOrigin"* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = ptrtoint %"class.blink::SecurityOrigin"* %15 to i64
  %19 = bitcast %class.scoped_refptr.1* %1 to i64*
  br label %24

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #8
  %22 = bitcast %class.scoped_refptr.1* %1 to i64*
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %17, %20
  %25 = phi i64* [ %19, %17 ], [ %22, %20 ]
  %26 = phi i64 [ %18, %17 ], [ %23, %20 ]
  %27 = bitcast %"class.blink::PtrStorageImpl"* %0 to i64*
  store i64 %26, i64* %27, align 8
  %28 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %14, align 8
  store i64 0, i64* %25, align 8
  %29 = icmp eq %"class.blink::SecurityOrigin"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #8
  %32 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %28) #8
  %36 = bitcast %"class.blink::SecurityOrigin"* %28 to i8*
  tail call void @free(i8* %36) #8
  br label %37

37:                                               ; preds = %24, %30, %35
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
