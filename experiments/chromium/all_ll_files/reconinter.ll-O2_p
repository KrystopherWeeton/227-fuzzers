; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/reconinter.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/reconinter.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.blockd = type { i16*, i16*, i8*, i16*, i32, i8*, %union.b_mode_info }
%union.b_mode_info = type { i32 }
%struct.MV = type { i16, i16 }
%struct.macroblockd = type { [384 x i8], [400 x i16], [400 x i16], [25 x i8], [7 x i8], [16 x i16], [16 x i16], [16 x i16], [16 x i16], [25 x %struct.blockd], i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.modeinfo*, i32, i32, i32, i32, [3 x i8*], [3 x i8*], [2 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES*, i8, i8, i8, i8, [3 x i8], [2 x [4 x i8]], i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], i32, i32, i32, i32, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, i8*, i32, %struct.vpx_internal_error_info, [16 x i8], [704 x i8] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%union.int_mv = type { i32 }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_copy_mem16x16_c(i8* nocapture readonly, i32, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %0, i64 16, i1 false)
  %7 = getelementptr inbounds i8, i8* %0, i64 %5
  %8 = getelementptr inbounds i8, i8* %2, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %7, i64 16, i1 false)
  %9 = getelementptr inbounds i8, i8* %7, i64 %5
  %10 = getelementptr inbounds i8, i8* %8, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %9, i64 16, i1 false)
  %11 = getelementptr inbounds i8, i8* %9, i64 %5
  %12 = getelementptr inbounds i8, i8* %10, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %11, i64 16, i1 false)
  %13 = getelementptr inbounds i8, i8* %11, i64 %5
  %14 = getelementptr inbounds i8, i8* %12, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %13, i64 16, i1 false)
  %15 = getelementptr inbounds i8, i8* %13, i64 %5
  %16 = getelementptr inbounds i8, i8* %14, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %15, i64 16, i1 false)
  %17 = getelementptr inbounds i8, i8* %15, i64 %5
  %18 = getelementptr inbounds i8, i8* %16, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %17, i64 16, i1 false)
  %19 = getelementptr inbounds i8, i8* %17, i64 %5
  %20 = getelementptr inbounds i8, i8* %18, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %19, i64 16, i1 false)
  %21 = getelementptr inbounds i8, i8* %19, i64 %5
  %22 = getelementptr inbounds i8, i8* %20, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %21, i64 16, i1 false)
  %23 = getelementptr inbounds i8, i8* %21, i64 %5
  %24 = getelementptr inbounds i8, i8* %22, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %23, i64 16, i1 false)
  %25 = getelementptr inbounds i8, i8* %23, i64 %5
  %26 = getelementptr inbounds i8, i8* %24, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %25, i64 16, i1 false)
  %27 = getelementptr inbounds i8, i8* %25, i64 %5
  %28 = getelementptr inbounds i8, i8* %26, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %27, i64 16, i1 false)
  %29 = getelementptr inbounds i8, i8* %27, i64 %5
  %30 = getelementptr inbounds i8, i8* %28, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %29, i64 16, i1 false)
  %31 = getelementptr inbounds i8, i8* %29, i64 %5
  %32 = getelementptr inbounds i8, i8* %30, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %31, i64 16, i1 false)
  %33 = getelementptr inbounds i8, i8* %31, i64 %5
  %34 = getelementptr inbounds i8, i8* %32, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %33, i64 16, i1 false)
  %35 = getelementptr inbounds i8, i8* %33, i64 %5
  %36 = getelementptr inbounds i8, i8* %34, i64 %6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %35, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_copy_mem8x8_c(i8* nocapture readonly, i32, i8* nocapture, i32) local_unnamed_addr #2 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %0 to i64*
  %8 = bitcast i8* %2 to i64*
  %9 = load i64, i64* %7, align 1
  store i64 %9, i64* %8, align 1
  %10 = getelementptr inbounds i8, i8* %0, i64 %5
  %11 = getelementptr inbounds i8, i8* %2, i64 %6
  %12 = bitcast i8* %10 to i64*
  %13 = bitcast i8* %11 to i64*
  %14 = load i64, i64* %12, align 1
  store i64 %14, i64* %13, align 1
  %15 = getelementptr inbounds i8, i8* %10, i64 %5
  %16 = getelementptr inbounds i8, i8* %11, i64 %6
  %17 = bitcast i8* %15 to i64*
  %18 = bitcast i8* %16 to i64*
  %19 = load i64, i64* %17, align 1
  store i64 %19, i64* %18, align 1
  %20 = getelementptr inbounds i8, i8* %15, i64 %5
  %21 = getelementptr inbounds i8, i8* %16, i64 %6
  %22 = bitcast i8* %20 to i64*
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 1
  %25 = getelementptr inbounds i8, i8* %20, i64 %5
  %26 = getelementptr inbounds i8, i8* %21, i64 %6
  %27 = bitcast i8* %25 to i64*
  %28 = bitcast i8* %26 to i64*
  %29 = load i64, i64* %27, align 1
  store i64 %29, i64* %28, align 1
  %30 = getelementptr inbounds i8, i8* %25, i64 %5
  %31 = getelementptr inbounds i8, i8* %26, i64 %6
  %32 = bitcast i8* %30 to i64*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %32, align 1
  store i64 %34, i64* %33, align 1
  %35 = getelementptr inbounds i8, i8* %30, i64 %5
  %36 = getelementptr inbounds i8, i8* %31, i64 %6
  %37 = bitcast i8* %35 to i64*
  %38 = bitcast i8* %36 to i64*
  %39 = load i64, i64* %37, align 1
  store i64 %39, i64* %38, align 1
  %40 = getelementptr inbounds i8, i8* %35, i64 %5
  %41 = getelementptr inbounds i8, i8* %36, i64 %6
  %42 = bitcast i8* %40 to i64*
  %43 = bitcast i8* %41 to i64*
  %44 = load i64, i64* %42, align 1
  store i64 %44, i64* %43, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_copy_mem8x4_c(i8* nocapture readonly, i32, i8* nocapture, i32) local_unnamed_addr #2 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %0 to i64*
  %8 = bitcast i8* %2 to i64*
  %9 = load i64, i64* %7, align 1
  store i64 %9, i64* %8, align 1
  %10 = getelementptr inbounds i8, i8* %0, i64 %5
  %11 = getelementptr inbounds i8, i8* %2, i64 %6
  %12 = bitcast i8* %10 to i64*
  %13 = bitcast i8* %11 to i64*
  %14 = load i64, i64* %12, align 1
  store i64 %14, i64* %13, align 1
  %15 = getelementptr inbounds i8, i8* %10, i64 %5
  %16 = getelementptr inbounds i8, i8* %11, i64 %6
  %17 = bitcast i8* %15 to i64*
  %18 = bitcast i8* %16 to i64*
  %19 = load i64, i64* %17, align 1
  store i64 %19, i64* %18, align 1
  %20 = getelementptr inbounds i8, i8* %15, i64 %5
  %21 = getelementptr inbounds i8, i8* %16, i64 %6
  %22 = bitcast i8* %20 to i64*
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %22, align 1
  store i64 %24, i64* %23, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_build_inter_predictors_b(%struct.blockd* nocapture readonly, i32, i8*, i32, void (i8*, i32, i32, i32, i8*, i32)* nocapture) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.blockd, %struct.blockd* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.blockd, %struct.blockd* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %2, i64 %10
  %12 = getelementptr inbounds %struct.blockd, %struct.blockd* %0, i64 0, i32 6
  %13 = bitcast %union.b_mode_info* %12 to %struct.MV*
  %14 = bitcast %union.b_mode_info* %12 to i16*
  %15 = load i16, i16* %14, align 8
  %16 = ashr i16 %15, 3
  %17 = sext i16 %16 to i32
  %18 = mul nsw i32 %17, %3
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %11, i64 %19
  %21 = getelementptr inbounds %struct.MV, %struct.MV* %13, i64 0, i32 1
  %22 = load i16, i16* %21, align 2
  %23 = ashr i16 %22, 3
  %24 = sext i16 %23 to i64
  %25 = getelementptr inbounds i8, i8* %20, i64 %24
  %26 = or i16 %22, %15
  %27 = and i16 %26, 7
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %78

29:                                               ; preds = %5
  %30 = sext i32 %1 to i64
  %31 = sext i32 %3 to i64
  %32 = load i8, i8* %25, align 1
  store i8 %32, i8* %7, align 1
  %33 = getelementptr inbounds i8, i8* %25, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds i8, i8* %25, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds i8, i8* %7, i64 2
  store i8 %37, i8* %38, align 1
  %39 = getelementptr inbounds i8, i8* %25, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %7, i64 3
  store i8 %40, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %7, i64 %30
  %43 = getelementptr inbounds i8, i8* %25, i64 %31
  %44 = load i8, i8* %43, align 1
  store i8 %44, i8* %42, align 1
  %45 = getelementptr inbounds i8, i8* %43, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds i8, i8* %42, i64 1
  store i8 %46, i8* %47, align 1
  %48 = getelementptr inbounds i8, i8* %43, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds i8, i8* %42, i64 2
  store i8 %49, i8* %50, align 1
  %51 = getelementptr inbounds i8, i8* %43, i64 3
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds i8, i8* %42, i64 3
  store i8 %52, i8* %53, align 1
  %54 = getelementptr inbounds i8, i8* %42, i64 %30
  %55 = getelementptr inbounds i8, i8* %43, i64 %31
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %54, align 1
  %57 = getelementptr inbounds i8, i8* %55, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds i8, i8* %55, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %54, i64 2
  store i8 %61, i8* %62, align 1
  %63 = getelementptr inbounds i8, i8* %55, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = getelementptr inbounds i8, i8* %54, i64 3
  store i8 %64, i8* %65, align 1
  %66 = getelementptr inbounds i8, i8* %54, i64 %30
  %67 = getelementptr inbounds i8, i8* %55, i64 %31
  %68 = load i8, i8* %67, align 1
  store i8 %68, i8* %66, align 1
  %69 = getelementptr inbounds i8, i8* %67, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = getelementptr inbounds i8, i8* %66, i64 1
  store i8 %70, i8* %71, align 1
  %72 = getelementptr inbounds i8, i8* %67, i64 2
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds i8, i8* %66, i64 2
  store i8 %73, i8* %74, align 1
  %75 = getelementptr inbounds i8, i8* %67, i64 3
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %66, i64 3
  store i8 %76, i8* %77, align 1
  br label %83

78:                                               ; preds = %5
  %79 = and i16 %22, 7
  %80 = zext i16 %79 to i32
  %81 = and i16 %15, 7
  %82 = zext i16 %81 to i32
  tail call void %4(i8* %25, i32 %3, i32 %80, i32 %82, i8* %7, i32 %1) #4
  br label %83

83:                                               ; preds = %29, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_build_inter16x16_predictors_mbuv(%struct.macroblockd*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 256
  %3 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0, i64 320
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 13
  %5 = load %struct.modeinfo*, %struct.modeinfo** %4, align 32
  %6 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %5, i64 0, i32 0, i32 4
  %7 = bitcast %union.int_mv* %6 to %struct.MV*
  %8 = bitcast %union.int_mv* %6 to i16*
  %9 = load i16, i16* %8, align 4
  %10 = sext i16 %9 to i32
  %11 = getelementptr inbounds %struct.MV, %struct.MV* %7, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = sext i16 %12 to i32
  %14 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 9
  %15 = load i32, i32* %14, align 4
  %16 = ashr i32 %10, 31
  %17 = or i32 %16, 1
  %18 = add nsw i32 %17, %10
  %19 = ashr i32 %13, 31
  %20 = or i32 %19, 1
  %21 = add nsw i32 %20, %13
  %22 = sdiv i32 %18, 2
  %23 = sdiv i32 %21, 2
  %24 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 10
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %22, %25
  %27 = and i32 %23, %25
  %28 = ashr i32 %26, 3
  %29 = mul nsw i32 %28, %15
  %30 = ashr i32 %27, 3
  %31 = add nsw i32 %29, %30
  %32 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 14
  %33 = load i8*, i8** %32, align 32
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 15
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %34
  %39 = or i32 %27, %26
  %40 = and i32 %39, 7
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %1
  %43 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 41
  %44 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %43, align 8
  %45 = and i32 %27, 7
  %46 = and i32 %26, 7
  tail call void %44(i8* %35, i32 %15, i32 %45, i32 %46, i8* %2, i32 8) #4
  %47 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %43, align 8
  tail call void %47(i8* %38, i32 %15, i32 %45, i32 %46, i8* %3, i32 8) #4
  br label %49

48:                                               ; preds = %1
  tail call void @vp8_copy_mem8x8_mmx(i8* %35, i32 %15, i8* %2, i32 8) #4
  tail call void @vp8_copy_mem8x8_mmx(i8* %38, i32 %15, i8* %3, i32 8) #4
  br label %49

49:                                               ; preds = %48, %42
  ret void
}

declare void @vp8_copy_mem8x8_mmx(i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_build_inter4x4_predictors_mbuv(%struct.macroblockd*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 9
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 10
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 0, i32 6
  %6 = bitcast %union.b_mode_info* %5 to %struct.MV*
  %7 = bitcast %union.b_mode_info* %5 to i16*
  %8 = load i16, i16* %7, align 8
  %9 = sext i16 %8 to i32
  %10 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 1, i32 6
  %11 = bitcast %union.b_mode_info* %10 to %struct.MV*
  %12 = bitcast %union.b_mode_info* %10 to i16*
  %13 = load i16, i16* %12, align 8
  %14 = sext i16 %13 to i32
  %15 = add nsw i32 %14, %9
  %16 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 4, i32 6
  %17 = bitcast %union.b_mode_info* %16 to %struct.MV*
  %18 = bitcast %union.b_mode_info* %16 to i16*
  %19 = load i16, i16* %18, align 8
  %20 = sext i16 %19 to i32
  %21 = add nsw i32 %15, %20
  %22 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 5, i32 6
  %23 = bitcast %union.b_mode_info* %22 to %struct.MV*
  %24 = bitcast %union.b_mode_info* %22 to i16*
  %25 = load i16, i16* %24, align 8
  %26 = sext i16 %25 to i32
  %27 = add nsw i32 %21, %26
  %28 = ashr i32 %27, 31
  %29 = shl nsw i32 %28, 3
  %30 = or i32 %29, 4
  %31 = add nsw i32 %30, %27
  %32 = sdiv i32 %31, 8
  %33 = load i32, i32* %4, align 8
  %34 = and i32 %32, %33
  %35 = trunc i32 %34 to i16
  %36 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 6
  %37 = bitcast %union.b_mode_info* %36 to %struct.MV*
  %38 = bitcast %union.b_mode_info* %36 to i16*
  store i16 %35, i16* %38, align 8
  %39 = getelementptr inbounds %struct.MV, %struct.MV* %6, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i32
  %42 = getelementptr inbounds %struct.MV, %struct.MV* %11, i64 0, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i32
  %45 = add nsw i32 %44, %41
  %46 = getelementptr inbounds %struct.MV, %struct.MV* %17, i64 0, i32 1
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = getelementptr inbounds %struct.MV, %struct.MV* %23, i64 0, i32 1
  %51 = load i16, i16* %50, align 2
  %52 = sext i16 %51 to i32
  %53 = add nsw i32 %49, %52
  %54 = ashr i32 %53, 31
  %55 = shl nsw i32 %54, 3
  %56 = or i32 %55, 4
  %57 = add nsw i32 %56, %53
  %58 = sdiv i32 %57, 8
  %59 = and i32 %58, %33
  %60 = trunc i32 %59 to i16
  %61 = getelementptr inbounds %struct.MV, %struct.MV* %37, i64 0, i32 1
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %36, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 6, i32 0
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 2, i32 6
  %66 = bitcast %union.b_mode_info* %65 to %struct.MV*
  %67 = bitcast %union.b_mode_info* %65 to i16*
  %68 = load i16, i16* %67, align 8
  %69 = sext i16 %68 to i32
  %70 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 3, i32 6
  %71 = bitcast %union.b_mode_info* %70 to %struct.MV*
  %72 = bitcast %union.b_mode_info* %70 to i16*
  %73 = load i16, i16* %72, align 8
  %74 = sext i16 %73 to i32
  %75 = add nsw i32 %74, %69
  %76 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 6, i32 6
  %77 = bitcast %union.b_mode_info* %76 to %struct.MV*
  %78 = bitcast %union.b_mode_info* %76 to i16*
  %79 = load i16, i16* %78, align 8
  %80 = sext i16 %79 to i32
  %81 = add nsw i32 %75, %80
  %82 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 7, i32 6
  %83 = bitcast %union.b_mode_info* %82 to %struct.MV*
  %84 = bitcast %union.b_mode_info* %82 to i16*
  %85 = load i16, i16* %84, align 8
  %86 = sext i16 %85 to i32
  %87 = add nsw i32 %81, %86
  %88 = ashr i32 %87, 31
  %89 = shl nsw i32 %88, 3
  %90 = or i32 %89, 4
  %91 = add nsw i32 %90, %87
  %92 = sdiv i32 %91, 8
  %93 = and i32 %92, %33
  %94 = trunc i32 %93 to i16
  %95 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 17, i32 6
  %96 = bitcast %union.b_mode_info* %95 to %struct.MV*
  %97 = bitcast %union.b_mode_info* %95 to i16*
  store i16 %94, i16* %97, align 8
  %98 = getelementptr inbounds %struct.MV, %struct.MV* %66, i64 0, i32 1
  %99 = load i16, i16* %98, align 2
  %100 = sext i16 %99 to i32
  %101 = getelementptr inbounds %struct.MV, %struct.MV* %71, i64 0, i32 1
  %102 = load i16, i16* %101, align 2
  %103 = sext i16 %102 to i32
  %104 = add nsw i32 %103, %100
  %105 = getelementptr inbounds %struct.MV, %struct.MV* %77, i64 0, i32 1
  %106 = load i16, i16* %105, align 2
  %107 = sext i16 %106 to i32
  %108 = add nsw i32 %104, %107
  %109 = getelementptr inbounds %struct.MV, %struct.MV* %83, i64 0, i32 1
  %110 = load i16, i16* %109, align 2
  %111 = sext i16 %110 to i32
  %112 = add nsw i32 %108, %111
  %113 = ashr i32 %112, 31
  %114 = shl nsw i32 %113, 3
  %115 = or i32 %114, 4
  %116 = add nsw i32 %115, %112
  %117 = sdiv i32 %116, 8
  %118 = load i32, i32* %4, align 8
  %119 = and i32 %117, %118
  %120 = trunc i32 %119 to i16
  %121 = getelementptr inbounds %struct.MV, %struct.MV* %96, i64 0, i32 1
  store i16 %120, i16* %121, align 2
  %122 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %95, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 21, i32 6, i32 0
  store i32 %123, i32* %124, align 8
  %125 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 8, i32 6
  %126 = bitcast %union.b_mode_info* %125 to %struct.MV*
  %127 = bitcast %union.b_mode_info* %125 to i16*
  %128 = load i16, i16* %127, align 8
  %129 = sext i16 %128 to i32
  %130 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 9, i32 6
  %131 = bitcast %union.b_mode_info* %130 to %struct.MV*
  %132 = bitcast %union.b_mode_info* %130 to i16*
  %133 = load i16, i16* %132, align 8
  %134 = sext i16 %133 to i32
  %135 = add nsw i32 %134, %129
  %136 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 12, i32 6
  %137 = bitcast %union.b_mode_info* %136 to %struct.MV*
  %138 = bitcast %union.b_mode_info* %136 to i16*
  %139 = load i16, i16* %138, align 8
  %140 = sext i16 %139 to i32
  %141 = add nsw i32 %135, %140
  %142 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 13, i32 6
  %143 = bitcast %union.b_mode_info* %142 to %struct.MV*
  %144 = bitcast %union.b_mode_info* %142 to i16*
  %145 = load i16, i16* %144, align 8
  %146 = sext i16 %145 to i32
  %147 = add nsw i32 %141, %146
  %148 = ashr i32 %147, 31
  %149 = shl nsw i32 %148, 3
  %150 = or i32 %149, 4
  %151 = add nsw i32 %150, %147
  %152 = sdiv i32 %151, 8
  %153 = load i32, i32* %4, align 8
  %154 = and i32 %152, %153
  %155 = trunc i32 %154 to i16
  %156 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 6
  %157 = bitcast %union.b_mode_info* %156 to %struct.MV*
  %158 = bitcast %union.b_mode_info* %156 to i16*
  store i16 %155, i16* %158, align 8
  %159 = getelementptr inbounds %struct.MV, %struct.MV* %126, i64 0, i32 1
  %160 = load i16, i16* %159, align 2
  %161 = sext i16 %160 to i32
  %162 = getelementptr inbounds %struct.MV, %struct.MV* %131, i64 0, i32 1
  %163 = load i16, i16* %162, align 2
  %164 = sext i16 %163 to i32
  %165 = add nsw i32 %164, %161
  %166 = getelementptr inbounds %struct.MV, %struct.MV* %137, i64 0, i32 1
  %167 = load i16, i16* %166, align 2
  %168 = sext i16 %167 to i32
  %169 = add nsw i32 %165, %168
  %170 = getelementptr inbounds %struct.MV, %struct.MV* %143, i64 0, i32 1
  %171 = load i16, i16* %170, align 2
  %172 = sext i16 %171 to i32
  %173 = add nsw i32 %169, %172
  %174 = ashr i32 %173, 31
  %175 = shl nsw i32 %174, 3
  %176 = or i32 %175, 4
  %177 = add nsw i32 %176, %173
  %178 = sdiv i32 %177, 8
  %179 = and i32 %178, %153
  %180 = trunc i32 %179 to i16
  %181 = getelementptr inbounds %struct.MV, %struct.MV* %157, i64 0, i32 1
  store i16 %180, i16* %181, align 2
  %182 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %156, i64 0, i32 0
  %183 = load i32, i32* %182, align 8
  %184 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 6, i32 0
  store i32 %183, i32* %184, align 8
  %185 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 10, i32 6
  %186 = bitcast %union.b_mode_info* %185 to %struct.MV*
  %187 = bitcast %union.b_mode_info* %185 to i16*
  %188 = load i16, i16* %187, align 8
  %189 = sext i16 %188 to i32
  %190 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 11, i32 6
  %191 = bitcast %union.b_mode_info* %190 to %struct.MV*
  %192 = bitcast %union.b_mode_info* %190 to i16*
  %193 = load i16, i16* %192, align 8
  %194 = sext i16 %193 to i32
  %195 = add nsw i32 %194, %189
  %196 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 14, i32 6
  %197 = bitcast %union.b_mode_info* %196 to %struct.MV*
  %198 = bitcast %union.b_mode_info* %196 to i16*
  %199 = load i16, i16* %198, align 8
  %200 = sext i16 %199 to i32
  %201 = add nsw i32 %195, %200
  %202 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 15, i32 6
  %203 = bitcast %union.b_mode_info* %202 to %struct.MV*
  %204 = bitcast %union.b_mode_info* %202 to i16*
  %205 = load i16, i16* %204, align 8
  %206 = sext i16 %205 to i32
  %207 = add nsw i32 %201, %206
  %208 = ashr i32 %207, 31
  %209 = shl nsw i32 %208, 3
  %210 = or i32 %209, 4
  %211 = add nsw i32 %210, %207
  %212 = sdiv i32 %211, 8
  %213 = and i32 %212, %153
  %214 = trunc i32 %213 to i16
  %215 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 19, i32 6
  %216 = bitcast %union.b_mode_info* %215 to %struct.MV*
  %217 = bitcast %union.b_mode_info* %215 to i16*
  store i16 %214, i16* %217, align 8
  %218 = getelementptr inbounds %struct.MV, %struct.MV* %186, i64 0, i32 1
  %219 = load i16, i16* %218, align 2
  %220 = sext i16 %219 to i32
  %221 = getelementptr inbounds %struct.MV, %struct.MV* %191, i64 0, i32 1
  %222 = load i16, i16* %221, align 2
  %223 = sext i16 %222 to i32
  %224 = add nsw i32 %223, %220
  %225 = getelementptr inbounds %struct.MV, %struct.MV* %197, i64 0, i32 1
  %226 = load i16, i16* %225, align 2
  %227 = sext i16 %226 to i32
  %228 = add nsw i32 %224, %227
  %229 = getelementptr inbounds %struct.MV, %struct.MV* %203, i64 0, i32 1
  %230 = load i16, i16* %229, align 2
  %231 = sext i16 %230 to i32
  %232 = add nsw i32 %228, %231
  %233 = ashr i32 %232, 31
  %234 = shl nsw i32 %233, 3
  %235 = or i32 %234, 4
  %236 = add nsw i32 %235, %232
  %237 = sdiv i32 %236, 8
  %238 = load i32, i32* %4, align 8
  %239 = and i32 %237, %238
  %240 = trunc i32 %239 to i16
  %241 = getelementptr inbounds %struct.MV, %struct.MV* %216, i64 0, i32 1
  store i16 %240, i16* %241, align 2
  %242 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %215, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 23, i32 6, i32 0
  store i32 %243, i32* %244, align 8
  %245 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 14
  %246 = load i8*, i8** %245, align 32
  %247 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 39
  %248 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 40
  %249 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 6, i32 0
  %250 = load i32, i32* %249, align 8
  %251 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 17, i32 6, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp eq i32 %250, %252
  %254 = trunc i32 %250 to i16
  br i1 %253, label %255, label %283

255:                                              ; preds = %1
  %256 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 2
  %257 = load i8*, i8** %256, align 8
  %258 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 4
  %259 = load i32, i32* %258, align 8
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i8, i8* %246, i64 %260
  %262 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 6
  %263 = bitcast %union.b_mode_info* %262 to %struct.MV*
  %264 = ashr i16 %254, 3
  %265 = sext i16 %264 to i32
  %266 = mul nsw i32 %3, %265
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i8, i8* %261, i64 %267
  %269 = getelementptr inbounds %struct.MV, %struct.MV* %263, i64 0, i32 1
  %270 = load i16, i16* %269, align 2
  %271 = ashr i16 %270, 3
  %272 = sext i16 %271 to i64
  %273 = getelementptr inbounds i8, i8* %268, i64 %272
  %274 = or i16 %270, %254
  %275 = and i16 %274, 7
  %276 = icmp eq i16 %275, 0
  br i1 %276, label %282, label %277

277:                                              ; preds = %255
  %278 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %248, align 32
  %279 = and i16 %270, 7
  %280 = zext i16 %279 to i32
  %281 = and i32 %250, 7
  tail call void %278(i8* %273, i32 %3, i32 %280, i32 %281, i8* %257, i32 8) #4
  br label %288

282:                                              ; preds = %255
  tail call void @vp8_copy_mem8x4_mmx(i8* %273, i32 %3, i8* %257, i32 8) #4
  br label %288

283:                                              ; preds = %1
  %284 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16
  %285 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 17
  %286 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %247, align 8
  tail call void @vp8_build_inter_predictors_b(%struct.blockd* %284, i32 8, i8* %246, i32 %3, void (i8*, i32, i32, i32, i8*, i32)* %286)
  %287 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %247, align 8
  tail call void @vp8_build_inter_predictors_b(%struct.blockd* %285, i32 8, i8* %246, i32 %3, void (i8*, i32, i32, i32, i8*, i32)* %287)
  br label %288

288:                                              ; preds = %282, %277, %283
  %289 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 6, i32 0
  %290 = load i32, i32* %289, align 8
  %291 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 19, i32 6, i32 0
  %292 = load i32, i32* %291, align 8
  %293 = icmp eq i32 %290, %292
  %294 = trunc i32 %290 to i16
  br i1 %293, label %374, label %369

295:                                              ; preds = %402
  %296 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 2
  %297 = load i8*, i8** %296, align 8
  %298 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 4
  %299 = load i32, i32* %298, align 8
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* %404, i64 %300
  %302 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 6
  %303 = bitcast %union.b_mode_info* %302 to %struct.MV*
  %304 = ashr i16 %410, 3
  %305 = sext i16 %304 to i32
  %306 = mul nsw i32 %3, %305
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds i8, i8* %301, i64 %307
  %309 = getelementptr inbounds %struct.MV, %struct.MV* %303, i64 0, i32 1
  %310 = load i16, i16* %309, align 2
  %311 = ashr i16 %310, 3
  %312 = sext i16 %311 to i64
  %313 = getelementptr inbounds i8, i8* %308, i64 %312
  %314 = or i16 %310, %410
  %315 = and i16 %314, 7
  %316 = icmp eq i16 %315, 0
  br i1 %316, label %322, label %317

317:                                              ; preds = %295
  %318 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %248, align 32
  %319 = and i16 %310, 7
  %320 = zext i16 %319 to i32
  %321 = and i32 %406, 7
  tail call void %318(i8* %313, i32 %3, i32 %320, i32 %321, i8* %297, i32 8) #4
  br label %328

322:                                              ; preds = %295
  tail call void @vp8_copy_mem8x4_mmx(i8* %313, i32 %3, i8* %297, i32 8) #4
  br label %328

323:                                              ; preds = %402
  %324 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20
  %325 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 21
  %326 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %247, align 8
  tail call void @vp8_build_inter_predictors_b(%struct.blockd* %324, i32 8, i8* %404, i32 %3, void (i8*, i32, i32, i32, i8*, i32)* %326)
  %327 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %247, align 8
  tail call void @vp8_build_inter_predictors_b(%struct.blockd* %325, i32 8, i8* %404, i32 %3, void (i8*, i32, i32, i32, i8*, i32)* %327)
  br label %328

328:                                              ; preds = %322, %317, %323
  %329 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 6, i32 0
  %330 = load i32, i32* %329, align 8
  %331 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 23, i32 6, i32 0
  %332 = load i32, i32* %331, align 8
  %333 = icmp eq i32 %330, %332
  %334 = trunc i32 %330 to i16
  br i1 %333, label %340, label %335

335:                                              ; preds = %328
  %336 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22
  %337 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 23
  %338 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %247, align 8
  tail call void @vp8_build_inter_predictors_b(%struct.blockd* %336, i32 8, i8* %404, i32 %3, void (i8*, i32, i32, i32, i8*, i32)* %338)
  %339 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %247, align 8
  tail call void @vp8_build_inter_predictors_b(%struct.blockd* %337, i32 8, i8* %404, i32 %3, void (i8*, i32, i32, i32, i8*, i32)* %339)
  br label %368

340:                                              ; preds = %328
  %341 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 2
  %342 = load i8*, i8** %341, align 8
  %343 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 4
  %344 = load i32, i32* %343, align 8
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i8, i8* %404, i64 %345
  %347 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 6
  %348 = bitcast %union.b_mode_info* %347 to %struct.MV*
  %349 = ashr i16 %334, 3
  %350 = sext i16 %349 to i32
  %351 = mul nsw i32 %3, %350
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds i8, i8* %346, i64 %352
  %354 = getelementptr inbounds %struct.MV, %struct.MV* %348, i64 0, i32 1
  %355 = load i16, i16* %354, align 2
  %356 = ashr i16 %355, 3
  %357 = sext i16 %356 to i64
  %358 = getelementptr inbounds i8, i8* %353, i64 %357
  %359 = or i16 %355, %334
  %360 = and i16 %359, 7
  %361 = icmp eq i16 %360, 0
  br i1 %361, label %367, label %362

362:                                              ; preds = %340
  %363 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %248, align 32
  %364 = and i16 %355, 7
  %365 = zext i16 %364 to i32
  %366 = and i32 %330, 7
  tail call void %363(i8* %358, i32 %3, i32 %365, i32 %366, i8* %342, i32 8) #4
  br label %368

367:                                              ; preds = %340
  tail call void @vp8_copy_mem8x4_mmx(i8* %358, i32 %3, i8* %342, i32 8) #4
  br label %368

368:                                              ; preds = %367, %362, %335
  ret void

369:                                              ; preds = %288
  %370 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18
  %371 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 19
  %372 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %247, align 8
  tail call void @vp8_build_inter_predictors_b(%struct.blockd* %370, i32 8, i8* %246, i32 %3, void (i8*, i32, i32, i32, i8*, i32)* %372)
  %373 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %247, align 8
  tail call void @vp8_build_inter_predictors_b(%struct.blockd* %371, i32 8, i8* %246, i32 %3, void (i8*, i32, i32, i32, i8*, i32)* %373)
  br label %402

374:                                              ; preds = %288
  %375 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 2
  %376 = load i8*, i8** %375, align 8
  %377 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 4
  %378 = load i32, i32* %377, align 8
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds i8, i8* %246, i64 %379
  %381 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 6
  %382 = bitcast %union.b_mode_info* %381 to %struct.MV*
  %383 = ashr i16 %294, 3
  %384 = sext i16 %383 to i32
  %385 = mul nsw i32 %3, %384
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds i8, i8* %380, i64 %386
  %388 = getelementptr inbounds %struct.MV, %struct.MV* %382, i64 0, i32 1
  %389 = load i16, i16* %388, align 2
  %390 = ashr i16 %389, 3
  %391 = sext i16 %390 to i64
  %392 = getelementptr inbounds i8, i8* %387, i64 %391
  %393 = or i16 %389, %294
  %394 = and i16 %393, 7
  %395 = icmp eq i16 %394, 0
  br i1 %395, label %401, label %396

396:                                              ; preds = %374
  %397 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %248, align 32
  %398 = and i16 %389, 7
  %399 = zext i16 %398 to i32
  %400 = and i32 %290, 7
  tail call void %397(i8* %392, i32 %3, i32 %399, i32 %400, i8* %376, i32 8) #4
  br label %402

401:                                              ; preds = %374
  tail call void @vp8_copy_mem8x4_mmx(i8* %392, i32 %3, i8* %376, i32 8) #4
  br label %402

402:                                              ; preds = %401, %396, %369
  %403 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 15
  %404 = load i8*, i8** %403, align 8
  %405 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 6, i32 0
  %406 = load i32, i32* %405, align 8
  %407 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 21, i32 6, i32 0
  %408 = load i32, i32* %407, align 8
  %409 = icmp eq i32 %406, %408
  %410 = trunc i32 %406 to i16
  br i1 %409, label %295, label %323
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_build_inter16x16_predictors_mby(%struct.macroblockd* nocapture readonly, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 13
  %5 = load %struct.modeinfo*, %struct.modeinfo** %4, align 32
  %6 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %5, i64 0, i32 0, i32 4
  %7 = bitcast %union.int_mv* %6 to %struct.MV*
  %8 = bitcast %union.int_mv* %6 to i16*
  %9 = load i16, i16* %8, align 4
  %10 = sext i16 %9 to i32
  %11 = getelementptr inbounds %struct.MV, %struct.MV* %7, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = sext i16 %12 to i32
  %14 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 4
  %15 = load i32, i32* %14, align 16
  %16 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 13
  %17 = load i8*, i8** %16, align 8
  %18 = ashr i32 %10, 3
  %19 = mul nsw i32 %18, %15
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %17, i64 %20
  %22 = ashr i32 %13, 3
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = or i16 %12, %9
  %26 = and i16 %25, 7
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 42
  %30 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %29, align 16
  %31 = and i32 %13, 7
  %32 = and i32 %10, 7
  tail call void %30(i8* %24, i32 %15, i32 %31, i32 %32, i8* %1, i32 %2) #4
  br label %34

33:                                               ; preds = %3
  tail call void @vp8_copy_mem16x16_sse2(i8* %24, i32 %15, i8* %1, i32 %2) #4
  br label %34

34:                                               ; preds = %33, %28
  ret void
}

declare void @vp8_copy_mem16x16_sse2(i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_build_inter16x16_predictors_mb(%struct.macroblockd* nocapture readonly, i8*, i8*, i8*, i32, i32) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 13
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 4
  %10 = load i32, i32* %9, align 16
  %11 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 13
  %12 = load %struct.modeinfo*, %struct.modeinfo** %11, align 32
  %13 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %12, i64 0, i32 0, i32 4, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = trunc i32 %14 to i16
  %16 = lshr i32 %14, 16
  %17 = trunc i32 %16 to i16
  %18 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %12, i64 0, i32 0, i32 7
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %57, label %21

21:                                               ; preds = %6
  %22 = ashr i32 %14, 16
  %23 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 35
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, -152
  %26 = icmp sgt i32 %25, %22
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = trunc i32 %24 to i16
  %29 = add i16 %28, -128
  br label %38

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %32 = load i32, i32* %31, align 8
  %33 = add nsw i32 %32, 144
  %34 = icmp slt i32 %33, %22
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = trunc i32 %32 to i16
  %37 = add i16 %36, 128
  br label %38

38:                                               ; preds = %35, %30, %27
  %39 = phi i16 [ %29, %27 ], [ %37, %35 ], [ %17, %30 ]
  %40 = shl i32 %14, 16
  %41 = ashr exact i32 %40, 16
  %42 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 37
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, -152
  %45 = icmp sgt i32 %44, %41
  br i1 %45, label %46, label %49

46:                                               ; preds = %38
  %47 = trunc i32 %43 to i16
  %48 = add i16 %47, -128
  br label %57

49:                                               ; preds = %38
  %50 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  %51 = load i32, i32* %50, align 16
  %52 = add nsw i32 %51, 144
  %53 = icmp slt i32 %52, %41
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = trunc i32 %51 to i16
  %56 = add i16 %55, 128
  br label %57

57:                                               ; preds = %54, %49, %46, %6
  %58 = phi i16 [ %17, %6 ], [ %39, %46 ], [ %39, %49 ], [ %39, %54 ]
  %59 = phi i16 [ %15, %6 ], [ %48, %46 ], [ %15, %49 ], [ %56, %54 ]
  %60 = sext i16 %59 to i32
  %61 = ashr i32 %60, 3
  %62 = mul nsw i32 %61, %10
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %8, i64 %63
  %65 = sext i16 %58 to i32
  %66 = ashr i32 %65, 3
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = zext i16 %58 to i32
  %70 = shl nuw i32 %69, 16
  %71 = zext i16 %59 to i32
  %72 = or i32 %70, %71
  %73 = and i32 %72, 458759
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %57
  %76 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 42
  %77 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %76, align 16
  %78 = and i32 %65, 7
  %79 = and i32 %60, 7
  tail call void %77(i8* %68, i32 %10, i32 %78, i32 %79, i8* %1, i32 %4) #4
  br label %81

80:                                               ; preds = %57
  tail call void @vp8_copy_mem16x16_sse2(i8* %68, i32 %10, i8* %1, i32 %4) #4
  br label %81

81:                                               ; preds = %80, %75
  %82 = ashr i16 %59, 15
  %83 = or i16 %82, 1
  %84 = add i16 %83, %59
  %85 = ashr i16 %58, 15
  %86 = or i16 %85, 1
  %87 = add i16 %86, %58
  %88 = sdiv i16 %84, 2
  %89 = sdiv i16 %87, 2
  %90 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 10
  %91 = load i32, i32* %90, align 8
  %92 = trunc i32 %91 to i16
  %93 = and i16 %88, %92
  %94 = and i16 %89, %92
  %95 = sext i16 %94 to i32
  %96 = shl nsw i32 %95, 1
  %97 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 35
  %98 = load i32, i32* %97, align 4
  %99 = add nsw i32 %98, -152
  %100 = icmp slt i32 %96, %99
  br i1 %100, label %148, label %101

101:                                              ; preds = %81
  %102 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %103 = load i32, i32* %102, align 8
  %104 = add nsw i32 %103, 144
  %105 = icmp sgt i32 %96, %104
  br i1 %105, label %148, label %106

106:                                              ; preds = %101
  %107 = sext i16 %93 to i32
  %108 = shl nsw i32 %107, 1
  %109 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 37
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %110, -152
  %112 = icmp slt i32 %108, %111
  br i1 %112, label %148, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  %115 = load i32, i32* %114, align 16
  %116 = add nsw i32 %115, 144
  %117 = icmp sgt i32 %108, %116
  br i1 %117, label %148, label %118

118:                                              ; preds = %113
  %119 = ashr i32 %10, 1
  %120 = ashr i32 %107, 3
  %121 = mul nsw i32 %120, %119
  %122 = ashr i32 %95, 3
  %123 = add nsw i32 %121, %122
  %124 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 14
  %125 = load i8*, i8** %124, align 32
  %126 = sext i32 %123 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  %128 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 15
  %129 = load i8*, i8** %128, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 %126
  %131 = zext i16 %94 to i32
  %132 = shl nuw i32 %131, 16
  %133 = zext i16 %93 to i32
  %134 = or i32 %132, %133
  %135 = and i32 %134, 458759
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %147, label %137

137:                                              ; preds = %118
  %138 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 41
  %139 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %138, align 8
  %140 = and i32 %95, 7
  %141 = and i32 %107, 7
  tail call void %139(i8* %127, i32 %119, i32 %140, i32 %141, i8* %2, i32 %5) #4
  %142 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %138, align 8
  %143 = and i16 %94, 7
  %144 = zext i16 %143 to i32
  %145 = and i16 %93, 7
  %146 = zext i16 %145 to i32
  tail call void %142(i8* %130, i32 %119, i32 %144, i32 %146, i8* %3, i32 %5) #4
  br label %148

147:                                              ; preds = %118
  tail call void @vp8_copy_mem8x8_mmx(i8* %127, i32 %119, i8* %2, i32 %5) #4
  tail call void @vp8_copy_mem8x8_mmx(i8* %130, i32 %119, i8* %3, i32 %5) #4
  br label %148

148:                                              ; preds = %137, %147, %81, %101, %106, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_build_inter_predictors_mb(%struct.macroblockd*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 13
  %3 = load %struct.modeinfo*, %struct.modeinfo** %2, align 32
  %4 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %3, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 9
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 13
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 14
  %11 = load i8*, i8** %10, align 32
  %12 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 15
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 4
  %15 = load i32, i32* %14, align 16
  %16 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 9
  %17 = load i32, i32* %16, align 4
  tail call void @vp8_build_inter16x16_predictors_mb(%struct.macroblockd* %0, i8* %9, i8* %11, i8* %13, i32 %15, i32 %17)
  br label %761

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 10
  %20 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 35
  %21 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 36
  %22 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 37
  %23 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38
  br label %24

24:                                               ; preds = %151, %18
  %25 = phi i64 [ 0, %18 ], [ %152, %151 ]
  %26 = shl nsw i64 %25, 3
  %27 = shl nuw nsw i64 %25, 1
  br label %28

28:                                               ; preds = %145, %24
  %29 = phi i64 [ 0, %24 ], [ %149, %145 ]
  %30 = shl nuw nsw i64 %29, 1
  %31 = add nuw nsw i64 %30, %26
  %32 = add nuw nsw i64 %29, %27
  %33 = add nuw nsw i64 %32, 16
  %34 = add nuw nsw i64 %32, 20
  %35 = load %struct.modeinfo*, %struct.modeinfo** %2, align 32
  %36 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %35, i64 0, i32 1, i64 %31
  %37 = bitcast %union.b_mode_info* %36 to i16*
  %38 = load i16, i16* %37, align 4
  %39 = sext i16 %38 to i32
  %40 = or i64 %31, 1
  %41 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %35, i64 0, i32 1, i64 %40
  %42 = bitcast %union.b_mode_info* %41 to i16*
  %43 = load i16, i16* %42, align 4
  %44 = sext i16 %43 to i32
  %45 = add nsw i32 %44, %39
  %46 = add nuw nsw i64 %31, 4
  %47 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %35, i64 0, i32 1, i64 %46
  %48 = bitcast %union.b_mode_info* %47 to i16*
  %49 = load i16, i16* %48, align 4
  %50 = sext i16 %49 to i32
  %51 = add nsw i32 %45, %50
  %52 = add nuw nsw i64 %31, 5
  %53 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %35, i64 0, i32 1, i64 %52
  %54 = bitcast %union.b_mode_info* %53 to i16*
  %55 = load i16, i16* %54, align 4
  %56 = sext i16 %55 to i32
  %57 = add nsw i32 %51, %56
  %58 = ashr i32 %57, 31
  %59 = shl nsw i32 %58, 3
  %60 = or i32 %59, 4
  %61 = add nsw i32 %60, %57
  %62 = sdiv i32 %61, 8
  %63 = load i32, i32* %19, align 8
  %64 = and i32 %62, %63
  %65 = trunc i32 %64 to i16
  %66 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %33, i32 6
  %67 = bitcast %union.b_mode_info* %66 to %struct.MV*
  %68 = bitcast %union.b_mode_info* %66 to i16*
  store i16 %65, i16* %68, align 8
  %69 = load %struct.modeinfo*, %struct.modeinfo** %2, align 32
  %70 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %69, i64 0, i32 1, i64 %31
  %71 = bitcast %union.b_mode_info* %70 to %struct.MV*
  %72 = getelementptr inbounds %struct.MV, %struct.MV* %71, i64 0, i32 1
  %73 = load i16, i16* %72, align 2
  %74 = sext i16 %73 to i32
  %75 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %69, i64 0, i32 1, i64 %40
  %76 = bitcast %union.b_mode_info* %75 to %struct.MV*
  %77 = getelementptr inbounds %struct.MV, %struct.MV* %76, i64 0, i32 1
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = add nsw i32 %79, %74
  %81 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %69, i64 0, i32 1, i64 %46
  %82 = bitcast %union.b_mode_info* %81 to %struct.MV*
  %83 = getelementptr inbounds %struct.MV, %struct.MV* %82, i64 0, i32 1
  %84 = load i16, i16* %83, align 2
  %85 = sext i16 %84 to i32
  %86 = add nsw i32 %80, %85
  %87 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %69, i64 0, i32 1, i64 %52
  %88 = bitcast %union.b_mode_info* %87 to %struct.MV*
  %89 = getelementptr inbounds %struct.MV, %struct.MV* %88, i64 0, i32 1
  %90 = load i16, i16* %89, align 2
  %91 = sext i16 %90 to i32
  %92 = add nsw i32 %86, %91
  %93 = ashr i32 %92, 31
  %94 = shl nsw i32 %93, 3
  %95 = or i32 %94, 4
  %96 = add nsw i32 %95, %92
  %97 = sdiv i32 %96, 8
  %98 = load i32, i32* %19, align 8
  %99 = and i32 %97, %98
  %100 = trunc i32 %99 to i16
  %101 = getelementptr inbounds %struct.MV, %struct.MV* %67, i64 0, i32 1
  store i16 %100, i16* %101, align 2
  %102 = load %struct.modeinfo*, %struct.modeinfo** %2, align 32
  %103 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %102, i64 0, i32 0, i32 7
  %104 = load i8, i8* %103, align 2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %145, label %106

106:                                              ; preds = %28
  %107 = shl i32 %99, 16
  %108 = ashr exact i32 %107, 16
  %109 = ashr exact i32 %107, 15
  %110 = load i32, i32* %20, align 4
  %111 = add nsw i32 %110, -152
  %112 = icmp slt i32 %109, %111
  %113 = add nsw i32 %110, -128
  %114 = ashr i32 %113, 1
  %115 = select i1 %112, i32 %114, i32 %108
  %116 = trunc i32 %115 to i16
  store i16 %116, i16* %101, align 2
  %117 = shl i32 %115, 16
  %118 = ashr exact i32 %117, 15
  %119 = load i32, i32* %21, align 8
  %120 = add nsw i32 %119, 144
  %121 = icmp sgt i32 %118, %120
  %122 = add nsw i32 %119, 128
  %123 = lshr i32 %122, 1
  %124 = select i1 %121, i32 %123, i32 %115
  %125 = trunc i32 %124 to i16
  store i16 %125, i16* %101, align 2
  %126 = shl i32 %64, 16
  %127 = ashr exact i32 %126, 16
  %128 = ashr exact i32 %126, 15
  %129 = load i32, i32* %22, align 4
  %130 = add nsw i32 %129, -152
  %131 = icmp slt i32 %128, %130
  %132 = add nsw i32 %129, -128
  %133 = ashr i32 %132, 1
  %134 = select i1 %131, i32 %133, i32 %127
  %135 = trunc i32 %134 to i16
  store i16 %135, i16* %68, align 2
  %136 = shl i32 %134, 16
  %137 = ashr exact i32 %136, 15
  %138 = load i32, i32* %23, align 16
  %139 = add nsw i32 %138, 144
  %140 = icmp sgt i32 %137, %139
  %141 = add nsw i32 %138, 128
  %142 = lshr i32 %141, 1
  %143 = select i1 %140, i32 %142, i32 %134
  %144 = trunc i32 %143 to i16
  store i16 %144, i16* %68, align 2
  br label %145

145:                                              ; preds = %106, %28
  %146 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %66, i64 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %34, i32 6, i32 0
  store i32 %147, i32* %148, align 8
  %149 = add nuw nsw i64 %29, 1
  %150 = icmp eq i64 %149, 2
  br i1 %150, label %151, label %28

151:                                              ; preds = %145
  %152 = add nuw nsw i64 %25, 1
  %153 = icmp eq i64 %152, 2
  br i1 %153, label %154, label %24

154:                                              ; preds = %151
  %155 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 13
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 13
  %158 = load i8*, i8** %157, align 8
  %159 = load %struct.modeinfo*, %struct.modeinfo** %2, align 32
  %160 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %159, i64 0, i32 0, i32 5
  %161 = load i8, i8* %160, align 4
  %162 = icmp ult i8 %161, 3
  %163 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 4
  br i1 %162, label %167, label %164

164:                                              ; preds = %154
  %165 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 39
  %166 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 40
  br label %430

167:                                              ; preds = %154
  %168 = load i32, i32* %163, align 16
  %169 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 0, i32 6
  %170 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %159, i64 0, i32 1, i64 0, i32 0
  %171 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %169, i64 0, i32 0
  %172 = load i32, i32* %170, align 4
  store i32 %172, i32* %171, align 16
  %173 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 2, i32 6
  %174 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %159, i64 0, i32 1, i64 2, i32 0
  %175 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %173, i64 0, i32 0
  %176 = load i32, i32* %174, align 4
  store i32 %176, i32* %175, align 16
  %177 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 8, i32 6
  %178 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %159, i64 0, i32 1, i64 8, i32 0
  %179 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %177, i64 0, i32 0
  %180 = load i32, i32* %178, align 4
  store i32 %180, i32* %179, align 16
  %181 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 10, i32 6
  %182 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %159, i64 0, i32 1, i64 10, i32 0
  %183 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %181, i64 0, i32 0
  %184 = load i32, i32* %182, align 4
  store i32 %184, i32* %183, align 16
  %185 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %159, i64 0, i32 0, i32 7
  %186 = load i8, i8* %185, align 2
  %187 = icmp eq i8 %186, 0
  %188 = lshr i32 %172, 16
  %189 = trunc i32 %188 to i16
  %190 = trunc i32 %172 to i16
  br i1 %187, label %313, label %191

191:                                              ; preds = %167
  %192 = bitcast %union.b_mode_info* %169 to %struct.MV*
  %193 = getelementptr inbounds %struct.MV, %struct.MV* %192, i64 0, i32 1
  %194 = ashr i32 %172, 16
  %195 = load i32, i32* %20, align 4
  %196 = add nsw i32 %195, -152
  %197 = icmp sgt i32 %196, %194
  br i1 %197, label %198, label %201

198:                                              ; preds = %191
  %199 = trunc i32 %195 to i16
  %200 = add i16 %199, -128
  br label %208

201:                                              ; preds = %191
  %202 = load i32, i32* %21, align 8
  %203 = add nsw i32 %202, 144
  %204 = icmp slt i32 %203, %194
  br i1 %204, label %205, label %210

205:                                              ; preds = %201
  %206 = trunc i32 %202 to i16
  %207 = add i16 %206, 128
  br label %208

208:                                              ; preds = %198, %205
  %209 = phi i16 [ %207, %205 ], [ %200, %198 ]
  store i16 %209, i16* %193, align 2
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i16 [ %189, %201 ], [ %209, %208 ]
  %212 = bitcast %union.b_mode_info* %169 to i16*
  %213 = shl i32 %172, 16
  %214 = ashr exact i32 %213, 16
  %215 = load i32, i32* %22, align 4
  %216 = add nsw i32 %215, -152
  %217 = icmp sgt i32 %216, %214
  br i1 %217, label %222, label %218

218:                                              ; preds = %210
  %219 = load i32, i32* %23, align 16
  %220 = add nsw i32 %219, 144
  %221 = icmp slt i32 %220, %214
  br i1 %221, label %222, label %227

222:                                              ; preds = %218, %210
  %223 = phi i32 [ %215, %210 ], [ %219, %218 ]
  %224 = phi i16 [ -128, %210 ], [ 128, %218 ]
  %225 = trunc i32 %223 to i16
  %226 = add i16 %224, %225
  store i16 %226, i16* %212, align 2
  br label %227

227:                                              ; preds = %222, %218
  %228 = phi i16 [ %190, %218 ], [ %226, %222 ]
  %229 = bitcast %union.b_mode_info* %173 to %struct.MV*
  %230 = getelementptr inbounds %struct.MV, %struct.MV* %229, i64 0, i32 1
  %231 = ashr i32 %176, 16
  %232 = icmp sgt i32 %196, %231
  br i1 %232, label %237, label %233

233:                                              ; preds = %227
  %234 = load i32, i32* %21, align 8
  %235 = add nsw i32 %234, 144
  %236 = icmp slt i32 %235, %231
  br i1 %236, label %237, label %242

237:                                              ; preds = %233, %227
  %238 = phi i32 [ %195, %227 ], [ %234, %233 ]
  %239 = phi i16 [ -128, %227 ], [ 128, %233 ]
  %240 = trunc i32 %238 to i16
  %241 = add i16 %239, %240
  store i16 %241, i16* %230, align 2
  br label %242

242:                                              ; preds = %237, %233
  %243 = bitcast %union.b_mode_info* %173 to i16*
  %244 = shl i32 %176, 16
  %245 = ashr exact i32 %244, 16
  %246 = icmp sgt i32 %216, %245
  br i1 %246, label %251, label %247

247:                                              ; preds = %242
  %248 = load i32, i32* %23, align 16
  %249 = add nsw i32 %248, 144
  %250 = icmp slt i32 %249, %245
  br i1 %250, label %251, label %256

251:                                              ; preds = %247, %242
  %252 = phi i32 [ %215, %242 ], [ %248, %247 ]
  %253 = phi i16 [ -128, %242 ], [ 128, %247 ]
  %254 = trunc i32 %252 to i16
  %255 = add i16 %253, %254
  store i16 %255, i16* %243, align 2
  br label %256

256:                                              ; preds = %251, %247
  %257 = bitcast %union.b_mode_info* %177 to %struct.MV*
  %258 = getelementptr inbounds %struct.MV, %struct.MV* %257, i64 0, i32 1
  %259 = ashr i32 %180, 16
  %260 = icmp sgt i32 %196, %259
  br i1 %260, label %265, label %261

261:                                              ; preds = %256
  %262 = load i32, i32* %21, align 8
  %263 = add nsw i32 %262, 144
  %264 = icmp slt i32 %263, %259
  br i1 %264, label %265, label %270

265:                                              ; preds = %261, %256
  %266 = phi i32 [ %195, %256 ], [ %262, %261 ]
  %267 = phi i16 [ -128, %256 ], [ 128, %261 ]
  %268 = trunc i32 %266 to i16
  %269 = add i16 %267, %268
  store i16 %269, i16* %258, align 2
  br label %270

270:                                              ; preds = %265, %261
  %271 = bitcast %union.b_mode_info* %177 to i16*
  %272 = shl i32 %180, 16
  %273 = ashr exact i32 %272, 16
  %274 = icmp sgt i32 %216, %273
  br i1 %274, label %279, label %275

275:                                              ; preds = %270
  %276 = load i32, i32* %23, align 16
  %277 = add nsw i32 %276, 144
  %278 = icmp slt i32 %277, %273
  br i1 %278, label %279, label %284

279:                                              ; preds = %275, %270
  %280 = phi i32 [ %215, %270 ], [ %276, %275 ]
  %281 = phi i16 [ -128, %270 ], [ 128, %275 ]
  %282 = trunc i32 %280 to i16
  %283 = add i16 %281, %282
  store i16 %283, i16* %271, align 2
  br label %284

284:                                              ; preds = %279, %275
  %285 = bitcast %union.b_mode_info* %181 to %struct.MV*
  %286 = getelementptr inbounds %struct.MV, %struct.MV* %285, i64 0, i32 1
  %287 = ashr i32 %184, 16
  %288 = icmp sgt i32 %196, %287
  br i1 %288, label %293, label %289

289:                                              ; preds = %284
  %290 = load i32, i32* %21, align 8
  %291 = add nsw i32 %290, 144
  %292 = icmp slt i32 %291, %287
  br i1 %292, label %293, label %298

293:                                              ; preds = %289, %284
  %294 = phi i32 [ %195, %284 ], [ %290, %289 ]
  %295 = phi i16 [ -128, %284 ], [ 128, %289 ]
  %296 = trunc i32 %294 to i16
  %297 = add i16 %295, %296
  store i16 %297, i16* %286, align 2
  br label %298

298:                                              ; preds = %293, %289
  %299 = bitcast %union.b_mode_info* %181 to i16*
  %300 = shl i32 %184, 16
  %301 = ashr exact i32 %300, 16
  %302 = icmp sgt i32 %216, %301
  br i1 %302, label %303, label %306

303:                                              ; preds = %298
  %304 = trunc i32 %215 to i16
  %305 = add i16 %304, -128
  store i16 %305, i16* %299, align 2
  br label %313

306:                                              ; preds = %298
  %307 = load i32, i32* %23, align 16
  %308 = add nsw i32 %307, 144
  %309 = icmp slt i32 %308, %301
  br i1 %309, label %310, label %313

310:                                              ; preds = %306
  %311 = trunc i32 %307 to i16
  %312 = add i16 %311, 128
  store i16 %312, i16* %299, align 2
  br label %313

313:                                              ; preds = %310, %306, %303, %167
  %314 = phi i16 [ %211, %310 ], [ %211, %306 ], [ %211, %303 ], [ %189, %167 ]
  %315 = phi i16 [ %228, %310 ], [ %228, %306 ], [ %228, %303 ], [ %190, %167 ]
  %316 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 0, i32 4
  %317 = load i32, i32* %316, align 8
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i8, i8* %156, i64 %318
  %320 = getelementptr inbounds i8, i8* %158, i64 %318
  %321 = ashr i16 %315, 3
  %322 = sext i16 %321 to i32
  %323 = mul nsw i32 %168, %322
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i8, i8* %320, i64 %324
  %326 = ashr i16 %314, 3
  %327 = sext i16 %326 to i64
  %328 = getelementptr inbounds i8, i8* %325, i64 %327
  %329 = or i16 %315, %314
  %330 = and i16 %329, 7
  %331 = icmp eq i16 %330, 0
  br i1 %331, label %339, label %332

332:                                              ; preds = %313
  %333 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 41
  %334 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %333, align 8
  %335 = and i16 %314, 7
  %336 = zext i16 %335 to i32
  %337 = and i16 %315, 7
  %338 = zext i16 %337 to i32
  tail call void %334(i8* %328, i32 %168, i32 %336, i32 %338, i8* %319, i32 %168) #4
  br label %340

339:                                              ; preds = %313
  tail call void @vp8_copy_mem8x8_mmx(i8* %328, i32 %168, i8* %319, i32 %168) #4
  br label %340

340:                                              ; preds = %339, %332
  %341 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 2, i32 4
  %342 = load i32, i32* %341, align 8
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds i8, i8* %156, i64 %343
  %345 = getelementptr inbounds i8, i8* %158, i64 %343
  %346 = bitcast %union.b_mode_info* %173 to %struct.MV*
  %347 = bitcast %union.b_mode_info* %173 to i16*
  %348 = load i16, i16* %347, align 8
  %349 = ashr i16 %348, 3
  %350 = sext i16 %349 to i32
  %351 = mul nsw i32 %168, %350
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds i8, i8* %345, i64 %352
  %354 = getelementptr inbounds %struct.MV, %struct.MV* %346, i64 0, i32 1
  %355 = load i16, i16* %354, align 2
  %356 = ashr i16 %355, 3
  %357 = sext i16 %356 to i64
  %358 = getelementptr inbounds i8, i8* %353, i64 %357
  %359 = or i16 %355, %348
  %360 = and i16 %359, 7
  %361 = icmp eq i16 %360, 0
  br i1 %361, label %369, label %362

362:                                              ; preds = %340
  %363 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 41
  %364 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %363, align 8
  %365 = and i16 %355, 7
  %366 = zext i16 %365 to i32
  %367 = and i16 %348, 7
  %368 = zext i16 %367 to i32
  tail call void %364(i8* %358, i32 %168, i32 %366, i32 %368, i8* %344, i32 %168) #4
  br label %370

369:                                              ; preds = %340
  tail call void @vp8_copy_mem8x8_mmx(i8* %358, i32 %168, i8* %344, i32 %168) #4
  br label %370

370:                                              ; preds = %369, %362
  %371 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 8, i32 4
  %372 = load i32, i32* %371, align 8
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds i8, i8* %156, i64 %373
  %375 = getelementptr inbounds i8, i8* %158, i64 %373
  %376 = bitcast %union.b_mode_info* %177 to %struct.MV*
  %377 = bitcast %union.b_mode_info* %177 to i16*
  %378 = load i16, i16* %377, align 8
  %379 = ashr i16 %378, 3
  %380 = sext i16 %379 to i32
  %381 = mul nsw i32 %168, %380
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds i8, i8* %375, i64 %382
  %384 = getelementptr inbounds %struct.MV, %struct.MV* %376, i64 0, i32 1
  %385 = load i16, i16* %384, align 2
  %386 = ashr i16 %385, 3
  %387 = sext i16 %386 to i64
  %388 = getelementptr inbounds i8, i8* %383, i64 %387
  %389 = or i16 %385, %378
  %390 = and i16 %389, 7
  %391 = icmp eq i16 %390, 0
  br i1 %391, label %399, label %392

392:                                              ; preds = %370
  %393 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 41
  %394 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %393, align 8
  %395 = and i16 %385, 7
  %396 = zext i16 %395 to i32
  %397 = and i16 %378, 7
  %398 = zext i16 %397 to i32
  tail call void %394(i8* %388, i32 %168, i32 %396, i32 %398, i8* %374, i32 %168) #4
  br label %400

399:                                              ; preds = %370
  tail call void @vp8_copy_mem8x8_mmx(i8* %388, i32 %168, i8* %374, i32 %168) #4
  br label %400

400:                                              ; preds = %399, %392
  %401 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 10, i32 4
  %402 = load i32, i32* %401, align 8
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds i8, i8* %156, i64 %403
  %405 = getelementptr inbounds i8, i8* %158, i64 %403
  %406 = bitcast %union.b_mode_info* %181 to %struct.MV*
  %407 = bitcast %union.b_mode_info* %181 to i16*
  %408 = load i16, i16* %407, align 8
  %409 = ashr i16 %408, 3
  %410 = sext i16 %409 to i32
  %411 = mul nsw i32 %168, %410
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %405, i64 %412
  %414 = getelementptr inbounds %struct.MV, %struct.MV* %406, i64 0, i32 1
  %415 = load i16, i16* %414, align 2
  %416 = ashr i16 %415, 3
  %417 = sext i16 %416 to i64
  %418 = getelementptr inbounds i8, i8* %413, i64 %417
  %419 = or i16 %415, %408
  %420 = and i16 %419, 7
  %421 = icmp eq i16 %420, 0
  br i1 %421, label %429, label %422

422:                                              ; preds = %400
  %423 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 41
  %424 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %423, align 8
  %425 = and i16 %415, 7
  %426 = zext i16 %425 to i32
  %427 = and i16 %408, 7
  %428 = zext i16 %427 to i32
  tail call void %424(i8* %418, i32 %168, i32 %426, i32 %428, i8* %404, i32 %168) #4
  br label %558

429:                                              ; preds = %400
  tail call void @vp8_copy_mem8x8_mmx(i8* %418, i32 %168, i8* %404, i32 %168) #4
  br label %558

430:                                              ; preds = %556, %164
  %431 = phi %struct.modeinfo* [ %159, %164 ], [ %557, %556 ]
  %432 = phi i64 [ 0, %164 ], [ %554, %556 ]
  %433 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %432
  %434 = or i64 %432, 1
  %435 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %434
  %436 = load i32, i32* %163, align 16
  %437 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %432, i32 6
  %438 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %431, i64 0, i32 1, i64 %432, i32 0
  %439 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %437, i64 0, i32 0
  %440 = load i32, i32* %438, align 4
  store i32 %440, i32* %439, align 8
  %441 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %434, i32 6
  %442 = load %struct.modeinfo*, %struct.modeinfo** %2, align 32
  %443 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %442, i64 0, i32 1, i64 %434, i32 0
  %444 = getelementptr inbounds %union.b_mode_info, %union.b_mode_info* %441, i64 0, i32 0
  %445 = load i32, i32* %443, align 4
  store i32 %445, i32* %444, align 8
  %446 = load %struct.modeinfo*, %struct.modeinfo** %2, align 32
  %447 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %446, i64 0, i32 0, i32 7
  %448 = load i8, i8* %447, align 2
  %449 = icmp eq i8 %448, 0
  %450 = lshr i32 %440, 16
  %451 = trunc i32 %450 to i16
  br i1 %449, label %517, label %452

452:                                              ; preds = %430
  %453 = bitcast %union.b_mode_info* %437 to %struct.MV*
  %454 = getelementptr inbounds %struct.MV, %struct.MV* %453, i64 0, i32 1
  %455 = ashr i32 %440, 16
  %456 = load i32, i32* %20, align 4
  %457 = add nsw i32 %456, -152
  %458 = icmp sgt i32 %457, %455
  br i1 %458, label %459, label %462

459:                                              ; preds = %452
  %460 = trunc i32 %456 to i16
  %461 = add i16 %460, -128
  br label %469

462:                                              ; preds = %452
  %463 = load i32, i32* %21, align 8
  %464 = add nsw i32 %463, 144
  %465 = icmp slt i32 %464, %455
  br i1 %465, label %466, label %471

466:                                              ; preds = %462
  %467 = trunc i32 %463 to i16
  %468 = add i16 %467, 128
  br label %469

469:                                              ; preds = %459, %466
  %470 = phi i16 [ %468, %466 ], [ %461, %459 ]
  store i16 %470, i16* %454, align 2
  br label %471

471:                                              ; preds = %469, %462
  %472 = phi i16 [ %451, %462 ], [ %470, %469 ]
  %473 = bitcast %union.b_mode_info* %437 to i16*
  %474 = shl i32 %440, 16
  %475 = ashr exact i32 %474, 16
  %476 = load i32, i32* %22, align 4
  %477 = add nsw i32 %476, -152
  %478 = icmp sgt i32 %477, %475
  br i1 %478, label %483, label %479

479:                                              ; preds = %471
  %480 = load i32, i32* %23, align 16
  %481 = add nsw i32 %480, 144
  %482 = icmp slt i32 %481, %475
  br i1 %482, label %483, label %488

483:                                              ; preds = %479, %471
  %484 = phi i32 [ %476, %471 ], [ %480, %479 ]
  %485 = phi i16 [ -128, %471 ], [ 128, %479 ]
  %486 = trunc i32 %484 to i16
  %487 = add i16 %485, %486
  store i16 %487, i16* %473, align 2
  br label %488

488:                                              ; preds = %483, %479
  %489 = bitcast %union.b_mode_info* %441 to %struct.MV*
  %490 = getelementptr inbounds %struct.MV, %struct.MV* %489, i64 0, i32 1
  %491 = ashr i32 %445, 16
  %492 = icmp sgt i32 %457, %491
  br i1 %492, label %497, label %493

493:                                              ; preds = %488
  %494 = load i32, i32* %21, align 8
  %495 = add nsw i32 %494, 144
  %496 = icmp slt i32 %495, %491
  br i1 %496, label %497, label %502

497:                                              ; preds = %493, %488
  %498 = phi i32 [ %456, %488 ], [ %494, %493 ]
  %499 = phi i16 [ -128, %488 ], [ 128, %493 ]
  %500 = trunc i32 %498 to i16
  %501 = add i16 %499, %500
  store i16 %501, i16* %490, align 2
  br label %502

502:                                              ; preds = %497, %493
  %503 = bitcast %union.b_mode_info* %441 to i16*
  %504 = shl i32 %445, 16
  %505 = ashr exact i32 %504, 16
  %506 = icmp sgt i32 %477, %505
  br i1 %506, label %507, label %510

507:                                              ; preds = %502
  %508 = trunc i32 %476 to i16
  %509 = add i16 %508, -128
  store i16 %509, i16* %503, align 2
  br label %517

510:                                              ; preds = %502
  %511 = load i32, i32* %23, align 16
  %512 = add nsw i32 %511, 144
  %513 = icmp slt i32 %512, %505
  br i1 %513, label %514, label %517

514:                                              ; preds = %510
  %515 = trunc i32 %511 to i16
  %516 = add i16 %515, 128
  store i16 %516, i16* %503, align 2
  br label %517

517:                                              ; preds = %514, %510, %507, %430
  %518 = phi i16 [ %472, %514 ], [ %472, %510 ], [ %472, %507 ], [ %451, %430 ]
  %519 = load i32, i32* %439, align 8
  %520 = load i32, i32* %444, align 8
  %521 = icmp eq i32 %519, %520
  %522 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %432, i32 4
  %523 = load i32, i32* %522, align 8
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds i8, i8* %156, i64 %524
  %526 = trunc i32 %519 to i16
  br i1 %521, label %527, label %546

527:                                              ; preds = %517
  %528 = getelementptr inbounds i8, i8* %158, i64 %524
  %529 = ashr i16 %526, 3
  %530 = sext i16 %529 to i32
  %531 = mul nsw i32 %436, %530
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8, i8* %528, i64 %532
  %534 = ashr i16 %518, 3
  %535 = sext i16 %534 to i64
  %536 = getelementptr inbounds i8, i8* %533, i64 %535
  %537 = or i16 %518, %526
  %538 = and i16 %537, 7
  %539 = icmp eq i16 %538, 0
  br i1 %539, label %545, label %540

540:                                              ; preds = %527
  %541 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %166, align 32
  %542 = and i16 %518, 7
  %543 = zext i16 %542 to i32
  %544 = and i32 %519, 7
  tail call void %541(i8* %536, i32 %436, i32 %543, i32 %544, i8* %525, i32 %436) #4
  br label %553

545:                                              ; preds = %527
  tail call void @vp8_copy_mem8x4_mmx(i8* %536, i32 %436, i8* %525, i32 %436) #4
  br label %553

546:                                              ; preds = %517
  %547 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %165, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %433, i8* %525, i32 %436, i8* %158, i32 %436, void (i8*, i32, i32, i32, i8*, i32)* %547) #4
  %548 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 %434, i32 4
  %549 = load i32, i32* %548, align 8
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds i8, i8* %156, i64 %550
  %552 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %165, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %435, i8* %551, i32 %436, i8* %158, i32 %436, void (i8*, i32, i32, i32, i8*, i32)* %552) #4
  br label %553

553:                                              ; preds = %546, %545, %540
  %554 = add nuw nsw i64 %432, 2
  %555 = icmp ult i64 %554, 16
  br i1 %555, label %556, label %558

556:                                              ; preds = %553
  %557 = load %struct.modeinfo*, %struct.modeinfo** %2, align 32
  br label %430

558:                                              ; preds = %553, %429, %422
  %559 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 14
  %560 = load i8*, i8** %559, align 32
  %561 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 14
  %562 = load i8*, i8** %561, align 32
  %563 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 9
  %564 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 39
  %565 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 40
  %566 = load i32, i32* %563, align 4
  %567 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 6, i32 0
  %568 = load i32, i32* %567, align 8
  %569 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 17, i32 6, i32 0
  %570 = load i32, i32* %569, align 8
  %571 = icmp eq i32 %568, %570
  %572 = trunc i32 %568 to i16
  br i1 %571, label %573, label %600

573:                                              ; preds = %558
  %574 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 4
  %575 = load i32, i32* %574, align 8
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds i8, i8* %560, i64 %576
  %578 = getelementptr inbounds i8, i8* %562, i64 %576
  %579 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 6
  %580 = bitcast %union.b_mode_info* %579 to %struct.MV*
  %581 = ashr i16 %572, 3
  %582 = sext i16 %581 to i32
  %583 = mul nsw i32 %566, %582
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds i8, i8* %578, i64 %584
  %586 = getelementptr inbounds %struct.MV, %struct.MV* %580, i64 0, i32 1
  %587 = load i16, i16* %586, align 2
  %588 = ashr i16 %587, 3
  %589 = sext i16 %588 to i64
  %590 = getelementptr inbounds i8, i8* %585, i64 %589
  %591 = or i16 %587, %572
  %592 = and i16 %591, 7
  %593 = icmp eq i16 %592, 0
  br i1 %593, label %599, label %594

594:                                              ; preds = %573
  %595 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %565, align 32
  %596 = and i16 %587, 7
  %597 = zext i16 %596 to i32
  %598 = and i32 %568, 7
  tail call void %595(i8* %590, i32 %566, i32 %597, i32 %598, i8* %577, i32 %566) #4
  br label %613

599:                                              ; preds = %573
  tail call void @vp8_copy_mem8x4_mmx(i8* %590, i32 %566, i8* %577, i32 %566) #4
  br label %613

600:                                              ; preds = %558
  %601 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16
  %602 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 17
  %603 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 16, i32 4
  %604 = load i32, i32* %603, align 8
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds i8, i8* %560, i64 %605
  %607 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %564, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %601, i8* %606, i32 %566, i8* %562, i32 %566, void (i8*, i32, i32, i32, i8*, i32)* %607) #4
  %608 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 17, i32 4
  %609 = load i32, i32* %608, align 8
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds i8, i8* %560, i64 %610
  %612 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %564, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %602, i8* %611, i32 %566, i8* %562, i32 %566, void (i8*, i32, i32, i32, i8*, i32)* %612) #4
  br label %613

613:                                              ; preds = %600, %599, %594
  %614 = load i32, i32* %563, align 4
  %615 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 6, i32 0
  %616 = load i32, i32* %615, align 8
  %617 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 19, i32 6, i32 0
  %618 = load i32, i32* %617, align 8
  %619 = icmp eq i32 %616, %618
  %620 = trunc i32 %616 to i16
  br i1 %619, label %722, label %709

621:                                              ; preds = %749
  %622 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 4
  %623 = load i32, i32* %622, align 8
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds i8, i8* %751, i64 %624
  %626 = getelementptr inbounds i8, i8* %753, i64 %624
  %627 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 6
  %628 = bitcast %union.b_mode_info* %627 to %struct.MV*
  %629 = ashr i16 %760, 3
  %630 = sext i16 %629 to i32
  %631 = mul nsw i32 %754, %630
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds i8, i8* %626, i64 %632
  %634 = getelementptr inbounds %struct.MV, %struct.MV* %628, i64 0, i32 1
  %635 = load i16, i16* %634, align 2
  %636 = ashr i16 %635, 3
  %637 = sext i16 %636 to i64
  %638 = getelementptr inbounds i8, i8* %633, i64 %637
  %639 = or i16 %635, %760
  %640 = and i16 %639, 7
  %641 = icmp eq i16 %640, 0
  br i1 %641, label %647, label %642

642:                                              ; preds = %621
  %643 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %565, align 32
  %644 = and i16 %635, 7
  %645 = zext i16 %644 to i32
  %646 = and i32 %756, 7
  tail call void %643(i8* %638, i32 %754, i32 %645, i32 %646, i8* %625, i32 %754) #4
  br label %661

647:                                              ; preds = %621
  tail call void @vp8_copy_mem8x4_mmx(i8* %638, i32 %754, i8* %625, i32 %754) #4
  br label %661

648:                                              ; preds = %749
  %649 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20
  %650 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 21
  %651 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 4
  %652 = load i32, i32* %651, align 8
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds i8, i8* %751, i64 %653
  %655 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %564, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %649, i8* %654, i32 %754, i8* %753, i32 %754, void (i8*, i32, i32, i32, i8*, i32)* %655) #4
  %656 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 21, i32 4
  %657 = load i32, i32* %656, align 8
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds i8, i8* %751, i64 %658
  %660 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %564, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %650, i8* %659, i32 %754, i8* %753, i32 %754, void (i8*, i32, i32, i32, i8*, i32)* %660) #4
  br label %661

661:                                              ; preds = %648, %647, %642
  %662 = load i32, i32* %563, align 4
  %663 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 6, i32 0
  %664 = load i32, i32* %663, align 8
  %665 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 23, i32 6, i32 0
  %666 = load i32, i32* %665, align 8
  %667 = icmp eq i32 %664, %666
  %668 = trunc i32 %664 to i16
  br i1 %667, label %682, label %669

669:                                              ; preds = %661
  %670 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22
  %671 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 23
  %672 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 4
  %673 = load i32, i32* %672, align 8
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds i8, i8* %751, i64 %674
  %676 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %564, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %670, i8* %675, i32 %662, i8* %753, i32 %662, void (i8*, i32, i32, i32, i8*, i32)* %676) #4
  %677 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 23, i32 4
  %678 = load i32, i32* %677, align 8
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds i8, i8* %751, i64 %679
  %681 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %564, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %671, i8* %680, i32 %662, i8* %753, i32 %662, void (i8*, i32, i32, i32, i8*, i32)* %681) #4
  br label %761

682:                                              ; preds = %661
  %683 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 4
  %684 = load i32, i32* %683, align 8
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds i8, i8* %751, i64 %685
  %687 = getelementptr inbounds i8, i8* %753, i64 %685
  %688 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 22, i32 6
  %689 = bitcast %union.b_mode_info* %688 to %struct.MV*
  %690 = ashr i16 %668, 3
  %691 = sext i16 %690 to i32
  %692 = mul nsw i32 %662, %691
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i8, i8* %687, i64 %693
  %695 = getelementptr inbounds %struct.MV, %struct.MV* %689, i64 0, i32 1
  %696 = load i16, i16* %695, align 2
  %697 = ashr i16 %696, 3
  %698 = sext i16 %697 to i64
  %699 = getelementptr inbounds i8, i8* %694, i64 %698
  %700 = or i16 %696, %668
  %701 = and i16 %700, 7
  %702 = icmp eq i16 %701, 0
  br i1 %702, label %708, label %703

703:                                              ; preds = %682
  %704 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %565, align 32
  %705 = and i16 %696, 7
  %706 = zext i16 %705 to i32
  %707 = and i32 %664, 7
  tail call void %704(i8* %699, i32 %662, i32 %706, i32 %707, i8* %686, i32 %662) #4
  br label %761

708:                                              ; preds = %682
  tail call void @vp8_copy_mem8x4_mmx(i8* %699, i32 %662, i8* %686, i32 %662) #4
  br label %761

709:                                              ; preds = %613
  %710 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18
  %711 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 19
  %712 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 4
  %713 = load i32, i32* %712, align 8
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds i8, i8* %560, i64 %714
  %716 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %564, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %710, i8* %715, i32 %614, i8* %562, i32 %614, void (i8*, i32, i32, i32, i8*, i32)* %716) #4
  %717 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 19, i32 4
  %718 = load i32, i32* %717, align 8
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds i8, i8* %560, i64 %719
  %721 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %564, align 8
  tail call fastcc void @build_inter_predictors_b(%struct.blockd* %711, i8* %720, i32 %614, i8* %562, i32 %614, void (i8*, i32, i32, i32, i8*, i32)* %721) #4
  br label %749

722:                                              ; preds = %613
  %723 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 4
  %724 = load i32, i32* %723, align 8
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds i8, i8* %560, i64 %725
  %727 = getelementptr inbounds i8, i8* %562, i64 %725
  %728 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 18, i32 6
  %729 = bitcast %union.b_mode_info* %728 to %struct.MV*
  %730 = ashr i16 %620, 3
  %731 = sext i16 %730 to i32
  %732 = mul nsw i32 %614, %731
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds i8, i8* %727, i64 %733
  %735 = getelementptr inbounds %struct.MV, %struct.MV* %729, i64 0, i32 1
  %736 = load i16, i16* %735, align 2
  %737 = ashr i16 %736, 3
  %738 = sext i16 %737 to i64
  %739 = getelementptr inbounds i8, i8* %734, i64 %738
  %740 = or i16 %736, %620
  %741 = and i16 %740, 7
  %742 = icmp eq i16 %741, 0
  br i1 %742, label %748, label %743

743:                                              ; preds = %722
  %744 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %565, align 32
  %745 = and i16 %736, 7
  %746 = zext i16 %745 to i32
  %747 = and i32 %616, 7
  tail call void %744(i8* %739, i32 %614, i32 %746, i32 %747, i8* %726, i32 %614) #4
  br label %749

748:                                              ; preds = %722
  tail call void @vp8_copy_mem8x4_mmx(i8* %739, i32 %614, i8* %726, i32 %614) #4
  br label %749

749:                                              ; preds = %748, %743, %709
  %750 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12, i32 15
  %751 = load i8*, i8** %750, align 8
  %752 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11, i32 15
  %753 = load i8*, i8** %752, align 8
  %754 = load i32, i32* %563, align 4
  %755 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 20, i32 6, i32 0
  %756 = load i32, i32* %755, align 8
  %757 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 9, i64 21, i32 6, i32 0
  %758 = load i32, i32* %757, align 8
  %759 = icmp eq i32 %756, %758
  %760 = trunc i32 %756 to i16
  br i1 %759, label %621, label %648

761:                                              ; preds = %708, %703, %669, %7
  ret void
}

declare void @vp8_copy_mem8x4_mmx(i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @build_inter_predictors_b(%struct.blockd* nocapture readonly, i8*, i32, i8*, i32, void (i8*, i32, i32, i32, i8*, i32)* nocapture) unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.blockd, %struct.blockd* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %3, i64 %9
  %11 = getelementptr inbounds %struct.blockd, %struct.blockd* %0, i64 0, i32 6
  %12 = bitcast %union.b_mode_info* %11 to %struct.MV*
  %13 = bitcast %union.b_mode_info* %11 to i16*
  %14 = load i16, i16* %13, align 8
  %15 = ashr i16 %14, 3
  %16 = sext i16 %15 to i32
  %17 = mul nsw i32 %16, %4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %10, i64 %18
  %20 = getelementptr inbounds %struct.MV, %struct.MV* %12, i64 0, i32 1
  %21 = load i16, i16* %20, align 2
  %22 = ashr i16 %21, 3
  %23 = sext i16 %22 to i64
  %24 = getelementptr inbounds i8, i8* %19, i64 %23
  %25 = or i16 %21, %14
  %26 = and i16 %25, 7
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %77

28:                                               ; preds = %6
  %29 = sext i32 %2 to i64
  %30 = sext i32 %4 to i64
  %31 = load i8, i8* %24, align 1
  store i8 %31, i8* %1, align 1
  %32 = getelementptr inbounds i8, i8* %24, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %24, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %24, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %1, i64 %29
  %42 = getelementptr inbounds i8, i8* %24, i64 %30
  %43 = load i8, i8* %42, align 1
  store i8 %43, i8* %41, align 1
  %44 = getelementptr inbounds i8, i8* %42, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = getelementptr inbounds i8, i8* %41, i64 1
  store i8 %45, i8* %46, align 1
  %47 = getelementptr inbounds i8, i8* %42, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr inbounds i8, i8* %41, i64 2
  store i8 %48, i8* %49, align 1
  %50 = getelementptr inbounds i8, i8* %42, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds i8, i8* %41, i64 3
  store i8 %51, i8* %52, align 1
  %53 = getelementptr inbounds i8, i8* %41, i64 %29
  %54 = getelementptr inbounds i8, i8* %42, i64 %30
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %53, align 1
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %57, i8* %58, align 1
  %59 = getelementptr inbounds i8, i8* %54, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds i8, i8* %53, i64 2
  store i8 %60, i8* %61, align 1
  %62 = getelementptr inbounds i8, i8* %54, i64 3
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %53, i64 3
  store i8 %63, i8* %64, align 1
  %65 = getelementptr inbounds i8, i8* %53, i64 %29
  %66 = getelementptr inbounds i8, i8* %54, i64 %30
  %67 = load i8, i8* %66, align 1
  store i8 %67, i8* %65, align 1
  %68 = getelementptr inbounds i8, i8* %66, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  store i8 %69, i8* %70, align 1
  %71 = getelementptr inbounds i8, i8* %66, i64 2
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds i8, i8* %65, i64 2
  store i8 %72, i8* %73, align 1
  %74 = getelementptr inbounds i8, i8* %66, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = getelementptr inbounds i8, i8* %65, i64 3
  store i8 %75, i8* %76, align 1
  br label %82

77:                                               ; preds = %6
  %78 = and i16 %21, 7
  %79 = zext i16 %78 to i32
  %80 = and i16 %14, 7
  %81 = zext i16 %80 to i32
  tail call void %5(i8* %24, i32 %4, i32 %79, i32 %81, i8* %1, i32 %2) #4
  br label %82

82:                                               ; preds = %28, %77
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
