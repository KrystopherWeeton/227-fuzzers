; ModuleID = '../../cc/resources/scoped_ui_resource.cc'
source_filename = "../../cc/resources/scoped_ui_resource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::ScopedUIResource" = type <{ %"class.cc::UIResourceClient", %"class.cc::UIResourceBitmap", %"class.cc::UIResourceManager"*, i32, [4 x i8] }>
%"class.cc::UIResourceClient" = type { i32 (...)** }
%"class.cc::UIResourceBitmap" = type { %class.sk_sp, i32, %struct.SkImageInfo }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.1", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.11", i8, [6 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.15, i32, i32 }
%class.sk_sp.15 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.cc::UIResourceManager" = type { i32 (...)**, %"class.std::__1::unordered_map", i32, %"class.std::__1::vector", %"class.std::__1::unordered_map.42" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.30", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.37" }
%"class.cc::UIResourceRequest" = type { i32, i32, %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.cc::UIResourceBitmap"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.cc::UIResourceRequest"* }
%"class.std::__1::unordered_map.42" = type { %"class.std::__1::__hash_table.43" }
%"class.std::__1::__hash_table.43" = type <{ %"class.std::__1::unique_ptr.44", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base.47"** }
%"struct.std::__1::__hash_node_base.47" = type { %"struct.std::__1::__hash_node_base.47"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator.49" }
%"class.std::__1::__bucket_list_deallocator.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base.47" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.31" }

@_ZTVN2cc16ScopedUIResourceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::UIResourceBitmap"*, %"class.cc::ScopedUIResource"*, i32, i1)* @_ZN2cc16ScopedUIResource9GetBitmapEib to i8*), i8* bitcast (void (%"class.cc::ScopedUIResource"*)* @_ZN2cc16ScopedUIResourceD2Ev to i8*), i8* bitcast (void (%"class.cc::ScopedUIResource"*)* @_ZN2cc16ScopedUIResourceD0Ev to i8*)] }, align 8

@_ZN2cc16ScopedUIResourceC1EPNS_17UIResourceManagerERKNS_16UIResourceBitmapE = hidden unnamed_addr alias void (%"class.cc::ScopedUIResource"*, %"class.cc::UIResourceManager"*, %"class.cc::UIResourceBitmap"*), void (%"class.cc::ScopedUIResource"*, %"class.cc::UIResourceManager"*, %"class.cc::UIResourceBitmap"*)* @_ZN2cc16ScopedUIResourceC2EPNS_17UIResourceManagerERKNS_16UIResourceBitmapE
@_ZN2cc16ScopedUIResourceD1Ev = hidden unnamed_addr alias void (%"class.cc::ScopedUIResource"*), void (%"class.cc::ScopedUIResource"*)* @_ZN2cc16ScopedUIResourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::ScopedUIResource"* @_ZN2cc16ScopedUIResource6CreateEPNS_17UIResourceManagerERKNS_16UIResourceBitmapE(%"class.cc::UIResourceManager"*, %"class.cc::UIResourceBitmap"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #5
  %4 = bitcast i8* %3 to %"class.cc::ScopedUIResource"*
  %5 = bitcast i8* %3 to %"class.cc::UIResourceClient"*
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc16ScopedUIResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"class.cc::UIResourceBitmap"*
  tail call void @_ZN2cc16UIResourceBitmapC1ERKS0_(%"class.cc::UIResourceBitmap"* %8, %"class.cc::UIResourceBitmap"* dereferenceable(40) %1) #6
  %9 = getelementptr inbounds i8, i8* %3, i64 48
  %10 = bitcast i8* %9 to %"class.cc::UIResourceManager"**
  store %"class.cc::UIResourceManager"* %0, %"class.cc::UIResourceManager"** %10, align 8
  %11 = bitcast %"class.cc::UIResourceManager"* %0 to i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)***
  %12 = load i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)**, i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)*, i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)** %12, i64 2
  %14 = load i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)*, i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)** %13, align 8
  %15 = tail call i32 %14(%"class.cc::UIResourceManager"* %0, %"class.cc::UIResourceClient"* nonnull %5) #6
  %16 = getelementptr inbounds i8, i8* %3, i64 56
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 8
  ret %"class.cc::ScopedUIResource"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ScopedUIResourceC2EPNS_17UIResourceManagerERKNS_16UIResourceBitmapE(%"class.cc::ScopedUIResource"*, %"class.cc::UIResourceManager"*, %"class.cc::UIResourceBitmap"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc16ScopedUIResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 1
  tail call void @_ZN2cc16UIResourceBitmapC1ERKS0_(%"class.cc::UIResourceBitmap"* %6, %"class.cc::UIResourceBitmap"* dereferenceable(40) %2) #6
  %7 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 2
  store %"class.cc::UIResourceManager"* %1, %"class.cc::UIResourceManager"** %7, align 8
  %8 = bitcast %"class.cc::UIResourceManager"* %1 to i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)***
  %9 = load i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)**, i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)*, i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)** %9, i64 2
  %11 = load i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)*, i32 (%"class.cc::UIResourceManager"*, %"class.cc::UIResourceClient"*)** %10, align 8
  %12 = tail call i32 %11(%"class.cc::UIResourceManager"* %1, %"class.cc::UIResourceClient"* %4) #6
  %13 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 3
  store i32 %12, i32* %13, align 8
  ret void
}

declare void @_ZN2cc16UIResourceBitmapC1ERKS0_(%"class.cc::UIResourceBitmap"*, %"class.cc::UIResourceBitmap"* dereferenceable(40)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ScopedUIResourceD2Ev(%"class.cc::ScopedUIResource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc16ScopedUIResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 2
  %8 = load %"class.cc::UIResourceManager"*, %"class.cc::UIResourceManager"** %7, align 8
  %9 = bitcast %"class.cc::UIResourceManager"* %8 to void (%"class.cc::UIResourceManager"*, i32)***
  %10 = load void (%"class.cc::UIResourceManager"*, i32)**, void (%"class.cc::UIResourceManager"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.cc::UIResourceManager"*, i32)*, void (%"class.cc::UIResourceManager"*, i32)** %10, i64 3
  %12 = load void (%"class.cc::UIResourceManager"*, i32)*, void (%"class.cc::UIResourceManager"*, i32)** %11, align 8
  tail call void %12(%"class.cc::UIResourceManager"* %8, i32 %4) #6
  br label %13

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 1
  tail call void @_ZN2cc16UIResourceBitmapD1Ev(%"class.cc::UIResourceBitmap"* %14) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc16UIResourceBitmapD1Ev(%"class.cc::UIResourceBitmap"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ScopedUIResourceD0Ev(%"class.cc::ScopedUIResource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc16ScopedUIResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 2
  %8 = load %"class.cc::UIResourceManager"*, %"class.cc::UIResourceManager"** %7, align 8
  %9 = bitcast %"class.cc::UIResourceManager"* %8 to void (%"class.cc::UIResourceManager"*, i32)***
  %10 = load void (%"class.cc::UIResourceManager"*, i32)**, void (%"class.cc::UIResourceManager"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.cc::UIResourceManager"*, i32)*, void (%"class.cc::UIResourceManager"*, i32)** %10, i64 3
  %12 = load void (%"class.cc::UIResourceManager"*, i32)*, void (%"class.cc::UIResourceManager"*, i32)** %11, align 8
  tail call void %12(%"class.cc::UIResourceManager"* %8, i32 %4) #6
  br label %13

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %0, i64 0, i32 1
  tail call void @_ZN2cc16UIResourceBitmapD1Ev(%"class.cc::UIResourceBitmap"* %14) #6
  %15 = bitcast %"class.cc::ScopedUIResource"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ScopedUIResource9GetBitmapEib(%"class.cc::UIResourceBitmap"* noalias sret, %"class.cc::ScopedUIResource"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cc::ScopedUIResource", %"class.cc::ScopedUIResource"* %1, i64 0, i32 1
  tail call void @_ZN2cc16UIResourceBitmapC1ERKS0_(%"class.cc::UIResourceBitmap"* %0, %"class.cc::UIResourceBitmap"* dereferenceable(40) %5) #6
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
