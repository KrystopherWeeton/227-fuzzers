; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/spirv_target_env.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/spirv_target_env.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VulkanEnv = type { i32, i32, i32 }
%"struct.std::__1::pair" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@.str = private unnamed_addr constant [11 x i8] c"SPIR-V 1.0\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.0 (under Vulkan 1.0 semantics)\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"SPIR-V 1.1\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"SPIR-V 1.0 (under OpenCL 1.2 Full Profile semantics)\00", align 1
@.str.4 = private unnamed_addr constant [57 x i8] c"SPIR-V 1.0 (under OpenCL 1.2 Embedded Profile semantics)\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"SPIR-V 1.0 (under OpenCL 2.0 Full Profile semantics)\00", align 1
@.str.6 = private unnamed_addr constant [57 x i8] c"SPIR-V 1.0 (under OpenCL 2.0 Embedded Profile semantics)\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"SPIR-V 1.0 (under OpenCL 2.1 Full Profile semantics)\00", align 1
@.str.8 = private unnamed_addr constant [57 x i8] c"SPIR-V 1.0 (under OpenCL 2.1 Embedded Profile semantics)\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"SPIR-V 1.2 (under OpenCL 2.2 Full Profile semantics)\00", align 1
@.str.10 = private unnamed_addr constant [57 x i8] c"SPIR-V 1.2 (under OpenCL 2.2 Embedded Profile semantics)\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.0 (under OpenGL 4.0 semantics)\00", align 1
@.str.12 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.0 (under OpenGL 4.1 semantics)\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.0 (under OpenGL 4.2 semantics)\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.0 (under OpenGL 4.3 semantics)\00", align 1
@.str.15 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.0 (under OpenGL 4.5 semantics)\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"SPIR-V 1.2\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"SPIR-V 1.3\00", align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.3 (under Vulkan 1.1 semantics)\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"SPIR-V 1.4\00", align 1
@.str.20 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.4 (under Vulkan 1.1 semantics)\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"SPIR-V 1.5\00", align 1
@.str.22 = private unnamed_addr constant [40 x i8] c"SPIR-V 1.5 (under Vulkan 1.2 semantics)\00", align 1
@.str.23 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZL19ordered_vulkan_envs = internal unnamed_addr constant [4 x %struct.VulkanEnv] [%struct.VulkanEnv { i32 1, i32 4194304, i32 65536 }, %struct.VulkanEnv { i32 18, i32 4198400, i32 66304 }, %struct.VulkanEnv { i32 21, i32 4198400, i32 66560 }, %struct.VulkanEnv { i32 23, i32 4202496, i32 66816 }], align 16
@.str.24 = private unnamed_addr constant [7 x i8] c"OpenCL\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"OpenGL\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"Vulkan\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"Universal\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"vulkan1.1spv1.4\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"vulkan1.0\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"vulkan1.1\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"vulkan1.2\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"spv1.0\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"spv1.1\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"spv1.2\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"spv1.3\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"spv1.4\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"spv1.5\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"opencl1.2embedded\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"opencl1.2\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"opencl2.0embedded\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"opencl2.0\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"opencl2.1embedded\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"opencl2.1\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"opencl2.2embedded\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"opencl2.2\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"opengl4.0\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"opengl4.1\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"opengl4.2\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"opengl4.3\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"opengl4.5\00", align 1
@_ZL19spvTargetEnvNameMap = internal constant [23 x { i8*, i32 }] [{ i8*, i32 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i32 21 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i32 1 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0), i32 18 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i32 23 }, { i8*, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i32 0 }, { i8*, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0), i32 2 }, { i8*, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i32 10 }, { i8*, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i32 17 }, { i8*, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0), i32 20 }, { i8*, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i32 22 }, { i8*, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), i32 12 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), i32 11 }, { i8*, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i32 0, i32 0), i32 14 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i32 13 }, { i8*, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i32 0, i32 0), i32 15 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i32 3 }, { i8*, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i32 16 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i32 4 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i32 5 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), i32 6 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i32 7 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i32 8 }, { i8*, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0), i32 9 }], align 16
@switch.table.spvTargetEnvDescription = private unnamed_addr constant [24 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i64 0, i64 0)], align 8
@switch.table._Z22spvVersionForTargetEnv14spv_target_env = private unnamed_addr constant [24 x i32] [i32 65536, i32 65536, i32 65792, i32 65536, i32 66048, i32 65536, i32 65536, i32 65536, i32 65536, i32 65536, i32 66048, i32 65536, i32 65536, i32 65536, i32 65536, i32 65536, i32 66048, i32 66304, i32 66304, i32 0, i32 66560, i32 66560, i32 66816, i32 66816], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @spvTargetEnvDescription(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 24
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [24 x i8*], [24 x i8*]* @switch.table.spvTargetEnvDescription, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_Z22spvVersionForTargetEnv14spv_target_env(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 24
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [24 x i32], [24 x i32]* @switch.table._Z22spvVersionForTargetEnv14spv_target_env, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @spvParseTargetEnv(i8*, i32*) local_unnamed_addr #1 {
  %3 = icmp eq i8* %0, null
  br label %4

4:                                                ; preds = %2, %17
  %5 = phi %"struct.std::__1::pair"* [ bitcast ([23 x { i8*, i32 }]* @_ZL19spvTargetEnvNameMap to %"struct.std::__1::pair"*), %2 ], [ %18, %17 ]
  %6 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  br i1 %3, label %17, label %8

8:                                                ; preds = %4
  %9 = tail call i64 @strlen(i8* %7) #10
  %10 = tail call i32 @strncmp(i8* nonnull %0, i8* %7, i64 %9) #10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = icmp eq i32* %1, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %1, align 4
  br label %23

17:                                               ; preds = %4, %8
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 1
  %19 = icmp eq %"struct.std::__1::pair"* %18, bitcast (i8** getelementptr inbounds ([23 x { i8*, i32 }], [23 x { i8*, i32 }]* @_ZL19spvTargetEnvNameMap, i64 1, i64 0, i32 0) to %"struct.std::__1::pair"*)
  br i1 %19, label %20, label %4

20:                                               ; preds = %17
  %21 = icmp eq i32* %1, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %20
  store i32 0, i32* %1, align 4
  br label %23

23:                                               ; preds = %14, %12, %22, %20
  %24 = phi i1 [ false, %20 ], [ false, %22 ], [ true, %12 ], [ true, %14 ]
  ret i1 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @spvParseVulkanEnv(i32, i32, i32* nocapture) local_unnamed_addr #3 {
  %4 = icmp ugt i32 %0, 4194304
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i32 %1, 65536
  br i1 %6, label %15, label %9

7:                                                ; preds = %3
  %8 = icmp ugt i32 %0, 4198400
  br i1 %8, label %19, label %15

9:                                                ; preds = %19, %17, %23, %15, %5
  %10 = phi %struct.VulkanEnv* [ getelementptr inbounds ([4 x %struct.VulkanEnv], [4 x %struct.VulkanEnv]* @_ZL19ordered_vulkan_envs, i64 0, i64 0), %5 ], [ getelementptr inbounds ([4 x %struct.VulkanEnv], [4 x %struct.VulkanEnv]* @_ZL19ordered_vulkan_envs, i64 0, i64 1), %15 ], [ getelementptr inbounds ([4 x %struct.VulkanEnv], [4 x %struct.VulkanEnv]* @_ZL19ordered_vulkan_envs, i64 0, i64 3), %23 ], [ getelementptr inbounds ([4 x %struct.VulkanEnv], [4 x %struct.VulkanEnv]* @_ZL19ordered_vulkan_envs, i64 0, i64 2), %17 ], [ getelementptr inbounds ([4 x %struct.VulkanEnv], [4 x %struct.VulkanEnv]* @_ZL19ordered_vulkan_envs, i64 0, i64 3), %19 ]
  %11 = getelementptr inbounds %struct.VulkanEnv, %struct.VulkanEnv* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %2, align 4
  br label %13

13:                                               ; preds = %19, %23, %9
  %14 = phi i1 [ true, %9 ], [ false, %23 ], [ false, %19 ]
  ret i1 %14

15:                                               ; preds = %5, %7
  %16 = icmp ugt i32 %1, 66304
  br i1 %16, label %17, label %9

17:                                               ; preds = %15
  %18 = icmp ugt i32 %1, 66560
  br i1 %18, label %23, label %9

19:                                               ; preds = %7
  %20 = icmp ugt i32 %0, 4202496
  %21 = icmp ugt i32 %1, 66816
  %22 = or i1 %20, %21
  br i1 %22, label %13, label %9

23:                                               ; preds = %17
  %24 = icmp ugt i32 %1, 66816
  br i1 %24, label %13, label %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z14spvIsVulkanEnv14spv_target_env(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 23
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i23
  %6 = lshr i23 -3014655, %5
  %7 = and i23 %6, 1
  %8 = icmp ne i23 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z14spvIsOpenCLEnv14spv_target_env(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -3
  %3 = icmp ult i32 %2, 14
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i14
  %6 = lshr i14 -253, %5
  %7 = and i14 %6, 1
  %8 = icmp ne i14 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z14spvIsOpenGLEnv14spv_target_env(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -5
  %3 = icmp ult i32 %2, 5
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z18spvLogStringForEnv14spv_target_env(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #1 {
  switch i32 %1, label %23 [
    i32 11, label %3
    i32 13, label %3
    i32 3, label %3
    i32 4, label %3
    i32 12, label %3
    i32 14, label %3
    i32 15, label %3
    i32 16, label %3
    i32 5, label %8
    i32 6, label %8
    i32 7, label %8
    i32 8, label %8
    i32 9, label %8
    i32 1, label %13
    i32 18, label %13
    i32 21, label %13
    i32 23, label %13
    i32 0, label %18
    i32 2, label %18
    i32 10, label %18
    i32 17, label %18
    i32 20, label %18
    i32 22, label %18
  ]

3:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 6, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i64 6, i1 false) #11
  %7 = getelementptr inbounds i8, i8* %6, i64 6
  store i8 0, i8* %7, align 2
  br label %28

8:                                                ; preds = %2, %2, %2, %2, %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 6, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i64 6, i1 false) #11
  %12 = getelementptr inbounds i8, i8* %11, i64 6
  store i8 0, i8* %12, align 2
  br label %28

13:                                               ; preds = %2, %2, %2, %2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 6, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i64 6, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %16, i64 6
  store i8 0, i8* %17, align 2
  br label %28

18:                                               ; preds = %2, %2, %2, %2, %2, %2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 9, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0), i64 9, i1 false) #11
  %22 = getelementptr inbounds i8, i8* %21, i64 9
  store i8 0, i8* %22, align 1
  br label %28

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 7, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i64 7, i1 false) #11
  %27 = getelementptr inbounds i8, i8* %26, i64 7
  store i8 0, i8* %27, align 1
  br label %28

28:                                               ; preds = %23, %18, %13, %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z16spvTargetEnvListii(%"class.std::__1::basic_string"* noalias sret, i32, i32) local_unnamed_addr #1 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = sub nsw i32 %2, %1
  %10 = sext i32 %9 to i64
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #11
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  store i8 0, i8* %18, align 1
  store i8 0, i8* %14, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %32 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = sext i32 %1 to i64
  %35 = sext i32 %2 to i64
  %36 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %56

37:                                               ; preds = %166
  %38 = load i8, i8* %27, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i8*, i8** %12, align 8
  %41 = load i64, i64* %13, align 8
  %42 = zext i8 %38 to i64
  %43 = select i1 %39, i8* %40, i8* %11
  %44 = select i1 %39, i64 %41, i64 %42
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %43, i64 %44) #11
  %46 = load i8, i8* %18, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %37
  %49 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %37, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %51 = load i8, i8* %27, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  ret void

56:                                               ; preds = %169, %3
  %57 = phi i8 [ 0, %3 ], [ %170, %169 ]
  %58 = phi %"struct.std::__1::pair"* [ bitcast ([23 x { i8*, i32 }]* @_ZL19spvTargetEnvNameMap to %"struct.std::__1::pair"*), %3 ], [ %167, %169 ]
  %59 = phi i64 [ %10, %3 ], [ %150, %169 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %61 = load i8*, i8** %60, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %62 = icmp slt i8 %57, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %56
  %64 = load i64, i64* %16, align 8, !noalias !2
  %65 = call i64 @strlen(i8* %61) #11, !noalias !2
  %66 = load i8*, i8** %15, align 8, !noalias !2
  br label %70

67:                                               ; preds = %56
  %68 = zext i8 %57 to i64
  %69 = call i64 @strlen(i8* %61) #11, !noalias !2
  br label %70

70:                                               ; preds = %67, %63
  %71 = phi i64 [ %65, %63 ], [ %69, %67 ]
  %72 = phi i64 [ %64, %63 ], [ %68, %67 ]
  %73 = phi i8* [ %66, %63 ], [ %14, %67 ]
  %74 = add i64 %72, %71
  %75 = icmp ugt i64 %74, -17
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %77) #13
  unreachable

78:                                               ; preds = %70
  %79 = icmp ult i64 %74, 23
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = trunc i64 %72 to i8
  store i8 %81, i8* %25, align 1, !alias.scope !2
  br label %87

82:                                               ; preds = %78
  %83 = add nuw i64 %74, 16
  %84 = and i64 %83, -16
  %85 = call i8* @_Znwm(i64 %84) #12
  store i8* %85, i8** %21, align 8, !alias.scope !2
  %86 = or i64 %84, -9223372036854775808
  store i64 %86, i64* %23, align 8, !alias.scope !2
  store i64 %72, i64* %22, align 8, !alias.scope !2
  br label %87

87:                                               ; preds = %82, %80
  %88 = phi i8* [ %20, %80 ], [ %85, %82 ]
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %88, i8* align 1 %73, i64 %72, i1 false) #11
  br label %91

91:                                               ; preds = %87, %90
  %92 = getelementptr inbounds i8, i8* %88, i64 %72
  store i8 0, i8* %92, align 1
  %93 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %61, i64 %71) #11
  %94 = load i8, i8* %27, align 1
  %95 = icmp slt i8 %94, 0
  %96 = load i64, i64* %13, align 8
  %97 = zext i8 %94 to i64
  %98 = select i1 %95, i64 %96, i64 %97
  %99 = load i8, i8* %25, align 1
  %100 = icmp slt i8 %99, 0
  %101 = load i64, i64* %22, align 8
  %102 = zext i8 %99 to i64
  %103 = select i1 %100, i64 %101, i64 %102
  %104 = add i64 %103, %98
  %105 = icmp ugt i64 %104, %59
  br i1 %105, label %106, label %146

106:                                              ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #11, !alias.scope !5
  %107 = load i8*, i8** %12, align 8
  %108 = select i1 %95, i8* %107, i8* %11
  %109 = add i64 %98, 1
  %110 = icmp ugt i64 %109, -17
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  %112 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %112) #13
  unreachable

113:                                              ; preds = %106
  %114 = icmp ult i64 %109, 23
  br i1 %114, label %120, label %115

115:                                              ; preds = %113
  %116 = add nuw i64 %98, 17
  %117 = and i64 %116, -16
  %118 = call i8* @_Znwm(i64 %117) #12
  store i8* %118, i8** %29, align 8, !alias.scope !5
  %119 = or i64 %117, -9223372036854775808
  store i64 %119, i64* %31, align 8, !alias.scope !5
  store i64 %98, i64* %30, align 8, !alias.scope !5
  br label %123

120:                                              ; preds = %113
  %121 = trunc i64 %98 to i8
  store i8 %121, i8* %33, align 1, !alias.scope !5
  %122 = icmp eq i64 %98, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %115, %120
  %124 = phi i8* [ %118, %115 ], [ %28, %120 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 %108, i64 %98, i1 false) #11
  br label %125

125:                                              ; preds = %120, %123
  %126 = phi i8* [ %28, %120 ], [ %124, %123 ]
  %127 = getelementptr inbounds i8, i8* %126, i64 %98
  store i8 0, i8* %127, align 1
  %128 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1) #11
  %129 = load i8, i8* %33, align 1
  %130 = icmp slt i8 %129, 0
  %131 = load i8*, i8** %29, align 8
  %132 = load i64, i64* %30, align 8
  %133 = zext i8 %129 to i64
  %134 = select i1 %130, i8* %131, i8* %28
  %135 = select i1 %130, i64 %132, i64 %133
  %136 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %134, i64 %135) #11
  %137 = load i8, i8* %33, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %125
  %140 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %140) #12
  br label %141

141:                                              ; preds = %125, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  %142 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEmc(%"class.std::__1::basic_string"* nonnull %4, i64 %34, i8 signext 32) #11
  %143 = load i8, i8* %25, align 1
  %144 = load i64, i64* %22, align 8
  %145 = zext i8 %143 to i64
  br label %146

146:                                              ; preds = %141, %91
  %147 = phi i64 [ %145, %141 ], [ %102, %91 ]
  %148 = phi i64 [ %144, %141 ], [ %101, %91 ]
  %149 = phi i8 [ %143, %141 ], [ %99, %91 ]
  %150 = phi i64 [ %35, %141 ], [ %59, %91 ]
  %151 = icmp slt i8 %149, 0
  %152 = load i8*, i8** %21, align 8
  %153 = select i1 %151, i8* %152, i8* %20
  %154 = select i1 %151, i64 %148, i64 %147
  %155 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %153, i64 %154) #11
  br i1 %62, label %156, label %158

156:                                              ; preds = %146
  store i64 1, i64* %16, align 8
  %157 = load i8*, i8** %15, align 8
  br label %159

158:                                              ; preds = %146
  store i8 1, i8* %18, align 1
  br label %159

159:                                              ; preds = %156, %158
  %160 = phi i8* [ %157, %156 ], [ %14, %158 ]
  store i8 124, i8* %160, align 1
  %161 = getelementptr inbounds i8, i8* %160, i64 1
  store i8 0, i8* %161, align 1
  %162 = load i8, i8* %25, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %159, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 1
  %168 = icmp eq %"struct.std::__1::pair"* %167, bitcast (i8** getelementptr inbounds ([23 x { i8*, i32 }], [23 x { i8*, i32 }]* @_ZL19spvTargetEnvNameMap, i64 1, i64 0, i32 0) to %"struct.std::__1::pair"*)
  br i1 %168, label %37, label %169

169:                                              ; preds = %166
  %170 = load i8, i8* %18, align 1, !noalias !2
  br label %56
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
