; ModuleID = '../../ui/compositor/clip_recorder.cc'
source_filename = "../../ui/compositor/clip_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::ClipRecorder" = type <{ %"class.ui::PaintContext"*, i32, [4 x i8] }>
%"class.ui::PaintContext" = type <{ %"class.cc::DisplayItemList"*, float, %"class.gfx::Rect", %"class.gfx::Vector2d", i8, [3 x i8] }>
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.68", %"class.std::__1::vector.75", %"class.std::__1::vector.82", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.9", %"class.base::flat_map.23", i8, i8, [6 x i8], %"class.cc::RTree.33", %"class.std::__1::vector.60" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.18" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.11", i32, i32 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.13" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.23" = type { %"class.base::internal::flat_tree.24" }
%"class.base::internal::flat_tree.24" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type { i32, i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.cc::RTree.33" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.52", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.47", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.40, %"class.gfx::Rect", i32, %class.sk_sp.44, %class.sk_sp.45, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr }
%class.sk_sp.40 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.44 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.45 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.34, i32, i32 }
%class.sk_sp.34 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.46", [4 x i8] }>
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair.62"*, %"struct.std::__1::pair.62"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair.62" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair.62"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i8* }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { i64*, i64*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i64* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.84" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cc::PaintOp" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkPath = type <{ %class.sk_sp.89, i32, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", i8, i8 }>
%class.sk_sp.89 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.90, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.91, %class.SkTDArray.92, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.90 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.91 = type { i8*, i32, i32 }
%class.SkTDArray.92 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.93 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.93 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.94", [3 x i8] }
%"struct.std::__1::atomic.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i8 }
%"class.cc::ClipPathOp" = type <{ %"class.cc::PaintOp", [4 x i8], %"class.cc::ThreadsafePath", i32, i8, [3 x i8] }>
%"class.cc::ThreadsafePath" = type { %class.SkPath.base, i8 }
%class.SkPath.base = type <{ %class.sk_sp.89, i32, %"struct.std::__1::atomic.35", %"struct.std::__1::atomic.35", i8 }>

$_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJ6SkRect8SkClipOpRbEEEmDpOT0_ = comdat any

$_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv = comdat any

$_ZN2cc15DisplayItemList4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRbEEEmDpOT0_ = comdat any

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRbEEEPKT_DpOT0_ = comdat any

@_ZN2ui12ClipRecorderC1ERKNS_12PaintContextE = hidden unnamed_addr alias void (%"class.ui::ClipRecorder"*, %"class.ui::PaintContext"*), void (%"class.ui::ClipRecorder"*, %"class.ui::PaintContext"*)* @_ZN2ui12ClipRecorderC2ERKNS_12PaintContextE
@_ZN2ui12ClipRecorderD1Ev = hidden unnamed_addr alias void (%"class.ui::ClipRecorder"*), void (%"class.ui::ClipRecorder"*)* @_ZN2ui12ClipRecorderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui12ClipRecorderC2ERKNS_12PaintContextE(%"class.ui::ClipRecorder"* nocapture, %"class.ui::PaintContext"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 0
  store %"class.ui::PaintContext"* %1, %"class.ui::PaintContext"** %3, align 8
  %4 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12ClipRecorderD2Ev(%"class.ui::ClipRecorder"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 0
  br label %8

7:                                                ; preds = %87, %1
  ret void

8:                                                ; preds = %5, %87
  %9 = phi i32 [ 0, %5 ], [ %109, %87 ]
  %10 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %6, align 8
  %11 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %10, i64 0, i32 0
  %12 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 4
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 4, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 8
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %87

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 6
  %21 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 6, i32 0, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %22, %24
  %26 = ptrtoint i64* %24 to i64
  br i1 %25, label %31, label %27

27:                                               ; preds = %19
  store i64 %15, i64* %22, align 8
  %28 = getelementptr inbounds i64, i64* %22, i64 1
  %29 = ptrtoint i64* %28 to i64
  %30 = bitcast i64** %21 to i64*
  store i64 %29, i64* %30, align 8
  br label %87

31:                                               ; preds = %19
  %32 = ptrtoint i64* %22 to i64
  %33 = bitcast i64** %21 to i64*
  %34 = bitcast %"class.std::__1::vector.75"* %20 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = ashr exact i64 %36, 3
  %38 = add nsw i64 %37, 1
  %39 = icmp ugt i64 %38, 2305843009213693951
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::vector.75"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #9
  unreachable

42:                                               ; preds = %31
  %43 = bitcast i64** %23 to i64*
  %44 = sub i64 %26, %35
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, 1152921504606846975
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = ashr exact i64 %44, 2
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @abort() #9
  unreachable

55:                                               ; preds = %52, %42
  %56 = phi i64 [ %50, %52 ], [ 2305843009213693951, %42 ]
  %57 = shl i64 %56, 3
  %58 = tail call i8* @_Znwm(i64 %57) #10
  %59 = bitcast i8* %58 to i64*
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi i64* [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds i64, i64* %62, i64 %37
  %64 = getelementptr inbounds i64, i64* %62, i64 %61
  %65 = ptrtoint i64* %64 to i64
  store i64 %15, i64* %63, align 8
  %66 = getelementptr inbounds i64, i64* %63, i64 1
  %67 = ptrtoint i64* %66 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %20, i64 0, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = load i64, i64* %33, align 8
  %71 = ptrtoint i64* %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds i64, i64* %63, i64 %74
  %76 = ptrtoint i64* %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %60
  %79 = bitcast i64* %75 to i8*
  %80 = bitcast i64* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #11
  %81 = load i64*, i64** %68, align 8
  br label %82

82:                                               ; preds = %78, %60
  %83 = phi i64* [ %69, %60 ], [ %81, %78 ]
  store i64 %76, i64* %34, align 8
  store i64 %67, i64* %33, align 8
  store i64 %65, i64* %43, align 8
  %84 = icmp eq i64* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast i64* %83 to i8*
  tail call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %85, %82, %27, %8
  %88 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %13, i64 8) #11
  %89 = bitcast i8* %88 to i32*
  store i32 2068, i32* %89, align 4
  %90 = bitcast i8* %88 to %"class.cc::PaintOp"*
  %91 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %12, i64 0, i32 4, i32 9
  %92 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %90) #11
  %93 = zext i1 %92 to i8
  %94 = load i8, i8* %91, align 4
  %95 = shl nuw nsw i8 %93, 2
  %96 = and i8 %94, 4
  %97 = or i8 %96, %95
  %98 = and i8 %94, -61
  %99 = or i8 %97, %98
  %100 = and i8 %94, 8
  %101 = or i8 %99, %100
  %102 = and i8 %94, 16
  %103 = and i8 %94, 32
  %104 = or i8 %101, %102
  %105 = or i8 %104, %103
  store i8 %105, i8* %91, align 4
  %106 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %6, align 8
  %107 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %106, i64 0, i32 0
  %108 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %107, align 8
  tail call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %108) #11
  %109 = add nuw nsw i32 %9, 1
  %110 = load i32, i32* %2, align 8
  %111 = icmp slt i32 %109, %110
  br i1 %111, label %8, label %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12ClipRecorder8ClipRectERKN3gfx4RectE(%"class.ui::ClipRecorder"* nocapture, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 0, i8* %3, align 1
  %7 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 0
  %8 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %7, align 8
  %9 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %8, i64 0, i32 0
  %10 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %9, align 8
  %11 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %10)
  %12 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %7, align 8
  %13 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %12, i64 0, i32 0
  %14 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %13, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %1) #11
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 0
  store <2 x float> %18, <2 x float>* %17, align 8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %20 = extractvalue { <2 x float>, <2 x float> } %16, 1
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  store i32 1, i32* %6, align 4
  %22 = call i64 @_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJ6SkRect8SkClipOpRbEEEmDpOT0_(%"class.cc::DisplayItemList"* %14, %struct.SkRect* nonnull dereferenceable(16) %5, i32* nonnull dereferenceable(4) %6, i8* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  %23 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %7, align 8
  %24 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %23, i64 0, i32 0
  %25 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %24, align 8
  call void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"* %25)
  %26 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %76

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %11, %13
  %15 = ptrtoint i64* %13 to i64
  br i1 %14, label %20, label %16

16:                                               ; preds = %8
  store i64 %4, i64* %11, align 8
  %17 = getelementptr inbounds i64, i64* %11, i64 1
  %18 = ptrtoint i64* %17 to i64
  %19 = bitcast i64** %10 to i64*
  store i64 %18, i64* %19, align 8
  br label %76

20:                                               ; preds = %8
  %21 = ptrtoint i64* %11 to i64
  %22 = bitcast i64** %10 to i64*
  %23 = bitcast %"class.std::__1::vector.75"* %9 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 2305843009213693951
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.75"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #9
  unreachable

31:                                               ; preds = %20
  %32 = bitcast i64** %12 to i64*
  %33 = sub i64 %15, %24
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %34, 1152921504606846975
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 2
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #9
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 2305843009213693951, %31 ]
  %46 = shl i64 %45, 3
  %47 = tail call i8* @_Znwm(i64 %46) #10
  %48 = bitcast i8* %47 to i64*
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi i64* [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 %26
  %53 = getelementptr inbounds i64, i64* %51, i64 %50
  %54 = ptrtoint i64* %53 to i64
  store i64 %4, i64* %52, align 8
  %55 = getelementptr inbounds i64, i64* %52, i64 1
  %56 = ptrtoint i64* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %9, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = load i64, i64* %22, align 8
  %60 = ptrtoint i64* %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = sub nsw i64 0, %62
  %64 = getelementptr inbounds i64, i64* %52, i64 %63
  %65 = ptrtoint i64* %64 to i64
  %66 = icmp sgt i64 %61, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %49
  %68 = bitcast i64* %64 to i8*
  %69 = bitcast i64* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %61, i1 false) #11
  %70 = load i64*, i64** %57, align 8
  br label %71

71:                                               ; preds = %67, %49
  %72 = phi i64* [ %58, %49 ], [ %70, %67 ]
  store i64 %65, i64* %23, align 8
  store i64 %56, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %73 = icmp eq i64* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast i64* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %74, %71, %16, %1
  %77 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %2, i64 8) #11
  %78 = bitcast i8* %77 to i32*
  store i32 2070, i32* %78, align 4
  %79 = bitcast i8* %77 to %"class.cc::PaintOp"*
  %80 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %81 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %79) #11
  %82 = zext i1 %81 to i8
  %83 = load i8, i8* %80, align 4
  %84 = shl nuw nsw i8 %82, 2
  %85 = and i8 %83, 4
  %86 = or i8 %85, %84
  %87 = and i8 %83, -61
  %88 = or i8 %86, %87
  %89 = and i8 %83, 8
  %90 = or i8 %88, %89
  %91 = and i8 %83, 16
  %92 = and i8 %83, 32
  %93 = or i8 %90, %91
  %94 = or i8 %93, %92
  store i8 %94, i8* %80, align 4
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_10ClipRectOpEJ6SkRect8SkClipOpRbEEEmDpOT0_(%"class.cc::DisplayItemList"*, %struct.SkRect* dereferenceable(16), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.75"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.75"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #9
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #9
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #11
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %77, %74, %19, %4
  %80 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %5, i64 32) #11
  %81 = load i32, i32* %2, align 4
  %82 = load i8, i8* %3, align 1, !range !2
  %83 = bitcast i8* %80 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, -256
  %86 = or i32 %85, 2
  store i32 %86, i32* %83, align 4
  %87 = getelementptr inbounds i8, i8* %80, i64 4
  %88 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 16, i1 false) #11
  %89 = getelementptr inbounds i8, i8* %80, i64 20
  %90 = bitcast i8* %89 to i32*
  store i32 %81, i32* %90, align 4
  %91 = getelementptr inbounds i8, i8* %80, i64 24
  store i8 %82, i8* %91, align 4
  store i32 8194, i32* %83, align 4
  %92 = bitcast i8* %80 to %"class.cc::PaintOp"*
  %93 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %94 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %92) #11
  %95 = zext i1 %94 to i8
  %96 = load i8, i8* %93, align 4
  %97 = shl nuw nsw i8 %95, 2
  %98 = and i8 %96, 4
  %99 = or i8 %98, %97
  %100 = and i8 %96, -61
  %101 = or i8 %99, %100
  %102 = and i8 %96, 8
  %103 = or i8 %101, %102
  %104 = and i8 %96, 16
  %105 = and i8 %96, 32
  %106 = or i8 %103, %104
  %107 = or i8 %106, %105
  store i8 %107, i8* %93, align 4
  ret i64 %7
}

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %102, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = bitcast %"class.gfx::Rect"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.68"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 4
  %16 = sub i64 %7, %15
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 1
  %19 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %18, align 8
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %21 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %20, align 8
  %22 = icmp ult %"struct.cc::DisplayItemList::PairedBeginInfo"* %19, %21
  %23 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %21 to i64
  br i1 %22, label %24, label %30

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %19, i64 0, i32 0
  store i64 %15, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %19, i64 0, i32 1
  store i64 %16, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %19, i64 1
  %28 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %27 to i64
  %29 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %18 to i64*
  store i64 %28, i64* %29, align 8
  br label %88

30:                                               ; preds = %5
  %31 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %19 to i64
  %32 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %18 to i64*
  %33 = bitcast %"class.std::__1::vector.82"* %17 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 4
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 1152921504606846975
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::vector.82"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #9
  unreachable

41:                                               ; preds = %30
  %42 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %20 to i64*
  %43 = sub i64 %23, %34
  %44 = ashr exact i64 %43, 4
  %45 = icmp ult i64 %44, 576460752303423487
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 3
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 1152921504606846975
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #9
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 1152921504606846975, %41 ]
  %56 = shl i64 %55, 4
  %57 = tail call i8* @_Znwm(i64 %56) #10
  %58 = bitcast i8* %57 to %"struct.cc::DisplayItemList::PairedBeginInfo"*
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi %"struct.cc::DisplayItemList::PairedBeginInfo"* [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %61, i64 %36
  %63 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %61, i64 %60
  %64 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %63 to i64
  %65 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %62, i64 0, i32 0
  store i64 %15, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %61, i64 %36, i32 1
  store i64 %16, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %62, i64 1
  %68 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %67 to i64
  %69 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %17, i64 0, i32 0, i32 0
  %70 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %69, align 8
  %71 = load i64, i64* %32, align 8
  %72 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 4
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %62, i64 %75
  %77 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %76 to i64
  %78 = icmp sgt i64 %73, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %59
  %80 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %76 to i8*
  %81 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %73, i1 false) #11
  %82 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %69, align 8
  br label %83

83:                                               ; preds = %79, %59
  %84 = phi %"struct.cc::DisplayItemList::PairedBeginInfo"* [ %70, %59 ], [ %82, %79 ]
  store i64 %77, i64* %33, align 8
  store i64 %68, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %85 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %84 to i8*
  tail call void @_ZdlPv(i8* %87) #10
  br label %88

88:                                               ; preds = %24, %83, %86
  %89 = load i64, i64* %6, align 8
  %90 = load i64, i64* %10, align 8
  %91 = load i64, i64* %12, align 8
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 4
  %94 = icmp ugt i64 %89, %93
  %95 = inttoptr i64 %91 to %"class.gfx::Rect"*
  br i1 %94, label %96, label %98

96:                                               ; preds = %88
  %97 = sub i64 %89, %93
  tail call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.68"* %8, i64 %97) #11
  br label %102

98:                                               ; preds = %88
  %99 = icmp ult i64 %89, %93
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %95, i64 %89
  store %"class.gfx::Rect"* %101, %"class.gfx::Rect"** %9, align 8
  br label %102

102:                                              ; preds = %100, %98, %96, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12ClipRecorder8ClipPathERK6SkPath(%"class.ui::ClipRecorder"* nocapture, %class.SkPath* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 0, i8* %3, align 1
  %5 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 0
  %6 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %5, align 8
  %7 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %6, i64 0, i32 0
  %8 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %7, align 8
  %9 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %8)
  %10 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %5, align 8
  %11 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %10, i64 0, i32 0
  %12 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %11, align 8
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 1, i32* %4, align 4
  %14 = call i64 @_ZN2cc15DisplayItemList4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRbEEEmDpOT0_(%"class.cc::DisplayItemList"* %12, %class.SkPath* dereferenceable(16) %1, i32* nonnull dereferenceable(4) %4, i8* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  %15 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %5, align 8
  %16 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %15, i64 0, i32 0
  %17 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %16, align 8
  call void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"* %17)
  %18 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2cc15DisplayItemList4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRbEEEmDpOT0_(%"class.cc::DisplayItemList"*, %class.SkPath* dereferenceable(16), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %79

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = icmp eq i64* %14, %16
  %18 = ptrtoint i64* %16 to i64
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  store i64 %7, i64* %14, align 8
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = ptrtoint i64* %20 to i64
  %22 = bitcast i64** %13 to i64*
  store i64 %21, i64* %22, align 8
  br label %79

23:                                               ; preds = %11
  %24 = ptrtoint i64* %14 to i64
  %25 = bitcast i64** %13 to i64*
  %26 = bitcast %"class.std::__1::vector.75"* %12 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.75"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #9
  unreachable

34:                                               ; preds = %23
  %35 = bitcast i64** %15 to i64*
  %36 = sub i64 %18, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #9
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to i64*
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi i64* [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds i64, i64* %54, i64 %29
  %56 = getelementptr inbounds i64, i64* %54, i64 %53
  %57 = ptrtoint i64* %56 to i64
  store i64 %7, i64* %55, align 8
  %58 = getelementptr inbounds i64, i64* %55, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %12, i64 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = load i64, i64* %25, align 8
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i64, i64* %55, i64 %66
  %68 = ptrtoint i64* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = bitcast i64* %67 to i8*
  %72 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #11
  %73 = load i64*, i64** %60, align 8
  br label %74

74:                                               ; preds = %70, %52
  %75 = phi i64* [ %61, %52 ], [ %73, %70 ]
  store i64 %68, i64* %26, align 8
  store i64 %59, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i64* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %77, %74, %19, %4
  %80 = tail call %"class.cc::ClipPathOp"* @_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRbEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"* %5, %class.SkPath* dereferenceable(16) %1, i32* dereferenceable(4) %2, i8* dereferenceable(1) %3)
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui12ClipRecorder24ClipPathWithAntiAliasingERK6SkPath(%"class.ui::ClipRecorder"* nocapture, %class.SkPath* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 0
  %6 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %5, align 8
  %7 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %6, i64 0, i32 0
  %8 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %7, align 8
  %9 = tail call i64 @_ZN2cc15DisplayItemList4pushINS_6SaveOpEJEEEmDpOT0_(%"class.cc::DisplayItemList"* %8)
  %10 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %5, align 8
  %11 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %10, i64 0, i32 0
  %12 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %11, align 8
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 1, i32* %4, align 4
  %14 = call i64 @_ZN2cc15DisplayItemList4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRbEEEmDpOT0_(%"class.cc::DisplayItemList"* %12, %class.SkPath* dereferenceable(16) %1, i32* nonnull dereferenceable(4) %4, i8* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  %15 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %5, align 8
  %16 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %15, i64 0, i32 0
  %17 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %16, align 8
  call void @_ZN2cc15DisplayItemList21EndPaintOfPairedBeginEv(%"class.cc::DisplayItemList"* %17)
  %18 = getelementptr inbounds %"class.ui::ClipRecorder", %"class.ui::ClipRecorder"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.68"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.gfx::Rect"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.gfx::Rect"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.gfx::Rect"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"class.gfx::Rect"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.68"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.68"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #9
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #9
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to %"class.gfx::Rect"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.gfx::Rect"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %33
  %59 = bitcast %"class.gfx::Rect"* %58 to i8*
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %56
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"class.gfx::Rect"* %60 to i64
  %64 = ptrtoint %"class.gfx::Rect"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.gfx::Rect"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %71
  %73 = ptrtoint %"class.gfx::Rect"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.gfx::Rect"* %72 to i8*
  %77 = bitcast %"class.gfx::Rect"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.gfx::Rect"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.gfx::Rect"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.gfx::Rect"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cc::ClipPathOp"* @_ZN2cc13PaintOpBuffer4pushINS_10ClipPathOpEJRK6SkPath8SkClipOpRbEEEPKT_DpOT0_(%"class.cc::PaintOpBuffer"*, %class.SkPath* dereferenceable(16), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %class.SkPath, align 8
  %6 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %0, i64 32) #11
  %7 = bitcast i8* %6 to %"class.cc::ClipPathOp"*
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* nonnull %5, %class.SkPath* dereferenceable(16) %1) #11
  %8 = load i32, i32* %2, align 4
  %9 = load i8, i8* %3, align 1, !range !2
  %10 = bitcast i8* %6 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, -256
  %13 = or i32 %12, 1
  store i32 %13, i32* %10, align 4
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  %15 = bitcast i8* %14 to %class.SkPath*
  call void @_ZN6SkPathC2ERKS_(%class.SkPath* %15, %class.SkPath* nonnull dereferenceable(16) %5) #11
  %16 = bitcast i8* %14 to %class.SkPathRef**
  %17 = load %class.SkPathRef*, %class.SkPathRef** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 9
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 1
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 3, i32 0
  %24 = load %struct.SkPoint*, %struct.SkPoint** %23, align 8
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 3, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %22, %struct.SkPoint* %24, i32 %26) #11
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 10
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 1
  store i8 0, i8* %18, align 8
  br label %30

30:                                               ; preds = %4, %21
  %31 = getelementptr inbounds i8, i8* %6, i64 24
  %32 = bitcast i8* %31 to i32*
  store i32 %8, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %6, i64 28
  store i8 %9, i8* %33, align 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #11
  %34 = load i32, i32* %10, align 8
  %35 = and i32 %34, 255
  %36 = or i32 %35, 8192
  store i32 %36, i32* %10, align 8
  %37 = bitcast i8* %6 to %"class.cc::PaintOp"*
  %38 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 8
  %39 = call i32 @_ZNK2cc10ClipPathOp14CountSlowPathsEv(%"class.cc::ClipPathOp"* %7) #11
  %40 = load i32, i32* %38, align 8
  %41 = add nsw i32 %40, %39
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %33, align 4, !range !2
  %43 = xor i8 %42, 1
  %44 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %45 = load i8, i8* %44, align 4
  %46 = and i8 %45, 1
  %47 = or i8 %46, %43
  %48 = and i8 %45, -4
  %49 = or i8 %47, %48
  %50 = and i8 %45, 2
  %51 = or i8 %49, %50
  store i8 %51, i8* %44, align 4
  %52 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %37) #11
  %53 = zext i1 %52 to i8
  %54 = load i8, i8* %44, align 4
  %55 = shl nuw nsw i8 %53, 2
  %56 = and i8 %54, 4
  %57 = or i8 %56, %55
  %58 = and i8 %54, -61
  %59 = or i8 %57, %58
  %60 = and i8 %54, 8
  %61 = or i8 %59, %60
  %62 = and i8 %54, 16
  %63 = and i8 %54, 32
  %64 = or i8 %61, %62
  %65 = or i8 %64, %63
  store i8 %65, i8* %44, align 4
  ret %"class.cc::ClipPathOp"* %7
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #8

declare void @_ZN6SkPathC2ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare i32 @_ZNK2cc10ClipPathOp14CountSlowPathsEv(%"class.cc::ClipPathOp"*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
