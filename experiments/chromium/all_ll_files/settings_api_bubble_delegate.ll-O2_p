; ModuleID = '../../chrome/browser/extensions/settings_api_bubble_delegate.cc'
source_filename = "../../chrome/browser/extensions/settings_api_bubble_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [24 x i8] }
%"class.extensions::SettingsApiBubbleDelegate" = type { %"class.extensions::ExtensionMessageBubbleController::Delegate", i32, %"class.std::__1::basic_string", %class.Profile* }
%"class.extensions::ExtensionMessageBubbleController::Delegate" = type { i32 (...)**, %class.Profile*, %"class.extensions::ExtensionService"*, %"class.extensions::ExtensionRegistry"*, %"class.std::__1::basic_string" }
%"class.extensions::ExtensionService" = type { %"class.extensions::ExtensionServiceInterface", %"class.extensions::ExternalProviderInterface::VisitorInterface", %"class.content::NotificationObserver", %"class.extensions::Blocklist::Observer", %"class.extensions::ExtensionManagement::Observer", %class.UpgradeObserver, %"class.extensions::ExtensionRegistrar::Delegate", %class.ProfileManagerObserver, %"class.base::CommandLine"*, %class.Profile*, %"class.extensions::ExtensionSystem"*, %"class.extensions::ExtensionPrefs"*, %"class.extensions::Blocklist"*, %"class.extensions::ExtensionAllowlist", %"class.extensions::SafeBrowsingVerdictHandler", %"class.extensions::OmahaAttributesHandler", %"class.extensions::ExtensionRegistry"*, %"class.std::__1::set", %"class.extensions::ExtensionSet", %"class.extensions::PendingExtensionManager", %"class.base::FilePath", i8, %"class.base::OneShotEvent"*, %"class.std::__1::unique_ptr.173", %"class.content::NotificationRegistrar", %"class.std::__1::unique_ptr.186", %"class.std::__1::vector.192", i8, %"class.base::OnceCallback", i8, i8, i8, %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.218", %"class.base::ObserverList.224", %"class.extensions::ExtensionRegistrar", %"class.extensions::ForceInstalledTracker", %"class.extensions::ForceInstalledMetrics", %"class.base::ScopedObservation.344", %"class.std::__1::map.388" }
%"class.extensions::ExtensionServiceInterface" = type { i32 (...)**, %"class.base::SupportsWeakPtr" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.extensions::ExternalProviderInterface::VisitorInterface" = type { i32 (...)** }
%"class.content::NotificationObserver" = type { i32 (...)** }
%"class.extensions::Blocklist::Observer" = type { i32 (...)**, %"class.extensions::Blocklist"* }
%"class.extensions::ExtensionManagement::Observer" = type { i32 (...)** }
%class.UpgradeObserver = type { i32 (...)** }
%"class.extensions::ExtensionRegistrar::Delegate" = type { i32 (...)** }
%class.ProfileManagerObserver = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::CommandLine" = type opaque
%"class.extensions::ExtensionSystem" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"class.extensions::ExtensionPrefs" = type { %class.KeyedService, %"class.content::BrowserContext"*, %class.PrefService*, %"class.base::FilePath", %class.ExtensionPrefValueMap*, %"class.base::Clock"*, i8, [7 x i8], %"class.base::ObserverList.120" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %class.scoped_refptr.94, %"class.base::RepeatingCallback.95", %class.scoped_refptr.96, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.76", i8, %"class.std::__1::unique_ptr.85" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.75, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.75 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.76" = type { %"class.std::__1::__tree.77" }
%"class.std::__1::__tree.77" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.94 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.95" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.96 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.97", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.112", [4 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { float }
%class.ExtensionPrefValueMap = type opaque
%"class.base::Clock" = type opaque
%"class.base::ObserverList.120" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.121", i64, i32, [4 x i8] }>
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.35" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.121" = type { %"class.base::LinkNode.122" }
%"class.base::LinkNode.122" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.extensions::Blocklist" = type { %class.KeyedService, %"class.base::SupportsWeakPtr.31", %"class.base::ObserverList.32", %"class.base::CallbackListSubscription", %"class.base::CallbackListSubscription", %"class.std::__1::map.45", %"class.std::__1::unique_ptr.56", %"class.std::__1::list" }
%"class.base::SupportsWeakPtr.31" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::ObserverList.32" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.40", i64, i32, [4 x i8] }>
%"class.base::LinkedList.40" = type { %"class.base::LinkNode.41" }
%"class.base::LinkNode.41" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.std::__1::map.45" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.extensions::BlocklistStateFetcher"* }
%"class.extensions::BlocklistStateFetcher" = type opaque
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.62" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::ExtensionAllowlist" = type { %"class.extensions::ExtensionPrefsObserver", %"class.base::ObserverList.124", %class.Profile*, %"class.extensions::ExtensionPrefs"*, %"class.extensions::ExtensionService"*, %"class.extensions::ExtensionRegistry"*, i8, i8, i8, %class.PrefChangeRegistrar, %"class.base::ScopedObservation" }
%"class.extensions::ExtensionPrefsObserver" = type { i32 (...)** }
%"class.base::ObserverList.124" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.125", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.125" = type { %"class.base::LinkNode.126" }
%"class.base::LinkNode.126" = type { %"class.base::internal::LinkNodeBase" }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.141", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ScopedObservation" = type { %"class.extensions::ExtensionPrefsObserver"*, %"class.extensions::ExtensionPrefs"* }
%"class.extensions::SafeBrowsingVerdictHandler" = type { %"class.extensions::ExtensionPrefs"*, %"class.extensions::ExtensionRegistry"*, %"class.extensions::ExtensionService"*, %"class.extensions::ExtensionSet" }
%"class.extensions::OmahaAttributesHandler" = type { %"class.extensions::ExtensionPrefs"*, %"class.extensions::ExtensionService"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.150" }
%"class.std::__1::__tree.150" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.128" }
%"class.std::__1::map.128" = type { %"class.std::__1::__tree.129" }
%"class.std::__1::__tree.129" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::PendingExtensionManager" = type { %"class.content::BrowserContext"*, %"class.std::__1::list.157", %"class.std::__1::map.164" }
%"class.std::__1::list.157" = type { %"class.std::__1::__list_imp.158" }
%"class.std::__1::__list_imp.158" = type { %"struct.std::__1::__list_node_base.159", %"class.std::__1::__compressed_pair.160" }
%"struct.std::__1::__list_node_base.159" = type { %"struct.std::__1::__list_node_base.159"*, %"struct.std::__1::__list_node_base.159"* }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.164" = type { %"class.std::__1::__tree.165" }
%"class.std::__1::__tree.165" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::OneShotEvent" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.extensions::ExtensionUpdater"* }
%"class.extensions::ExtensionUpdater" = type opaque
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector.179" }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair.181" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.content::NotificationRegistrar::Record"* }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.extensions::ComponentLoader"* }
%"class.extensions::ComponentLoader" = type opaque
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::unique_ptr.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::unique_ptr.194"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.extensions::ExtensionErrorController"* }
%"class.extensions::ExtensionErrorController" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.extensions::ExternalInstallManager"* }
%"class.extensions::ExternalInstallManager" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.extensions::ExtensionActionStorageManager"* }
%"class.extensions::ExtensionActionStorageManager" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.extensions::SharedModuleService"* }
%"class.extensions::SharedModuleService" = type opaque
%"class.base::ObserverList.224" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.225", i64, i32, [4 x i8] }>
%"class.base::LinkedList.225" = type { %"class.base::LinkNode.226" }
%"class.base::LinkNode.226" = type { %"class.base::internal::LinkNodeBase" }
%"class.extensions::ExtensionRegistrar" = type { i32 (...)**, %"class.content::BrowserContext"*, %"class.extensions::ExtensionRegistrar::Delegate"*, %"class.extensions::ExtensionSystem"*, %"class.extensions::ExtensionPrefs"*, %"class.extensions::ExtensionRegistry"*, %"class.extensions::RendererStartupHelper"*, %"class.std::__1::map.228", %"class.std::__1::map.237", %"class.std::__1::set", %"class.std::__1::set.246", %"class.base::WeakPtrFactory.256" }
%"class.extensions::RendererStartupHelper" = type opaque
%"class.std::__1::map.228" = type { %"class.std::__1::__tree.229" }
%"class.std::__1::__tree.229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.237" = type { %"class.std::__1::__tree.238" }
%"class.std::__1::__tree.238" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.246" = type { %"class.std::__1::__tree.247" }
%"class.std::__1::__tree.247" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.256" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.extensions::ForceInstalledTracker" = type { %"class.extensions::ExtensionRegistryObserver", %"class.extensions::InstallStageTracker::Observer", %"class.policy::PolicyService::Observer", %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionRegistry"*, %class.Profile*, %class.PrefService*, %"class.std::__1::map.305", i64, i64, i32, %"class.base::ScopedObservation.314", %"class.base::ScopedObservation.315", %"class.base::ObserverList.329" }
%"class.extensions::ExtensionRegistryObserver" = type { i32 (...)** }
%"class.extensions::InstallStageTracker::Observer" = type { %"class.base::CheckedObserver" }
%"class.policy::PolicyService::Observer" = type { %"class.base::CheckedObserver" }
%"class.extensions::ExtensionManagement" = type { %class.KeyedService, %"class.std::__1::unordered_map.257", %"class.std::__1::unordered_map.257", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %class.Profile*, %class.PrefService*, i8, i8, [6 x i8], %"class.base::ObserverList.293", %class.PrefChangeRegistrar, %"class.std::__1::vector.297" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.extensions::internal::IndividualSettings"* }
%"struct.extensions::internal::IndividualSettings" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.extensions::internal::GlobalSettings"* }
%"struct.extensions::internal::GlobalSettings" = type opaque
%"class.base::ObserverList.293" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.294", i64, i32, [4 x i8] }>
%"class.base::LinkedList.294" = type { %"class.base::LinkNode.295" }
%"class.base::LinkNode.295" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"class.std::__1::unique_ptr.299"*, %"class.std::__1::unique_ptr.299"*, %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::unique_ptr.299" = type opaque
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::unique_ptr.299"* }
%"class.std::__1::map.305" = type { %"class.std::__1::__tree.306" }
%"class.std::__1::__tree.306" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ScopedObservation.314" = type { %"class.extensions::ExtensionRegistryObserver"*, %"class.extensions::ExtensionRegistry"* }
%"class.base::ScopedObservation.315" = type { %"class.extensions::InstallStageTracker::Observer"*, %"class.extensions::InstallStageTracker"* }
%"class.extensions::InstallStageTracker" = type { %class.KeyedService, %"class.content::BrowserContext"*, %"class.std::__1::map.316", %"class.base::ObserverList.325" }
%"class.std::__1::map.316" = type { %"class.std::__1::__tree.317" }
%"class.std::__1::__tree.317" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList.325" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.326", i64, i32, [4 x i8] }>
%"class.base::LinkedList.326" = type { %"class.base::LinkNode.327" }
%"class.base::LinkNode.327" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.329" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.330", i64, i32, [4 x i8] }>
%"class.base::LinkedList.330" = type { %"class.base::LinkNode.331" }
%"class.base::LinkNode.331" = type { %"class.base::internal::LinkNodeBase" }
%"class.extensions::ForceInstalledMetrics" = type { %"class.extensions::ForceInstalledTracker::Observer", %"class.extensions::ExtensionRegistry"*, %class.Profile*, %"class.extensions::ForceInstalledTracker"*, %"class.base::Time", i8, i8, %"class.base::ScopedObservation.333", %"class.std::__1::unique_ptr.334" }
%"class.extensions::ForceInstalledTracker::Observer" = type { %"class.base::CheckedObserver" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ScopedObservation.333" = type { %"class.extensions::ForceInstalledTracker::Observer"*, %"class.extensions::ForceInstalledTracker"* }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.base::OneShotTimer"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.337, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.340" }
%class.scoped_refptr.337 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.338" }>
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.339" }
%"class.base::time_internal::TimeBase.339" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.340" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ScopedObservation.344" = type { %class.ProfileManagerObserver*, %class.ProfileManager* }
%class.ProfileManager = type { %"class.Profile::Delegate", %"class.base::ObserverList.345", %"class.std::__1::unique_ptr.349", %"class.base::CallbackListSubscription", %"class.base::FilePath", i8, %"class.ProfileManager::BrowserListObserver", %"class.std::__1::map.355", %"class.std::__1::unique_ptr.364", %"class.std::__1::map.370", %"class.std::__1::vector.381", i8, i8, %"class.base::FilePath" }
%"class.Profile::Delegate" = type { i32 (...)** }
%"class.base::ObserverList.345" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.346", i64, i32, [4 x i8] }>
%"class.base::LinkedList.346" = type { %"class.base::LinkNode.347" }
%"class.base::LinkNode.347" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %class.ProfileInfoCache* }
%class.ProfileInfoCache = type opaque
%"class.ProfileManager::BrowserListObserver" = type { %class.BrowserListObserver, %class.ProfileManager* }
%class.BrowserListObserver = type { i32 (...)** }
%"class.std::__1::map.355" = type { %"class.std::__1::__tree.356" }
%"class.std::__1::__tree.356" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %class.ProfileShortcutManager* }
%class.ProfileShortcutManager = type { i32 (...)** }
%"class.std::__1::map.370" = type { %"class.std::__1::__tree.371" }
%"class.std::__1::__tree.371" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.381" = type { %"class.std::__1::__vector_base.382" }
%"class.std::__1::__vector_base.382" = type { %class.Profile**, %class.Profile**, %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %class.Profile** }
%"class.std::__1::map.388" = type { %"class.std::__1::__tree.389" }
%"class.std::__1::__tree.389" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::ExtensionRegistry" = type { %class.KeyedService, %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.base::ObserverList.137", %"class.content::BrowserContext"* }
%"class.base::ObserverList.137" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.138", i64, i32, [4 x i8] }>
%"class.base::LinkedList.138" = type { %"class.base::LinkNode.139" }
%"class.base::LinkNode.139" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.7", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.399", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.410", %"class.std::__1::unique_ptr.416", %"class.std::__1::vector.422", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.442", %"class.std::__1::map.483", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.399" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set.400" }
%"class.std::__1::set.400" = type { %"class.std::__1::__tree.401" }
%"class.std::__1::__tree.401" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.422" = type { %"class.std::__1::__vector_base.423" }
%"class.std::__1::__vector_base.423" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.424" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.429" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.435" }
%"class.std::__1::vector.435" = type { %"class.std::__1::__vector_base.436" }
%"class.std::__1::__vector_base.436" = type { i32*, i32*, %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { i32* }
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.445", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.448" }
%"union.absl::variant_internal::DestructibleUnionImpl.448" = type { %"union.absl::variant_internal::DestructibleUnionImpl.449" }
%"union.absl::variant_internal::DestructibleUnionImpl.449" = type { %"union.absl::variant_internal::DestructibleUnionImpl.450" }
%"union.absl::variant_internal::DestructibleUnionImpl.450" = type { %"union.absl::variant_internal::DestructibleUnionImpl.451" }
%"union.absl::variant_internal::DestructibleUnionImpl.451" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.483" = type { %"class.std::__1::__tree.484" }
%"class.std::__1::__tree.484" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.485", %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.492" = type { %"class.std::__1::__vector_base.493" }
%"class.std::__1::__vector_base.493" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.502 }
%union.anon.502 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.extensions::SettingsOverrides" = type { %"struct.extensions::Extension::ManifestData", %"class.std::__1::unique_ptr.508", %"class.std::__1::unique_ptr.429", %"class.std::__1::vector.531" }
%"struct.extensions::Extension::ManifestData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* }
%"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider" = type <{ %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.522", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.std::__1::vector.492"* }
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { i32* }
%"class.std::__1::vector.531" = type { %"class.std::__1::__vector_base.532" }
%"class.std::__1::__vector_base.532" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.503 }
%struct.anon.503 = type { %"struct.std::__1::__padding.504", i8 }
%"struct.std::__1::__padding.504" = type { [1 x i8] }
%"class.std::__1::map.537" = type { %"class.std::__1::__tree.538" }
%"class.std::__1::__tree.538" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.574" }
%"struct.std::__1::pair.574" = type { %"class.std::__1::basic_string", %"class.std::__1::set.546" }
%"class.std::__1::set.546" = type { %"class.std::__1::__tree.547" }
%"class.std::__1::__tree.547" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node.580" = type { %"class.std::__1::__tree_node_base.base", %class.Profile* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.560", [4 x i8] }>
%"struct.std::__1::atomic.560" = type { %"struct.std::__1::__atomic_base.561" }
%"struct.std::__1::__atomic_base.561" = type { %"struct.std::__1::__atomic_base.562" }
%"struct.std::__1::__atomic_base.562" = type { %"struct.std::__1::__cxx_atomic_impl.563" }
%"struct.std::__1::__cxx_atomic_impl.563" = type { %"struct.std::__1::__cxx_atomic_base_impl.564" }
%"struct.std::__1::__cxx_atomic_base_impl.564" = type { i32 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIP7ProfileNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

@_ZTVN10extensions25SettingsApiBubbleDelegateE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZN10extensions25SettingsApiBubbleDelegateD2Ev to i8*), i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZN10extensions25SettingsApiBubbleDelegateD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::SettingsApiBubbleDelegate"*, %"class.extensions::Extension"*)* @_ZN10extensions25SettingsApiBubbleDelegate22ShouldIncludeExtensionEPKNS_9ExtensionE to i8*), i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*, %"class.std::__1::basic_string"*, i32)* @_ZN10extensions25SettingsApiBubbleDelegate20AcknowledgeExtensionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_32ExtensionMessageBubbleController12BubbleActionE to i8*), i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*, %"class.std::__1::vector.492"*)* @_ZN10extensions25SettingsApiBubbleDelegate13PerformActionERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.499"*, %"class.extensions::SettingsApiBubbleDelegate"*)* @_ZNK10extensions25SettingsApiBubbleDelegate8GetTitleEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.499"*, %"class.extensions::SettingsApiBubbleDelegate"*, i1, i32)* @_ZNK10extensions25SettingsApiBubbleDelegate14GetMessageBodyEbi to i8*), i8* bitcast (void (%"class.std::__1::basic_string.499"*, %"class.extensions::SettingsApiBubbleDelegate"*, %"class.std::__1::basic_string.499"*)* @_ZNK10extensions25SettingsApiBubbleDelegate15GetOverflowTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.499"*, %"class.extensions::ExtensionMessageBubbleController::Delegate"*)* @_ZNK10extensions32ExtensionMessageBubbleController8Delegate17GetLearnMoreLabelEv to i8*), i8* bitcast (void (%class.GURL*, %"class.extensions::SettingsApiBubbleDelegate"*)* @_ZNK10extensions25SettingsApiBubbleDelegate15GetLearnMoreUrlEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.499"*, %"class.extensions::SettingsApiBubbleDelegate"*)* @_ZNK10extensions25SettingsApiBubbleDelegate20GetActionButtonLabelEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.499"*, %"class.extensions::SettingsApiBubbleDelegate"*)* @_ZNK10extensions25SettingsApiBubbleDelegate21GetDismissButtonLabelEv to i8*), i8* bitcast (i1 (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZNK10extensions25SettingsApiBubbleDelegate23ShouldCloseOnDeactivateEv to i8*), i8* bitcast (i1 (%"class.extensions::SettingsApiBubbleDelegate"*, %"class.std::__1::vector.492"*)* @_ZNK10extensions25SettingsApiBubbleDelegate10ShouldShowERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*, %"class.std::__1::vector.492"*)* @_ZN10extensions25SettingsApiBubbleDelegate7OnShownERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZN10extensions25SettingsApiBubbleDelegate8OnActionEv to i8*), i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZN10extensions25SettingsApiBubbleDelegate25ClearProfileSetForTestingEv to i8*), i8* bitcast (i1 (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZNK10extensions25SettingsApiBubbleDelegate23ShouldShowExtensionListEv to i8*), i8* bitcast (i1 (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZNK10extensions25SettingsApiBubbleDelegate30ShouldLimitToEnabledExtensionsEv to i8*), i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*, i64)* @_ZN10extensions25SettingsApiBubbleDelegate17LogExtensionCountEm to i8*), i8* bitcast (void (%"class.extensions::SettingsApiBubbleDelegate"*, i32)* @_ZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionE to i8*), i8* bitcast (i1 (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZN10extensions25SettingsApiBubbleDelegate23SupportsPolicyIndicatorEv to i8*)] }, align 8
@_ZN10extensions25SettingsApiBubbleDelegate23kAcknowledgedPreferenceE = hidden local_unnamed_addr constant [20 x i8] c"ack_settings_bubble\00", align 16
@_ZN6chrome39kExtensionControlledSettingLearnMoreURLE = external constant [0 x i8], align 1
@_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str = private unnamed_addr constant [57 x i8] c"ExtensionOverrideBubble.SettingsApiUserSelectionHomePage\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"ExtensionOverrideBubble.SettingsApiUserSelectionStartupPage\00", align 1
@.str.3 = private unnamed_addr constant [61 x i8] c"ExtensionOverrideBubble.SettingsApiUserSelectionSearchEngine\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"SettingsApiBubbleDelegate.HomePage\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"SettingsApiBubbleDelegate.StartupPages\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"SettingsApiBubbleDelegate.SearchEngine\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN10extensions25SettingsApiBubbleDelegate25ClearProfileSetForTestingEv = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)], align 8

@_ZN10extensions25SettingsApiBubbleDelegateC1EP7ProfileNS_23SettingsApiOverrideTypeE = hidden unnamed_addr alias void (%"class.extensions::SettingsApiBubbleDelegate"*, %class.Profile*, i32), void (%"class.extensions::SettingsApiBubbleDelegate"*, %class.Profile*, i32)* @_ZN10extensions25SettingsApiBubbleDelegateC2EP7ProfileNS_23SettingsApiOverrideTypeE
@_ZN10extensions25SettingsApiBubbleDelegateD1Ev = hidden unnamed_addr alias void (%"class.extensions::SettingsApiBubbleDelegate"*), void (%"class.extensions::SettingsApiBubbleDelegate"*)* @_ZN10extensions25SettingsApiBubbleDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegateC2EP7ProfileNS_23SettingsApiOverrideTypeE(%"class.extensions::SettingsApiBubbleDelegate"*, %class.Profile*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0
  tail call void @_ZN10extensions32ExtensionMessageBubbleController8DelegateC2EP7Profile(%"class.extensions::ExtensionMessageBubbleController::Delegate"* %5, %class.Profile* %1) #12
  %6 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN10extensions25SettingsApiBubbleDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 3
  store %class.Profile* %1, %class.Profile** %10, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 19, i8* %13, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 16 getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN10extensions25SettingsApiBubbleDelegate23kAcknowledgedPreferenceE, i64 0, i64 0), i64 19, i1 false) #12
  %14 = getelementptr inbounds i8, i8* %11, i64 19
  store i8 0, i8* %14, align 1
  call void @_ZN10extensions32ExtensionMessageBubbleController8Delegate31set_acknowledged_flag_pref_nameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.extensions::ExtensionMessageBubbleController::Delegate"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %3, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret void
}

declare void @_ZN10extensions32ExtensionMessageBubbleController8DelegateC2EP7Profile(%"class.extensions::ExtensionMessageBubbleController::Delegate"*, %class.Profile*) unnamed_addr #1

declare void @_ZN10extensions32ExtensionMessageBubbleController8Delegate31set_acknowledged_flag_pref_nameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.extensions::ExtensionMessageBubbleController::Delegate"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegateD2Ev(%"class.extensions::SettingsApiBubbleDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN10extensions25SettingsApiBubbleDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0
  tail call void @_ZN10extensions32ExtensionMessageBubbleController8DelegateD2Ev(%"class.extensions::ExtensionMessageBubbleController::Delegate"* %12) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions32ExtensionMessageBubbleController8DelegateD2Ev(%"class.extensions::ExtensionMessageBubbleController::Delegate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegateD0Ev(%"class.extensions::SettingsApiBubbleDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN10extensions25SettingsApiBubbleDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0
  tail call void @_ZN10extensions32ExtensionMessageBubbleController8DelegateD2Ev(%"class.extensions::ExtensionMessageBubbleController::Delegate"* %12) #12
  %13 = bitcast %"class.extensions::SettingsApiBubbleDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions25SettingsApiBubbleDelegate22ShouldIncludeExtensionEPKNS_9ExtensionE(%"class.extensions::SettingsApiBubbleDelegate"*, %"class.extensions::Extension"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0, i32 1
  %8 = load %class.Profile*, %class.Profile** %7, align 8
  %9 = bitcast %class.Profile* %8 to i32 (%class.Profile*)***
  %10 = load i32 (%class.Profile*)**, i32 (%class.Profile*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%class.Profile*)*, i32 (%class.Profile*)** %10, i64 64
  %12 = load i32 (%class.Profile*)*, i32 (%class.Profile*)** %11, align 8
  %13 = tail call i32 %12(%class.Profile* %8) #12
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %74, label %15

15:                                               ; preds = %6, %2
  %16 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0
  %17 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #12
  %18 = tail call zeroext i1 @_ZN10extensions32ExtensionMessageBubbleController8Delegate29HasBubbleInfoBeenAcknowledgedERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.extensions::ExtensionMessageBubbleController::Delegate"* %16, %"class.std::__1::basic_string"* dereferenceable(24) %17) #12
  br i1 %18, label %74, label %19

19:                                               ; preds = %15
  %20 = load i32, i32* %3, align 8
  switch i32 %20, label %74 [
    i32 0, label %21
    i32 2, label %26
    i32 1, label %31
  ]

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0, i32 1
  %23 = load %class.Profile*, %class.Profile** %22, align 8
  %24 = getelementptr inbounds %class.Profile, %class.Profile* %23, i64 0, i32 0
  %25 = tail call %"class.extensions::Extension"* @_ZN10extensions30GetExtensionOverridingHomepageEPN7content14BrowserContextE(%"class.content::BrowserContext"* %24) #12
  br label %36

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0, i32 1
  %28 = load %class.Profile*, %class.Profile** %27, align 8
  %29 = getelementptr inbounds %class.Profile, %class.Profile* %28, i64 0, i32 0
  %30 = tail call %"class.extensions::Extension"* @_ZN10extensions34GetExtensionOverridingStartupPagesEPN7content14BrowserContextE(%"class.content::BrowserContext"* %29) #12
  br label %36

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0, i32 1
  %33 = load %class.Profile*, %class.Profile** %32, align 8
  %34 = getelementptr inbounds %class.Profile, %class.Profile* %33, i64 0, i32 0
  %35 = tail call %"class.extensions::Extension"* @_ZN10extensions34GetExtensionOverridingSearchEngineEPN7content14BrowserContextE(%"class.content::BrowserContext"* %34) #12
  br label %36

36:                                               ; preds = %31, %26, %21
  %37 = phi %"class.extensions::Extension"* [ %35, %31 ], [ %30, %26 ], [ %25, %21 ]
  %38 = icmp ne %"class.extensions::Extension"* %37, null
  %39 = icmp eq %"class.extensions::Extension"* %37, %1
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %74

41:                                               ; preds = %36
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #12
  %43 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 2
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %74, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %49, label %64, label %54

54:                                               ; preds = %45
  br i1 %53, label %58, label %55

55:                                               ; preds = %54
  %56 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  br label %74

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %43, i8* %60, i64 %62) #12
  br label %74

64:                                               ; preds = %45
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %70 = zext i8 %52 to i64
  %71 = select i1 %53, i8* %66, i8* %69
  %72 = select i1 %53, i64 %68, i64 %70
  %73 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %43, i8* %71, i64 %72) #12
  br label %74

74:                                               ; preds = %19, %64, %58, %55, %41, %36, %15, %6
  %75 = phi i1 [ false, %6 ], [ false, %15 ], [ false, %36 ], [ true, %41 ], [ true, %55 ], [ true, %58 ], [ true, %64 ], [ false, %19 ]
  ret i1 %75
}

declare zeroext i1 @_ZN10extensions32ExtensionMessageBubbleController8Delegate29HasBubbleInfoBeenAcknowledgedERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.extensions::ExtensionMessageBubbleController::Delegate"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #1

declare %"class.extensions::Extension"* @_ZN10extensions30GetExtensionOverridingHomepageEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare %"class.extensions::Extension"* @_ZN10extensions34GetExtensionOverridingStartupPagesEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare %"class.extensions::Extension"* @_ZN10extensions34GetExtensionOverridingSearchEngineEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegate20AcknowledgeExtensionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_32ExtensionMessageBubbleController12BubbleActionE(%"class.extensions::SettingsApiBubbleDelegate"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 1
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0
  tail call void @_ZN10extensions32ExtensionMessageBubbleController8Delegate29SetBubbleInfoBeenAcknowledgedERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb(%"class.extensions::ExtensionMessageBubbleController::Delegate"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext true) #12
  br label %7

7:                                                ; preds = %3, %5
  ret void
}

declare void @_ZN10extensions32ExtensionMessageBubbleController8Delegate29SetBubbleInfoBeenAcknowledgedERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb(%"class.extensions::ExtensionMessageBubbleController::Delegate"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegate13PerformActionERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly, %"class.std::__1::vector.492"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.492", %"class.std::__1::vector.492"* %1, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.492"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 0, i32 2
  br label %12

11:                                               ; preds = %12, %2
  ret void

12:                                               ; preds = %9, %12
  %13 = phi i64 [ %7, %9 ], [ %20, %12 ]
  %14 = phi i64 [ 0, %9 ], [ %18, %12 ]
  %15 = inttoptr i64 %13 to %"class.std::__1::basic_string"*
  %16 = load %"class.extensions::ExtensionService"*, %"class.extensions::ExtensionService"** %10, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 %14
  tail call void @_ZN10extensions16ExtensionService16DisableExtensionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.extensions::ExtensionService"* %16, %"class.std::__1::basic_string"* dereferenceable(24) %17, i32 1) #12
  %18 = add nuw i64 %14, 1
  %19 = load i64, i64* %4, align 8
  %20 = load i64, i64* %6, align 8
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ult i64 %18, %22
  br i1 %23, label %12, label %11
}

declare void @_ZN10extensions16ExtensionService16DisableExtensionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.extensions::ExtensionService"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions25SettingsApiBubbleDelegate8GetTitleEv(%"class.std::__1::basic_string.499"* noalias sret, %"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %8 [
    i32 0, label %5
    i32 2, label %6
    i32 1, label %7
  ]

5:                                                ; preds = %2
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* sret %0, i32 7604) #12
  br label %10

6:                                                ; preds = %2
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* sret %0, i32 7605) #12
  br label %10

7:                                                ; preds = %2
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* sret %0, i32 7606) #12
  br label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string.499"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  br label %10

10:                                               ; preds = %8, %7, %6, %5
  ret void
}

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions25SettingsApiBubbleDelegate14GetMessageBodyEbi(%"class.std::__1::basic_string.499"* noalias nocapture sret, %"class.extensions::SettingsApiBubbleDelegate"*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.499", align 8
  %6 = alloca %"class.std::__1::basic_string.499", align 8
  %7 = alloca %"class.std::__1::basic_string.499", align 8
  %8 = alloca %"class.std::__1::basic_string.499", align 8
  %9 = alloca %"class.std::__1::basic_string.499", align 8
  %10 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %1, i64 0, i32 0, i32 3
  %11 = load %"class.extensions::ExtensionRegistry"*, %"class.extensions::ExtensionRegistry"** %10, align 8
  %12 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %1, i64 0, i32 2
  %13 = tail call %"class.extensions::Extension"* @_ZNK10extensions17ExtensionRegistry16GetExtensionByIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.extensions::ExtensionRegistry"* %11, %"class.std::__1::basic_string"* dereferenceable(24) %12, i32 1) #12
  %14 = icmp eq %"class.extensions::Extension"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = tail call %"struct.extensions::SettingsOverrides"* @_ZN10extensions17SettingsOverrides3GetEPKNS_9ExtensionE(%"class.extensions::Extension"* nonnull %13) #12
  %17 = icmp eq %"struct.extensions::SettingsOverrides"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %15, %4
  %19 = bitcast %"class.std::__1::basic_string.499"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  br label %511

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %class.GURL*, %class.GURL** %21, align 8
  %23 = icmp ne %class.GURL* %22, null
  %24 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %16, i64 0, i32 3, i32 0, i32 0
  %25 = load %class.GURL*, %class.GURL** %24, align 8
  %26 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %16, i64 0, i32 3, i32 0, i32 1
  %27 = load %class.GURL*, %class.GURL** %26, align 8
  %28 = icmp eq %class.GURL* %25, %27
  %29 = getelementptr inbounds %"struct.extensions::SettingsOverrides", %"struct.extensions::SettingsOverrides"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"*, %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"** %29, align 8
  %31 = icmp ne %"struct.extensions::api::manifest_types::ChromeSettingsOverrides::SearchProvider"* %30, null
  %32 = bitcast %"class.std::__1::basic_string.499"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false) #12
  %36 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %1, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  switch i32 %37, label %58 [
    i32 0, label %38
    i32 2, label %45
    i32 1, label %51
  ]

38:                                               ; preds = %20
  %39 = select i1 %2, i32 7611, i32 7612
  %40 = xor i1 %28, true
  %41 = and i1 %31, %40
  %42 = select i1 %41, i32 611, i32 609
  %43 = select i1 %31, i32 7613, i32 0
  %44 = select i1 %28, i32 %43, i32 %42
  br label %58

45:                                               ; preds = %20
  %46 = select i1 %2, i32 607, i32 608
  %47 = and i1 %23, %31
  %48 = select i1 %47, i32 7615, i32 7614
  %49 = select i1 %31, i32 7613, i32 0
  %50 = select i1 %23, i32 %48, i32 %49
  br label %58

51:                                               ; preds = %20
  %52 = select i1 %2, i32 7609, i32 7610
  %53 = xor i1 %28, true
  %54 = and i1 %23, %53
  %55 = select i1 %54, i32 610, i32 609
  %56 = select i1 %23, i32 7614, i32 0
  %57 = select i1 %28, i32 %56, i32 %55
  br label %58

58:                                               ; preds = %51, %45, %38, %20
  %59 = phi i32 [ 0, %20 ], [ %39, %38 ], [ %46, %45 ], [ %52, %51 ]
  %60 = phi i32 [ 0, %20 ], [ %44, %38 ], [ %50, %45 ], [ %57, %51 ]
  %61 = bitcast %"class.std::__1::basic_string.499"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #12
  br i1 %2, label %62, label %74

62:                                               ; preds = %58
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* nonnull sret %6, i32 %59) #12
  %63 = bitcast %"class.std::__1::basic_string.499"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = bitcast %"class.std::__1::basic_string.499"* %5 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %67, %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %61, i64 24, i1 false) #12
  %71 = bitcast %"class.std::__1::basic_string.499"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  store i8 0, i8* %72, align 1
  %73 = bitcast %"class.std::__1::basic_string.499"* %6 to i16*
  store i16 0, i16* %73, align 8
  br label %108

74:                                               ; preds = %58
  %75 = bitcast %"class.std::__1::basic_string.499"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %13, i64 0, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %84 = select i1 %80, i8* %82, i8* %83
  %85 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = zext i8 %79 to i64
  %88 = select i1 %80, i64 %86, i64 %87
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.499"* nonnull sret %7, i8* %84, i64 %88) #12
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.499"* nonnull sret %6, i32 %59, %"class.std::__1::basic_string.499"* nonnull dereferenceable(24) %7) #12
  %89 = bitcast %"class.std::__1::basic_string.499"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %74
  %94 = bitcast %"class.std::__1::basic_string.499"* %5 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %93, %74
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %61, i64 24, i1 false) #12
  %97 = bitcast %"class.std::__1::basic_string.499"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  store i8 0, i8* %98, align 1
  %99 = bitcast %"class.std::__1::basic_string.499"* %6 to i16*
  store i16 0, i16* %99, align 8
  %100 = bitcast %"class.std::__1::basic_string.499"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %96
  %105 = bitcast %"class.std::__1::basic_string.499"* %7 to i8**
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %96, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  br label %108

108:                                              ; preds = %70, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  %109 = icmp eq i32 %60, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %108
  %111 = bitcast %"class.std::__1::basic_string.499"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %311

112:                                              ; preds = %108
  %113 = bitcast %"class.std::__1::basic_string.499"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* nonnull sret %8, i32 %60) #12
  %114 = bitcast %"class.std::__1::basic_string.499"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %114, i64 0, i32 1, i32 1
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  %118 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i16*, i16** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::basic_string.499"* %8 to i16*
  %123 = zext i8 %116 to i64
  %124 = select i1 %117, i16* %119, i16* %122
  %125 = select i1 %117, i64 %121, i64 %123
  %126 = bitcast %"class.std::__1::basic_string.499"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %126, i64 0, i32 1, i32 1
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %135

130:                                              ; preds = %112
  %131 = load i64, i64* %35, align 8
  %132 = and i64 %131, 9223372036854775807
  %133 = add nsw i64 %132, -1
  %134 = load i64, i64* %34, align 8
  br label %137

135:                                              ; preds = %112
  %136 = zext i8 %128 to i64
  br label %137

137:                                              ; preds = %135, %130
  %138 = phi i64 [ %133, %130 ], [ 10, %135 ]
  %139 = phi i64 [ %134, %130 ], [ %136, %135 ]
  %140 = sub i64 %138, %139
  %141 = icmp ult i64 %140, %125
  br i1 %141, label %301, label %142

142:                                              ; preds = %137
  %143 = icmp eq i64 %125, 0
  br i1 %143, label %304, label %144

144:                                              ; preds = %142
  %145 = load i16*, i16** %33, align 8
  %146 = bitcast %"class.std::__1::basic_string.499"* %5 to i16*
  %147 = select i1 %129, i16* %145, i16* %146
  %148 = getelementptr inbounds i16, i16* %147, i64 %139
  %149 = icmp ult i64 %125, 16
  br i1 %149, label %239, label %150

150:                                              ; preds = %144
  %151 = add i64 %125, %139
  %152 = getelementptr i16, i16* %147, i64 %151
  %153 = getelementptr i16, i16* %124, i64 %125
  %154 = icmp ult i16* %148, %153
  %155 = icmp ult i16* %124, %152
  %156 = and i1 %154, %155
  br i1 %156, label %239, label %157

157:                                              ; preds = %150
  %158 = and i64 %125, -16
  %159 = sub i64 %125, %158
  %160 = getelementptr i16, i16* %124, i64 %158
  %161 = getelementptr i16, i16* %148, i64 %158
  %162 = add i64 %158, -16
  %163 = lshr exact i64 %162, 4
  %164 = add nuw nsw i64 %163, 1
  %165 = and i64 %164, 3
  %166 = icmp ult i64 %162, 48
  br i1 %166, label %218, label %167

167:                                              ; preds = %157
  %168 = sub nsw i64 %164, %165
  br label %169

169:                                              ; preds = %169, %167
  %170 = phi i64 [ 0, %167 ], [ %215, %169 ]
  %171 = phi i64 [ %168, %167 ], [ %216, %169 ]
  %172 = getelementptr i16, i16* %124, i64 %170
  %173 = getelementptr i16, i16* %148, i64 %170
  %174 = bitcast i16* %172 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !2
  %176 = getelementptr i16, i16* %172, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  %178 = load <8 x i16>, <8 x i16>* %177, align 2, !alias.scope !2
  %179 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %179, align 2, !alias.scope !5, !noalias !2
  %180 = getelementptr i16, i16* %173, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %178, <8 x i16>* %181, align 2, !alias.scope !5, !noalias !2
  %182 = or i64 %170, 16
  %183 = getelementptr i16, i16* %124, i64 %182
  %184 = getelementptr i16, i16* %148, i64 %182
  %185 = bitcast i16* %183 to <8 x i16>*
  %186 = load <8 x i16>, <8 x i16>* %185, align 2, !alias.scope !2
  %187 = getelementptr i16, i16* %183, i64 8
  %188 = bitcast i16* %187 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !2
  %190 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %190, align 2, !alias.scope !5, !noalias !2
  %191 = getelementptr i16, i16* %184, i64 8
  %192 = bitcast i16* %191 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %192, align 2, !alias.scope !5, !noalias !2
  %193 = or i64 %170, 32
  %194 = getelementptr i16, i16* %124, i64 %193
  %195 = getelementptr i16, i16* %148, i64 %193
  %196 = bitcast i16* %194 to <8 x i16>*
  %197 = load <8 x i16>, <8 x i16>* %196, align 2, !alias.scope !2
  %198 = getelementptr i16, i16* %194, i64 8
  %199 = bitcast i16* %198 to <8 x i16>*
  %200 = load <8 x i16>, <8 x i16>* %199, align 2, !alias.scope !2
  %201 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %197, <8 x i16>* %201, align 2, !alias.scope !5, !noalias !2
  %202 = getelementptr i16, i16* %195, i64 8
  %203 = bitcast i16* %202 to <8 x i16>*
  store <8 x i16> %200, <8 x i16>* %203, align 2, !alias.scope !5, !noalias !2
  %204 = or i64 %170, 48
  %205 = getelementptr i16, i16* %124, i64 %204
  %206 = getelementptr i16, i16* %148, i64 %204
  %207 = bitcast i16* %205 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2, !alias.scope !2
  %209 = getelementptr i16, i16* %205, i64 8
  %210 = bitcast i16* %209 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !2
  %212 = bitcast i16* %206 to <8 x i16>*
  store <8 x i16> %208, <8 x i16>* %212, align 2, !alias.scope !5, !noalias !2
  %213 = getelementptr i16, i16* %206, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %214, align 2, !alias.scope !5, !noalias !2
  %215 = add i64 %170, 64
  %216 = add i64 %171, -4
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %169, !llvm.loop !7

218:                                              ; preds = %169, %157
  %219 = phi i64 [ 0, %157 ], [ %215, %169 ]
  %220 = icmp eq i64 %165, 0
  br i1 %220, label %237, label %221

221:                                              ; preds = %218, %221
  %222 = phi i64 [ %234, %221 ], [ %219, %218 ]
  %223 = phi i64 [ %235, %221 ], [ %165, %218 ]
  %224 = getelementptr i16, i16* %124, i64 %222
  %225 = getelementptr i16, i16* %148, i64 %222
  %226 = bitcast i16* %224 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !2
  %228 = getelementptr i16, i16* %224, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !2
  %231 = bitcast i16* %225 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %231, align 2, !alias.scope !5, !noalias !2
  %232 = getelementptr i16, i16* %225, i64 8
  %233 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %233, align 2, !alias.scope !5, !noalias !2
  %234 = add i64 %222, 16
  %235 = add i64 %223, -1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %221, !llvm.loop !9

237:                                              ; preds = %221, %218
  %238 = icmp eq i64 %125, %158
  br i1 %238, label %292, label %239

239:                                              ; preds = %237, %150, %144
  %240 = phi i64 [ %125, %150 ], [ %125, %144 ], [ %159, %237 ]
  %241 = phi i16* [ %124, %150 ], [ %124, %144 ], [ %160, %237 ]
  %242 = phi i16* [ %148, %150 ], [ %148, %144 ], [ %161, %237 ]
  %243 = add i64 %240, -1
  %244 = and i64 %240, 7
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %257, label %246

246:                                              ; preds = %239, %246
  %247 = phi i64 [ %252, %246 ], [ %240, %239 ]
  %248 = phi i16* [ %254, %246 ], [ %241, %239 ]
  %249 = phi i16* [ %253, %246 ], [ %242, %239 ]
  %250 = phi i64 [ %255, %246 ], [ %244, %239 ]
  %251 = load i16, i16* %248, align 2
  store i16 %251, i16* %249, align 2
  %252 = add i64 %247, -1
  %253 = getelementptr inbounds i16, i16* %249, i64 1
  %254 = getelementptr inbounds i16, i16* %248, i64 1
  %255 = add i64 %250, -1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %246, !llvm.loop !11

257:                                              ; preds = %246, %239
  %258 = phi i64 [ %240, %239 ], [ %252, %246 ]
  %259 = phi i16* [ %241, %239 ], [ %254, %246 ]
  %260 = phi i16* [ %242, %239 ], [ %253, %246 ]
  %261 = icmp ult i64 %243, 7
  br i1 %261, label %292, label %262

262:                                              ; preds = %257, %262
  %263 = phi i64 [ %288, %262 ], [ %258, %257 ]
  %264 = phi i16* [ %290, %262 ], [ %259, %257 ]
  %265 = phi i16* [ %289, %262 ], [ %260, %257 ]
  %266 = load i16, i16* %264, align 2
  store i16 %266, i16* %265, align 2
  %267 = getelementptr inbounds i16, i16* %265, i64 1
  %268 = getelementptr inbounds i16, i16* %264, i64 1
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = getelementptr inbounds i16, i16* %265, i64 2
  %271 = getelementptr inbounds i16, i16* %264, i64 2
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = getelementptr inbounds i16, i16* %265, i64 3
  %274 = getelementptr inbounds i16, i16* %264, i64 3
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %265, i64 4
  %277 = getelementptr inbounds i16, i16* %264, i64 4
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %265, i64 5
  %280 = getelementptr inbounds i16, i16* %264, i64 5
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %265, i64 6
  %283 = getelementptr inbounds i16, i16* %264, i64 6
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %282, align 2
  %285 = getelementptr inbounds i16, i16* %265, i64 7
  %286 = getelementptr inbounds i16, i16* %264, i64 7
  %287 = load i16, i16* %286, align 2
  store i16 %287, i16* %285, align 2
  %288 = add i64 %263, -8
  %289 = getelementptr inbounds i16, i16* %265, i64 8
  %290 = getelementptr inbounds i16, i16* %264, i64 8
  %291 = icmp eq i64 %288, 0
  br i1 %291, label %292, label %262, !llvm.loop !12

292:                                              ; preds = %257, %262, %237
  %293 = add i64 %139, %125
  %294 = load i8, i8* %127, align 1
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %292
  store i64 %293, i64* %34, align 8
  br label %299

297:                                              ; preds = %292
  %298 = trunc i64 %293 to i8
  store i8 %298, i8* %127, align 1
  br label %299

299:                                              ; preds = %297, %296
  %300 = getelementptr inbounds i16, i16* %147, i64 %293
  store i16 0, i16* %300, align 2
  br label %304

301:                                              ; preds = %137
  %302 = add i64 %139, %125
  %303 = sub i64 %302, %138
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.499"* nonnull %5, i64 %138, i64 %303, i64 %139, i64 %139, i64 0, i64 %125, i16* %124) #12
  br label %304

304:                                              ; preds = %142, %299, %301
  %305 = load i8, i8* %115, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = bitcast %"class.std::__1::basic_string.499"* %8 to i8**
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #13
  br label %310

310:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #12
  br label %311

311:                                              ; preds = %110, %310
  %312 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %111, %110 ], [ %126, %310 ]
  %313 = bitcast %"class.std::__1::basic_string.499"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %313) #12
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* nonnull sret %9, i32 7623) #12
  %314 = bitcast %"class.std::__1::basic_string.499"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %315 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %314, i64 0, i32 1, i32 1
  %316 = load i8, i8* %315, align 1
  %317 = icmp slt i8 %316, 0
  %318 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i16*, i16** %318, align 8
  %320 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %"class.std::__1::basic_string.499"* %9 to i16*
  %323 = zext i8 %316 to i64
  %324 = select i1 %317, i16* %319, i16* %322
  %325 = select i1 %317, i64 %321, i64 %323
  %326 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %312, i64 0, i32 1, i32 1
  %327 = load i8, i8* %326, align 1
  %328 = icmp slt i8 %327, 0
  br i1 %328, label %329, label %334

329:                                              ; preds = %311
  %330 = load i64, i64* %35, align 8
  %331 = and i64 %330, 9223372036854775807
  %332 = add nsw i64 %331, -1
  %333 = load i64, i64* %34, align 8
  br label %336

334:                                              ; preds = %311
  %335 = zext i8 %327 to i64
  br label %336

336:                                              ; preds = %334, %329
  %337 = phi i64 [ %332, %329 ], [ 10, %334 ]
  %338 = phi i64 [ %333, %329 ], [ %335, %334 ]
  %339 = sub i64 %337, %338
  %340 = icmp ult i64 %339, %325
  br i1 %340, label %500, label %341

341:                                              ; preds = %336
  %342 = icmp eq i64 %325, 0
  br i1 %342, label %503, label %343

343:                                              ; preds = %341
  %344 = load i16*, i16** %33, align 8
  %345 = bitcast %"class.std::__1::basic_string.499"* %5 to i16*
  %346 = select i1 %328, i16* %344, i16* %345
  %347 = getelementptr inbounds i16, i16* %346, i64 %338
  %348 = icmp ult i64 %325, 16
  br i1 %348, label %438, label %349

349:                                              ; preds = %343
  %350 = add i64 %325, %338
  %351 = getelementptr i16, i16* %346, i64 %350
  %352 = getelementptr i16, i16* %324, i64 %325
  %353 = icmp ult i16* %347, %352
  %354 = icmp ult i16* %324, %351
  %355 = and i1 %353, %354
  br i1 %355, label %438, label %356

356:                                              ; preds = %349
  %357 = and i64 %325, -16
  %358 = sub i64 %325, %357
  %359 = getelementptr i16, i16* %324, i64 %357
  %360 = getelementptr i16, i16* %347, i64 %357
  %361 = add i64 %357, -16
  %362 = lshr exact i64 %361, 4
  %363 = add nuw nsw i64 %362, 1
  %364 = and i64 %363, 3
  %365 = icmp ult i64 %361, 48
  br i1 %365, label %417, label %366

366:                                              ; preds = %356
  %367 = sub nsw i64 %363, %364
  br label %368

368:                                              ; preds = %368, %366
  %369 = phi i64 [ 0, %366 ], [ %414, %368 ]
  %370 = phi i64 [ %367, %366 ], [ %415, %368 ]
  %371 = getelementptr i16, i16* %324, i64 %369
  %372 = getelementptr i16, i16* %347, i64 %369
  %373 = bitcast i16* %371 to <8 x i16>*
  %374 = load <8 x i16>, <8 x i16>* %373, align 2, !alias.scope !13
  %375 = getelementptr i16, i16* %371, i64 8
  %376 = bitcast i16* %375 to <8 x i16>*
  %377 = load <8 x i16>, <8 x i16>* %376, align 2, !alias.scope !13
  %378 = bitcast i16* %372 to <8 x i16>*
  store <8 x i16> %374, <8 x i16>* %378, align 2, !alias.scope !16, !noalias !13
  %379 = getelementptr i16, i16* %372, i64 8
  %380 = bitcast i16* %379 to <8 x i16>*
  store <8 x i16> %377, <8 x i16>* %380, align 2, !alias.scope !16, !noalias !13
  %381 = or i64 %369, 16
  %382 = getelementptr i16, i16* %324, i64 %381
  %383 = getelementptr i16, i16* %347, i64 %381
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !13
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !13
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !16, !noalias !13
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !16, !noalias !13
  %392 = or i64 %369, 32
  %393 = getelementptr i16, i16* %324, i64 %392
  %394 = getelementptr i16, i16* %347, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !13
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !13
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !16, !noalias !13
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !16, !noalias !13
  %403 = or i64 %369, 48
  %404 = getelementptr i16, i16* %324, i64 %403
  %405 = getelementptr i16, i16* %347, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !13
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !13
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !16, !noalias !13
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !16, !noalias !13
  %414 = add i64 %369, 64
  %415 = add i64 %370, -4
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %417, label %368, !llvm.loop !18

417:                                              ; preds = %368, %356
  %418 = phi i64 [ 0, %356 ], [ %414, %368 ]
  %419 = icmp eq i64 %364, 0
  br i1 %419, label %436, label %420

420:                                              ; preds = %417, %420
  %421 = phi i64 [ %433, %420 ], [ %418, %417 ]
  %422 = phi i64 [ %434, %420 ], [ %364, %417 ]
  %423 = getelementptr i16, i16* %324, i64 %421
  %424 = getelementptr i16, i16* %347, i64 %421
  %425 = bitcast i16* %423 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !13
  %427 = getelementptr i16, i16* %423, i64 8
  %428 = bitcast i16* %427 to <8 x i16>*
  %429 = load <8 x i16>, <8 x i16>* %428, align 2, !alias.scope !13
  %430 = bitcast i16* %424 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %430, align 2, !alias.scope !16, !noalias !13
  %431 = getelementptr i16, i16* %424, i64 8
  %432 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %429, <8 x i16>* %432, align 2, !alias.scope !16, !noalias !13
  %433 = add i64 %421, 16
  %434 = add i64 %422, -1
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %436, label %420, !llvm.loop !19

436:                                              ; preds = %420, %417
  %437 = icmp eq i64 %325, %357
  br i1 %437, label %491, label %438

438:                                              ; preds = %436, %349, %343
  %439 = phi i64 [ %325, %349 ], [ %325, %343 ], [ %358, %436 ]
  %440 = phi i16* [ %324, %349 ], [ %324, %343 ], [ %359, %436 ]
  %441 = phi i16* [ %347, %349 ], [ %347, %343 ], [ %360, %436 ]
  %442 = add i64 %439, -1
  %443 = and i64 %439, 7
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %456, label %445

445:                                              ; preds = %438, %445
  %446 = phi i64 [ %451, %445 ], [ %439, %438 ]
  %447 = phi i16* [ %453, %445 ], [ %440, %438 ]
  %448 = phi i16* [ %452, %445 ], [ %441, %438 ]
  %449 = phi i64 [ %454, %445 ], [ %443, %438 ]
  %450 = load i16, i16* %447, align 2
  store i16 %450, i16* %448, align 2
  %451 = add i64 %446, -1
  %452 = getelementptr inbounds i16, i16* %448, i64 1
  %453 = getelementptr inbounds i16, i16* %447, i64 1
  %454 = add i64 %449, -1
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %456, label %445, !llvm.loop !20

456:                                              ; preds = %445, %438
  %457 = phi i64 [ %439, %438 ], [ %451, %445 ]
  %458 = phi i16* [ %440, %438 ], [ %453, %445 ]
  %459 = phi i16* [ %441, %438 ], [ %452, %445 ]
  %460 = icmp ult i64 %442, 7
  br i1 %460, label %491, label %461

461:                                              ; preds = %456, %461
  %462 = phi i64 [ %487, %461 ], [ %457, %456 ]
  %463 = phi i16* [ %489, %461 ], [ %458, %456 ]
  %464 = phi i16* [ %488, %461 ], [ %459, %456 ]
  %465 = load i16, i16* %463, align 2
  store i16 %465, i16* %464, align 2
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = getelementptr inbounds i16, i16* %463, i64 1
  %468 = load i16, i16* %467, align 2
  store i16 %468, i16* %466, align 2
  %469 = getelementptr inbounds i16, i16* %464, i64 2
  %470 = getelementptr inbounds i16, i16* %463, i64 2
  %471 = load i16, i16* %470, align 2
  store i16 %471, i16* %469, align 2
  %472 = getelementptr inbounds i16, i16* %464, i64 3
  %473 = getelementptr inbounds i16, i16* %463, i64 3
  %474 = load i16, i16* %473, align 2
  store i16 %474, i16* %472, align 2
  %475 = getelementptr inbounds i16, i16* %464, i64 4
  %476 = getelementptr inbounds i16, i16* %463, i64 4
  %477 = load i16, i16* %476, align 2
  store i16 %477, i16* %475, align 2
  %478 = getelementptr inbounds i16, i16* %464, i64 5
  %479 = getelementptr inbounds i16, i16* %463, i64 5
  %480 = load i16, i16* %479, align 2
  store i16 %480, i16* %478, align 2
  %481 = getelementptr inbounds i16, i16* %464, i64 6
  %482 = getelementptr inbounds i16, i16* %463, i64 6
  %483 = load i16, i16* %482, align 2
  store i16 %483, i16* %481, align 2
  %484 = getelementptr inbounds i16, i16* %464, i64 7
  %485 = getelementptr inbounds i16, i16* %463, i64 7
  %486 = load i16, i16* %485, align 2
  store i16 %486, i16* %484, align 2
  %487 = add i64 %462, -8
  %488 = getelementptr inbounds i16, i16* %464, i64 8
  %489 = getelementptr inbounds i16, i16* %463, i64 8
  %490 = icmp eq i64 %487, 0
  br i1 %490, label %491, label %461, !llvm.loop !21

491:                                              ; preds = %456, %461, %436
  %492 = add i64 %338, %325
  %493 = load i8, i8* %326, align 1
  %494 = icmp slt i8 %493, 0
  br i1 %494, label %495, label %496

495:                                              ; preds = %491
  store i64 %492, i64* %34, align 8
  br label %498

496:                                              ; preds = %491
  %497 = trunc i64 %492 to i8
  store i8 %497, i8* %326, align 1
  br label %498

498:                                              ; preds = %496, %495
  %499 = getelementptr inbounds i16, i16* %346, i64 %492
  store i16 0, i16* %499, align 2
  br label %503

500:                                              ; preds = %336
  %501 = add i64 %338, %325
  %502 = sub i64 %501, %337
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.499"* nonnull %5, i64 %337, i64 %502, i64 %338, i64 %338, i64 0, i64 %325, i16* %324) #12
  br label %503

503:                                              ; preds = %341, %498, %500
  %504 = load i8, i8* %315, align 1
  %505 = icmp slt i8 %504, 0
  br i1 %505, label %506, label %509

506:                                              ; preds = %503
  %507 = bitcast %"class.std::__1::basic_string.499"* %9 to i8**
  %508 = load i8*, i8** %507, align 8
  call void @_ZdlPv(i8* %508) #13
  br label %509

509:                                              ; preds = %506, %503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %313) #12
  %510 = bitcast %"class.std::__1::basic_string.499"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %510, i8* nonnull align 8 %32, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  br label %511

511:                                              ; preds = %509, %18
  ret void
}

declare %"class.extensions::Extension"* @_ZNK10extensions17ExtensionRegistry16GetExtensionByIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.extensions::ExtensionRegistry"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

declare %"struct.extensions::SettingsOverrides"* @_ZN10extensions17SettingsOverrides3GetEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #1

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.499"* sret, i32, %"class.std::__1::basic_string.499"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.499"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions25SettingsApiBubbleDelegate15GetOverflowTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.499"* noalias nocapture sret, %"class.extensions::SettingsApiBubbleDelegate"* nocapture readnone, %"class.std::__1::basic_string.499"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string.499"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions25SettingsApiBubbleDelegate15GetLearnMoreUrlEv(%class.GURL* noalias sret, %"class.extensions::SettingsApiBubbleDelegate"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome39kExtensionControlledSettingLearnMoreURLE, i64 0, i64 0)) #12
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome39kExtensionControlledSettingLearnMoreURLE, i64 0, i64 0), i64 %3) #12
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions25SettingsApiBubbleDelegate20GetActionButtonLabelEv(%"class.std::__1::basic_string.499"* noalias sret, %"class.extensions::SettingsApiBubbleDelegate"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* sret %0, i32 7624) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions25SettingsApiBubbleDelegate21GetDismissButtonLabelEv(%"class.std::__1::basic_string.499"* noalias sret, %"class.extensions::SettingsApiBubbleDelegate"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.499"* sret %0, i32 7625) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions25SettingsApiBubbleDelegate23ShouldCloseOnDeactivateEv(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions25SettingsApiBubbleDelegate10ShouldShowERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly, %"class.std::__1::vector.492"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0) acquire, align 8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0)) #12
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE to i8*)) #12
  br label %12

10:                                               ; preds = %7
  %11 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0) acquire, align 8
  br label %12

12:                                               ; preds = %2, %9, %10
  %13 = phi i64 [ %5, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i64), %9 ], [ %11, %10 ]
  %14 = inttoptr i64 %13 to %"class.std::__1::map.537"*
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 3
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN10extensions25SettingsApiBubbleDelegate25ClearProfileSetForTestingEv, i64 0, i64 %20
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %12, %19
  %24 = phi i8* [ %22, %19 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %12 ]
  %25 = tail call i64 @strlen(i8* nonnull %24) #12
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #14
  unreachable

29:                                               ; preds = %23
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %25, 16
  %33 = and i64 %32, -16
  %34 = tail call i8* @_Znwm(i64 %33) #13
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %35, align 8
  %36 = or i64 %33, -9223372036854775808
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %38, align 8
  br label %44

39:                                               ; preds = %29
  %40 = trunc i64 %25 to i8
  %41 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 %40, i8* %42, align 1
  %43 = icmp eq i64 %25, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %39, %31
  %45 = phi i8* [ %34, %31 ], [ %15, %39 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 %24, i64 %25, i1 false) #12
  br label %46

46:                                               ; preds = %39, %44
  %47 = phi i8* [ %15, %39 ], [ %45, %44 ]
  %48 = getelementptr inbounds i8, i8* %47, i64 %25
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %14, i64 0, i32 0
  %50 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %51 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree.538"* %49, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %52 = bitcast %"class.std::__1::__tree_node_base"** %51 to %"class.std::__1::__tree_node"**
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %55, label %84

55:                                               ; preds = %46
  %56 = call i8* @_Znwm(i64 80) #13, !noalias !22
  %57 = getelementptr inbounds i8, i8* %56, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %15, i64 24, i1 false) #12, !noalias !22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #12, !noalias !22
  %58 = getelementptr inbounds i8, i8* %56, i64 64
  %59 = getelementptr inbounds i8, i8* %56, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #12, !noalias !22
  %60 = bitcast i8* %59 to i8**
  store i8* %58, i8** %60, align 8, !noalias !22
  %61 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast i8* %56 to %"class.std::__1::__tree_node"*
  %64 = bitcast i8* %56 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds i8, i8* %56, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #12
  %66 = bitcast i8* %65 to i64*
  store i64 %62, i64* %66, align 8
  %67 = bitcast %"class.std::__1::__tree_node_base"** %51 to i8**
  store i8* %56, i8** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %14, i64 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %55
  %74 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %75 = inttoptr i64 %13 to i64*
  store i64 %74, i64* %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  br label %77

77:                                               ; preds = %73, %55
  %78 = phi %"class.std::__1::__tree_node_base"* [ %64, %55 ], [ %76, %73 ]
  %79 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"* %78) #12
  %81 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  br label %84

84:                                               ; preds = %46, %77
  %85 = phi %"class.std::__1::__tree_node"* [ %63, %77 ], [ %53, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %85, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to %"class.std::__1::__tree_node.580"**
  %88 = load %"class.std::__1::__tree_node.580"*, %"class.std::__1::__tree_node.580"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node.580"* %88, null
  br i1 %89, label %109, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 3
  %92 = load %class.Profile*, %class.Profile** %91, align 8
  br label %93

93:                                               ; preds = %105, %90
  %94 = phi %"class.std::__1::__tree_node.580"* [ %88, %90 ], [ %107, %105 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %94, i64 0, i32 1
  %96 = load %class.Profile*, %class.Profile** %95, align 8
  %97 = icmp ult %class.Profile* %92, %96
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = bitcast %"class.std::__1::__tree_node.580"* %94 to %"class.std::__1::__tree_node.580"**
  br label %105

100:                                              ; preds = %93
  %101 = icmp ult %class.Profile* %96, %92
  br i1 %101, label %102, label %109

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %94, i64 0, i32 0, i32 1
  %104 = bitcast %"class.std::__1::__tree_node_base"** %103 to %"class.std::__1::__tree_node.580"**
  br label %105

105:                                              ; preds = %102, %98
  %106 = phi %"class.std::__1::__tree_node.580"** [ %99, %98 ], [ %104, %102 ]
  %107 = load %"class.std::__1::__tree_node.580"*, %"class.std::__1::__tree_node.580"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node.580"* %107, null
  br i1 %108, label %109, label %93

109:                                              ; preds = %100, %105, %84
  %110 = phi i1 [ true, %84 ], [ true, %105 ], [ false, %100 ]
  %111 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %109, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  ret i1 %110
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK10extensions25SettingsApiBubbleDelegate6GetKeyEv(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 3
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN10extensions25SettingsApiBubbleDelegate25ClearProfileSetForTestingEv, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  ret i8* %8

9:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegate7OnShownERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly, %"class.std::__1::vector.492"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0) acquire, align 8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0)) #12
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE to i8*)) #12
  br label %12

10:                                               ; preds = %7
  %11 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0) acquire, align 8
  br label %12

12:                                               ; preds = %2, %9, %10
  %13 = phi i64 [ %5, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i64), %9 ], [ %11, %10 ]
  %14 = inttoptr i64 %13 to %"class.std::__1::map.537"*
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 3
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN10extensions25SettingsApiBubbleDelegate25ClearProfileSetForTestingEv, i64 0, i64 %20
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %12, %19
  %24 = phi i8* [ %22, %19 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %12 ]
  %25 = tail call i64 @strlen(i8* nonnull %24) #12
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #14
  unreachable

29:                                               ; preds = %23
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %39, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %25, 16
  %33 = and i64 %32, -16
  %34 = tail call i8* @_Znwm(i64 %33) #13
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %35, align 8
  %36 = or i64 %33, -9223372036854775808
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %38, align 8
  br label %44

39:                                               ; preds = %29
  %40 = trunc i64 %25 to i8
  %41 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 %40, i8* %42, align 1
  %43 = icmp eq i64 %25, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %39, %31
  %45 = phi i8* [ %34, %31 ], [ %15, %39 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 %24, i64 %25, i1 false) #12
  br label %46

46:                                               ; preds = %39, %44
  %47 = phi i8* [ %15, %39 ], [ %45, %44 ]
  %48 = getelementptr inbounds i8, i8* %47, i64 %25
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %14, i64 0, i32 0
  %50 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %51 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree.538"* %49, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %52 = bitcast %"class.std::__1::__tree_node_base"** %51 to %"class.std::__1::__tree_node"**
  %53 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node"* %53, null
  br i1 %54, label %55, label %84

55:                                               ; preds = %46
  %56 = call i8* @_Znwm(i64 80) #13, !noalias !25
  %57 = getelementptr inbounds i8, i8* %56, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %15, i64 24, i1 false) #12, !noalias !25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #12, !noalias !25
  %58 = getelementptr inbounds i8, i8* %56, i64 64
  %59 = getelementptr inbounds i8, i8* %56, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #12, !noalias !25
  %60 = bitcast i8* %59 to i8**
  store i8* %58, i8** %60, align 8, !noalias !25
  %61 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast i8* %56 to %"class.std::__1::__tree_node"*
  %64 = bitcast i8* %56 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds i8, i8* %56, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #12
  %66 = bitcast i8* %65 to i64*
  store i64 %62, i64* %66, align 8
  %67 = bitcast %"class.std::__1::__tree_node_base"** %51 to i8**
  store i8* %56, i8** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %14, i64 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %55
  %74 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %75 = inttoptr i64 %13 to i64*
  store i64 %74, i64* %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  br label %77

77:                                               ; preds = %73, %55
  %78 = phi %"class.std::__1::__tree_node_base"* [ %64, %55 ], [ %76, %73 ]
  %79 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"* %78) #12
  %81 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  br label %84

84:                                               ; preds = %46, %77
  %85 = phi %"class.std::__1::__tree_node"* [ %63, %77 ], [ %53, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %85, i64 0, i32 1, i32 0, i32 1
  %87 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 3
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %85, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.580"**
  %90 = load %"class.std::__1::__tree_node.580"*, %"class.std::__1::__tree_node.580"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node.580"* %90, null
  br i1 %91, label %121, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %85, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %class.Profile*, %class.Profile** %87, align 8
  br label %95

95:                                               ; preds = %117, %92
  %96 = phi %"class.std::__1::__tree_node.580"* [ %120, %117 ], [ %90, %92 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %119, %117 ], [ %93, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %96, i64 0, i32 1
  %99 = load %class.Profile*, %class.Profile** %98, align 8
  %100 = icmp ult %class.Profile* %94, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %96, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %117

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %96, i64 0, i32 0, i32 0
  br label %123

107:                                              ; preds = %95
  %108 = icmp ult %class.Profile* %99, %94
  br i1 %108, label %109, label %115

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %96, i64 0, i32 0, i32 1
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, null
  br i1 %112, label %113, label %117

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %96, i64 0, i32 0, i32 0
  br label %123

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %96, i64 0, i32 0, i32 0
  br label %123

117:                                              ; preds = %109, %101
  %118 = phi %"class.std::__1::__tree_node_base"* [ %103, %101 ], [ %111, %109 ]
  %119 = phi %"class.std::__1::__tree_node_base"** [ %102, %101 ], [ %110, %109 ]
  %120 = bitcast %"class.std::__1::__tree_node_base"* %118 to %"class.std::__1::__tree_node.580"*
  br label %95

121:                                              ; preds = %84
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  br label %123

123:                                              ; preds = %121, %115, %113, %105
  %124 = phi %"class.std::__1::__tree_end_node"* [ %88, %121 ], [ %106, %105 ], [ %114, %113 ], [ %116, %115 ]
  %125 = phi %"class.std::__1::__tree_node_base"** [ %122, %121 ], [ %102, %105 ], [ %110, %113 ], [ %97, %115 ]
  %126 = bitcast %"class.std::__1::__tree_node_base"** %125 to %"class.std::__1::__tree_node.580"**
  %127 = load %"class.std::__1::__tree_node.580"*, %"class.std::__1::__tree_node.580"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node.580"* %127, null
  br i1 %128, label %129, label %155

129:                                              ; preds = %123
  %130 = call i8* @_Znwm(i64 40) #13, !noalias !28
  %131 = getelementptr inbounds i8, i8* %130, i64 32
  %132 = bitcast %class.Profile** %87 to i64*
  %133 = load i64, i64* %132, align 8, !noalias !28
  %134 = bitcast i8* %131 to i64*
  store i64 %133, i64* %134, align 8, !noalias !28
  %135 = bitcast i8* %130 to %"class.std::__1::__tree_node_base"*
  %136 = getelementptr inbounds i8, i8* %130, i64 16
  %137 = bitcast i8* %136 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %124, %"class.std::__1::__tree_end_node"** %137, align 8
  %138 = bitcast %"class.std::__1::__tree_node_base"** %125 to i8**
  store i8* %130, i8** %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::set.546", %"class.std::__1::set.546"* %86, i64 0, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %148, label %144

144:                                              ; preds = %129
  %145 = ptrtoint %"class.std::__1::__tree_node_base"* %142 to i64
  %146 = bitcast %"class.std::__1::set.546"* %86 to i64*
  store i64 %145, i64* %146, align 8
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  br label %148

148:                                              ; preds = %144, %129
  %149 = phi %"class.std::__1::__tree_node_base"* [ %135, %129 ], [ %147, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %85, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %151, %"class.std::__1::__tree_node_base"* %149) #12
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %85, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %152, align 8
  br label %155

155:                                              ; preds = %123, %148
  %156 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %155, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegate8OnActionEv(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0)) #12
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE to i8*)) #12
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %1, %8, %9
  %12 = phi i64 [ %4, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.std::__1::map.537"*
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %16, 3
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN10extensions25SettingsApiBubbleDelegate25ClearProfileSetForTestingEv, i64 0, i64 %19
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %11, %18
  %23 = phi i8* [ %21, %18 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %11 ]
  %24 = tail call i64 @strlen(i8* nonnull %23) #12
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #14
  unreachable

28:                                               ; preds = %22
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = add nuw i64 %24, 16
  %32 = and i64 %31, -16
  %33 = tail call i8* @_Znwm(i64 %32) #13
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = or i64 %32, -9223372036854775808
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %37, align 8
  br label %43

38:                                               ; preds = %28
  %39 = trunc i64 %24 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1
  %42 = icmp eq i64 %24, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38, %30
  %44 = phi i8* [ %33, %30 ], [ %14, %38 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* align 1 %23, i64 %24, i1 false) #12
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi i8* [ %14, %38 ], [ %44, %43 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %24
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %13, i64 0, i32 0
  %49 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  %50 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree.538"* %48, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %54, label %83

54:                                               ; preds = %45
  %55 = call i8* @_Znwm(i64 80) #13, !noalias !31
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %14, i64 24, i1 false) #12, !noalias !31
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12, !noalias !31
  %57 = getelementptr inbounds i8, i8* %55, i64 64
  %58 = getelementptr inbounds i8, i8* %55, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #12, !noalias !31
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8, !noalias !31
  %60 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast i8* %55 to %"class.std::__1::__tree_node"*
  %63 = bitcast i8* %55 to %"class.std::__1::__tree_node_base"*
  %64 = getelementptr inbounds i8, i8* %55, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #12
  %65 = bitcast i8* %64 to i64*
  store i64 %61, i64* %65, align 8
  %66 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8**
  store i8* %55, i8** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %13, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %54
  %73 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  %74 = inttoptr i64 %12 to i64*
  store i64 %73, i64* %74, align 8
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br label %76

76:                                               ; preds = %72, %54
  %77 = phi %"class.std::__1::__tree_node_base"* [ %63, %54 ], [ %75, %72 ]
  %78 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %79, %"class.std::__1::__tree_node_base"* %77) #12
  %80 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  br label %83

83:                                               ; preds = %45, %76
  %84 = phi %"class.std::__1::__tree_node"* [ %62, %76 ], [ %52, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::set.546", %"class.std::__1::set.546"* %85, i64 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"class.std::__1::__tree_node.580"**
  %89 = load %"class.std::__1::__tree_node.580"*, %"class.std::__1::__tree_node.580"** %88, align 8
  call void @_ZNSt3__16__treeIP7ProfileNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.547"* %86, %"class.std::__1::__tree_node.580"* %89) #12
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::set.546", %"class.std::__1::set.546"* %85, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %87, %"class.std::__1::__tree_end_node"** %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %92, align 8
  %93 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #13
  br label %100

100:                                              ; preds = %83, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegate25ClearProfileSetForTestingEv(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0)) #12
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE to i8*)) #12
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %1, %8, %9
  %12 = phi i64 [ %4, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_120g_settings_api_shownE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.std::__1::map.537"*
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %16, 3
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN10extensions25SettingsApiBubbleDelegate25ClearProfileSetForTestingEv, i64 0, i64 %19
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %11, %18
  %23 = phi i8* [ %21, %18 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %11 ]
  %24 = tail call i64 @strlen(i8* nonnull %23) #12
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #14
  unreachable

28:                                               ; preds = %22
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = add nuw i64 %24, 16
  %32 = and i64 %31, -16
  %33 = tail call i8* @_Znwm(i64 %32) #13
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = or i64 %32, -9223372036854775808
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %37, align 8
  br label %43

38:                                               ; preds = %28
  %39 = trunc i64 %24 to i8
  %40 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 %39, i8* %41, align 1
  %42 = icmp eq i64 %24, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38, %30
  %44 = phi i8* [ %33, %30 ], [ %14, %38 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %44, i8* align 1 %23, i64 %24, i1 false) #12
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi i8* [ %14, %38 ], [ %44, %43 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %24
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %13, i64 0, i32 0
  %49 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  %50 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree.538"* %48, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %54, label %83

54:                                               ; preds = %45
  %55 = call i8* @_Znwm(i64 80) #13, !noalias !34
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %14, i64 24, i1 false) #12, !noalias !34
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12, !noalias !34
  %57 = getelementptr inbounds i8, i8* %55, i64 64
  %58 = getelementptr inbounds i8, i8* %55, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #12, !noalias !34
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8, !noalias !34
  %60 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast i8* %55 to %"class.std::__1::__tree_node"*
  %63 = bitcast i8* %55 to %"class.std::__1::__tree_node_base"*
  %64 = getelementptr inbounds i8, i8* %55, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #12
  %65 = bitcast i8* %64 to i64*
  store i64 %61, i64* %65, align 8
  %66 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8**
  store i8* %55, i8** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %13, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %54
  %73 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  %74 = inttoptr i64 %12 to i64*
  store i64 %73, i64* %74, align 8
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br label %76

76:                                               ; preds = %72, %54
  %77 = phi %"class.std::__1::__tree_node_base"* [ %63, %54 ], [ %75, %72 ]
  %78 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %79, %"class.std::__1::__tree_node_base"* %77) #12
  %80 = getelementptr inbounds %"class.std::__1::map.537", %"class.std::__1::map.537"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  br label %83

83:                                               ; preds = %45, %76
  %84 = phi %"class.std::__1::__tree_node"* [ %62, %76 ], [ %52, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::set.546", %"class.std::__1::set.546"* %85, i64 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"class.std::__1::__tree_node.580"**
  %89 = load %"class.std::__1::__tree_node.580"*, %"class.std::__1::__tree_node.580"** %88, align 8
  call void @_ZNSt3__16__treeIP7ProfileNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.547"* %86, %"class.std::__1::__tree_node.580"* %89) #12
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::set.546", %"class.std::__1::set.546"* %85, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %87, %"class.std::__1::__tree_end_node"** %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %92, align 8
  %93 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #13
  br label %100

100:                                              ; preds = %83, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10extensions25SettingsApiBubbleDelegate23ShouldShowExtensionListEv(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10extensions25SettingsApiBubbleDelegate30ShouldLimitToEnabledExtensionsEv(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegate17LogExtensionCountEm(%"class.extensions::SettingsApiBubbleDelegate"* nocapture, i64) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionE(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SettingsApiBubbleDelegate", %"class.extensions::SettingsApiBubbleDelegate"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %44 [
    i32 0, label %5
    i32 2, label %18
    i32 1, label %31
  ]

5:                                                ; preds = %2
  %6 = load atomic i64, i64* @_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %7 = inttoptr i64 %6 to %"class.base::HistogramBase"*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #12
  %11 = ptrtoint %"class.base::HistogramBase"* %10 to i64
  store atomic i64 %11, i64* @_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi %"class.base::HistogramBase"* [ %7, %5 ], [ %10, %9 ]
  %14 = bitcast %"class.base::HistogramBase"* %13 to void (%"class.base::HistogramBase"*, i32)***
  %15 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %15, i64 6
  %17 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %16, align 8
  tail call void %17(%"class.base::HistogramBase"* %13, i32 %1) #12
  br label %44

18:                                               ; preds = %2
  %19 = load atomic i64, i64* @_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %20 = inttoptr i64 %19 to %"class.base::HistogramBase"*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #12
  %24 = ptrtoint %"class.base::HistogramBase"* %23 to i64
  store atomic i64 %24, i64* @_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi %"class.base::HistogramBase"* [ %20, %18 ], [ %23, %22 ]
  %27 = bitcast %"class.base::HistogramBase"* %26 to void (%"class.base::HistogramBase"*, i32)***
  %28 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %28, i64 6
  %30 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %29, align 8
  tail call void %30(%"class.base::HistogramBase"* %26, i32 %1) #12
  br label %44

31:                                               ; preds = %2
  %32 = load atomic i64, i64* @_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %33 = inttoptr i64 %32 to %"class.base::HistogramBase"*
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #12
  %37 = ptrtoint %"class.base::HistogramBase"* %36 to i64
  store atomic i64 %37, i64* @_ZZN10extensions25SettingsApiBubbleDelegate9LogActionENS_32ExtensionMessageBubbleController12BubbleActionEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %38

38:                                               ; preds = %31, %35
  %39 = phi %"class.base::HistogramBase"* [ %33, %31 ], [ %36, %35 ]
  %40 = bitcast %"class.base::HistogramBase"* %39 to void (%"class.base::HistogramBase"*, i32)***
  %41 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %41, i64 6
  %43 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %42, align 8
  tail call void %43(%"class.base::HistogramBase"* %39, i32 %1) #12
  br label %44

44:                                               ; preds = %2, %38, %25, %12
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN10extensions25SettingsApiBubbleDelegate23SupportsPolicyIndicatorEv(%"class.extensions::SettingsApiBubbleDelegate"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

declare void @_ZNK10extensions32ExtensionMessageBubbleController8Delegate17GetLearnMoreLabelEv(%"class.std::__1::basic_string.499"* sret, %"class.extensions::ExtensionMessageBubbleController::Delegate"*) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.499"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.499"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.499"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.499"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !37
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !37
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !40, !noalias !37
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !40, !noalias !37
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !37
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !37
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !40, !noalias !37
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !40, !noalias !37
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !37
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !37
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !40, !noalias !37
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !40, !noalias !37
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !37
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !37
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !40, !noalias !37
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !40, !noalias !37
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !42

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !37
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !37
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !40, !noalias !37
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !40, !noalias !37
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !43

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !44

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !45

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !46

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !47

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !48

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !50
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !50
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !53, !noalias !50
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !53, !noalias !50
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !50
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !50
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !53, !noalias !50
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !53, !noalias !50
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !50
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !50
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !53, !noalias !50
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !53, !noalias !50
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !50
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !50
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !53, !noalias !50
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !53, !noalias !50
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !55

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !50
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !50
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !53, !noalias !50
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !53, !noalias !50
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !56

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !57

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !58

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.499"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.499", %"class.std::__1::basic_string.499"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree.538"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.538", %"class.std::__1::__tree.538"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.538", %"class.std::__1::__tree.538"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !59
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !59
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !59
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIP7ProfileNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.547"*, %"class.std::__1::__tree_node.580"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.580"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.580"* %1 to %"class.std::__1::__tree_node.580"**
  %6 = load %"class.std::__1::__tree_node.580"*, %"class.std::__1::__tree_node.580"** %5, align 8
  tail call void @_ZNSt3__16__treeIP7ProfileNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.547"* %0, %"class.std::__1::__tree_node.580"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.580", %"class.std::__1::__tree_node.580"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.580"**
  %9 = load %"class.std::__1::__tree_node.580"*, %"class.std::__1::__tree_node.580"** %8, align 8
  tail call void @_ZNSt3__16__treeIP7ProfileNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.547"* %0, %"class.std::__1::__tree_node.580"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.580"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISW_EEEEEEDpOT_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISW_EEEEEEDpOT_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISW_EEEEEEDpOT_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISW_EEEEEEDpOT_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__16__treeIP7ProfileNS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__16__treeIP7ProfileNS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISW_EEEEEEDpOT_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISW_EEEEEEDpOT_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISW_EEEEEEDpOT_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setIP7ProfileNS_4lessISA_EENS5_ISA_EEEEEENS_19__map_value_compareIS7_SF_NSB_IS7_EELb1EEENS5_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINS5_ISW_EEEEEEDpOT_"}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !8}
!43 = distinct !{!43, !10}
!44 = distinct !{!44, !10}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !49, !8}
!49 = !{!"llvm.loop.unroll.runtime.disable"}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !8}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !8}
!59 = !{i8 0, i8 2}
