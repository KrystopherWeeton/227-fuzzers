; ModuleID = 'gen/third_party/blink/public/mojom/compute_pressure/compute_pressure.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/compute_pressure/compute_pressure.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter" = type { %"class.blink::mojom::blink::ComputePressureObserver"* }
%"class.blink::mojom::blink::ComputePressureObserver" = type { i32 (...)** }
%"class.blink::mojom::blink::ComputePressureHostAsyncWaiter" = type { %"class.blink::mojom::blink::ComputePressureHost"* }
%"class.blink::mojom::blink::ComputePressureHost" = type { i32 (...)** }
%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting" = type { %"class.blink::mojom::blink::ComputePressureObserver" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::ComputePressureState", i32, [4 x i8] }>
%"class.blink::mojom::blink::ComputePressureState" = type { double, double }
%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting" = type { %"class.blink::mojom::blink::ComputePressureHost" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::ComputePressureQuantization"* }
%"class.blink::mojom::blink::ComputePressureQuantization" = type { %"class.WTF::Vector", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.12, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.5", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.12 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13" }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.15", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink5mojom5blink23ComputePressureObserverD2Ev = comdat any

$_ZN5blink5mojom5blink44ComputePressureObserverInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink19ComputePressureHostD2Ev = comdat any

$_ZN5blink5mojom5blink40ComputePressureHostInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [12 x i8] c"AddObserver\00", align 1
@.str.1 = private unnamed_addr constant [95 x i8] c"gen/third_party/blink/public/mojom/compute_pressure/compute_pressure.mojom-blink-test-utils.cc\00", align 1
@_ZTVN5blink5mojom5blink44ComputePressureObserverInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ComputePressureObserver"*)* @_ZN5blink5mojom5blink23ComputePressureObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*)* @_ZN5blink5mojom5blink44ComputePressureObserverInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*, %"class.mojo::InlinedStructPtr"*)* @_ZN5blink5mojom5blink44ComputePressureObserverInterceptorForTesting8OnUpdateEN4mojo16InlinedStructPtrINS1_20ComputePressureStateEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink40ComputePressureHostInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ComputePressureHost"*)* @_ZN5blink5mojom5blink19ComputePressureHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink40ComputePressureHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink40ComputePressureHostInterceptorForTesting11AddObserverEN4mojo13PendingRemoteINS1_23ComputePressureObserverEEENS3_9StructPtrINS1_27ComputePressureQuantizationEEEN4base12OnceCallbackIFvNS0_21ComputePressureStatusEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink34ComputePressureObserverAsyncWaiterC1EPNS1_23ComputePressureObserverE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter"*, %"class.blink::mojom::blink::ComputePressureObserver"*), void (%"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter"*, %"class.blink::mojom::blink::ComputePressureObserver"*)* @_ZN5blink5mojom5blink34ComputePressureObserverAsyncWaiterC2EPNS1_23ComputePressureObserverE
@_ZN5blink5mojom5blink34ComputePressureObserverAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter"*), void (%"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter"*)* @_ZN5blink5mojom5blink34ComputePressureObserverAsyncWaiterD2Ev
@_ZN5blink5mojom5blink30ComputePressureHostAsyncWaiterC1EPNS1_19ComputePressureHostE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"*, %"class.blink::mojom::blink::ComputePressureHost"*), void (%"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"*, %"class.blink::mojom::blink::ComputePressureHost"*)* @_ZN5blink5mojom5blink30ComputePressureHostAsyncWaiterC2EPNS1_19ComputePressureHostE
@_ZN5blink5mojom5blink30ComputePressureHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"*), void (%"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"*)* @_ZN5blink5mojom5blink30ComputePressureHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink44ComputePressureObserverInterceptorForTesting8OnUpdateEN4mojo16InlinedStructPtrINS1_20ComputePressureStateEEE(%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*, %"class.mojo::InlinedStructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::mojom::blink::ComputePressureState", align 8
  %4 = alloca %"class.mojo::InlinedStructPtr", align 8
  %5 = bitcast %"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ComputePressureObserver"* (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ComputePressureObserver"* (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*)**, %"class.blink::mojom::blink::ComputePressureObserver"* (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ComputePressureObserver"* (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::ComputePressureObserver"* (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*)** %6, i64 3
  %8 = load %"class.blink::mojom::blink::ComputePressureObserver"* (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::ComputePressureObserver"* (%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ComputePressureObserver"* %8(%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 0, i32 0
  call void @_ZN5blink5mojom5blink20ComputePressureStateC1Ev(%"class.blink::mojom::blink::ComputePressureState"* nonnull %10) #10
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 0, i32 1
  store i32 0, i32* %11, align 8
  call void @_ZN5blink5mojom5blink20ComputePressureStateD1Ev(%"class.blink::mojom::blink::ComputePressureState"* nonnull %10) #10
  call void @_ZN5blink5mojom5blink20ComputePressureStateC1Ev(%"class.blink::mojom::blink::ComputePressureState"* nonnull %10) #10
  %12 = bitcast %"class.blink::mojom::blink::ComputePressureState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = bitcast %"class.mojo::InlinedStructPtr"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %13, i64 16, i1 false) #10
  %14 = bitcast %"class.mojo::InlinedStructPtr"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 16, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %12, i64 16, i1 false) #10
  call void @_ZN5blink5mojom5blink20ComputePressureStateD1Ev(%"class.blink::mojom::blink::ComputePressureState"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  %15 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %1, i64 0, i32 1
  %16 = load i32, i32* %11, align 8
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %11, align 8
  store i32 %16, i32* %15, align 4
  %18 = bitcast %"class.blink::mojom::blink::ComputePressureObserver"* %9 to void (%"class.blink::mojom::blink::ComputePressureObserver"*, %"class.mojo::InlinedStructPtr"*)***
  %19 = load void (%"class.blink::mojom::blink::ComputePressureObserver"*, %"class.mojo::InlinedStructPtr"*)**, void (%"class.blink::mojom::blink::ComputePressureObserver"*, %"class.mojo::InlinedStructPtr"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::ComputePressureObserver"*, %"class.mojo::InlinedStructPtr"*)*, void (%"class.blink::mojom::blink::ComputePressureObserver"*, %"class.mojo::InlinedStructPtr"*)** %19, i64 2
  %21 = load void (%"class.blink::mojom::blink::ComputePressureObserver"*, %"class.mojo::InlinedStructPtr"*)*, void (%"class.blink::mojom::blink::ComputePressureObserver"*, %"class.mojo::InlinedStructPtr"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::ComputePressureObserver"* %9, %"class.mojo::InlinedStructPtr"* nonnull %4) #10
  call void @_ZN5blink5mojom5blink20ComputePressureStateD1Ev(%"class.blink::mojom::blink::ComputePressureState"* nonnull %10) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink34ComputePressureObserverAsyncWaiterC2EPNS1_23ComputePressureObserverE(%"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ComputePressureObserver"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter", %"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ComputePressureObserver"* %1, %"class.blink::mojom::blink::ComputePressureObserver"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink34ComputePressureObserverAsyncWaiterD2Ev(%"class.blink::mojom::blink::ComputePressureObserverAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40ComputePressureHostInterceptorForTesting11AddObserverEN4mojo13PendingRemoteINS1_23ComputePressureObserverEEENS3_9StructPtrINS1_27ComputePressureQuantizationEEEN4base12OnceCallbackIFvNS0_21ComputePressureStatusEEEE(%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::PendingRemote", align 4
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = bitcast %"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ComputePressureHost"* (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::ComputePressureHost"* (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::ComputePressureHost"* (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ComputePressureHost"* (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ComputePressureHost"* (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*)** %9, i64 3
  %11 = load %"class.blink::mojom::blink::ComputePressureHost"* (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::ComputePressureHost"* (%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::ComputePressureHost"* %11(%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"* %0) #10
  %13 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %5, i64 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %13, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %14) #10
  %15 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = bitcast %"class.blink::mojom::blink::ComputePressureHost"* %12 to void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %24 = load void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %24, i64 2
  %26 = load void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::ComputePressureHost"* %12, %"class.mojo::PendingRemote"* nonnull %5, %"class.mojo::StructPtr"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  %28 = load %"class.blink::mojom::blink::ComputePressureQuantization"*, %"class.blink::mojom::blink::ComputePressureQuantization"** %16, align 8
  store %"class.blink::mojom::blink::ComputePressureQuantization"* null, %"class.blink::mojom::blink::ComputePressureQuantization"** %16, align 8
  %29 = icmp eq %"class.blink::mojom::blink::ComputePressureQuantization"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink27ComputePressureQuantizationD1Ev(%"class.blink::mojom::blink::ComputePressureQuantization"* nonnull %28) #10
  %31 = bitcast %"class.blink::mojom::blink::ComputePressureQuantization"* %28 to i8*
  call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %4, %30
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink30ComputePressureHostAsyncWaiterC2EPNS1_19ComputePressureHostE(%"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ComputePressureHost"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ComputePressureHostAsyncWaiter", %"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ComputePressureHost"* %1, %"class.blink::mojom::blink::ComputePressureHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink30ComputePressureHostAsyncWaiterD2Ev(%"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS1_23ComputePressureObserverEEENS3_9StructPtrINS1_27ComputePressureQuantizationEEEPNS0_21ComputePressureStatusE(%"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"* nocapture readonly, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"* nocapture, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.mojo::PendingRemote", align 4
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = ptrtoint i32* %3 to i64
  %11 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %12 = getelementptr inbounds %"class.blink::mojom::blink::ComputePressureHostAsyncWaiter", %"class.blink::mojom::blink::ComputePressureHostAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.blink::mojom::blink::ComputePressureHost"*, %"class.blink::mojom::blink::ComputePressureHost"** %12, align 8
  %14 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %6, i64 0, i32 0
  %15 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %14, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %15) #10
  %16 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %21 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS5_23ComputePressureObserverEEENS7_9StructPtrINS5_27ComputePressureQuantizationEEEPNS4_21ComputePressureStatusEE3$_0JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS4_23ComputePressureObserverEEENS6_9StructPtrINS4_27ComputePressureQuantizationEEEPNS3_21ComputePressureStatusEE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %23 = getelementptr inbounds i8, i8* %21, i64 40
  %24 = bitcast i8* %23 to i64*
  store i64 %20, i64* %24, align 8, !noalias !2
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to i64*
  store i64 %10, i64* %26, align 8, !noalias !2
  %27 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %21, i8** %27, align 8, !alias.scope !2
  %28 = bitcast %"class.blink::mojom::blink::ComputePressureHost"* %13 to void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %29 = load void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %29, i64 2
  %31 = load void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ComputePressureHost"*, %"class.mojo::PendingRemote"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %30, align 8
  call void %31(%"class.blink::mojom::blink::ComputePressureHost"* %13, %"class.mojo::PendingRemote"* nonnull %6, %"class.mojo::StructPtr"* nonnull %7, %"class.base::OnceCallback"* nonnull %8) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  %33 = load %"class.blink::mojom::blink::ComputePressureQuantization"*, %"class.blink::mojom::blink::ComputePressureQuantization"** %17, align 8
  store %"class.blink::mojom::blink::ComputePressureQuantization"* null, %"class.blink::mojom::blink::ComputePressureQuantization"** %17, align 8
  %34 = icmp eq %"class.blink::mojom::blink::ComputePressureQuantization"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink27ComputePressureQuantizationD1Ev(%"class.blink::mojom::blink::ComputePressureQuantization"* nonnull %33) #10
  %36 = bitcast %"class.blink::mojom::blink::ComputePressureQuantization"* %33 to i8*
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %4, %35
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %14) #10
  %38 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i64 0, i64 0), i32 64) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink23ComputePressureObserverD2Ev(%"class.blink::mojom::blink::ComputePressureObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink44ComputePressureObserverInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ComputePressureObserverInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink19ComputePressureHostD2Ev(%"class.blink::mojom::blink::ComputePressureHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink40ComputePressureHostInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ComputePressureHostInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20ComputePressureStateD1Ev(%"class.blink::mojom::blink::ComputePressureState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink27ComputePressureQuantizationD1Ev(%"class.blink::mojom::blink::ComputePressureQuantization"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN5blink5mojom5blink20ComputePressureStateC1Ev(%"class.blink::mojom::blink::ComputePressureState"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS5_23ComputePressureObserverEEENS7_9StructPtrINS5_27ComputePressureQuantizationEEEPNS4_21ComputePressureStatusEE3$_0JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS4_23ComputePressureObserverEEENS6_9StructPtrINS4_27ComputePressureQuantizationEEEPNS3_21ComputePressureStatusEE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS5_23ComputePressureObserverEEENS7_9StructPtrINS5_27ComputePressureQuantizationEEEPNS4_21ComputePressureStatusEE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS5_23ComputePressureObserverEEENS7_9StructPtrINS5_27ComputePressureQuantizationEEEPNS4_21ComputePressureStatusEE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS3_23ComputePressureObserverEEENS5_9StructPtrINS3_27ComputePressureQuantizationEEEPNS2_21ComputePressureStatusEE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ComputePressureHostAsyncWaiter11AddObserverEN4mojo13PendingRemoteINS3_23ComputePressureObserverEEENS5_9StructPtrINS3_27ComputePressureQuantizationEEEPNS2_21ComputePressureStatusEE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
