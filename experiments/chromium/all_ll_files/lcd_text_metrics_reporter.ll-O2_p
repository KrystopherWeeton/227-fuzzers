; ModuleID = '../../cc/metrics/lcd_text_metrics_reporter.cc'
source_filename = "../../cc/metrics/lcd_text_metrics_reporter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [40 x i8] }
%"class.base::LazyInstance.1344" = type { i64, [40 x i8] }
%"class.cc::LCDTextMetricsReporter" = type { %"class.cc::LayerTreeHostImpl"*, %"class.base::TimeTicks", %"class.base::TimeTicks", i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.108", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.gfx::Vector2dF", %"class.std::__1::vector.662", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.953", %"class.std::__1::unique_ptr.965", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.1018", %"class.std::__1::unique_ptr.1025", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.1031", %"class.std::__1::unique_ptr.1037", %"class.std::__1::set.1043", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.1053", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.1092", %"class.base::RepeatingCallback.887", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.1098", i8, i8, i8, i32, %"class.std::__1::unique_ptr.1108", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.1114", %"class.std::__1::vector.1120", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.1140", %"class.std::__1::unique_ptr.1152", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.642", %"class.absl::optional.1158", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.88", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.1226", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.180", %"class.base::WeakPtrFactory.1333" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.38", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.48, %class.scoped_refptr.49, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.50", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.48 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.49 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.57", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.57" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.58" }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.88", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.96" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.78"*, i64 }
%"class.std::__1::unique_ptr.78" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.96" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.103" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.103" = type { %"class.base::internal::VectorBuffer.104", i64, i64 }
%"class.base::internal::VectorBuffer.104" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection", %class.scoped_refptr.286, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.292, %"class.std::__1::vector.296", %"class.std::__1::unordered_map.345", %"class.base::internal::flat_tree.369", %"class.std::__1::unordered_map.377", %"class.std::__1::unordered_map.403", %"class.std::__1::unordered_map.427", %"class.std::__1::unordered_map.427", %"class.base::flat_map.451", %"class.std::__1::vector.461", %"class.base::internal::flat_tree.641", %"class.base::internal::flat_tree.642", %"class.std::__1::vector.655", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.662", %"class.std::__1::vector.662", %"class.std::__1::vector.670", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.677, %class.scoped_refptr.677, %"class.std::__1::unique_ptr.682", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.688", %"class.std::__1::vector.695", %"class.std::__1::unique_ptr.703", %"class.std::__1::vector.709" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.117", %"class.base::flat_map.117", %"class.base::flat_map.117", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.117" = type { %"class.base::internal::flat_tree.118" }
%"class.base::internal::flat_tree.118" = type { %"class.std::__1::vector.119" }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.std::__1::pair.121"*, %"struct.std::__1::pair.121"*, %"class.std::__1::__compressed_pair.122" }
%"struct.std::__1::pair.121" = type opaque
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::pair.121"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.134", %"class.std::__1::vector.141", %"class.std::__1::vector.148" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.127", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.129" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { i32*, i32*, %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { i32* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.143" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.150" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.155", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.215" }
%"class.cc::PropertyTree.155" = type { i32 (...)**, %"class.std::__1::vector.156", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.187" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.174", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.158" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.169" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.162", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.160, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.160 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.161 }
%union.anon.161 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, %union.anon.178 }
%union.anon.178 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.179" }
%"class.base::internal::flat_tree.179" = type { %"class.std::__1::vector.180" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.192" }
%"class.std::__1::__hash_table.192" = type <{ %"class.std::__1::unique_ptr.193", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.211", [4 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195", %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::__hash_node_base.196"** }
%"struct.std::__1::__hash_node_base.196" = type { %"struct.std::__1::__hash_node_base.196"* }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.std::__1::__bucket_list_deallocator.198" }
%"class.std::__1::__bucket_list_deallocator.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::__hash_node_base.196" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.std::__1::unique_ptr.217"*, %"class.std::__1::unique_ptr.217"*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.220" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.std::__1::unique_ptr.217"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.234" }
%"class.cc::PropertyTree.234" = type { i32 (...)**, %"class.std::__1::vector.235", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.237" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.242", i32, %"class.base::flat_map.250", %"class.base::flat_map.260", %"class.base::WeakPtr" }
%"class.cc::PropertyTree.242" = type { i32 (...)**, %"class.std::__1::vector.243", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.245" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.250" = type { %"class.base::internal::flat_tree.251" }
%"class.base::internal::flat_tree.251" = type { %"class.std::__1::vector.252" }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"struct.std::__1::pair.254"*, %"struct.std::__1::pair.254"*, %"class.std::__1::__compressed_pair.255" }
%"struct.std::__1::pair.254" = type opaque
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::pair.254"* }
%"class.base::flat_map.260" = type { %"class.base::internal::flat_tree.261" }
%"class.base::internal::flat_tree.261" = type { %"class.std::__1::vector.262" }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { %"struct.std::__1::pair.264"*, %"struct.std::__1::pair.264"*, %"class.std::__1::__compressed_pair.265" }
%"struct.std::__1::pair.264" = type opaque
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::pair.264"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.270 }
%class.scoped_refptr.270 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.271", %"class.std::__1::vector.278" }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.273" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"class.std::__1::vector.280"*, %"class.std::__1::vector.280"*, %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::vector.280" = type opaque
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::vector.280"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.286 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.287" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, %union.anon.291 }
%union.anon.291 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%class.scoped_refptr.292 = type { %"class.cc::SyncedProperty.293"* }
%"class.cc::SyncedProperty.293" = type <{ %"class.base::RefCounted.294", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.std::__1::unique_ptr.298"*, %"class.std::__1::unique_ptr.298"*, %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.331", i8, [7 x i8] }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.301" }
%"class.base::flat_map.301" = type { %"class.base::internal::flat_tree.302" }
%"class.base::internal::flat_tree.302" = type { %"class.std::__1::vector.303" }
%"class.std::__1::vector.303" = type { %"class.std::__1::__vector_base.304" }
%"class.std::__1::__vector_base.304" = type { %"struct.std::__1::pair.305"*, %"struct.std::__1::pair.305"*, %"class.std::__1::__compressed_pair.306" }
%"struct.std::__1::pair.305" = type opaque
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::pair.305"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.314", %"class.std::__1::vector.314", %"class.std::__1::vector.321" }
%"class.std::__1::vector.314" = type { %"class.std::__1::__vector_base.315" }
%"class.std::__1::__vector_base.315" = type { i8**, i8**, %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { i8** }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.323" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.cc::Region"* }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.std::__1::unique_ptr.298"* }
%"class.std::__1::unordered_map.345" = type { %"class.std::__1::__hash_table.346" }
%"class.std::__1::__hash_table.346" = type <{ %"class.std::__1::unique_ptr.347", %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.362", %"class.std::__1::__compressed_pair.365", [4 x i8] }>
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349", %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::__hash_node_base.350"** }
%"struct.std::__1::__hash_node_base.350" = type { %"struct.std::__1::__hash_node_base.350"* }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.std::__1::__bucket_list_deallocator.352" }
%"class.std::__1::__bucket_list_deallocator.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"struct.std::__1::__hash_node_base.350" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.base::internal::flat_tree.369" = type { %"class.std::__1::vector.370" }
%"class.std::__1::vector.370" = type { %"class.std::__1::__vector_base.371" }
%"class.std::__1::__vector_base.371" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.377" = type { %"class.std::__1::__hash_table.378" }
%"class.std::__1::__hash_table.378" = type <{ %"class.std::__1::unique_ptr.379", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.394", %"class.std::__1::__compressed_pair.397", [4 x i8] }>
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381", %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.std::__1::__hash_node_base.382"** }
%"struct.std::__1::__hash_node_base.382" = type { %"struct.std::__1::__hash_node_base.382"* }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.std::__1::__bucket_list_deallocator.384" }
%"class.std::__1::__bucket_list_deallocator.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"struct.std::__1::__hash_node_base.382" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unordered_map.427" = type { %"class.std::__1::__hash_table.428" }
%"class.std::__1::__hash_table.428" = type <{ %"class.std::__1::unique_ptr.429", %"class.std::__1::__compressed_pair.439", %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.447", [4 x i8] }>
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431", %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"struct.std::__1::__hash_node_base.432"** }
%"struct.std::__1::__hash_node_base.432" = type { %"struct.std::__1::__hash_node_base.432"* }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.std::__1::__bucket_list_deallocator.434" }
%"class.std::__1::__bucket_list_deallocator.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.432" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.base::flat_map.451" = type { %"class.base::internal::flat_tree.452" }
%"class.base::internal::flat_tree.452" = type { %"class.std::__1::vector.453" }
%"class.std::__1::vector.453" = type { %"class.std::__1::__vector_base.454" }
%"class.std::__1::__vector_base.454" = type { %"struct.std::__1::pair.455"*, %"struct.std::__1::pair.455"*, %"class.std::__1::__compressed_pair.456" }
%"struct.std::__1::pair.455" = type opaque
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::pair.455"* }
%"class.std::__1::vector.461" = type { %"class.std::__1::__vector_base.462" }
%"class.std::__1::__vector_base.462" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.636" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.463", %class.scoped_refptr.471, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.614", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.619", %"class.base::flat_map.626", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.331", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.466", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.471, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.466" = type { %"class.std::__1::__vector_base.467" }
%"class.std::__1::__vector_base.467" = type { %"class.std::__1::unique_ptr.468"*, %"class.std::__1::unique_ptr.468"*, %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.471, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.568", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.568" = type { %"class.std::__1::__hash_table.569" }
%"class.std::__1::__hash_table.569" = type <{ %"class.std::__1::unique_ptr.570", %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.585", %"class.std::__1::__compressed_pair.588", [4 x i8] }>
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572", %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"struct.std::__1::__hash_node_base.573"** }
%"struct.std::__1::__hash_node_base.573" = type { %"struct.std::__1::__hash_node_base.573"* }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.std::__1::__bucket_list_deallocator.575" }
%"class.std::__1::__bucket_list_deallocator.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"struct.std::__1::__hash_node_base.573" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.std::__1::unique_ptr.468"* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.607" }
%"struct.std::__1::__split_buffer" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.602" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.471 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.472", [4 x i8], i64, %class.scoped_refptr.473, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.472" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.473 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.474", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.162", %"class.std::__1::vector.554", %"class.std::__1::vector.561", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.474" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.475", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.482", %"class.std::__1::vector.492", %"class.base::flat_map.506", i8, i8, [6 x i8], %"class.cc::RTree.516", %"class.std::__1::vector.546" }
%"class.base::flat_map.482" = type { %"class.base::internal::flat_tree.483" }
%"class.base::internal::flat_tree.483" = type { %"class.std::__1::vector.484" }
%"class.std::__1::vector.484" = type { %"class.std::__1::__vector_base.485" }
%"class.std::__1::__vector_base.485" = type { %"struct.std::__1::pair.486"*, %"struct.std::__1::pair.486"*, %"class.std::__1::__compressed_pair.487" }
%"struct.std::__1::pair.486" = type opaque
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"struct.std::__1::pair.486"* }
%"class.std::__1::vector.492" = type { %"class.std::__1::__vector_base.493" }
%"class.std::__1::__vector_base.493" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.501" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.494", i32, i32 }
%"class.std::__1::vector.494" = type { %"class.std::__1::__vector_base.495" }
%"class.std::__1::__vector_base.495" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.496" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.506" = type { %"class.base::internal::flat_tree.507" }
%"class.base::internal::flat_tree.507" = type { %"class.std::__1::vector.508" }
%"class.std::__1::vector.508" = type { %"class.std::__1::__vector_base.509" }
%"class.std::__1::__vector_base.509" = type { %"struct.std::__1::pair.510"*, %"struct.std::__1::pair.510"*, %"class.std::__1::__compressed_pair.511" }
%"struct.std::__1::pair.510" = type { i32, i32 }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"struct.std::__1::pair.510"* }
%"class.cc::RTree.516" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.538", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.528", %"class.absl::optional.533", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.517, %class.sk_sp.519, %"class.gfx::Rect", i32, %class.sk_sp.524, %class.sk_sp.525, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.517, %class.scoped_refptr.526 }
%class.sk_sp.519 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.524 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.494" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.518, i32, i32 }
%class.sk_sp.518 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.58" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.525 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.517 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.526 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.527", [4 x i8] }>
%"class.base::RefCountedThreadSafe.527" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional.528" = type { %"class.absl::optional_internal::optional_data.529" }
%"class.absl::optional_internal::optional_data.529" = type { %"class.absl::optional_internal::optional_data_base.530" }
%"class.absl::optional_internal::optional_data_base.530" = type { %"class.absl::optional_internal::optional_data_dtor_base.531" }
%"class.absl::optional_internal::optional_data_dtor_base.531" = type { i8, %union.anon.532 }
%union.anon.532 = type { i64 }
%"class.absl::optional.533" = type { %"class.absl::optional_internal::optional_data.534" }
%"class.absl::optional_internal::optional_data.534" = type { %"class.absl::optional_internal::optional_data_base.535" }
%"class.absl::optional_internal::optional_data_base.535" = type { %"class.absl::optional_internal::optional_data_dtor_base.536" }
%"class.absl::optional_internal::optional_data_dtor_base.536" = type { i8, %union.anon.537 }
%union.anon.537 = type { %"class.gfx::ColorSpace" }
%"class.std::__1::vector.538" = type { %"class.std::__1::__vector_base.539" }
%"class.std::__1::__vector_base.539" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.546" = type { %"class.std::__1::__vector_base.547" }
%"class.std::__1::__vector_base.547" = type { %"struct.std::__1::pair.548"*, %"struct.std::__1::pair.548"*, %"class.std::__1::__compressed_pair.549" }
%"struct.std::__1::pair.548" = type opaque
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.std::__1::pair.548"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.520", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { i8* }
%"class.std::__1::vector.554" = type { %"class.std::__1::__vector_base.555" }
%"class.std::__1::__vector_base.555" = type { i64*, i64*, %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { i64* }
%"class.std::__1::vector.561" = type { %"class.std::__1::__vector_base.562" }
%"class.std::__1::__vector_base.562" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.563" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.absl::optional.614" = type { %"class.absl::optional_internal::optional_data.615" }
%"class.absl::optional_internal::optional_data.615" = type { %"class.absl::optional_internal::optional_data_base.616" }
%"class.absl::optional_internal::optional_data_base.616" = type { %"class.absl::optional_internal::optional_data_dtor_base.617" }
%"class.absl::optional_internal::optional_data_dtor_base.617" = type { i8, %union.anon.618 }
%union.anon.618 = type { %"class.gfx::Size" }
%"class.std::__1::vector.619" = type { %"class.std::__1::__vector_base.620" }
%"class.std::__1::__vector_base.620" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.626" = type { %"class.base::internal::flat_tree.627" }
%"class.base::internal::flat_tree.627" = type { %"class.std::__1::vector.628" }
%"class.std::__1::vector.628" = type { %"class.std::__1::__vector_base.629" }
%"class.std::__1::__vector_base.629" = type { %"struct.std::__1::pair.630"*, %"struct.std::__1::pair.630"*, %"class.std::__1::__compressed_pair.631" }
%"struct.std::__1::pair.630" = type opaque
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"struct.std::__1::pair.630"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.641" = type { %"class.std::__1::vector.461" }
%"class.std::__1::vector.655" = type { %"class.std::__1::__vector_base.656" }
%"class.std::__1::__vector_base.656" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.670" = type { %"class.std::__1::__vector_base.671" }
%"class.std::__1::__vector_base.671" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.672" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.677 = type { %"class.cc::SyncedProperty.678"* }
%"class.cc::SyncedProperty.678" = type <{ %"class.base::RefCounted.679", %"class.cc::AdditionGroup.680", %"class.cc::AdditionGroup.680", %"class.cc::AdditionGroup.680", %"class.cc::AdditionGroup.680", %"class.cc::AdditionGroup.680", i8, [3 x i8] }>
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.680" = type { float }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.688" = type { %"class.std::__1::__vector_base.689" }
%"class.std::__1::__vector_base.689" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.690" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.base::OnceCallback"* }
%"class.std::__1::vector.695" = type { %"class.std::__1::__vector_base.696" }
%"class.std::__1::__vector_base.696" = type { %"class.std::__1::unique_ptr.697"*, %"class.std::__1::unique_ptr.697"*, %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.1346" }
%"class.std::__1::__compressed_pair.1346" = type { %"struct.std::__1::__compressed_pair_elem.1347" }
%"struct.std::__1::__compressed_pair_elem.1347" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1348", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1348" = type { %"class.absl::optional_internal::optional_data.1349" }
%"class.absl::optional_internal::optional_data.1349" = type { %"class.absl::optional_internal::optional_data_base.1350" }
%"class.absl::optional_internal::optional_data_base.1350" = type { %"class.absl::optional_internal::optional_data_dtor_base.1351" }
%"class.absl::optional_internal::optional_data_dtor_base.1351" = type { i8, %union.anon.1352 }
%union.anon.1352 = type { i32 }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.std::__1::unique_ptr.697"* }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.709" = type { %"class.std::__1::__vector_base.710" }
%"class.std::__1::__vector_base.710" = type { %"class.std::__1::unique_ptr.711"*, %"class.std::__1::unique_ptr.711"*, %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::unique_ptr.711" = type opaque
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.std::__1::unique_ptr.711"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.std::__1::unique_ptr.664"*, %"class.std::__1::unique_ptr.664"*, %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.1370" }
%"class.std::__1::__compressed_pair.1370" = type { %"struct.std::__1::__compressed_pair_elem.1371" }
%"struct.std::__1::__compressed_pair_elem.1371" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.std::__1::unique_ptr.664"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.720", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.726", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.914", %"class.std::__1::vector.786", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.952", %"class.base::WeakPtrFactory.952" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.726" = type { %"class.std::__1::__hash_table.727" }
%"class.std::__1::__hash_table.727" = type <{ %"class.std::__1::unique_ptr.728", %"class.std::__1::__compressed_pair.738", %"class.std::__1::__compressed_pair.743", %"class.std::__1::__compressed_pair.748", [4 x i8] }>
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730", %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"struct.std::__1::__hash_node_base.731"** }
%"struct.std::__1::__hash_node_base.731" = type { %"struct.std::__1::__hash_node_base.731"* }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.std::__1::__bucket_list_deallocator.733" }
%"class.std::__1::__bucket_list_deallocator.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"struct.std::__1::__hash_node_base.731" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.753, %"class.base::WeakPtr.754", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.755", %"class.base::flat_map.762", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.772", %"class.std::__1::map.772", i8, %"class.std::__1::vector.781", %"class.base::WeakPtrFactory.798" }
%class.scoped_refptr.753 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr.754" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.755" = type { %"class.std::__1::__vector_base.756" }
%"class.std::__1::__vector_base.756" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.762" = type { %"class.base::internal::flat_tree.763" }
%"class.base::internal::flat_tree.763" = type { %"class.std::__1::vector.764" }
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %"struct.std::__1::pair.766"*, %"struct.std::__1::pair.766"*, %"class.std::__1::__compressed_pair.767" }
%"struct.std::__1::pair.766" = type opaque
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"struct.std::__1::pair.766"* }
%"class.std::__1::map.772" = type { %"class.std::__1::__tree.773" }
%"class.std::__1::__tree.773" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.774", %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.781" = type { %"class.std::__1::__vector_base.782" }
%"class.std::__1::__vector_base.782" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.793" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback.783", %class.scoped_refptr.784, i8, [7 x i8] }>
%"class.base::OnceCallback.783" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.91 }
%class.scoped_refptr.91 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.92", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.784 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.786", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.785", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.785" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.798" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.799", i8, %class.scoped_refptr.753, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.809" }
%"class.base::flat_map.799" = type { %"class.base::internal::flat_tree.800" }
%"class.base::internal::flat_tree.800" = type { %"class.std::__1::vector.801" }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"struct.std::__1::pair.803"*, %"struct.std::__1::pair.803"*, %"class.std::__1::__compressed_pair.804" }
%"struct.std::__1::pair.803" = type { i32, %"class.std::__1::unique_ptr.1364" }
%"class.std::__1::unique_ptr.1364" = type { %"class.std::__1::__compressed_pair.1365" }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.1366" }
%"struct.std::__1::__compressed_pair_elem.1366" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"struct.std::__1::pair.803"* }
%"class.base::WeakPtrFactory.809" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.810", %"class.base::internal::flat_tree.810", %"class.std::__1::vector.811", i32, %"class.absl::optional.818", %"class.std::__1::unordered_map.823", %"class.std::__1::unordered_map.847", %"class.base::flat_map.506", %"class.base::WeakPtrFactory.871" }
%"class.base::internal::flat_tree.810" = type { %"class.std::__1::vector.134" }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.813" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.818" = type { %"class.absl::optional_internal::optional_data.819" }
%"class.absl::optional_internal::optional_data.819" = type { %"class.absl::optional_internal::optional_data_base.820" }
%"class.absl::optional_internal::optional_data_base.820" = type { %"class.absl::optional_internal::optional_data_dtor_base.821" }
%"class.absl::optional_internal::optional_data_dtor_base.821" = type { i8, %union.anon.822 }
%union.anon.822 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.823" = type { %"class.std::__1::__hash_table.824" }
%"class.std::__1::__hash_table.824" = type <{ %"class.std::__1::unique_ptr.825", %"class.std::__1::__compressed_pair.835", %"class.std::__1::__compressed_pair.840", %"class.std::__1::__compressed_pair.843", [4 x i8] }>
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827", %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.std::__1::__hash_node_base.828"** }
%"struct.std::__1::__hash_node_base.828" = type { %"struct.std::__1::__hash_node_base.828"* }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.std::__1::__bucket_list_deallocator.830" }
%"class.std::__1::__bucket_list_deallocator.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"struct.std::__1::__hash_node_base.828" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unordered_map.847" = type { %"class.std::__1::__hash_table.848" }
%"class.std::__1::__hash_table.848" = type <{ %"class.std::__1::unique_ptr.849", %"class.std::__1::__compressed_pair.859", %"class.std::__1::__compressed_pair.864", %"class.std::__1::__compressed_pair.867", [4 x i8] }>
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851", %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"struct.std::__1::__hash_node_base.852"** }
%"struct.std::__1::__hash_node_base.852" = type { %"struct.std::__1::__hash_node_base.852"* }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.std::__1::__bucket_list_deallocator.854" }
%"class.std::__1::__bucket_list_deallocator.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"struct.std::__1::__hash_node_base.852" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.base::WeakPtrFactory.871" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.872", %"class.std::__1::vector.880" }
%"class.std::__1::vector.872" = type { %"class.std::__1::__vector_base.873" }
%"class.std::__1::__vector_base.873" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.875" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.874, i16, i16, i32 }
%class.scoped_refptr.874 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.880" = type { %"class.std::__1::__vector_base.881" }
%"class.std::__1::__vector_base.881" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.882" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.887", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.888" }
%"class.base::WeakPtrFactory.888" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.889" }
%"class.std::__1::__hash_table.889" = type <{ %"class.std::__1::unique_ptr.890", %"class.std::__1::__compressed_pair.900", %"class.std::__1::__compressed_pair.905", %"class.std::__1::__compressed_pair.909", [4 x i8] }>
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892", %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"struct.std::__1::__hash_node_base.893"** }
%"struct.std::__1::__hash_node_base.893" = type { %"struct.std::__1::__hash_node_base.893"* }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::__bucket_list_deallocator.895" }
%"class.std::__1::__bucket_list_deallocator.895" = type { %"class.std::__1::__compressed_pair.896" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"struct.std::__1::__hash_node_base.893" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::unordered_map.914" = type { %"class.std::__1::__hash_table.915" }
%"class.std::__1::__hash_table.915" = type <{ %"class.std::__1::unique_ptr.916", %"class.std::__1::__compressed_pair.926", %"class.std::__1::__compressed_pair.931", %"class.std::__1::__compressed_pair.934", [4 x i8] }>
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918", %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"struct.std::__1::__hash_node_base.919"** }
%"struct.std::__1::__hash_node_base.919" = type { %"struct.std::__1::__hash_node_base.919"* }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.std::__1::__bucket_list_deallocator.921" }
%"class.std::__1::__bucket_list_deallocator.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.std::__1::__hash_node_base.919" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %class.scoped_refptr.784*, %class.scoped_refptr.784*, %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %class.scoped_refptr.784* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.938" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.944", %"class.base::WeakPtrFactory.945" }
%"class.base::OnceCallback.944" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.945" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.946, i8, [7 x i8] }>
%class.scoped_refptr.946 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.947", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.947" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.948" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::WeakPtrFactory.952" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.956", %"class.absl::optional.956", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.956" = type { %"class.absl::optional_internal::optional_data.957" }
%"class.absl::optional_internal::optional_data.957" = type { %"class.absl::optional_internal::optional_data_base.958" }
%"class.absl::optional_internal::optional_data_base.958" = type { %"class.absl::optional_internal::optional_data_dtor_base.959" }
%"class.absl::optional_internal::optional_data_dtor_base.959" = type { i8, %union.anon.960 }
%union.anon.960 = type { %"struct.std::__1::pair.961" }
%"struct.std::__1::pair.961" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.984", %"class.absl::optional.984", %"class.absl::optional.984", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.1003, %"class.absl::optional.1004", %"class.std::__1::map.1009" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.971" }
%"class.std::__1::deque.971" = type { %"class.std::__1::__deque_base.972" }
%"class.std::__1::__deque_base.972" = type { %"struct.std::__1::__split_buffer.973", i64, %"class.std::__1::__compressed_pair.980" }
%"struct.std::__1::__split_buffer.973" = type { %"struct.std::__1::pair.974"**, %"struct.std::__1::pair.974"**, %"struct.std::__1::pair.974"**, %"class.std::__1::__compressed_pair.975" }
%"struct.std::__1::pair.974" = type opaque
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"struct.std::__1::pair.974"** }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.984" = type { %"class.absl::optional_internal::optional_data.985" }
%"class.absl::optional_internal::optional_data.985" = type { %"class.absl::optional_internal::optional_data_base.986" }
%"class.absl::optional_internal::optional_data_base.986" = type { %"class.absl::optional_internal::optional_data_dtor_base.987" }
%"class.absl::optional_internal::optional_data_dtor_base.987" = type { i8, %union.anon.988 }
%union.anon.988 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.989", %"class.base::circular_deque.990", %"class.std::__1::map.992", %"class.absl::optional.528" }
%"class.base::RepeatingCallback.989" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.990" = type { %"class.base::internal::VectorBuffer.991", i64, i64 }
%"class.base::internal::VectorBuffer.991" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.992" = type { %"class.std::__1::__tree.993" }
%"class.std::__1::__tree.993" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%struct.anon.1003 = type { double, double }
%"class.absl::optional.1004" = type { %"class.absl::optional_internal::optional_data.1005" }
%"class.absl::optional_internal::optional_data.1005" = type { %"class.absl::optional_internal::optional_data_base.1006" }
%"class.absl::optional_internal::optional_data_base.1006" = type { %"class.absl::optional_internal::optional_data_dtor_base.1007" }
%"class.absl::optional_internal::optional_data_dtor_base.1007" = type { i8, %union.anon.1008 }
%union.anon.1008 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.1009" = type { %"class.std::__1::__tree.1010" }
%"class.std::__1::__tree.1010" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1011", %"class.std::__1::__compressed_pair.1015" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.1021" }
%"class.base::RingBuffer.1021" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.1043" = type { %"class.std::__1::__tree.1044" }
%"class.std::__1::__tree.1044" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1045", %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.1053" = type { %"class.std::__1::__hash_table.1054" }
%"class.std::__1::__hash_table.1054" = type <{ %"class.std::__1::unique_ptr.1055", %"class.std::__1::__compressed_pair.1065", %"class.std::__1::__compressed_pair.1070", %"class.std::__1::__compressed_pair.1073", [4 x i8] }>
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057", %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"struct.std::__1::__hash_node_base.1058"** }
%"struct.std::__1::__hash_node_base.1058" = type { %"struct.std::__1::__hash_node_base.1058"* }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.std::__1::__bucket_list_deallocator.1060" }
%"class.std::__1::__bucket_list_deallocator.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"struct.std::__1::__hash_node_base.1058" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.1077" }
%"class.std::__1::vector.1077" = type { %"class.std::__1::__vector_base.1078" }
%"class.std::__1::__vector_base.1078" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.1084" }
%"class.std::__1::vector.1084" = type { %"class.std::__1::__vector_base.1085" }
%"class.std::__1::__vector_base.1085" = type { %"class.std::__1::unique_ptr.1086"*, %"class.std::__1::unique_ptr.1086"*, %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::unique_ptr.1086" = type opaque
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.std::__1::unique_ptr.1086"* }
%"class.std::__1::unique_ptr.1092" = type { %"class.std::__1::__compressed_pair.1093" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.1094" }
%"struct.std::__1::__compressed_pair_elem.1094" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.887" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.1098" = type { %"class.std::__1::__tree.1099" }
%"class.std::__1::__tree.1099" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1100", %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.1108" = type { %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.1120" = type { %"class.std::__1::__vector_base.1121" }
%"class.std::__1::__vector_base.1121" = type { %"struct.std::__1::pair.1122"*, %"struct.std::__1::pair.1122"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.std::__1::pair.1122" = type opaque
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::pair.1122"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.1128", %"class.base::internal::flat_tree.810", %"class.base::internal::flat_tree.810", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.1128" = type { %"class.base::internal::flat_tree.1129" }
%"class.base::internal::flat_tree.1129" = type { %"class.std::__1::vector.1130" }
%"class.std::__1::vector.1130" = type { %"class.std::__1::__vector_base.1131" }
%"class.std::__1::__vector_base.1131" = type { %"struct.std::__1::pair.1132"*, %"struct.std::__1::pair.1132"*, %"class.std::__1::__compressed_pair.1133" }
%"struct.std::__1::pair.1132" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.494", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1356", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1356" = type { %"class.std::__1::vector.1357" }
%"class.std::__1::vector.1357" = type { %"class.std::__1::__vector_base.1358" }
%"class.std::__1::__vector_base.1358" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"struct.std::__1::pair.1132"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.1138", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.1139" }
%"class.base::RepeatingCallback.1138" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1139" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.1143" }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.base::internal::flat_tree.642" = type { %"class.std::__1::vector.643" }
%"class.std::__1::vector.643" = type { %"class.std::__1::__vector_base.644" }
%"class.std::__1::__vector_base.644" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.650" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.645", %"class.viz::SurfaceId" }
%"class.absl::optional.645" = type { %"class.absl::optional_internal::optional_data.646" }
%"class.absl::optional_internal::optional_data.646" = type { %"class.absl::optional_internal::optional_data_base.647" }
%"class.absl::optional_internal::optional_data_base.647" = type { %"class.absl::optional_internal::optional_data_dtor_base.648" }
%"class.absl::optional_internal::optional_data_dtor_base.648" = type { i8, %union.anon.649 }
%union.anon.649 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.viz::SurfaceRange"* }
%"class.absl::optional.1158" = type { %"class.absl::optional_internal::optional_data.1159" }
%"class.absl::optional_internal::optional_data.1159" = type { %"class.absl::optional_internal::optional_data_base.1160" }
%"class.absl::optional_internal::optional_data_base.1160" = type { %"class.absl::optional_internal::optional_data_dtor_base.1161" }
%"class.absl::optional_internal::optional_data_dtor_base.1161" = type { i8, [7 x i8], %union.anon.1162 }
%union.anon.1162 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.1163", %"struct.viz::Selection.1168", i8, %"class.absl::optional.1169", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.1174", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.1163" = type { %"class.absl::optional_internal::optional_data.1164" }
%"class.absl::optional_internal::optional_data.1164" = type { %"class.absl::optional_internal::optional_data_base.1165" }
%"class.absl::optional_internal::optional_data_base.1165" = type { %"class.absl::optional_internal::optional_data_dtor_base.1166" }
%"class.absl::optional_internal::optional_data_dtor_base.1166" = type { i8, %union.anon.1167 }
%union.anon.1167 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection.1168" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.1169" = type { %"class.absl::optional_internal::optional_data.1170" }
%"class.absl::optional_internal::optional_data.1170" = type { %"class.absl::optional_internal::optional_data_base.1171" }
%"class.absl::optional_internal::optional_data_base.1171" = type { %"class.absl::optional_internal::optional_data_dtor_base.1172" }
%"class.absl::optional_internal::optional_data_dtor_base.1172" = type { i8, %union.anon.1173 }
%union.anon.1173 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.1174" = type { %"class.absl::optional_internal::optional_data.1175" }
%"class.absl::optional_internal::optional_data.1175" = type { %"class.absl::optional_internal::optional_data_base.1176" }
%"class.absl::optional_internal::optional_data_base.1176" = type { %"class.absl::optional_internal::optional_data_dtor_base.1177" }
%"class.absl::optional_internal::optional_data_dtor_base.1177" = type { i8, %union.anon.1178 }
%union.anon.1178 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.1179" }
%"class.base::circular_deque.1179" = type { %"class.base::internal::VectorBuffer.1180", i64, i64 }
%"class.base::internal::VectorBuffer.1180" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.688", %"class.std::__1::vector.688" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.1181", %"class.base::flat_map.1187", %"class.base::flat_map.1197", %"class.base::RepeatingCallback.1207", %"class.std::__1::vector.1208", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.1216", i64, i64 }
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.1187" = type { %"class.base::internal::flat_tree.1188" }
%"class.base::internal::flat_tree.1188" = type { %"class.std::__1::vector.1189" }
%"class.std::__1::vector.1189" = type { %"class.std::__1::__vector_base.1190" }
%"class.std::__1::__vector_base.1190" = type { %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"*, %"class.std::__1::__compressed_pair.1192" }
%"struct.std::__1::pair.1191" = type opaque
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"struct.std::__1::pair.1191"* }
%"class.base::flat_map.1197" = type { %"class.base::internal::flat_tree.1198" }
%"class.base::internal::flat_tree.1198" = type { %"class.std::__1::vector.1199" }
%"class.std::__1::vector.1199" = type { %"class.std::__1::__vector_base.1200" }
%"class.std::__1::__vector_base.1200" = type { %"struct.std::__1::pair.1201"*, %"struct.std::__1::pair.1201"*, %"class.std::__1::__compressed_pair.1202" }
%"struct.std::__1::pair.1201" = type opaque
%"class.std::__1::__compressed_pair.1202" = type { %"struct.std::__1::__compressed_pair_elem.1203" }
%"struct.std::__1::__compressed_pair_elem.1203" = type { %"struct.std::__1::pair.1201"* }
%"class.base::RepeatingCallback.1207" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.1208" = type { %"class.std::__1::__vector_base.1209" }
%"class.std::__1::__vector_base.1209" = type { %"class.std::__1::unique_ptr.1210"*, %"class.std::__1::unique_ptr.1210"*, %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::unique_ptr.1210" = type opaque
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.std::__1::unique_ptr.1210"* }
%"class.base::flat_map.1216" = type { %"class.base::internal::flat_tree.1217" }
%"class.base::internal::flat_tree.1217" = type { %"class.std::__1::vector.1218" }
%"class.std::__1::vector.1218" = type { %"class.std::__1::__vector_base.1219" }
%"class.std::__1::__vector_base.1219" = type { %"struct.std::__1::pair.1220"*, %"struct.std::__1::pair.1220"*, %"class.std::__1::__compressed_pair.1221" }
%"struct.std::__1::pair.1220" = type opaque
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"struct.std::__1::pair.1220"* }
%"class.std::__1::unique_ptr.1226" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.1232", %"class.base::internal::flat_tree.1242" }
%"class.base::flat_map.1232" = type { %"class.base::internal::flat_tree.1233" }
%"class.base::internal::flat_tree.1233" = type { %"class.std::__1::vector.1234" }
%"class.std::__1::vector.1234" = type { %"class.std::__1::__vector_base.1235" }
%"class.std::__1::__vector_base.1235" = type { %"struct.std::__1::pair.1236"*, %"struct.std::__1::pair.1236"*, %"class.std::__1::__compressed_pair.1237" }
%"struct.std::__1::pair.1236" = type opaque
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"struct.std::__1::pair.1236"* }
%"class.base::internal::flat_tree.1242" = type { %"class.std::__1::vector.1243" }
%"class.std::__1::vector.1243" = type { %"class.std::__1::__vector_base.1244" }
%"class.std::__1::__vector_base.1244" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.1255" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.1245", %"class.absl::optional.1250", %"struct.cc::ElementId" }
%"class.absl::optional.1245" = type { %"class.absl::optional_internal::optional_data.1246" }
%"class.absl::optional_internal::optional_data.1246" = type { %"class.absl::optional_internal::optional_data_base.1247" }
%"class.absl::optional_internal::optional_data_base.1247" = type { %"class.absl::optional_internal::optional_data_dtor_base.1248" }
%"class.absl::optional_internal::optional_data_dtor_base.1248" = type { i8, %union.anon.1249 }
%union.anon.1249 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1250" = type { %"class.absl::optional_internal::optional_data.1251" }
%"class.absl::optional_internal::optional_data.1251" = type { %"class.absl::optional_internal::optional_data_base.1252" }
%"class.absl::optional_internal::optional_data_base.1252" = type { %"class.absl::optional_internal::optional_data_dtor_base.1253" }
%"class.absl::optional_internal::optional_data_dtor_base.1253" = type { i8, %union.anon.1254 }
%union.anon.1254 = type { i32 }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.1272" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.1260", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.1260" = type { %"class.std::__1::__deque_base.1261" }
%"class.std::__1::__deque_base.1261" = type { %"struct.std::__1::__split_buffer.1262", i64, %"class.std::__1::__compressed_pair.1268" }
%"struct.std::__1::__split_buffer.1262" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.1263" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::circular_deque.1272" = type { %"class.base::internal::VectorBuffer.1273", i64, i64 }
%"class.base::internal::VectorBuffer.1273" = type { %"struct.std::__1::pair.1274"*, i64 }
%"struct.std::__1::pair.1274" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.1275", %"class.std::__1::map.1280", %"class.std::__1::map.1280" }
%"class.absl::optional.1275" = type { %"class.absl::optional_internal::optional_data.1276" }
%"class.absl::optional_internal::optional_data.1276" = type { %"class.absl::optional_internal::optional_data_base.1277" }
%"class.absl::optional_internal::optional_data_base.1277" = type { %"class.absl::optional_internal::optional_data_dtor_base.1278" }
%"class.absl::optional_internal::optional_data_dtor_base.1278" = type { i8, [3 x i8], %union.anon.1279 }
%union.anon.1279 = type { %"class.gfx::Transform" }
%"class.std::__1::map.1280" = type { %"class.std::__1::__tree.1281" }
%"class.std::__1::__tree.1281" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1282", %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.1289", %"class.std::__1::vector.695" }
%"class.std::__1::vector.1289" = type { %"class.std::__1::__vector_base.1290" }
%"class.std::__1::__vector_base.1290" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.1291" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.887", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.1296" }
%"class.base::WeakPtrFactory.1296" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.1297", %"class.std::__1::map.1304", i64 }
%"class.std::__1::list.1297" = type { %"class.std::__1::__list_imp.1298" }
%"class.std::__1::__list_imp.1298" = type { %"struct.std::__1::__list_node_base.1299", %"class.std::__1::__compressed_pair.1300" }
%"struct.std::__1::__list_node_base.1299" = type { %"struct.std::__1::__list_node_base.1299"*, %"struct.std::__1::__list_node_base.1299"* }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.1304" = type { %"class.std::__1::__tree.1305" }
%"class.std::__1::__tree.1305" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1306", %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.1315", %"class.base::internal::flat_tree.1325", %"class.base::internal::flat_tree.1325" }
%"class.base::flat_map.1315" = type { %"class.base::internal::flat_tree.1316" }
%"class.base::internal::flat_tree.1316" = type { %"class.std::__1::vector.1317" }
%"class.std::__1::vector.1317" = type { %"class.std::__1::__vector_base.1318" }
%"class.std::__1::__vector_base.1318" = type { %"struct.std::__1::pair.1319"*, %"struct.std::__1::pair.1319"*, %"class.std::__1::__compressed_pair.1320" }
%"struct.std::__1::pair.1319" = type opaque
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"struct.std::__1::pair.1319"* }
%"class.base::internal::flat_tree.1325" = type { %"class.std::__1::vector.1326" }
%"class.std::__1::vector.1326" = type { %"class.std::__1::__vector_base.1327" }
%"class.std::__1::__vector_base.1327" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.1328" }
%"class.std::__1::__compressed_pair.1328" = type { %"struct.std::__1::__compressed_pair_elem.1329" }
%"struct.std::__1::__compressed_pair_elem.1329" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.base::WeakPtrFactory.1333" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.134" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1334", [4 x i8] }>
%"struct.std::__1::atomic.1334" = type { %"struct.std::__1::__atomic_base.1335" }
%"struct.std::__1::__atomic_base.1335" = type { %"struct.std::__1::__atomic_base.1336" }
%"struct.std::__1::__atomic_base.1336" = type { %"struct.std::__1::__cxx_atomic_impl.1337" }
%"struct.std::__1::__cxx_atomic_impl.1337" = type { %"struct.std::__1::__cxx_atomic_base_impl.1338" }
%"struct.std::__1::__cxx_atomic_base_impl.1338" = type { i32 }
%class.ScaledLinearHistogramInstance = type { %"class.base::ScaledLinearHistogram" }
%class.ScaledLinearHistogramInstance.1345 = type { %"class.base::ScaledLinearHistogram" }

@.str = private unnamed_addr constant [9 x i8] c"Renderer\00", align 1
@_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN2cc12_GLOBAL__N_131kMetricNameLCDTextLayersHighDPIE = internal constant [59 x i8] c"Compositing.Renderer.LCDTextDisallowedReasonLayers.HighDPI\00", align 16
@_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0 = internal global %"class.base::LazyInstance.1344" zeroinitializer, align 8
@_ZN2cc12_GLOBAL__N_130kMetricNameLCDTextLayersLowDPIE = internal constant [58 x i8] c"Compositing.Renderer.LCDTextDisallowedReasonLayers.LowDPI\00", align 16
@_ZN2cc12_GLOBAL__N_132kMetricNameLCDTextKPixelsHighDPIE = internal constant [60 x i8] c"Compositing.Renderer.LCDTextDisallowedReasonKPixels.HighDPI\00", align 16
@_ZN2cc12_GLOBAL__N_131kMetricNameLCDTextKPixelsLowDPIE = internal constant [59 x i8] c"Compositing.Renderer.LCDTextDisallowedReasonKPixels.LowDPI\00", align 16
@_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN2cc22LCDTextMetricsReporterC1EPKNS_17LayerTreeHostImplE = hidden unnamed_addr alias void (%"class.cc::LCDTextMetricsReporter"*, %"class.cc::LayerTreeHostImpl"*), void (%"class.cc::LCDTextMetricsReporter"*, %"class.cc::LayerTreeHostImpl"*)* @_ZN2cc22LCDTextMetricsReporterC2EPKNS_17LayerTreeHostImplE
@_ZN2cc22LCDTextMetricsReporterD1Ev = hidden unnamed_addr alias void (%"class.cc::LCDTextMetricsReporter"*), void (%"class.cc::LCDTextMetricsReporter"*)* @_ZN2cc22LCDTextMetricsReporterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::LCDTextMetricsReporter"* @_ZN2cc22LCDTextMetricsReporter14CreateIfNeededEPKNS_17LayerTreeHostImplE(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN2cc23GetClientNameForMetricsEv() #8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @strcmp(i8* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 32) #10
  %9 = bitcast i8* %8 to %"class.cc::LCDTextMetricsReporter"*
  %10 = bitcast i8* %8 to %"class.cc::LayerTreeHostImpl"**
  store %"class.cc::LayerTreeHostImpl"* %0, %"class.cc::LayerTreeHostImpl"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #8
  br label %12

12:                                               ; preds = %1, %4, %7
  %13 = phi %"class.cc::LCDTextMetricsReporter"* [ %9, %7 ], [ null, %4 ], [ null, %1 ]
  ret %"class.cc::LCDTextMetricsReporter"* %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_ZN2cc23GetClientNameForMetricsEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc22LCDTextMetricsReporterC2EPKNS_17LayerTreeHostImplE(%"class.cc::LCDTextMetricsReporter"* nocapture, %"class.cc::LayerTreeHostImpl"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 0
  store %"class.cc::LayerTreeHostImpl"* %1, %"class.cc::LayerTreeHostImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc22LCDTextMetricsReporterD2Ev(%"class.cc::LCDTextMetricsReporter"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc22LCDTextMetricsReporter17NotifySubmitFrameERKN3viz14BeginFrameArgsE(%"class.cc::LCDTextMetricsReporter"* nocapture, %"struct.viz::BeginFrameArgs"* nocapture readonly dereferenceable(64)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.viz::BeginFrameArgs", %"struct.viz::BeginFrameArgs"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  store i64 %5, i64* %9, align 8
  br label %13

13:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEv(%"class.cc::LCDTextMetricsReporter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.gfx::Rect"*
  %4 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %114, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sub nsw i64 %5, %9
  %11 = icmp slt i64 %10, 60000000
  br i1 %11, label %114, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 500
  br i1 %15, label %114, label %16

16:                                               ; preds = %12
  store i64 %5, i64* %8, align 8
  store i64 0, i64* %13, align 8
  %17 = getelementptr inbounds %"class.cc::LCDTextMetricsReporter", %"class.cc::LCDTextMetricsReporter"* %0, i64 0, i32 0
  %18 = load %"class.cc::LayerTreeHostImpl"*, %"class.cc::LayerTreeHostImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %18, i64 0, i32 14, i32 70
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %18, i64 0, i32 35, i32 0, i32 0, i32 0
  %23 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %23, i64 0, i32 15
  %25 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %23, i64 0, i32 14
  %26 = select i1 %21, float* %25, float* %24
  %27 = load float, float* %26, align 4
  %28 = fcmp ult float %27, 1.500000e+00
  %29 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %23, i64 0, i32 30, i32 0, i32 0
  %30 = load %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"*** %29, align 8
  %31 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %23, i64 0, i32 30, i32 0, i32 1
  %32 = load %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"*** %31, align 8
  %33 = icmp eq %"class.cc::PictureLayerImpl"** %30, %32
  br i1 %33, label %114, label %34

34:                                               ; preds = %16
  %35 = bitcast <2 x i64>* %2 to i8*
  br label %36

36:                                               ; preds = %34, %111
  %37 = phi %"class.cc::PictureLayerImpl"** [ %30, %34 ], [ %112, %111 ]
  %38 = load %"class.cc::PictureLayerImpl"*, %"class.cc::PictureLayerImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %38, i64 0, i32 0, i32 10
  %40 = load i16, i16* %39, align 4
  %41 = trunc i16 %40 to i8
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %111

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %38, i64 0, i32 5, i32 0
  %45 = load %"class.cc::RasterSource"*, %"class.cc::RasterSource"** %44, align 8
  %46 = icmp eq %"class.cc::RasterSource"* %45, null
  br i1 %46, label %111, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.cc::RasterSource", %"class.cc::RasterSource"* %45, i64 0, i32 4, i32 0
  %49 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %48, align 8
  %50 = icmp eq %"class.cc::DisplayItemList"* %49, null
  br i1 %50, label %111, label %51

51:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8
  %52 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %38, i64 0, i32 0, i32 25, i32 7
  %53 = bitcast %"class.gfx::Rect"* %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 4
  store <2 x i64> %54, <2 x i64>* %2, align 16
  %55 = call double @_ZNK2cc15DisplayItemList14AreaOfDrawTextERKN3gfx4RectE(%"class.cc::DisplayItemList"* nonnull %49, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #8
  %56 = fptosi double %55 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %111, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %38, i64 0, i32 17
  %60 = load i8, i8* %59, align 1
  br i1 %28, label %86, label %61

61:                                               ; preds = %58
  %62 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled, i64 0, i32 0) acquire, align 8
  %63 = icmp ugt i64 %62, 1
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled, i64 0, i32 0)) #8
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  call void @_ZN4base21ScaledLinearHistogramC2EPKciijii(%"class.base::ScaledLinearHistogram"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled, i64 0, i32 1, i64 0) to %"class.base::ScaledLinearHistogram"*), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @_ZN2cc12_GLOBAL__N_132kMetricNameLCDTextKPixelsHighDPIE, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1000, i32 1) #8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled to i8*)) #8
  br label %69

67:                                               ; preds = %64
  %68 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled, i64 0, i32 0) acquire, align 8
  br label %69

69:                                               ; preds = %61, %66, %67
  %70 = phi i64 [ %62, %61 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled, i64 0, i32 1, i64 0) to i64), %66 ], [ %68, %67 ]
  %71 = inttoptr i64 %70 to %class.ScaledLinearHistogramInstance*
  %72 = getelementptr inbounds %class.ScaledLinearHistogramInstance, %class.ScaledLinearHistogramInstance* %71, i64 0, i32 0
  %73 = zext i8 %60 to i32
  call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %72, i32 %73, i32 %56) #8
  %74 = load atomic i64, i64* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %75 = inttoptr i64 %74 to %"class.base::HistogramBase"*
  %76 = icmp eq i64 %74, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %69
  %78 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @_ZN2cc12_GLOBAL__N_131kMetricNameLCDTextLayersHighDPIE, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1) #8
  %79 = ptrtoint %"class.base::HistogramBase"* %78 to i64
  store atomic i64 %79, i64* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %80

80:                                               ; preds = %69, %77
  %81 = phi %"class.base::HistogramBase"* [ %75, %69 ], [ %78, %77 ]
  %82 = bitcast %"class.base::HistogramBase"* %81 to void (%"class.base::HistogramBase"*, i32)***
  %83 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %83, i64 6
  %85 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %84, align 8
  call void %85(%"class.base::HistogramBase"* %81, i32 %73) #8
  br label %111

86:                                               ; preds = %58
  %87 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.1344", %"class.base::LazyInstance.1344"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0, i64 0, i32 0) acquire, align 8
  %88 = icmp ugt i64 %87, 1
  br i1 %88, label %94, label %89

89:                                               ; preds = %86
  %90 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.1344", %"class.base::LazyInstance.1344"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0, i64 0, i32 0)) #8
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  call void @_ZN4base21ScaledLinearHistogramC2EPKciijii(%"class.base::ScaledLinearHistogram"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1344", %"class.base::LazyInstance.1344"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0, i64 0, i32 1, i64 0) to %"class.base::ScaledLinearHistogram"*), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @_ZN2cc12_GLOBAL__N_131kMetricNameLCDTextKPixelsLowDPIE, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1000, i32 1) #8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.1344", %"class.base::LazyInstance.1344"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.1344", %"class.base::LazyInstance.1344"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.1344"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0 to i8*)) #8
  br label %94

92:                                               ; preds = %89
  %93 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.1344", %"class.base::LazyInstance.1344"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0, i64 0, i32 0) acquire, align 8
  br label %94

94:                                               ; preds = %86, %91, %92
  %95 = phi i64 [ %87, %86 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.1344", %"class.base::LazyInstance.1344"* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE6scaled_0, i64 0, i32 1, i64 0) to i64), %91 ], [ %93, %92 ]
  %96 = inttoptr i64 %95 to %class.ScaledLinearHistogramInstance.1345*
  %97 = getelementptr inbounds %class.ScaledLinearHistogramInstance.1345, %class.ScaledLinearHistogramInstance.1345* %96, i64 0, i32 0
  %98 = zext i8 %60 to i32
  call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %97, i32 %98, i32 %56) #8
  %99 = load atomic i64, i64* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %100 = inttoptr i64 %99 to %"class.base::HistogramBase"*
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %94
  %103 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZN2cc12_GLOBAL__N_130kMetricNameLCDTextLayersLowDPIE, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1) #8
  %104 = ptrtoint %"class.base::HistogramBase"* %103 to i64
  store atomic i64 %104, i64* @_ZZN2cc22LCDTextMetricsReporter26NotifyPauseFrameProductionEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %105

105:                                              ; preds = %94, %102
  %106 = phi %"class.base::HistogramBase"* [ %100, %94 ], [ %103, %102 ]
  %107 = bitcast %"class.base::HistogramBase"* %106 to void (%"class.base::HistogramBase"*, i32)***
  %108 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %108, i64 6
  %110 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %109, align 8
  call void %110(%"class.base::HistogramBase"* %106, i32 %98) #8
  br label %111

111:                                              ; preds = %47, %80, %105, %51, %36, %43
  %112 = getelementptr inbounds %"class.cc::PictureLayerImpl"*, %"class.cc::PictureLayerImpl"** %37, i64 1
  %113 = icmp eq %"class.cc::PictureLayerImpl"** %112, %32
  br i1 %113, label %114, label %36

114:                                              ; preds = %111, %16, %1, %7, %12
  ret void
}

declare double @_ZNK2cc15DisplayItemList14AreaOfDrawTextERKN3gfx4RectE(%"class.cc::DisplayItemList"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"*, i32, i32) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN4base21ScaledLinearHistogramC2EPKciijii(%"class.base::ScaledLinearHistogram"*, i8*, i32, i32, i32, i32, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
