; ModuleID = '../../third_party/blink/renderer/platform/fonts/opentype/open_type_caps_support.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/opentype/open_type_caps_support.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::OpenTypeCapsSupport" = type { %"class.blink::HarfBuzzFace"*, i32, i32, i32, i32 }
%"class.blink::HarfBuzzFace" = type { %"class.WTF::RefCounted", %"class.blink::FontPlatformData"*, i64, %struct.hb_font_t*, %"struct.blink::HarfBuzzFontData"* }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FontPlatformData" = type opaque
%struct.hb_font_t = type opaque
%"struct.blink::HarfBuzzFontData" = type opaque
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.0", %"class.WTF::Vector" }
%"class.WTF::RefCounted.0" = type { %"class.base::RefCounted.1" }
%"class.base::RefCounted.1" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%struct.hb_face_t = type opaque
%struct.hb_blob_t = type opaque
%struct.hb_aat_layout_feature_selector_info_t = type { i32, i32, i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF18PartitionAllocator13QuantizedSizeI37hb_aat_layout_feature_selector_info_tEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI28hb_aat_layout_feature_type_tEEmm = comdat any

@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI37hb_aat_layout_feature_selector_info_tEEPKcv = private unnamed_addr constant [85 x i8] c"const char *WTF::GetStringWithTypeName() [T = hb_aat_layout_feature_selector_info_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI28hb_aat_layout_feature_type_tEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = hb_aat_layout_feature_type_t]\00", align 1

@_ZN5blink19OpenTypeCapsSupportC1Ev = hidden unnamed_addr alias void (%"class.blink::OpenTypeCapsSupport"*), void (%"class.blink::OpenTypeCapsSupport"*)* @_ZN5blink19OpenTypeCapsSupportC2Ev
@_ZN5blink19OpenTypeCapsSupportC1EPKNS_12HarfBuzzFaceENS_15FontDescription15FontVariantCapsE11hb_script_t = hidden unnamed_addr alias void (%"class.blink::OpenTypeCapsSupport"*, %"class.blink::HarfBuzzFace"*, i32, i32), void (%"class.blink::OpenTypeCapsSupport"*, %"class.blink::HarfBuzzFace"*, i32, i32)* @_ZN5blink19OpenTypeCapsSupportC2EPKNS_12HarfBuzzFaceENS_15FontDescription15FontVariantCapsE11hb_script_t

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink19OpenTypeCapsSupportC2Ev(%"class.blink::OpenTypeCapsSupport"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::OpenTypeCapsSupport"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OpenTypeCapsSupportC2EPKNS_12HarfBuzzFaceENS_15FontDescription15FontVariantCapsE11hb_script_t(%"class.blink::OpenTypeCapsSupport"*, %"class.blink::HarfBuzzFace"*, i32, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 0
  store %"class.blink::HarfBuzzFace"* %1, %"class.blink::HarfBuzzFace"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 4
  store i32 0, i32* %9, align 4
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  tail call void @_ZN5blink19OpenTypeCapsSupport20DetermineFontSupportE11hb_script_t(%"class.blink::OpenTypeCapsSupport"* %0, i32 %3)
  br label %12

12:                                               ; preds = %4, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OpenTypeCapsSupport20DetermineFontSupportE11hb_script_t(%"class.blink::OpenTypeCapsSupport"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %106 [
    i32 1, label %5
    i32 2, label %15
    i32 3, label %32
    i32 4, label %51
    i32 5, label %80
    i32 6, label %99
  ]

5:                                                ; preds = %2
  %6 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* %0, i32 1936548720) #6
  br i1 %9, label %106, label %12

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1936548720) #6
  br i1 %11, label %106, label %12

12:                                               ; preds = %8, %10
  %13 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  store i32 2, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  store i32 1, i32* %14, align 8
  br label %106

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* %0, i32 1936548720) #6
  br i1 %19, label %22, label %29

20:                                               ; preds = %15
  %21 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1936548720) #6
  br i1 %21, label %22, label %29

22:                                               ; preds = %18, %20
  %23 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* %0, i32 1664250723) #6
  br i1 %26, label %106, label %29

27:                                               ; preds = %22
  %28 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1664250723) #6
  br i1 %28, label %106, label %29

29:                                               ; preds = %25, %18, %27, %20
  %30 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  store i32 2, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  store i32 3, i32* %31, align 8
  br label %106

32:                                               ; preds = %2
  %33 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1885561200) #6
  br i1 %36, label %106, label %37

37:                                               ; preds = %32, %35
  %38 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* %0, i32 1936548720) #6
  %42 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  br i1 %41, label %46, label %48

43:                                               ; preds = %37
  %44 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1936548720) #6
  %45 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  br i1 %44, label %46, label %48

46:                                               ; preds = %40, %43
  %47 = phi i32* [ %42, %40 ], [ %45, %43 ]
  store i32 1, i32* %47, align 4
  br label %106

48:                                               ; preds = %40, %43
  %49 = phi i32* [ %42, %40 ], [ %45, %43 ]
  store i32 2, i32* %49, align 4
  %50 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  store i32 1, i32* %50, align 8
  br label %106

51:                                               ; preds = %2
  %52 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %61, label %54

54:                                               ; preds = %51
  %55 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1885561200) #6
  br i1 %55, label %56, label %61

56:                                               ; preds = %54
  %57 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %58 = icmp eq i32 %57, 2
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1664249955) #6
  br i1 %60, label %106, label %61

61:                                               ; preds = %56, %51, %59, %54
  %62 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %63 = icmp eq i32 %62, 2
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* %0, i32 1936548720) #6
  br i1 %65, label %68, label %77

66:                                               ; preds = %61
  %67 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1936548720) #6
  br i1 %67, label %68, label %77

68:                                               ; preds = %64, %66
  %69 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %70 = icmp eq i32 %69, 2
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* %0, i32 1664250723) #6
  br i1 %72, label %75, label %77

73:                                               ; preds = %68
  %74 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1664250723) #6
  br i1 %74, label %75, label %77

75:                                               ; preds = %71, %73
  %76 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  store i32 1, i32* %76, align 4
  br label %106

77:                                               ; preds = %71, %64, %73, %66
  %78 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  store i32 2, i32* %78, align 4
  %79 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  store i32 3, i32* %79, align 8
  br label %106

80:                                               ; preds = %2
  %81 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1970170211) #6
  br i1 %84, label %106, label %85

85:                                               ; preds = %80, %83
  %86 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  store i32 2, i32* %86, align 8
  %87 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %88 = icmp eq i32 %87, 2
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* %0, i32 1936548720) #6
  %91 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  br i1 %90, label %95, label %97

92:                                               ; preds = %85
  %93 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1936548720) #6
  %94 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  br i1 %93, label %95, label %97

95:                                               ; preds = %89, %92
  %96 = phi i32* [ %91, %89 ], [ %94, %92 ]
  store i32 1, i32* %96, align 4
  br label %106

97:                                               ; preds = %89, %92
  %98 = phi i32* [ %91, %89 ], [ %94, %92 ]
  store i32 2, i32* %98, align 4
  br label %106

99:                                               ; preds = %2
  %100 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0) #6
  %101 = icmp eq i32 %100, 2
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 1953068140) #6
  br i1 %103, label %106, label %104

104:                                              ; preds = %99, %102
  %105 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  store i32 2, i32* %105, align 4
  br label %106

106:                                              ; preds = %25, %8, %2, %102, %104, %83, %97, %95, %59, %77, %75, %35, %48, %46, %27, %29, %10, %12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink19OpenTypeCapsSupport16FontFeatureToUseENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %16 [
    i32 0, label %5
    i32 1, label %8
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %11 [
    i32 4, label %16
    i32 3, label %15
  ]

11:                                               ; preds = %8
  %12 = icmp eq i32 %10, 5
  %13 = icmp eq i32 %1, 0
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %8, %11
  br label %16

16:                                               ; preds = %11, %2, %8, %15, %5
  %17 = phi i32 [ %7, %5 ], [ 1, %15 ], [ 2, %8 ], [ 0, %2 ], [ 0, %11 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19OpenTypeCapsSupport21NeedsRunCaseSplittingEv(%"class.blink::OpenTypeCapsSupport"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 6
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19OpenTypeCapsSupport18NeedsSyntheticFontENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = icmp eq i32 %4, 2
  br i1 %11, label %12, label %21

12:                                               ; preds = %10
  switch i32 %1, label %21 [
    i32 1, label %13
    i32 0, label %16
  ]

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %21 [
    i32 1, label %22
    i32 3, label %22
  ]

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, -2
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %22, label %21

21:                                               ; preds = %13, %16, %12, %10
  br label %22

22:                                               ; preds = %16, %13, %13, %6, %2, %21
  %23 = phi i1 [ false, %21 ], [ false, %2 ], [ false, %6 ], [ true, %13 ], [ true, %13 ], [ true, %16 ]
  ret i1 %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink19OpenTypeCapsSupport15NeedsCaseChangeENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  switch i32 %1, label %25 [
    i32 0, label %7
    i32 1, label %16
  ]

7:                                                ; preds = %6
  %8 = icmp eq i32 %4, 1
  br i1 %8, label %9, label %25

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %25, label %13

13:                                               ; preds = %9
  %14 = icmp eq i32 %11, 2
  %15 = select i1 %14, i32 2, i32 0
  br label %25

16:                                               ; preds = %6
  %17 = icmp eq i32 %4, 1
  br i1 %17, label %25, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = icmp eq i32 %20, 3
  %24 = zext i1 %23 to i32
  br label %25

25:                                               ; preds = %6, %9, %13, %7, %16, %18, %22, %2
  %26 = phi i32 [ 0, %2 ], [ 0, %6 ], [ 0, %7 ], [ 2, %9 ], [ %15, %13 ], [ 0, %16 ], [ 1, %18 ], [ %24, %22 ]
  ret i32 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 0
  %7 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %6, align 8
  %8 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* %7, %"class.blink::UnicodeRangeSet"* null, i32 1) #6
  %9 = tail call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %8) #6
  %10 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %9, i32 1836020344) #6
  %11 = tail call %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t* %9, i32 1836020340) #6
  %12 = tail call i32 @hb_blob_get_length(%struct.hb_blob_t* %10) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  %15 = tail call i32 @hb_ot_layout_has_substitution(%struct.hb_face_t* %9) #6
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 2, i32 1
  br label %24

18:                                               ; preds = %5
  %19 = tail call i32 @hb_blob_get_length(%struct.hb_blob_t* %11) #6
  %20 = icmp eq i32 %19, 0
  %21 = tail call i32 @hb_ot_layout_has_substitution(%struct.hb_face_t* %9) #6
  %22 = icmp eq i32 %21, 0
  %23 = select i1 %22, i32 2, i32 1
  br i1 %20, label %26, label %24

24:                                               ; preds = %18, %14
  %25 = phi i32 [ %17, %14 ], [ %23, %18 ]
  br label %26

26:                                               ; preds = %18, %24
  %27 = phi i32 [ %25, %24 ], [ 1, %18 ]
  store i32 %27, i32* %2, align 4
  %28 = icmp eq %struct.hb_blob_t* %11, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %11) #6
  br label %30

30:                                               ; preds = %26, %29
  %31 = icmp eq %struct.hb_blob_t* %10, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %30
  tail call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %10) #6
  br label %33

33:                                               ; preds = %32, %30, %1
  %34 = load i32, i32* %2, align 4
  ret i32 %34
}

declare %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t*) local_unnamed_addr #4

declare %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"*, %"class.blink::UnicodeRangeSet"*, i32) local_unnamed_addr #4

declare %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t*, i32) local_unnamed_addr #4

declare i32 @hb_blob_get_length(%struct.hb_blob_t*) local_unnamed_addr #4

declare i32 @hb_ot_layout_has_substitution(%struct.hb_face_t*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19OpenTypeCapsSupport15SupportsFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = tail call i32 @_ZNK5blink19OpenTypeCapsSupport13GetFontFormatEv(%"class.blink::OpenTypeCapsSupport"* %0)
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %2)
  br label %10

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"* %0, i32 %1, i32 %2) #6
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi i1 [ %7, %6 ], [ %9, %8 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19OpenTypeCapsSupport18SupportsAatFeatureEj(%"class.blink::OpenTypeCapsSupport"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  switch i32 %1, label %116 [
    i32 1936548720, label %4
    i32 1664250723, label %4
  ]

4:                                                ; preds = %2, %2
  %5 = getelementptr inbounds %"class.blink::OpenTypeCapsSupport", %"class.blink::OpenTypeCapsSupport"* %0, i64 0, i32 0
  %6 = load %"class.blink::HarfBuzzFace"*, %"class.blink::HarfBuzzFace"** %5, align 8
  %7 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* %6, %"class.blink::UnicodeRangeSet"* null, i32 1) #6
  %8 = tail call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %7) #6
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #6
  %10 = tail call i32 @hb_aat_layout_get_feature_types(%struct.hb_face_t* %8, i32 0, i32* null, i32* null) #6
  store i32 %10, i32* %3, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %4
  %13 = icmp ugt i32 %10, 4
  %14 = select i1 %13, i32 %10, i32 4
  %15 = zext i32 %14 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI28hb_aat_layout_feature_type_tEEmm(i64 %15) #6
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI28hb_aat_layout_feature_type_tEEPKcv, i64 0, i64 0)) #6
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast i8* %17 to i32*
  %20 = zext i32 %10 to i64
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = ptrtoint i32* %21 to i64
  %23 = sub i64 %22, %18
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %23, i1 false) #6
  br label %24

24:                                               ; preds = %4, %12
  %25 = phi i64 [ %18, %12 ], [ 0, %4 ]
  %26 = inttoptr i64 %25 to i32*
  %27 = call i32 @hb_aat_layout_get_feature_types(%struct.hb_face_t* %8, i32 0, i32* nonnull %3, i32* %26) #6
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %111, label %29

29:                                               ; preds = %24
  switch i32 %1, label %111 [
    i32 1936548720, label %30
    i32 1664250723, label %93
  ]

30:                                               ; preds = %29
  %31 = zext i32 %10 to i64
  %32 = getelementptr inbounds i32, i32* %26, i64 %31
  br i1 %11, label %111, label %33

33:                                               ; preds = %30, %37
  %34 = phi i32* [ %38, %37 ], [ %26, %30 ]
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 3
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds i32, i32* %34, i64 1
  %39 = icmp ult i32* %38, %32
  br i1 %39, label %33, label %46

40:                                               ; preds = %33
  %41 = ptrtoint i32* %34 to i64
  %42 = sub i64 %41, %25
  %43 = lshr exact i64 %42, 2
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %60

46:                                               ; preds = %37, %40
  br label %47

47:                                               ; preds = %46, %51
  %48 = phi i32* [ %52, %51 ], [ %26, %46 ]
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 37
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i32, i32* %48, i64 1
  %53 = icmp ult i32* %52, %32
  br i1 %53, label %47, label %111

54:                                               ; preds = %47
  %55 = ptrtoint i32* %48 to i64
  %56 = sub i64 %55, %25
  %57 = lshr exact i64 %56, 2
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %111, label %60

60:                                               ; preds = %54, %40
  br label %61

61:                                               ; preds = %60, %65
  %62 = phi i32* [ %66, %65 ], [ %26, %60 ]
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 37
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds i32, i32* %62, i64 1
  %67 = icmp ult i32* %66, %32
  br i1 %67, label %61, label %76

68:                                               ; preds = %61
  %69 = ptrtoint i32* %62 to i64
  %70 = sub i64 %69, %25
  %71 = lshr exact i64 %70, 2
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_125activationSelectorPresentEP9hb_face_t28hb_aat_layout_feature_type_t32hb_aat_layout_feature_selector_t(%struct.hb_face_t* %8, i32 37, i32 1)
  br i1 %75, label %111, label %76

76:                                               ; preds = %65, %74, %68
  br label %77

77:                                               ; preds = %76, %81
  %78 = phi i32* [ %82, %81 ], [ %26, %76 ]
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds i32, i32* %78, i64 1
  %83 = icmp ult i32* %82, %32
  br i1 %83, label %77, label %92

84:                                               ; preds = %77
  %85 = ptrtoint i32* %78 to i64
  %86 = sub i64 %85, %25
  %87 = lshr exact i64 %86, 2
  %88 = trunc i64 %87 to i32
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %92, label %90

90:                                               ; preds = %84
  %91 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_125activationSelectorPresentEP9hb_face_t28hb_aat_layout_feature_type_t32hb_aat_layout_feature_selector_t(%struct.hb_face_t* %8, i32 3, i32 3)
  br i1 %91, label %111, label %92

92:                                               ; preds = %81, %84, %90
  br label %111

93:                                               ; preds = %29
  %94 = zext i32 %10 to i64
  %95 = getelementptr inbounds i32, i32* %26, i64 %94
  br i1 %11, label %111, label %96

96:                                               ; preds = %93, %100
  %97 = phi i32* [ %101, %100 ], [ %26, %93 ]
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 38
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds i32, i32* %97, i64 1
  %102 = icmp ult i32* %101, %95
  br i1 %102, label %96, label %111

103:                                              ; preds = %96
  %104 = ptrtoint i32* %97 to i64
  %105 = sub i64 %104, %25
  %106 = lshr exact i64 %105, 2
  %107 = trunc i64 %106 to i32
  %108 = icmp eq i32 %107, -1
  br i1 %108, label %111, label %109

109:                                              ; preds = %103
  %110 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_125activationSelectorPresentEP9hb_face_t28hb_aat_layout_feature_type_t32hb_aat_layout_feature_selector_t(%struct.hb_face_t* %8, i32 38, i32 1)
  br label %111

111:                                              ; preds = %100, %51, %54, %103, %30, %93, %29, %90, %74, %24, %109, %92
  %112 = phi i1 [ false, %92 ], [ %110, %109 ], [ false, %24 ], [ false, %54 ], [ true, %74 ], [ true, %90 ], [ false, %103 ], [ false, %29 ], [ false, %93 ], [ false, %30 ], [ false, %51 ], [ false, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #6
  %113 = icmp eq i64 %25, 0
  br i1 %113, label %116, label %114, !prof !2

114:                                              ; preds = %111
  %115 = inttoptr i64 %25 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %115) #6
  br label %116

116:                                              ; preds = %114, %111, %2
  %117 = phi i1 [ false, %2 ], [ %112, %111 ], [ %112, %114 ]
  ret i1 %117
}

declare zeroext i1 @_ZNK5blink19OpenTypeCapsSupport23SupportsOpenTypeFeatureE11hb_script_tj(%"class.blink::OpenTypeCapsSupport"*, i32, i32) local_unnamed_addr #4

declare i32 @hb_aat_layout_get_feature_types(%struct.hb_face_t*, i32, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_125activationSelectorPresentEP9hb_face_t28hb_aat_layout_feature_type_t32hb_aat_layout_feature_selector_t(%struct.hb_face_t*, i32, i32) unnamed_addr #1 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6
  store i32 0, i32* %5, align 4
  %8 = tail call i32 @hb_aat_layout_feature_type_get_selector_infos(%struct.hb_face_t* %0, i32 %1, i32 0, i32* null, %struct.hb_aat_layout_feature_selector_info_t* null, i32* null) #6
  store i32 %8, i32* %4, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = icmp ugt i32 %8, 4
  %12 = select i1 %11, i32 %8, i32 4
  %13 = zext i32 %12 to i64
  %14 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI37hb_aat_layout_feature_selector_info_tEEmm(i64 %13) #6
  %15 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %14, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI37hb_aat_layout_feature_selector_info_tEEPKcv, i64 0, i64 0)) #6
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast i8* %15 to %struct.hb_aat_layout_feature_selector_info_t*
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %struct.hb_aat_layout_feature_selector_info_t, %struct.hb_aat_layout_feature_selector_info_t* %17, i64 %18
  %20 = ptrtoint %struct.hb_aat_layout_feature_selector_info_t* %19 to i64
  %21 = sub i64 %20, %16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 %21, i1 false) #6
  br label %22

22:                                               ; preds = %3, %10
  %23 = phi i8* [ %15, %10 ], [ null, %3 ]
  %24 = phi %struct.hb_aat_layout_feature_selector_info_t* [ %17, %10 ], [ null, %3 ]
  %25 = call i32 @hb_aat_layout_feature_type_get_selector_infos(%struct.hb_face_t* %0, i32 %1, i32 0, i32* nonnull %4, %struct.hb_aat_layout_feature_selector_info_t* %24, i32* nonnull %5) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %22
  %28 = zext i32 %8 to i64
  %29 = getelementptr inbounds %struct.hb_aat_layout_feature_selector_info_t, %struct.hb_aat_layout_feature_selector_info_t* %24, i64 %28
  br i1 %9, label %38, label %32

30:                                               ; preds = %32
  %31 = icmp eq %struct.hb_aat_layout_feature_selector_info_t* %37, %29
  br i1 %31, label %38, label %32

32:                                               ; preds = %27, %30
  %33 = phi %struct.hb_aat_layout_feature_selector_info_t* [ %37, %30 ], [ %24, %27 ]
  %34 = getelementptr inbounds %struct.hb_aat_layout_feature_selector_info_t, %struct.hb_aat_layout_feature_selector_info_t* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %2
  %37 = getelementptr inbounds %struct.hb_aat_layout_feature_selector_info_t, %struct.hb_aat_layout_feature_selector_info_t* %33, i64 1
  br i1 %36, label %38, label %30

38:                                               ; preds = %30, %32, %27, %22
  %39 = phi i1 [ false, %22 ], [ false, %27 ], [ false, %30 ], [ true, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6
  %40 = icmp eq %struct.hb_aat_layout_feature_selector_info_t* %24, null
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %38
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %23) #6
  br label %42

42:                                               ; preds = %38, %41
  ret i1 %39
}

declare i32 @hb_aat_layout_feature_type_get_selector_infos(%struct.hb_face_t*, i32, i32, i32*, %struct.hb_aat_layout_feature_selector_info_t*, i32*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI37hb_aat_layout_feature_selector_info_tEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI28hb_aat_layout_feature_type_tEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
