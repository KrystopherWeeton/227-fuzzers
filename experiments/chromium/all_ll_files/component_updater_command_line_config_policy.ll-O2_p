; ModuleID = '../../components/component_updater/component_updater_command_line_config_policy.cc'
source_filename = "../../components/component_updater/component_updater_command_line_config_policy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy" = type { %"class.update_client::CommandLineConfigPolicy", i8, i8, i8, i8, i8, double, %class.GURL }
%"class.update_client::CommandLineConfigPolicy" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator" = type { i8 }

$_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyD2Ev = comdat any

$_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyD0Ev = comdat any

@_ZTVN17component_updater39ComponentUpdaterCommandLineConfigPolicyE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy26BackgroundDownloadsEnabledEv to i8*), i8* bitcast (i1 (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy19DeltaUpdatesEnabledEv to i8*), i8* bitcast (i1 (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy10FastUpdateEv to i8*), i8* bitcast (i1 (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy12PingsEnabledEv to i8*), i8* bitcast (i1 (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy11TestRequestEv to i8*), i8* bitcast (void (%class.GURL*, %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy17UrlSourceOverrideEv to i8*), i8* bitcast (double (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy12InitialDelayEv to i8*), i8* bitcast (void (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyD2Ev to i8*), i8* bitcast (void (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*)* @_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyD0Ev to i8*)] }, align 8
@_ZN8switches17kComponentUpdaterE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZN17component_updater12_GLOBAL__N_126kSwitchDisableDeltaUpdatesE = internal constant [22 x i8] c"disable-delta-updates\00", align 16
@_ZN17component_updater12_GLOBAL__N_117kSwitchFastUpdateE = internal constant [12 x i8] c"fast-update\00", align 1
@_ZN17component_updater12_GLOBAL__N_119kSwitchDisablePingsE = internal constant [14 x i8] c"disable-pings\00", align 1
@_ZN17component_updater12_GLOBAL__N_123kSwitchTestRequestParamE = internal constant [13 x i8] c"test-request\00", align 1
@_ZN17component_updater12_GLOBAL__N_116kSwitchUrlSourceE = internal constant [11 x i8] c"url-source\00", align 1
@_ZN17component_updater12_GLOBAL__N_113kInitialDelayE = internal constant [14 x i8] c"initial-delay\00", align 1

@_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyC1EPKN4base11CommandLineE = hidden unnamed_addr alias void (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*, %"class.base::CommandLine"*), void (%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*, %"class.base::CommandLine"*)* @_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyC2EPKN4base11CommandLineE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyC2EPKN4base11CommandLineE(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*, %"class.base::CommandLine"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca double, align 8
  %9 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN17component_updater39ComponentUpdaterCommandLineConfigPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 1
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 2
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 3
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 4
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 5
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 6
  store double 0.000000e+00, double* %15, align 8
  %16 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 7
  tail call void @_ZN4GURLC1Ev(%class.GURL* %16) #9
  %17 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %21 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  %22 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kComponentUpdaterE, i64 0, i64 0)) #9
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kComponentUpdaterE, i64 0, i64 0), i64 %22) #9
  %23 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = select i1 %26, i8* %28, i8* %20
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %25 to i64
  %33 = select i1 %26, i64 %31, i64 %32
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %3, i8* %29, i64 %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0, i32 1) #9
  %34 = load i8, i8* %24, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %2
  %37 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %2, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  store i8 0, i8* %10, align 8
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %41 = icmp eq %"class.std::__1::basic_string"* %39, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  store i8 1, i8* %11, align 1
  br label %84

43:                                               ; preds = %38, %57
  %44 = phi %"class.std::__1::basic_string"* [ %58, %57 ], [ %39, %38 ]
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = zext i8 %47 to i64
  %52 = select i1 %48, i64 %50, i64 %51
  %53 = icmp eq i64 %52, 21
  br i1 %53, label %54, label %57

54:                                               ; preds = %43
  %55 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %44, i64 0, i64 -1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN17component_updater12_GLOBAL__N_126kSwitchDisableDeltaUpdatesE, i64 0, i64 0), i64 21) #9
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54, %43
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 1
  %59 = icmp eq %"class.std::__1::basic_string"* %58, %40
  br i1 %59, label %60, label %43

60:                                               ; preds = %54, %57
  %61 = phi %"class.std::__1::basic_string"* [ %44, %54 ], [ %40, %57 ]
  %62 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %64 = icmp eq %"class.std::__1::basic_string"* %61, %62
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %11, align 1
  %66 = icmp eq %"class.std::__1::basic_string"* %63, %62
  br i1 %66, label %84, label %67

67:                                               ; preds = %60, %81
  %68 = phi %"class.std::__1::basic_string"* [ %82, %81 ], [ %63, %60 ]
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %71 to i64
  %76 = select i1 %72, i64 %74, i64 %75
  %77 = icmp eq i64 %76, 11
  br i1 %77, label %78, label %81

78:                                               ; preds = %67
  %79 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %68, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN17component_updater12_GLOBAL__N_117kSwitchFastUpdateE, i64 0, i64 0), i64 11) #9
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %78, %67
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 1
  %83 = icmp eq %"class.std::__1::basic_string"* %82, %62
  br i1 %83, label %86, label %67

84:                                               ; preds = %60, %42
  %85 = phi %"class.std::__1::basic_string"* [ %39, %42 ], [ %62, %60 ]
  store i8 0, i8* %12, align 2
  br label %110

86:                                               ; preds = %78, %81
  %87 = phi %"class.std::__1::basic_string"* [ %68, %78 ], [ %62, %81 ]
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %90 = icmp ne %"class.std::__1::basic_string"* %87, %88
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %12, align 2
  %92 = icmp eq %"class.std::__1::basic_string"* %89, %88
  br i1 %92, label %110, label %93

93:                                               ; preds = %86, %107
  %94 = phi %"class.std::__1::basic_string"* [ %108, %107 ], [ %89, %86 ]
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = zext i8 %97 to i64
  %102 = select i1 %98, i64 %100, i64 %101
  %103 = icmp eq i64 %102, 13
  br i1 %103, label %104, label %107

104:                                              ; preds = %93
  %105 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %94, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN17component_updater12_GLOBAL__N_119kSwitchDisablePingsE, i64 0, i64 0), i64 13) #9
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %104, %93
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 1
  %109 = icmp eq %"class.std::__1::basic_string"* %108, %88
  br i1 %109, label %112, label %93

110:                                              ; preds = %86, %84
  %111 = phi %"class.std::__1::basic_string"* [ %85, %84 ], [ %88, %86 ]
  store i8 1, i8* %13, align 1
  br label %139

112:                                              ; preds = %104, %107
  %113 = phi %"class.std::__1::basic_string"* [ %94, %104 ], [ %88, %107 ]
  %114 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %113, %114
  %117 = zext i1 %116 to i8
  store i8 %117, i8* %13, align 1
  %118 = icmp eq %"class.std::__1::basic_string"* %115, %114
  br i1 %118, label %139, label %119

119:                                              ; preds = %112, %133
  %120 = phi %"class.std::__1::basic_string"* [ %134, %133 ], [ %115, %112 ]
  %121 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %123 to i64
  %128 = select i1 %124, i64 %126, i64 %127
  %129 = icmp eq i64 %128, 12
  br i1 %129, label %130, label %133

130:                                              ; preds = %119
  %131 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %120, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN17component_updater12_GLOBAL__N_123kSwitchTestRequestParamE, i64 0, i64 0), i64 12) #9
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %130, %119
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 1
  %135 = icmp eq %"class.std::__1::basic_string"* %134, %114
  br i1 %135, label %136, label %119

136:                                              ; preds = %133, %130
  %137 = phi %"class.std::__1::basic_string"* [ %120, %130 ], [ %114, %133 ]
  %138 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  br label %139

139:                                              ; preds = %110, %112, %136
  %140 = phi %"class.std::__1::basic_string"* [ %114, %112 ], [ %138, %136 ], [ %111, %110 ]
  %141 = phi %"class.std::__1::basic_string"* [ %114, %112 ], [ %137, %136 ], [ %111, %110 ]
  %142 = icmp ne %"class.std::__1::basic_string"* %141, %140
  %143 = zext i1 %142 to i8
  store i8 %143, i8* %14, align 4
  %144 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #9
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN17component_updater12_GLOBAL__N_117GetSwitchArgumentERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPKc(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::vector"* nonnull dereferenceable(24) %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN17component_updater12_GLOBAL__N_116kSwitchUrlSourceE, i64 0, i64 0))
  %148 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  %152 = load i64, i64* %146, align 8
  %153 = zext i8 %150 to i64
  %154 = select i1 %151, i64 %152, i64 %153
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %139
  %157 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %157) #9
  %158 = load i8*, i8** %145, align 8
  %159 = select i1 %151, i8* %158, i8* %144
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %6, i8* %159, i64 %154) #9
  %160 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %16, %class.GURL* nonnull dereferenceable(120) %6) #9
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %157) #9
  br label %161

161:                                              ; preds = %156, %139
  %162 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #9
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %165 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN17component_updater12_GLOBAL__N_117GetSwitchArgumentERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPKc(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::vector"* nonnull dereferenceable(24) %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN17component_updater12_GLOBAL__N_113kInitialDelayE, i64 0, i64 0))
  %166 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #9
  store double 0.000000e+00, double* %8, align 8
  %167 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  %171 = load i8*, i8** %163, align 8
  %172 = select i1 %170, i8* %171, i8* %162
  %173 = load i64, i64* %164, align 8
  %174 = zext i8 %169 to i64
  %175 = select i1 %170, i64 %173, i64 %174
  %176 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8* %172, i64 %175, double* nonnull %8) #9
  br i1 %176, label %177, label %181

177:                                              ; preds = %161
  %178 = bitcast double* %8 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast double* %15 to i64*
  store i64 %179, i64* %180, align 8
  br label %181

181:                                              ; preds = %177, %161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #9
  %182 = load i8, i8* %168, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %181
  %185 = load i8*, i8** %163, align 8
  call void @_ZdlPv(i8* %185) #10
  br label %186

186:                                              ; preds = %181, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #9
  %187 = load i8, i8* %149, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %186
  %190 = load i8*, i8** %145, align 8
  call void @_ZdlPv(i8* %190) #10
  br label %191

191:                                              ; preds = %186, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #9
  %192 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %193 = icmp eq %"class.std::__1::basic_string"* %192, null
  br i1 %193, label %215, label %194

194:                                              ; preds = %191
  %195 = bitcast %"class.std::__1::basic_string"* %192 to i8*
  %196 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %197 = icmp eq %"class.std::__1::basic_string"* %196, %192
  br i1 %197, label %213, label %198

198:                                              ; preds = %194, %208
  %199 = phi %"class.std::__1::basic_string"* [ %200, %208 ], [ %196, %194 ]
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 -1
  %201 = bitcast %"class.std::__1::basic_string"* %200 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %200, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  call void @_ZdlPv(i8* %207) #10
  br label %208

208:                                              ; preds = %205, %198
  %209 = icmp eq %"class.std::__1::basic_string"* %200, %192
  br i1 %209, label %210, label %198

210:                                              ; preds = %208
  %211 = bitcast %"class.std::__1::vector"* %3 to i8**
  %212 = load i8*, i8** %211, align 8
  br label %213

213:                                              ; preds = %210, %194
  %214 = phi i8* [ %212, %210 ], [ %195, %194 ]
  store %"class.std::__1::basic_string"* %192, %"class.std::__1::basic_string"** %19, align 8
  call void @_ZdlPv(i8* %214) #10
  br label %215

215:                                              ; preds = %191, %213
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN17component_updater12_GLOBAL__N_117GetSwitchArgumentERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPKc(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i8*) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = icmp eq %"class.std::__1::basic_string"* %6, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %18

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9
  br label %90

18:                                               ; preds = %10, %81
  %19 = phi %"class.std::__1::basic_string"* [ %8, %10 ], [ %82, %81 ]
  %20 = phi %"class.std::__1::basic_string"* [ %6, %10 ], [ %83, %81 ]
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %33

30:                                               ; preds = %18
  %31 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %32 = zext i8 %23 to i64
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi i8* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i64 [ %29, %25 ], [ %32, %30 ]
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = ptrtoint i8* %34 to i64
  %39 = icmp slt i64 %35, 1
  br i1 %39, label %81, label %40

40:                                               ; preds = %33, %48
  %41 = phi i64 [ %51, %48 ], [ %35, %33 ]
  %42 = phi i8* [ %49, %48 ], [ %34, %33 ]
  %43 = call i8* @memchr(i8* %42, i32 61, i64 %41) #9
  %44 = icmp eq i8* %43, null
  br i1 %44, label %81, label %45

45:                                               ; preds = %40
  %46 = load i8, i8* %43, align 1
  %47 = icmp eq i8 %46, 61
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds i8, i8* %43, i64 1
  %50 = ptrtoint i8* %49 to i64
  %51 = sub i64 %37, %50
  %52 = icmp slt i64 %51, 1
  br i1 %52, label %81, label %40

53:                                               ; preds = %45
  %54 = ptrtoint i8* %43 to i64
  %55 = icmp eq i8* %43, %36
  %56 = sub i64 %54, %38
  %57 = icmp eq i64 %56, -1
  %58 = or i1 %55, %57
  br i1 %58, label %81, label %59

59:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %60 = bitcast %"class.std::__1::basic_string"* %20 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %20, i64 0, i64 %56, %"class.std::__1::allocator"* dereferenceable(1) %60) #9
  %61 = call i64 @strlen(i8* %2) #9
  %62 = load i8, i8* %13, align 1
  %63 = icmp slt i8 %62, 0
  %64 = load i64, i64* %14, align 8
  %65 = zext i8 %62 to i64
  %66 = select i1 %63, i64 %64, i64 %65
  %67 = icmp eq i64 %61, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %59
  %69 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* %2, i64 %61) #9
  %70 = icmp eq i32 %69, 0
  %71 = load i8, i8* %13, align 1
  br label %72

72:                                               ; preds = %59, %68
  %73 = phi i8 [ %71, %68 ], [ %62, %59 ]
  %74 = phi i1 [ %70, %68 ], [ false, %59 ]
  %75 = icmp slt i8 %73, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %77) #10
  br label %78

78:                                               ; preds = %72, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  br i1 %74, label %85, label %79

79:                                               ; preds = %78
  %80 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  br label %81

81:                                               ; preds = %48, %40, %79, %33, %53
  %82 = phi %"class.std::__1::basic_string"* [ %80, %79 ], [ %19, %33 ], [ %19, %53 ], [ %19, %40 ], [ %19, %48 ]
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %84 = icmp eq %"class.std::__1::basic_string"* %83, %82
  br i1 %84, label %88, label %18

85:                                               ; preds = %78
  %86 = bitcast %"class.std::__1::basic_string"* %20 to %"class.std::__1::allocator"*
  %87 = add nuw i64 %56, 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %20, i64 %87, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %86) #9
  br label %90

88:                                               ; preds = %81
  %89 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #9
  br label %90

90:                                               ; preds = %85, %88, %16
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8*, i64, double*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy26BackgroundDownloadsEnabledEv(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy19DeltaUpdatesEnabledEv(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy10FastUpdateEv(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy12PingsEnabledEv(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy11TestRequestEv(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy17UrlSourceOverrideEv(%class.GURL* noalias sret, %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %1, i64 0, i32 7
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %3) #9
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK17component_updater39ComponentUpdaterCommandLineConfigPolicy12InitialDelayEv(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 6
  %3 = load double, double* %2, align 8
  ret double %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyD2Ev(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN17component_updater39ComponentUpdaterCommandLineConfigPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 7
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17component_updater39ComponentUpdaterCommandLineConfigPolicyD0Ev(%"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN17component_updater39ComponentUpdaterCommandLineConfigPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy", %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0, i64 0, i32 7
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #9
  %4 = bitcast %"class.component_updater::ComponentUpdaterCommandLineConfigPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
