; ModuleID = '../../v8/src/heap/cppgc/marking-verifier.cc'
source_filename = "../../v8/src/heap/cppgc/marking-verifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::GCInfoTable" = type { %"class.v8::PageAllocator"*, %"struct.cppgc::internal::GCInfo"*, i8*, i16, i16, %"class.v8::base::Mutex" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"struct.cppgc::internal::GCInfo" = type { void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.cppgc::internal::MarkingVerifierBase" = type { %"class.cppgc::internal::ConservativeTracingVisitor", %"class.heap::base::StackVisitor", %"class.cppgc::internal::VerificationState"*, %"class.std::__1::unique_ptr.157", %"class.std::__1::unordered_set.163", %"class.std::__1::unordered_set.163", %"class.std::__1::unordered_set.163"*, i64 }
%"class.cppgc::internal::ConservativeTracingVisitor" = type { i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::Visitor"* }
%"class.cppgc::internal::PageBackend" = type opaque
%"class.heap::base::StackVisitor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.cppgc::Visitor"* }
%"class.std::__1::unordered_set.163" = type { %"class.std::__1::__hash_table.164" }
%"class.std::__1::__hash_table.164" = type <{ %"class.std::__1::unique_ptr.165", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184", [4 x i8] }>
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base.168"** }
%"struct.std::__1::__hash_node_base.168" = type { %"struct.std::__1::__hash_node_base.168"* }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::__bucket_list_deallocator.170" }
%"class.std::__1::__bucket_list_deallocator.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base.168" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { float }
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.29", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.151", i64, i8, [7 x i8] }>
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.11" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.22" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::set.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.38", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.45", %"class.cppgc::Platform"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.40" }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.69", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.109", i8, [7 x i8] }>
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.std::__1::shared_ptr.69" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.70" }
%"class.std::__1::shared_ptr.70" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.90" }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.91" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.92" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.93" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.94" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.72", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.87", [4 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.heap::base::Worklist.90" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.95", i64 }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.92"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.91"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.93"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.94"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.90"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist.98"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist.98" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.102", i64 }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.112", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.124", %"class.std::__1::unique_ptr.131", i8, i8, [6 x i8] }>
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.126" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist.98" }
%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.137" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.143", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.std::__1::unique_ptr.145"*, %"class.std::__1::unique_ptr.145"*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::unique_ptr.145" = type opaque
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::unique_ptr.145"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { i32* }
%"class.cppgc::internal::VerificationState" = type { %"class.cppgc::internal::HeapObjectHeader"* }
%"class.cppgc::internal::MarkingVerifier" = type { %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::VerificationState" }
%"class.cppgc::internal::HeapVisitor" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.168", i64, %"class.cppgc::internal::HeapObjectHeader"* }
%"class.cppgc::internal::LargePage" = type { %"class.cppgc::internal::BasePage.base", i64 }
%"class.cppgc::internal::BasePage.base" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8 }>
%"class.cppgc::internal::NormalPage::IteratorImpl" = type { %"class.cppgc::internal::HeapObjectHeader"*, i8*, i64 }
%"class.cppgc::internal::NormalPage" = type { %"class.cppgc::internal::BasePage.base", i64, %"class.cppgc::internal::PlatformAwareObjectStartBitmap" }
%"class.cppgc::internal::PlatformAwareObjectStartBitmap" = type { %"class.cppgc::internal::ObjectStartBitmap" }
%"class.cppgc::internal::ObjectStartBitmap" = type { i8*, %"struct.std::__1::array.196" }
%"struct.std::__1::array.196" = type { [2048 x i8] }
%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor" = type { %"class.cppgc::Visitor", %"class.cppgc::internal::VerificationState"* }
%"class.cppgc::SourceLocation" = type { i8*, i8*, i64 }

$_ZN5cppgc8internal19MarkingVerifierBaseD0Ev = comdat any

$_ZN5cppgc8internal19MarkingVerifierBaseD2Ev = comdat any

$_ZN5cppgc8internal15MarkingVerifierD0Ev = comdat any

$_ZN5cppgc8internal11HeapVisitorINS0_19MarkingVerifierBaseEE8TraverseEPNS0_8BasePageE = comdat any

$_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZN5cppgc7VisitorD2Ev = comdat any

$_ZN5cppgc7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ = comdat any

$_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em = comdat any

$_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE = comdat any

$_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE = comdat any

$_ZN5cppgc7Visitor14VisitEphemeronEPKvS2_NS_15TraceDescriptorE = comdat any

$_ZN5cppgc7Visitor22HandleMovableReferenceEPPKv = comdat any

$_ZTVN5cppgc8internal15MarkingVerifierE = comdat any

@_ZTVN5cppgc8internal19MarkingVerifierBaseE = hidden unnamed_addr constant { [7 x i8*], [3 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*)* @_ZN5cppgc8internal19MarkingVerifierBaseD2Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*)* @_ZN5cppgc8internal19MarkingVerifierBaseD0Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)* @_ZN5cppgc8internal26ConservativeTracingVisitor35VisitFullyConstructedConservativelyERNS0_16HeapObjectHeaderE to i8*), i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)* @_ZN5cppgc8internal19MarkingVerifierBase33VisitInConstructionConservativelyERNS0_16HeapObjectHeaderEPFvPNS0_26ConservativeTracingVisitorERKS2_E to i8*), i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, i8*)* @_ZN5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv to i8*)], [3 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, i8*)* @_ZThn32_N5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"in_construction_objects_stack_.size() <= in_construction_objects_heap_.size()\00", align 1
@.str.2 = private unnamed_addr constant [82 x i8] c"in_construction_objects_heap_.end() != in_construction_objects_heap_.find(header)\00", align 1
@.str.3 = private unnamed_addr constant [86 x i8] c"MarkingVerifier: Encountered unmarked object.\0A#\0A# Hint:\0A#   %s (%p)\0A#     \5C-> %s (%p)\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"Stack\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"header.IsMarked()\00", align 1
@_ZTVN5cppgc8internal15MarkingVerifierE = linkonce_odr hidden unnamed_addr constant { [7 x i8*], [3 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*)* @_ZN5cppgc8internal19MarkingVerifierBaseD2Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::MarkingVerifier"*)* @_ZN5cppgc8internal15MarkingVerifierD0Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)* @_ZN5cppgc8internal26ConservativeTracingVisitor35VisitFullyConstructedConservativelyERNS0_16HeapObjectHeaderE to i8*), i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapObjectHeader"*, void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)*)* @_ZN5cppgc8internal19MarkingVerifierBase33VisitInConstructionConservativelyERNS0_16HeapObjectHeaderEPFvPNS0_26ConservativeTracingVisitorERKS2_E to i8*), i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, i8*)* @_ZN5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv to i8*)], [3 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.cppgc::internal::MarkingVerifierBase"*, i8*)* @_ZThn32_N5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv to i8*)] }, comdat, align 8
@_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E = external local_unnamed_addr global %"class.cppgc::internal::GCInfoTable"*, align 8
@_ZTVN5cppgc8internal12_GLOBAL__N_119VerificationVisitorE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::Visitor"*)* @_ZN5cppgc7VisitorD2Ev to i8*), i8* bitcast (void (%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"*)* @_ZN5cppgc8internal12_GLOBAL__N_119VerificationVisitorD0Ev to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN5cppgc7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)* @_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em to i8*), i8* bitcast (void (%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN5cppgc8internal12_GLOBAL__N_119VerificationVisitor5VisitEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN5cppgc8internal12_GLOBAL__N_119VerificationVisitor9VisitWeakEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES4_ES4_ to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)* @_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"*)* @_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN5cppgc7Visitor14VisitEphemeronEPKvS2_NS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN5cppgc8internal12_GLOBAL__N_119VerificationVisitor18VisitWeakContainerEPKvNS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES4_ES4_ to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8**)* @_ZN5cppgc7Visitor22HandleMovableReferenceEPPKv to i8*)] }, align 8

@_ZN5cppgc8internal19MarkingVerifierBaseC1ERNS0_8HeapBaseERNS0_17VerificationStateENSt3__110unique_ptrINS_7VisitorENS6_14default_deleteIS8_EEEE = hidden unnamed_addr alias void (%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::VerificationState"*, %"class.cppgc::Visitor"*), void (%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::VerificationState"*, %"class.cppgc::Visitor"*)* @_ZN5cppgc8internal19MarkingVerifierBaseC2ERNS0_8HeapBaseERNS0_17VerificationStateENSt3__110unique_ptrINS_7VisitorENS6_14default_deleteIS8_EEEE
@_ZN5cppgc8internal15MarkingVerifierC1ERNS0_8HeapBaseE = hidden unnamed_addr alias void (%"class.cppgc::internal::MarkingVerifier"*, %"class.cppgc::internal::HeapBase"*), void (%"class.cppgc::internal::MarkingVerifier"*, %"class.cppgc::internal::HeapBase"*)* @_ZN5cppgc8internal15MarkingVerifierC2ERNS0_8HeapBaseE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal19MarkingVerifierBaseC2ERNS0_8HeapBaseERNS0_17VerificationStateENSt3__110unique_ptrINS_7VisitorENS6_14default_deleteIS8_EEEE(%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapBase"* dereferenceable(448), %"class.cppgc::internal::VerificationState"* dereferenceable(8), %"class.cppgc::Visitor"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.cppgc::Visitor"* %3 to i64
  %6 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::PageBackend"** %7, align 8
  tail call void @_ZN5cppgc8internal26ConservativeTracingVisitorC2ERNS0_8HeapBaseERNS0_11PageBackendERNS_7VisitorE(%"class.cppgc::internal::ConservativeTracingVisitor"* %6, %"class.cppgc::internal::HeapBase"* dereferenceable(448) %1, %"class.cppgc::internal::PageBackend"* %8, %"class.cppgc::Visitor"* dereferenceable(8) %3) #9
  %9 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal19MarkingVerifierBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal19MarkingVerifierBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 2
  store %"class.cppgc::internal::VerificationState"* %2, %"class.cppgc::internal::VerificationState"** %11, align 8
  %12 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::unique_ptr.157"* %12 to i64*
  store i64 %5, i64* %13, align 8
  %14 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 4, i32 0, i32 3
  %16 = bitcast %"class.std::__1::__compressed_pair.184"* %15 to i32*
  %17 = bitcast %"class.std::__1::unordered_set.163"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %16, align 4
  %18 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5, i32 0, i32 3
  %20 = bitcast %"class.std::__1::__compressed_pair.184"* %19 to i32*
  %21 = bitcast %"class.std::__1::unordered_set.163"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %20, align 4
  %22 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 6
  store %"class.std::__1::unordered_set.163"* %14, %"class.std::__1::unordered_set.163"** %22, align 8
  %23 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 7
  store i64 0, i64* %23, align 8
  ret void
}

declare void @_ZN5cppgc8internal26ConservativeTracingVisitorC2ERNS0_8HeapBaseERNS0_11PageBackendERNS_7VisitorE(%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapBase"* dereferenceable(448), %"class.cppgc::internal::PageBackend"*, %"class.cppgc::Visitor"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal19MarkingVerifierBase3RunENS_18EmbedderStackStateEmm(%"class.cppgc::internal::MarkingVerifierBase"*, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %6 = bitcast %"class.cppgc::internal::MarkingVerifierBase"* %0 to %"class.cppgc::internal::HeapVisitor"*
  %7 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %7, align 8
  %9 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %8, i64 0, i32 1, i32 1, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %8, i64 0, i32 1, i32 1, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr"* %10, %12
  br i1 %13, label %31, label %14

14:                                               ; preds = %4, %28
  %15 = phi %"class.std::__1::unique_ptr"* [ %29, %28 ], [ %10, %4 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %16, align 8
  %18 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"*** %18, align 8
  %20 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %17, i64 0, i32 1, i32 0, i32 1
  %21 = load %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"*** %20, align 8
  %22 = icmp eq %"class.cppgc::internal::BasePage"** %19, %21
  br i1 %22, label %28, label %23

23:                                               ; preds = %14, %23
  %24 = phi %"class.cppgc::internal::BasePage"** [ %26, %23 ], [ %19, %14 ]
  %25 = load %"class.cppgc::internal::BasePage"*, %"class.cppgc::internal::BasePage"** %24, align 8
  tail call void @_ZN5cppgc8internal11HeapVisitorINS0_19MarkingVerifierBaseEE8TraverseEPNS0_8BasePageE(%"class.cppgc::internal::HeapVisitor"* %6, %"class.cppgc::internal::BasePage"* %25) #9
  %26 = getelementptr inbounds %"class.cppgc::internal::BasePage"*, %"class.cppgc::internal::BasePage"** %24, i64 1
  %27 = icmp eq %"class.cppgc::internal::BasePage"** %26, %21
  br i1 %27, label %28, label %23

28:                                               ; preds = %23, %14
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %30 = icmp eq %"class.std::__1::unique_ptr"* %29, %12
  br i1 %30, label %31, label %14

31:                                               ; preds = %28, %4
  %32 = icmp eq i32 %1, 0
  br i1 %32, label %33, label %68

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 6
  store %"class.std::__1::unordered_set.163"* %34, %"class.std::__1::unordered_set.163"** %35, align 8
  %36 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %7, align 8
  %37 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %36, i64 0, i32 7, i32 0, i32 0, i32 0
  %38 = load %"class.heap::base::Stack"*, %"class.heap::base::Stack"** %37, align 8
  %39 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 1
  tail call void @_ZNK4heap4base5Stack21IteratePointersUnsafeEPNS0_12StackVisitorEm(%"class.heap::base::Stack"* %38, %"class.heap::base::StackVisitor"* %39, i64 %2) #9
  %40 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp ugt i64 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %48 = bitcast %"struct.std::__1::__hash_node_base.168"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %68, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %5 to i8*
  %53 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %5 to i64*
  %54 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 4, i32 0
  br label %55

55:                                               ; preds = %51, %64
  %56 = phi i64 [ %49, %51 ], [ %66, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  %57 = inttoptr i64 %56 to %"struct.std::__1::__hash_node"*
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %57, i64 0, i32 2
  %59 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %53, align 8
  %61 = call %"struct.std::__1::__hash_node_base.168"* @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.164"* %54, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %5) #9
  %62 = icmp eq %"struct.std::__1::__hash_node_base.168"* %61, null
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %55
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.2, i64 0, i64 0)) #10
  unreachable

64:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  %65 = inttoptr i64 %56 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %55

68:                                               ; preds = %64, %46, %31
  ret void
}

declare void @_ZNK4heap4base5Stack21IteratePointersUnsafeEPNS0_12StackVisitorEm(%"class.heap::base::Stack"*, %"class.heap::base::StackVisitor"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5cppgc8internal17VerificationState12VerifyMarkedEPKv(%"class.cppgc::internal::VerificationState"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 -8
  %4 = bitcast i8* %3 to %"class.cppgc::internal::HeapObjectHeader"*
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load i16, i16* %6, align 2
  %8 = and i16 %7, 1
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %27

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %0, i64 0, i32 0
  %12 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %11, align 8
  %13 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = tail call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* nonnull %12) #9
  %16 = extractvalue { i8*, i8 } %15, 0
  %17 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %11, align 8
  %18 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %17, i64 1
  %21 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %20 to i8*
  br label %22

22:                                               ; preds = %10, %14, %19
  %23 = phi i8* [ %16, %19 ], [ %16, %14 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), %10 ]
  %24 = phi i8* [ %21, %19 ], [ null, %14 ], [ null, %10 ]
  %25 = tail call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* %4) #9
  %26 = extractvalue { i8*, i8 } %25, 0
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.3, i64 0, i64 0), i8* %23, i8* %24, i8* %26, i8* %1) #10
  unreachable

27:                                               ; preds = %2
  ret void
}

declare { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal19MarkingVerifierBase33VisitInConstructionConservativelyERNS0_16HeapObjectHeaderEPFvPNS0_26ConservativeTracingVisitorERKS2_E(%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8), void (%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"*)* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %5 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 6
  %7 = load %"class.std::__1::unordered_set.163"*, %"class.std::__1::unordered_set.163"** %6, align 8
  %8 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  store %"class.cppgc::internal::HeapObjectHeader"* %1, %"class.cppgc::internal::HeapObjectHeader"** %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.163", %"class.std::__1::unordered_set.163"* %7, i64 0, i32 0
  %10 = call %"struct.std::__1::__hash_node_base.168"* @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.164"* %9, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %4) #9
  %11 = icmp eq %"struct.std::__1::__hash_node_base.168"* %10, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br i1 %11, label %12, label %35

12:                                               ; preds = %3
  %13 = load %"class.std::__1::unordered_set.163"*, %"class.std::__1::unordered_set.163"** %6, align 8
  %14 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  store %"class.cppgc::internal::HeapObjectHeader"* %1, %"class.cppgc::internal::HeapObjectHeader"** %5, align 8
  %15 = getelementptr inbounds %"class.std::__1::unordered_set.163", %"class.std::__1::unordered_set.163"* %13, i64 0, i32 0
  %16 = call { %"struct.std::__1::__hash_node_base.168"*, i8 } @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.164"* %15, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %5, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %17 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 2
  %18 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %17, align 8
  %19 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %18, i64 0, i32 0
  %20 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %19, align 8
  %21 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %20, null
  %22 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 2
  %23 = load i16, i16* %22, align 2
  %24 = and i16 %23, 1
  %25 = icmp eq i16 %24, 0
  br i1 %21, label %26, label %31

26:                                               ; preds = %12
  br i1 %25, label %27, label %35

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 1
  %29 = call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* %1) #9
  %30 = extractvalue { i8*, i8 } %29, 0
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* null, i8* %30, %"class.cppgc::internal::HeapObjectHeader"* %28) #10
  unreachable

31:                                               ; preds = %12
  br i1 %25, label %32, label %33, !prof !2

32:                                               ; preds = %31
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0)) #10
  unreachable

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 0
  call void %2(%"class.cppgc::internal::ConservativeTracingVisitor"* %34, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %1) #9
  br label %35

35:                                               ; preds = %3, %26, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv(%"class.cppgc::internal::MarkingVerifierBase"*, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 0
  tail call void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededEPKv(%"class.cppgc::internal::ConservativeTracingVisitor"* %3, i8* %1) #9
  ret void
}

declare void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededEPKv(%"class.cppgc::internal::ConservativeTracingVisitor"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N5cppgc8internal19MarkingVerifierBase12VisitPointerEPKv(%"class.cppgc::internal::MarkingVerifierBase"*, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 -1, i32 5, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.180"* %3 to %"class.cppgc::internal::ConservativeTracingVisitor"*
  tail call void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededEPKv(%"class.cppgc::internal::ConservativeTracingVisitor"* %4, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5cppgc8internal19MarkingVerifierBase21VisitHeapObjectHeaderEPNS0_16HeapObjectHeaderE(%"class.cppgc::internal::MarkingVerifierBase"*, %"class.cppgc::internal::HeapObjectHeader"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 2
  %4 = load i16, i16* %3, align 2
  %5 = and i16 %4, 1
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %50, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 2
  %9 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %8, align 8
  %10 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %9, i64 0, i32 0
  store %"class.cppgc::internal::HeapObjectHeader"* %1, %"class.cppgc::internal::HeapObjectHeader"** %10, align 8
  %11 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = and i16 %12, 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.cppgc::Visitor"*, %"class.cppgc::Visitor"** %16, align 8
  %18 = lshr i16 %12, 2
  %19 = load %"class.cppgc::internal::GCInfoTable"*, %"class.cppgc::internal::GCInfoTable"** @_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E, align 8
  %20 = getelementptr inbounds %"class.cppgc::internal::GCInfoTable", %"class.cppgc::internal::GCInfoTable"* %19, i64 0, i32 1
  %21 = load %"struct.cppgc::internal::GCInfo"*, %"struct.cppgc::internal::GCInfo"** %20, align 8
  %22 = zext i16 %18 to i64
  %23 = getelementptr inbounds %"struct.cppgc::internal::GCInfo", %"struct.cppgc::internal::GCInfo"* %21, i64 %22, i32 1
  %24 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %23, align 8
  %25 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 1
  %26 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %25 to i8*
  tail call void %24(%"class.cppgc::Visitor"* %17, i8* %26) #9
  br label %29

27:                                               ; preds = %7
  %28 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 0
  tail call void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededERNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"* %28, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %1) #9
  br label %29

29:                                               ; preds = %27, %15
  %30 = load i16, i16* %3, align 2
  %31 = icmp ugt i16 %30, 1
  br i1 %31, label %39, label %32

32:                                               ; preds = %29
  %33 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %1 to i64
  %34 = and i64 %33, -131072
  %35 = or i64 %34, 4096
  %36 = inttoptr i64 %35 to %"class.cppgc::internal::LargePage"*
  %37 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %36, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %43

39:                                               ; preds = %29
  %40 = lshr i16 %30, 1
  %41 = zext i16 %40 to i64
  %42 = shl nuw nsw i64 %41, 3
  br label %43

43:                                               ; preds = %32, %39
  %44 = phi i64 [ %38, %32 ], [ %42, %39 ]
  %45 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 7
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %44
  store i64 %47, i64* %45, align 8
  %48 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %8, align 8
  %49 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %48, i64 0, i32 0
  store %"class.cppgc::internal::HeapObjectHeader"* null, %"class.cppgc::internal::HeapObjectHeader"** %49, align 8
  br label %50

50:                                               ; preds = %2, %43
  ret i1 true
}

declare void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededERNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal15MarkingVerifierC2ERNS0_8HeapBaseE(%"class.cppgc::internal::MarkingVerifier"*, %"class.cppgc::internal::HeapBase"* dereferenceable(448)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal15MarkingVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal15MarkingVerifierE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 1
  %6 = tail call i8* @_Znwm(i64 16) #11
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5cppgc8internal12_GLOBAL__N_119VerificationVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to %"class.cppgc::internal::VerificationState"**
  store %"class.cppgc::internal::VerificationState"* %5, %"class.cppgc::internal::VerificationState"** %9, align 8
  %10 = ptrtoint i8* %6 to i64
  %11 = bitcast i8* %6 to %"class.cppgc::Visitor"*
  %12 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::PageBackend"** %13, align 8
  tail call void @_ZN5cppgc8internal26ConservativeTracingVisitorC2ERNS0_8HeapBaseERNS0_11PageBackendERNS_7VisitorE(%"class.cppgc::internal::ConservativeTracingVisitor"* %12, %"class.cppgc::internal::HeapBase"* dereferenceable(448) %1, %"class.cppgc::internal::PageBackend"* %14, %"class.cppgc::Visitor"* nonnull dereferenceable(8) %11) #9
  %15 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 2
  store %"class.cppgc::internal::VerificationState"* %5, %"class.cppgc::internal::VerificationState"** %15, align 8
  %16 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 3
  %17 = bitcast %"class.std::__1::unique_ptr.157"* %16 to i64*
  store i64 %10, i64* %17, align 8
  %18 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 4
  %19 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %20 = bitcast %"class.std::__1::__compressed_pair.184"* %19 to i32*
  %21 = bitcast %"class.std::__1::unordered_set.163"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %20, align 4
  %22 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 5
  %23 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 5, i32 0, i32 3
  %24 = bitcast %"class.std::__1::__compressed_pair.184"* %23 to i32*
  %25 = bitcast %"class.std::__1::unordered_set.163"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %24, align 4
  %26 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 6
  store %"class.std::__1::unordered_set.163"* %18, %"class.std::__1::unordered_set.163"** %26, align 8
  %27 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0, i32 7
  store i64 0, i64* %27, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal15MarkingVerifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal15MarkingVerifierE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %28 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %5, i64 0, i32 0
  store %"class.cppgc::internal::HeapObjectHeader"* null, %"class.cppgc::internal::HeapObjectHeader"** %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal19MarkingVerifierBaseD0Ev(%"class.cppgc::internal::MarkingVerifierBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5cppgc8internal19MarkingVerifierBaseD2Ev(%"class.cppgc::internal::MarkingVerifierBase"* %0) #9
  %2 = bitcast %"class.cppgc::internal::MarkingVerifierBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

declare void @_ZN5cppgc8internal26ConservativeTracingVisitor35VisitFullyConstructedConservativelyERNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal19MarkingVerifierBaseD2Ev(%"class.cppgc::internal::MarkingVerifierBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal19MarkingVerifierBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5cppgc8internal19MarkingVerifierBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.168"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.std::__1::__hash_node_base.168"* [ %10, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %8, i64 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %9, align 8
  %11 = bitcast %"struct.std::__1::__hash_node_base.168"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  %12 = icmp eq %"struct.std::__1::__hash_node_base.168"* %10, null
  br i1 %12, label %13, label %7

13:                                               ; preds = %7, %1
  %14 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %14, align 8
  store %"struct.std::__1::__hash_node_base.168"** null, %"struct.std::__1::__hash_node_base.168"*** %14, align 8
  %16 = icmp eq %"struct.std::__1::__hash_node_base.168"** %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.std::__1::__hash_node_base.168"** %15 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.168"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base.168"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.168"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  %28 = icmp eq %"struct.std::__1::__hash_node_base.168"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.168"** null, %"struct.std::__1::__hash_node_base.168"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.168"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.168"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifierBase", %"class.cppgc::internal::MarkingVerifierBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.cppgc::Visitor"*, %"class.cppgc::Visitor"** %36, align 8
  store %"class.cppgc::Visitor"* null, %"class.cppgc::Visitor"** %36, align 8
  %38 = icmp eq %"class.cppgc::Visitor"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.cppgc::Visitor"* %37 to void (%"class.cppgc::Visitor"*)***
  %41 = load void (%"class.cppgc::Visitor"*)**, void (%"class.cppgc::Visitor"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.cppgc::Visitor"*)*, void (%"class.cppgc::Visitor"*)** %41, i64 1
  %43 = load void (%"class.cppgc::Visitor"*)*, void (%"class.cppgc::Visitor"*)** %42, align 8
  tail call void %43(%"class.cppgc::Visitor"* nonnull %37) #9
  br label %44

44:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal15MarkingVerifierD0Ev(%"class.cppgc::internal::MarkingVerifier"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::MarkingVerifier", %"class.cppgc::internal::MarkingVerifier"* %0, i64 0, i32 0
  tail call void @_ZN5cppgc8internal19MarkingVerifierBaseD2Ev(%"class.cppgc::internal::MarkingVerifierBase"* %2) #9
  %3 = bitcast %"class.cppgc::internal::MarkingVerifier"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal11HeapVisitorINS0_19MarkingVerifierBaseEE8TraverseEPNS0_8BasePageE(%"class.cppgc::internal::HeapVisitor"*, %"class.cppgc::internal::BasePage"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.cppgc::internal::NormalPage::IteratorImpl", align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %7, label %61

7:                                                ; preds = %2
  %8 = bitcast %"class.cppgc::internal::BasePage"* %1 to %"class.cppgc::internal::LargePage"*
  %9 = tail call %"class.cppgc::internal::HeapObjectHeader"* @_ZN5cppgc8internal9LargePage12ObjectHeaderEv(%"class.cppgc::internal::LargePage"* %8) #9
  %10 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %9, i64 0, i32 2
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, 1
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %60, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.cppgc::internal::HeapVisitor", %"class.cppgc::internal::HeapVisitor"* %0, i64 40
  %16 = bitcast %"class.cppgc::internal::HeapVisitor"* %15 to %"class.cppgc::internal::VerificationState"**
  %17 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %16, align 8
  %18 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %17, i64 0, i32 0
  store %"class.cppgc::internal::HeapObjectHeader"* %9, %"class.cppgc::internal::HeapObjectHeader"** %18, align 8
  %19 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %9, i64 0, i32 1
  %20 = load i16, i16* %19, align 2
  %21 = and i16 %20, 1
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.cppgc::internal::HeapVisitor", %"class.cppgc::internal::HeapVisitor"* %0, i64 48
  %25 = bitcast %"class.cppgc::internal::HeapVisitor"* %24 to %"class.cppgc::Visitor"**
  %26 = load %"class.cppgc::Visitor"*, %"class.cppgc::Visitor"** %25, align 8
  %27 = lshr i16 %20, 2
  %28 = load %"class.cppgc::internal::GCInfoTable"*, %"class.cppgc::internal::GCInfoTable"** @_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E, align 8
  %29 = getelementptr inbounds %"class.cppgc::internal::GCInfoTable", %"class.cppgc::internal::GCInfoTable"* %28, i64 0, i32 1
  %30 = load %"struct.cppgc::internal::GCInfo"*, %"struct.cppgc::internal::GCInfo"** %29, align 8
  %31 = zext i16 %27 to i64
  %32 = getelementptr inbounds %"struct.cppgc::internal::GCInfo", %"struct.cppgc::internal::GCInfo"* %30, i64 %31, i32 1
  %33 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %32, align 8
  %34 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %9, i64 1
  %35 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %34 to i8*
  tail call void %33(%"class.cppgc::Visitor"* %26, i8* %35) #9
  br label %38

36:                                               ; preds = %14
  %37 = bitcast %"class.cppgc::internal::HeapVisitor"* %0 to %"class.cppgc::internal::ConservativeTracingVisitor"*
  tail call void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededERNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"* %37, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %9) #9
  br label %38

38:                                               ; preds = %36, %23
  %39 = load i16, i16* %10, align 2
  %40 = icmp ugt i16 %39, 1
  br i1 %40, label %48, label %41

41:                                               ; preds = %38
  %42 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %9 to i64
  %43 = and i64 %42, -131072
  %44 = or i64 %43, 4096
  %45 = inttoptr i64 %44 to %"class.cppgc::internal::LargePage"*
  %46 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %45, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  br label %52

48:                                               ; preds = %38
  %49 = lshr i16 %39, 1
  %50 = zext i16 %49 to i64
  %51 = shl nuw nsw i64 %50, 3
  br label %52

52:                                               ; preds = %48, %41
  %53 = phi i64 [ %47, %41 ], [ %51, %48 ]
  %54 = getelementptr inbounds %"class.cppgc::internal::HeapVisitor", %"class.cppgc::internal::HeapVisitor"* %0, i64 144
  %55 = bitcast %"class.cppgc::internal::HeapVisitor"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, %53
  store i64 %57, i64* %55, align 8
  %58 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %16, align 8
  %59 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %58, i64 0, i32 0
  store %"class.cppgc::internal::HeapObjectHeader"* null, %"class.cppgc::internal::HeapObjectHeader"** %59, align 8
  br label %60

60:                                               ; preds = %52, %7, %79
  ret void

61:                                               ; preds = %2
  %62 = bitcast %"class.cppgc::internal::BasePage"* %1 to %"class.cppgc::internal::NormalPage"*
  %63 = bitcast %"class.cppgc::internal::NormalPage::IteratorImpl"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #9
  call void @_ZN5cppgc8internal10NormalPage5beginEv(%"class.cppgc::internal::NormalPage::IteratorImpl"* nonnull sret %3, %"class.cppgc::internal::NormalPage"* %62) #9
  %64 = call i8* @_ZN5cppgc8internal10NormalPage10PayloadEndEv(%"class.cppgc::internal::NormalPage"* %62) #9, !noalias !3
  %65 = bitcast i8* %64 to %"class.cppgc::internal::HeapObjectHeader"*
  %66 = getelementptr inbounds %"class.cppgc::internal::NormalPage::IteratorImpl", %"class.cppgc::internal::NormalPage::IteratorImpl"* %3, i64 0, i32 0
  %67 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %66, align 8
  %68 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %67, %65
  br i1 %68, label %79, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.cppgc::internal::HeapVisitor", %"class.cppgc::internal::HeapVisitor"* %0, i64 40
  %71 = bitcast %"class.cppgc::internal::HeapVisitor"* %70 to %"class.cppgc::internal::VerificationState"**
  %72 = getelementptr inbounds %"class.cppgc::internal::HeapVisitor", %"class.cppgc::internal::HeapVisitor"* %0, i64 48
  %73 = bitcast %"class.cppgc::internal::HeapVisitor"* %72 to %"class.cppgc::Visitor"**
  %74 = bitcast %"class.cppgc::internal::HeapVisitor"* %0 to %"class.cppgc::internal::ConservativeTracingVisitor"*
  %75 = getelementptr inbounds %"class.cppgc::internal::HeapVisitor", %"class.cppgc::internal::HeapVisitor"* %0, i64 144
  %76 = bitcast %"class.cppgc::internal::HeapVisitor"* %75 to i64*
  %77 = getelementptr inbounds %"class.cppgc::internal::NormalPage::IteratorImpl", %"class.cppgc::internal::NormalPage::IteratorImpl"* %3, i64 0, i32 1
  %78 = getelementptr inbounds %"class.cppgc::internal::NormalPage::IteratorImpl", %"class.cppgc::internal::NormalPage::IteratorImpl"* %3, i64 0, i32 2
  br label %80

79:                                               ; preds = %141, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #9
  br label %60

80:                                               ; preds = %69, %141
  %81 = phi %"class.cppgc::internal::HeapObjectHeader"* [ %67, %69 ], [ %142, %141 ]
  %82 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %81, i64 0, i32 2
  %83 = load i16, i16* %82, align 2
  %84 = and i16 %83, 1
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %128, label %86

86:                                               ; preds = %80
  %87 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %71, align 8
  %88 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %87, i64 0, i32 0
  store %"class.cppgc::internal::HeapObjectHeader"* %81, %"class.cppgc::internal::HeapObjectHeader"** %88, align 8
  %89 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %81, i64 0, i32 1
  %90 = load i16, i16* %89, align 2
  %91 = and i16 %90, 1
  %92 = icmp eq i16 %91, 0
  br i1 %92, label %104, label %93

93:                                               ; preds = %86
  %94 = load %"class.cppgc::Visitor"*, %"class.cppgc::Visitor"** %73, align 8
  %95 = lshr i16 %90, 2
  %96 = load %"class.cppgc::internal::GCInfoTable"*, %"class.cppgc::internal::GCInfoTable"** @_ZN5cppgc8internal17GlobalGCInfoTable13global_table_E, align 8
  %97 = getelementptr inbounds %"class.cppgc::internal::GCInfoTable", %"class.cppgc::internal::GCInfoTable"* %96, i64 0, i32 1
  %98 = load %"struct.cppgc::internal::GCInfo"*, %"struct.cppgc::internal::GCInfo"** %97, align 8
  %99 = zext i16 %95 to i64
  %100 = getelementptr inbounds %"struct.cppgc::internal::GCInfo", %"struct.cppgc::internal::GCInfo"* %98, i64 %99, i32 1
  %101 = load void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::Visitor"*, i8*)** %100, align 8
  %102 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %81, i64 1
  %103 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %102 to i8*
  call void %101(%"class.cppgc::Visitor"* %94, i8* %103) #9
  br label %105

104:                                              ; preds = %86
  call void @_ZN5cppgc8internal26ConservativeTracingVisitor27TraceConservativelyIfNeededERNS0_16HeapObjectHeaderE(%"class.cppgc::internal::ConservativeTracingVisitor"* %74, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %81) #9
  br label %105

105:                                              ; preds = %104, %93
  %106 = load i16, i16* %82, align 2
  %107 = icmp ugt i16 %106, 1
  br i1 %107, label %115, label %108

108:                                              ; preds = %105
  %109 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %81 to i64
  %110 = and i64 %109, -131072
  %111 = or i64 %110, 4096
  %112 = inttoptr i64 %111 to %"class.cppgc::internal::LargePage"*
  %113 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %112, i64 0, i32 1
  %114 = load i64, i64* %113, align 8
  br label %119

115:                                              ; preds = %105
  %116 = lshr i16 %106, 1
  %117 = zext i16 %116 to i64
  %118 = shl nuw nsw i64 %117, 3
  br label %119

119:                                              ; preds = %115, %108
  %120 = phi i64 [ %114, %108 ], [ %118, %115 ]
  %121 = load i64, i64* %76, align 8
  %122 = add i64 %121, %120
  store i64 %122, i64* %76, align 8
  %123 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %71, align 8
  %124 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %123, i64 0, i32 0
  store %"class.cppgc::internal::HeapObjectHeader"* null, %"class.cppgc::internal::HeapObjectHeader"** %124, align 8
  %125 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %66, align 8
  %126 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %125, i64 0, i32 2
  %127 = load i16, i16* %126, align 2
  br label %128

128:                                              ; preds = %80, %119
  %129 = phi i16 [ %83, %80 ], [ %127, %119 ]
  %130 = phi %"class.cppgc::internal::HeapObjectHeader"* [ %81, %80 ], [ %125, %119 ]
  %131 = lshr i16 %129, 1
  %132 = zext i16 %131 to i64
  %133 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %130, i64 %132
  store %"class.cppgc::internal::HeapObjectHeader"* %133, %"class.cppgc::internal::HeapObjectHeader"** %66, align 8
  %134 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %133 to i8*
  %135 = load i8*, i8** %77, align 8
  %136 = icmp eq i8* %135, %134
  br i1 %136, label %137, label %141

137:                                              ; preds = %128
  %138 = load i64, i64* %78, align 8
  %139 = lshr i64 %138, 3
  %140 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %133, i64 %139
  store %"class.cppgc::internal::HeapObjectHeader"* %140, %"class.cppgc::internal::HeapObjectHeader"** %66, align 8
  br label %141

141:                                              ; preds = %128, %137
  %142 = phi %"class.cppgc::internal::HeapObjectHeader"* [ %133, %128 ], [ %140, %137 ]
  %143 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %142, %65
  br i1 %143, label %79, label %80
}

declare %"class.cppgc::internal::HeapObjectHeader"* @_ZN5cppgc8internal9LargePage12ObjectHeaderEv(%"class.cppgc::internal::LargePage"*) local_unnamed_addr #1

declare void @_ZN5cppgc8internal10NormalPage5beginEv(%"class.cppgc::internal::NormalPage::IteratorImpl"* sret, %"class.cppgc::internal::NormalPage"*) local_unnamed_addr #1

declare i8* @_ZN5cppgc8internal10NormalPage10PayloadEndEv(%"class.cppgc::internal::NormalPage"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.168"* @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.164"*, %"class.cppgc::internal::HeapObjectHeader"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %1, align 8
  %4 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %3 to i64
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %84, label %21

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctpop.i64(i64 %19) #9, !range !6
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %17, %25
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.168"* %36, null
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.168"* %40, null
  br i1 %41, label %84, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br i1 %23, label %44, label %66

44:                                               ; preds = %42, %62
  %45 = phi %"struct.std::__1::__hash_node_base.168"* [ %64, %62 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.168"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = icmp ult i64 %48, %19
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %48, %19
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %53, %52 ], [ %48, %50 ]
  %56 = icmp eq i64 %55, %32
  br i1 %56, label %62, label %84

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %45, i64 2
  %59 = bitcast %"struct.std::__1::__hash_node_base.168"* %58 to %"class.cppgc::internal::HeapObjectHeader"**
  %60 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %59, align 8
  %61 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %60, %3
  br i1 %61, label %84, label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %45, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.168"* %64, null
  br i1 %65, label %84, label %44

66:                                               ; preds = %42, %80
  %67 = phi %"struct.std::__1::__hash_node_base.168"* [ %82, %80 ], [ %40, %42 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %67, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base.168"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, %17
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = and i64 %70, %43
  %74 = icmp eq i64 %73, %32
  br i1 %74, label %80, label %84

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %67, i64 2
  %77 = bitcast %"struct.std::__1::__hash_node_base.168"* %76 to %"class.cppgc::internal::HeapObjectHeader"**
  %78 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %77, align 8
  %79 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %78, %3
  br i1 %79, label %84, label %80

80:                                               ; preds = %72, %75
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %67, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.168"* %82, null
  br i1 %83, label %84, label %66

84:                                               ; preds = %75, %80, %72, %57, %62, %54, %38, %2, %31
  %85 = phi %"struct.std::__1::__hash_node_base.168"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %57 ], [ null, %62 ], [ null, %54 ], [ %67, %75 ], [ null, %80 ], [ null, %72 ]
  ret %"struct.std::__1::__hash_node_base.168"* %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.168"*, i8 } @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.164"*, %"class.cppgc::internal::HeapObjectHeader"** dereferenceable(8), %"class.cppgc::internal::HeapObjectHeader"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %1, align 8
  %5 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %81, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #9, !range !6
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.168"* %37, null
  br i1 %38, label %81, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br i1 %24, label %41, label %63

41:                                               ; preds = %39, %58
  %42 = phi %"struct.std::__1::__hash_node_base.168"* [ %44, %58 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.168"* %44, null
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.168"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = icmp ult i64 %49, %20
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %20
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %58, label %81

58:                                               ; preds = %55, %46
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %44, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.168"* %59 to %"class.cppgc::internal::HeapObjectHeader"**
  %61 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %60, align 8
  %62 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %61, %4
  br i1 %62, label %169, label %41

63:                                               ; preds = %39, %76
  %64 = phi %"struct.std::__1::__hash_node_base.168"* [ %66, %76 ], [ %37, %39 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.168"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %66, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.168"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %18
  %73 = and i64 %71, %40
  %74 = icmp eq i64 %73, %33
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %66, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.168"* %77 to %"class.cppgc::internal::HeapObjectHeader"**
  %79 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %78, align 8
  %80 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %79, %4
  br i1 %80, label %169, label %63

81:                                               ; preds = %68, %63, %55, %41, %32, %3
  %82 = phi i64 [ %33, %32 ], [ undef, %3 ], [ %33, %41 ], [ %33, %55 ], [ %33, %63 ], [ %33, %68 ]
  %83 = tail call i8* @_Znwm(i64 24) #11, !noalias !7
  %84 = getelementptr inbounds i8, i8* %83, i64 16
  %85 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %2 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !7
  %87 = bitcast i8* %84 to i64*
  store i64 %86, i64* %87, align 8, !noalias !7
  %88 = getelementptr inbounds i8, i8* %83, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %18, i64* %89, align 8, !noalias !7
  %90 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base.168"**
  store %"struct.std::__1::__hash_node_base.168"* null, %"struct.std::__1::__hash_node_base.168"** %90, align 8, !noalias !7
  %91 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %20 to float
  %96 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %21, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %81
  %102 = shl i64 %20, 1
  %103 = icmp ult i64 %20, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %20) #9, !range !6
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #9
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  tail call void @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.164"* %0, i64 %113)
  %114 = load i64, i64* %19, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %114) #9, !range !6
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %101
  %118 = add i64 %114, -1
  %119 = and i64 %118, %18
  br label %124

120:                                              ; preds = %101
  %121 = icmp ult i64 %18, %114
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %18, %114
  br label %124

124:                                              ; preds = %122, %120, %117, %81
  %125 = phi i64 [ %20, %81 ], [ %114, %117 ], [ %114, %120 ], [ %114, %122 ]
  %126 = phi i64 [ %82, %81 ], [ %119, %117 ], [ %18, %120 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %128, i64 %126
  %130 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.168"* %130, null
  br i1 %131, label %132, label %158

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 1, i32 0, i32 0
  %134 = bitcast %"struct.std::__1::__hash_node_base.168"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %83 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base.168"* %133 to i8**
  store i8* %83, i8** %137, align 8
  store %"struct.std::__1::__hash_node_base.168"* %133, %"struct.std::__1::__hash_node_base.168"** %129, align 8
  %138 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %90, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.168"* %138, null
  br i1 %139, label %165, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %138, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.168"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = tail call i64 @llvm.ctpop.i64(i64 %125) #9, !range !6
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = add i64 %125, -1
  %148 = and i64 %143, %147
  br label %153

149:                                              ; preds = %140
  %150 = icmp ult i64 %143, %125
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %143, %125
  br label %153

153:                                              ; preds = %146, %149, %151
  %154 = phi i64 [ %148, %146 ], [ %152, %151 ], [ %143, %149 ]
  %155 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %127, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %155, i64 %154
  %157 = bitcast %"struct.std::__1::__hash_node_base.168"** %156 to i8**
  br label %163

158:                                              ; preds = %124
  %159 = bitcast %"struct.std::__1::__hash_node_base.168"* %130 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8* %83 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::__hash_node_base.168"* %130 to i8**
  br label %163

163:                                              ; preds = %153, %158
  %164 = phi i8** [ %162, %158 ], [ %157, %153 ]
  store i8* %83, i8** %164, align 8
  br label %165

165:                                              ; preds = %163, %132
  %166 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base.168"*
  %167 = load i64, i64* %91, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %91, align 8
  br label %169

169:                                              ; preds = %76, %58, %165
  %170 = phi i8 [ 1, %165 ], [ 0, %58 ], [ 0, %76 ]
  %171 = phi %"struct.std::__1::__hash_node_base.168"* [ %166, %165 ], [ %44, %58 ], [ %66, %76 ]
  %172 = insertvalue { %"struct.std::__1::__hash_node_base.168"*, i8 } undef, %"struct.std::__1::__hash_node_base.168"* %171, 0
  %173 = insertvalue { %"struct.std::__1::__hash_node_base.168"*, i8 } %172, i8 %170, 1
  ret { %"struct.std::__1::__hash_node_base.168"*, i8 } %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.164"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !6
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.164"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !6
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !6
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.164"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.164"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #10
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.164"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.168"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.168"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.170", %"class.std::__1::__bucket_list_deallocator.170"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.168"* null, %"struct.std::__1::__hash_node_base.168"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !10

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.168"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.168"* null, %"struct.std::__1::__hash_node_base.168"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.168"* null, %"struct.std::__1::__hash_node_base.168"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.168"* null, %"struct.std::__1::__hash_node_base.168"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.168"* null, %"struct.std::__1::__hash_node_base.168"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.168"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !6
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.168"* %36, %"struct.std::__1::__hash_node_base.168"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.168"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.168"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.168"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.168"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.168"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.168"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.168"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.168"* %103 to %"class.cppgc::internal::HeapObjectHeader"**
  %105 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %130, align 8
  %106 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %104, align 8
  %107 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.168"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.168"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.168"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.168"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.168"* %80, %"struct.std::__1::__hash_node_base.168"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.168"* %82, %"struct.std::__1::__hash_node_base.168"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.168"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.168"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.168"* %129 to %"class.cppgc::internal::HeapObjectHeader"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.168"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.168"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.168"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.168"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.168"* %146 to %"class.cppgc::internal::HeapObjectHeader"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.168"* %134, %"struct.std::__1::__hash_node_base.168"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.168"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.168"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.168"* %155 to %"class.cppgc::internal::HeapObjectHeader"**
  %157 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %147, align 8
  %158 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %156, align 8
  %159 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.168"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.168"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.168"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.168"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.168"* %132, %"struct.std::__1::__hash_node_base.168"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.168"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.168", %"struct.std::__1::__hash_node_base.168"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.168"*, %"struct.std::__1::__hash_node_base.168"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.168"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.164", %"class.std::__1::__hash_table.164"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.168"**, %"struct.std::__1::__hash_node_base.168"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.168"** null, %"struct.std::__1::__hash_node_base.168"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.168"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.168"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #11
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.170", %"class.std::__1::__bucket_list_deallocator.170"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7VisitorD2Ev(%"class.cppgc::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5cppgc8internal12_GLOBAL__N_119VerificationVisitorD0Ev(%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"*) unnamed_addr #8 align 2 {
  %2 = bitcast %"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_(%"class.cppgc::Visitor"*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em(%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5cppgc8internal12_GLOBAL__N_119VerificationVisitor5VisitEPKvNS_15TraceDescriptorE(%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"* nocapture readonly, i8* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds i8, i8* %2, i64 -8
  %6 = bitcast i8* %5 to %"class.cppgc::internal::HeapObjectHeader"*
  %7 = getelementptr inbounds i8, i8* %2, i64 -2
  %8 = bitcast i8* %7 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = and i16 %9, 1
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %31

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::VerificationVisitor", %"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"* %0, i64 0, i32 1
  %14 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %13, align 8
  %15 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %14, i64 0, i32 0
  %16 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %15, align 8
  %17 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %12
  %19 = tail call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* nonnull %16) #9
  %20 = extractvalue { i8*, i8 } %19, 0
  %21 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %15, align 8
  %22 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %21, i64 1
  %25 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %24 to i8*
  br label %26

26:                                               ; preds = %23, %18, %12
  %27 = phi i8* [ %20, %23 ], [ %20, %18 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), %12 ]
  %28 = phi i8* [ %25, %23 ], [ null, %18 ], [ null, %12 ]
  %29 = tail call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* %6) #9
  %30 = extractvalue { i8*, i8 } %29, 0
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.3, i64 0, i64 0), i8* %27, i8* %28, i8* %30, i8* %2) #10
  unreachable

31:                                               ; preds = %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5cppgc8internal12_GLOBAL__N_119VerificationVisitor9VisitWeakEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES4_ES4_(%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"* nocapture readonly, i8* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, void (%"class.cppgc::LivenessBroker"*, i8*)* nocapture readnone, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds i8, i8* %2, i64 -8
  %8 = bitcast i8* %7 to %"class.cppgc::internal::HeapObjectHeader"*
  %9 = getelementptr inbounds i8, i8* %2, i64 -2
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, 1
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %33

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::VerificationVisitor", %"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"* %0, i64 0, i32 1
  %16 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %15, align 8
  %17 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %16, i64 0, i32 0
  %18 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %17, align 8
  %19 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %14
  %21 = tail call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* nonnull %18) #9
  %22 = extractvalue { i8*, i8 } %21, 0
  %23 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %17, align 8
  %24 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %23, i64 1
  %27 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %26 to i8*
  br label %28

28:                                               ; preds = %25, %20, %14
  %29 = phi i8* [ %22, %25 ], [ %22, %20 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), %14 ]
  %30 = phi i8* [ %27, %25 ], [ null, %20 ], [ null, %14 ]
  %31 = tail call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* %8) #9
  %32 = extractvalue { i8*, i8 } %31, 0
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.3, i64 0, i64 0), i8* %29, i8* %30, i8* %32, i8* %2) #10
  unreachable

33:                                               ; preds = %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE(%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE(%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor14VisitEphemeronEPKvS2_NS_15TraceDescriptorE(%"class.cppgc::Visitor"*, i8*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5cppgc8internal12_GLOBAL__N_119VerificationVisitor18VisitWeakContainerEPKvNS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES4_ES4_(%"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"* nocapture readonly, i8* readnone, i8* nocapture readnone, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, void (%"class.cppgc::LivenessBroker"*, i8*)* nocapture readnone, i8* nocapture readnone) unnamed_addr #0 align 2 {
  %9 = icmp eq i8* %1, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %4, i64 -8
  %12 = bitcast i8* %11 to %"class.cppgc::internal::HeapObjectHeader"*
  %13 = getelementptr inbounds i8, i8* %4, i64 -2
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 2
  %16 = and i16 %15, 1
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %37

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::VerificationVisitor", %"class.cppgc::internal::(anonymous namespace)::VerificationVisitor"* %0, i64 0, i32 1
  %20 = load %"class.cppgc::internal::VerificationState"*, %"class.cppgc::internal::VerificationState"** %19, align 8
  %21 = getelementptr inbounds %"class.cppgc::internal::VerificationState", %"class.cppgc::internal::VerificationState"* %20, i64 0, i32 0
  %22 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %21, align 8
  %23 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %18
  %25 = tail call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* nonnull %22) #9
  %26 = extractvalue { i8*, i8 } %25, 0
  %27 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %21, align 8
  %28 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %27, i64 1
  %31 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %30 to i8*
  br label %32

32:                                               ; preds = %29, %24, %18
  %33 = phi i8* [ %26, %29 ], [ %26, %24 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), %18 ]
  %34 = phi i8* [ %31, %29 ], [ null, %24 ], [ null, %18 ]
  %35 = tail call { i8*, i8 } @_ZNK5cppgc8internal16HeapObjectHeader7GetNameEv(%"class.cppgc::internal::HeapObjectHeader"* %12) #9
  %36 = extractvalue { i8*, i8 } %35, 0
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.3, i64 0, i64 0), i8* %33, i8* %34, i8* %36, i8* %4) #10
  unreachable

37:                                               ; preds = %10, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor22HandleMovableReferenceEPPKv(%"class.cppgc::Visitor"*, i8**) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5cppgc8internal10NormalPage3endEv: argument 0"}
!5 = distinct !{!5, !"_ZN5cppgc8internal10NormalPage3endEv"}
!6 = !{i64 0, i64 65}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableIPKN5cppgc8internal16HeapObjectHeaderENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISH_EEEEEEmOT_DpOT0_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
