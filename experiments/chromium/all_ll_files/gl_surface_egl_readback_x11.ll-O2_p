; ModuleID = '../../ui/ozone/platform/x11/gl_surface_egl_readback_x11.cc'
source_filename = "../../ui/ozone/platform/x11/gl_surface_egl_readback_x11.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::GLSurfaceEglReadbackX11" = type { %"class.ui::GLSurfaceEglReadback", i32, %"class.x11::Connection"*, i32, i32 }
%"class.ui::GLSurfaceEglReadback" = type { %"class.gl::PbufferGLSurfaceEGL", %class.scoped_refptr.6, %"class.std::__1::unique_ptr" }
%"class.gl::PbufferGLSurfaceEGL" = type { %"class.gl::GLSurfaceEGL", %"class.gfx::Size", i8* }
%"class.gl::GLSurfaceEGL" = type { %"class.gl::GLSurface", i8*, %"class.gl::GLSurfaceFormat" }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted", %"class.base::SupportsWeakPtr" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.gl::GLSurfaceFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.scoped_refptr.6 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7" }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.189", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.202", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.248", %"class.base::circular_deque", %"class.base::ObserverList.254", %"class.x11::Event"*, %"class.base::circular_deque.258", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.271" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.195" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.192" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.195" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.196", i64, i32, [4 x i8] }>
%"class.base::LinkedList.196" = type { %"class.base::LinkNode.197" }
%"class.base::LinkNode.197" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.213", %"class.std::__1::vector.220" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.215" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.222" }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.224" }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.241" }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.243" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.254" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.255", i64, i32, [4 x i8] }>
%"class.base::LinkedList.255" = type { %"class.base::LinkNode.256" }
%"class.base::LinkNode.256" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.258" = type { %"class.base::internal::VectorBuffer.259", i64, i64 }
%"class.base::internal::VectorBuffer.259" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.262, %"class.std::__1::unique_ptr.264" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.260 }
%class.scoped_refptr.260 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.261", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.261" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.262 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.263", [4 x i8] }>
%"class.base::RefCountedThreadSafe.263" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.270 }
%union.anon.270 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.271" = type { %"class.base::internal::CallbackBase" }
%"struct.x11::CreateGCRequest" = type { i32, %"struct.x11::Drawable", %"class.absl::optional.278", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.283", %"class.absl::optional.288", %"class.absl::optional.293", %"class.absl::optional.298", %"class.absl::optional.303", %"class.absl::optional.308", %"class.absl::optional.308", %"class.absl::optional.313", %"class.absl::optional.313", %"class.absl::optional.318", %"class.absl::optional.323", %"class.absl::optional.328", %"class.absl::optional.313", %"class.absl::optional.313", %"class.absl::optional.308", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.333" }
%"struct.x11::Drawable" = type { i32 }
%"class.absl::optional.278" = type { %"class.absl::optional_internal::optional_data.279" }
%"class.absl::optional_internal::optional_data.279" = type { %"class.absl::optional_internal::optional_data_base.280" }
%"class.absl::optional_internal::optional_data_base.280" = type { %"class.absl::optional_internal::optional_data_dtor_base.281" }
%"class.absl::optional_internal::optional_data_dtor_base.281" = type { i8, %union.anon.282 }
%union.anon.282 = type { i32 }
%"class.absl::optional.283" = type { %"class.absl::optional_internal::optional_data.284" }
%"class.absl::optional_internal::optional_data.284" = type { %"class.absl::optional_internal::optional_data_base.285" }
%"class.absl::optional_internal::optional_data_base.285" = type { %"class.absl::optional_internal::optional_data_dtor_base.286" }
%"class.absl::optional_internal::optional_data_dtor_base.286" = type { i8, %union.anon.287 }
%union.anon.287 = type { i32 }
%"class.absl::optional.288" = type { %"class.absl::optional_internal::optional_data.289" }
%"class.absl::optional_internal::optional_data.289" = type { %"class.absl::optional_internal::optional_data_base.290" }
%"class.absl::optional_internal::optional_data_base.290" = type { %"class.absl::optional_internal::optional_data_dtor_base.291" }
%"class.absl::optional_internal::optional_data_dtor_base.291" = type { i8, %union.anon.292 }
%union.anon.292 = type { i32 }
%"class.absl::optional.293" = type { %"class.absl::optional_internal::optional_data.294" }
%"class.absl::optional_internal::optional_data.294" = type { %"class.absl::optional_internal::optional_data_base.295" }
%"class.absl::optional_internal::optional_data_base.295" = type { %"class.absl::optional_internal::optional_data_dtor_base.296" }
%"class.absl::optional_internal::optional_data_dtor_base.296" = type { i8, %union.anon.297 }
%union.anon.297 = type { i32 }
%"class.absl::optional.298" = type { %"class.absl::optional_internal::optional_data.299" }
%"class.absl::optional_internal::optional_data.299" = type { %"class.absl::optional_internal::optional_data_base.300" }
%"class.absl::optional_internal::optional_data_base.300" = type { %"class.absl::optional_internal::optional_data_dtor_base.301" }
%"class.absl::optional_internal::optional_data_dtor_base.301" = type { i8, %union.anon.302 }
%union.anon.302 = type { i32 }
%"class.absl::optional.303" = type { %"class.absl::optional_internal::optional_data.304" }
%"class.absl::optional_internal::optional_data.304" = type { %"class.absl::optional_internal::optional_data_base.305" }
%"class.absl::optional_internal::optional_data_base.305" = type { %"class.absl::optional_internal::optional_data_dtor_base.306" }
%"class.absl::optional_internal::optional_data_dtor_base.306" = type { i8, %union.anon.307 }
%union.anon.307 = type { i32 }
%"class.absl::optional.318" = type { %"class.absl::optional_internal::optional_data.319" }
%"class.absl::optional_internal::optional_data.319" = type { %"class.absl::optional_internal::optional_data_base.320" }
%"class.absl::optional_internal::optional_data_base.320" = type { %"class.absl::optional_internal::optional_data_dtor_base.321" }
%"class.absl::optional_internal::optional_data_dtor_base.321" = type { i8, %union.anon.322 }
%union.anon.322 = type { i32 }
%"class.absl::optional.323" = type { %"class.absl::optional_internal::optional_data.324" }
%"class.absl::optional_internal::optional_data.324" = type { %"class.absl::optional_internal::optional_data_base.325" }
%"class.absl::optional_internal::optional_data_base.325" = type { %"class.absl::optional_internal::optional_data_dtor_base.326" }
%"class.absl::optional_internal::optional_data_dtor_base.326" = type { i8, %union.anon.327 }
%union.anon.327 = type { i32 }
%"class.absl::optional.328" = type { %"class.absl::optional_internal::optional_data.329" }
%"class.absl::optional_internal::optional_data.329" = type { %"class.absl::optional_internal::optional_data_base.330" }
%"class.absl::optional_internal::optional_data_base.330" = type { %"class.absl::optional_internal::optional_data_dtor_base.331" }
%"class.absl::optional_internal::optional_data_dtor_base.331" = type { i8, %union.anon.332 }
%union.anon.332 = type { i32 }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { i32 }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { i32 }
%"class.absl::optional.333" = type { %"class.absl::optional_internal::optional_data.334" }
%"class.absl::optional_internal::optional_data.334" = type { %"class.absl::optional_internal::optional_data_base.335" }
%"class.absl::optional_internal::optional_data_base.335" = type { %"class.absl::optional_internal::optional_data_dtor_base.336" }
%"class.absl::optional_internal::optional_data_dtor_base.336" = type { i8, %union.anon.337 }
%union.anon.337 = type { i32 }
%"class.x11::Future.344" = type { %"class.std::__1::unique_ptr.272" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.x11::Connection::FutureImpl"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::GetWindowAttributesReply" = type { i32, i16, i32, i32, i32, i32, i32, i32, i8, i8, i32, i8, i32, i32, i32, i32 }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.262, i64, i32* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%struct.SkISize = type { i32, i32 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gl::GLContext" = type opaque
%"class.gfx::VSyncProvider" = type { i32 (...)** }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted.346", %"class.gfx::ColorSpace" }
%"class.base::RefCounted.346" = type { %"class.base::subtle::RefCountedBase" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.ui::CARendererLayerParams" = type opaque
%"class.gl::EGLTimestampClient" = type { i32 (...)** }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN3x116FutureINS_24GetWindowAttributesReplyEE4SyncEv = comdat any

$_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv = comdat any

$_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE = comdat any

$_ZN2gl9GLSurface12SetFrameRateEf = comdat any

$_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE = comdat any

@_ZTVN2ui23GLSurfaceEglReadbackX11E = hidden unnamed_addr constant { [66 x i8*] } { [66 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.ui::GLSurfaceEglReadbackX11"*, %"class.gl::GLSurfaceFormat"*)* @_ZN2ui23GLSurfaceEglReadbackX1110InitializeEN2gl15GLSurfaceFormatE to i8*), i8* bitcast (void (%"class.ui::GLSurfaceEglReadbackX11"*)* @_ZN2ui23GLSurfaceEglReadbackX117DestroyEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface16PrepareToDestroyEb to i8*), i8* bitcast (i1 (%"class.ui::GLSurfaceEglReadback"*, %"class.gfx::Size"*, float, %"class.gfx::ColorSpace"*, i1)* @_ZN2ui20GLSurfaceEglReadback6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface8RecreateEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10DeferDrawsEv to i8*), i8* bitcast (i1 (%"class.ui::GLSurfaceEglReadback"*)* @_ZN2ui20GLSurfaceEglReadback11IsOffscreenEv to i8*), i8* bitcast (void ()* @_ZN2ui20GLSurfaceEglReadback11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (i64 (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGL7GetSizeEv to i8*), i8* bitcast (i8* (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGL9GetHandleEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SupportsPostSubBufferEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27SupportsCommitOverlayPlanesEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface17SupportsAsyncSwapEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)* @_ZN2gl9GLSurface13OnMakeCurrentEPNS_9GLContextE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface23SetBackbufferAllocationEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface24SetFrontbufferAllocationEb to i8*), i8* bitcast (i8* (%"class.gl::PbufferGLSurfaceEGL"*)* @_ZN2gl19PbufferGLSurfaceEGL14GetShareHandleEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL10GetDisplayEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetConfigEv to i8*), i8* bitcast (void (%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetFormatEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface16GetVSyncProviderEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface15SetVSyncEnabledEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl9GLSurface20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*)* @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface17SetEnableDCLayersEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13IsSurfacelessEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface18SupportsViewporterEv to i8*), i8* bitcast (i32 (%"class.ui::GLSurfaceEglReadback"*)* @_ZNK2ui20GLSurfaceEglReadback9GetOriginEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14BuffersFlippedEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsDCLayersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsProtectedVideoEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gfx::Rect"*)* @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (i64 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13GetDrawOffsetEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsSwapTimestampsEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface23SetEnableSwapTimestampsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14GetBufferCountEv to i8*), i8* bitcast (%"class.gl::EGLTimestampClient"* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21GetEGLTimestampClientEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsGpuVSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i32)* @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, float)* @_ZN2gl9GLSurface12SetFrameRateEf to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10SetCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface9IsCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface20SupportsDelegatedInkEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*)* @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*), i8* bitcast (void (%"class.ui::GLSurfaceEglReadbackX11"*)* @_ZN2ui23GLSurfaceEglReadbackX11D2Ev to i8*), i8* bitcast (void (%"class.ui::GLSurfaceEglReadbackX11"*)* @_ZN2ui23GLSurfaceEglReadbackX11D0Ev to i8*), i8* bitcast (i1 (%"class.ui::GLSurfaceEglReadbackX11"*, i8*)* @_ZN2ui23GLSurfaceEglReadbackX1112HandlePixelsEPh to i8*)] }, align 8

@_ZN2ui23GLSurfaceEglReadbackX11C1Ej = hidden unnamed_addr alias void (%"class.ui::GLSurfaceEglReadbackX11"*, i32), void (%"class.ui::GLSurfaceEglReadbackX11"*, i32)* @_ZN2ui23GLSurfaceEglReadbackX11C2Ej
@_ZN2ui23GLSurfaceEglReadbackX11D1Ev = hidden unnamed_addr alias void (%"class.ui::GLSurfaceEglReadbackX11"*), void (%"class.ui::GLSurfaceEglReadbackX11"*)* @_ZN2ui23GLSurfaceEglReadbackX11D2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23GLSurfaceEglReadbackX11C2Ej(%"class.ui::GLSurfaceEglReadbackX11"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0
  tail call void @_ZN2ui20GLSurfaceEglReadbackC2Ev(%"class.ui::GLSurfaceEglReadback"* %3) #5
  %4 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*] }, { [66 x i8*] }* @_ZTVN2ui23GLSurfaceEglReadbackX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %7 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #5
  store %"class.x11::Connection"* %7, %"class.x11::Connection"** %6, align 8
  %8 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 4
  store i32 0, i32* %9, align 4
  ret void
}

declare void @_ZN2ui20GLSurfaceEglReadbackC2Ev(%"class.ui::GLSurfaceEglReadback"*) unnamed_addr #1

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui23GLSurfaceEglReadbackX1110InitializeEN2gl15GLSurfaceFormatE(%"class.ui::GLSurfaceEglReadbackX11"*, %"class.gl::GLSurfaceFormat"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.262, align 8
  %4 = alloca %"class.std::__1::unique_ptr.264", align 8
  %5 = alloca %"class.gl::GLSurfaceFormat", align 4
  %6 = alloca %"struct.x11::CreateGCRequest", align 4
  %7 = alloca %"class.x11::Future.344", align 8
  %8 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0, i32 0
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %5, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %1) #5
  %9 = call zeroext i1 @_ZN2gl19PbufferGLSurfaceEGL10InitializeENS_15GLSurfaceFormatE(%"class.gl::PbufferGLSurfaceEGL"* %8, %"class.gl::GLSurfaceFormat"* nonnull %5) #5
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %5) #5
  br i1 %9, label %10, label %123

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %123

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %17 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %16) #5
  store i32 %17, i32* %11, align 8
  %18 = bitcast %"class.x11::Connection"** %15 to %"class.x11::XProto"**
  %19 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  %20 = bitcast %"struct.x11::CreateGCRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %20) #5
  %21 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 0
  store i32 %17, i32* %21, align 4
  %22 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 1, i32 0
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 4
  %30 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 4
  %40 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds %"struct.x11::CreateGCRequest", %"struct.x11::CreateGCRequest"* %6, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %47, align 4
  %48 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8CreateGCERKNS_15CreateGCRequestE(%"class.x11::XProto"* %19, %"struct.x11::CreateGCRequest"* nonnull dereferenceable(192) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %20) #5
  %49 = bitcast %"class.x11::Future.344"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #5
  %50 = load %"class.x11::XProto"*, %"class.x11::XProto"** %18, align 8
  %51 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto19GetWindowAttributesERKNS_6WindowE(%"class.x11::XProto"* %50, i32* dereferenceable(4) %22) #5
  %52 = getelementptr inbounds %"class.x11::Future.344", %"class.x11::Future.344"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %51, %"class.x11::Connection::FutureImpl"** %52, align 8
  %53 = call { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_24GetWindowAttributesReplyEE4SyncEv(%"class.x11::Future.344"* nonnull %7)
  %54 = extractvalue { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } %53, 0
  %55 = extractvalue { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } %53, 1
  %56 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %52, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %52, align 8
  %57 = icmp eq %"class.x11::Connection::FutureImpl"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %14
  %59 = bitcast %"class.x11::Connection::FutureImpl"* %56 to i8*
  call void @_ZdlPv(i8* %59) #6
  br label %60

60:                                               ; preds = %14, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #5
  %61 = icmp eq %"struct.x11::GetWindowAttributesReply"* %54, null
  br i1 %61, label %107, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.x11::GetWindowAttributesReply", %"struct.x11::GetWindowAttributesReply"* %54, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 4
  store i32 %64, i32* %65, align 4
  %66 = icmp eq %"class.x11::Error"* %55, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.x11::Error"* %55 to void (%"class.x11::Error"*)***
  %69 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %69, i64 1
  %71 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %70, align 8
  call void %71(%"class.x11::Error"* nonnull %55) #5
  br label %72

72:                                               ; preds = %67, %62
  %73 = bitcast %"struct.x11::GetWindowAttributesReply"* %54 to i8*
  call void @_ZdlPv(i8* %73) #6
  %74 = icmp eq %"class.x11::Connection::FutureImpl"* %48, null
  br i1 %74, label %123, label %75

75:                                               ; preds = %72
  %76 = bitcast %class.scoped_refptr.262* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #5
  %77 = getelementptr inbounds %class.scoped_refptr.262, %class.scoped_refptr.262* %3, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %77, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.264"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #5
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %4, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::unique_ptr.264"* %4 to i64*
  store i64 0, i64* %80, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %48, %class.scoped_refptr.262* nonnull %3, %"class.std::__1::unique_ptr.264"* nonnull %4) #5
  %81 = load %"class.x11::Error"*, %"class.x11::Error"** %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #5
  %82 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %77, align 8
  %83 = icmp eq %"class.base::RefCountedMemory"* %82, null
  br i1 %83, label %96, label %84

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %82, i64 0, i32 1
  %86 = getelementptr inbounds %"class.base::RefCountedThreadSafe.263", %"class.base::RefCountedThreadSafe.263"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw sub i32* %86, i32 1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.263", %"class.base::RefCountedThreadSafe.263"* %85, i64 -2
  %91 = bitcast %"class.base::RefCountedThreadSafe.263"* %90 to %"class.base::RefCountedMemory"*
  %92 = bitcast %"class.base::RefCountedThreadSafe.263"* %90 to void (%"class.base::RefCountedMemory"*)***
  %93 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %93, i64 3
  %95 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %94, align 8
  call void %95(%"class.base::RefCountedMemory"* nonnull %91) #5
  br label %96

96:                                               ; preds = %75, %84, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #5
  %97 = icmp eq %"class.x11::Error"* %81, null
  br i1 %97, label %120, label %98

98:                                               ; preds = %96
  %99 = bitcast %"class.x11::Error"* %81 to void (%"class.x11::Error"*)***
  %100 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %100, i64 1
  %102 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %101, align 8
  call void %102(%"class.x11::Error"* nonnull %81) #5
  %103 = bitcast %"class.ui::GLSurfaceEglReadbackX11"* %0 to void (%"class.ui::GLSurfaceEglReadbackX11"*)***
  %104 = load void (%"class.ui::GLSurfaceEglReadbackX11"*)**, void (%"class.ui::GLSurfaceEglReadbackX11"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.ui::GLSurfaceEglReadbackX11"*)*, void (%"class.ui::GLSurfaceEglReadbackX11"*)** %104, i64 1
  %106 = load void (%"class.ui::GLSurfaceEglReadbackX11"*)*, void (%"class.ui::GLSurfaceEglReadbackX11"*)** %105, align 8
  call void %106(%"class.ui::GLSurfaceEglReadbackX11"* %0) #5
  br label %120

107:                                              ; preds = %60
  %108 = bitcast %"class.ui::GLSurfaceEglReadbackX11"* %0 to void (%"class.ui::GLSurfaceEglReadbackX11"*)***
  %109 = load void (%"class.ui::GLSurfaceEglReadbackX11"*)**, void (%"class.ui::GLSurfaceEglReadbackX11"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.ui::GLSurfaceEglReadbackX11"*)*, void (%"class.ui::GLSurfaceEglReadbackX11"*)** %109, i64 1
  %111 = load void (%"class.ui::GLSurfaceEglReadbackX11"*)*, void (%"class.ui::GLSurfaceEglReadbackX11"*)** %110, align 8
  call void %111(%"class.ui::GLSurfaceEglReadbackX11"* %0) #5
  %112 = icmp eq %"class.x11::Error"* %55, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = bitcast %"class.x11::Error"* %55 to void (%"class.x11::Error"*)***
  %115 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %115, i64 1
  %117 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %116, align 8
  call void %117(%"class.x11::Error"* nonnull %55) #5
  br label %118

118:                                              ; preds = %113, %107
  %119 = icmp eq %"class.x11::Connection::FutureImpl"* %48, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %96, %98, %118
  %121 = phi i1 [ false, %118 ], [ false, %98 ], [ true, %96 ]
  %122 = bitcast %"class.x11::Connection::FutureImpl"* %48 to i8*
  call void @_ZdlPv(i8* %122) #6
  br label %123

123:                                              ; preds = %72, %120, %118, %10, %2
  %124 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %118 ], [ %121, %120 ], [ true, %72 ]
  ret i1 %124
}

declare zeroext i1 @_ZN2gl19PbufferGLSurfaceEGL10InitializeENS_15GLSurfaceFormatE(%"class.gl::PbufferGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*) unnamed_addr #1

declare void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceFormat"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto8CreateGCERKNS_15CreateGCRequestE(%"class.x11::XProto"*, %"struct.x11::CreateGCRequest"* dereferenceable(192)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto19GetWindowAttributesERKNS_6WindowE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_24GetWindowAttributesReplyEE4SyncEv(%"class.x11::Future.344"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.262, align 8
  %3 = alloca %"class.std::__1::unique_ptr.264", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future.344", %"class.x11::Future.344"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.262* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = getelementptr inbounds %class.scoped_refptr.262, %class.scoped_refptr.262* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.264"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.264"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.264"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.262* nonnull %2, %"class.std::__1::unique_ptr.264"* nonnull %3) #5
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #5
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #5
  %23 = call %"struct.x11::GetWindowAttributesReply"* @_ZN3x116detail9ReadReplyINS_24GetWindowAttributesReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #5
  %24 = ptrtoint %"struct.x11::GetWindowAttributesReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #5
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.263", %"class.base::RefCountedThreadSafe.263"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.263", %"class.base::RefCountedThreadSafe.263"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.263"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.263"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #5
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::GetWindowAttributesReply"*
  %47 = insertvalue { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } undef, %"struct.x11::GetWindowAttributesReply"* %46, 0
  %48 = insertvalue { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::GetWindowAttributesReply"*, %"class.x11::Error"* } %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23GLSurfaceEglReadbackX117DestroyEv(%"class.ui::GLSurfaceEglReadbackX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %7 = bitcast %"class.x11::Connection"** %6 to %"class.x11::XProto"**
  %8 = load %"class.x11::XProto"*, %"class.x11::XProto"** %7, align 8
  %9 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto6FreeGCERKNS_15GraphicsContextE(%"class.x11::XProto"* %8, i32* dereferenceable(4) %2) #5
  %10 = icmp eq %"class.x11::Connection::FutureImpl"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.x11::Connection::FutureImpl"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #6
  br label %13

13:                                               ; preds = %5, %11
  store i32 0, i32* %2, align 8
  br label %14

14:                                               ; preds = %1, %13
  %15 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %16 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  tail call void @_ZN3x1110Connection4SyncEv(%"class.x11::Connection"* %16) #5
  %17 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl19PbufferGLSurfaceEGL7DestroyEv(%"class.gl::PbufferGLSurfaceEGL"* %17) #5
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto6FreeGCERKNS_15GraphicsContextE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN3x1110Connection4SyncEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN2gl19PbufferGLSurfaceEGL7DestroyEv(%"class.gl::PbufferGLSurfaceEGL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23GLSurfaceEglReadbackX11D2Ev(%"class.ui::GLSurfaceEglReadbackX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*] }, { [66 x i8*] }* @_ZTVN2ui23GLSurfaceEglReadbackX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %8 = bitcast %"class.x11::Connection"** %7 to %"class.x11::XProto"**
  %9 = load %"class.x11::XProto"*, %"class.x11::XProto"** %8, align 8
  %10 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto6FreeGCERKNS_15GraphicsContextE(%"class.x11::XProto"* %9, i32* dereferenceable(4) %3) #5
  %11 = icmp eq %"class.x11::Connection::FutureImpl"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.x11::Connection::FutureImpl"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %12, %6
  store i32 0, i32* %3, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %17 = load %"class.x11::Connection"*, %"class.x11::Connection"** %16, align 8
  tail call void @_ZN3x1110Connection4SyncEv(%"class.x11::Connection"* %17) #5
  %18 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl19PbufferGLSurfaceEGL7DestroyEv(%"class.gl::PbufferGLSurfaceEGL"* %18) #5
  %19 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0
  tail call void @_ZN2ui20GLSurfaceEglReadbackD2Ev(%"class.ui::GLSurfaceEglReadback"* %19) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui20GLSurfaceEglReadbackD2Ev(%"class.ui::GLSurfaceEglReadback"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23GLSurfaceEglReadbackX11D0Ev(%"class.ui::GLSurfaceEglReadbackX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [66 x i8*] }, { [66 x i8*] }* @_ZTVN2ui23GLSurfaceEglReadbackX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %8 = bitcast %"class.x11::Connection"** %7 to %"class.x11::XProto"**
  %9 = load %"class.x11::XProto"*, %"class.x11::XProto"** %8, align 8
  %10 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto6FreeGCERKNS_15GraphicsContextE(%"class.x11::XProto"* %9, i32* dereferenceable(4) %3) #5
  %11 = icmp eq %"class.x11::Connection::FutureImpl"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.x11::Connection::FutureImpl"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %12, %6
  store i32 0, i32* %3, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %17 = load %"class.x11::Connection"*, %"class.x11::Connection"** %16, align 8
  tail call void @_ZN3x1110Connection4SyncEv(%"class.x11::Connection"* %17) #5
  %18 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2gl19PbufferGLSurfaceEGL7DestroyEv(%"class.gl::PbufferGLSurfaceEGL"* %18) #5
  %19 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0
  tail call void @_ZN2ui20GLSurfaceEglReadbackD2Ev(%"class.ui::GLSurfaceEglReadback"* %19) #5
  %20 = bitcast %"class.ui::GLSurfaceEglReadbackX11"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui23GLSurfaceEglReadbackX1112HandlePixelsEPh(%"class.ui::GLSurfaceEglReadbackX11"*, i8*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 16
  %4 = alloca %class.SkPixmap, align 8
  %5 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.ui::GLSurfaceEglReadbackX11"* %0 to i64 (%"class.gl::PbufferGLSurfaceEGL"*)***
  %10 = load i64 (%"class.gl::PbufferGLSurfaceEGL"*)**, i64 (%"class.gl::PbufferGLSurfaceEGL"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.gl::PbufferGLSurfaceEGL"*)*, i64 (%"class.gl::PbufferGLSurfaceEGL"*)** %10, i64 8
  %12 = load i64 (%"class.gl::PbufferGLSurfaceEGL"*)*, i64 (%"class.gl::PbufferGLSurfaceEGL"*)** %11, align 8
  %13 = tail call i64 %12(%"class.gl::PbufferGLSurfaceEGL"* %8) #5
  %14 = load i64 (%"class.gl::PbufferGLSurfaceEGL"*)**, i64 (%"class.gl::PbufferGLSurfaceEGL"*)*** %9, align 8
  %15 = getelementptr inbounds i64 (%"class.gl::PbufferGLSurfaceEGL"*)*, i64 (%"class.gl::PbufferGLSurfaceEGL"*)** %14, i64 8
  %16 = load i64 (%"class.gl::PbufferGLSurfaceEGL"*)*, i64 (%"class.gl::PbufferGLSurfaceEGL"*)** %15, align 8
  %17 = tail call i64 %16(%"class.gl::PbufferGLSurfaceEGL"* %8) #5
  %18 = and i64 %17, -4294967296
  %19 = and i64 %13, 4294967295
  %20 = or i64 %18, %19
  %21 = bitcast %struct.SkImageInfo* %3 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %21, align 16, !alias.scope !2
  %22 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %23 = bitcast %struct.SkISize* %22 to i64*
  store i64 %20, i64* %23, align 16, !alias.scope !2
  %24 = bitcast %class.SkPixmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #5
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2
  %26 = bitcast %struct.SkImageInfo* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = shl i64 %13, 32
  %28 = ashr exact i64 %27, 32
  %29 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0
  %30 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %29) #5
  %31 = sext i32 %30 to i64
  %32 = mul nsw i64 %28, %31
  %33 = icmp ult i64 %32, 2147483648
  %34 = select i1 %33, i64 %32, i64 0
  %35 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 0
  store i8* %1, i8** %35, align 8
  %36 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 1
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 16
  %39 = icmp eq %class.SkColorSpace* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %2
  %41 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  br label %43

43:                                               ; preds = %2, %40
  store %class.SkColorSpace* %38, %class.SkColorSpace** %37, align 8
  %44 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %4, i64 0, i32 2, i32 0, i32 1
  %45 = bitcast i32* %7 to <2 x i64>*
  %46 = load <2 x i64>, <2 x i64>* %45, align 8
  %47 = bitcast i32* %44 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %47, align 8
  %48 = load i64 (%"class.gl::PbufferGLSurfaceEGL"*)**, i64 (%"class.gl::PbufferGLSurfaceEGL"*)*** %9, align 8
  %49 = getelementptr inbounds i64 (%"class.gl::PbufferGLSurfaceEGL"*)*, i64 (%"class.gl::PbufferGLSurfaceEGL"*)** %48, i64 8
  %50 = load i64 (%"class.gl::PbufferGLSurfaceEGL"*)*, i64 (%"class.gl::PbufferGLSurfaceEGL"*)** %49, align 8
  %51 = call i64 %50(%"class.gl::PbufferGLSurfaceEGL"* %8) #5
  %52 = trunc i64 %51 to i32
  %53 = lshr i64 %51, 32
  %54 = trunc i64 %53 to i32
  %55 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 2
  %56 = load %"class.x11::Connection"*, %"class.x11::Connection"** %55, align 8
  %57 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 4
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.ui::GLSurfaceEglReadbackX11", %"class.ui::GLSurfaceEglReadbackX11"* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  call void @_ZN2ui10DrawPixmapEPN3x1110ConnectionENS0_8VisualIdENS0_8DrawableENS0_15GraphicsContextERK8SkPixmapiiiiii(%"class.x11::Connection"* %56, i32 %58, i32 %60, i32 %62, %class.SkPixmap* nonnull dereferenceable(40) %4, i32 0, i32 0, i32 0, i32 0, i32 %52, i32 %54) #5
  %63 = load %class.SkColorSpace*, %class.SkColorSpace** %37, align 8
  %64 = icmp eq %class.SkColorSpace* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %43
  %66 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = bitcast %class.SkColorSpace* %63 to i8*
  call void @_ZdlPv(i8* %70) #6
  br label %71

71:                                               ; preds = %43, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #5
  %72 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 16
  %73 = icmp eq %class.SkColorSpace* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = bitcast %class.SkColorSpace* %72 to i8*
  call void @_ZdlPv(i8* %79) #6
  br label %80

80:                                               ; preds = %71, %74, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN2ui10DrawPixmapEPN3x1110ConnectionENS0_8VisualIdENS0_8DrawableENS0_15GraphicsContextERK8SkPixmapiiiiii(%"class.x11::Connection"*, i32, i32, i32, %class.SkPixmap* dereferenceable(40), i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2gl9GLSurface16PrepareToDestroyEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN2ui20GLSurfaceEglReadback6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb(%"class.ui::GLSurfaceEglReadback"*, %"class.gfx::Size"* dereferenceable(8), float, %"class.gfx::ColorSpace"* dereferenceable(68), i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface8RecreateEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface10DeferDrawsEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2ui20GLSurfaceEglReadback11IsOffscreenEv(%"class.ui::GLSurfaceEglReadback"*) unnamed_addr #1

declare void @_ZN2ui20GLSurfaceEglReadback11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE() unnamed_addr

declare i64 @_ZN2gl19PbufferGLSurfaceEGL7GetSizeEv(%"class.gl::PbufferGLSurfaceEGL"*) unnamed_addr #1

declare i8* @_ZN2gl19PbufferGLSurfaceEGL9GetHandleEv(%"class.gl::PbufferGLSurfaceEGL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv(%"class.gl::GLSurface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface21SupportsPostSubBufferEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface27SupportsCommitOverlayPlanesEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface17SupportsAsyncSwapEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare i32 @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare void @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare void @_ZN2gl9GLSurface13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE() unnamed_addr

declare void @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare void @_ZN2gl9GLSurface19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE() unnamed_addr

declare void @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare zeroext i1 @_ZN2gl9GLSurface13OnMakeCurrentEPNS_9GLContextE(%"class.gl::GLSurface"*, %"class.gl::GLContext"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface23SetBackbufferAllocationEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare void @_ZN2gl9GLSurface24SetFrontbufferAllocationEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare i8* @_ZN2gl19PbufferGLSurfaceEGL14GetShareHandleEv(%"class.gl::PbufferGLSurfaceEGL"*) unnamed_addr #1

declare i8* @_ZN2gl12GLSurfaceEGL10GetDisplayEv(%"class.gl::GLSurfaceEGL"*) unnamed_addr #1

declare i8* @_ZN2gl12GLSurfaceEGL9GetConfigEv(%"class.gl::GLSurfaceEGL"*) unnamed_addr #1

declare void @_ZN2gl12GLSurfaceEGL9GetFormatEv(%"class.gl::GLSurfaceFormat"* sret, %"class.gl::GLSurfaceEGL"*) unnamed_addr #1

declare %"class.gfx::VSyncProvider"* @_ZN2gl9GLSurface16GetVSyncProviderEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface15SetVSyncEnabledEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE(%"class.gl::GLSurface"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16), i1 zeroext, i64) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE(%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE() unnamed_addr

declare void @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE() unnamed_addr

declare zeroext i1 @_ZN2gl9GLSurface17SetEnableDCLayersEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface13IsSurfacelessEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface18SupportsViewporterEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare i32 @_ZNK2ui20GLSurfaceEglReadback9GetOriginEv(%"class.ui::GLSurfaceEglReadback"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface14BuffersFlippedEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface16SupportsDCLayersEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface22SupportsProtectedVideoEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE(%"class.gl::GLSurface"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare i64 @_ZNK2gl9GLSurface13GetDrawOffsetEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface22SupportsSwapTimestampsEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface23SetEnableSwapTimestampsEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare i32 @_ZNK2gl9GLSurface14GetBufferCountEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare %"class.gl::EGLTimestampClient"* @_ZN2gl9GLSurface21GetEGLTimestampClientEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface16SupportsGpuVSyncEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE(%"class.gl::GLSurface"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface12SetFrameRateEf(%"class.gl::GLSurface"*, float) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2gl9GLSurface10SetCurrentEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface9IsCurrentEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface20SupportsDelegatedInkEv(%"class.gl::GLSurface"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE(%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.gfx::DelegatedInkMetadata"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.gfx::DelegatedInkMetadata"* %1 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE() unnamed_addr

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.262*, %"class.std::__1::unique_ptr.264"*) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #1

declare %"struct.x11::GetWindowAttributesReply"* @_ZN3x116detail9ReadReplyINS_24GetWindowAttributesReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
