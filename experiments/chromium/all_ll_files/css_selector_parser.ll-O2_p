; ModuleID = '../../third_party/blink/renderer/core/css/parser/css_selector_parser.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/css_selector_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.257 }
%class.scoped_refptr.257 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.258", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.258" = type { %"class.base::RefCounted.259" }
%"class.base::RefCounted.259" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry" = type <{ i8*, i16, i16, [4 x i8] }>
%"class.blink::CSSSelectorParser" = type <{ %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.2, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.186", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%class.scoped_refptr.2 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.9", i32, [4 x i8], %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.182", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.125", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i64 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.105", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.119", [4 x i8] }>
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107", %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { i64 }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { float }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.128", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.163" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.84"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.188" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::WeakMember.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member", %"class.WTF::String", %"class.blink::HeapVector", %"class.blink::HeapVector.202", %"class.blink::HeapVector.210", %"class.WTF::HashMap.218", %"class.WTF::AtomicString", %"class.blink::WeakMember.223", i8, [7 x i8], %"class.blink::Member.225", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::Member.232", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.198" }
%"class.WTF::Vector.198" = type { %"class.WTF::VectorBuffer.199" }
%"class.WTF::VectorBuffer.199" = type { %"class.WTF::VectorBufferBase.200" }
%"class.WTF::VectorBufferBase.200" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HeapVector.202" = type { %"class.WTF::Vector.205" }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::Member.208"*, i32, i32 }
%"class.blink::Member.208" = type opaque
%"class.blink::HeapVector.210" = type { %"class.WTF::Vector.213" }
%"class.WTF::Vector.213" = type { %"class.WTF::VectorBuffer.214" }
%"class.WTF::VectorBuffer.214" = type { %"class.WTF::VectorBufferBase.215" }
%"class.WTF::VectorBufferBase.215" = type { %"class.blink::Member.216"*, i32, i32 }
%"class.blink::Member.216" = type opaque
%"class.WTF::HashMap.218" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"struct.WTF::KeyValuePair.222"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.222" = type opaque
%"class.blink::WeakMember.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::Member.225" = type { %"class.blink::MemberBase.226" }
%"class.blink::MemberBase.226" = type { %"class.blink::CSSParserContext"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.229" }
%"class.WTF::HashTable.229" = type <{ %"class.blink::WeakMember.231"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.231" = type opaque
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.236", %"class.blink::HeapHashMap.236", %"class.blink::HeapHashMap.236", %"class.blink::HeapHashMap.236", %"class.blink::HeapVector.243", %"class.blink::HeapVector.243", %"class.blink::HeapVector.243", %"class.blink::HeapVector.243", %"class.blink::HeapVector.243", %"class.blink::HeapVector.243", %"class.blink::HeapVector.243", %"class.blink::HeapVector.243", %"class.blink::HeapVector.243", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.318", %"class.blink::HeapVector.326", %"class.blink::HeapVector.334", %"class.blink::HeapVector.351", %"class.blink::HeapVector.359", %"class.blink::HeapVector.367", %"class.blink::HeapVector.375", %"class.WTF::Vector.382", i32, %"class.blink::Member.406" }
%"class.blink::HeapHashMap.236" = type { %"class.WTF::HashMap.239" }
%"class.WTF::HashMap.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"struct.WTF::KeyValuePair.242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.242" = type { %"class.WTF::AtomicString", %"class.blink::Member.531" }
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::HeapVector.243"* }
%"class.blink::HeapVector.243" = type { %"class.WTF::Vector.246" }
%"class.WTF::Vector.246" = type { %"class.WTF::VectorBuffer.247" }
%"class.WTF::VectorBuffer.247" = type { %"class.WTF::VectorBufferBase.248" }
%"class.WTF::VectorBufferBase.248" = type { %"class.blink::Member.249"*, i32, i32 }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.253", i64, [4 x i32] }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.282", %"class.blink::Member.286" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.291", %"class.WTF::HashMap.291", %"class.WTF::HashMap.291", %"class.WTF::HashMap.296", %class.scoped_refptr.301, %class.scoped_refptr.312, %class.scoped_refptr.311, %"class.WTF::Vector.313", %"class.WTF::Vector.313", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.291" = type { %"class.WTF::HashTable.292" }
%"class.WTF::HashTable.292" = type <{ %"struct.WTF::KeyValuePair.295"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.295" = type { %"class.WTF::AtomicString", %class.scoped_refptr.521 }
%class.scoped_refptr.521 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.302", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.308", %"union.blink::InvalidationSet::Backing.309", %"union.blink::InvalidationSet::Backing.310", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.302" = type { %"class.base::RefCounted.303" }
%"class.base::RefCounted.303" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.308" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.309" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.310" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"struct.WTF::KeyValuePair.300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.300" = type opaque
%class.scoped_refptr.301 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.311, %class.scoped_refptr.311 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.302", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.308", %"union.blink::InvalidationSet::Backing.309", %"union.blink::InvalidationSet::Backing.310", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.312 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.311 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.WTF::Vector.313" = type { %"class.WTF::VectorBuffer.314" }
%"class.WTF::VectorBuffer.314" = type { %"class.WTF::VectorBufferBase.315" }
%"class.WTF::VectorBufferBase.315" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::HeapVector.318" = type { %"class.WTF::Vector.321" }
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { %"class.blink::Member.324"*, i32, i32 }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.282", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.326" = type { %"class.WTF::Vector.329" }
%"class.WTF::Vector.329" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331" }
%"class.WTF::VectorBufferBase.331" = type { %"class.blink::Member.332"*, i32, i32 }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.282" }
%"class.blink::HeapVector.334" = type { %"class.WTF::Vector.337" }
%"class.WTF::Vector.337" = type { %"class.WTF::VectorBuffer.338" }
%"class.WTF::VectorBuffer.338" = type { %"class.WTF::VectorBufferBase.339" }
%"class.WTF::VectorBufferBase.339" = type { %"class.blink::Member.340"*, i32, i32 }
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.342", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.342" = type { %"class.WTF::Vector.345" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.blink::Member.348"*, i32, i32 }
%"class.blink::Member.348" = type opaque
%"class.blink::HeapVector.351" = type { %"class.WTF::Vector.354" }
%"class.WTF::Vector.354" = type { %"class.WTF::VectorBuffer.355" }
%"class.WTF::VectorBuffer.355" = type { %"class.WTF::VectorBufferBase.356" }
%"class.WTF::VectorBufferBase.356" = type { %"class.blink::Member.357"*, i32, i32 }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.282" }
%"class.blink::HeapVector.359" = type { %"class.WTF::Vector.362" }
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.blink::Member.365"*, i32, i32 }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", i32, [4 x i8] }>
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector.367" = type { %"class.WTF::Vector.370" }
%"class.WTF::Vector.370" = type { %"class.WTF::VectorBuffer.371" }
%"class.WTF::VectorBuffer.371" = type { %"class.WTF::VectorBufferBase.372" }
%"class.WTF::VectorBufferBase.372" = type { %"class.blink::Member.373"*, i32, i32 }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.526" }
%"class.blink::HeapVector.375" = type { %"class.WTF::Vector.378" }
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380" }
%"class.WTF::VectorBufferBase.380" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.253", i32, i32 }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.385, i8, [7 x i8] }>
%class.scoped_refptr.385 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.386", %"class.WTF::Vector.388" }
%"class.WTF::RefCounted.386" = type { %"class.base::RefCounted.387" }
%"class.base::RefCounted.387" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.388" = type { %"class.WTF::VectorBuffer.389" }
%"class.WTF::VectorBuffer.389" = type { %"class.WTF::VectorBufferBase.390" }
%"class.WTF::VectorBufferBase.390" = type { %"class.std::__1::unique_ptr.391"*, i32, i32 }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.394", %"class.WTF::String" }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.410", %"class.blink::HeapHashMap.410", %"class.blink::HeapHashMap.410", %"class.blink::HeapHashMap.410" }
%"class.blink::HeapHashMap.410" = type { %"class.WTF::HashMap.413" }
%"class.WTF::HashMap.413" = type { %"class.WTF::HashTable.414" }
%"class.WTF::HashTable.414" = type <{ %"struct.WTF::KeyValuePair.416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.416" = type opaque
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446" }
%"class.WTF::VectorBufferBase.446" = type { %"class.std::__1::unique_ptr.432"*, i32, i32 }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::CSSParserSelector"* }
%"class.blink::CSSParserSelector" = type { %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.432" }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::CSSSelector"* }
%"struct.blink::CSSSelector::RareData" = type { %"class.WTF::RefCounted.261", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %union.anon.263, %"class.blink::QualifiedName", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271" }
%"class.WTF::RefCounted.261" = type { %"class.base::RefCounted.262" }
%"class.base::RefCounted.262" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.263 = type { %struct.anon.264 }
%struct.anon.264 = type { i32, i32 }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::CSSSelectorList"* }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.WTF::Vector.274"* }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::CSSParserTokenStream" = type <{ %"class.WTF::Vector.417", %"class.blink::CSSTokenizer"*, %"class.blink::CSSParserToken", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419", [768 x i8] }
%"class.WTF::VectorBufferBase.419" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.422", %"class.WTF::Vector.427", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr }
%"class.WTF::Vector.422" = type { %"class.WTF::VectorBuffer.423" }
%"class.WTF::VectorBuffer.423" = type { %"class.WTF::VectorBufferBase.424", [32 x i8] }
%"class.WTF::VectorBufferBase.424" = type { i32*, i32, i32 }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::CSSParserObserver" = type { i32 (...)** }
%"struct.std::__1::default_delete.442" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.449", %"class.blink::Member.449", %"class.blink::Member.453" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.451", %"class.blink::Member.461", %"class.blink::Member.461", %"class.blink::Member.498", %"class.blink::Member.500", %"class.blink::Member.502", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.507", %"class.blink::HeapVector.509" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.449", %"class.blink::Member.449" }
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::Document"* }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.465" }
%"class.blink::HeapHashMap.465" = type { %"class.WTF::HashMap.468" }
%"class.WTF::HashMap.468" = type { %"class.WTF::HashTable.469" }
%"class.WTF::HashTable.469" = type <{ %"struct.WTF::KeyValuePair.471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.471" = type { %"class.WTF::AtomicString", %"class.blink::Member.472" }
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.476", i32, %"class.blink::HeapVector.491" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.478" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.482", %"class.blink::Member.282", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.482" = type { %"class.WTF::SingleThreadedBitField.483" }
%"class.WTF::SingleThreadedBitField.483" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.484 }
%class.scoped_refptr.484 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.485", %"class.WTF::AtomicString", %"class.WTF::Vector.487" }
%"class.WTF::RefCounted.485" = type { %"class.base::RefCounted.486" }
%"class.base::RefCounted.486" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.276", [32 x i8] }
%"class.blink::HeapVector.491" = type { %"class.WTF::Vector.494" }
%"class.WTF::Vector.494" = type { %"class.WTF::VectorBuffer.495" }
%"class.WTF::VectorBuffer.495" = type { %"class.WTF::VectorBufferBase.496" }
%"class.WTF::VectorBufferBase.496" = type { %"class.blink::Member.476"*, i32, i32 }
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.504" }
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::HeapHashMap.506"* }
%"class.blink::HeapHashMap.506" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.509" = type { %"class.WTF::Vector.512" }
%"class.WTF::Vector.512" = type { %"class.WTF::VectorBuffer.513" }
%"class.WTF::VectorBuffer.513" = type { %"class.WTF::VectorBufferBase.514" }
%"class.WTF::VectorBufferBase.514" = type { %"class.blink::Member.515"*, i32, i32 }
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::Node"* }
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.std::__1::pair.520" = type { i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.535 }
%union.anon.535 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_22EEEENS_19CSSParserTokenRangeEv = comdat any

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink11CSSSelector8SetValueERKN3WTF12AtomicStringEb = comdat any

$_ZNKSt3__114default_deleteIN5blink11CSSSelectorEEclEPS2_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CSSParserSelectorENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm = comdat any

@.str = private unnamed_addr constant [9 x i8] c"-webkit-\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"-internal-\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c"even\00", align 1
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase37is_custom_state_pseudo_class_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase44is_css_marker_nested_pseudo_element_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase39is_css_case_sensitive_selector_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10g_any_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table = internal global [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"] zeroinitializer, align 16
@_ZGVZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table = internal global i64 0, align 8
@.str.7 = private unnamed_addr constant [4 x i8] c"cue\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"-internal-media-controls-overlay-cast-button\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"-webkit-calendar-picker-indicator\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"-webkit-clear-button\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"-webkit-color-swatch\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"-webkit-color-swatch-wrapper\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"-webkit-date-and-time-value\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"-webkit-datetime-edit\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"-webkit-datetime-edit-ampm-field\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"-webkit-datetime-edit-day-field\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"-webkit-datetime-edit-fields-wrapper\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"-webkit-datetime-edit-hour-field\00", align 1
@.str.19 = private unnamed_addr constant [40 x i8] c"-webkit-datetime-edit-millisecond-field\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"-webkit-datetime-edit-minute-field\00", align 1
@.str.21 = private unnamed_addr constant [34 x i8] c"-webkit-datetime-edit-month-field\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"-webkit-datetime-edit-second-field\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"-webkit-datetime-edit-text\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"-webkit-datetime-edit-week-field\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c"-webkit-datetime-edit-year-field\00", align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"-webkit-file-upload-button\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"-webkit-inner-spin-button\00", align 1
@.str.28 = private unnamed_addr constant [26 x i8] c"-webkit-input-placeholder\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"-webkit-media-controls\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"-webkit-media-controls-current-time-display\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"-webkit-media-controls-enclosure\00", align 1
@.str.32 = private unnamed_addr constant [41 x i8] c"-webkit-media-controls-fullscreen-button\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"-webkit-media-controls-mute-button\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"-webkit-media-controls-overlay-enclosure\00", align 1
@.str.35 = private unnamed_addr constant [43 x i8] c"-webkit-media-controls-overlay-play-button\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"-webkit-media-controls-panel\00", align 1
@.str.37 = private unnamed_addr constant [35 x i8] c"-webkit-media-controls-play-button\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"-webkit-media-controls-timeline\00", align 1
@.str.39 = private unnamed_addr constant [42 x i8] c"-webkit-media-controls-timeline-container\00", align 1
@.str.40 = private unnamed_addr constant [46 x i8] c"-webkit-media-controls-time-remaining-display\00", align 1
@.str.41 = private unnamed_addr constant [53 x i8] c"-webkit-media-controls-toggle-closed-captions-button\00", align 1
@.str.42 = private unnamed_addr constant [37 x i8] c"-webkit-media-controls-volume-slider\00", align 1
@.str.43 = private unnamed_addr constant [31 x i8] c"-webkit-media-slider-container\00", align 1
@.str.44 = private unnamed_addr constant [27 x i8] c"-webkit-media-slider-thumb\00", align 1
@.str.45 = private unnamed_addr constant [35 x i8] c"-webkit-media-text-track-container\00", align 1
@.str.46 = private unnamed_addr constant [33 x i8] c"-webkit-media-text-track-display\00", align 1
@.str.47 = private unnamed_addr constant [32 x i8] c"-webkit-media-text-track-region\00", align 1
@.str.48 = private unnamed_addr constant [42 x i8] c"-webkit-media-text-track-region-container\00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"-webkit-meter-bar\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"-webkit-meter-even-less-good-value\00", align 1
@.str.51 = private unnamed_addr constant [28 x i8] c"-webkit-meter-inner-element\00", align 1
@.str.52 = private unnamed_addr constant [28 x i8] c"-webkit-meter-optimum-value\00", align 1
@.str.53 = private unnamed_addr constant [31 x i8] c"-webkit-meter-suboptimum-value\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"-webkit-progress-bar\00", align 1
@.str.55 = private unnamed_addr constant [31 x i8] c"-webkit-progress-inner-element\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"-webkit-progress-value\00", align 1
@.str.57 = private unnamed_addr constant [29 x i8] c"-webkit-search-cancel-button\00", align 1
@.str.58 = private unnamed_addr constant [25 x i8] c"-webkit-slider-container\00", align 1
@.str.59 = private unnamed_addr constant [30 x i8] c"-webkit-slider-runnable-track\00", align 1
@.str.60 = private unnamed_addr constant [21 x i8] c"-webkit-slider-thumb\00", align 1
@.str.61 = private unnamed_addr constant [39 x i8] c"-webkit-textfield-decoration-container\00", align 1
@.str.62 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.64 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.65 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::CSSParserSelector, std::__1::default_delete<blink::CSSParserSelector> >]\00", align 1
@.str.66 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserToken]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<WTF::AtomicString, 0, WTF::PartitionAllocator>]\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink17CSSSelectorParserC1EPKNS_16CSSParserContextEPNS_18StyleSheetContentsE = hidden unnamed_addr alias void (%"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*), void (%"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*)* @_ZN5blink17CSSSelectorParserC2EPKNS_16CSSParserContextEPNS_18StyleSheetContentsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser13ParseSelectorENS_19CSSParserTokenRangeEPKNS_16CSSParserContextEPNS_18StyleSheetContentsE(%"class.blink::CSSSelectorList"* noalias nocapture sret, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = alloca %"class.blink::CSSSelectorParser", align 8
  %8 = alloca %"class.blink::CSSSelectorList", align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %2, %"class.blink::CSSParserToken"** %10, align 8
  %11 = bitcast %"class.blink::CSSSelectorParser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %7, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %7, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %7, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %7, i64 0, i32 3
  %16 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %7, i64 0, i32 4
  %17 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %7, i64 0, i32 6
  %18 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %7, i64 0, i32 7
  %19 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %7, i64 0, i32 8
  %20 = bitcast %"class.blink::CSSSelectorParser"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  store %"class.blink::CSSParserContext"* %3, %"class.blink::CSSParserContext"** %12, align 8
  store %"class.blink::StyleSheetContents"* %4, %"class.blink::StyleSheetContents"** %13, align 8
  store i8 0, i8* %14, align 8
  store i8 0, i8* %15, align 1
  store i8 0, i8* %16, align 2
  store i32 0, i32* %17, align 4
  store i8 0, i8* %18, align 8
  store i8 0, i8* %19, align 1
  %21 = icmp ult %"class.blink::CSSParserToken"* %1, %2
  %22 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %23 = select i1 %21, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %22
  %24 = bitcast %"class.blink::CSSParserToken"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 63
  %27 = icmp eq i32 %26, 17
  br i1 %27, label %28, label %37

28:                                               ; preds = %5, %28
  %29 = phi %"class.blink::CSSParserToken"* [ %30, %28 ], [ %1, %5 ]
  %30 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %29, i64 1
  store %"class.blink::CSSParserToken"* %30, %"class.blink::CSSParserToken"** %9, align 8
  %31 = icmp ult %"class.blink::CSSParserToken"* %30, %2
  %32 = select i1 %31, %"class.blink::CSSParserToken"* %30, %"class.blink::CSSParserToken"* %22
  %33 = bitcast %"class.blink::CSSParserToken"* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 63
  %36 = icmp eq i32 %35, 17
  br i1 %36, label %28, label %37

37:                                               ; preds = %28, %5
  %38 = bitcast %"class.blink::CSSSelectorList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %8, i64 0, i32 0
  store %"class.blink::CSSSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSSelector"*), %"class.blink::CSSSelector"** %39, align 8
  call void @_ZN5blink17CSSSelectorParser26ConsumeComplexSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* nonnull sret %8, %"class.blink::CSSSelectorParser"* nonnull %7, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6)
  %40 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %41 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %10, align 8
  %42 = icmp eq %"class.blink::CSSParserToken"* %40, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  call void @_ZN5blink17CSSSelectorParser26RecordUsageAndDeprecationsERKNS_15CSSSelectorListE(%"class.blink::CSSSelectorParser"* nonnull %7, %"class.blink::CSSSelectorList"* nonnull dereferenceable(8) %8)
  %44 = bitcast %"class.blink::CSSSelectorList"* %8 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::CSSSelectorList"* %0 to i64*
  store i64 %45, i64* %46, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %39, align 8
  br label %52

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %48, align 8
  %49 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %39, align 8
  %50 = icmp eq %"class.blink::CSSSelector"* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %8) #12
  br label %52

52:                                               ; preds = %43, %47, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser26ConsumeComplexSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* noalias sret, %"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.444", align 8
  %5 = alloca %"class.std::__1::unique_ptr.432", align 8
  %6 = bitcast %"class.WTF::Vector.444"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #12
  %10 = bitcast %"class.std::__1::unique_ptr.432"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser22ConsumeComplexSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2)
  store %"class.blink::CSSParserSelector"* %12, %"class.blink::CSSParserSelector"** %11, align 8
  %13 = icmp eq %"class.blink::CSSParserSelector"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %15, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %11, align 8
  br label %96

16:                                               ; preds = %3
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"* nonnull %4, %"class.std::__1::unique_ptr.432"* nonnull dereferenceable(8) %5) #12
  %17 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 0
  %18 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 1
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 1
  %23 = icmp eq %"class.blink::CSSParserToken"* %18, %20
  br i1 %23, label %84, label %24

24:                                               ; preds = %16
  %25 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.432"* %5 to i64*
  br label %27

27:                                               ; preds = %24, %80
  %28 = phi %"class.blink::CSSParserToken"* [ %20, %24 ], [ %82, %80 ]
  %29 = phi %"class.blink::CSSParserToken"* [ %18, %24 ], [ %81, %80 ]
  %30 = icmp ult %"class.blink::CSSParserToken"* %29, %28
  %31 = select i1 %30, %"class.blink::CSSParserToken"* %29, %"class.blink::CSSParserToken"* %25
  %32 = bitcast %"class.blink::CSSParserToken"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 63
  %35 = icmp eq i32 %34, 22
  br i1 %35, label %36, label %84

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %29, i64 1
  store %"class.blink::CSSParserToken"* %37, %"class.blink::CSSParserToken"** %21, align 8
  %38 = icmp ult %"class.blink::CSSParserToken"* %37, %28
  %39 = select i1 %38, %"class.blink::CSSParserToken"* %37, %"class.blink::CSSParserToken"* %25
  %40 = bitcast %"class.blink::CSSParserToken"* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 63
  %43 = icmp eq i32 %42, 17
  br i1 %43, label %44, label %53

44:                                               ; preds = %36, %44
  %45 = phi %"class.blink::CSSParserToken"* [ %46, %44 ], [ %37, %36 ]
  %46 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %45, i64 1
  store %"class.blink::CSSParserToken"* %46, %"class.blink::CSSParserToken"** %21, align 8
  %47 = icmp ult %"class.blink::CSSParserToken"* %46, %28
  %48 = select i1 %47, %"class.blink::CSSParserToken"* %46, %"class.blink::CSSParserToken"* %25
  %49 = bitcast %"class.blink::CSSParserToken"* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 63
  %52 = icmp eq i32 %51, 17
  br i1 %52, label %44, label %53

53:                                               ; preds = %44, %36
  %54 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser22ConsumeComplexSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2)
  %55 = ptrtoint %"class.blink::CSSParserSelector"* %54 to i64
  %56 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %11, align 8
  store i64 %55, i64* %26, align 8
  %57 = icmp eq %"class.blink::CSSParserSelector"* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %53
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %56) #12
  %59 = bitcast %"class.blink::CSSParserSelector"* %56 to i8*
  call void @free(i8* %59) #12
  %60 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %11, align 8
  %61 = ptrtoint %"class.blink::CSSParserSelector"* %60 to i64
  br label %62

62:                                               ; preds = %58, %53
  %63 = phi i64 [ %61, %58 ], [ %55, %53 ]
  %64 = phi %"class.blink::CSSParserSelector"* [ %60, %58 ], [ %54, %53 ]
  %65 = icmp eq %"class.blink::CSSParserSelector"* %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %67, align 8
  br label %91

68:                                               ; preds = %62
  %69 = load i32, i32* %9, align 4
  %70 = load i32, i32* %8, align 8
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %79, label %72, !prof !2

72:                                               ; preds = %68
  %73 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %7, align 8
  %74 = zext i32 %69 to i64
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %73, i64 %74
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %11, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.432"* %75 to i64*
  store i64 %63, i64* %76, align 8
  %77 = load i32, i32* %9, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %9, align 4
  br label %80

79:                                               ; preds = %68
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"* nonnull %4, %"class.std::__1::unique_ptr.432"* nonnull dereferenceable(8) %5) #12
  br label %80

80:                                               ; preds = %72, %79
  %81 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %21, align 8
  %82 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %22, align 8
  %83 = icmp eq %"class.blink::CSSParserToken"* %81, %82
  br i1 %83, label %84, label %27

84:                                               ; preds = %27, %80, %16
  %85 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %1, i64 0, i32 2
  %86 = load i8, i8* %85, align 8, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %89, align 8
  br label %91

90:                                               ; preds = %84
  call void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* sret %0, %"class.WTF::Vector.444"* nonnull dereferenceable(16) %4) #12
  br label %91

91:                                               ; preds = %90, %88, %66
  %92 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %11, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %11, align 8
  %93 = icmp eq %"class.blink::CSSParserSelector"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %92) #12
  %95 = bitcast %"class.blink::CSSParserSelector"* %92 to i8*
  call void @free(i8* %95) #12
  br label %96

96:                                               ; preds = %14, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %97 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %7, align 8
  %98 = icmp eq %"class.std::__1::unique_ptr.432"* %97, null
  br i1 %98, label %121, label %99, !prof !4

99:                                               ; preds = %96
  %100 = bitcast %"class.std::__1::unique_ptr.432"* %97 to i8*
  %101 = load i32, i32* %9, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %119, label %103, !prof !2

103:                                              ; preds = %99
  %104 = zext i32 %101 to i64
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %97, i64 %104
  br label %106

106:                                              ; preds = %113, %103
  %107 = phi %"class.std::__1::unique_ptr.432"* [ %114, %113 ], [ %97, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %108, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %108, align 8
  %110 = icmp eq %"class.blink::CSSParserSelector"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %106
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %109) #12
  %112 = bitcast %"class.blink::CSSParserSelector"* %109 to i8*
  call void @free(i8* %112) #12
  br label %113

113:                                              ; preds = %111, %106
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %107, i64 1
  %115 = icmp eq %"class.std::__1::unique_ptr.432"* %114, %105
  br i1 %115, label %116, label %106

116:                                              ; preds = %113
  store i32 0, i32* %9, align 4
  %117 = bitcast %"class.WTF::Vector.444"* %4 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %99
  %120 = phi i8* [ %118, %116 ], [ %100, %99 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %120) #12
  store %"class.std::__1::unique_ptr.432"* null, %"class.std::__1::unique_ptr.432"** %7, align 8
  br label %121

121:                                              ; preds = %96, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser26RecordUsageAndDeprecationsERKNS_15CSSSelectorListE(%"class.blink::CSSSelectorParser"* nocapture readonly, %"class.blink::CSSSelectorList"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  %4 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %4, i64 0, i32 13, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %122, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %4, i64 0, i32 3
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 5
  br i1 %11, label %122, label %12

12:                                               ; preds = %8
  %13 = tail call %"class.blink::CSSSelector"* @_ZNK5blink15CSSSelectorList13FirstForCSSOMEv(%"class.blink::CSSSelectorList"* %1) #12
  %14 = icmp eq %"class.blink::CSSSelector"* %13, null
  br i1 %14, label %122, label %15

15:                                               ; preds = %12, %24
  %16 = phi %"class.blink::CSSSelector"* [ %23, %24 ], [ %13, %12 ]
  br label %29

17:                                               ; preds = %115, %17
  %18 = phi %"class.blink::CSSSelector"* [ %23, %17 ], [ %16, %115 ]
  %19 = bitcast %"class.blink::CSSSelector"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 131072
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %18, i64 1
  br i1 %22, label %17, label %24

24:                                               ; preds = %17
  %25 = and i32 %20, 2097152
  %26 = icmp ne i32 %25, 0
  %27 = icmp eq %"class.blink::CSSSelector"* %23, null
  %28 = or i1 %27, %26
  br i1 %28, label %122, label %15

29:                                               ; preds = %15, %115
  %30 = phi %"class.blink::CSSSelector"* [ %119, %115 ], [ %16, %15 ]
  %31 = bitcast %"class.blink::CSSSelector"* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = lshr i32 %32, 8
  %34 = trunc i32 %33 to i8
  switch i8 %34, label %95 [
    i8 18, label %66
    i8 19, label %35
    i8 29, label %36
    i8 28, label %37
    i8 21, label %38
    i8 22, label %39
    i8 20, label %40
    i8 93, label %41
    i8 104, label %42
    i8 95, label %43
    i8 96, label %44
    i8 80, label %45
    i8 79, label %46
    i8 100, label %47
    i8 88, label %48
    i8 97, label %58
    i8 40, label %59
    i8 41, label %60
    i8 108, label %61
  ]

35:                                               ; preds = %29
  br label %66

36:                                               ; preds = %29
  br label %66

37:                                               ; preds = %29
  br label %66

38:                                               ; preds = %29
  br label %66

39:                                               ; preds = %29
  br label %66

40:                                               ; preds = %29
  br label %66

41:                                               ; preds = %29
  br label %66

42:                                               ; preds = %29
  br label %66

43:                                               ; preds = %29
  br label %66

44:                                               ; preds = %29
  br label %66

45:                                               ; preds = %29
  br label %66

46:                                               ; preds = %29
  br label %66

47:                                               ; preds = %29
  br label %66

48:                                               ; preds = %29
  %49 = and i32 %32, 262144
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %30, i64 0, i32 1
  br i1 %50, label %56, label %52

52:                                               ; preds = %48
  %53 = bitcast %"union.blink::CSSSelector::DataUnion"* %51 to %"struct.blink::CSSSelector::RareData"**
  %54 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %53, align 8
  %55 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %54, i64 0, i32 1
  br label %62

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %51, i64 0, i32 0
  br label %62

58:                                               ; preds = %29
  br label %66

59:                                               ; preds = %29
  br label %66

60:                                               ; preds = %29
  br label %66

61:                                               ; preds = %29
  br label %66

62:                                               ; preds = %56, %52
  %63 = phi %"class.WTF::AtomicString"* [ %55, %52 ], [ %57, %56 ]
  %64 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %63)
  %65 = icmp eq i32 %64, 3927
  br i1 %65, label %95, label %66

66:                                               ; preds = %29, %35, %36, %37, %38, %39, %40, %41, %42, %43, %44, %45, %46, %47, %58, %59, %60, %61, %62
  %67 = phi i32 [ %64, %62 ], [ 2322, %35 ], [ 2388, %36 ], [ 2387, %37 ], [ 2266, %38 ], [ 2260, %39 ], [ 2431, %40 ], [ 1383, %41 ], [ 1118, %42 ], [ 469, %43 ], [ 470, %44 ], [ 628, %45 ], [ 629, %46 ], [ 1062, %47 ], [ 1065, %58 ], [ 1377, %59 ], [ 1378, %60 ], [ 3741, %61 ], [ 1250, %29 ]
  %68 = tail call %"class.WTF::StringImpl"* @_ZN5blink11Deprecation18DeprecationMessageENS_5mojom10WebFeatureE(i32 %67) #12
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %3, align 8
  br label %93

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %72
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %72
  %85 = phi i32 [ %83, %82 ], [ %81, %72 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  %88 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %3, align 8
  br i1 %75, label %93, label %91

89:                                               ; preds = %84
  %90 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %3, align 8
  br i1 %75, label %93, label %91

91:                                               ; preds = %87, %89
  %92 = phi %"class.blink::CSSParserContext"* [ %88, %87 ], [ %90, %89 ]
  tail call void @_ZNK5blink16CSSParserContext16CountDeprecationENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %92, i32 %67) #12
  br label %95

93:                                               ; preds = %87, %70, %89
  %94 = phi %"class.blink::CSSParserContext"* [ %71, %70 ], [ %90, %89 ], [ %88, %87 ]
  tail call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %94, i32 %67) #12
  br label %95

95:                                               ; preds = %29, %62, %91, %93
  %96 = load i32, i32* %31, align 8
  %97 = and i32 %96, 15
  %98 = icmp eq i32 %97, 4
  br i1 %98, label %99, label %102

99:                                               ; preds = %95
  %100 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %3, align 8
  tail call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %100, i32 1153) #12
  %101 = load i32, i32* %31, align 8
  br label %102

102:                                              ; preds = %99, %95
  %103 = phi i32 [ %101, %99 ], [ %96, %95 ]
  %104 = and i32 %103, 262144
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %115, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %30, i64 0, i32 1
  %108 = bitcast %"union.blink::CSSSelector::DataUnion"* %107 to %"struct.blink::CSSSelector::RareData"**
  %109 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %108, align 8
  %110 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %109, i64 0, i32 6, i32 0, i32 0, i32 0
  %111 = load %"class.blink::CSSSelectorList"*, %"class.blink::CSSSelectorList"** %110, align 8
  %112 = icmp eq %"class.blink::CSSSelectorList"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %106
  tail call void @_ZN5blink17CSSSelectorParser26RecordUsageAndDeprecationsERKNS_15CSSSelectorListE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSSelectorList"* nonnull dereferenceable(8) %111)
  %114 = load i32, i32* %31, align 8
  br label %115

115:                                              ; preds = %102, %106, %113
  %116 = phi i32 [ %103, %102 ], [ %103, %106 ], [ %114, %113 ]
  %117 = and i32 %116, 131072
  %118 = icmp ne i32 %117, 0
  %119 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %30, i64 1
  %120 = icmp eq %"class.blink::CSSSelector"* %119, null
  %121 = or i1 %120, %118
  br i1 %121, label %17, label %29

122:                                              ; preds = %24, %12, %2, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser15ConsumeSelectorERNS_20CSSParserTokenStreamEPKNS_16CSSParserContextEPNS_18StyleSheetContentsEPNS_17CSSParserObserverE(%"class.blink::CSSSelectorList"* noalias sret, %"class.blink::CSSParserTokenStream"* dereferenceable(832), %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSParserObserver"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CSSSelectorParser", align 8
  %7 = bitcast %"class.blink::CSSSelectorParser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %6, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %6, i64 0, i32 4
  %13 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %6, i64 0, i32 6
  %14 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %6, i64 0, i32 7
  %15 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %6, i64 0, i32 8
  %16 = bitcast %"class.blink::CSSSelectorParser"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  store %"class.blink::CSSParserContext"* %2, %"class.blink::CSSParserContext"** %8, align 8
  store %"class.blink::StyleSheetContents"* %3, %"class.blink::StyleSheetContents"** %9, align 8
  store i8 0, i8* %10, align 8
  store i8 0, i8* %11, align 1
  store i8 0, i8* %12, align 2
  store i32 0, i32* %13, align 4
  store i8 0, i8* %14, align 8
  store i8 0, i8* %15, align 1
  tail call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #12
  %17 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSSelector"*), %"class.blink::CSSSelector"** %17, align 8
  call void @_ZN5blink17CSSSelectorParser26ConsumeComplexSelectorListERNS_20CSSParserTokenStreamEPNS_17CSSParserObserverE(%"class.blink::CSSSelectorList"* sret %0, %"class.blink::CSSSelectorParser"* nonnull %6, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, %"class.blink::CSSParserObserver"* %4)
  call void @_ZN5blink17CSSSelectorParser26RecordUsageAndDeprecationsERKNS_15CSSSelectorListE(%"class.blink::CSSSelectorParser"* nonnull %6, %"class.blink::CSSSelectorList"* dereferenceable(8) %0)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  ret void
}

declare void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser26ConsumeComplexSelectorListERNS_20CSSParserTokenStreamEPNS_17CSSParserObserverE(%"class.blink::CSSSelectorList"* noalias sret, %"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832), %"class.blink::CSSParserObserver"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.WTF::Vector.444", align 8
  %7 = alloca %"class.blink::CSSParserTokenRange", align 8
  %8 = alloca %"class.std::__1::unique_ptr.432", align 8
  %9 = alloca %"class.blink::CSSParserToken", align 8
  %10 = bitcast %"class.WTF::Vector.444"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %6, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %6, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #12
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 1
  %15 = bitcast %"class.blink::CSSParserTokenRange"* %7 to i8*
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %7, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %7, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 2
  %19 = bitcast %"class.blink::CSSParserToken"* %18 to i32*
  %20 = bitcast %"class.std::__1::unique_ptr.432"* %8 to i8*
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %8, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %1, i64 0, i32 2
  %23 = icmp eq %"class.blink::CSSParserObserver"* %3, null
  %24 = bitcast %"class.blink::CSSParserObserver"* %3 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %25 = bitcast %"class.std::__1::unique_ptr.432"* %8 to i64*
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 4
  %27 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  %28 = bitcast %"class.blink::CSSParserToken"* %18 to i8*
  %29 = bitcast %"class.blink::CSSParserToken"* %9 to i8*
  %30 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  %31 = bitcast %"class.blink::CSSParserTokenRange"* %7 to i8*
  br label %32

32:                                               ; preds = %94, %4
  %33 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %14, align 8
  %34 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %33, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  %36 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_22EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %2)
  %37 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %36, 0
  store %"class.blink::CSSParserToken"* %37, %"class.blink::CSSParserToken"** %16, align 8
  %38 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %36, 1
  store %"class.blink::CSSParserToken"* %38, %"class.blink::CSSParserToken"** %17, align 8
  %39 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %14, align 8
  %40 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = load i32, i32* %19, align 8
  %43 = and i32 %42, 63
  %44 = icmp eq i32 %43, 31
  %45 = and i32 %42, 192
  %46 = icmp eq i32 %45, 128
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %32
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  br label %96

49:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store %"class.blink::CSSParserSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSParserSelector"*), %"class.blink::CSSParserSelector"** %21, align 8
  %50 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser22ConsumeComplexSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %7)
  store %"class.blink::CSSParserSelector"* %50, %"class.blink::CSSParserSelector"** %21, align 8
  %51 = icmp eq %"class.blink::CSSParserSelector"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %49
  %53 = load i8, i8* %22, align 8, !range !3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %16, align 8
  %57 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %17, align 8
  %58 = icmp eq %"class.blink::CSSParserToken"* %56, %57
  br i1 %58, label %60, label %59

59:                                               ; preds = %49, %52, %55
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %30, align 8
  br label %88

60:                                               ; preds = %55
  br i1 %23, label %65, label %61

61:                                               ; preds = %60
  %62 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %24, align 8
  %63 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %62, i64 2
  %64 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %63, align 8
  call void %64(%"class.blink::CSSParserObserver"* nonnull %3, i32 %35, i32 %41) #12
  br label %65

65:                                               ; preds = %60, %61
  %66 = load i32, i32* %13, align 4
  %67 = load i32, i32* %12, align 8
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %77, label %69, !prof !2

69:                                               ; preds = %65
  %70 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %11, align 8
  %71 = zext i32 %66 to i64
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %70, i64 %71
  %73 = load i64, i64* %25, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %21, align 8
  %74 = bitcast %"class.std::__1::unique_ptr.432"* %72 to i64*
  store i64 %73, i64* %74, align 8
  %75 = load i32, i32* %13, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %13, align 4
  br label %78

77:                                               ; preds = %65
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"* nonnull %6, %"class.std::__1::unique_ptr.432"* nonnull dereferenceable(8) %8) #12
  br label %78

78:                                               ; preds = %69, %77
  %79 = load i8, i8* %26, align 4, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  store i8 1, i8* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %82 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %14, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %82) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %27, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  br label %83

83:                                               ; preds = %78, %81
  %84 = load i32, i32* %19, align 8
  %85 = and i32 %84, 63
  %86 = icmp eq i32 %85, 27
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  call void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* nonnull sret %9, %"class.blink::CSSParserTokenStream"* %2) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %88

88:                                               ; preds = %83, %87, %59
  %89 = phi i32 [ 1, %59 ], [ 0, %87 ], [ 3, %83 ]
  %90 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %21, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %21, align 8
  %91 = icmp eq %"class.blink::CSSParserSelector"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %90) #12
  %93 = bitcast %"class.blink::CSSParserSelector"* %90 to i8*
  call void @free(i8* %93) #12
  br label %94

94:                                               ; preds = %92, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  switch i32 %89, label %96 [
    i32 0, label %32
    i32 3, label %95
  ]

95:                                               ; preds = %94
  call void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* sret %0, %"class.WTF::Vector.444"* nonnull dereferenceable(16) %6) #12
  br label %96

96:                                               ; preds = %94, %48, %95
  %97 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %11, align 8
  %98 = icmp eq %"class.std::__1::unique_ptr.432"* %97, null
  br i1 %98, label %121, label %99, !prof !4

99:                                               ; preds = %96
  %100 = bitcast %"class.std::__1::unique_ptr.432"* %97 to i8*
  %101 = load i32, i32* %13, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %119, label %103, !prof !2

103:                                              ; preds = %99
  %104 = zext i32 %101 to i64
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %97, i64 %104
  br label %106

106:                                              ; preds = %113, %103
  %107 = phi %"class.std::__1::unique_ptr.432"* [ %114, %113 ], [ %97, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %108, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %108, align 8
  %110 = icmp eq %"class.blink::CSSParserSelector"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %106
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %109) #12
  %112 = bitcast %"class.blink::CSSParserSelector"* %109 to i8*
  call void @free(i8* %112) #12
  br label %113

113:                                              ; preds = %111, %106
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %107, i64 1
  %115 = icmp eq %"class.std::__1::unique_ptr.432"* %114, %105
  br i1 %115, label %116, label %106

116:                                              ; preds = %113
  store i32 0, i32* %13, align 4
  %117 = bitcast %"class.WTF::Vector.444"* %6 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %99
  %120 = phi i8* [ %118, %116 ], [ %100, %99 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %120) #12
  store %"class.std::__1::unique_ptr.432"* null, %"class.std::__1::unique_ptr.432"** %11, align 8
  br label %121

121:                                              ; preds = %96, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSelectorParser23SupportsComplexSelectorENS_19CSSParserTokenRangeEPKNS_16CSSParserContextE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserContext"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserTokenRange", align 8
  %5 = alloca %"class.blink::CSSSelectorParser", align 8
  %6 = alloca %"class.std::__1::unique_ptr.438", align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %4, i64 0, i32 0
  store %"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %4, i64 0, i32 1
  store %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"** %8, align 8
  %9 = icmp ult %"class.blink::CSSParserToken"* %0, %1
  %10 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %11 = select i1 %9, %"class.blink::CSSParserToken"* %0, %"class.blink::CSSParserToken"* %10
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 63
  %15 = icmp eq i32 %14, 17
  br i1 %15, label %16, label %25

16:                                               ; preds = %3, %16
  %17 = phi %"class.blink::CSSParserToken"* [ %18, %16 ], [ %0, %3 ]
  %18 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %17, i64 1
  store %"class.blink::CSSParserToken"* %18, %"class.blink::CSSParserToken"** %7, align 8
  %19 = icmp ult %"class.blink::CSSParserToken"* %18, %1
  %20 = select i1 %19, %"class.blink::CSSParserToken"* %18, %"class.blink::CSSParserToken"* %10
  %21 = bitcast %"class.blink::CSSParserToken"* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 63
  %24 = icmp eq i32 %23, 17
  br i1 %24, label %16, label %25

25:                                               ; preds = %16, %3
  %26 = bitcast %"class.blink::CSSSelectorParser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %5, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %5, i64 0, i32 1
  %29 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %5, i64 0, i32 2
  %30 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %5, i64 0, i32 6
  %31 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %5, i64 0, i32 7
  %32 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %5, i64 0, i32 8
  %33 = bitcast %"class.blink::CSSSelectorParser"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  store %"class.blink::CSSParserContext"* %2, %"class.blink::CSSParserContext"** %27, align 8
  store i32 0, i32* %30, align 4
  store i8 0, i8* %31, align 8
  store i8 0, i8* %32, align 1
  %34 = bitcast %"class.blink::StyleSheetContents"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 11, i1 false)
  %35 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser22ConsumeComplexSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* nonnull %5, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %4)
  %36 = load i8, i8* %29, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %86

38:                                               ; preds = %25
  %39 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %40 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %41 = icmp eq %"class.blink::CSSParserToken"* %39, %40
  br i1 %41, label %42, label %86

42:                                               ; preds = %38
  %43 = icmp eq %"class.blink::CSSParserSelector"* %35, null
  br i1 %43, label %91, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::unique_ptr.438"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.438"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSSelector"*), %"class.blink::CSSSelector"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %47, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %47, align 8
  store %"class.blink::CSSSelector"* %48, %"class.blink::CSSSelector"** %46, align 8
  %49 = icmp eq %"class.blink::CSSSelector"* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %44
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %46, align 8
  br label %84

51:                                               ; preds = %44, %73
  %52 = phi %"class.blink::CSSSelector"* [ %77, %73 ], [ %48, %44 ]
  %53 = bitcast %"class.blink::CSSSelector"* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 65280
  %56 = icmp eq i32 %55, 22528
  br i1 %56, label %57, label %73

57:                                               ; preds = %51
  %58 = and i32 %54, 262144
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %52, i64 0, i32 1
  br i1 %59, label %65, label %61

61:                                               ; preds = %57
  %62 = bitcast %"union.blink::CSSSelector::DataUnion"* %60 to %"struct.blink::CSSSelector::RareData"**
  %63 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %62, align 8
  %64 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %63, i64 0, i32 1
  br label %67

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %60, i64 0, i32 0
  br label %67

67:                                               ; preds = %65, %61
  %68 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %66, %65 ]
  %69 = call fastcc i32 @_ZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %68) #12
  %70 = icmp eq i32 %69, 2319
  br i1 %70, label %78, label %71

71:                                               ; preds = %67
  %72 = load i32, i32* %53, align 8
  br label %73

73:                                               ; preds = %71, %51
  %74 = phi i32 [ %72, %71 ], [ %54, %51 ]
  %75 = and i32 %74, 131072
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %52, i64 1
  br i1 %76, label %51, label %78

78:                                               ; preds = %73, %67
  %79 = phi i1 [ true, %73 ], [ false, %67 ]
  %80 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %46, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %46, align 8
  %81 = icmp eq %"class.blink::CSSSelector"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.std::__1::unique_ptr.438"* %6 to %"struct.std::__1::default_delete.442"*
  call void @_ZNKSt3__114default_deleteIN5blink11CSSSelectorEEclEPS2_(%"struct.std::__1::default_delete.442"* nonnull %83, %"class.blink::CSSSelector"* nonnull %80) #12
  br label %84

84:                                               ; preds = %50, %78, %82
  %85 = phi i1 [ true, %50 ], [ %79, %78 ], [ %79, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  br label %86

86:                                               ; preds = %38, %25, %84
  %87 = phi i1 [ %85, %84 ], [ false, %25 ], [ false, %38 ]
  %88 = icmp eq %"class.blink::CSSParserSelector"* %35, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %35) #12
  %90 = bitcast %"class.blink::CSSParserSelector"* %35 to i8*
  call void @free(i8* %90) #12
  br label %91

91:                                               ; preds = %42, %86, %89
  %92 = phi i1 [ %87, %86 ], [ %87, %89 ], [ false, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #12
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser22ConsumeComplexSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser23ConsumeCompoundSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  %4 = ptrtoint %"class.blink::CSSParserSelector"* %3 to i64
  %5 = icmp eq %"class.blink::CSSParserSelector"* %3, null
  br i1 %5, label %107, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  br label %11

8:                                                ; preds = %27
  %9 = tail call i32 @_ZN5blink17CSSSelectorParser17ConsumeCombinatorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* undef, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %115, label %34

11:                                               ; preds = %6, %27
  %12 = phi %"class.blink::CSSParserSelector"* [ %3, %6 ], [ %30, %27 ]
  %13 = bitcast %"class.blink::CSSParserSelector"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 240
  %17 = icmp eq i32 %16, 80
  br i1 %17, label %18, label %27

18:                                               ; preds = %11
  %19 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %7, align 8
  %20 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %19, i64 0, i32 3
  %21 = load i8, i8* %20, align 1
  %22 = icmp ne i8 %21, 5
  %23 = and i32 %15, 65280
  %24 = icmp ne i32 %23, 22528
  %25 = or i1 %24, %22
  %26 = zext i1 %25 to i32
  br label %27

27:                                               ; preds = %11, %18
  %28 = phi i32 [ %26, %18 ], [ 0, %11 ]
  %29 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %29, align 8
  %31 = icmp ne %"class.blink::CSSParserSelector"* %30, null
  %32 = icmp eq i32 %28, 0
  %33 = and i1 %32, %31
  br i1 %33, label %11, label %8

34:                                               ; preds = %8, %104
  %35 = phi i32 [ %105, %104 ], [ %9, %8 ]
  %36 = phi i32 [ %91, %104 ], [ %28, %8 ]
  %37 = phi i64 [ %39, %104 ], [ %4, %8 ]
  %38 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser23ConsumeCompoundSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  %39 = ptrtoint %"class.blink::CSSParserSelector"* %38 to i64
  %40 = icmp eq %"class.blink::CSSParserSelector"* %38, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = icmp eq i32 %35, 1
  br i1 %42, label %115, label %107

43:                                               ; preds = %34
  %44 = and i32 %36, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %102

46:                                               ; preds = %43
  %47 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %7, align 8
  %48 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %47, i64 0, i32 3
  %49 = load i8, i8* %48, align 1
  %50 = bitcast %"class.blink::CSSParserSelector"* %38 to i32**
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 240
  %54 = icmp eq i32 %53, 80
  br i1 %54, label %55, label %61

55:                                               ; preds = %46
  %56 = icmp ne i8 %49, 5
  %57 = and i32 %52, 65280
  %58 = icmp ne i32 %57, 22528
  %59 = or i1 %56, %58
  %60 = zext i1 %59 to i32
  br label %61

61:                                               ; preds = %46, %55
  %62 = phi i32 [ %60, %55 ], [ 0, %46 ]
  %63 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %38, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %63, align 8
  %65 = icmp eq %"class.blink::CSSParserSelector"* %64, null
  br i1 %65, label %87, label %66

66:                                               ; preds = %61
  %67 = icmp ne i8 %49, 5
  br label %68

68:                                               ; preds = %66, %81
  %69 = phi %"class.blink::CSSParserSelector"* [ %64, %66 ], [ %85, %81 ]
  %70 = phi i32 [ %62, %66 ], [ %83, %81 ]
  %71 = bitcast %"class.blink::CSSParserSelector"* %69 to i32**
  %72 = load i32*, i32** %71, align 8
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 240
  %75 = icmp eq i32 %74, 80
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = and i32 %73, 65280
  %78 = icmp ne i32 %77, 22528
  %79 = or i1 %67, %78
  %80 = zext i1 %79 to i32
  br label %81

81:                                               ; preds = %68, %76
  %82 = phi i32 [ %80, %76 ], [ 0, %68 ]
  %83 = or i32 %82, %70
  %84 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %69, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %84, align 8
  %86 = icmp eq %"class.blink::CSSParserSelector"* %85, null
  br i1 %86, label %87, label %68

87:                                               ; preds = %81, %61
  %88 = phi i32 [ %52, %61 ], [ %73, %81 ]
  %89 = phi i32* [ %51, %61 ], [ %72, %81 ]
  %90 = phi %"class.blink::CSSParserSelector"* [ %38, %61 ], [ %69, %81 ]
  %91 = phi i32 [ %62, %61 ], [ %83, %81 ]
  %92 = and i32 %35, 15
  %93 = and i32 %88, -16
  %94 = or i32 %93, %92
  store i32 %94, i32* %89, align 8
  %95 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %90, i64 0, i32 1
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %96, align 8
  %98 = bitcast %"class.std::__1::unique_ptr.432"* %95 to i64*
  store i64 %37, i64* %98, align 8
  %99 = icmp eq %"class.blink::CSSParserSelector"* %97, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %87
  tail call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %97) #12
  %101 = bitcast %"class.blink::CSSParserSelector"* %97 to i8*
  tail call void @free(i8* %101) #12
  br label %104

102:                                              ; preds = %43
  tail call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %38) #12
  %103 = bitcast %"class.blink::CSSParserSelector"* %38 to i8*
  tail call void @free(i8* %103) #12
  br label %107

104:                                              ; preds = %100, %87
  %105 = tail call i32 @_ZN5blink17CSSSelectorParser17ConsumeCombinatorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* undef, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %113, label %34

107:                                              ; preds = %41, %2, %102
  %108 = phi i64 [ %4, %2 ], [ %37, %102 ], [ %37, %41 ]
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %107
  %111 = inttoptr i64 %108 to %"class.blink::CSSParserSelector"*
  tail call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %111) #12
  %112 = inttoptr i64 %108 to i8*
  tail call void @free(i8* %112) #12
  br label %115

113:                                              ; preds = %104
  %114 = ptrtoint %"class.blink::CSSParserSelector"* %38 to i64
  br label %115

115:                                              ; preds = %113, %41, %8, %107, %110
  %116 = phi i64 [ 0, %107 ], [ 0, %110 ], [ %4, %8 ], [ %37, %41 ], [ %114, %113 ]
  %117 = inttoptr i64 %116 to %"class.blink::CSSParserSelector"*
  ret %"class.blink::CSSParserSelector"* %117
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSelectorParser35ContainsUnknownWebkitPseudoElementsERKNS_11CSSSelectorE(%"class.blink::CSSSelector"* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::CSSSelector"* %0, null
  br i1 %2, label %32, label %3

3:                                                ; preds = %1, %25
  %4 = phi %"class.blink::CSSSelector"* [ %29, %25 ], [ %0, %1 ]
  %5 = bitcast %"class.blink::CSSSelector"* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 65280
  %8 = icmp eq i32 %7, 22528
  br i1 %8, label %9, label %25

9:                                                ; preds = %3
  %10 = and i32 %6, 262144
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %4, i64 0, i32 1
  br i1 %11, label %17, label %13

13:                                               ; preds = %9
  %14 = bitcast %"union.blink::CSSSelector::DataUnion"* %12 to %"struct.blink::CSSSelector::RareData"**
  %15 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %15, i64 0, i32 1
  br label %19

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %12, i64 0, i32 0
  br label %19

19:                                               ; preds = %13, %17
  %20 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %18, %17 ]
  %21 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %20)
  %22 = icmp eq i32 %21, 2319
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 8
  br label %25

25:                                               ; preds = %23, %3
  %26 = phi i32 [ %24, %23 ], [ %6, %3 ]
  %27 = and i32 %26, 131072
  %28 = icmp ne i32 %27, 0
  %29 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %4, i64 1
  %30 = icmp eq %"class.blink::CSSSelector"* %29, null
  %31 = or i1 %30, %28
  br i1 %31, label %32, label %3

32:                                               ; preds = %25, %19, %1
  %33 = phi i1 [ false, %1 ], [ true, %19 ], [ false, %25 ]
  ret i1 %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17CSSSelectorParserC2EPKNS_16CSSParserContextEPNS_18StyleSheetContentsE(%"class.blink::CSSSelectorParser"* nocapture, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  store %"class.blink::CSSParserContext"* %1, %"class.blink::CSSParserContext"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  store %"class.blink::StyleSheetContents"* %2, %"class.blink::StyleSheetContents"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 4
  store i8 0, i8* %8, align 2
  %9 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 6
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 7
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  store i8 0, i8* %11, align 1
  ret void
}

declare void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* sret, %"class.WTF::Vector.444"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_22EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  store i8 1, i8* %4, align 4
  %8 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %10 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %9, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %10) #12
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %8, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 63
  %20 = icmp eq i32 %19, 31
  %21 = and i32 %18, 192
  %22 = icmp eq i32 %21, 128
  %23 = or i1 %20, %22
  br i1 %23, label %92, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  %30 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  br label %37

31:                                               ; preds = %82
  %32 = and i32 %83, 63
  %33 = icmp eq i32 %32, 31
  %34 = and i32 %83, 192
  %35 = icmp eq i32 %34, 128
  %36 = or i1 %33, %35
  br i1 %36, label %89, label %37

37:                                               ; preds = %24, %31
  %38 = phi i32 [ %18, %24 ], [ %83, %31 ]
  %39 = phi i32 [ %19, %24 ], [ %32, %31 ]
  switch i32 %39, label %40 [
    i32 27, label %89
    i32 22, label %89
  ]

40:                                               ; preds = %37, %82
  %41 = phi i32 [ %83, %82 ], [ %38, %37 ]
  %42 = phi i32 [ %84, %82 ], [ %38, %37 ]
  %43 = phi i32 [ %76, %82 ], [ 0, %37 ]
  store i8 0, i8* %4, align 4
  %44 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %25, align 8
  %45 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %44, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %44, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %45, align 4
  %49 = icmp ult i32 %47, %48
  %50 = select i1 %49, i32 %47, i32 %48
  store i32 %50, i32* %26, align 8
  %51 = load i32, i32* %15, align 4
  %52 = load i32, i32* %27, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %61, label %54, !prof !2

54:                                               ; preds = %40
  %55 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %28, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %55, i64 %56
  %58 = bitcast %"class.blink::CSSParserToken"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %29, i64 24, i1 false) #12
  %59 = load i32, i32* %15, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %15, align 4
  br label %63

61:                                               ; preds = %40
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.417"* %14, %"class.blink::CSSParserToken"* dereferenceable(24) %16) #12
  %62 = load i32, i32* %17, align 8
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %41, %54 ]
  %65 = phi i32 [ %62, %61 ], [ %42, %54 ]
  %66 = lshr i32 %65, 6
  %67 = and i32 %66, 3
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = add i32 %43, 1
  br label %75

71:                                               ; preds = %63
  %72 = icmp eq i32 %67, 2
  %73 = zext i1 %72 to i32
  %74 = sub i32 %43, %73
  br label %75

75:                                               ; preds = %71, %69
  %76 = phi i32 [ %70, %69 ], [ %74, %71 ]
  %77 = load i8, i8* %4, align 4, !range !3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  store i8 1, i8* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %80 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %25, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %80) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %30, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %81 = load i32, i32* %17, align 8
  br label %82

82:                                               ; preds = %79, %75
  %83 = phi i32 [ %64, %75 ], [ %81, %79 ]
  %84 = phi i32 [ %65, %75 ], [ %81, %79 ]
  %85 = and i32 %84, 63
  %86 = icmp ne i32 %85, 31
  %87 = icmp ne i32 %76, 0
  %88 = and i1 %87, %86
  br i1 %88, label %40, label %31

89:                                               ; preds = %37, %37, %31
  %90 = load i32, i32* %15, align 4
  %91 = zext i32 %90 to i64
  br label %92

92:                                               ; preds = %89, %13
  %93 = phi i64 [ %91, %89 ], [ 0, %13 ]
  %94 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %95, i64 %93
  %97 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } undef, %"class.blink::CSSParserToken"* %95, 0
  %98 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %97, %"class.blink::CSSParserToken"* %96, 1
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %98
}

declare void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSParserTokenStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser27ConsumeCompoundSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* noalias sret, %"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.444", align 8
  %5 = alloca %"class.std::__1::unique_ptr.432", align 8
  %6 = bitcast %"class.WTF::Vector.444"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #12
  %10 = bitcast %"class.std::__1::unique_ptr.432"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser23ConsumeCompoundSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2)
  store %"class.blink::CSSParserSelector"* %12, %"class.blink::CSSParserSelector"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 0
  %14 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 1
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %15, align 8
  %17 = icmp ult %"class.blink::CSSParserToken"* %14, %16
  %18 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %19 = select i1 %17, %"class.blink::CSSParserToken"* %14, %"class.blink::CSSParserToken"* %18
  %20 = bitcast %"class.blink::CSSParserToken"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 63
  %23 = icmp eq i32 %22, 17
  br i1 %23, label %24, label %33

24:                                               ; preds = %3, %24
  %25 = phi %"class.blink::CSSParserToken"* [ %26, %24 ], [ %14, %3 ]
  %26 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %25, i64 1
  store %"class.blink::CSSParserToken"* %26, %"class.blink::CSSParserToken"** %13, align 8
  %27 = icmp ult %"class.blink::CSSParserToken"* %26, %16
  %28 = select i1 %27, %"class.blink::CSSParserToken"* %26, %"class.blink::CSSParserToken"* %18
  %29 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 63
  %32 = icmp eq i32 %31, 17
  br i1 %32, label %24, label %33

33:                                               ; preds = %24, %3
  %34 = icmp eq %"class.blink::CSSParserSelector"* %12, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %36, align 8
  br label %123

37:                                               ; preds = %33
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"* nonnull %4, %"class.std::__1::unique_ptr.432"* nonnull dereferenceable(8) %5) #12
  %38 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %39 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %15, align 8
  %40 = icmp eq %"class.blink::CSSParserToken"* %38, %39
  br i1 %40, label %116, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::unique_ptr.432"* %5 to i64*
  br label %43

43:                                               ; preds = %41, %112
  %44 = phi %"class.blink::CSSParserToken"* [ %39, %41 ], [ %114, %112 ]
  %45 = phi %"class.blink::CSSParserToken"* [ %38, %41 ], [ %113, %112 ]
  %46 = icmp ult %"class.blink::CSSParserToken"* %45, %44
  %47 = select i1 %46, %"class.blink::CSSParserToken"* %45, %"class.blink::CSSParserToken"* %18
  %48 = bitcast %"class.blink::CSSParserToken"* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 63
  %51 = icmp eq i32 %50, 22
  br i1 %51, label %52, label %116

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %45, i64 1
  store %"class.blink::CSSParserToken"* %53, %"class.blink::CSSParserToken"** %13, align 8
  %54 = icmp ult %"class.blink::CSSParserToken"* %53, %44
  %55 = select i1 %54, %"class.blink::CSSParserToken"* %53, %"class.blink::CSSParserToken"* %18
  %56 = bitcast %"class.blink::CSSParserToken"* %55 to i32*
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 63
  %59 = icmp eq i32 %58, 17
  br i1 %59, label %60, label %69

60:                                               ; preds = %52, %60
  %61 = phi %"class.blink::CSSParserToken"* [ %62, %60 ], [ %53, %52 ]
  %62 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %61, i64 1
  store %"class.blink::CSSParserToken"* %62, %"class.blink::CSSParserToken"** %13, align 8
  %63 = icmp ult %"class.blink::CSSParserToken"* %62, %44
  %64 = select i1 %63, %"class.blink::CSSParserToken"* %62, %"class.blink::CSSParserToken"* %18
  %65 = bitcast %"class.blink::CSSParserToken"* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 63
  %68 = icmp eq i32 %67, 17
  br i1 %68, label %60, label %69

69:                                               ; preds = %60, %52
  %70 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser23ConsumeCompoundSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2)
  %71 = ptrtoint %"class.blink::CSSParserSelector"* %70 to i64
  %72 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %11, align 8
  store i64 %71, i64* %42, align 8
  %73 = icmp eq %"class.blink::CSSParserSelector"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %72) #12
  %75 = bitcast %"class.blink::CSSParserSelector"* %72 to i8*
  call void @free(i8* %75) #12
  br label %76

76:                                               ; preds = %74, %69
  %77 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %78 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %15, align 8
  %79 = icmp ult %"class.blink::CSSParserToken"* %77, %78
  %80 = select i1 %79, %"class.blink::CSSParserToken"* %77, %"class.blink::CSSParserToken"* %18
  %81 = bitcast %"class.blink::CSSParserToken"* %80 to i32*
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 63
  %84 = icmp eq i32 %83, 17
  br i1 %84, label %85, label %94

85:                                               ; preds = %76, %85
  %86 = phi %"class.blink::CSSParserToken"* [ %87, %85 ], [ %77, %76 ]
  %87 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %86, i64 1
  store %"class.blink::CSSParserToken"* %87, %"class.blink::CSSParserToken"** %13, align 8
  %88 = icmp ult %"class.blink::CSSParserToken"* %87, %78
  %89 = select i1 %88, %"class.blink::CSSParserToken"* %87, %"class.blink::CSSParserToken"* %18
  %90 = bitcast %"class.blink::CSSParserToken"* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 63
  %93 = icmp eq i32 %92, 17
  br i1 %93, label %85, label %94

94:                                               ; preds = %85, %76
  %95 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %11, align 8
  %96 = icmp eq %"class.blink::CSSParserSelector"* %95, null
  %97 = ptrtoint %"class.blink::CSSParserSelector"* %95 to i64
  br i1 %96, label %98, label %100

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %99, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %11, align 8
  br label %128

100:                                              ; preds = %94
  %101 = load i32, i32* %9, align 4
  %102 = load i32, i32* %8, align 8
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %111, label %104, !prof !2

104:                                              ; preds = %100
  %105 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %7, align 8
  %106 = zext i32 %101 to i64
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %105, i64 %106
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %11, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.432"* %107 to i64*
  store i64 %97, i64* %108, align 8
  %109 = load i32, i32* %9, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %9, align 4
  br label %112

111:                                              ; preds = %100
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"* nonnull %4, %"class.std::__1::unique_ptr.432"* nonnull dereferenceable(8) %5) #12
  br label %112

112:                                              ; preds = %104, %111
  %113 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %114 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %15, align 8
  %115 = icmp eq %"class.blink::CSSParserToken"* %113, %114
  br i1 %115, label %116, label %43

116:                                              ; preds = %43, %112, %37
  %117 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %1, i64 0, i32 2
  %118 = load i8, i8* %117, align 8, !range !3
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %121, align 8
  br label %123

122:                                              ; preds = %116
  call void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* sret %0, %"class.WTF::Vector.444"* nonnull dereferenceable(16) %4) #12
  br label %123

123:                                              ; preds = %122, %120, %35
  %124 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %11, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %11, align 8
  %125 = icmp eq %"class.blink::CSSParserSelector"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %123
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %124) #12
  %127 = bitcast %"class.blink::CSSParserSelector"* %124 to i8*
  call void @free(i8* %127) #12
  br label %128

128:                                              ; preds = %98, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %129 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %7, align 8
  %130 = icmp eq %"class.std::__1::unique_ptr.432"* %129, null
  br i1 %130, label %153, label %131, !prof !4

131:                                              ; preds = %128
  %132 = bitcast %"class.std::__1::unique_ptr.432"* %129 to i8*
  %133 = load i32, i32* %9, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %151, label %135, !prof !2

135:                                              ; preds = %131
  %136 = zext i32 %133 to i64
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %129, i64 %136
  br label %138

138:                                              ; preds = %145, %135
  %139 = phi %"class.std::__1::unique_ptr.432"* [ %146, %145 ], [ %129, %135 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %140, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %140, align 8
  %142 = icmp eq %"class.blink::CSSParserSelector"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %138
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %141) #12
  %144 = bitcast %"class.blink::CSSParserSelector"* %141 to i8*
  call void @free(i8* %144) #12
  br label %145

145:                                              ; preds = %143, %138
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %139, i64 1
  %147 = icmp eq %"class.std::__1::unique_ptr.432"* %146, %137
  br i1 %147, label %148, label %138

148:                                              ; preds = %145
  store i32 0, i32* %9, align 4
  %149 = bitcast %"class.WTF::Vector.444"* %4 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %131
  %152 = phi i8* [ %150, %148 ], [ %132, %131 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %152) #12
  store %"class.std::__1::unique_ptr.432"* null, %"class.std::__1::unique_ptr.432"** %7, align 8
  br label %153

153:                                              ; preds = %128, %151
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser23ConsumeCompoundSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.blink::QualifiedName", align 8
  %7 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = call zeroext i1 @_ZN5blink17CSSSelectorParser11ConsumeNameERNS_19CSSParserTokenRangeERN3WTF12AtomicStringES5_(%"class.blink::CSSSelectorParser"* undef, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3)
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser21ConsumeSimpleSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  %16 = ptrtoint %"class.blink::CSSParserSelector"* %15 to i64
  %17 = icmp eq %"class.blink::CSSParserSelector"* %15, null
  br i1 %17, label %264, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::CSSParserSelector"* %15 to i32**
  %20 = load i32*, i32** %19, align 8
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 240
  %23 = icmp eq i32 %22, 80
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = lshr i32 %21, 8
  %26 = and i32 %25, 255
  store i32 %26, i32* %7, align 4
  br label %27

27:                                               ; preds = %18, %24, %2
  %28 = phi i64 [ 0, %2 ], [ %16, %24 ], [ %16, %18 ]
  %29 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  %30 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %30, i64 0, i32 8
  %32 = load i8, i8* %31, align 1, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %53, label %34

34:                                               ; preds = %27
  %35 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %4) #12
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %37 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %36, i64* %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %27, %34, %49, %52
  %54 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser21ConsumeSimpleSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  %55 = icmp eq %"class.blink::CSSParserSelector"* %54, null
  br i1 %55, label %76, label %56

56:                                               ; preds = %53, %72
  %57 = phi %"class.blink::CSSParserSelector"* [ %74, %72 ], [ %54, %53 ]
  %58 = phi i64 [ %73, %72 ], [ %28, %53 ]
  %59 = ptrtoint %"class.blink::CSSParserSelector"* %57 to i64
  %60 = bitcast %"class.blink::CSSParserSelector"* %57 to i32**
  %61 = load i32*, i32** %60, align 8
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 240
  %64 = icmp eq i32 %63, 80
  br i1 %64, label %65, label %68

65:                                               ; preds = %56
  %66 = lshr i32 %62, 8
  %67 = and i32 %66, 255
  store i32 %67, i32* %7, align 4
  br label %68

68:                                               ; preds = %65, %56
  %69 = icmp eq i64 %58, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %58 to %"class.blink::CSSParserSelector"*
  call void @_ZN5blink17CSSParserSelector16AppendTagHistoryENS_11CSSSelector12RelationTypeENSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEE(%"class.blink::CSSParserSelector"* nonnull %71, i32 0, %"class.blink::CSSParserSelector"* nonnull %57) #12
  br label %72

72:                                               ; preds = %68, %70
  %73 = phi i64 [ %58, %70 ], [ %59, %68 ]
  %74 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser21ConsumeSimpleSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  %75 = icmp eq %"class.blink::CSSParserSelector"* %74, null
  br i1 %75, label %76, label %56

76:                                               ; preds = %72, %53
  %77 = phi i64 [ %28, %53 ], [ %73, %72 ]
  %78 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  %79 = load i8, i8* %78, align 1, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %111

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 7
  %83 = load i8, i8* %82, align 8, !range !3
  %84 = icmp eq i8 %83, 0
  %85 = or i1 %13, %84
  br i1 %85, label %111, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %88 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %90 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %89, align 8
  %91 = icmp ult %"class.blink::CSSParserToken"* %88, %90
  %92 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %93 = select i1 %91, %"class.blink::CSSParserToken"* %88, %"class.blink::CSSParserToken"* %92
  %94 = bitcast %"class.blink::CSSParserToken"* %93 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 63
  %97 = icmp eq i32 %96, 17
  br i1 %97, label %98, label %107

98:                                               ; preds = %86, %98
  %99 = phi %"class.blink::CSSParserToken"* [ %100, %98 ], [ %88, %86 ]
  %100 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %99, i64 1
  %101 = icmp ult %"class.blink::CSSParserToken"* %100, %90
  %102 = select i1 %101, %"class.blink::CSSParserToken"* %100, %"class.blink::CSSParserToken"* %92
  %103 = bitcast %"class.blink::CSSParserToken"* %102 to i32*
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, 63
  %106 = icmp eq i32 %105, 17
  br i1 %106, label %98, label %107

107:                                              ; preds = %98, %86
  %108 = phi %"class.blink::CSSParserToken"* [ %88, %86 ], [ %100, %98 ]
  %109 = icmp eq %"class.blink::CSSParserToken"* %108, %90
  %110 = zext i1 %109 to i8
  br label %111

111:                                              ; preds = %81, %76, %107
  %112 = phi i8 [ 1, %76 ], [ 0, %81 ], [ %110, %107 ]
  store i8 %112, i8* %78, align 1
  %113 = inttoptr i64 %77 to %"class.blink::CSSParserSelector"*
  %114 = icmp eq i64 %77, 0
  br i1 %114, label %115, label %257

115:                                              ; preds = %111
  %116 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #12
  %117 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %117, align 8
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %120, label %130

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %122 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %121, align 8
  %123 = icmp ne %"class.blink::StyleSheetContents"* %122, null
  %124 = icmp eq i8 %112, 0
  %125 = and i1 %124, %123
  br i1 %125, label %128, label %126

126:                                              ; preds = %120
  %127 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %149

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %122, i64 0, i32 6
  br label %149

130:                                              ; preds = %115
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  %135 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  br label %149

136:                                              ; preds = %130
  %137 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %138 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %118, %139
  br i1 %140, label %149, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %143 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %142, align 8
  %144 = icmp eq %"class.blink::StyleSheetContents"* %143, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %149

147:                                              ; preds = %141
  %148 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18StyleSheetContents22NamespaceURIFromPrefixERKN3WTF12AtomicStringE(%"class.blink::StyleSheetContents"* nonnull %143, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #12
  br label %149

149:                                              ; preds = %126, %128, %134, %136, %145, %147
  %150 = phi %"class.WTF::AtomicString"* [ %135, %134 ], [ %148, %147 ], [ %146, %145 ], [ %127, %126 ], [ %129, %128 ], [ %137, %136 ]
  %151 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %117, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %173, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %176

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i33
  %163 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %162, i33 1) #12
  %164 = extractvalue { i33, i1 } %163, 1
  %165 = extractvalue { i33, i1 } %163, 0
  %166 = icmp slt i33 %165, 0
  %167 = or i1 %164, %166
  br i1 %167, label %168, label %169, !prof !2

168:                                              ; preds = %159
  call void @llvm.trap() #12
  unreachable

169:                                              ; preds = %159
  %170 = trunc i33 %165 to i32
  store i32 %170, i32* %160, align 4
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %173, label %176

173:                                              ; preds = %149, %169
  %174 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %29, align 8
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %174, i32 2626) #12
  %175 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 2
  store i8 1, i8* %175, align 8
  br label %239

176:                                              ; preds = %154, %169
  %177 = phi %"class.WTF::StringImpl"* [ %171, %169 ], [ %152, %154 ]
  %178 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %179 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %178, align 8
  %180 = icmp eq %"class.blink::StyleSheetContents"* %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %176
  %182 = load i8, i8* %78, align 1, !range !3
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %181, %176
  %185 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %188

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %179, i64 0, i32 6
  br label %188

188:                                              ; preds = %184, %186
  %189 = phi %"class.WTF::AtomicString"* [ %185, %184 ], [ %187, %186 ]
  %190 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %189, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %177, %191
  br i1 %192, label %193, label %233

193:                                              ; preds = %188
  %194 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %195 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %194, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %215, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %215

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i33
  %207 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %206, i33 1) #12
  %208 = extractvalue { i33, i1 } %207, 1
  %209 = extractvalue { i33, i1 } %207, 0
  %210 = icmp slt i33 %209, 0
  %211 = or i1 %208, %210
  br i1 %211, label %212, label %213, !prof !2

212:                                              ; preds = %203
  call void @llvm.trap() #12
  unreachable

213:                                              ; preds = %203
  %214 = trunc i33 %209 to i32
  store i32 %214, i32* %204, align 4
  br label %215

215:                                              ; preds = %213, %198, %193
  %216 = ptrtoint %"class.WTF::StringImpl"* %196 to i64
  %217 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %216, i64* %217, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #12
  br label %233

233:                                              ; preds = %232, %229, %215, %188
  %234 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %29, align 8
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %234, i32 2203) #12
  %235 = bitcast %"class.blink::QualifiedName"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #12
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %6, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #12
  %236 = call noalias i8* @malloc(i64 16) #12
  %237 = bitcast i8* %236 to %"class.blink::CSSParserSelector"*
  call void @_ZN5blink17CSSParserSelectorC1ERKNS_13QualifiedNameEb(%"class.blink::CSSParserSelector"* %237, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %6, i1 zeroext false) #12
  %238 = ptrtoint i8* %236 to i64
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #12
  br label %239

239:                                              ; preds = %233, %173
  %240 = phi i64 [ 0, %173 ], [ %238, %233 ]
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %241, null
  br i1 %242, label %256, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  br i1 %247, label %250, label %252

250:                                              ; preds = %243
  %251 = add i32 %249, -1
  store i32 %251, i32* %248, align 4
  br label %252

252:                                              ; preds = %250, %243
  %253 = phi i32 [ %251, %250 ], [ %249, %243 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %241) #12
  br label %256

256:                                              ; preds = %239, %252, %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #12
  br label %260

257:                                              ; preds = %111
  call void @_ZN5blink17CSSSelectorParser27PrependTypeSelectorIfNeededERKN3WTF12AtomicStringEbS4_PNS_17CSSParserSelectorE(%"class.blink::CSSSelectorParser"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, i1 zeroext %13, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::CSSParserSelector"* nonnull %113)
  %258 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser47SplitCompoundAtImplicitShadowCrossingCombinatorENSt3__110unique_ptrINS_17CSSParserSelectorENS1_14default_deleteIS3_EEEE(%"class.blink::CSSParserSelector"* nonnull %113)
  %259 = ptrtoint %"class.blink::CSSParserSelector"* %258 to i64
  br label %260

260:                                              ; preds = %257, %256
  %261 = phi i64 [ %259, %257 ], [ %240, %256 ]
  %262 = icmp eq i8* %78, null
  br i1 %262, label %264, label %263

263:                                              ; preds = %260
  store i8 %79, i8* %78, align 1
  br label %264

264:                                              ; preds = %14, %263, %260
  %265 = phi i64 [ %16, %14 ], [ 0, %260 ], [ 0, %263 ]
  %266 = phi i64 [ 0, %14 ], [ %261, %260 ], [ %261, %263 ]
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #12
  br label %282

282:                                              ; preds = %264, %278, %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  br i1 %289, label %292, label %294

292:                                              ; preds = %285
  %293 = add i32 %291, -1
  store i32 %293, i32* %290, align 4
  br label %294

294:                                              ; preds = %292, %285
  %295 = phi i32 [ %293, %292 ], [ %291, %285 ]
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %294
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %283) #12
  br label %298

298:                                              ; preds = %282, %294, %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %299 = icmp eq i64 %265, 0
  br i1 %299, label %303, label %300

300:                                              ; preds = %298
  %301 = inttoptr i64 %265 to %"class.blink::CSSParserSelector"*
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %301) #12
  %302 = inttoptr i64 %265 to i8*
  call void @free(i8* %302) #12
  br label %303

303:                                              ; preds = %298, %300
  %304 = icmp eq i32* %7, null
  br i1 %304, label %306, label %305

305:                                              ; preds = %303
  store i32 %8, i32* %7, align 4
  br label %306

306:                                              ; preds = %303, %305
  %307 = inttoptr i64 %266 to %"class.blink::CSSParserSelector"*
  ret %"class.blink::CSSParserSelector"* %307
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser25ConsumeNestedSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* noalias sret, %"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %1, i64 0, i32 4
  %5 = load i8, i8* %4, align 2, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN5blink17CSSSelectorParser27ConsumeCompoundSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* sret %0, %"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2)
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink17CSSSelectorParser26ConsumeComplexSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* sret %0, %"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2)
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser34ConsumeForgivingNestedSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* noalias sret, %"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %1, i64 0, i32 4
  %5 = load i8, i8* %4, align 2, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN5blink17CSSSelectorParser36ConsumeForgivingCompoundSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* sret %0, %"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2)
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink17CSSSelectorParser35ConsumeForgivingComplexSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* sret %0, %"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %2)
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser36ConsumeForgivingCompoundSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* noalias sret, %"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.444", align 8
  %5 = alloca %"class.blink::CSSParserTokenRange", align 8
  %6 = alloca %"class.std::__1::unique_ptr.432", align 8
  %7 = bitcast %"class.WTF::Vector.444"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #12
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 0
  %12 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 1
  %14 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %15 = icmp eq %"class.blink::CSSParserToken"* %12, %14
  br i1 %15, label %150, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %1, i64 0, i32 2
  %18 = bitcast %"class.blink::CSSParserTokenRange"* %5 to i8*
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 1
  %21 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.432"* %6 to i8*
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = icmp eq i8* %17, null
  %25 = bitcast %"class.blink::CSSParserTokenRange"* %5 to i8*
  br label %26

26:                                               ; preds = %16, %139
  %27 = load i8, i8* %17, align 1, !range !3
  store i8 0, i8* %17, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %28 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %29 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %30 = icmp ult %"class.blink::CSSParserToken"* %28, %29
  %31 = select i1 %30, %"class.blink::CSSParserToken"* %28, %"class.blink::CSSParserToken"* %21
  %32 = icmp eq %"class.blink::CSSParserToken"* %28, %29
  br i1 %32, label %55, label %33

33:                                               ; preds = %26, %51
  %34 = phi %"class.blink::CSSParserToken"* [ %52, %51 ], [ %29, %26 ]
  %35 = phi %"class.blink::CSSParserToken"* [ %53, %51 ], [ %28, %26 ]
  %36 = icmp ult %"class.blink::CSSParserToken"* %35, %34
  %37 = select i1 %36, %"class.blink::CSSParserToken"* %35, %"class.blink::CSSParserToken"* %21
  %38 = bitcast %"class.blink::CSSParserToken"* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 63
  %41 = icmp eq i32 %40, 22
  br i1 %41, label %55, label %42

42:                                               ; preds = %33
  %43 = and i32 %39, 192
  %44 = icmp eq i32 %43, 64
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* %2) #12
  %47 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %48 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  br label %51

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %35, i64 1
  store %"class.blink::CSSParserToken"* %50, %"class.blink::CSSParserToken"** %11, align 8
  br label %51

51:                                               ; preds = %49, %45
  %52 = phi %"class.blink::CSSParserToken"* [ %34, %49 ], [ %48, %45 ]
  %53 = phi %"class.blink::CSSParserToken"* [ %50, %49 ], [ %47, %45 ]
  %54 = icmp eq %"class.blink::CSSParserToken"* %53, %52
  br i1 %54, label %55, label %33

55:                                               ; preds = %33, %51, %26
  %56 = phi %"class.blink::CSSParserToken"* [ %28, %26 ], [ %52, %51 ], [ %35, %33 ]
  %57 = phi %"class.blink::CSSParserToken"* [ %28, %26 ], [ %52, %51 ], [ %34, %33 ]
  %58 = icmp ult %"class.blink::CSSParserToken"* %56, %57
  %59 = select i1 %58, %"class.blink::CSSParserToken"* %56, %"class.blink::CSSParserToken"* %21
  %60 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"* %2, %"class.blink::CSSParserToken"* %31, %"class.blink::CSSParserToken"* %59) #12
  %61 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %60, 0
  store %"class.blink::CSSParserToken"* %61, %"class.blink::CSSParserToken"** %19, align 8
  %62 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %60, 1
  store %"class.blink::CSSParserToken"* %62, %"class.blink::CSSParserToken"** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store %"class.blink::CSSParserSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSParserSelector"*), %"class.blink::CSSParserSelector"** %23, align 8
  %63 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser23ConsumeCompoundSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5)
  store %"class.blink::CSSParserSelector"* %63, %"class.blink::CSSParserSelector"** %23, align 8
  %64 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %19, align 8
  %65 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %20, align 8
  %66 = icmp ult %"class.blink::CSSParserToken"* %64, %65
  %67 = select i1 %66, %"class.blink::CSSParserToken"* %64, %"class.blink::CSSParserToken"* %21
  %68 = bitcast %"class.blink::CSSParserToken"* %67 to i32*
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, 63
  %71 = icmp eq i32 %70, 17
  %72 = ptrtoint %"class.blink::CSSParserSelector"* %63 to i64
  br i1 %71, label %73, label %82

73:                                               ; preds = %55, %73
  %74 = phi %"class.blink::CSSParserToken"* [ %75, %73 ], [ %64, %55 ]
  %75 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %74, i64 1
  store %"class.blink::CSSParserToken"* %75, %"class.blink::CSSParserToken"** %19, align 8
  %76 = icmp ult %"class.blink::CSSParserToken"* %75, %65
  %77 = select i1 %76, %"class.blink::CSSParserToken"* %75, %"class.blink::CSSParserToken"* %21
  %78 = bitcast %"class.blink::CSSParserToken"* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 63
  %81 = icmp eq i32 %80, 17
  br i1 %81, label %73, label %82

82:                                               ; preds = %73, %55
  %83 = phi %"class.blink::CSSParserToken"* [ %64, %55 ], [ %75, %73 ]
  %84 = icmp eq %"class.blink::CSSParserSelector"* %63, null
  br i1 %84, label %102, label %85

85:                                               ; preds = %82
  %86 = load i8, i8* %17, align 8, !range !3
  %87 = icmp eq i8 %86, 0
  %88 = icmp eq %"class.blink::CSSParserToken"* %83, %65
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %102

90:                                               ; preds = %85
  %91 = load i32, i32* %10, align 4
  %92 = load i32, i32* %9, align 8
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %101, label %94, !prof !2

94:                                               ; preds = %90
  %95 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %8, align 8
  %96 = zext i32 %91 to i64
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %95, i64 %96
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %23, align 8
  %98 = bitcast %"class.std::__1::unique_ptr.432"* %97 to i64*
  store i64 %72, i64* %98, align 8
  %99 = load i32, i32* %10, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %10, align 4
  br label %102

101:                                              ; preds = %90
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"* nonnull %4, %"class.std::__1::unique_ptr.432"* nonnull dereferenceable(8) %6) #12
  br label %102

102:                                              ; preds = %82, %101, %94, %85
  %103 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %104 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %105 = icmp ult %"class.blink::CSSParserToken"* %103, %104
  %106 = select i1 %105, %"class.blink::CSSParserToken"* %103, %"class.blink::CSSParserToken"* %21
  %107 = bitcast %"class.blink::CSSParserToken"* %106 to i32*
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 63
  %110 = icmp eq i32 %109, 22
  br i1 %110, label %111, label %143

111:                                              ; preds = %102
  %112 = icmp eq %"class.blink::CSSParserToken"* %103, %104
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %103, i64 1
  store %"class.blink::CSSParserToken"* %114, %"class.blink::CSSParserToken"** %11, align 8
  br label %115

115:                                              ; preds = %111, %113
  %116 = phi %"class.blink::CSSParserToken"* [ %114, %113 ], [ %103, %111 ]
  %117 = icmp ult %"class.blink::CSSParserToken"* %116, %104
  %118 = select i1 %117, %"class.blink::CSSParserToken"* %116, %"class.blink::CSSParserToken"* %21
  %119 = bitcast %"class.blink::CSSParserToken"* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 63
  %122 = icmp eq i32 %121, 17
  br i1 %122, label %123, label %132

123:                                              ; preds = %115, %123
  %124 = phi %"class.blink::CSSParserToken"* [ %125, %123 ], [ %116, %115 ]
  %125 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %124, i64 1
  store %"class.blink::CSSParserToken"* %125, %"class.blink::CSSParserToken"** %11, align 8
  %126 = icmp ult %"class.blink::CSSParserToken"* %125, %104
  %127 = select i1 %126, %"class.blink::CSSParserToken"* %125, %"class.blink::CSSParserToken"* %21
  %128 = bitcast %"class.blink::CSSParserToken"* %127 to i32*
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 63
  %131 = icmp eq i32 %130, 17
  br i1 %131, label %123, label %132

132:                                              ; preds = %123, %115
  %133 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %23, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %23, align 8
  %134 = icmp eq %"class.blink::CSSParserSelector"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %133) #12
  %136 = bitcast %"class.blink::CSSParserSelector"* %133 to i8*
  call void @free(i8* %136) #12
  br label %137

137:                                              ; preds = %132, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  br i1 %24, label %139, label %138

138:                                              ; preds = %137
  store i8 %27, i8* %17, align 1
  br label %139

139:                                              ; preds = %137, %138
  %140 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %141 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %142 = icmp eq %"class.blink::CSSParserToken"* %140, %141
  br i1 %142, label %150, label %26

143:                                              ; preds = %102
  %144 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %23, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %23, align 8
  %145 = icmp eq %"class.blink::CSSParserSelector"* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %143
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %144) #12
  %147 = bitcast %"class.blink::CSSParserSelector"* %144 to i8*
  call void @free(i8* %147) #12
  br label %148

148:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  br i1 %24, label %150, label %149

149:                                              ; preds = %148
  store i8 %27, i8* %17, align 1
  br label %150

150:                                              ; preds = %139, %3, %149, %148
  %151 = load i32, i32* %10, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %154, align 8
  br label %156

155:                                              ; preds = %150
  call void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* sret %0, %"class.WTF::Vector.444"* nonnull dereferenceable(16) %4) #12
  br label %156

156:                                              ; preds = %155, %153
  %157 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %8, align 8
  %158 = icmp eq %"class.std::__1::unique_ptr.432"* %157, null
  br i1 %158, label %181, label %159, !prof !4

159:                                              ; preds = %156
  %160 = bitcast %"class.std::__1::unique_ptr.432"* %157 to i8*
  %161 = load i32, i32* %10, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %179, label %163, !prof !2

163:                                              ; preds = %159
  %164 = zext i32 %161 to i64
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %157, i64 %164
  br label %166

166:                                              ; preds = %173, %163
  %167 = phi %"class.std::__1::unique_ptr.432"* [ %174, %173 ], [ %157, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %168, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %168, align 8
  %170 = icmp eq %"class.blink::CSSParserSelector"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %166
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %169) #12
  %172 = bitcast %"class.blink::CSSParserSelector"* %169 to i8*
  call void @free(i8* %172) #12
  br label %173

173:                                              ; preds = %171, %166
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %167, i64 1
  %175 = icmp eq %"class.std::__1::unique_ptr.432"* %174, %165
  br i1 %175, label %176, label %166

176:                                              ; preds = %173
  store i32 0, i32* %10, align 4
  %177 = bitcast %"class.WTF::Vector.444"* %4 to i8**
  %178 = load i8*, i8** %177, align 8
  br label %179

179:                                              ; preds = %176, %159
  %180 = phi i8* [ %178, %176 ], [ %160, %159 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %180) #12
  store %"class.std::__1::unique_ptr.432"* null, %"class.std::__1::unique_ptr.432"** %8, align 8
  br label %181

181:                                              ; preds = %156, %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser35ConsumeForgivingComplexSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* noalias sret, %"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.444", align 8
  %5 = alloca %"class.blink::CSSParserTokenRange", align 8
  %6 = alloca %"class.std::__1::unique_ptr.432", align 8
  %7 = bitcast %"class.WTF::Vector.444"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #12
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 0
  %12 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %2, i64 0, i32 1
  %14 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %15 = icmp eq %"class.blink::CSSParserToken"* %12, %14
  br i1 %15, label %133, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %1, i64 0, i32 2
  %18 = bitcast %"class.blink::CSSParserTokenRange"* %5 to i8*
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 1
  %21 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.432"* %6 to i8*
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = icmp eq i8* %17, null
  %25 = bitcast %"class.blink::CSSParserTokenRange"* %5 to i8*
  br label %26

26:                                               ; preds = %16, %122
  %27 = load i8, i8* %17, align 1, !range !3
  store i8 0, i8* %17, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %28 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %29 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %30 = icmp ult %"class.blink::CSSParserToken"* %28, %29
  %31 = select i1 %30, %"class.blink::CSSParserToken"* %28, %"class.blink::CSSParserToken"* %21
  %32 = icmp eq %"class.blink::CSSParserToken"* %28, %29
  br i1 %32, label %55, label %33

33:                                               ; preds = %26, %51
  %34 = phi %"class.blink::CSSParserToken"* [ %52, %51 ], [ %29, %26 ]
  %35 = phi %"class.blink::CSSParserToken"* [ %53, %51 ], [ %28, %26 ]
  %36 = icmp ult %"class.blink::CSSParserToken"* %35, %34
  %37 = select i1 %36, %"class.blink::CSSParserToken"* %35, %"class.blink::CSSParserToken"* %21
  %38 = bitcast %"class.blink::CSSParserToken"* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 63
  %41 = icmp eq i32 %40, 22
  br i1 %41, label %55, label %42

42:                                               ; preds = %33
  %43 = and i32 %39, 192
  %44 = icmp eq i32 %43, 64
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* %2) #12
  %47 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %48 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  br label %51

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %35, i64 1
  store %"class.blink::CSSParserToken"* %50, %"class.blink::CSSParserToken"** %11, align 8
  br label %51

51:                                               ; preds = %49, %45
  %52 = phi %"class.blink::CSSParserToken"* [ %34, %49 ], [ %48, %45 ]
  %53 = phi %"class.blink::CSSParserToken"* [ %50, %49 ], [ %47, %45 ]
  %54 = icmp eq %"class.blink::CSSParserToken"* %53, %52
  br i1 %54, label %55, label %33

55:                                               ; preds = %33, %51, %26
  %56 = phi %"class.blink::CSSParserToken"* [ %28, %26 ], [ %52, %51 ], [ %35, %33 ]
  %57 = phi %"class.blink::CSSParserToken"* [ %28, %26 ], [ %52, %51 ], [ %34, %33 ]
  %58 = icmp ult %"class.blink::CSSParserToken"* %56, %57
  %59 = select i1 %58, %"class.blink::CSSParserToken"* %56, %"class.blink::CSSParserToken"* %21
  %60 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"* %2, %"class.blink::CSSParserToken"* %31, %"class.blink::CSSParserToken"* %59) #12
  %61 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %60, 0
  store %"class.blink::CSSParserToken"* %61, %"class.blink::CSSParserToken"** %19, align 8
  %62 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %60, 1
  store %"class.blink::CSSParserToken"* %62, %"class.blink::CSSParserToken"** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store %"class.blink::CSSParserSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSParserSelector"*), %"class.blink::CSSParserSelector"** %23, align 8
  %63 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser22ConsumeComplexSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %1, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5)
  store %"class.blink::CSSParserSelector"* %63, %"class.blink::CSSParserSelector"** %23, align 8
  %64 = icmp eq %"class.blink::CSSParserSelector"* %63, null
  %65 = ptrtoint %"class.blink::CSSParserSelector"* %63 to i64
  br i1 %64, label %85, label %66

66:                                               ; preds = %55
  %67 = load i8, i8* %17, align 8, !range !3
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %85

69:                                               ; preds = %66
  %70 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %19, align 8
  %71 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %20, align 8
  %72 = icmp eq %"class.blink::CSSParserToken"* %70, %71
  br i1 %72, label %73, label %85

73:                                               ; preds = %69
  %74 = load i32, i32* %10, align 4
  %75 = load i32, i32* %9, align 8
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %84, label %77, !prof !2

77:                                               ; preds = %73
  %78 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %8, align 8
  %79 = zext i32 %74 to i64
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %78, i64 %79
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %23, align 8
  %81 = bitcast %"class.std::__1::unique_ptr.432"* %80 to i64*
  store i64 %65, i64* %81, align 8
  %82 = load i32, i32* %10, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %10, align 4
  br label %85

84:                                               ; preds = %73
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"* nonnull %4, %"class.std::__1::unique_ptr.432"* nonnull dereferenceable(8) %6) #12
  br label %85

85:                                               ; preds = %55, %84, %77, %66, %69
  %86 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %87 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %88 = icmp ult %"class.blink::CSSParserToken"* %86, %87
  %89 = select i1 %88, %"class.blink::CSSParserToken"* %86, %"class.blink::CSSParserToken"* %21
  %90 = bitcast %"class.blink::CSSParserToken"* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 63
  %93 = icmp eq i32 %92, 22
  br i1 %93, label %94, label %126

94:                                               ; preds = %85
  %95 = icmp eq %"class.blink::CSSParserToken"* %86, %87
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %86, i64 1
  store %"class.blink::CSSParserToken"* %97, %"class.blink::CSSParserToken"** %11, align 8
  br label %98

98:                                               ; preds = %94, %96
  %99 = phi %"class.blink::CSSParserToken"* [ %97, %96 ], [ %86, %94 ]
  %100 = icmp ult %"class.blink::CSSParserToken"* %99, %87
  %101 = select i1 %100, %"class.blink::CSSParserToken"* %99, %"class.blink::CSSParserToken"* %21
  %102 = bitcast %"class.blink::CSSParserToken"* %101 to i32*
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 63
  %105 = icmp eq i32 %104, 17
  br i1 %105, label %106, label %115

106:                                              ; preds = %98, %106
  %107 = phi %"class.blink::CSSParserToken"* [ %108, %106 ], [ %99, %98 ]
  %108 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %107, i64 1
  store %"class.blink::CSSParserToken"* %108, %"class.blink::CSSParserToken"** %11, align 8
  %109 = icmp ult %"class.blink::CSSParserToken"* %108, %87
  %110 = select i1 %109, %"class.blink::CSSParserToken"* %108, %"class.blink::CSSParserToken"* %21
  %111 = bitcast %"class.blink::CSSParserToken"* %110 to i32*
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 63
  %114 = icmp eq i32 %113, 17
  br i1 %114, label %106, label %115

115:                                              ; preds = %106, %98
  %116 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %23, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %23, align 8
  %117 = icmp eq %"class.blink::CSSParserSelector"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %115
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %116) #12
  %119 = bitcast %"class.blink::CSSParserSelector"* %116 to i8*
  call void @free(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  br i1 %24, label %122, label %121

121:                                              ; preds = %120
  store i8 %27, i8* %17, align 1
  br label %122

122:                                              ; preds = %120, %121
  %123 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %124 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %13, align 8
  %125 = icmp eq %"class.blink::CSSParserToken"* %123, %124
  br i1 %125, label %133, label %26

126:                                              ; preds = %85
  %127 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %23, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %23, align 8
  %128 = icmp eq %"class.blink::CSSParserSelector"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %126
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %127) #12
  %130 = bitcast %"class.blink::CSSParserSelector"* %127 to i8*
  call void @free(i8* %130) #12
  br label %131

131:                                              ; preds = %126, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  br i1 %24, label %133, label %132

132:                                              ; preds = %131
  store i8 %27, i8* %17, align 1
  br label %133

133:                                              ; preds = %122, %3, %132, %131
  %134 = load i32, i32* %10, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %137, align 8
  br label %139

138:                                              ; preds = %133
  call void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* sret %0, %"class.WTF::Vector.444"* nonnull dereferenceable(16) %4) #12
  br label %139

139:                                              ; preds = %138, %136
  %140 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %8, align 8
  %141 = icmp eq %"class.std::__1::unique_ptr.432"* %140, null
  br i1 %141, label %164, label %142, !prof !4

142:                                              ; preds = %139
  %143 = bitcast %"class.std::__1::unique_ptr.432"* %140 to i8*
  %144 = load i32, i32* %10, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %162, label %146, !prof !2

146:                                              ; preds = %142
  %147 = zext i32 %144 to i64
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %140, i64 %147
  br label %149

149:                                              ; preds = %156, %146
  %150 = phi %"class.std::__1::unique_ptr.432"* [ %157, %156 ], [ %140, %146 ]
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %151, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %151, align 8
  %153 = icmp eq %"class.blink::CSSParserSelector"* %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %149
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %152) #12
  %155 = bitcast %"class.blink::CSSParserSelector"* %152 to i8*
  call void @free(i8* %155) #12
  br label %156

156:                                              ; preds = %154, %149
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %150, i64 1
  %158 = icmp eq %"class.std::__1::unique_ptr.432"* %157, %148
  br i1 %158, label %159, label %149

159:                                              ; preds = %156
  store i32 0, i32* %10, align 4
  %160 = bitcast %"class.WTF::Vector.444"* %4 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %159, %142
  %163 = phi i8* [ %161, %159 ], [ %143, %142 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %163) #12
  store %"class.std::__1::unique_ptr.432"* null, %"class.std::__1::unique_ptr.432"** %8, align 8
  br label %164

164:                                              ; preds = %139, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSelectorParser17ConsumeCombinatorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* nocapture readnone, %"class.blink::CSSParserTokenRange"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  br label %8

8:                                                ; preds = %18, %2
  %9 = phi %"class.blink::CSSParserToken"* [ %6, %2 ], [ %19, %18 ]
  %10 = phi i32 [ 0, %2 ], [ 1, %18 ]
  %11 = icmp ult %"class.blink::CSSParserToken"* %9, %7
  %12 = select i1 %11, %"class.blink::CSSParserToken"* %9, %"class.blink::CSSParserToken"* %5
  %13 = bitcast %"class.blink::CSSParserToken"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 63
  switch i32 %15, label %93 [
    i32 17, label %16
    i32 6, label %22
  ]

16:                                               ; preds = %8
  %17 = icmp eq %"class.blink::CSSParserToken"* %9, %7
  br i1 %17, label %18, label %20

18:                                               ; preds = %16, %20
  %19 = phi %"class.blink::CSSParserToken"* [ %7, %16 ], [ %21, %20 ]
  br label %8

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %9, i64 1
  store %"class.blink::CSSParserToken"* %21, %"class.blink::CSSParserToken"** %3, align 8
  br label %18

22:                                               ; preds = %8
  %23 = tail call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %12) #12
  switch i16 %23, label %93 [
    i16 43, label %24
    i16 126, label %47
    i16 62, label %70
  ]

24:                                               ; preds = %22
  %25 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %26 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %27 = icmp eq %"class.blink::CSSParserToken"* %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %25, i64 1
  store %"class.blink::CSSParserToken"* %29, %"class.blink::CSSParserToken"** %3, align 8
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi %"class.blink::CSSParserToken"* [ %29, %28 ], [ %25, %24 ]
  %32 = icmp ult %"class.blink::CSSParserToken"* %31, %26
  %33 = select i1 %32, %"class.blink::CSSParserToken"* %31, %"class.blink::CSSParserToken"* %5
  %34 = bitcast %"class.blink::CSSParserToken"* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 63
  %37 = icmp eq i32 %36, 17
  br i1 %37, label %38, label %93

38:                                               ; preds = %30, %38
  %39 = phi %"class.blink::CSSParserToken"* [ %40, %38 ], [ %31, %30 ]
  %40 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %39, i64 1
  store %"class.blink::CSSParserToken"* %40, %"class.blink::CSSParserToken"** %3, align 8
  %41 = icmp ult %"class.blink::CSSParserToken"* %40, %26
  %42 = select i1 %41, %"class.blink::CSSParserToken"* %40, %"class.blink::CSSParserToken"* %5
  %43 = bitcast %"class.blink::CSSParserToken"* %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 63
  %46 = icmp eq i32 %45, 17
  br i1 %46, label %38, label %93

47:                                               ; preds = %22
  %48 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %49 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %50 = icmp eq %"class.blink::CSSParserToken"* %48, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %48, i64 1
  store %"class.blink::CSSParserToken"* %52, %"class.blink::CSSParserToken"** %3, align 8
  br label %53

53:                                               ; preds = %47, %51
  %54 = phi %"class.blink::CSSParserToken"* [ %52, %51 ], [ %48, %47 ]
  %55 = icmp ult %"class.blink::CSSParserToken"* %54, %49
  %56 = select i1 %55, %"class.blink::CSSParserToken"* %54, %"class.blink::CSSParserToken"* %5
  %57 = bitcast %"class.blink::CSSParserToken"* %56 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 63
  %60 = icmp eq i32 %59, 17
  br i1 %60, label %61, label %93

61:                                               ; preds = %53, %61
  %62 = phi %"class.blink::CSSParserToken"* [ %63, %61 ], [ %54, %53 ]
  %63 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %62, i64 1
  store %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"** %3, align 8
  %64 = icmp ult %"class.blink::CSSParserToken"* %63, %49
  %65 = select i1 %64, %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"* %5
  %66 = bitcast %"class.blink::CSSParserToken"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 63
  %69 = icmp eq i32 %68, 17
  br i1 %69, label %61, label %93

70:                                               ; preds = %22
  %71 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %72 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %73 = icmp eq %"class.blink::CSSParserToken"* %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %71, i64 1
  store %"class.blink::CSSParserToken"* %75, %"class.blink::CSSParserToken"** %3, align 8
  br label %76

76:                                               ; preds = %70, %74
  %77 = phi %"class.blink::CSSParserToken"* [ %75, %74 ], [ %71, %70 ]
  %78 = icmp ult %"class.blink::CSSParserToken"* %77, %72
  %79 = select i1 %78, %"class.blink::CSSParserToken"* %77, %"class.blink::CSSParserToken"* %5
  %80 = bitcast %"class.blink::CSSParserToken"* %79 to i32*
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 63
  %83 = icmp eq i32 %82, 17
  br i1 %83, label %84, label %93

84:                                               ; preds = %76, %84
  %85 = phi %"class.blink::CSSParserToken"* [ %86, %84 ], [ %77, %76 ]
  %86 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %85, i64 1
  store %"class.blink::CSSParserToken"* %86, %"class.blink::CSSParserToken"** %3, align 8
  %87 = icmp ult %"class.blink::CSSParserToken"* %86, %72
  %88 = select i1 %87, %"class.blink::CSSParserToken"* %86, %"class.blink::CSSParserToken"* %5
  %89 = bitcast %"class.blink::CSSParserToken"* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 63
  %92 = icmp eq i32 %91, 17
  br i1 %92, label %84, label %93

93:                                               ; preds = %8, %84, %61, %38, %76, %53, %30, %22
  %94 = phi i32 [ %10, %22 ], [ 3, %30 ], [ 4, %53 ], [ 2, %76 ], [ 3, %38 ], [ 4, %61 ], [ 2, %84 ], [ %10, %8 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSelectorParser15ParsePseudoTypeERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = tail call i32 @_ZN5blink11CSSSelector16NameToPseudoTypeERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8) %0, i1 zeroext %1) #12
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %49

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 8, i32* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  br label %23

18:                                               ; preds = %8
  %19 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  br i1 %19, label %49, label %20

20:                                               ; preds = %18
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  br label %23

23:                                               ; preds = %20, %17
  %24 = phi %"class.WTF::StringImpl"* [ %22, %20 ], [ null, %17 ]
  %25 = phi i64 [ %21, %20 ], [ %10, %17 ]
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 10, i32* %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  br label %34

32:                                               ; preds = %23
  %33 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %24, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  br i1 %33, label %49, label %34

34:                                               ; preds = %31, %32
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_custom_state_pseudo_class_enabled_E, align 1, !range !3
  %36 = icmp eq i8 %35, 0
  %37 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  br i1 %36, label %47, label %38

38:                                               ; preds = %34
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %42, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %38
  %46 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %43, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  br i1 %46, label %49, label %48

47:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  br label %48

48:                                               ; preds = %47, %45
  br label %49

49:                                               ; preds = %45, %32, %18, %2, %48
  %50 = phi i32 [ 0, %48 ], [ %6, %2 ], [ 88, %18 ], [ 89, %32 ], [ 15, %45 ]
  ret i32 %50
}

declare i32 @_ZN5blink11CSSSelector16NameToPseudoTypeERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN5blink17CSSSelectorParser18ParsePseudoElementERKN3WTF6StringEPKNS_4NodeE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSTokenizer", align 8
  %4 = alloca %"class.WTF::Vector.417", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.blink::CSSTokenizer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #12
  %8 = bitcast %"class.WTF::Vector.417"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 784, i1 false)
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.417"* nonnull sret %4, %"class.blink::CSSTokenizer"* nonnull %3) #12
  %9 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %4, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %117, label %16

16:                                               ; preds = %2
  %17 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %18

18:                                               ; preds = %16, %27
  %19 = phi i32 [ 0, %16 ], [ %28, %27 ]
  %20 = phi %"class.blink::CSSParserToken"* [ %10, %16 ], [ %29, %27 ]
  %21 = icmp ult %"class.blink::CSSParserToken"* %20, %14
  %22 = select i1 %21, %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"* %17
  %23 = bitcast %"class.blink::CSSParserToken"* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 63
  %26 = icmp eq i32 %25, 20
  br i1 %26, label %27, label %31

27:                                               ; preds = %18
  %28 = add nuw nsw i32 %19, 1
  %29 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 1
  %30 = icmp eq %"class.blink::CSSParserToken"* %29, %14
  br i1 %30, label %112, label %18

31:                                               ; preds = %18
  %32 = icmp ult i32 %19, 3
  %33 = and i32 %24, 62
  %34 = icmp eq i32 %33, 0
  %35 = and i1 %32, %34
  br i1 %35, label %36, label %112

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 1
  %38 = bitcast %"class.blink::CSSParserToken"* %20 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 0, i32 2
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  %46 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  %47 = and i32 %39, 262144
  %48 = icmp eq i32 %47, 0
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %51, i64* %52, align 8, !alias.scope !5
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %54 = bitcast i8** %53 to i64*
  store i64 %44, i64* %54, align 8, !alias.scope !5
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %41, i32* %55, align 8, !alias.scope !5
  %56 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %6) #12
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  %58 = and i32 %39, 63
  %59 = icmp eq i32 %58, 1
  %60 = call i32 @_ZN5blink17CSSSelectorParser15ParsePseudoTypeERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, i1 zeroext %59)
  %61 = call zeroext i8 @_ZN5blink11CSSSelector11GetPseudoIdENS0_10PseudoTypeE(i32 %60) #12
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %36
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %77

77:                                               ; preds = %36, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  %78 = call zeroext i1 @_ZN5blink13PseudoElement12IsWebExposedENS_8PseudoIdEPKNS_4NodeE(i8 zeroext %61, %"class.blink::Node"* %1) #12
  br i1 %78, label %79, label %111

79:                                               ; preds = %77
  %80 = icmp eq i8 %61, 10
  br i1 %80, label %81, label %104

81:                                               ; preds = %79
  %82 = icmp ult %"class.blink::CSSParserToken"* %37, %14
  %83 = select i1 %82, %"class.blink::CSSParserToken"* %37, %"class.blink::CSSParserToken"* %17
  %84 = bitcast %"class.blink::CSSParserToken"* %83 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 63
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %104

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 2
  %90 = icmp ult %"class.blink::CSSParserToken"* %89, %14
  %91 = select i1 %90, %"class.blink::CSSParserToken"* %89, %"class.blink::CSSParserToken"* %17
  %92 = bitcast %"class.blink::CSSParserToken"* %91 to i32*
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, 63
  %95 = icmp eq i32 %94, 24
  br i1 %95, label %96, label %104

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 3
  %98 = icmp ult %"class.blink::CSSParserToken"* %97, %14
  %99 = select i1 %98, %"class.blink::CSSParserToken"* %97, %"class.blink::CSSParserToken"* %17
  %100 = bitcast %"class.blink::CSSParserToken"* %99 to i32*
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 63
  %103 = icmp eq i32 %102, 31
  br i1 %103, label %112, label %104

104:                                              ; preds = %79, %96, %88, %81
  %105 = icmp ult %"class.blink::CSSParserToken"* %37, %14
  %106 = select i1 %105, %"class.blink::CSSParserToken"* %37, %"class.blink::CSSParserToken"* %17
  %107 = bitcast %"class.blink::CSSParserToken"* %106 to i32*
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 63
  %110 = icmp eq i32 %109, 31
  br i1 %110, label %112, label %111

111:                                              ; preds = %77, %104
  br label %112

112:                                              ; preds = %27, %104, %96, %31, %111
  %113 = phi i8 [ %61, %104 ], [ 10, %96 ], [ 0, %31 ], [ 0, %111 ], [ 0, %27 ]
  %114 = load i32, i32* %11, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %117, label %116, !prof !2

116:                                              ; preds = %112
  store i32 0, i32* %11, align 4
  br label %117

117:                                              ; preds = %2, %116, %112
  %118 = phi i8 [ %113, %116 ], [ %113, %112 ], [ 0, %2 ]
  %119 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %120 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %4, i64 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"class.blink::CSSParserToken"*
  %122 = icmp eq %"class.blink::CSSParserToken"* %119, %121
  br i1 %122, label %125, label %123, !prof !4

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.418"* nonnull %124, %"class.blink::CSSParserToken"* %119) #12
  br label %125

125:                                              ; preds = %117, %123
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %8) #12
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #12
  ret i8 %118
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.417"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i8 @_ZN5blink11CSSSelector11GetPseudoIdENS0_10PseudoTypeE(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13PseudoElement12IsWebExposedENS_8PseudoIdEPKNS_4NodeE(i8 zeroext, %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.427", %"class.WTF::Vector.427"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.427"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.422", %"class.WTF::Vector.422"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.422", %"class.WTF::Vector.422"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.423"* %53, i32* %48) #12
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #12
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17CSSSelectorParser26ParsePseudoElementArgumentERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSTokenizer", align 8
  %3 = alloca %"class.WTF::Vector.417", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.blink::CSSTokenizer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %2, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #12
  %6 = bitcast %"class.WTF::Vector.417"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 784, i1 false)
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.417"* nonnull sret %3, %"class.blink::CSSTokenizer"* nonnull %2) #12
  %7 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %3, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %1
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %16

16:                                               ; preds = %14, %25
  %17 = phi i32 [ 0, %14 ], [ %26, %25 ]
  %18 = phi %"class.blink::CSSParserToken"* [ %8, %14 ], [ %27, %25 ]
  %19 = icmp ult %"class.blink::CSSParserToken"* %18, %12
  %20 = select i1 %19, %"class.blink::CSSParserToken"* %18, %"class.blink::CSSParserToken"* %15
  %21 = bitcast %"class.blink::CSSParserToken"* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 63
  %24 = icmp eq i32 %23, 20
  br i1 %24, label %25, label %29

25:                                               ; preds = %16
  %26 = add nuw nsw i32 %17, 1
  %27 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %18, i64 1
  %28 = icmp eq %"class.blink::CSSParserToken"* %27, %12
  br i1 %28, label %29, label %16

29:                                               ; preds = %16, %25
  %30 = phi %"class.blink::CSSParserToken"* [ %18, %16 ], [ %12, %25 ]
  %31 = phi i32 [ %17, %16 ], [ %26, %25 ]
  %32 = icmp ugt i32 %31, 2
  br i1 %32, label %66, label %33

33:                                               ; preds = %1, %29
  %34 = phi %"class.blink::CSSParserToken"* [ %30, %29 ], [ %8, %1 ]
  %35 = icmp ult %"class.blink::CSSParserToken"* %34, %12
  %36 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %37 = select i1 %35, %"class.blink::CSSParserToken"* %34, %"class.blink::CSSParserToken"* %36
  %38 = bitcast %"class.blink::CSSParserToken"* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 63
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %66

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %34, i64 1
  %44 = icmp ult %"class.blink::CSSParserToken"* %43, %12
  %45 = select i1 %44, %"class.blink::CSSParserToken"* %43, %"class.blink::CSSParserToken"* %36
  %46 = bitcast %"class.blink::CSSParserToken"* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 63
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %66

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %34, i64 2
  %52 = icmp ult %"class.blink::CSSParserToken"* %51, %12
  %53 = select i1 %52, %"class.blink::CSSParserToken"* %51, %"class.blink::CSSParserToken"* %36
  %54 = bitcast %"class.blink::CSSParserToken"* %53 to i32*
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 63
  %57 = icmp eq i32 %56, 24
  br i1 %57, label %58, label %66

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %34, i64 3
  %60 = icmp ult %"class.blink::CSSParserToken"* %59, %12
  %61 = select i1 %60, %"class.blink::CSSParserToken"* %59, %"class.blink::CSSParserToken"* %36
  %62 = bitcast %"class.blink::CSSParserToken"* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, 63
  %65 = icmp eq i32 %64, 31
  br i1 %65, label %88, label %66

66:                                               ; preds = %58, %50, %42, %33, %29
  %67 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %105, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %105

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #12
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %76
  call void @llvm.trap() #12
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %105

88:                                               ; preds = %58
  %89 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #12
  %90 = and i32 %47, 262144
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %45, i64 0, i32 2
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8, !noalias !8
  %95 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %45, i64 0, i32 1
  %96 = load i32, i32* %95, align 4, !noalias !8
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %98 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %99 = select i1 %91, i64 %97, i64 %98
  %100 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %99, i64* %100, align 8, !alias.scope !8
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %102 = bitcast i8** %101 to i64*
  store i64 %94, i64* %102, align 8, !alias.scope !8
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %96, i32* %103, align 8, !alias.scope !8
  %104 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #12
  br label %105

105:                                              ; preds = %86, %71, %66, %88
  %106 = phi %"class.WTF::StringImpl"* [ %104, %88 ], [ null, %66 ], [ %69, %71 ], [ %69, %86 ]
  %107 = load i32, i32* %9, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %110, label %109, !prof !2

109:                                              ; preds = %105
  store i32 0, i32* %9, align 4
  br label %110

110:                                              ; preds = %109, %105
  %111 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %112 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %3, i64 0, i32 0, i32 1, i64 0
  %113 = bitcast i8* %112 to %"class.blink::CSSParserToken"*
  %114 = icmp eq %"class.blink::CSSParserToken"* %111, %113
  br i1 %114, label %117, label %115, !prof !4

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.418"* nonnull %116, %"class.blink::CSSParserToken"* %111) #12
  br label %117

117:                                              ; preds = %110, %115
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %6) #12
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #12
  ret %"class.WTF::StringImpl"* %106
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSelectorParser11ConsumeNameERNS_19CSSParserTokenRangeERN3WTF12AtomicStringES5_(%"class.blink::CSSSelectorParser"* nocapture readnone, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.WTF::AtomicString"* nocapture dereferenceable(8), %"class.WTF::AtomicString"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %4
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #12
  br label %47

47:                                               ; preds = %28, %43, %46
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #12
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  tail call void @llvm.trap() #12
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %47
  %68 = ptrtoint %"class.WTF::StringImpl"* %48 to i64
  %69 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  store i64 %68, i64* %69, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #12
  br label %86

86:                                               ; preds = %67, %82, %85
  %87 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %88 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %90 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %89, align 8
  %91 = icmp ult %"class.blink::CSSParserToken"* %88, %90
  %92 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %93 = select i1 %91, %"class.blink::CSSParserToken"* %88, %"class.blink::CSSParserToken"* %92
  %94 = bitcast %"class.blink::CSSParserToken"* %93 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 63
  switch i32 %96, label %184 [
    i32 0, label %97
    i32 6, label %136
  ]

97:                                               ; preds = %86
  %98 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #12
  %99 = and i32 %95, 262144
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %93, i64 0, i32 2
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8, !noalias !11
  %104 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %93, i64 0, i32 1
  %105 = load i32, i32* %104, align 4, !noalias !11
  %106 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %107 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %108 = select i1 %100, i64 %106, i64 %107
  %109 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %108, i64* %109, align 8, !alias.scope !11
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %111 = bitcast i8** %110 to i64*
  store i64 %103, i64* %111, align 8, !alias.scope !11
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %105, i32* %112, align 8, !alias.scope !11
  %113 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %5) #12
  %114 = ptrtoint %"class.WTF::StringImpl"* %113 to i64
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %114, i64* %30, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %97
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #12
  br label %130

130:                                              ; preds = %129, %126, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #12
  %131 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %87, align 8
  %132 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %89, align 8
  %133 = icmp eq %"class.blink::CSSParserToken"* %131, %132
  br i1 %133, label %230, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %131, i64 1
  store %"class.blink::CSSParserToken"* %135, %"class.blink::CSSParserToken"** %87, align 8
  br label %230

136:                                              ; preds = %86
  %137 = tail call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %93) #12
  %138 = icmp eq i16 %137, 42
  br i1 %138, label %141, label %139

139:                                              ; preds = %136
  %140 = load i32, i32* %94, align 8
  br label %184

141:                                              ; preds = %136
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %161, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i33
  %153 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #12
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !2

158:                                              ; preds = %149
  tail call void @llvm.trap() #12
  unreachable

159:                                              ; preds = %149
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %150, align 4
  br label %161

161:                                              ; preds = %159, %144, %141
  %162 = ptrtoint %"class.WTF::StringImpl"* %142 to i64
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %162, i64* %30, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #12
  br label %178

178:                                              ; preds = %161, %174, %177
  %179 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %87, align 8
  %180 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %89, align 8
  %181 = icmp eq %"class.blink::CSSParserToken"* %179, %180
  br i1 %181, label %230, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %179, i64 1
  store %"class.blink::CSSParserToken"* %183, %"class.blink::CSSParserToken"** %87, align 8
  br label %230

184:                                              ; preds = %139, %86
  %185 = phi i32 [ %140, %139 ], [ %95, %86 ]
  %186 = and i32 %185, 63
  %187 = icmp eq i32 %186, 6
  br i1 %187, label %188, label %464

188:                                              ; preds = %184
  %189 = tail call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %93) #12
  %190 = icmp eq i16 %189, 124
  br i1 %190, label %191, label %464

191:                                              ; preds = %188
  %192 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %193 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %192, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %213, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i33
  %205 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #12
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !2

210:                                              ; preds = %201
  tail call void @llvm.trap() #12
  unreachable

211:                                              ; preds = %201
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %202, align 4
  br label %213

213:                                              ; preds = %211, %196, %191
  %214 = ptrtoint %"class.WTF::StringImpl"* %194 to i64
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %214, i64* %30, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #12
  br label %230

230:                                              ; preds = %229, %226, %213, %182, %178, %134, %130
  %231 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %87, align 8
  %232 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %89, align 8
  %233 = icmp ult %"class.blink::CSSParserToken"* %231, %232
  %234 = select i1 %233, %"class.blink::CSSParserToken"* %231, %"class.blink::CSSParserToken"* %92
  %235 = bitcast %"class.blink::CSSParserToken"* %234 to i32*
  %236 = load i32, i32* %235, align 8
  %237 = and i32 %236, 63
  %238 = icmp eq i32 %237, 6
  br i1 %238, label %239, label %464

239:                                              ; preds = %230
  %240 = call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %234) #12
  %241 = icmp eq i16 %240, 124
  br i1 %241, label %242, label %464

242:                                              ; preds = %239
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %243, %244
  %246 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %247 = select i1 %245, %"class.WTF::AtomicString"* %246, %"class.WTF::AtomicString"* %2
  %248 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %247, i64 0, i32 0, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %268, label %251

251:                                              ; preds = %242
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %268

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = zext i32 %258 to i33
  %260 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %259, i33 1) #12
  %261 = extractvalue { i33, i1 } %260, 1
  %262 = extractvalue { i33, i1 } %260, 0
  %263 = icmp slt i33 %262, 0
  %264 = or i1 %261, %263
  br i1 %264, label %265, label %266, !prof !2

265:                                              ; preds = %256
  call void @llvm.trap() #12
  unreachable

266:                                              ; preds = %256
  %267 = trunc i33 %262 to i32
  store i32 %267, i32* %257, align 4
  br label %268

268:                                              ; preds = %266, %251, %242
  %269 = ptrtoint %"class.WTF::StringImpl"* %249 to i64
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  store i64 %269, i64* %69, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #12
  br label %285

285:                                              ; preds = %268, %281, %284
  %286 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %87, align 8
  %287 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %286, i64 1
  %288 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %89, align 8
  %289 = icmp ult %"class.blink::CSSParserToken"* %287, %288
  %290 = select i1 %289, %"class.blink::CSSParserToken"* %287, %"class.blink::CSSParserToken"* %92
  %291 = bitcast %"class.blink::CSSParserToken"* %290 to i32*
  %292 = load i32, i32* %291, align 8
  %293 = and i32 %292, 63
  switch i32 %293, label %390 [
    i32 0, label %294
    i32 6, label %339
  ]

294:                                              ; preds = %285
  %295 = icmp eq %"class.blink::CSSParserToken"* %286, %288
  br i1 %295, label %297, label %296

296:                                              ; preds = %294
  store %"class.blink::CSSParserToken"* %287, %"class.blink::CSSParserToken"** %87, align 8
  br label %297

297:                                              ; preds = %294, %296
  %298 = phi %"class.blink::CSSParserToken"* [ %286, %294 ], [ %287, %296 ]
  %299 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %299) #12
  %300 = icmp eq %"class.blink::CSSParserToken"* %298, %288
  br i1 %300, label %303, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %298, i64 1
  store %"class.blink::CSSParserToken"* %302, %"class.blink::CSSParserToken"** %87, align 8
  br label %303

303:                                              ; preds = %297, %301
  %304 = phi %"class.blink::CSSParserToken"* [ %298, %301 ], [ %92, %297 ]
  %305 = bitcast %"class.blink::CSSParserToken"* %304 to i32*
  %306 = load i32, i32* %305, align 8, !noalias !14
  %307 = and i32 %306, 262144
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %304, i64 0, i32 2
  %310 = bitcast i8** %309 to i64*
  %311 = load i64, i64* %310, align 8, !noalias !14
  %312 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %304, i64 0, i32 1
  %313 = load i32, i32* %312, align 4, !noalias !14
  %314 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %315 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %316 = select i1 %308, i64 %314, i64 %315
  %317 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %316, i64* %317, align 8, !alias.scope !14
  %318 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %319 = bitcast i8** %318 to i64*
  store i64 %311, i64* %319, align 8, !alias.scope !14
  %320 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %313, i32* %320, align 8, !alias.scope !14
  %321 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %6) #12
  %322 = ptrtoint %"class.WTF::StringImpl"* %321 to i64
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %322, i64* %30, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %324, label %338, label %325

325:                                              ; preds = %303
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %325
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi i32 [ %333, %332 ], [ %331, %325 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #12
  br label %338

338:                                              ; preds = %337, %334, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %299) #12
  br label %464

339:                                              ; preds = %285
  %340 = call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %290) #12
  %341 = icmp eq i16 %340, 42
  br i1 %341, label %342, label %390

342:                                              ; preds = %339
  %343 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %87, align 8
  %344 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %89, align 8
  %345 = icmp eq %"class.blink::CSSParserToken"* %343, %344
  %346 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %343, i64 1
  %347 = select i1 %345, %"class.blink::CSSParserToken"* %343, %"class.blink::CSSParserToken"* %346
  %348 = icmp eq %"class.blink::CSSParserToken"* %347, %344
  %349 = and i1 %345, %348
  br i1 %349, label %353, label %350

350:                                              ; preds = %342
  %351 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %347, i64 1
  %352 = select i1 %348, %"class.blink::CSSParserToken"* %347, %"class.blink::CSSParserToken"* %351
  store %"class.blink::CSSParserToken"* %352, %"class.blink::CSSParserToken"** %87, align 8
  br label %353

353:                                              ; preds = %342, %350
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %373, label %356

356:                                              ; preds = %353
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 monotonic, align 4
  %359 = and i32 %358, 2
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %373

361:                                              ; preds = %356
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  %364 = zext i32 %363 to i33
  %365 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %364, i33 1) #12
  %366 = extractvalue { i33, i1 } %365, 1
  %367 = extractvalue { i33, i1 } %365, 0
  %368 = icmp slt i33 %367, 0
  %369 = or i1 %366, %368
  br i1 %369, label %370, label %371, !prof !2

370:                                              ; preds = %361
  call void @llvm.trap() #12
  unreachable

371:                                              ; preds = %361
  %372 = trunc i33 %367 to i32
  store i32 %372, i32* %362, align 4
  br label %373

373:                                              ; preds = %371, %356, %353
  %374 = ptrtoint %"class.WTF::StringImpl"* %354 to i64
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %374, i64* %30, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %464, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %464

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #12
  br label %464

390:                                              ; preds = %285, %339
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %391, null
  br i1 %392, label %410, label %393

393:                                              ; preds = %390
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %410

398:                                              ; preds = %393
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = zext i32 %400 to i33
  %402 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %401, i33 1) #12
  %403 = extractvalue { i33, i1 } %402, 1
  %404 = extractvalue { i33, i1 } %402, 0
  %405 = icmp slt i33 %404, 0
  %406 = or i1 %403, %405
  br i1 %406, label %407, label %408, !prof !2

407:                                              ; preds = %398
  call void @llvm.trap() #12
  unreachable

408:                                              ; preds = %398
  %409 = trunc i33 %404 to i32
  store i32 %409, i32* %399, align 4
  br label %410

410:                                              ; preds = %408, %393, %390
  %411 = ptrtoint %"class.WTF::StringImpl"* %391 to i64
  %412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %411, i64* %30, align 8
  %413 = icmp eq %"class.WTF::StringImpl"* %412, null
  br i1 %413, label %427, label %414

414:                                              ; preds = %410
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load atomic i32, i32* %415 monotonic, align 4
  %417 = and i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 0
  %420 = load i32, i32* %419, align 4
  br i1 %418, label %421, label %423

421:                                              ; preds = %414
  %422 = add i32 %420, -1
  store i32 %422, i32* %419, align 4
  br label %423

423:                                              ; preds = %421, %414
  %424 = phi i32 [ %422, %421 ], [ %420, %414 ]
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %412) #12
  br label %427

427:                                              ; preds = %410, %423, %426
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %447, label %430

430:                                              ; preds = %427
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %447

435:                                              ; preds = %430
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  %438 = zext i32 %437 to i33
  %439 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %438, i33 1) #12
  %440 = extractvalue { i33, i1 } %439, 1
  %441 = extractvalue { i33, i1 } %439, 0
  %442 = icmp slt i33 %441, 0
  %443 = or i1 %440, %442
  br i1 %443, label %444, label %445, !prof !2

444:                                              ; preds = %435
  call void @llvm.trap() #12
  unreachable

445:                                              ; preds = %435
  %446 = trunc i33 %441 to i32
  store i32 %446, i32* %436, align 4
  br label %447

447:                                              ; preds = %445, %430, %427
  %448 = ptrtoint %"class.WTF::StringImpl"* %428 to i64
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  store i64 %448, i64* %69, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %449, null
  br i1 %450, label %464, label %451

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  br i1 %455, label %458, label %460

458:                                              ; preds = %451
  %459 = add i32 %457, -1
  store i32 %459, i32* %456, align 4
  br label %460

460:                                              ; preds = %458, %451
  %461 = phi i32 [ %459, %458 ], [ %457, %451 ]
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %460
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %449) #12
  br label %464

464:                                              ; preds = %463, %460, %447, %389, %386, %373, %338, %230, %239, %184, %188
  %465 = phi i1 [ false, %188 ], [ false, %184 ], [ true, %239 ], [ true, %230 ], [ true, %338 ], [ true, %373 ], [ true, %386 ], [ true, %389 ], [ false, %447 ], [ false, %460 ], [ false, %463 ]
  ret i1 %465
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser21ConsumeSimpleSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %4 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = icmp ult %"class.blink::CSSParserToken"* %4, %6
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %9 = select i1 %7, %"class.blink::CSSParserToken"* %4, %"class.blink::CSSParserToken"* %8
  %10 = bitcast %"class.blink::CSSParserToken"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 63
  switch i32 %12, label %22 [
    i32 3, label %13
    i32 6, label %15
  ]

13:                                               ; preds = %2
  %14 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser9ConsumeIdERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  br label %29

15:                                               ; preds = %2
  %16 = tail call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %9) #12
  %17 = icmp eq i16 %16, 46
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i32, i32* %10, align 8
  br label %22

20:                                               ; preds = %15
  %21 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser12ConsumeClassERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  br label %29

22:                                               ; preds = %18, %2
  %23 = phi i32 [ %19, %18 ], [ %11, %2 ]
  %24 = and i32 %23, 63
  switch i32 %24, label %79 [
    i32 25, label %25
    i32 20, label %27
  ]

25:                                               ; preds = %22
  %26 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser16ConsumeAttributeERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  br label %29

27:                                               ; preds = %22
  %28 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser13ConsumePseudoERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %1)
  br label %29

29:                                               ; preds = %20, %27, %25, %13
  %30 = phi %"class.blink::CSSParserSelector"* [ %14, %13 ], [ %21, %20 ], [ %26, %25 ], [ %28, %27 ]
  %31 = ptrtoint %"class.blink::CSSParserSelector"* %30 to i64
  %32 = icmp eq %"class.blink::CSSParserSelector"* %30, null
  br i1 %32, label %77, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  %35 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %35, i64 0, i32 3
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 5
  br i1 %38, label %79, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 6
  %41 = load i32, i32* %40, align 4
  switch i32 %41, label %59 [
    i32 0, label %79
    i32 47, label %42
    i32 46, label %42
    i32 104, label %51
    i32 14, label %55
  ]

42:                                               ; preds = %39, %39
  %43 = bitcast %"class.blink::CSSParserSelector"* %30 to i32**
  %44 = load i32*, i32** %43, align 8
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 65280
  %47 = icmp eq i32 %46, 12288
  %48 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase44is_css_marker_nested_pseudo_element_enabled_E, align 1
  %49 = icmp ne i8 %48, 0
  %50 = and i1 %47, %49
  br i1 %50, label %79, label %59

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %52, align 8
  %54 = tail call zeroext i1 @_ZNK5blink11CSSSelector26IsTreeAbidingPseudoElementEv(%"class.blink::CSSSelector"* %53) #12
  br i1 %54, label %79, label %77

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %56, align 8
  %58 = tail call zeroext i1 @_ZNK5blink11CSSSelector18IsAllowedAfterPartEv(%"class.blink::CSSSelector"* %57) #12
  br i1 %58, label %79, label %59

59:                                               ; preds = %55, %42, %39
  %60 = bitcast %"class.blink::CSSParserSelector"* %30 to i32**
  %61 = load i32*, i32** %60, align 8
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 240
  %64 = icmp eq i32 %63, 64
  br i1 %64, label %65, label %77

65:                                               ; preds = %59
  %66 = lshr i32 %62, 8
  %67 = and i32 %66, 255
  %68 = trunc i32 %66 to i8
  switch i8 %68, label %69 [
    i8 19, label %79
    i8 20, label %79
    i8 52, label %79
  ]

69:                                               ; preds = %65
  switch i32 %41, label %77 [
    i32 55, label %70
    i32 58, label %70
    i32 60, label %70
    i32 59, label %70
    i32 61, label %70
    i32 62, label %70
    i32 63, label %70
    i32 75, label %75
    i32 14, label %71
    i32 88, label %74
    i32 89, label %74
    i32 54, label %74
  ]

70:                                               ; preds = %69, %69, %69, %69, %69, %69, %69
  switch i8 %68, label %77 [
    i8 33, label %79
    i8 36, label %79
    i8 26, label %79
    i8 31, label %79
    i8 68, label %79
    i8 69, label %79
    i8 66, label %79
    i8 67, label %79
    i8 70, label %79
    i8 71, label %79
    i8 72, label %79
    i8 73, label %79
    i8 74, label %79
    i8 65, label %79
    i8 64, label %79
  ]

71:                                               ; preds = %69
  switch i8 %68, label %72 [
    i8 26, label %79
    i8 28, label %79
    i8 29, label %79
    i8 30, label %79
    i8 31, label %79
  ]

72:                                               ; preds = %71
  %73 = icmp eq i32 %67, 15
  br i1 %73, label %79, label %77

74:                                               ; preds = %69, %69, %69
  switch i8 %68, label %77 [
    i8 26, label %79
    i8 28, label %79
    i8 29, label %79
    i8 30, label %79
    i8 31, label %79
  ]

75:                                               ; preds = %69
  %76 = icmp eq i32 %67, 64
  br i1 %76, label %79, label %77

77:                                               ; preds = %29, %74, %70, %69, %59, %72, %51, %75
  %78 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 2
  store i8 1, i8* %78, align 8
  br label %79

79:                                               ; preds = %22, %71, %71, %71, %71, %71, %42, %74, %74, %74, %74, %74, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %70, %65, %65, %65, %55, %39, %72, %51, %33, %77, %75
  %80 = phi i64 [ %31, %72 ], [ %31, %51 ], [ %31, %33 ], [ %31, %77 ], [ %31, %75 ], [ %31, %39 ], [ %31, %55 ], [ %31, %65 ], [ %31, %65 ], [ %31, %65 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %70 ], [ %31, %74 ], [ %31, %74 ], [ %31, %74 ], [ %31, %74 ], [ %31, %74 ], [ %31, %42 ], [ %31, %71 ], [ %31, %71 ], [ %31, %71 ], [ %31, %71 ], [ %31, %71 ], [ 0, %22 ]
  %81 = inttoptr i64 %80 to %"class.blink::CSSParserSelector"*
  ret %"class.blink::CSSParserSelector"* %81
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser27AddSimpleSelectorToCompoundENSt3__110unique_ptrINS_17CSSParserSelectorENS1_14default_deleteIS3_EEEES6_(%"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17CSSParserSelector16AppendTagHistoryENS_11CSSSelector12RelationTypeENSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEE(%"class.blink::CSSParserSelector"* %0, i32 0, %"class.blink::CSSParserSelector"* %1) #12
  ret %"class.blink::CSSParserSelector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink17CSSSelectorParser18DetermineNamespaceERKN3WTF12AtomicStringE(%"class.blink::CSSSelectorParser"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %8 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %7, align 8
  %9 = icmp eq %"class.blink::StyleSheetContents"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10, %6
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %37

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %8, i64 0, i32 6
  br label %37

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  br label %37

24:                                               ; preds = %18
  %25 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %4, %27
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %31 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %30, align 8
  %32 = icmp eq %"class.blink::StyleSheetContents"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %37

35:                                               ; preds = %29
  %36 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18StyleSheetContents22NamespaceURIFromPrefixERKN3WTF12AtomicStringE(%"class.blink::StyleSheetContents"* nonnull %31, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  br label %37

37:                                               ; preds = %24, %16, %14, %35, %33, %22
  %38 = phi %"class.WTF::AtomicString"* [ %23, %22 ], [ %36, %35 ], [ %34, %33 ], [ %15, %14 ], [ %17, %16 ], [ %25, %24 ]
  ret %"class.WTF::AtomicString"* %38
}

declare void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17CSSSelectorParser16DefaultNamespaceEv(%"class.blink::CSSSelectorParser"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %3 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSheetContents"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 1, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5, %1
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %13

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %3, i64 0, i32 6
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi %"class.WTF::AtomicString"* [ %10, %9 ], [ %12, %11 ]
  ret %"class.WTF::AtomicString"* %14
}

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CSSSelectorParser27PrependTypeSelectorIfNeededERKN3WTF12AtomicStringEbS4_PNS_17CSSParserSelectorE(%"class.blink::CSSSelectorParser"* nocapture, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::CSSParserSelector"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.blink::QualifiedName", align 8
  br i1 %2, label %33, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %12 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %11, align 8
  %13 = icmp eq %"class.blink::StyleSheetContents"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  %16 = load i8, i8* %15, align 1, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14, %10
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %12, i64 0, i32 6
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %23

23:                                               ; preds = %18, %20
  %24 = phi %"class.WTF::AtomicString"* [ %19, %18 ], [ %22, %20 ]
  %25 = phi %"class.WTF::AtomicString"* [ %19, %18 ], [ %21, %20 ]
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %27, %29
  br i1 %30, label %31, label %36

31:                                               ; preds = %23
  %32 = tail call zeroext i1 @_ZNK5blink17CSSParserSelector40NeedsImplicitShadowCombinatorForMatchingEv(%"class.blink::CSSParserSelector"* %4) #12
  br i1 %32, label %36, label %287

33:                                               ; preds = %5
  %34 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %35, align 8
  br label %40

36:                                               ; preds = %31, %23
  %37 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %38, align 8
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %40

40:                                               ; preds = %33, %36
  %41 = phi %"class.WTF::StringImpl"** [ %38, %36 ], [ %35, %33 ]
  %42 = phi i8* [ %37, %36 ], [ %34, %33 ]
  %43 = phi %"class.WTF::AtomicString"* [ %39, %36 ], [ %3, %33 ]
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %41, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #12
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #12
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %40, %47, %62
  %65 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %66, align 8
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %70, label %82

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %72 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %71, align 8
  %73 = icmp eq %"class.blink::StyleSheetContents"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  %76 = load i8, i8* %75, align 1, !range !3
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74, %70
  %79 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %101

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %72, i64 0, i32 6
  br label %101

82:                                               ; preds = %64
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  br label %101

88:                                               ; preds = %82
  %89 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %68, %91
  br i1 %92, label %101, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %95 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %94, align 8
  %96 = icmp eq %"class.blink::StyleSheetContents"* %95, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %101

99:                                               ; preds = %93
  %100 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18StyleSheetContents22NamespaceURIFromPrefixERKN3WTF12AtomicStringE(%"class.blink::StyleSheetContents"* nonnull %95, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  br label %101

101:                                              ; preds = %78, %80, %86, %88, %97, %99
  %102 = phi %"class.WTF::AtomicString"* [ %87, %86 ], [ %100, %99 ], [ %98, %97 ], [ %79, %78 ], [ %81, %80 ], [ %89, %88 ]
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %66, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %125, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %127

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #12
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !2

120:                                              ; preds = %111
  tail call void @llvm.trap() #12
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %121, %101
  %126 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 2
  store i8 1, i8* %126, align 8
  br label %270

127:                                              ; preds = %106, %121
  %128 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #12
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %149, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i33
  %141 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #12
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %137
  tail call void @llvm.trap() #12
  unreachable

147:                                              ; preds = %137
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %138, align 4
  br label %149

149:                                              ; preds = %127, %132, %147
  %150 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %151 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %150, align 8
  %152 = icmp eq %"class.blink::StyleSheetContents"* %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  %155 = load i8, i8* %154, align 1, !range !3
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %153, %149
  %158 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %161

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %151, i64 0, i32 6
  br label %161

161:                                              ; preds = %157, %159
  %162 = phi %"class.WTF::AtomicString"* [ %158, %157 ], [ %160, %159 ]
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %164 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %162, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %163, %165
  br i1 %166, label %167, label %207

167:                                              ; preds = %161
  %168 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %169 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %189, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %189

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i33
  %181 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %180, i33 1) #12
  %182 = extractvalue { i33, i1 } %181, 1
  %183 = extractvalue { i33, i1 } %181, 0
  %184 = icmp slt i33 %183, 0
  %185 = or i1 %182, %184
  br i1 %185, label %186, label %187, !prof !2

186:                                              ; preds = %177
  tail call void @llvm.trap() #12
  unreachable

187:                                              ; preds = %177
  %188 = trunc i33 %183 to i32
  store i32 %188, i32* %178, align 4
  br label %189

189:                                              ; preds = %187, %172, %167
  %190 = ptrtoint %"class.WTF::StringImpl"* %170 to i64
  %191 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  store i64 %190, i64* %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #12
  br label %207

207:                                              ; preds = %206, %203, %189, %161
  %208 = bitcast %"class.blink::QualifiedName"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #12
  %209 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %209, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %9, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #12
  %210 = call zeroext i1 @_ZNK5blink17CSSParserSelector20IsHostPseudoSelectorEv(%"class.blink::CSSParserSelector"* %4) #12
  %211 = xor i1 %210, true
  %212 = xor i1 %2, true
  %213 = and i1 %210, %212
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  %216 = and i1 %213, %215
  br i1 %216, label %238, label %217

217:                                              ; preds = %207
  %218 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %219 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %209, align 8
  %220 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %218, i64 0, i32 0, i32 0
  %221 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %220, align 8
  %222 = icmp ne %"class.blink::QualifiedName::QualifiedNameImpl"* %219, %221
  %223 = or i1 %210, %222
  br i1 %223, label %226, label %224

224:                                              ; preds = %217
  %225 = call zeroext i1 @_ZNK5blink17CSSParserSelector40NeedsImplicitShadowCombinatorForMatchingEv(%"class.blink::CSSParserSelector"* %4) #12
  br i1 %225, label %226, label %238

226:                                              ; preds = %217, %224
  %227 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %229 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %227, i64 0, i32 0, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %228, %230
  br i1 %231, label %232, label %236

232:                                              ; preds = %226
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, %228
  %235 = and i1 %234, %211
  br label %236

236:                                              ; preds = %232, %226
  %237 = phi i1 [ false, %226 ], [ %235, %232 ]
  call void @_ZN5blink17CSSParserSelector18PrependTagSelectorERKNS_13QualifiedNameEb(%"class.blink::CSSParserSelector"* %4, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %9, i1 zeroext %237) #12
  br label %238

238:                                              ; preds = %207, %224, %236
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #12
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #12
  br label %254

254:                                              ; preds = %253, %250, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #12
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #12
  br label %270

270:                                              ; preds = %125, %254, %266, %269
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %271) #12
  br label %286

286:                                              ; preds = %270, %282, %285
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #12
  br label %287

287:                                              ; preds = %31, %286
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser47SplitCompoundAtImplicitShadowCrossingCombinatorENSt3__110unique_ptrINS_17CSSParserSelectorENS1_14default_deleteIS3_EEEE(%"class.blink::CSSParserSelector"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.blink::CSSParserSelector"* %0 to i64
  %3 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %3, align 8
  %5 = icmp eq %"class.blink::CSSParserSelector"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZNK5blink17CSSParserSelector40NeedsImplicitShadowCombinatorForMatchingEv(%"class.blink::CSSParserSelector"* nonnull %4) #12
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = tail call zeroext i1 @_ZNK5blink17CSSParserSelector40NeedsImplicitShadowCombinatorForMatchingEv(%"class.blink::CSSParserSelector"* nonnull %14) #12
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %8
  %11 = phi %"class.blink::CSSParserSelector"** [ %13, %8 ], [ %3, %6 ]
  %12 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %13, align 8
  %15 = icmp eq %"class.blink::CSSParserSelector"* %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %10, %6, %1
  %17 = phi %"class.blink::CSSParserSelector"* [ %0, %1 ], [ %0, %6 ], [ %12, %10 ], [ %12, %8 ]
  %18 = phi %"class.blink::CSSParserSelector"** [ %3, %1 ], [ %3, %6 ], [ %13, %10 ], [ %13, %8 ]
  %19 = icmp eq %"class.blink::CSSParserSelector"* %17, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %18, align 8
  %22 = icmp eq %"class.blink::CSSParserSelector"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %20
  %24 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSParserSelector17ReleaseTagHistoryEv(%"class.blink::CSSParserSelector"* nonnull %17) #12
  %25 = tail call i32 @_ZNK5blink17CSSParserSelector38GetImplicitShadowCombinatorForMatchingEv(%"class.blink::CSSParserSelector"* %24) #12
  %26 = tail call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser47SplitCompoundAtImplicitShadowCrossingCombinatorENSt3__110unique_ptrINS_17CSSParserSelectorENS1_14default_deleteIS3_EEEE(%"class.blink::CSSParserSelector"* %24)
  %27 = ptrtoint %"class.blink::CSSParserSelector"* %26 to i64
  tail call void @_ZN5blink17CSSParserSelector16AppendTagHistoryENS_11CSSSelector12RelationTypeENSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEE(%"class.blink::CSSParserSelector"* %26, i32 %25, %"class.blink::CSSParserSelector"* %0) #12
  br label %28

28:                                               ; preds = %23, %20, %16
  %29 = phi i64 [ %27, %23 ], [ %2, %20 ], [ %2, %16 ]
  %30 = inttoptr i64 %29 to %"class.blink::CSSParserSelector"*
  ret %"class.blink::CSSParserSelector"* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser9ConsumeIdERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* nocapture readonly, %"class.blink::CSSParserTokenRange"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %9 = icmp ult %"class.blink::CSSParserToken"* %6, %8
  %10 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %11 = select i1 %9, %"class.blink::CSSParserToken"* %6, %"class.blink::CSSParserToken"* %10
  %12 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %11, i64 0, i32 3
  %13 = bitcast %union.anon* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %75

16:                                               ; preds = %2
  %17 = tail call noalias i8* @malloc(i64 16) #12
  %18 = bitcast i8* %17 to %"class.blink::CSSParserSelector"*
  tail call void @_ZN5blink17CSSParserSelectorC1Ev(%"class.blink::CSSParserSelector"* %18) #12
  %19 = bitcast i8* %17 to i32**
  %20 = load i32*, i32** %19, align 8
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, -241
  %23 = or i32 %22, 32
  store i32 %23, i32* %20, align 8
  %24 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %28 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %29 = icmp eq %"class.blink::CSSParserToken"* %27, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %27, i64 1
  store %"class.blink::CSSParserToken"* %31, %"class.blink::CSSParserToken"** %5, align 8
  br label %32

32:                                               ; preds = %16, %30
  %33 = phi %"class.blink::CSSParserToken"* [ %27, %30 ], [ %10, %16 ]
  %34 = bitcast %"class.blink::CSSParserToken"* %33 to i32*
  %35 = load i32, i32* %34, align 8, !noalias !17
  %36 = and i32 %35, 262144
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %33, i64 0, i32 2
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !17
  %41 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4, !noalias !17
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = select i1 %37, i64 %43, i64 %44
  %46 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %45, i64* %46, align 8, !alias.scope !17
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %48 = bitcast i8** %47 to i64*
  store i64 %40, i64* %48, align 8, !alias.scope !17
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %42, i32* %49, align 8, !alias.scope !17
  %50 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %4) #12
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %51 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  %52 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %52, i64 0, i32 3
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 1
  %56 = bitcast i8* %17 to %"class.blink::CSSSelector"**
  %57 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %56, align 8
  call void @_ZN5blink11CSSSelector8SetValueERKN3WTF12AtomicStringEb(%"class.blink::CSSSelector"* %57, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, i1 zeroext %55) #12
  %58 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %51, align 8
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %58, i32 2203) #12
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %32
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #12
  br label %74

74:                                               ; preds = %73, %70, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %75

75:                                               ; preds = %2, %74
  %76 = phi %"class.blink::CSSParserSelector"* [ %18, %74 ], [ null, %2 ]
  ret %"class.blink::CSSParserSelector"* %76
}

declare zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser12ConsumeClassERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* nocapture readonly, %"class.blink::CSSParserTokenRange"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %9 = icmp eq %"class.blink::CSSParserToken"* %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %6, i64 1
  store %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"** %5, align 8
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi %"class.blink::CSSParserToken"* [ %6, %2 ], [ %11, %10 ]
  %14 = icmp ult %"class.blink::CSSParserToken"* %13, %8
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %16 = select i1 %14, %"class.blink::CSSParserToken"* %13, %"class.blink::CSSParserToken"* %15
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 63
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %80

21:                                               ; preds = %12
  %22 = tail call noalias i8* @malloc(i64 16) #12
  %23 = bitcast i8* %22 to %"class.blink::CSSParserSelector"*
  tail call void @_ZN5blink17CSSParserSelectorC1Ev(%"class.blink::CSSParserSelector"* %23) #12
  %24 = bitcast i8* %22 to i32**
  %25 = load i32*, i32** %24, align 8
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, -241
  %28 = or i32 %27, 48
  store i32 %28, i32* %25, align 8
  %29 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %30, align 8
  %31 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %33 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %7, align 8
  %34 = icmp eq %"class.blink::CSSParserToken"* %32, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %32, i64 1
  store %"class.blink::CSSParserToken"* %36, %"class.blink::CSSParserToken"** %5, align 8
  br label %37

37:                                               ; preds = %21, %35
  %38 = phi %"class.blink::CSSParserToken"* [ %32, %35 ], [ %15, %21 ]
  %39 = bitcast %"class.blink::CSSParserToken"* %38 to i32*
  %40 = load i32, i32* %39, align 8, !noalias !20
  %41 = and i32 %40, 262144
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %38, i64 0, i32 2
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !20
  %46 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4, !noalias !20
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %50 = select i1 %42, i64 %48, i64 %49
  %51 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %50, i64* %51, align 8, !alias.scope !20
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %53 = bitcast i8** %52 to i64*
  store i64 %45, i64* %53, align 8, !alias.scope !20
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %47, i32* %54, align 8, !alias.scope !20
  %55 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %4) #12
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %56 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  %57 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %57, i64 0, i32 3
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 1
  %61 = bitcast i8* %22 to %"class.blink::CSSSelector"**
  %62 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %61, align 8
  call void @_ZN5blink11CSSSelector8SetValueERKN3WTF12AtomicStringEb(%"class.blink::CSSSelector"* %62, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, i1 zeroext %60) #12
  %63 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %56, align 8
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %63, i32 2203) #12
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %37
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #12
  br label %79

79:                                               ; preds = %78, %75, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %80

80:                                               ; preds = %12, %79
  %81 = phi %"class.blink::CSSParserSelector"* [ %23, %79 ], [ null, %12 ]
  ret %"class.blink::CSSParserSelector"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser16ConsumeAttributeERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* nocapture, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserTokenRange", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.blink::QualifiedName", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"class.blink::CSSParserTokenRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %3, i64 0, i32 1
  %13 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* %1) #12
  %14 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %13, 0
  store %"class.blink::CSSParserToken"* %14, %"class.blink::CSSParserToken"** %11, align 8
  %15 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %13, 1
  store %"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"** %12, align 8
  %16 = icmp ult %"class.blink::CSSParserToken"* %14, %15
  %17 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %18 = select i1 %16, %"class.blink::CSSParserToken"* %14, %"class.blink::CSSParserToken"* %17
  %19 = bitcast %"class.blink::CSSParserToken"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 63
  %22 = icmp eq i32 %21, 17
  br i1 %22, label %23, label %32

23:                                               ; preds = %2, %23
  %24 = phi %"class.blink::CSSParserToken"* [ %25, %23 ], [ %14, %2 ]
  %25 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %24, i64 1
  store %"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"** %11, align 8
  %26 = icmp ult %"class.blink::CSSParserToken"* %25, %15
  %27 = select i1 %26, %"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"* %17
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 63
  %31 = icmp eq i32 %30, 17
  br i1 %31, label %23, label %32

32:                                               ; preds = %23, %2
  %33 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %37 = call zeroext i1 @_ZN5blink17CSSSelectorParser11ConsumeNameERNS_19CSSParserTokenRangeERN3WTF12AtomicStringES5_(%"class.blink::CSSSelectorParser"* undef, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %3, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  br i1 %37, label %38, label %298

38:                                               ; preds = %32
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br i1 %43, label %301, label %44

44:                                               ; preds = %38
  %45 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %46 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %47 = icmp ult %"class.blink::CSSParserToken"* %45, %46
  %48 = select i1 %47, %"class.blink::CSSParserToken"* %45, %"class.blink::CSSParserToken"* %17
  %49 = bitcast %"class.blink::CSSParserToken"* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 63
  %52 = icmp eq i32 %51, 17
  br i1 %52, label %53, label %62

53:                                               ; preds = %44, %53
  %54 = phi %"class.blink::CSSParserToken"* [ %55, %53 ], [ %45, %44 ]
  %55 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %54, i64 1
  store %"class.blink::CSSParserToken"* %55, %"class.blink::CSSParserToken"** %11, align 8
  %56 = icmp ult %"class.blink::CSSParserToken"* %55, %46
  %57 = select i1 %56, %"class.blink::CSSParserToken"* %55, %"class.blink::CSSParserToken"* %17
  %58 = bitcast %"class.blink::CSSParserToken"* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 63
  %61 = icmp eq i32 %60, 17
  br i1 %61, label %53, label %62

62:                                               ; preds = %53, %44
  %63 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  %64 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %64, i64 0, i32 8
  %66 = load i8, i8* %65, align 1, !range !3
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %62
  %69 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %5) #12
  %70 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %71 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %70, i64* %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #12
  br label %87

87:                                               ; preds = %62, %68, %83, %86
  %88 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  %89 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %89, align 8
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %94 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %93, align 8
  %95 = icmp eq %"class.blink::StyleSheetContents"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  %98 = load i8, i8* %97, align 1, !range !3
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %96, %92
  %101 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  br label %121

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %94, i64 0, i32 6
  br label %121

104:                                              ; preds = %87
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  br label %121

110:                                              ; preds = %104
  %111 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %90, %113
  br i1 %114, label %121, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 1
  %117 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %116, align 8
  %118 = icmp eq %"class.blink::StyleSheetContents"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18StyleSheetContents22NamespaceURIFromPrefixERKN3WTF12AtomicStringE(%"class.blink::StyleSheetContents"* nonnull %117, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #12
  br label %121

121:                                              ; preds = %115, %100, %102, %108, %110, %119
  %122 = phi %"class.WTF::AtomicString"* [ %109, %108 ], [ %120, %119 ], [ %101, %100 ], [ %103, %102 ], [ %111, %110 ], [ %39, %115 ]
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %89, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %296, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %145

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #12
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !2

140:                                              ; preds = %131
  call void @llvm.trap() #12
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %296, label %145

145:                                              ; preds = %126, %141
  %146 = bitcast %"class.blink::QualifiedName"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #12
  %147 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %147, align 8
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %150, label %151

150:                                              ; preds = %145
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %7, %"class.WTF::AtomicString"* dereferenceable(8) %39, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::AtomicString"* dereferenceable(8) %39) #12
  br label %152

151:                                              ; preds = %145
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #12
  br label %152

152:                                              ; preds = %151, %150
  %153 = call noalias i8* @malloc(i64 16) #12
  %154 = bitcast i8* %153 to %"class.blink::CSSParserSelector"*
  call void @_ZN5blink17CSSParserSelectorC1Ev(%"class.blink::CSSParserSelector"* %154) #12
  %155 = ptrtoint i8* %153 to i64
  %156 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %157 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %158 = icmp eq %"class.blink::CSSParserToken"* %156, %157
  br i1 %158, label %159, label %168

159:                                              ; preds = %152
  %160 = bitcast i8* %153 to %"class.blink::CSSSelector"**
  %161 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %160, align 8
  call void @_ZN5blink11CSSSelector12SetAttributeERKNS_13QualifiedNameENS0_18AttributeMatchTypeE(%"class.blink::CSSSelector"* %161, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %7, i32 0) #12
  %162 = bitcast i8* %153 to i32**
  %163 = load i32*, i32** %162, align 8
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, -241
  %166 = or i32 %165, 128
  store i32 %166, i32* %163, align 8
  %167 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %63, align 8
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %167, i32 2203) #12
  br label %279

168:                                              ; preds = %152
  %169 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %156, i64 1
  store %"class.blink::CSSParserToken"* %169, %"class.blink::CSSParserToken"** %11, align 8
  %170 = icmp ult %"class.blink::CSSParserToken"* %169, %157
  %171 = select i1 %170, %"class.blink::CSSParserToken"* %169, %"class.blink::CSSParserToken"* %17
  %172 = bitcast %"class.blink::CSSParserToken"* %171 to i32*
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 63
  %175 = icmp eq i32 %174, 17
  br i1 %175, label %176, label %185

176:                                              ; preds = %168, %176
  %177 = phi %"class.blink::CSSParserToken"* [ %178, %176 ], [ %169, %168 ]
  %178 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %177, i64 1
  store %"class.blink::CSSParserToken"* %178, %"class.blink::CSSParserToken"** %11, align 8
  %179 = icmp ult %"class.blink::CSSParserToken"* %178, %157
  %180 = select i1 %179, %"class.blink::CSSParserToken"* %178, %"class.blink::CSSParserToken"* %17
  %181 = bitcast %"class.blink::CSSParserToken"* %180 to i32*
  %182 = load i32, i32* %181, align 8
  %183 = and i32 %182, 63
  %184 = icmp eq i32 %183, 17
  br i1 %184, label %176, label %185

185:                                              ; preds = %176, %168
  %186 = bitcast %"class.blink::CSSParserToken"* %156 to i32*
  %187 = load i32, i32* %186, align 8
  %188 = and i32 %187, 63
  switch i32 %188, label %196 [
    i32 10, label %198
    i32 11, label %189
    i32 12, label %190
    i32 13, label %191
    i32 14, label %192
    i32 6, label %193
  ]

189:                                              ; preds = %185
  br label %198

190:                                              ; preds = %185
  br label %198

191:                                              ; preds = %185
  br label %198

192:                                              ; preds = %185
  br label %198

193:                                              ; preds = %185
  %194 = call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %156) #12
  %195 = icmp eq i16 %194, 61
  br i1 %195, label %198, label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 2
  store i8 1, i8* %197, align 8
  br label %198

198:                                              ; preds = %185, %189, %190, %191, %192, %193, %196
  %199 = phi i32 [ 112, %196 ], [ 176, %192 ], [ 208, %191 ], [ 192, %190 ], [ 144, %189 ], [ 160, %185 ], [ 112, %193 ]
  %200 = bitcast i8* %153 to i32**
  %201 = load i32*, i32** %200, align 8
  %202 = load i32, i32* %201, align 8
  %203 = and i32 %202, -241
  %204 = or i32 %203, %199
  store i32 %204, i32* %201, align 8
  %205 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %206 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %207 = icmp eq %"class.blink::CSSParserToken"* %205, %206
  br i1 %207, label %210, label %208

208:                                              ; preds = %198
  %209 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %205, i64 1
  store %"class.blink::CSSParserToken"* %209, %"class.blink::CSSParserToken"** %11, align 8
  br label %210

210:                                              ; preds = %198, %208
  %211 = phi %"class.blink::CSSParserToken"* [ %209, %208 ], [ %205, %198 ]
  %212 = phi %"class.blink::CSSParserToken"* [ %205, %208 ], [ %17, %198 ]
  %213 = icmp ult %"class.blink::CSSParserToken"* %211, %206
  %214 = select i1 %213, %"class.blink::CSSParserToken"* %211, %"class.blink::CSSParserToken"* %17
  %215 = bitcast %"class.blink::CSSParserToken"* %214 to i32*
  %216 = load i32, i32* %215, align 8
  %217 = and i32 %216, 63
  %218 = icmp eq i32 %217, 17
  br i1 %218, label %219, label %228

219:                                              ; preds = %210, %219
  %220 = phi %"class.blink::CSSParserToken"* [ %221, %219 ], [ %211, %210 ]
  %221 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %220, i64 1
  store %"class.blink::CSSParserToken"* %221, %"class.blink::CSSParserToken"** %11, align 8
  %222 = icmp ult %"class.blink::CSSParserToken"* %221, %206
  %223 = select i1 %222, %"class.blink::CSSParserToken"* %221, %"class.blink::CSSParserToken"* %17
  %224 = bitcast %"class.blink::CSSParserToken"* %223 to i32*
  %225 = load i32, i32* %224, align 8
  %226 = and i32 %225, 63
  %227 = icmp eq i32 %226, 17
  br i1 %227, label %219, label %228

228:                                              ; preds = %219, %210
  %229 = bitcast %"class.blink::CSSParserToken"* %212 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = and i32 %230, 63
  switch i32 %231, label %276 [
    i32 0, label %232
    i32 29, label %232
  ]

232:                                              ; preds = %228, %228
  %233 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #12
  %234 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #12
  %235 = and i32 %230, 262144
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %212, i64 0, i32 2
  %238 = bitcast i8** %237 to i64*
  %239 = load i64, i64* %238, align 8, !noalias !23
  %240 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %212, i64 0, i32 1
  %241 = load i32, i32* %240, align 4, !noalias !23
  %242 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %243 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %244 = select i1 %236, i64 %242, i64 %243
  %245 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %244, i64* %245, align 8, !alias.scope !23
  %246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %247 = bitcast i8** %246 to i64*
  store i64 %239, i64* %247, align 8, !alias.scope !23
  %248 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %241, i32* %248, align 8, !alias.scope !23
  %249 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %9) #12
  %250 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %249, %"class.WTF::StringImpl"** %250, align 8
  %251 = bitcast i8* %153 to %"class.blink::CSSSelector"**
  %252 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %251, align 8
  call void @_ZN5blink11CSSSelector8SetValueERKN3WTF12AtomicStringEb(%"class.blink::CSSSelector"* %252, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, i1 zeroext false) #12
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %268, label %255

255:                                              ; preds = %232
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %264

262:                                              ; preds = %255
  %263 = add i32 %261, -1
  store i32 %263, i32* %260, align 4
  br label %264

264:                                              ; preds = %262, %255
  %265 = phi i32 [ %263, %262 ], [ %261, %255 ]
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %253) #12
  br label %268

268:                                              ; preds = %232, %264, %267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #12
  %269 = call i32 @_ZN5blink17CSSSelectorParser21ConsumeAttributeFlagsERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %3)
  %270 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %251, align 8
  call void @_ZN5blink11CSSSelector12SetAttributeERKNS_13QualifiedNameENS0_18AttributeMatchTypeE(%"class.blink::CSSSelector"* %270, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %7, i32 %269) #12
  %271 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %11, align 8
  %272 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %273 = icmp eq %"class.blink::CSSParserToken"* %271, %272
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %63, align 8
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %275, i32 2203) #12
  br label %279

276:                                              ; preds = %228, %268
  %277 = icmp eq i8* %153, null
  br i1 %277, label %279, label %278

278:                                              ; preds = %276
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %154) #12
  call void @free(i8* nonnull %153) #12
  br label %279

279:                                              ; preds = %274, %159, %278, %276
  %280 = phi i64 [ 0, %276 ], [ 0, %278 ], [ %155, %159 ], [ %155, %274 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #12
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #12
  br label %296

296:                                              ; preds = %121, %141, %279, %292, %295
  %297 = phi i64 [ %280, %279 ], [ %280, %292 ], [ %280, %295 ], [ 0, %141 ], [ 0, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  br label %298

298:                                              ; preds = %296, %32
  %299 = phi i64 [ 0, %32 ], [ %297, %296 ]
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  br label %301

301:                                              ; preds = %298, %38
  %302 = phi %"class.WTF::StringImpl"* [ %300, %298 ], [ %40, %38 ]
  %303 = phi i64 [ %299, %298 ], [ 0, %38 ]
  %304 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %304, label %318, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = and i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %311 = load i32, i32* %310, align 4
  br i1 %309, label %312, label %314

312:                                              ; preds = %305
  %313 = add i32 %311, -1
  store i32 %313, i32* %310, align 4
  br label %314

314:                                              ; preds = %312, %305
  %315 = phi i32 [ %313, %312 ], [ %311, %305 ]
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

317:                                              ; preds = %314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #12
  br label %318

318:                                              ; preds = %301, %314, %317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %318
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #12
  br label %334

334:                                              ; preds = %318, %330, %333
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  %335 = inttoptr i64 %303 to %"class.blink::CSSParserSelector"*
  ret %"class.blink::CSSParserSelector"* %335
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser13ConsumePseudoERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"*, %"class.blink::CSSParserTokenRange"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::CSSParserTokenRange", align 8
  %6 = alloca %"class.blink::CSSSelectorList", align 8
  %7 = alloca %"class.blink::CSSSelectorList", align 8
  %8 = alloca %"class.blink::CSSSelectorList", align 8
  %9 = alloca %"class.blink::CSSSelectorList", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::Vector.274", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.std::__1::unique_ptr.432", align 8
  %16 = alloca %"class.WTF::Vector.444", align 8
  %17 = alloca %"class.WTF::AtomicString", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"struct.std::__1::pair.520", align 4
  %20 = alloca %"class.WTF::AtomicString", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %23 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %25 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %24, align 8
  %26 = icmp eq %"class.blink::CSSParserToken"* %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %23, i64 1
  store %"class.blink::CSSParserToken"* %28, %"class.blink::CSSParserToken"** %22, align 8
  br label %29

29:                                               ; preds = %2, %27
  %30 = phi %"class.blink::CSSParserToken"* [ %23, %2 ], [ %28, %27 ]
  %31 = icmp ult %"class.blink::CSSParserToken"* %30, %25
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %33 = select i1 %31, %"class.blink::CSSParserToken"* %30, %"class.blink::CSSParserToken"* %32
  %34 = bitcast %"class.blink::CSSParserToken"* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 63
  %37 = icmp eq i32 %36, 20
  br i1 %37, label %38, label %42

38:                                               ; preds = %29
  %39 = icmp eq %"class.blink::CSSParserToken"* %30, %25
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %30, i64 1
  store %"class.blink::CSSParserToken"* %41, %"class.blink::CSSParserToken"** %22, align 8
  br label %42

42:                                               ; preds = %40, %38, %29
  %43 = phi %"class.blink::CSSParserToken"* [ %30, %29 ], [ %25, %38 ], [ %41, %40 ]
  %44 = phi i32 [ 1, %29 ], [ 2, %38 ], [ 2, %40 ]
  %45 = icmp ult %"class.blink::CSSParserToken"* %43, %25
  %46 = select i1 %45, %"class.blink::CSSParserToken"* %43, %"class.blink::CSSParserToken"* %32
  %47 = bitcast %"class.blink::CSSParserToken"* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 62
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %844

51:                                               ; preds = %42
  %52 = tail call noalias i8* @malloc(i64 16) #12
  %53 = bitcast i8* %52 to %"class.blink::CSSParserSelector"*
  tail call void @_ZN5blink17CSSParserSelectorC1Ev(%"class.blink::CSSParserSelector"* %53) #12
  %54 = ptrtoint i8* %52 to i64
  %55 = icmp eq i32 %44, 1
  %56 = select i1 %55, i32 64, i32 80
  %57 = bitcast i8* %52 to i32**
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -241
  %61 = or i32 %60, %56
  store i32 %61, i32* %58, align 8
  %62 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %63, align 8
  %64 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = load i32, i32* %47, align 8, !noalias !26
  %66 = and i32 %65, 262144
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %46, i64 0, i32 2
  %69 = bitcast i8** %68 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !26
  %71 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %46, i64 0, i32 1
  %72 = load i32, i32* %71, align 4, !noalias !26
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = select i1 %67, i64 %73, i64 %74
  %76 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %75, i64* %76, align 8, !alias.scope !26
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %78 = bitcast i8** %77 to i64*
  store i64 %70, i64* %78, align 8, !alias.scope !26
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %72, i32* %79, align 8, !alias.scope !26
  %80 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %4) #12
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  %81 = load i32, i32* %47, align 8
  %82 = and i32 %81, 63
  %83 = icmp eq i32 %82, 1
  %84 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 0
  %85 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %85, i64 0, i32 3
  %87 = load i8, i8* %86, align 1
  %88 = bitcast i8* %52 to %"class.blink::CSSSelector"**
  %89 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %88, align 8
  call void @_ZN5blink11CSSSelector16UpdatePseudoTypeERKN3WTF12AtomicStringERKNS_16CSSParserContextEbNS_13CSSParserModeE(%"class.blink::CSSSelector"* %89, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.blink::CSSParserContext"* dereferenceable(176) %85, i1 zeroext %83, i8 zeroext %87) #12
  %90 = load i32*, i32** %57, align 8
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 240
  %93 = icmp eq i32 %92, 80
  br i1 %93, label %94, label %105

94:                                               ; preds = %51
  %95 = lshr i32 %91, 8
  %96 = trunc i32 %95 to i8
  switch i8 %96, label %105 [
    i8 46, label %97
    i8 47, label %97
    i8 48, label %99
  ]

97:                                               ; preds = %94, %94
  %98 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %84, align 8
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %98, i32 2204) #12
  br label %105

99:                                               ; preds = %94
  %100 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %84, align 8
  %101 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %100, i64 0, i32 3
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 5
  br i1 %103, label %105, label %104

104:                                              ; preds = %99
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %100, i32 3066) #12
  br label %105

105:                                              ; preds = %99, %97, %104, %94, %51
  %106 = load i32*, i32** %57, align 8
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 240
  %109 = icmp eq i32 %108, 80
  br i1 %109, label %110, label %114

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 3
  %112 = load i8, i8* %111, align 1, !range !3
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %821

114:                                              ; preds = %110, %105
  %115 = load i32, i32* %47, align 8
  %116 = and i32 %115, 63
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %131

118:                                              ; preds = %114
  %119 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %22, align 8
  %120 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %24, align 8
  %121 = icmp eq %"class.blink::CSSParserToken"* %119, %120
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %119, i64 1
  store %"class.blink::CSSParserToken"* %123, %"class.blink::CSSParserToken"** %22, align 8
  %124 = load i32, i32* %106, align 8
  br label %125

125:                                              ; preds = %118, %122
  %126 = phi i32 [ %107, %118 ], [ %124, %122 ]
  %127 = and i32 %126, 65280
  %128 = icmp eq i32 %127, 0
  %129 = select i1 %128, i64 %54, i64 0
  %130 = select i1 %128, i64 0, i64 %54
  br label %821

131:                                              ; preds = %114
  %132 = bitcast %"class.blink::CSSParserTokenRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #12
  %133 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 0
  %134 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 1
  %135 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* %1) #12
  %136 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %135, 0
  store %"class.blink::CSSParserToken"* %136, %"class.blink::CSSParserToken"** %133, align 8
  %137 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %135, 1
  store %"class.blink::CSSParserToken"* %137, %"class.blink::CSSParserToken"** %134, align 8
  %138 = icmp ult %"class.blink::CSSParserToken"* %136, %137
  %139 = select i1 %138, %"class.blink::CSSParserToken"* %136, %"class.blink::CSSParserToken"* %32
  %140 = bitcast %"class.blink::CSSParserToken"* %139 to i32*
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, 63
  %143 = icmp eq i32 %142, 17
  br i1 %143, label %144, label %153

144:                                              ; preds = %131, %144
  %145 = phi %"class.blink::CSSParserToken"* [ %146, %144 ], [ %136, %131 ]
  %146 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %145, i64 1
  store %"class.blink::CSSParserToken"* %146, %"class.blink::CSSParserToken"** %133, align 8
  %147 = icmp ult %"class.blink::CSSParserToken"* %146, %137
  %148 = select i1 %147, %"class.blink::CSSParserToken"* %146, %"class.blink::CSSParserToken"* %32
  %149 = bitcast %"class.blink::CSSParserToken"* %148 to i32*
  %150 = load i32, i32* %149, align 8
  %151 = and i32 %150, 63
  %152 = icmp eq i32 %151, 17
  br i1 %152, label %144, label %153

153:                                              ; preds = %144, %131
  %154 = phi %"class.blink::CSSParserToken"* [ %136, %131 ], [ %146, %144 ]
  %155 = load i32*, i32** %57, align 8
  %156 = load i32, i32* %155, align 8
  %157 = lshr i32 %156, 8
  %158 = trunc i32 %157 to i8
  switch i8 %158, label %818 [
    i8 109, label %752
    i8 19, label %159
    i8 20, label %197
    i8 95, label %235
    i8 96, label %235
    i8 18, label %235
    i8 90, label %235
    i8 52, label %296
    i8 108, label %336
    i8 14, label %402
    i8 104, label %582
    i8 51, label %653
    i8 10, label %719
    i8 12, label %719
    i8 11, label %719
    i8 13, label %719
  ]

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 3
  %161 = load i8, i8* %160, align 1, !range !3
  store i8 1, i8* %160, align 1
  %162 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 7
  %163 = load i8, i8* %162, align 1, !range !3
  store i8 1, i8* %162, align 1
  %164 = call noalias i8* @malloc(i64 8) #12
  %165 = bitcast i8* %164 to %"class.blink::CSSSelectorList"*
  %166 = bitcast i8* %164 to %"class.blink::CSSSelector"**
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %166, align 8
  %167 = bitcast %"class.blink::CSSSelectorList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #12
  %168 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 4
  %169 = load i8, i8* %168, align 2, !range !3, !noalias !29
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %159
  call void @_ZN5blink17CSSSelectorParser36ConsumeForgivingCompoundSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* nonnull sret %6, %"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5) #12
  br label %173

172:                                              ; preds = %159
  call void @_ZN5blink17CSSSelectorParser35ConsumeForgivingComplexSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* nonnull sret %6, %"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5) #12
  br label %173

173:                                              ; preds = %171, %172
  %174 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %166, align 8
  %175 = icmp eq %"class.blink::CSSSelector"* %174, null
  br i1 %175, label %177, label %176

176:                                              ; preds = %173
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %165) #12
  br label %177

177:                                              ; preds = %176, %173
  %178 = bitcast %"class.blink::CSSSelectorList"* %6 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast i8* %164 to i64*
  store i64 %179, i64* %180, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #12
  %181 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %133, align 8
  %182 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %134, align 8
  %183 = icmp eq %"class.blink::CSSParserToken"* %181, %182
  br i1 %183, label %184, label %185

184:                                              ; preds = %177
  call void @_ZN5blink17CSSParserSelector15SetSelectorListENSt3__110unique_ptrINS_15CSSSelectorListENS1_14default_deleteIS3_EEEE(%"class.blink::CSSParserSelector"* %53, %"class.blink::CSSSelectorList"* %165) #12
  br label %191

185:                                              ; preds = %177
  %186 = icmp eq i8* %164, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %185
  %188 = icmp eq i64 %179, 0
  br i1 %188, label %190, label %189

189:                                              ; preds = %187
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %165) #12
  br label %190

190:                                              ; preds = %189, %187
  call void @free(i8* nonnull %164) #12
  br label %191

191:                                              ; preds = %184, %185, %190
  %192 = phi i64 [ %54, %184 ], [ 0, %185 ], [ 0, %190 ]
  %193 = phi i64 [ 0, %184 ], [ %54, %185 ], [ %54, %190 ]
  %194 = icmp eq i8* %162, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %191
  store i8 %163, i8* %162, align 1
  br label %196

196:                                              ; preds = %191, %195
  store i8 %161, i8* %160, align 1
  br label %818

197:                                              ; preds = %153
  %198 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 3
  %199 = load i8, i8* %198, align 1, !range !3
  store i8 1, i8* %198, align 1
  %200 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 7
  %201 = load i8, i8* %200, align 1, !range !3
  store i8 1, i8* %200, align 1
  %202 = call noalias i8* @malloc(i64 8) #12
  %203 = bitcast i8* %202 to %"class.blink::CSSSelectorList"*
  %204 = bitcast i8* %202 to %"class.blink::CSSSelector"**
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %204, align 8
  %205 = bitcast %"class.blink::CSSSelectorList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #12
  %206 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 4
  %207 = load i8, i8* %206, align 2, !range !3, !noalias !32
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %210, label %209

209:                                              ; preds = %197
  call void @_ZN5blink17CSSSelectorParser36ConsumeForgivingCompoundSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* nonnull sret %7, %"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5) #12
  br label %211

210:                                              ; preds = %197
  call void @_ZN5blink17CSSSelectorParser35ConsumeForgivingComplexSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* nonnull sret %7, %"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5) #12
  br label %211

211:                                              ; preds = %209, %210
  %212 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %204, align 8
  %213 = icmp eq %"class.blink::CSSSelector"* %212, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %211
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %203) #12
  br label %215

215:                                              ; preds = %214, %211
  %216 = bitcast %"class.blink::CSSSelectorList"* %7 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast i8* %202 to i64*
  store i64 %217, i64* %218, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #12
  %219 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %133, align 8
  %220 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %134, align 8
  %221 = icmp eq %"class.blink::CSSParserToken"* %219, %220
  br i1 %221, label %222, label %223

222:                                              ; preds = %215
  call void @_ZN5blink17CSSParserSelector15SetSelectorListENSt3__110unique_ptrINS_15CSSSelectorListENS1_14default_deleteIS3_EEEE(%"class.blink::CSSParserSelector"* %53, %"class.blink::CSSSelectorList"* %203) #12
  br label %229

223:                                              ; preds = %215
  %224 = icmp eq i8* %202, null
  br i1 %224, label %229, label %225

225:                                              ; preds = %223
  %226 = icmp eq i64 %217, 0
  br i1 %226, label %228, label %227

227:                                              ; preds = %225
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %203) #12
  br label %228

228:                                              ; preds = %227, %225
  call void @free(i8* nonnull %202) #12
  br label %229

229:                                              ; preds = %222, %223, %228
  %230 = phi i64 [ %54, %222 ], [ 0, %223 ], [ 0, %228 ]
  %231 = phi i64 [ 0, %222 ], [ %54, %223 ], [ %54, %228 ]
  %232 = icmp eq i8* %200, null
  br i1 %232, label %234, label %233

233:                                              ; preds = %229
  store i8 %201, i8* %200, align 1
  br label %234

234:                                              ; preds = %229, %233
  store i8 %199, i8* %198, align 1
  br label %818

235:                                              ; preds = %153, %153, %153, %153
  %236 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 3
  %237 = load i8, i8* %236, align 1, !range !3
  store i8 1, i8* %236, align 1
  %238 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 4
  %239 = load i8, i8* %238, align 1, !range !3
  store i8 1, i8* %238, align 1
  %240 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 8
  %241 = load i8, i8* %240, align 1, !range !3
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %243, label %248

243:                                              ; preds = %235
  %244 = load i32, i32* %155, align 8
  %245 = and i32 %244, 65280
  %246 = icmp eq i32 %245, 23040
  %247 = zext i1 %246 to i8
  br label %248

248:                                              ; preds = %235, %243
  %249 = phi i8 [ 1, %235 ], [ %247, %243 ]
  store i8 %249, i8* %240, align 1
  %250 = call noalias i8* @malloc(i64 8) #12
  %251 = bitcast i8* %250 to %"class.blink::CSSSelectorList"*
  %252 = bitcast %"class.blink::CSSSelectorList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #12
  call void @_ZN5blink17CSSSelectorParser27ConsumeCompoundSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* nonnull sret %8, %"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5)
  %253 = bitcast %"class.blink::CSSSelectorList"* %8 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast i8* %250 to i64*
  store i64 %254, i64* %255, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #12
  %256 = icmp eq i64 %254, 0
  br i1 %256, label %281, label %257

257:                                              ; preds = %248
  %258 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %133, align 8
  %259 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %134, align 8
  %260 = icmp eq %"class.blink::CSSParserToken"* %258, %259
  br i1 %260, label %261, label %281

261:                                              ; preds = %257
  %262 = inttoptr i64 %254 to %"class.blink::CSSSelector"*
  br label %263

263:                                              ; preds = %261, %263
  %264 = phi %"class.blink::CSSSelector"* [ %269, %263 ], [ %262, %261 ]
  %265 = bitcast %"class.blink::CSSSelector"* %264 to i32*
  %266 = load i32, i32* %265, align 8
  %267 = and i32 %266, 131072
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %264, i64 1
  br i1 %268, label %263, label %270

270:                                              ; preds = %263
  %271 = and i32 %266, 2097152
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %280

273:                                              ; preds = %270
  %274 = load i32*, i32** %57, align 8
  %275 = load i32, i32* %274, align 8
  %276 = lshr i32 %275, 8
  %277 = and i32 %276, 255
  %278 = add nsw i32 %277, -95
  %279 = icmp ult i32 %278, 2
  br i1 %279, label %281, label %280

280:                                              ; preds = %270, %273
  call void @_ZN5blink17CSSParserSelector15SetSelectorListENSt3__110unique_ptrINS_15CSSSelectorListENS1_14default_deleteIS3_EEEE(%"class.blink::CSSParserSelector"* %53, %"class.blink::CSSSelectorList"* %251) #12
  br label %287

281:                                              ; preds = %248, %273, %257
  %282 = icmp eq i8* %250, null
  br i1 %282, label %287, label %283

283:                                              ; preds = %281
  %284 = icmp eq i64 %254, 0
  br i1 %284, label %286, label %285

285:                                              ; preds = %283
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %251) #12
  br label %286

286:                                              ; preds = %285, %283
  call void @free(i8* nonnull %250) #12
  br label %287

287:                                              ; preds = %280, %281, %286
  %288 = phi i64 [ %54, %280 ], [ 0, %281 ], [ 0, %286 ]
  %289 = phi i64 [ 0, %280 ], [ %54, %281 ], [ %54, %286 ]
  %290 = icmp eq i8* %240, null
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  store i8 %241, i8* %240, align 1
  br label %292

292:                                              ; preds = %287, %291
  %293 = icmp eq i8* %238, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %292
  store i8 %239, i8* %238, align 1
  br label %295

295:                                              ; preds = %292, %294
  store i8 %237, i8* %236, align 1
  br label %818

296:                                              ; preds = %153
  %297 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 3
  %298 = load i8, i8* %297, align 1, !range !3
  store i8 1, i8* %297, align 1
  %299 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 7
  %300 = load i8, i8* %299, align 1, !range !3
  store i8 1, i8* %299, align 1
  %301 = call noalias i8* @malloc(i64 8) #12
  %302 = bitcast i8* %301 to %"class.blink::CSSSelectorList"*
  %303 = bitcast i8* %301 to %"class.blink::CSSSelector"**
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %303, align 8
  %304 = bitcast %"class.blink::CSSSelectorList"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #12
  %305 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 4
  %306 = load i8, i8* %305, align 2, !range !3, !noalias !35
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %309, label %308

308:                                              ; preds = %296
  call void @_ZN5blink17CSSSelectorParser27ConsumeCompoundSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* nonnull sret %9, %"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5) #12
  br label %310

309:                                              ; preds = %296
  call void @_ZN5blink17CSSSelectorParser26ConsumeComplexSelectorListERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorList"* nonnull sret %9, %"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5) #12
  br label %310

310:                                              ; preds = %308, %309
  %311 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %303, align 8
  %312 = icmp eq %"class.blink::CSSSelector"* %311, null
  br i1 %312, label %314, label %313

313:                                              ; preds = %310
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %302) #12
  br label %314

314:                                              ; preds = %313, %310
  %315 = bitcast %"class.blink::CSSSelectorList"* %9 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = bitcast i8* %301 to i64*
  store i64 %316, i64* %317, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #12
  %318 = icmp eq i64 %316, 0
  br i1 %318, label %324, label %319

319:                                              ; preds = %314
  %320 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %133, align 8
  %321 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %134, align 8
  %322 = icmp eq %"class.blink::CSSParserToken"* %320, %321
  br i1 %322, label %323, label %324

323:                                              ; preds = %319
  call void @_ZN5blink17CSSParserSelector15SetSelectorListENSt3__110unique_ptrINS_15CSSSelectorListENS1_14default_deleteIS3_EEEE(%"class.blink::CSSParserSelector"* %53, %"class.blink::CSSSelectorList"* %302) #12
  br label %330

324:                                              ; preds = %314, %319
  %325 = icmp eq i8* %301, null
  br i1 %325, label %330, label %326

326:                                              ; preds = %324
  %327 = icmp eq i64 %316, 0
  br i1 %327, label %329, label %328

328:                                              ; preds = %326
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %302) #12
  br label %329

329:                                              ; preds = %328, %326
  call void @free(i8* nonnull %301) #12
  br label %330

330:                                              ; preds = %323, %324, %329
  %331 = phi i64 [ %54, %323 ], [ 0, %324 ], [ 0, %329 ]
  %332 = phi i64 [ 0, %323 ], [ %54, %324 ], [ %54, %329 ]
  %333 = icmp eq i8* %299, null
  br i1 %333, label %335, label %334

334:                                              ; preds = %330
  store i8 %300, i8* %299, align 1
  br label %335

335:                                              ; preds = %330, %334
  store i8 %298, i8* %297, align 1
  br label %818

336:                                              ; preds = %153
  %337 = icmp eq %"class.blink::CSSParserToken"* %154, %137
  br i1 %337, label %340, label %338

338:                                              ; preds = %336
  %339 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %154, i64 1
  store %"class.blink::CSSParserToken"* %339, %"class.blink::CSSParserToken"** %133, align 8
  br label %340

340:                                              ; preds = %336, %338
  %341 = phi %"class.blink::CSSParserToken"* [ %339, %338 ], [ %137, %336 ]
  %342 = phi %"class.blink::CSSParserToken"* [ %154, %338 ], [ %32, %336 ]
  %343 = icmp ult %"class.blink::CSSParserToken"* %341, %137
  %344 = select i1 %343, %"class.blink::CSSParserToken"* %341, %"class.blink::CSSParserToken"* %32
  %345 = bitcast %"class.blink::CSSParserToken"* %344 to i32*
  %346 = load i32, i32* %345, align 8
  %347 = and i32 %346, 63
  %348 = icmp eq i32 %347, 17
  br i1 %348, label %349, label %358

349:                                              ; preds = %340, %349
  %350 = phi %"class.blink::CSSParserToken"* [ %351, %349 ], [ %341, %340 ]
  %351 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %350, i64 1
  store %"class.blink::CSSParserToken"* %351, %"class.blink::CSSParserToken"** %133, align 8
  %352 = icmp ult %"class.blink::CSSParserToken"* %351, %137
  %353 = select i1 %352, %"class.blink::CSSParserToken"* %351, %"class.blink::CSSParserToken"* %32
  %354 = bitcast %"class.blink::CSSParserToken"* %353 to i32*
  %355 = load i32, i32* %354, align 8
  %356 = and i32 %355, 63
  %357 = icmp eq i32 %356, 17
  br i1 %357, label %349, label %358

358:                                              ; preds = %349, %340
  %359 = phi %"class.blink::CSSParserToken"* [ %341, %340 ], [ %351, %349 ]
  %360 = bitcast %"class.blink::CSSParserToken"* %342 to i32*
  %361 = load i32, i32* %360, align 8
  %362 = and i32 %361, 63
  %363 = icmp eq i32 %362, 0
  %364 = icmp eq %"class.blink::CSSParserToken"* %359, %137
  %365 = and i1 %363, %364
  br i1 %365, label %366, label %818

366:                                              ; preds = %358
  %367 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %367) #12
  %368 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #12
  %369 = and i32 %361, 262144
  %370 = icmp eq i32 %369, 0
  %371 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %342, i64 0, i32 2
  %372 = bitcast i8** %371 to i64*
  %373 = load i64, i64* %372, align 8, !noalias !38
  %374 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %342, i64 0, i32 1
  %375 = load i32, i32* %374, align 4, !noalias !38
  %376 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %377 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %378 = select i1 %370, i64 %376, i64 %377
  %379 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %378, i64* %379, align 8, !alias.scope !38
  %380 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %381 = bitcast i8** %380 to i64*
  store i64 %373, i64* %381, align 8, !alias.scope !38
  %382 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %375, i32* %382, align 8, !alias.scope !38
  %383 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %11) #12
  %384 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %383, %"class.WTF::StringImpl"** %384, align 8
  %385 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %88, align 8
  call void @_ZN5blink11CSSSelector11SetArgumentERKN3WTF12AtomicStringE(%"class.blink::CSSSelector"* %385, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #12
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %384, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %401, label %388

388:                                              ; preds = %366
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 0
  %394 = load i32, i32* %393, align 4
  br i1 %392, label %395, label %397

395:                                              ; preds = %388
  %396 = add i32 %394, -1
  store i32 %396, i32* %393, align 4
  br label %397

397:                                              ; preds = %395, %388
  %398 = phi i32 [ %396, %395 ], [ %394, %388 ]
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %397
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %386) #12
  br label %401

401:                                              ; preds = %366, %397, %400
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %367) #12
  br label %818

402:                                              ; preds = %153
  %403 = bitcast %"class.WTF::Vector.274"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %403) #12
  %404 = getelementptr inbounds %"class.WTF::Vector.274", %"class.WTF::Vector.274"* %12, i64 0, i32 0, i32 0, i32 0
  %405 = getelementptr inbounds %"class.WTF::Vector.274", %"class.WTF::Vector.274"* %12, i64 0, i32 0, i32 0, i32 1
  %406 = getelementptr inbounds %"class.WTF::Vector.274", %"class.WTF::Vector.274"* %12, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %403, i8 0, i64 16, i1 false) #12
  %407 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  %408 = bitcast %"class.WTF::StringView"* %14 to i8*
  %409 = bitcast %"class.WTF::StringView"* %14 to i64*
  %410 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %411 = bitcast i8** %410 to i64*
  %412 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  %413 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  br label %414

414:                                              ; preds = %482, %402
  %415 = phi %"class.blink::CSSParserToken"* [ %484, %482 ], [ %137, %402 ]
  %416 = phi %"class.blink::CSSParserToken"* [ %483, %482 ], [ %154, %402 ]
  %417 = icmp eq %"class.blink::CSSParserToken"* %416, %415
  br i1 %417, label %420, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %416, i64 1
  store %"class.blink::CSSParserToken"* %419, %"class.blink::CSSParserToken"** %133, align 8
  br label %420

420:                                              ; preds = %414, %418
  %421 = phi %"class.blink::CSSParserToken"* [ %419, %418 ], [ %415, %414 ]
  %422 = phi %"class.blink::CSSParserToken"* [ %416, %418 ], [ %32, %414 ]
  %423 = icmp ult %"class.blink::CSSParserToken"* %421, %415
  %424 = select i1 %423, %"class.blink::CSSParserToken"* %421, %"class.blink::CSSParserToken"* %32
  %425 = bitcast %"class.blink::CSSParserToken"* %424 to i32*
  %426 = load i32, i32* %425, align 8
  %427 = and i32 %426, 63
  %428 = icmp eq i32 %427, 17
  br i1 %428, label %429, label %438

429:                                              ; preds = %420, %429
  %430 = phi %"class.blink::CSSParserToken"* [ %431, %429 ], [ %421, %420 ]
  %431 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %430, i64 1
  store %"class.blink::CSSParserToken"* %431, %"class.blink::CSSParserToken"** %133, align 8
  %432 = icmp ult %"class.blink::CSSParserToken"* %431, %415
  %433 = select i1 %432, %"class.blink::CSSParserToken"* %431, %"class.blink::CSSParserToken"* %32
  %434 = bitcast %"class.blink::CSSParserToken"* %433 to i32*
  %435 = load i32, i32* %434, align 8
  %436 = and i32 %435, 63
  %437 = icmp eq i32 %436, 17
  br i1 %437, label %429, label %438

438:                                              ; preds = %429, %420
  %439 = bitcast %"class.blink::CSSParserToken"* %422 to i32*
  %440 = load i32, i32* %439, align 8
  %441 = and i32 %440, 63
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %543

443:                                              ; preds = %438
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %407) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %408) #12
  %444 = and i32 %440, 262144
  %445 = icmp eq i32 %444, 0
  %446 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %422, i64 0, i32 2
  %447 = bitcast i8** %446 to i64*
  %448 = load i64, i64* %447, align 8, !noalias !41
  %449 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %422, i64 0, i32 1
  %450 = load i32, i32* %449, align 4, !noalias !41
  %451 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %452 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %453 = select i1 %445, i64 %451, i64 %452
  store i64 %453, i64* %409, align 8, !alias.scope !41
  store i64 %448, i64* %411, align 8, !alias.scope !41
  store i32 %450, i32* %412, align 8, !alias.scope !41
  %454 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %14) #12
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %413, align 8
  %455 = load i32, i32* %406, align 4
  %456 = load i32, i32* %405, align 8
  %457 = icmp eq i32 %455, %456
  br i1 %457, label %466, label %458, !prof !2

458:                                              ; preds = %443
  %459 = ptrtoint %"class.WTF::StringImpl"* %454 to i64
  %460 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %404, align 8
  %461 = zext i32 %455 to i64
  %462 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %460, i64 %461
  %463 = bitcast %"class.WTF::AtomicString"* %462 to i64*
  store i64 %459, i64* %463, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %413, align 8
  %464 = load i32, i32* %406, align 4
  %465 = add i32 %464, 1
  store i32 %465, i32* %406, align 4
  br label %482

466:                                              ; preds = %443
  call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.274"* nonnull %12, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13) #12
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %413, align 8
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %482, label %469

469:                                              ; preds = %466
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = load atomic i32, i32* %470 monotonic, align 4
  %472 = and i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 0
  %475 = load i32, i32* %474, align 4
  br i1 %473, label %476, label %478

476:                                              ; preds = %469
  %477 = add i32 %475, -1
  store i32 %477, i32* %474, align 4
  br label %478

478:                                              ; preds = %476, %469
  %479 = phi i32 [ %477, %476 ], [ %475, %469 ]
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %467) #12
  br label %482

482:                                              ; preds = %458, %466, %478, %481
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %408) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %407) #12
  %483 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %133, align 8
  %484 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %134, align 8
  %485 = icmp eq %"class.blink::CSSParserToken"* %483, %484
  br i1 %485, label %486, label %414

486:                                              ; preds = %482
  %487 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %488 = bitcast i8* %487 to %"class.WTF::Vector.274"*
  %489 = load i32, i32* %405, align 8
  %490 = bitcast i8* %487 to %"class.WTF::AtomicString"**
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %490, align 8
  %491 = getelementptr inbounds i8, i8* %487, i64 8
  %492 = bitcast i8* %491 to i32*
  store i32 0, i32* %492, align 8
  %493 = icmp eq i32 %489, 0
  br i1 %493, label %503, label %494

494:                                              ; preds = %486
  %495 = zext i32 %489 to i64
  %496 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %495) #12
  %497 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %496, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #12
  %498 = ptrtoint i8* %497 to i64
  %499 = bitcast i8* %487 to i64*
  store atomic i64 %498, i64* %499 monotonic, align 8
  %500 = lshr i64 %496, 3
  %501 = trunc i64 %500 to i32
  store i32 %501, i32* %492, align 8
  %502 = bitcast i8* %497 to %"class.WTF::AtomicString"*
  br label %503

503:                                              ; preds = %494, %486
  %504 = phi %"class.WTF::AtomicString"* [ null, %486 ], [ %502, %494 ]
  %505 = load i32, i32* %406, align 4
  %506 = getelementptr inbounds i8, i8* %487, i64 12
  %507 = bitcast i8* %506 to i32*
  store i32 %505, i32* %507, align 4
  %508 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %404, align 8
  %509 = load i32, i32* %406, align 4
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %508, i64 %510
  %512 = icmp eq i32 %509, 0
  br i1 %512, label %541, label %513

513:                                              ; preds = %503, %537
  %514 = phi %"class.WTF::AtomicString"* [ %538, %537 ], [ %504, %503 ]
  %515 = phi %"class.WTF::AtomicString"* [ %539, %537 ], [ %508, %503 ]
  %516 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %515, i64 0, i32 0, i32 0, i32 0
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %518 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %514, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %517, %"class.WTF::StringImpl"** %518, align 8
  %519 = icmp eq %"class.WTF::StringImpl"* %517, null
  br i1 %519, label %537, label %520

520:                                              ; preds = %513
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %537

525:                                              ; preds = %520
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 0
  %527 = load i32, i32* %526, align 4
  %528 = zext i32 %527 to i33
  %529 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %528, i33 1) #12
  %530 = extractvalue { i33, i1 } %529, 1
  %531 = extractvalue { i33, i1 } %529, 0
  %532 = icmp slt i33 %531, 0
  %533 = or i1 %530, %532
  br i1 %533, label %534, label %535, !prof !2

534:                                              ; preds = %525
  call void @llvm.trap() #12
  unreachable

535:                                              ; preds = %525
  %536 = trunc i33 %531 to i32
  store i32 %536, i32* %526, align 4
  br label %537

537:                                              ; preds = %535, %520, %513
  %538 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %514, i64 1
  %539 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %515, i64 1
  %540 = icmp eq %"class.WTF::AtomicString"* %539, %511
  br i1 %540, label %541, label %513

541:                                              ; preds = %537, %503
  %542 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %88, align 8
  call void @_ZN5blink11CSSSelector12SetPartNamesENSt3__110unique_ptrIN3WTF6VectorINS3_12AtomicStringELj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS7_EEEE(%"class.blink::CSSSelector"* %542, %"class.WTF::Vector.274"* %488) #12
  br label %543

543:                                              ; preds = %438, %541
  %544 = phi i64 [ 0, %541 ], [ %54, %438 ]
  %545 = phi i64 [ %54, %541 ], [ 0, %438 ]
  %546 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %404, align 8
  %547 = icmp eq %"class.WTF::AtomicString"* %546, null
  br i1 %547, label %581, label %548, !prof !4

548:                                              ; preds = %543
  %549 = bitcast %"class.WTF::AtomicString"* %546 to i8*
  %550 = load i32, i32* %406, align 4
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %579, label %552, !prof !2

552:                                              ; preds = %548
  %553 = zext i32 %550 to i64
  %554 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %546, i64 %553
  br label %555

555:                                              ; preds = %573, %552
  %556 = phi %"class.WTF::AtomicString"* [ %574, %573 ], [ %546, %552 ]
  %557 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %556, i64 0, i32 0, i32 0, i32 0
  %558 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %557, align 8
  %559 = icmp eq %"class.WTF::StringImpl"* %558, null
  br i1 %559, label %573, label %560

560:                                              ; preds = %555
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %562 = load atomic i32, i32* %561 monotonic, align 4
  %563 = and i32 %562, 2
  %564 = icmp eq i32 %563, 0
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 0
  %566 = load i32, i32* %565, align 4
  br i1 %564, label %567, label %569

567:                                              ; preds = %560
  %568 = add i32 %566, -1
  store i32 %568, i32* %565, align 4
  br label %569

569:                                              ; preds = %567, %560
  %570 = phi i32 [ %568, %567 ], [ %566, %560 ]
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %572, label %573

572:                                              ; preds = %569
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %558) #12
  br label %573

573:                                              ; preds = %572, %569, %555
  %574 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %556, i64 1
  %575 = icmp eq %"class.WTF::AtomicString"* %574, %554
  br i1 %575, label %576, label %555

576:                                              ; preds = %573
  store i32 0, i32* %406, align 4
  %577 = bitcast %"class.WTF::Vector.274"* %12 to i8**
  %578 = load i8*, i8** %577, align 8
  br label %579

579:                                              ; preds = %576, %548
  %580 = phi i8* [ %578, %576 ], [ %549, %548 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %580) #12
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %404, align 8
  br label %581

581:                                              ; preds = %543, %579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %403) #12
  br label %818

582:                                              ; preds = %153
  %583 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 3
  %584 = load i8, i8* %583, align 1, !range !3
  store i8 1, i8* %583, align 1
  %585 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 4
  %586 = load i8, i8* %585, align 1, !range !3
  store i8 1, i8* %585, align 1
  %587 = bitcast %"class.std::__1::unique_ptr.432"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587) #12
  %588 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %15, i64 0, i32 0, i32 0, i32 0
  %589 = call %"class.blink::CSSParserSelector"* @_ZN5blink17CSSSelectorParser23ConsumeCompoundSelectorERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* %0, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5)
  store %"class.blink::CSSParserSelector"* %589, %"class.blink::CSSParserSelector"** %588, align 8
  %590 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %133, align 8
  %591 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %134, align 8
  %592 = icmp ult %"class.blink::CSSParserToken"* %590, %591
  %593 = select i1 %592, %"class.blink::CSSParserToken"* %590, %"class.blink::CSSParserToken"* %32
  %594 = bitcast %"class.blink::CSSParserToken"* %593 to i32*
  %595 = load i32, i32* %594, align 8
  %596 = and i32 %595, 63
  %597 = icmp eq i32 %596, 17
  br i1 %597, label %598, label %607

598:                                              ; preds = %582, %598
  %599 = phi %"class.blink::CSSParserToken"* [ %600, %598 ], [ %590, %582 ]
  %600 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %599, i64 1
  store %"class.blink::CSSParserToken"* %600, %"class.blink::CSSParserToken"** %133, align 8
  %601 = icmp ult %"class.blink::CSSParserToken"* %600, %591
  %602 = select i1 %601, %"class.blink::CSSParserToken"* %600, %"class.blink::CSSParserToken"* %32
  %603 = bitcast %"class.blink::CSSParserToken"* %602 to i32*
  %604 = load i32, i32* %603, align 8
  %605 = and i32 %604, 63
  %606 = icmp eq i32 %605, 17
  br i1 %606, label %598, label %607

607:                                              ; preds = %598, %582
  %608 = phi %"class.blink::CSSParserToken"* [ %590, %582 ], [ %600, %598 ]
  %609 = icmp ne %"class.blink::CSSParserSelector"* %589, null
  %610 = icmp eq %"class.blink::CSSParserToken"* %608, %591
  %611 = and i1 %609, %610
  br i1 %611, label %612, label %642

612:                                              ; preds = %607
  %613 = bitcast %"class.WTF::Vector.444"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %613) #12
  %614 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %16, i64 0, i32 0, i32 0, i32 0
  %615 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %16, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %613, i8 0, i64 16, i1 false) #12
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"* nonnull %16, %"class.std::__1::unique_ptr.432"* nonnull dereferenceable(8) %15) #12
  call void @_ZN5blink17CSSParserSelector19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSParserSelector"* %53, %"class.WTF::Vector.444"* nonnull dereferenceable(16) %16) #12
  %616 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %614, align 8
  %617 = icmp eq %"class.std::__1::unique_ptr.432"* %616, null
  br i1 %617, label %640, label %618, !prof !4

618:                                              ; preds = %612
  %619 = bitcast %"class.std::__1::unique_ptr.432"* %616 to i8*
  %620 = load i32, i32* %615, align 4
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %638, label %622, !prof !2

622:                                              ; preds = %618
  %623 = zext i32 %620 to i64
  %624 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %616, i64 %623
  br label %625

625:                                              ; preds = %632, %622
  %626 = phi %"class.std::__1::unique_ptr.432"* [ %633, %632 ], [ %616, %622 ]
  %627 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %626, i64 0, i32 0, i32 0, i32 0
  %628 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %627, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %627, align 8
  %629 = icmp eq %"class.blink::CSSParserSelector"* %628, null
  br i1 %629, label %632, label %630

630:                                              ; preds = %625
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %628) #12
  %631 = bitcast %"class.blink::CSSParserSelector"* %628 to i8*
  call void @free(i8* %631) #12
  br label %632

632:                                              ; preds = %630, %625
  %633 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %626, i64 1
  %634 = icmp eq %"class.std::__1::unique_ptr.432"* %633, %624
  br i1 %634, label %635, label %625

635:                                              ; preds = %632
  store i32 0, i32* %615, align 4
  %636 = bitcast %"class.WTF::Vector.444"* %16 to i8**
  %637 = load i8*, i8** %636, align 8
  br label %638

638:                                              ; preds = %635, %618
  %639 = phi i8* [ %637, %635 ], [ %619, %618 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %639) #12
  store %"class.std::__1::unique_ptr.432"* null, %"class.std::__1::unique_ptr.432"** %614, align 8
  br label %640

640:                                              ; preds = %612, %638
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %613) #12
  %641 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %588, align 8
  br label %642

642:                                              ; preds = %607, %640
  %643 = phi %"class.blink::CSSParserSelector"* [ %641, %640 ], [ %589, %607 ]
  %644 = phi i64 [ 0, %640 ], [ %54, %607 ]
  %645 = phi i64 [ %54, %640 ], [ 0, %607 ]
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %588, align 8
  %646 = icmp eq %"class.blink::CSSParserSelector"* %643, null
  br i1 %646, label %649, label %647

647:                                              ; preds = %642
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %643) #12
  %648 = bitcast %"class.blink::CSSParserSelector"* %643 to i8*
  call void @free(i8* %648) #12
  br label %649

649:                                              ; preds = %642, %647
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #12
  %650 = icmp eq i8* %585, null
  br i1 %650, label %652, label %651

651:                                              ; preds = %649
  store i8 %586, i8* %585, align 1
  br label %652

652:                                              ; preds = %649, %651
  store i8 %584, i8* %583, align 1
  br label %818

653:                                              ; preds = %153
  %654 = icmp eq %"class.blink::CSSParserToken"* %154, %137
  br i1 %654, label %657, label %655

655:                                              ; preds = %653
  %656 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %154, i64 1
  store %"class.blink::CSSParserToken"* %656, %"class.blink::CSSParserToken"** %133, align 8
  br label %657

657:                                              ; preds = %653, %655
  %658 = phi %"class.blink::CSSParserToken"* [ %656, %655 ], [ %137, %653 ]
  %659 = phi %"class.blink::CSSParserToken"* [ %154, %655 ], [ %32, %653 ]
  %660 = icmp ult %"class.blink::CSSParserToken"* %658, %137
  %661 = select i1 %660, %"class.blink::CSSParserToken"* %658, %"class.blink::CSSParserToken"* %32
  %662 = bitcast %"class.blink::CSSParserToken"* %661 to i32*
  %663 = load i32, i32* %662, align 8
  %664 = and i32 %663, 63
  %665 = icmp eq i32 %664, 17
  br i1 %665, label %666, label %675

666:                                              ; preds = %657, %666
  %667 = phi %"class.blink::CSSParserToken"* [ %668, %666 ], [ %658, %657 ]
  %668 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %667, i64 1
  store %"class.blink::CSSParserToken"* %668, %"class.blink::CSSParserToken"** %133, align 8
  %669 = icmp ult %"class.blink::CSSParserToken"* %668, %137
  %670 = select i1 %669, %"class.blink::CSSParserToken"* %668, %"class.blink::CSSParserToken"* %32
  %671 = bitcast %"class.blink::CSSParserToken"* %670 to i32*
  %672 = load i32, i32* %671, align 8
  %673 = and i32 %672, 63
  %674 = icmp eq i32 %673, 17
  br i1 %674, label %666, label %675

675:                                              ; preds = %666, %657
  %676 = phi %"class.blink::CSSParserToken"* [ %658, %657 ], [ %668, %666 ]
  %677 = bitcast %"class.blink::CSSParserToken"* %659 to i32*
  %678 = load i32, i32* %677, align 8
  %679 = and i32 %678, 63
  %680 = icmp eq i32 %679, 0
  %681 = icmp eq %"class.blink::CSSParserToken"* %676, %137
  %682 = and i1 %680, %681
  br i1 %682, label %683, label %818

683:                                              ; preds = %675
  %684 = bitcast %"class.WTF::AtomicString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %684) #12
  %685 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %685) #12
  %686 = and i32 %678, 262144
  %687 = icmp eq i32 %686, 0
  %688 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %659, i64 0, i32 2
  %689 = bitcast i8** %688 to i64*
  %690 = load i64, i64* %689, align 8, !noalias !44
  %691 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %659, i64 0, i32 1
  %692 = load i32, i32* %691, align 4, !noalias !44
  %693 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %694 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %695 = select i1 %687, i64 %693, i64 %694
  %696 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %695, i64* %696, align 8, !alias.scope !44
  %697 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %698 = bitcast i8** %697 to i64*
  store i64 %690, i64* %698, align 8, !alias.scope !44
  %699 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %692, i32* %699, align 8, !alias.scope !44
  %700 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %18) #12
  %701 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %700, %"class.WTF::StringImpl"** %701, align 8
  %702 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %88, align 8
  call void @_ZN5blink11CSSSelector11SetArgumentERKN3WTF12AtomicStringE(%"class.blink::CSSSelector"* %702, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %17) #12
  %703 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %701, align 8
  %704 = icmp eq %"class.WTF::StringImpl"* %703, null
  br i1 %704, label %718, label %705

705:                                              ; preds = %683
  %706 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %703, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %707 = load atomic i32, i32* %706 monotonic, align 4
  %708 = and i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %703, i64 0, i32 0
  %711 = load i32, i32* %710, align 4
  br i1 %709, label %712, label %714

712:                                              ; preds = %705
  %713 = add i32 %711, -1
  store i32 %713, i32* %710, align 4
  br label %714

714:                                              ; preds = %712, %705
  %715 = phi i32 [ %713, %712 ], [ %711, %705 ]
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %717, label %718

717:                                              ; preds = %714
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %703) #12
  br label %718

718:                                              ; preds = %683, %714, %717
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %685) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %684) #12
  br label %818

719:                                              ; preds = %153, %153, %153, %153
  %720 = bitcast %"struct.std::__1::pair.520"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %720) #12
  %721 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %19, i64 0, i32 0
  %722 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %19, i64 0, i32 1
  store i32 0, i32* %721, align 4
  store i32 0, i32* %722, align 4
  %723 = call zeroext i1 @_ZN5blink17CSSSelectorParser14ConsumeANPlusBERNS_19CSSParserTokenRangeERNSt3__14pairIiiEE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %5, %"struct.std::__1::pair.520"* nonnull dereferenceable(8) %19)
  br i1 %723, label %724, label %749

724:                                              ; preds = %719
  %725 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %133, align 8
  %726 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %134, align 8
  %727 = icmp ult %"class.blink::CSSParserToken"* %725, %726
  %728 = select i1 %727, %"class.blink::CSSParserToken"* %725, %"class.blink::CSSParserToken"* %32
  %729 = bitcast %"class.blink::CSSParserToken"* %728 to i32*
  %730 = load i32, i32* %729, align 8
  %731 = and i32 %730, 63
  %732 = icmp eq i32 %731, 17
  br i1 %732, label %733, label %742

733:                                              ; preds = %724, %733
  %734 = phi %"class.blink::CSSParserToken"* [ %735, %733 ], [ %725, %724 ]
  %735 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %734, i64 1
  store %"class.blink::CSSParserToken"* %735, %"class.blink::CSSParserToken"** %133, align 8
  %736 = icmp ult %"class.blink::CSSParserToken"* %735, %726
  %737 = select i1 %736, %"class.blink::CSSParserToken"* %735, %"class.blink::CSSParserToken"* %32
  %738 = bitcast %"class.blink::CSSParserToken"* %737 to i32*
  %739 = load i32, i32* %738, align 8
  %740 = and i32 %739, 63
  %741 = icmp eq i32 %740, 17
  br i1 %741, label %733, label %742

742:                                              ; preds = %733, %724
  %743 = phi %"class.blink::CSSParserToken"* [ %725, %724 ], [ %735, %733 ]
  %744 = icmp eq %"class.blink::CSSParserToken"* %743, %726
  br i1 %744, label %745, label %749

745:                                              ; preds = %742
  %746 = load i32, i32* %721, align 4
  %747 = load i32, i32* %722, align 4
  %748 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %88, align 8
  call void @_ZN5blink11CSSSelector6SetNthEii(%"class.blink::CSSSelector"* %748, i32 %746, i32 %747) #12
  br label %749

749:                                              ; preds = %742, %719, %745
  %750 = phi i64 [ 0, %745 ], [ %54, %719 ], [ %54, %742 ]
  %751 = phi i64 [ %54, %745 ], [ 0, %719 ], [ 0, %742 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %720) #12
  br label %818

752:                                              ; preds = %153
  %753 = icmp eq %"class.blink::CSSParserToken"* %154, %137
  br i1 %753, label %756, label %754

754:                                              ; preds = %752
  %755 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %154, i64 1
  store %"class.blink::CSSParserToken"* %755, %"class.blink::CSSParserToken"** %133, align 8
  br label %756

756:                                              ; preds = %752, %754
  %757 = phi %"class.blink::CSSParserToken"* [ %755, %754 ], [ %137, %752 ]
  %758 = phi %"class.blink::CSSParserToken"* [ %154, %754 ], [ %32, %752 ]
  %759 = icmp ult %"class.blink::CSSParserToken"* %757, %137
  %760 = select i1 %759, %"class.blink::CSSParserToken"* %757, %"class.blink::CSSParserToken"* %32
  %761 = bitcast %"class.blink::CSSParserToken"* %760 to i32*
  %762 = load i32, i32* %761, align 8
  %763 = and i32 %762, 63
  %764 = icmp eq i32 %763, 17
  br i1 %764, label %765, label %774

765:                                              ; preds = %756, %765
  %766 = phi %"class.blink::CSSParserToken"* [ %767, %765 ], [ %757, %756 ]
  %767 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %766, i64 1
  store %"class.blink::CSSParserToken"* %767, %"class.blink::CSSParserToken"** %133, align 8
  %768 = icmp ult %"class.blink::CSSParserToken"* %767, %137
  %769 = select i1 %768, %"class.blink::CSSParserToken"* %767, %"class.blink::CSSParserToken"* %32
  %770 = bitcast %"class.blink::CSSParserToken"* %769 to i32*
  %771 = load i32, i32* %770, align 8
  %772 = and i32 %771, 63
  %773 = icmp eq i32 %772, 17
  br i1 %773, label %765, label %774

774:                                              ; preds = %765, %756
  %775 = phi %"class.blink::CSSParserToken"* [ %757, %756 ], [ %767, %765 ]
  %776 = bitcast %"class.blink::CSSParserToken"* %758 to i32*
  %777 = load i32, i32* %776, align 8
  %778 = and i32 %777, 63
  %779 = icmp eq i32 %778, 0
  %780 = icmp eq %"class.blink::CSSParserToken"* %775, %137
  %781 = and i1 %779, %780
  br i1 %781, label %782, label %818

782:                                              ; preds = %774
  %783 = bitcast %"class.WTF::AtomicString"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %783) #12
  %784 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %784) #12
  %785 = and i32 %777, 262144
  %786 = icmp eq i32 %785, 0
  %787 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %758, i64 0, i32 2
  %788 = bitcast i8** %787 to i64*
  %789 = load i64, i64* %788, align 8, !noalias !47
  %790 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %758, i64 0, i32 1
  %791 = load i32, i32* %790, align 4, !noalias !47
  %792 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %793 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %794 = select i1 %786, i64 %792, i64 %793
  %795 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %794, i64* %795, align 8, !alias.scope !47
  %796 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %797 = bitcast i8** %796 to i64*
  store i64 %789, i64* %797, align 8, !alias.scope !47
  %798 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 %791, i32* %798, align 8, !alias.scope !47
  %799 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %21) #12
  %800 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %799, %"class.WTF::StringImpl"** %800, align 8
  %801 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %88, align 8
  call void @_ZN5blink11CSSSelector11SetArgumentERKN3WTF12AtomicStringE(%"class.blink::CSSSelector"* %801, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %20) #12
  %802 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %800, align 8
  %803 = icmp eq %"class.WTF::StringImpl"* %802, null
  br i1 %803, label %817, label %804

804:                                              ; preds = %782
  %805 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %802, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %806 = load atomic i32, i32* %805 monotonic, align 4
  %807 = and i32 %806, 2
  %808 = icmp eq i32 %807, 0
  %809 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %802, i64 0, i32 0
  %810 = load i32, i32* %809, align 4
  br i1 %808, label %811, label %813

811:                                              ; preds = %804
  %812 = add i32 %810, -1
  store i32 %812, i32* %809, align 4
  br label %813

813:                                              ; preds = %811, %804
  %814 = phi i32 [ %812, %811 ], [ %810, %804 ]
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %816, label %817

816:                                              ; preds = %813
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %802) #12
  br label %817

817:                                              ; preds = %782, %813, %816
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %784) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %783) #12
  br label %818

818:                                              ; preds = %153, %774, %675, %358, %817, %718, %401, %749, %652, %581, %335, %295, %234, %196
  %819 = phi i64 [ 0, %817 ], [ %750, %749 ], [ 0, %718 ], [ %644, %652 ], [ %544, %581 ], [ 0, %401 ], [ %332, %335 ], [ %289, %295 ], [ %231, %234 ], [ %193, %196 ], [ %54, %358 ], [ %54, %675 ], [ %54, %774 ], [ %54, %153 ]
  %820 = phi i64 [ %54, %817 ], [ %751, %749 ], [ %54, %718 ], [ %645, %652 ], [ %545, %581 ], [ %54, %401 ], [ %331, %335 ], [ %288, %295 ], [ %230, %234 ], [ %192, %196 ], [ 0, %358 ], [ 0, %675 ], [ 0, %774 ], [ 0, %153 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #12
  br label %821

821:                                              ; preds = %125, %110, %818
  %822 = phi i64 [ %819, %818 ], [ %54, %110 ], [ %129, %125 ]
  %823 = phi i64 [ %820, %818 ], [ 0, %110 ], [ %130, %125 ]
  %824 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %825 = icmp eq %"class.WTF::StringImpl"* %824, null
  br i1 %825, label %839, label %826

826:                                              ; preds = %821
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %824, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %828 = load atomic i32, i32* %827 monotonic, align 4
  %829 = and i32 %828, 2
  %830 = icmp eq i32 %829, 0
  %831 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %824, i64 0, i32 0
  %832 = load i32, i32* %831, align 4
  br i1 %830, label %833, label %835

833:                                              ; preds = %826
  %834 = add i32 %832, -1
  store i32 %834, i32* %831, align 4
  br label %835

835:                                              ; preds = %833, %826
  %836 = phi i32 [ %834, %833 ], [ %832, %826 ]
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %838, label %839

838:                                              ; preds = %835
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %824) #12
  br label %839

839:                                              ; preds = %821, %835, %838
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12
  %840 = icmp eq i64 %822, 0
  br i1 %840, label %844, label %841

841:                                              ; preds = %839
  %842 = inttoptr i64 %822 to %"class.blink::CSSParserSelector"*
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %842) #12
  %843 = inttoptr i64 %822 to i8*
  call void @free(i8* %843) #12
  br label %844

844:                                              ; preds = %42, %841, %839
  %845 = phi i64 [ %823, %839 ], [ %823, %841 ], [ 0, %42 ]
  %846 = inttoptr i64 %845 to %"class.blink::CSSParserSelector"*
  ret %"class.blink::CSSParserSelector"* %846
}

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSelectorParser21ConsumeAttributeMatchERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* nocapture, %"class.blink::CSSParserTokenRange"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %4 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = icmp eq %"class.blink::CSSParserToken"* %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %4, i64 1
  store %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"** %3, align 8
  %12 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %13

13:                                               ; preds = %10, %8
  %14 = phi %"class.blink::CSSParserToken"* [ %9, %8 ], [ %12, %10 ]
  %15 = phi %"class.blink::CSSParserToken"* [ %4, %8 ], [ %11, %10 ]
  %16 = phi %"class.blink::CSSParserToken"* [ %9, %8 ], [ %4, %10 ]
  %17 = icmp ult %"class.blink::CSSParserToken"* %15, %6
  %18 = select i1 %17, %"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"* %14
  %19 = bitcast %"class.blink::CSSParserToken"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 63
  %22 = icmp eq i32 %21, 17
  br i1 %22, label %23, label %32

23:                                               ; preds = %13, %23
  %24 = phi %"class.blink::CSSParserToken"* [ %25, %23 ], [ %15, %13 ]
  %25 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %24, i64 1
  store %"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"** %3, align 8
  %26 = icmp ult %"class.blink::CSSParserToken"* %25, %6
  %27 = select i1 %26, %"class.blink::CSSParserToken"* %25, %"class.blink::CSSParserToken"* %14
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 63
  %31 = icmp eq i32 %30, 17
  br i1 %31, label %23, label %32

32:                                               ; preds = %23, %13
  %33 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 63
  switch i32 %35, label %41 [
    i32 10, label %43
    i32 11, label %36
    i32 12, label %43
    i32 13, label %43
    i32 14, label %37
    i32 6, label %38
  ]

36:                                               ; preds = %32
  br label %43

37:                                               ; preds = %32
  br label %43

38:                                               ; preds = %32
  %39 = tail call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %16) #12
  %40 = icmp eq i16 %39, 61
  br i1 %40, label %43, label %41

41:                                               ; preds = %38, %32
  %42 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 2
  store i8 1, i8* %42, align 8
  br label %43

43:                                               ; preds = %32, %32, %38, %32, %41, %37, %36
  %44 = phi i32 [ 7, %41 ], [ 11, %37 ], [ 9, %36 ], [ %35, %32 ], [ 7, %38 ], [ %35, %32 ], [ %35, %32 ]
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CSSSelectorParser21ConsumeAttributeFlagsERNS_19CSSParserTokenRangeE(%"class.blink::CSSSelectorParser"* nocapture, %"class.blink::CSSParserTokenRange"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 0
  %4 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %1, i64 0, i32 1
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = icmp ult %"class.blink::CSSParserToken"* %4, %6
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %9 = select i1 %7, %"class.blink::CSSParserToken"* %4, %"class.blink::CSSParserToken"* %8
  %10 = bitcast %"class.blink::CSSParserToken"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 63
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %109

14:                                               ; preds = %2
  %15 = icmp eq %"class.blink::CSSParserToken"* %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %4, i64 1
  store %"class.blink::CSSParserToken"* %17, %"class.blink::CSSParserToken"** %3, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi %"class.blink::CSSParserToken"* [ %17, %16 ], [ %4, %14 ]
  %20 = phi %"class.blink::CSSParserToken"* [ %4, %16 ], [ %8, %14 ]
  %21 = icmp ult %"class.blink::CSSParserToken"* %19, %6
  %22 = select i1 %21, %"class.blink::CSSParserToken"* %19, %"class.blink::CSSParserToken"* %8
  %23 = bitcast %"class.blink::CSSParserToken"* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 63
  %26 = icmp eq i32 %25, 17
  br i1 %26, label %27, label %36

27:                                               ; preds = %18, %27
  %28 = phi %"class.blink::CSSParserToken"* [ %29, %27 ], [ %19, %18 ]
  %29 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %28, i64 1
  store %"class.blink::CSSParserToken"* %29, %"class.blink::CSSParserToken"** %3, align 8
  %30 = icmp ult %"class.blink::CSSParserToken"* %29, %6
  %31 = select i1 %30, %"class.blink::CSSParserToken"* %29, %"class.blink::CSSParserToken"* %8
  %32 = bitcast %"class.blink::CSSParserToken"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 63
  %35 = icmp eq i32 %34, 17
  br i1 %35, label %27, label %36

36:                                               ; preds = %27, %18
  %37 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 0, i32 2
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8, !noalias !50
  %40 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 0, i32 1
  %41 = load i32, i32* %40, align 4, !noalias !50
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %107

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::CSSParserToken"* %20 to i32*
  %45 = load i32, i32* %44, align 8, !noalias !50
  %46 = and i32 %45, 262144
  %47 = icmp eq i32 %46, 0
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = inttoptr i64 %50 to %"class.WTF::StringImpl"*
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %43
  %57 = inttoptr i64 %39 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = add i16 %58, -65
  %60 = icmp ult i16 %59, 26
  %61 = zext i1 %60 to i16
  %62 = shl nuw nsw i16 %61, 5
  %63 = or i16 %62, %58
  %64 = zext i16 %63 to i32
  %65 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 105), align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %109, label %78

68:                                               ; preds = %43
  %69 = inttoptr i64 %39 to i8*
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 105), align 1
  %76 = sext i8 %75 to i32
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %109, label %78

78:                                               ; preds = %68, %56
  %79 = load atomic i32, i32* %52 monotonic, align 4
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %78
  %83 = inttoptr i64 %39 to i16*
  %84 = load i16, i16* %83, align 2
  %85 = add i16 %84, -65
  %86 = icmp ult i16 %85, 26
  %87 = zext i1 %86 to i16
  %88 = shl nuw nsw i16 %87, 5
  %89 = or i16 %88, %84
  %90 = zext i16 %89 to i32
  %91 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 115), align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %104, label %107

94:                                               ; preds = %78
  %95 = inttoptr i64 %39 to i8*
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 115), align 1
  %102 = sext i8 %101 to i32
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %104, label %107

104:                                              ; preds = %82, %94
  %105 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase39is_css_case_sensitive_selector_enabled_E, align 1, !range !3
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %36, %104, %94, %82
  %108 = getelementptr inbounds %"class.blink::CSSSelectorParser", %"class.blink::CSSSelectorParser"* %0, i64 0, i32 2
  store i8 1, i8* %108, align 8
  br label %109

109:                                              ; preds = %104, %56, %107, %68, %2
  %110 = phi i32 [ 0, %2 ], [ 0, %107 ], [ 1, %68 ], [ 2, %104 ], [ 1, %56 ]
  ret i32 %110
}

declare void @_ZN5blink17CSSParserSelector15SetSelectorListENSt3__110unique_ptrINS_15CSSSelectorListENS1_14default_deleteIS3_EEEE(%"class.blink::CSSParserSelector"*, %"class.blink::CSSSelectorList"*) local_unnamed_addr #2

declare void @_ZN5blink17CSSParserSelector19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSParserSelector"*, %"class.WTF::Vector.444"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CSSSelectorParser14ConsumeANPlusBERNS_19CSSParserTokenRangeERNSt3__14pairIiiEE(%"class.blink::CSSParserTokenRange"* nocapture dereferenceable(16), %"struct.std::__1::pair.520"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.WTF::String", align 8
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %13 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %16 = icmp eq %"class.blink::CSSParserToken"* %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  br label %21

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %13, i64 1
  store %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"** %12, align 8
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi %"class.blink::CSSParserToken"* [ %18, %17 ], [ %13, %19 ]
  %23 = bitcast %"class.blink::CSSParserToken"* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 63
  %26 = icmp eq i32 %25, 7
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = tail call i32 @_ZNK5blink14CSSParserToken19GetNumericValueTypeEv(%"class.blink::CSSParserToken"* %22) #12
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %23, align 8
  br label %43

32:                                               ; preds = %27
  %33 = tail call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %22) #12
  %34 = fcmp ult double %33, 0x41DFFFFFFFC00000
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = fcmp ugt double %33, 0xC1E0000000000000
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = fptosi double %33 to i32
  br label %39

39:                                               ; preds = %32, %35, %37
  %40 = phi i32 [ %38, %37 ], [ 2147483647, %32 ], [ -2147483648, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 0
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 1
  store i32 %40, i32* %42, align 4
  br label %564

43:                                               ; preds = %30, %21
  %44 = phi i32 [ %31, %30 ], [ %24, %21 ]
  %45 = and i32 %44, 63
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %142

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %22, i64 0, i32 2
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !53
  %51 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %22, i64 0, i32 1
  %52 = load i32, i32* %51, align 4, !noalias !53
  %53 = icmp eq i32 %52, 3
  %54 = and i32 %44, 262144
  br i1 %53, label %55, label %128

55:                                               ; preds = %47
  %56 = icmp eq i32 %54, 0
  %57 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = select i1 %56, i64 %57, i64 %58
  %60 = inttoptr i64 %59 to %"class.WTF::StringImpl"*
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %85, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %50 to i8*
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %128

75:                                               ; preds = %65
  %76 = getelementptr inbounds i8, i8* %66, i64 1
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 100), align 4
  %83 = sext i8 %82 to i32
  %84 = icmp eq i32 %81, %83
  br i1 %84, label %118, label %128

85:                                               ; preds = %55
  %86 = inttoptr i64 %50 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = add i16 %87, -65
  %89 = icmp ult i16 %88, 26
  %90 = zext i1 %89 to i16
  %91 = shl nuw nsw i16 %90, 5
  %92 = or i16 %91, %87
  %93 = zext i16 %92 to i32
  %94 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %95 = sext i8 %94 to i32
  %96 = icmp eq i32 %93, %95
  br i1 %96, label %97, label %128

97:                                               ; preds = %85
  %98 = getelementptr inbounds i16, i16* %86, i64 1
  %99 = load i16, i16* %98, align 2
  %100 = add i16 %99, -65
  %101 = icmp ult i16 %100, 26
  %102 = zext i1 %101 to i16
  %103 = shl nuw nsw i16 %102, 5
  %104 = or i16 %103, %99
  %105 = zext i16 %104 to i32
  %106 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 100), align 4
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %105, %107
  br i1 %108, label %109, label %128

109:                                              ; preds = %97
  %110 = getelementptr inbounds i16, i16* %86, i64 2
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = icmp eq i16 %116, %104
  br i1 %117, label %125, label %128

118:                                              ; preds = %75
  %119 = getelementptr inbounds i8, i8* %66, i64 2
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, %80
  br i1 %124, label %125, label %128

125:                                              ; preds = %109, %118
  %126 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 0
  store i32 2, i32* %126, align 4
  %127 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 1
  store i32 1, i32* %127, align 4
  br label %564

128:                                              ; preds = %47, %75, %65, %97, %85, %109, %118
  %129 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #12
  %130 = icmp eq i32 %54, 0
  %131 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %133 = select i1 %130, i64 %131, i64 %132
  %134 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %133, i64* %134, align 8, !alias.scope !56
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %136 = bitcast i8** %135 to i64*
  store i64 %50, i64* %136, align 8, !alias.scope !56
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %52, i32* %137, align 8, !alias.scope !56
  %138 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #12
  br i1 %138, label %139, label %142

139:                                              ; preds = %128
  %140 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 0
  store i32 2, i32* %140, align 4
  %141 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 1
  store i32 0, i32* %141, align 4
  br label %564

142:                                              ; preds = %128, %43
  %143 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #12
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %144, align 8
  %145 = load i32, i32* %23, align 8
  %146 = and i32 %145, 63
  %147 = icmp eq i32 %146, 6
  br i1 %147, label %148, label %206

148:                                              ; preds = %142
  %149 = call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %22) #12
  %150 = icmp eq i16 %149, 43
  br i1 %150, label %151, label %206

151:                                              ; preds = %148
  %152 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %153 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %154 = icmp ult %"class.blink::CSSParserToken"* %152, %153
  %155 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %156 = select i1 %154, %"class.blink::CSSParserToken"* %152, %"class.blink::CSSParserToken"* %155
  %157 = bitcast %"class.blink::CSSParserToken"* %156 to i32*
  %158 = load i32, i32* %157, align 8
  %159 = and i32 %158, 63
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %206

161:                                              ; preds = %151
  %162 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 0
  store i32 1, i32* %162, align 4
  %163 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #12
  %164 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %165 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %166 = icmp eq %"class.blink::CSSParserToken"* %164, %165
  br i1 %166, label %169, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %164, i64 1
  store %"class.blink::CSSParserToken"* %168, %"class.blink::CSSParserToken"** %12, align 8
  br label %169

169:                                              ; preds = %161, %167
  %170 = phi %"class.blink::CSSParserToken"* [ %164, %167 ], [ %155, %161 ]
  %171 = bitcast %"class.blink::CSSParserToken"* %170 to i32*
  %172 = load i32, i32* %171, align 8, !noalias !59
  %173 = and i32 %172, 262144
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %170, i64 0, i32 2
  %176 = bitcast i8** %175 to i64*
  %177 = load i64, i64* %176, align 8, !noalias !59
  %178 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %170, i64 0, i32 1
  %179 = load i32, i32* %178, align 4, !noalias !59
  %180 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %181 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %182 = select i1 %174, i64 %180, i64 %181
  %183 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %182, i64* %183, align 8, !alias.scope !59
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %185 = bitcast i8** %184 to i64*
  store i64 %177, i64* %185, align 8, !alias.scope !59
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %179, i32* %186, align 8, !alias.scope !59
  %187 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %5) #12
  %188 = ptrtoint %"class.WTF::StringImpl"* %187 to i64
  %189 = bitcast %"class.WTF::String"* %4 to i64*
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %188, i64* %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %169
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #12
  br label %205

205:                                              ; preds = %204, %201, %169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #12
  br label %375

206:                                              ; preds = %151, %148, %142
  %207 = load i32, i32* %23, align 8
  %208 = and i32 %207, 63
  %209 = icmp eq i32 %208, 9
  br i1 %209, label %210, label %260

210:                                              ; preds = %206
  %211 = call i32 @_ZNK5blink14CSSParserToken19GetNumericValueTypeEv(%"class.blink::CSSParserToken"* %22) #12
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %215, label %213

213:                                              ; preds = %210
  %214 = load i32, i32* %23, align 8
  br label %260

215:                                              ; preds = %210
  %216 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %22) #12
  %217 = fcmp ult double %216, 0x41DFFFFFFFC00000
  br i1 %217, label %218, label %222

218:                                              ; preds = %215
  %219 = fcmp ugt double %216, 0xC1E0000000000000
  br i1 %219, label %220, label %222

220:                                              ; preds = %218
  %221 = fptosi double %216 to i32
  br label %222

222:                                              ; preds = %215, %218, %220
  %223 = phi i32 [ %221, %220 ], [ 2147483647, %215 ], [ -2147483648, %218 ]
  %224 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 0
  store i32 %223, i32* %224, align 4
  %225 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #12
  %226 = load i32, i32* %23, align 8, !noalias !62
  %227 = and i32 %226, 262144
  %228 = icmp eq i32 %227, 0
  %229 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %22, i64 0, i32 2
  %230 = bitcast i8** %229 to i64*
  %231 = load i64, i64* %230, align 8, !noalias !62
  %232 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %22, i64 0, i32 1
  %233 = load i32, i32* %232, align 4, !noalias !62
  %234 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %235 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %236 = select i1 %228, i64 %234, i64 %235
  %237 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %236, i64* %237, align 8, !alias.scope !62
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %239 = bitcast i8** %238 to i64*
  store i64 %231, i64* %239, align 8, !alias.scope !62
  %240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %233, i32* %240, align 8, !alias.scope !62
  %241 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %6) #12
  %242 = ptrtoint %"class.WTF::StringImpl"* %241 to i64
  %243 = bitcast %"class.WTF::String"* %4 to i64*
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %242, i64* %243, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %259, label %246

246:                                              ; preds = %222
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #12
  br label %259

259:                                              ; preds = %258, %255, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #12
  br label %375

260:                                              ; preds = %213, %206
  %261 = phi i32 [ %214, %213 ], [ %207, %206 ]
  %262 = and i32 %261, 63
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %375

264:                                              ; preds = %260
  %265 = and i32 %261, 262144
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %22, i64 0, i32 2
  %268 = bitcast i8** %267 to i64*
  %269 = load i64, i64* %268, align 8, !noalias !65
  %270 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %22, i64 0, i32 1
  %271 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %272 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %273 = select i1 %266, i64 %271, i64 %272
  %274 = inttoptr i64 %273 to %"class.WTF::StringImpl"*
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %283, label %279

279:                                              ; preds = %264
  %280 = inttoptr i64 %269 to i8*
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i16
  br label %286

283:                                              ; preds = %264
  %284 = inttoptr i64 %269 to i16*
  %285 = load i16, i16* %284, align 2
  br label %286

286:                                              ; preds = %279, %283
  %287 = phi i16 [ %282, %279 ], [ %285, %283 ]
  %288 = icmp eq i16 %287, 45
  %289 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 0
  br i1 %288, label %290, label %342

290:                                              ; preds = %286
  store i32 -1, i32* %289, align 4
  %291 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #12
  %292 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #12
  %293 = load i32, i32* %23, align 8, !noalias !68
  %294 = and i32 %293, 262144
  %295 = icmp eq i32 %294, 0
  %296 = load i64, i64* %268, align 8, !noalias !68
  %297 = load i32, i32* %270, align 4, !noalias !68
  %298 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %299 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %300 = select i1 %295, i64 %298, i64 %299
  %301 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %300, i64* %301, align 8, !alias.scope !68
  %302 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %303 = bitcast i8** %302 to i64*
  store i64 %296, i64* %303, align 8, !alias.scope !68
  %304 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %297, i32* %304, align 8, !alias.scope !68
  %305 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %8) #12
  %306 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %305, %"class.WTF::StringImpl"** %306, align 8
  %307 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 1, i32 -1) #12
  %308 = ptrtoint %"class.WTF::StringImpl"* %307 to i64
  %309 = bitcast %"class.WTF::String"* %4 to i64*
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %308, i64* %309, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %290
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #12
  br label %325

325:                                              ; preds = %324, %321, %290
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %341, label %328

328:                                              ; preds = %325
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #12
  br label %341

341:                                              ; preds = %325, %337, %340
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291) #12
  br label %375

342:                                              ; preds = %286
  store i32 1, i32* %289, align 4
  %343 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #12
  %344 = load i32, i32* %23, align 8, !noalias !71
  %345 = and i32 %344, 262144
  %346 = icmp eq i32 %345, 0
  %347 = load i64, i64* %268, align 8, !noalias !71
  %348 = load i32, i32* %270, align 4, !noalias !71
  %349 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %350 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %351 = select i1 %346, i64 %349, i64 %350
  %352 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %351, i64* %352, align 8, !alias.scope !71
  %353 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %354 = bitcast i8** %353 to i64*
  store i64 %347, i64* %354, align 8, !alias.scope !71
  %355 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %348, i32* %355, align 8, !alias.scope !71
  %356 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %9) #12
  %357 = ptrtoint %"class.WTF::StringImpl"* %356 to i64
  %358 = bitcast %"class.WTF::String"* %4 to i64*
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %357, i64* %358, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %342
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #12
  br label %374

374:                                              ; preds = %373, %370, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #12
  br label %375

375:                                              ; preds = %259, %341, %374, %260, %205
  %376 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %377 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %378 = icmp ult %"class.blink::CSSParserToken"* %376, %377
  %379 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %380 = select i1 %378, %"class.blink::CSSParserToken"* %376, %"class.blink::CSSParserToken"* %379
  %381 = bitcast %"class.blink::CSSParserToken"* %380 to i32*
  %382 = load i32, i32* %381, align 8
  %383 = and i32 %382, 63
  %384 = icmp eq i32 %383, 17
  br i1 %384, label %385, label %394

385:                                              ; preds = %375, %385
  %386 = phi %"class.blink::CSSParserToken"* [ %387, %385 ], [ %376, %375 ]
  %387 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %386, i64 1
  store %"class.blink::CSSParserToken"* %387, %"class.blink::CSSParserToken"** %12, align 8
  %388 = icmp ult %"class.blink::CSSParserToken"* %387, %377
  %389 = select i1 %388, %"class.blink::CSSParserToken"* %387, %"class.blink::CSSParserToken"* %379
  %390 = bitcast %"class.blink::CSSParserToken"* %389 to i32*
  %391 = load i32, i32* %390, align 8
  %392 = and i32 %391, 63
  %393 = icmp eq i32 %392, 17
  br i1 %393, label %385, label %394

394:                                              ; preds = %385, %375
  %395 = phi %"class.blink::CSSParserToken"* [ %376, %375 ], [ %387, %385 ]
  %396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %397 = icmp eq %"class.WTF::StringImpl"* %396, null
  br i1 %397, label %562, label %398

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 1
  %400 = load i32, i32* %399, align 4
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %545, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = and i32 %404, 1
  %406 = icmp eq i32 %405, 0
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 1
  br i1 %406, label %412, label %408

408:                                              ; preds = %402
  %409 = bitcast %"class.WTF::StringImpl"* %407 to i8*
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i16
  br label %415

412:                                              ; preds = %402
  %413 = bitcast %"class.WTF::StringImpl"* %407 to i16*
  %414 = load i16, i16* %413, align 2
  br label %415

415:                                              ; preds = %408, %412
  %416 = phi i16 [ %411, %408 ], [ %414, %412 ]
  %417 = or i16 %416, 32
  %418 = icmp eq i16 %417, 110
  br i1 %418, label %419, label %545

419:                                              ; preds = %415
  %420 = icmp ugt i32 %400, 1
  br i1 %420, label %421, label %465

421:                                              ; preds = %419
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 1
  br i1 %425, label %432, label %427

427:                                              ; preds = %421
  %428 = bitcast %"class.WTF::StringImpl"* %426 to i8*
  %429 = getelementptr inbounds i8, i8* %428, i64 1
  %430 = load i8, i8* %429, align 1
  %431 = zext i8 %430 to i16
  br label %436

432:                                              ; preds = %421
  %433 = bitcast %"class.WTF::StringImpl"* %426 to i16*
  %434 = getelementptr inbounds i16, i16* %433, i64 1
  %435 = load i16, i16* %434, align 2
  br label %436

436:                                              ; preds = %427, %432
  %437 = phi i16 [ %431, %427 ], [ %435, %432 ]
  %438 = icmp eq i16 %437, 45
  br i1 %438, label %439, label %545

439:                                              ; preds = %436
  %440 = icmp ugt i32 %400, 2
  br i1 %440, label %441, label %508

441:                                              ; preds = %439
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #12
  store i8 -86, i8* %10, align 1
  %442 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %442) #12
  %443 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %4, i32 1, i32 -1) #12
  %444 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %443, %"class.WTF::StringImpl"** %444, align 8
  %445 = call i32 @_ZNK3WTF6String11ToIntStrictEPb(%"class.WTF::String"* nonnull %11, i8* nonnull %10) #12
  %446 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 1
  store i32 %445, i32* %446, align 4
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %444, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %448, label %462, label %449

449:                                              ; preds = %441
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load atomic i32, i32* %450 monotonic, align 4
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 0
  %455 = load i32, i32* %454, align 4
  br i1 %453, label %456, label %458

456:                                              ; preds = %449
  %457 = add i32 %455, -1
  store i32 %457, i32* %454, align 4
  br label %458

458:                                              ; preds = %456, %449
  %459 = phi i32 [ %457, %456 ], [ %455, %449 ]
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %462

461:                                              ; preds = %458
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %447) #12
  br label %462

462:                                              ; preds = %441, %458, %461
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %442) #12
  %463 = load i8, i8* %10, align 1, !range !3
  %464 = icmp ne i8 %463, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #12
  br label %545

465:                                              ; preds = %419
  %466 = icmp ult %"class.blink::CSSParserToken"* %395, %377
  %467 = select i1 %466, %"class.blink::CSSParserToken"* %395, %"class.blink::CSSParserToken"* %379
  %468 = bitcast %"class.blink::CSSParserToken"* %467 to i32*
  %469 = load i32, i32* %468, align 8
  %470 = and i32 %469, 63
  %471 = icmp eq i32 %470, 6
  br i1 %471, label %472, label %499

472:                                              ; preds = %465
  %473 = icmp eq %"class.blink::CSSParserToken"* %395, %377
  br i1 %473, label %476, label %474

474:                                              ; preds = %472
  %475 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %395, i64 1
  store %"class.blink::CSSParserToken"* %475, %"class.blink::CSSParserToken"** %12, align 8
  br label %476

476:                                              ; preds = %472, %474
  %477 = phi %"class.blink::CSSParserToken"* [ %475, %474 ], [ %377, %472 ]
  %478 = phi %"class.blink::CSSParserToken"* [ %395, %474 ], [ %379, %472 ]
  %479 = icmp ult %"class.blink::CSSParserToken"* %477, %377
  %480 = select i1 %479, %"class.blink::CSSParserToken"* %477, %"class.blink::CSSParserToken"* %379
  %481 = bitcast %"class.blink::CSSParserToken"* %480 to i32*
  %482 = load i32, i32* %481, align 8
  %483 = and i32 %482, 63
  %484 = icmp eq i32 %483, 17
  br i1 %484, label %485, label %494

485:                                              ; preds = %476, %485
  %486 = phi %"class.blink::CSSParserToken"* [ %487, %485 ], [ %477, %476 ]
  %487 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %486, i64 1
  store %"class.blink::CSSParserToken"* %487, %"class.blink::CSSParserToken"** %12, align 8
  %488 = icmp ult %"class.blink::CSSParserToken"* %487, %377
  %489 = select i1 %488, %"class.blink::CSSParserToken"* %487, %"class.blink::CSSParserToken"* %379
  %490 = bitcast %"class.blink::CSSParserToken"* %489 to i32*
  %491 = load i32, i32* %490, align 8
  %492 = and i32 %491, 63
  %493 = icmp eq i32 %492, 17
  br i1 %493, label %485, label %494

494:                                              ; preds = %485, %476
  %495 = call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %478) #12
  %496 = zext i16 %495 to i32
  %497 = shl i32 %496, 24
  switch i32 %497, label %545 [
    i32 721420288, label %508
    i32 754974720, label %498
  ]

498:                                              ; preds = %494
  br label %508

499:                                              ; preds = %465
  %500 = icmp ult %"class.blink::CSSParserToken"* %395, %377
  %501 = select i1 %500, %"class.blink::CSSParserToken"* %395, %"class.blink::CSSParserToken"* %379
  %502 = bitcast %"class.blink::CSSParserToken"* %501 to i32*
  %503 = load i32, i32* %502, align 8
  %504 = and i32 %503, 63
  %505 = icmp eq i32 %504, 7
  br i1 %505, label %508, label %506

506:                                              ; preds = %499
  %507 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 1
  store i32 0, i32* %507, align 4
  br label %545

508:                                              ; preds = %439, %498, %494, %499
  %509 = phi i1 [ true, %499 ], [ false, %494 ], [ false, %498 ], [ false, %439 ]
  %510 = phi i32 [ 0, %499 ], [ 1, %494 ], [ 2, %498 ], [ 2, %439 ]
  %511 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %512 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %513 = icmp eq %"class.blink::CSSParserToken"* %511, %512
  br i1 %513, label %516, label %514

514:                                              ; preds = %508
  %515 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %511, i64 1
  store %"class.blink::CSSParserToken"* %515, %"class.blink::CSSParserToken"** %12, align 8
  br label %516

516:                                              ; preds = %508, %514
  %517 = phi %"class.blink::CSSParserToken"* [ %511, %514 ], [ %379, %508 ]
  %518 = bitcast %"class.blink::CSSParserToken"* %517 to i32*
  %519 = load i32, i32* %518, align 8
  %520 = and i32 %519, 63
  %521 = icmp eq i32 %520, 7
  br i1 %521, label %522, label %545

522:                                              ; preds = %516
  %523 = call i32 @_ZNK5blink14CSSParserToken19GetNumericValueTypeEv(%"class.blink::CSSParserToken"* %517) #12
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %545

525:                                              ; preds = %522
  %526 = call i32 @_ZNK5blink14CSSParserToken14GetNumericSignEv(%"class.blink::CSSParserToken"* %517) #12
  %527 = icmp ne i32 %526, 0
  %528 = xor i1 %509, %527
  br i1 %528, label %545, label %529

529:                                              ; preds = %525
  %530 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %517) #12
  %531 = fcmp ult double %530, 0x41DFFFFFFFC00000
  br i1 %531, label %532, label %536

532:                                              ; preds = %529
  %533 = fcmp ugt double %530, 0xC1E0000000000000
  br i1 %533, label %534, label %536

534:                                              ; preds = %532
  %535 = fptosi double %530 to i32
  br label %536

536:                                              ; preds = %529, %532, %534
  %537 = phi i32 [ %535, %534 ], [ 2147483647, %529 ], [ -2147483648, %532 ]
  %538 = getelementptr inbounds %"struct.std::__1::pair.520", %"struct.std::__1::pair.520"* %1, i64 0, i32 1
  store i32 %537, i32* %538, align 4
  %539 = icmp eq i32 %510, 2
  br i1 %539, label %540, label %545

540:                                              ; preds = %536
  %541 = icmp eq i32 %537, -2147483648
  br i1 %541, label %542, label %543, !prof !2

542:                                              ; preds = %540
  store i32 2147483647, i32* %538, align 4
  br label %545

543:                                              ; preds = %540
  %544 = sub nsw i32 0, %537
  store i32 %544, i32* %538, align 4
  br label %545

545:                                              ; preds = %494, %506, %536, %543, %542, %525, %516, %522, %436, %398, %415, %462
  %546 = phi i1 [ false, %494 ], [ true, %536 ], [ true, %543 ], [ true, %542 ], [ false, %525 ], [ false, %516 ], [ false, %522 ], [ true, %506 ], [ false, %436 ], [ false, %398 ], [ false, %415 ], [ %464, %462 ]
  %547 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %548 = icmp eq %"class.WTF::StringImpl"* %547, null
  br i1 %548, label %562, label %549

549:                                              ; preds = %545
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %551 = load atomic i32, i32* %550 monotonic, align 4
  %552 = and i32 %551, 2
  %553 = icmp eq i32 %552, 0
  %554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %547, i64 0, i32 0
  %555 = load i32, i32* %554, align 4
  br i1 %553, label %556, label %558

556:                                              ; preds = %549
  %557 = add i32 %555, -1
  store i32 %557, i32* %554, align 4
  br label %558

558:                                              ; preds = %556, %549
  %559 = phi i32 [ %557, %556 ], [ %555, %549 ]
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %561, label %562

561:                                              ; preds = %558
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %547) #12
  br label %562

562:                                              ; preds = %394, %545, %558, %561
  %563 = phi i1 [ %546, %545 ], [ %546, %558 ], [ %546, %561 ], [ false, %394 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #12
  br label %564

564:                                              ; preds = %562, %139, %125, %39
  %565 = phi i1 [ true, %39 ], [ true, %125 ], [ true, %139 ], [ %563, %562 ]
  ret i1 %565
}

declare i32 @_ZNK5blink14CSSParserToken19GetNumericValueTypeEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK3WTF6String11ToIntStrictEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #2

declare i32 @_ZNK5blink14CSSParserToken14GetNumericSignEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18StyleSheetContents22NamespaceURIFromPrefixERKN3WTF12AtomicStringE(%"class.blink::StyleSheetContents"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSParserSelector40NeedsImplicitShadowCombinatorForMatchingEv(%"class.blink::CSSParserSelector"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSParserSelector20IsHostPseudoSelectorEv(%"class.blink::CSSParserSelector"*) local_unnamed_addr #2

declare void @_ZN5blink17CSSParserSelector18PrependTagSelectorERKNS_13QualifiedNameEb(%"class.blink::CSSParserSelector"*, %"class.blink::QualifiedName"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink17CSSParserSelector16AppendTagHistoryENS_11CSSSelector12RelationTypeENSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEE(%"class.blink::CSSParserSelector"*, i32, %"class.blink::CSSParserSelector"*) local_unnamed_addr #2

declare %"class.blink::CSSParserSelector"* @_ZN5blink17CSSParserSelector17ReleaseTagHistoryEv(%"class.blink::CSSParserSelector"*) local_unnamed_addr #2

declare i32 @_ZNK5blink17CSSParserSelector38GetImplicitShadowCombinatorForMatchingEv(%"class.blink::CSSParserSelector"*) local_unnamed_addr #2

declare %"class.blink::CSSSelector"* @_ZNK5blink15CSSSelectorList13FirstForCSSOMEv(%"class.blink::CSSSelectorList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11, !prof !74

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 0, i32 0), align 16
  store i16 3, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 0, i32 1), align 8
  store i16 2278, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 0, i32 2), align 2
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 1, i32 0), align 16
  store i16 44, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 1, i32 1), align 8
  store i16 1064, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 1, i32 2), align 2
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 2, i32 0), align 16
  store i16 33, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 2, i32 1), align 8
  store i16 2279, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 2, i32 2), align 2
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 3, i32 0), align 16
  store i16 20, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 3, i32 1), align 8
  store i16 2280, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 3, i32 2), align 2
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 4, i32 0), align 16
  store i16 20, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 4, i32 1), align 8
  store i16 2281, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 4, i32 2), align 2
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 5, i32 0), align 16
  store i16 28, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 5, i32 1), align 8
  store i16 2282, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 5, i32 2), align 2
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 6, i32 0), align 16
  store i16 27, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 6, i32 1), align 8
  store i16 2283, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 6, i32 2), align 2
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 7, i32 0), align 16
  store i16 21, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 7, i32 1), align 8
  store i16 2284, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 7, i32 2), align 2
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 8, i32 0), align 16
  store i16 32, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 8, i32 1), align 8
  store i16 2285, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 8, i32 2), align 2
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 9, i32 0), align 16
  store i16 31, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 9, i32 1), align 8
  store i16 2286, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 9, i32 2), align 2
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 10, i32 0), align 16
  store i16 36, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 10, i32 1), align 8
  store i16 2287, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 10, i32 2), align 2
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 11, i32 0), align 16
  store i16 32, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 11, i32 1), align 8
  store i16 2288, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 11, i32 2), align 2
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 12, i32 0), align 16
  store i16 39, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 12, i32 1), align 8
  store i16 2289, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 12, i32 2), align 2
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 13, i32 0), align 16
  store i16 34, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 13, i32 1), align 8
  store i16 2290, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 13, i32 2), align 2
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 14, i32 0), align 16
  store i16 33, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 14, i32 1), align 8
  store i16 2291, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 14, i32 2), align 2
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 15, i32 0), align 16
  store i16 34, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 15, i32 1), align 8
  store i16 2292, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 15, i32 2), align 2
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 16, i32 0), align 16
  store i16 26, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 16, i32 1), align 8
  store i16 2293, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 16, i32 2), align 2
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 17, i32 0), align 16
  store i16 32, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 17, i32 1), align 8
  store i16 2294, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 17, i32 2), align 2
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 18, i32 0), align 16
  store i16 32, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 18, i32 1), align 8
  store i16 2295, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 18, i32 2), align 2
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 19, i32 0), align 16
  store i16 26, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 19, i32 1), align 8
  store i16 2297, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 19, i32 2), align 2
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 20, i32 0), align 16
  store i16 25, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 20, i32 1), align 8
  store i16 2298, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 20, i32 2), align 2
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.28, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 21, i32 0), align 16
  store i16 25, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 21, i32 1), align 8
  store i16 2299, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 21, i32 2), align 2
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 22, i32 0), align 16
  store i16 22, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 22, i32 1), align 8
  store i16 2037, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 22, i32 2), align 2
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 23, i32 0), align 16
  store i16 43, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 23, i32 1), align 8
  store i16 2043, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 23, i32 2), align 2
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 24, i32 0), align 16
  store i16 32, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 24, i32 1), align 8
  store i16 2040, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 24, i32 2), align 2
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 25, i32 0), align 16
  store i16 40, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 25, i32 1), align 8
  store i16 2049, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 25, i32 2), align 2
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 26, i32 0), align 16
  store i16 34, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 26, i32 1), align 8
  store i16 2047, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 26, i32 2), align 2
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 27, i32 0), align 16
  store i16 40, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 27, i32 1), align 8
  store i16 2038, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 27, i32 2), align 2
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.35, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 28, i32 0), align 16
  store i16 42, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 28, i32 1), align 8
  store i16 2039, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 28, i32 2), align 2
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 29, i32 0), align 16
  store i16 28, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 29, i32 1), align 8
  store i16 2041, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 29, i32 2), align 2
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 30, i32 0), align 16
  store i16 34, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 30, i32 1), align 8
  store i16 2042, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 30, i32 2), align 2
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 31, i32 0), align 16
  store i16 31, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 31, i32 1), align 8
  store i16 2045, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 31, i32 2), align 2
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 32, i32 0), align 16
  store i16 41, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 32, i32 1), align 8
  store i16 2046, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 32, i32 2), align 2
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.40, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 33, i32 0), align 16
  store i16 45, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 33, i32 1), align 8
  store i16 2044, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 33, i32 2), align 2
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.41, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 34, i32 0), align 16
  store i16 52, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 34, i32 1), align 8
  store i16 2050, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 34, i32 2), align 2
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.42, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 35, i32 0), align 16
  store i16 36, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 35, i32 1), align 8
  store i16 2048, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 35, i32 2), align 2
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.43, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 36, i32 0), align 16
  store i16 30, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 36, i32 1), align 8
  store i16 2300, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 36, i32 2), align 2
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 37, i32 0), align 16
  store i16 26, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 37, i32 1), align 8
  store i16 2301, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 37, i32 2), align 2
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 38, i32 0), align 16
  store i16 34, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 38, i32 1), align 8
  store i16 2302, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 38, i32 2), align 2
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 39, i32 0), align 16
  store i16 32, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 39, i32 1), align 8
  store i16 2303, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 39, i32 2), align 2
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.47, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 40, i32 0), align 16
  store i16 31, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 40, i32 1), align 8
  store i16 2304, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 40, i32 2), align 2
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 41, i32 0), align 16
  store i16 41, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 41, i32 1), align 8
  store i16 2305, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 41, i32 2), align 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 42, i32 0), align 16
  store i16 17, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 42, i32 1), align 8
  store i16 2306, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 42, i32 2), align 2
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 43, i32 0), align 16
  store i16 34, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 43, i32 1), align 8
  store i16 2307, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 43, i32 2), align 2
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 44, i32 0), align 16
  store i16 27, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 44, i32 1), align 8
  store i16 2308, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 44, i32 2), align 2
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.52, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 45, i32 0), align 16
  store i16 27, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 45, i32 1), align 8
  store i16 2309, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 45, i32 2), align 2
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 46, i32 0), align 16
  store i16 30, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 46, i32 1), align 8
  store i16 2310, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 46, i32 2), align 2
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 47, i32 0), align 16
  store i16 20, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 47, i32 1), align 8
  store i16 2311, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 47, i32 2), align 2
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.55, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 48, i32 0), align 16
  store i16 30, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 48, i32 1), align 8
  store i16 2312, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 48, i32 2), align 2
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 49, i32 0), align 16
  store i16 22, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 49, i32 1), align 8
  store i16 2313, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 49, i32 2), align 2
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.57, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 50, i32 0), align 16
  store i16 28, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 50, i32 1), align 8
  store i16 2314, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 50, i32 2), align 2
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 51, i32 0), align 16
  store i16 24, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 51, i32 1), align 8
  store i16 2315, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 51, i32 2), align 2
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.59, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 52, i32 0), align 16
  store i16 29, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 52, i32 1), align 8
  store i16 2316, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 52, i32 2), align 2
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.60, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 53, i32 0), align 16
  store i16 20, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 53, i32 1), align 8
  store i16 2317, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 53, i32 2), align 2
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.61, i64 0, i64 0), i8** getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 54, i32 0), align 16
  store i16 38, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 54, i32 1), align 8
  store i16 2318, i16* getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 54, i32 2), align 2
  %10 = tail call {}* @llvm.invariant.start.p0i8(i64 880, i8* bitcast ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table) #12
  br label %11

11:                                               ; preds = %6, %9, %1
  %12 = bitcast %"class.WTF::StringView"* %2 to i8*
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %16 = bitcast i8** %15 to %"class.WTF::StringImpl"**
  %17 = bitcast %"class.WTF::StringView"* %2 to i64*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %19 = bitcast %"class.WTF::StringView"* %3 to i8*
  %20 = bitcast %"class.WTF::StringView"* %3 to i64*
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %24

24:                                               ; preds = %11, %44
  %25 = phi %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"* [ getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 0, i64 0), %11 ], [ %45, %44 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  store i8* null, i8** %15, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %29, i64* %17, align 8
  br label %35

30:                                               ; preds = %24
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %14, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 1
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %16, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %35

35:                                               ; preds = %28, %30
  %36 = phi i64 [ %34, %30 ], [ %29, %28 ]
  %37 = phi i32 [ %32, %30 ], [ 0, %28 ]
  store i32 %37, i32* %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %38 = bitcast %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"* %25 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry", %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"* %25, i64 0, i32 1
  %41 = load i16, i16* %40, align 8
  %42 = zext i16 %41 to i32
  store i64 %36, i64* %20, align 8
  store i64 %39, i64* %22, align 8
  store i32 %42, i32* %23, align 8
  %43 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  br i1 %43, label %47, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry", %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"* %25, i64 1
  %46 = icmp eq %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"* %45, getelementptr inbounds ([55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"], [55 x %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"]* @_ZZN5blink12_GLOBAL__N_135FeatureForWebKitCustomPseudoElementERKN3WTF12AtomicStringEE13feature_table, i64 1, i64 0)
  br i1 %46, label %51, label %24

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry", %"struct.blink::(anonymous namespace)::PseudoElementFeatureMapEntry"* %25, i64 0, i32 2
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  br label %51

51:                                               ; preds = %44, %47
  %52 = phi i32 [ %50, %47 ], [ 2319, %44 ]
  ret i32 %52
}

declare %"class.WTF::StringImpl"* @_ZN5blink11Deprecation18DeprecationMessageENS_5mojom10WebFeatureE(i32) local_unnamed_addr #2

declare void @_ZNK5blink16CSSParserContext16CountDeprecationENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"*, i32) local_unnamed_addr #2

declare void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #2

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.418"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.423"*, i32*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare zeroext i1 @_ZNK5blink11CSSSelector26IsTreeAbidingPseudoElementEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink11CSSSelector18IsAllowedAfterPartEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11CSSSelector8SetValueERKN3WTF12AtomicStringEb(%"class.blink::CSSSelector"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #4 comdat align 2 {
  %4 = bitcast %"class.blink::CSSSelector"* %0 to i32*
  br i1 %2, label %5, label %49

5:                                                ; preds = %3
  %6 = load i32, i32* %4, align 8
  %7 = and i32 %6, 262144
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %49

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %16 = bitcast %"class.WTF::StringImpl"* %15 to i8*
  %17 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  br label %18

18:                                               ; preds = %46, %9
  %19 = phi i64 [ %47, %46 ], [ 0, %9 ]
  br i1 %12, label %22, label %20

20:                                               ; preds = %18
  %21 = load i32, i32* %13, align 4
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i32 [ %21, %20 ], [ 0, %18 ]
  %24 = zext i32 %23 to i64
  %25 = icmp ult i64 %19, %24
  br i1 %25, label %26, label %49

26:                                               ; preds = %22
  br i1 %12, label %46, label %27

27:                                               ; preds = %26
  %28 = load i32, i32* %13, align 4
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %19, %29
  br i1 %30, label %31, label %46

31:                                               ; preds = %27
  %32 = load atomic i32, i32* %14 monotonic, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %16, i64 %19
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  br label %42

39:                                               ; preds = %31
  %40 = getelementptr inbounds i16, i16* %17, i64 %19
  %41 = load i16, i16* %40, align 2
  br label %42

42:                                               ; preds = %39, %35
  %43 = phi i16 [ %38, %35 ], [ %41, %39 ]
  %44 = add i16 %43, -65
  %45 = icmp ult i16 %44, 26
  br i1 %45, label %48, label %46

46:                                               ; preds = %42, %27, %26
  %47 = add nuw nsw i64 %19, 1
  br label %18

48:                                               ; preds = %42
  tail call void @_ZN5blink11CSSSelector14CreateRareDataEv(%"class.blink::CSSSelector"* %0) #12
  br label %49

49:                                               ; preds = %22, %3, %5, %48
  %50 = load i32, i32* %4, align 8
  %51 = and i32 %50, 262144
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %94

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #12
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %63
  tail call void @llvm.trap() #12
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %73, %58, %53
  %76 = ptrtoint %"class.WTF::StringImpl"* %56 to i64
  %77 = bitcast %"class.WTF::AtomicString"* %54 to i64*
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %54, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  store i64 %76, i64* %77, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %232, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %232

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #12
  br label %232

94:                                               ; preds = %49
  br i1 %2, label %126, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %99, label %104

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %101 = bitcast %"union.blink::CSSSelector::DataUnion"* %100 to %"struct.blink::CSSSelector::RareData"**
  %102 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %101, align 8
  %103 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %102, i64 0, i32 1
  br label %153

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #12
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  tail call void @llvm.trap() #12
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %104, %119
  %122 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %123 = bitcast %"union.blink::CSSSelector::DataUnion"* %122 to %"struct.blink::CSSSelector::RareData"**
  %124 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %123, align 8
  %125 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %124, i64 0, i32 1
  br label %133

126:                                              ; preds = %94
  %127 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %1) #12
  %128 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %129 = bitcast %"union.blink::CSSSelector::DataUnion"* %128 to %"struct.blink::CSSSelector::RareData"**
  %130 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %129, align 8
  %131 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %130, i64 0, i32 1
  %132 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %132, label %153, label %133

133:                                              ; preds = %121, %126
  %134 = phi %"class.WTF::AtomicString"* [ %125, %121 ], [ %131, %126 ]
  %135 = phi %"struct.blink::CSSSelector::RareData"** [ %123, %121 ], [ %129, %126 ]
  %136 = phi %"class.WTF::StringImpl"* [ %97, %121 ], [ %127, %126 ]
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i33
  %145 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #12
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !2

150:                                              ; preds = %141
  tail call void @llvm.trap() #12
  unreachable

151:                                              ; preds = %141
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %142, align 4
  br label %153

153:                                              ; preds = %99, %151, %133, %126
  %154 = phi i1 [ false, %151 ], [ false, %133 ], [ true, %126 ], [ true, %99 ]
  %155 = phi %"class.WTF::AtomicString"* [ %134, %151 ], [ %134, %133 ], [ %131, %126 ], [ %103, %99 ]
  %156 = phi %"struct.blink::CSSSelector::RareData"** [ %135, %151 ], [ %135, %133 ], [ %129, %126 ], [ %101, %99 ]
  %157 = phi %"class.WTF::StringImpl"* [ %136, %151 ], [ %136, %133 ], [ null, %126 ], [ null, %99 ]
  %158 = ptrtoint %"class.WTF::StringImpl"* %157 to i64
  %159 = bitcast %"class.WTF::AtomicString"* %155 to i64*
  %160 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %155, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  store i64 %158, i64* %159, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %153
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #12
  br label %176

176:                                              ; preds = %153, %172, %175
  br i1 %154, label %190, label %177

177:                                              ; preds = %176
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #12
  br label %190

190:                                              ; preds = %176, %186, %189
  %191 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %156, align 8
  %192 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %191, i64 0, i32 2
  %193 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %213, label %196

196:                                              ; preds = %190
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i33
  %205 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #12
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !2

210:                                              ; preds = %201
  tail call void @llvm.trap() #12
  unreachable

211:                                              ; preds = %201
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %202, align 4
  br label %213

213:                                              ; preds = %211, %196, %190
  %214 = ptrtoint %"class.WTF::StringImpl"* %194 to i64
  %215 = bitcast %"class.WTF::AtomicString"* %192 to i64*
  %216 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %192, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  store i64 %214, i64* %215, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #12
  br label %232

232:                                              ; preds = %231, %228, %213, %93, %90, %75
  ret void
}

declare void @_ZN5blink11CSSSelector14CreateRareDataEv(%"class.blink::CSSSelector"*) local_unnamed_addr #2

declare void @_ZN5blink11CSSSelector12SetAttributeERKNS_13QualifiedNameENS0_18AttributeMatchTypeE(%"class.blink::CSSSelector"*, %"class.blink::QualifiedName"* dereferenceable(8), i32) local_unnamed_addr #2

declare void @_ZN5blink11CSSSelector16UpdatePseudoTypeERKN3WTF12AtomicStringERKNS_16CSSParserContextEbNS_13CSSParserModeE(%"class.blink::CSSSelector"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::CSSParserContext"* dereferenceable(176), i1 zeroext, i8 zeroext) local_unnamed_addr #2

declare void @_ZN5blink11CSSSelector11SetArgumentERKN3WTF12AtomicStringE(%"class.blink::CSSSelector"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink11CSSSelector12SetPartNamesENSt3__110unique_ptrIN3WTF6VectorINS3_12AtomicStringELj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS7_EEEE(%"class.blink::CSSSelector"*, %"class.WTF::Vector.274"*) local_unnamed_addr #2

declare void @_ZN5blink11CSSSelector6SetNthEii(%"class.blink::CSSSelector"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink11CSSSelectorEEclEPS2_(%"struct.std::__1::default_delete.442"*, %"class.blink::CSSSelector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::CSSSelector"* %1, null
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::CSSSelector"* %1 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 240
  %8 = icmp eq i32 %7, 16
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %1, i64 0, i32 1
  %11 = bitcast %"union.blink::CSSSelector::DataUnion"* %10 to %"class.blink::QualifiedName"*
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %11) #12
  br label %44

12:                                               ; preds = %4
  %13 = and i32 %6, 262144
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %1, i64 0, i32 1
  br i1 %14, label %27, label %16

16:                                               ; preds = %12
  %17 = bitcast %"union.blink::CSSSelector::DataUnion"* %15 to %"struct.blink::CSSSelector::RareData"**
  %18 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %17, align 8
  %19 = icmp eq %"struct.blink::CSSSelector::RareData"* %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #12
  %22 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %44

25:                                               ; preds = %20
  tail call void @_ZN5blink11CSSSelector8RareDataD1Ev(%"struct.blink::CSSSelector::RareData"* nonnull %18) #12
  %26 = bitcast %"struct.blink::CSSSelector::RareData"* %18 to i8*
  tail call void @free(i8* %26) #12
  br label %44

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %9, %16, %20, %25, %27, %40, %43
  %45 = bitcast %"class.blink::CSSSelector"* %1 to i8*
  tail call void @free(i8* %45) #12
  br label %46

46:                                               ; preds = %44, %2
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink11CSSSelector8RareDataD1Ev(%"struct.blink::CSSSelector::RareData"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.444"*, %"class.std::__1::unique_ptr.432"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.432"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.432"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.432"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CSSParserSelectorENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.444"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.432"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.432"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.432"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.444"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.444"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.432"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.432"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.432"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.444", %"class.WTF::Vector.444"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.432"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CSSParserSelectorENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.444"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.432"*, %"class.std::__1::unique_ptr.432"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.432"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.432"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.444"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.444"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.432"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.432"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.432"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.432"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.432"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.432"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CSSParserSelectorENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.65, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.417"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSParserToken"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSParserToken"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.417"* %0, i32 %5) #12
  %14 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSParserToken"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.417"* %0, i32 %5) #12
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSParserToken"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSParserToken"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i8*
  %29 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #12
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.417"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.66, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.62, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %31, align 8
  %33 = icmp eq %"class.blink::CSSParserToken"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.417"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 24
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.417"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.417"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.417"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = icmp eq %"class.blink::CSSParserToken"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::CSSParserToken"*
  %10 = icmp eq %"class.blink::CSSParserToken"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.417"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.417"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %27 = mul nuw nsw i64 %25, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.418"* %19, %"class.blink::CSSParserToken"* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #12
  %33 = udiv i64 %31, 24
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::CSSParserToken"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::CSSParserToken"* %36 to i8*
  %45 = mul nuw nsw i64 %43, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #12
  %46 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::CSSParserToken"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::CSSParserToken"*
  %51 = icmp eq %"class.blink::CSSParserToken"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.418"* %53, %"class.blink::CSSParserToken"* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.417"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.417", %"class.WTF::Vector.417"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.65, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN5blink17CSSParserSelectorC1ERKNS_13QualifiedNameEb(%"class.blink::CSSParserSelector"*, %"class.blink::QualifiedName"* dereferenceable(8), i1 zeroext) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare void @_ZN5blink17CSSParserSelectorC1Ev(%"class.blink::CSSParserSelector"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.274"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.274", %"class.WTF::Vector.274"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.274", %"class.WTF::Vector.274"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %8 = icmp ugt %"class.WTF::AtomicString"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::AtomicString"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.274", %"class.WTF::Vector.274"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::AtomicString"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.274"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::AtomicString"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::AtomicString"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.274"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.274"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %56 = ptrtoint %"class.WTF::AtomicString"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.274", %"class.WTF::Vector.274"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::AtomicString"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.274"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::AtomicString"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::AtomicString"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.274"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.274"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::AtomicString"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::AtomicString"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::AtomicString"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::AtomicString"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::AtomicString"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::AtomicString"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.65, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink14CSSParserToken5ValueEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink14CSSParserToken5ValueEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink14CSSParserToken5ValueEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink14CSSParserToken5ValueEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink14CSSParserToken5ValueEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink14CSSParserToken5ValueEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink14CSSParserToken5ValueEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink14CSSParserToken5ValueEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink17CSSSelectorParser34ConsumeForgivingNestedSelectorListERNS_19CSSParserTokenRangeE: argument 0"}
!31 = distinct !{!31, !"_ZN5blink17CSSSelectorParser34ConsumeForgivingNestedSelectorListERNS_19CSSParserTokenRangeE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blink17CSSSelectorParser34ConsumeForgivingNestedSelectorListERNS_19CSSParserTokenRangeE: argument 0"}
!34 = distinct !{!34, !"_ZN5blink17CSSSelectorParser34ConsumeForgivingNestedSelectorListERNS_19CSSParserTokenRangeE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN5blink17CSSSelectorParser25ConsumeNestedSelectorListERNS_19CSSParserTokenRangeE: argument 0"}
!37 = distinct !{!37, !"_ZN5blink17CSSSelectorParser25ConsumeNestedSelectorListERNS_19CSSParserTokenRangeE"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink14CSSParserToken5ValueEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!43 = distinct !{!43, !"_ZNK5blink14CSSParserToken5ValueEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!46 = distinct !{!46, !"_ZNK5blink14CSSParserToken5ValueEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5blink14CSSParserToken5ValueEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!52 = distinct !{!52, !"_ZNK5blink14CSSParserToken5ValueEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!55 = distinct !{!55, !"_ZNK5blink14CSSParserToken5ValueEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!58 = distinct !{!58, !"_ZNK5blink14CSSParserToken5ValueEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!61 = distinct !{!61, !"_ZNK5blink14CSSParserToken5ValueEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!64 = distinct !{!64, !"_ZNK5blink14CSSParserToken5ValueEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!67 = distinct !{!67, !"_ZNK5blink14CSSParserToken5ValueEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!70 = distinct !{!70, !"_ZNK5blink14CSSParserToken5ValueEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!73 = distinct !{!73, !"_ZNK5blink14CSSParserToken5ValueEv"}
!74 = !{!"branch_weights", i32 1, i32 1048575}
