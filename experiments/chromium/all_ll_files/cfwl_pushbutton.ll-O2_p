; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_pushbutton.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_pushbutton.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_RectF = type { float, float, float, float }
%"class.fxcrt::UnownedPtr.14" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.15" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.3" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::UnownedPtr.16" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type opaque
%"class.fxcrt::UnownedPtr.17" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.7" }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.5", %"class.fxcrt::UnownedPtr.6" }
%"class.fxcrt::UnownedPtr.5" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.6" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr"* }
%class.CFWL_PushButton = type <{ %class.CFWL_Widget, i8, [3 x i8], %class.CFX_RectF, %class.CFX_RectF, [4 x i8] }>
%class.CFWL_App = type opaque
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.16", %"class.fxcrt::UnownedPtr.17" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.14", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.15" }
%class.IFWL_ThemeProvider = type { %"class.cppgc::GarbageCollectedMixin", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.18" }
%"class.cppgc::internal::BasicMember.18" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr.15", %"class.fxcrt::UnownedPtr.15" }
%class.CFWL_MessageMouse = type <{ %class.CFWL_Message, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>
%class.CFX_PTemplate = type { float, float }
%class.CFWL_MessageKey = type <{ %class.CFWL_Message, i32, i32, i32, [4 x i8] }>
%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }
%class.CFWL_EventMouse = type <{ %class.CFWL_Event, i8, [7 x i8] }>
%"class.cppgc::Visitor" = type { i32 (...)** }

@_ZTV15CFWL_PushButton = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)* @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CFWL_PushButton*)* @_ZN15CFWL_PushButtonD2Ev to i8*), i8* bitcast (void (%class.CFWL_PushButton*)* @_ZN15CFWL_PushButtonD0Ev to i8*), i8* bitcast (void (%class.CFWL_PushButton*, %class.CFWL_Message*)* @_ZN15CFWL_PushButton16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CFWL_Widget*, %class.CFWL_Event*)* @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CFWL_PushButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN15CFWL_PushButton12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_Widget*)* @_ZN11CFWL_Widget11PreFinalizeEv to i8*), i8* bitcast (i32 (%class.CFWL_PushButton*)* @_ZNK15CFWL_PushButton10GetClassIDEv to i8*), i8* bitcast (i1 (%class.CFWL_Widget*)* @_ZNK11CFWL_Widget6IsFormEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetClientRectEv to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32, i32)* @_ZN11CFWL_Widget14ModifyStylesExEjj to i8*), i8* bitcast (void (%class.CFWL_PushButton*, i32)* @_ZN15CFWL_PushButton9SetStatesEj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget12RemoveStatesEj to i8*), i8* bitcast (void (%class.CFWL_PushButton*)* @_ZN15CFWL_PushButton6UpdateEv to i8*), i8* bitcast (i32 (%class.CFWL_Widget*, %class.CFX_PTemplate*)* @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CFWL_PushButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN15CFWL_PushButton10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*)] }, align 8
@__const._ZN15CFWL_PushButton12DrawBkgroundEP16CFGAS_GEGraphicsRK10CFX_Matrix.param = private unnamed_addr constant { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.14", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.15" }, %"class.fxcrt::UnownedPtr.16", %"class.fxcrt::UnownedPtr.17" } { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.14", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.15" } { %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_RectF { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::UnownedPtr.14" { %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*) }, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.fxcrt::UnownedPtr.15" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, %"class.fxcrt::UnownedPtr.16" { %class.CFGAS_GEPath* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEPath*) }, %"class.fxcrt::UnownedPtr.17" { %class.CFGAS_GEGraphics* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEGraphics*) } }, align 8

@_ZN15CFWL_PushButtonC1EP8CFWL_App = hidden unnamed_addr alias void (%class.CFWL_PushButton*, %class.CFWL_App*), void (%class.CFWL_PushButton*, %class.CFWL_App*)* @_ZN15CFWL_PushButtonC2EP8CFWL_App
@_ZN15CFWL_PushButtonD1Ev = hidden unnamed_addr alias void (%class.CFWL_PushButton*), void (%class.CFWL_PushButton*)* @_ZN15CFWL_PushButtonD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButtonC2EP8CFWL_App(%class.CFWL_PushButton*, %class.CFWL_App*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.CFWL_Widget::Properties", align 4
  %4 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %5 = bitcast %"class.CFWL_Widget::Properties"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %3, i64 0, i32 0
  store i32 2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %3, i64 0, i32 1
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.CFWL_Widget::Properties", %"class.CFWL_Widget::Properties"* %3, i64 0, i32 2
  store i32 0, i32* %8, align 4
  call void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget* %4, %class.CFWL_App* %1, %"class.CFWL_Widget::Properties"* nonnull dereferenceable(12) %3, %class.CFWL_Widget* null) #6
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #6
  %9 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV15CFWL_PushButton, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 1
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  %12 = bitcast %class.CFX_RectF* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButtonD2Ev(%class.CFWL_PushButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButtonD0Ev(%class.CFWL_PushButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %2) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK15CFWL_PushButton10GetClassIDEv(%class.CFWL_PushButton* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton9SetStatesEj(%class.CFWL_PushButton*, i32) unnamed_addr #0 align 2 {
  %3 = and i32 %1, 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  store i32 4, i32* %6, align 8
  br label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget* %8, i32 %1) #6
  br label %9

9:                                                ; preds = %7, %5
  ret void
}

declare void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton6UpdateEv(%class.CFWL_PushButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %7 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget* %6) #6
  %8 = extractvalue { <2 x float>, <2 x float> } %7, 0
  %9 = extractvalue { <2 x float>, <2 x float> } %7, 1
  %10 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  %11 = bitcast %class.CFX_RectF* %10 to <2 x float>*
  store <2 x float> %8, <2 x float>* %11, align 4
  %12 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 2
  %13 = bitcast float* %12 to <2 x float>*
  store <2 x float> %9, <2 x float>* %13, align 4
  %14 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 4
  %15 = bitcast %class.CFX_RectF* %14 to i8*
  %16 = bitcast %class.CFX_RectF* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 16, i1 false)
  br label %17

17:                                               ; preds = %1, %5
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_PushButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %5, label %45, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget* %7) #6
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget* %7, %class.CFGAS_GEGraphics* nonnull %1, i8 zeroext 3, %class.CFX_Matrix* dereferenceable(24) %2) #6
  br label %10

10:                                               ; preds = %9, %6
  %11 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.14", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.15" }, %"class.fxcrt::UnownedPtr.16", %"class.fxcrt::UnownedPtr.17" }* @__const._ZN15CFWL_PushButton12DrawBkgroundEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #6
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %7, %class.CFGAS_GEGraphics* nonnull %1) #6
  %12 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 2, i8* %12, align 4
  %13 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = shl i32 %14, 1
  %16 = and i32 %15, 32
  %17 = and i32 %14, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %10
  %20 = trunc i32 %14 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = or i32 %16, 1024
  br label %26

24:                                               ; preds = %19
  %25 = and i32 %15, 160
  br label %26

26:                                               ; preds = %24, %22, %10
  %27 = phi i32 [ %25, %24 ], [ %23, %22 ], [ 8, %10 ]
  %28 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 %27, i32* %28, align 8
  %29 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 4 %29, i64 24, i1 false) #6
  %30 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  %31 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %32 = bitcast %class.CFX_RectF* %31 to i8*
  %33 = bitcast %class.CFX_RectF* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %33, i64 16, i1 false) #6
  %34 = and i32 %14, 16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 4
  %38 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 2, i32 0
  store %class.CFX_RectF* %37, %class.CFX_RectF** %38, align 8
  br label %39

39:                                               ; preds = %26, %36
  %40 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %7) #6
  %41 = bitcast %class.IFWL_ThemeProvider* %40 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %42 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %42, i64 3
  %44 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %43, align 8
  call void %44(%class.IFWL_ThemeProvider* %40, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #6
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #6
  br label %45

45:                                               ; preds = %3, %39
  ret void
}

declare zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget*) local_unnamed_addr #2

declare void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget*, %class.CFGAS_GEGraphics*, i8 zeroext, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton12DrawBkgroundEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_PushButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.14", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.15" }, %"class.fxcrt::UnownedPtr.16", %"class.fxcrt::UnownedPtr.17" }* @__const._ZN15CFWL_PushButton12DrawBkgroundEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #6
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 2, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = shl i32 %9, 1
  %11 = and i32 %10, 32
  %12 = and i32 %9, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %3
  %15 = trunc i32 %9 to i8
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = or i32 %11, 1024
  br label %21

19:                                               ; preds = %14
  %20 = and i32 %10, 160
  br label %21

21:                                               ; preds = %3, %17, %19
  %22 = phi i32 [ %20, %19 ], [ %18, %17 ], [ 8, %3 ]
  %23 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 %22, i32* %23, align 8
  %24 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %24, i64 24, i1 false)
  %25 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  %26 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %27 = bitcast %class.CFX_RectF* %26 to i8*
  %28 = bitcast %class.CFX_RectF* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 4 %28, i64 16, i1 false)
  %29 = and i32 %9, 16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 4
  %33 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 2, i32 0
  store %class.CFX_RectF* %32, %class.CFX_RectF** %33, align 8
  br label %34

34:                                               ; preds = %21, %31
  %35 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #6
  %36 = bitcast %class.IFWL_ThemeProvider* %35 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %37 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %37, i64 3
  %39 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %38, align 8
  call void %39(%class.IFWL_ThemeProvider* %35, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #6
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #6
  ret void
}

declare void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN15CFWL_PushButton13GetPartStatesEv(%class.CFWL_PushButton* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = shl i32 %3, 1
  %5 = and i32 %4, 32
  %6 = and i32 %3, 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = trunc i32 %3 to i8
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = or i32 %5, 1024
  br label %15

13:                                               ; preds = %8
  %14 = and i32 %4, 160
  ret i32 %14

15:                                               ; preds = %1, %11
  %16 = phi i32 [ %12, %11 ], [ 8, %1 ]
  ret i32 %16
}

declare %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton16OnProcessMessageEP12CFWL_Message(%class.CFWL_PushButton*, %class.CFWL_Message*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsEnabledEv(%class.CFWL_Widget* %3) #6
  br i1 %4, label %5, label %49

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %44 [
    i32 4, label %8
    i32 1, label %13
    i32 2, label %18
    i32 0, label %37
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = or i32 %10, 16
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %12) #6
  br label %44

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, -17
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %17) #6
  br label %44

18:                                               ; preds = %5
  %19 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouse*
  %20 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %21 = bitcast %class.CFWL_Message* %20 to i8*
  %22 = load i8, i8* %21, align 8
  switch i8 %22, label %44 [
    i8 0, label %23
    i8 1, label %29
    i8 6, label %30
    i8 8, label %31
  ]

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 1
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = or i32 %26, 192
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %28) #6
  br label %44

29:                                               ; preds = %18
  tail call void @_ZN15CFWL_PushButton11OnLButtonUpEP17CFWL_MessageMouse(%class.CFWL_PushButton* %0, %class.CFWL_MessageMouse* %19)
  br label %44

30:                                               ; preds = %18
  tail call void @_ZN15CFWL_PushButton11OnMouseMoveEP17CFWL_MessageMouse(%class.CFWL_PushButton* %0, %class.CFWL_MessageMouse* %19)
  br label %44

31:                                               ; preds = %18
  %32 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 1
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, -193
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %36) #6
  br label %44

37:                                               ; preds = %5
  %38 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %39 = bitcast %class.CFWL_Message* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageKey*
  tail call void @_ZN15CFWL_PushButton9OnKeyDownEP15CFWL_MessageKey(%class.CFWL_PushButton* %0, %class.CFWL_MessageKey* %43)
  br label %44

44:                                               ; preds = %37, %42, %23, %29, %30, %31, %18, %5, %13, %8
  %45 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %46 = load %class.CFWL_Widget*, %class.CFWL_Widget** %45, align 8
  %47 = icmp eq %class.CFWL_Widget* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  tail call void @_ZN11CFWL_Widget16OnProcessMessageEP12CFWL_Message(%class.CFWL_Widget* %3, %class.CFWL_Message* %1) #6
  br label %49

49:                                               ; preds = %44, %2, %48
  ret void
}

declare zeroext i1 @_ZNK11CFWL_Widget9IsEnabledEv(%class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton14OnFocusChangedEP12CFWL_Messageb(%class.CFWL_PushButton*, %class.CFWL_Message* nocapture readnone, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, -17
  %8 = or i32 %6, 16
  %9 = select i1 %2, i32 %8, i32 %7
  store i32 %9, i32* %5, align 8
  %10 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %4, %class.CFX_RectF* dereferenceable(16) %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton13OnLButtonDownEP17CFWL_MessageMouse(%class.CFWL_PushButton*, %class.CFWL_MessageMouse* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 192
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %4, %class.CFX_RectF* dereferenceable(16) %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton11OnLButtonUpEP17CFWL_MessageMouse(%class.CFWL_PushButton*, %class.CFWL_MessageMouse* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFWL_Event, align 8
  %4 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  %6 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %5, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ult float %7, %9
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 2
  %13 = load float, float* %12, align 4
  %14 = fadd float %9, %13
  %15 = fcmp olt float %7, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp ult float %18, %20
  br i1 %21, label %22, label %27

22:                                               ; preds = %16, %11, %2
  %23 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %24 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, -193
  br label %38

27:                                               ; preds = %16
  %28 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 3
  %29 = load float, float* %28, align 4
  %30 = fadd float %20, %29
  %31 = fcmp olt float %18, %30
  %32 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %33 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, -193
  br i1 %31, label %36, label %38

36:                                               ; preds = %27
  %37 = or i32 %35, 64
  br label %38

38:                                               ; preds = %22, %27, %36
  %39 = phi i32* [ %33, %36 ], [ %33, %27 ], [ %24, %22 ]
  %40 = phi %class.CFWL_Widget* [ %32, %36 ], [ %32, %27 ], [ %23, %22 ]
  %41 = phi i32 [ %37, %36 ], [ %35, %27 ], [ %26, %22 ]
  store i32 %41, i32* %39, align 8
  %42 = load float, float* %6, align 4
  %43 = fcmp ult float %42, %9
  br i1 %43, label %62, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 2
  %46 = load float, float* %45, align 4
  %47 = fadd float %9, %46
  %48 = fcmp olt float %42, %47
  br i1 %48, label %49, label %62

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp ult float %51, %53
  br i1 %54, label %62, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 3
  %57 = load float, float* %56, align 4
  %58 = fadd float %53, %57
  %59 = fcmp olt float %51, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = bitcast %class.CFWL_Event* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 32, i1 false)
  call void @_ZN10CFWL_EventC1ENS_4TypeEP11CFWL_Widget(%class.CFWL_Event* nonnull %3, i32 1, %class.CFWL_Widget* %40) #6
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %40, %class.CFWL_Event* nonnull %3) #6
  call void @_ZN10CFWL_EventD1Ev(%class.CFWL_Event* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61) #6
  br label %62

62:                                               ; preds = %38, %44, %49, %60, %55
  call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %40, %class.CFX_RectF* dereferenceable(16) %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton11OnMouseMoveEP17CFWL_MessageMouse(%class.CFWL_PushButton*, %class.CFWL_MessageMouse* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  %7 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fcmp ult float %8, %10
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 2
  %14 = load float, float* %13, align 4
  %15 = fadd float %10, %14
  %16 = fcmp olt float %8, %15
  br i1 %16, label %17, label %28

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %1, i64 0, i32 4, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp ult float %19, %21
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3, i32 3
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = fcmp olt float %19, %26
  br label %28

28:                                               ; preds = %2, %12, %17, %23
  %29 = phi i1 [ false, %17 ], [ false, %12 ], [ false, %2 ], [ %27, %23 ]
  br i1 %5, label %55, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = trunc i32 %32 to i8
  %34 = icmp sgt i8 %33, -1
  br i1 %29, label %35, label %45

35:                                               ; preds = %30
  br i1 %34, label %36, label %38

36:                                               ; preds = %35
  %37 = or i32 %32, 128
  store i32 %37, i32* %31, align 8
  br label %38

38:                                               ; preds = %36, %35
  %39 = phi i32 [ %37, %36 ], [ %32, %35 ]
  %40 = phi i1 [ true, %36 ], [ false, %35 ]
  %41 = and i32 %39, 64
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %63, label %43

43:                                               ; preds = %38
  %44 = and i32 %39, -65
  store i32 %44, i32* %31, align 8
  br label %65

45:                                               ; preds = %30
  br i1 %34, label %48, label %46

46:                                               ; preds = %45
  %47 = and i32 %32, -129
  store i32 %47, i32* %31, align 8
  br label %48

48:                                               ; preds = %45, %46
  %49 = phi i32 [ %47, %46 ], [ %32, %45 ]
  %50 = phi i1 [ true, %46 ], [ false, %45 ]
  %51 = and i32 %49, 64
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = or i32 %49, 64
  store i32 %54, i32* %31, align 8
  br label %65

55:                                               ; preds = %28
  br i1 %29, label %56, label %67

56:                                               ; preds = %55
  %57 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 64
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %56
  %62 = or i32 %58, 64
  store i32 %62, i32* %57, align 8
  br label %65

63:                                               ; preds = %38, %48
  %64 = phi i1 [ %40, %38 ], [ %50, %48 ]
  br i1 %64, label %65, label %67

65:                                               ; preds = %61, %53, %43, %63
  %66 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %66, %class.CFX_RectF* dereferenceable(16) %6) #6
  br label %67

67:                                               ; preds = %63, %65, %56, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton12OnMouseLeaveEP17CFWL_MessageMouse(%class.CFWL_PushButton*, %class.CFWL_MessageMouse* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0, i32 1, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, -193
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 3
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %4, %class.CFX_RectF* dereferenceable(16) %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton9OnKeyDownEP15CFWL_MessageKey(%class.CFWL_PushButton*, %class.CFWL_MessageKey* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFWL_EventMouse, align 8
  %4 = alloca %class.CFWL_Event, align 8
  %5 = getelementptr inbounds %class.CFWL_MessageKey, %class.CFWL_MessageKey* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 13
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = bitcast %class.CFWL_EventMouse* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  %10 = getelementptr inbounds %class.CFWL_PushButton, %class.CFWL_PushButton* %0, i64 0, i32 0
  call void @_ZN15CFWL_EventMouseC1EP11CFWL_WidgetS1_16FWL_MouseCommand(%class.CFWL_EventMouse* nonnull %3, %class.CFWL_Widget* %10, %class.CFWL_Widget* null, i8 zeroext 1) #6
  %11 = getelementptr inbounds %class.CFWL_EventMouse, %class.CFWL_EventMouse* %3, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %10, %class.CFWL_Event* nonnull %11) #6
  %12 = getelementptr inbounds %class.CFWL_EventMouse, %class.CFWL_EventMouse* %3, i64 0, i32 0, i32 2
  %13 = load %class.CFWL_Widget*, %class.CFWL_Widget** %12, align 8
  %14 = icmp eq %class.CFWL_Widget* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %class.CFWL_Event* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  call void @_ZN10CFWL_EventC1ENS_4TypeEP11CFWL_Widget(%class.CFWL_Event* nonnull %4, i32 1, %class.CFWL_Widget* %10) #6
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %10, %class.CFWL_Event* nonnull %4) #6
  call void @_ZN10CFWL_EventD1Ev(%class.CFWL_Event* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  br label %17

17:                                               ; preds = %8, %15
  call void @_ZN15CFWL_EventMouseD1Ev(%class.CFWL_EventMouse* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #6
  br label %18

18:                                               ; preds = %2, %17
  ret void
}

declare void @_ZN11CFWL_Widget16OnProcessMessageEP12CFWL_Message(%class.CFWL_Widget*, %class.CFWL_Message*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CFWL_PushButton12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_PushButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN15CFWL_PushButton10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_PushButton* %0, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* dereferenceable(24) %2)
  ret void
}

declare void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN10CFWL_EventC1ENS_4TypeEP11CFWL_Widget(%class.CFWL_Event*, i32, %class.CFWL_Widget*) unnamed_addr #2

declare void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget*, %class.CFWL_Event*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10CFWL_EventD1Ev(%class.CFWL_Event*) unnamed_addr #3

declare void @_ZN15CFWL_EventMouseC1EP11CFWL_WidgetS1_16FWL_MouseCommand(%class.CFWL_EventMouse*, %class.CFWL_Widget*, %class.CFWL_Widget*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15CFWL_EventMouseD1Ev(%class.CFWL_EventMouse*) unnamed_addr #3

declare void @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE(%class.CFWL_Widget*, %"class.cppgc::Visitor"*) unnamed_addr #2

declare void @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event(%class.CFWL_Widget*, %class.CFWL_Event*) unnamed_addr #2

declare void @_ZN11CFWL_Widget11PreFinalizeEv(%class.CFWL_Widget*) unnamed_addr #2

declare zeroext i1 @_ZNK11CFWL_Widget6IsFormEv(%class.CFWL_Widget*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #2

declare void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget*, i32, i32) unnamed_addr #2

declare void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #2

declare i32 @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE(%class.CFWL_Widget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
