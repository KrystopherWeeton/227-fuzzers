; ModuleID = '../../third_party/fontconfig/src/src/fcptrlist.c'
source_filename = "../../third_party/fontconfig/src/src/fcptrlist.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcPtrList = type { void (i8*)*, %struct._FcPtrListEntry* }
%struct._FcPtrListEntry = type { %struct._FcPtrListEntry*, i8* }
%struct._FcPtrListIter = type { i8*, i8*, i8* }

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct._FcPtrList* @FcPtrListCreate(void (i8*)*) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 16) #6
  %3 = bitcast i8* %2 to %struct._FcPtrList*
  %4 = icmp eq i8* %2, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = bitcast i8* %2 to void (i8*)**
  store void (i8*)* %0, void (i8*)** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to %struct._FcPtrListEntry**
  store %struct._FcPtrListEntry* null, %struct._FcPtrListEntry** %8, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret %struct._FcPtrList* %3
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @FcPtrListDestroy(%struct._FcPtrList*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct._FcPtrList, %struct._FcPtrList* %0, i64 0, i32 1
  %3 = bitcast %struct._FcPtrListEntry** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct._FcPtrList, %struct._FcPtrList* %0, i64 0, i32 0
  br label %6

6:                                                ; preds = %1, %23
  %7 = phi i64 [ %4, %1 ], [ %24, %23 ]
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %6
  %10 = inttoptr i64 %7 to %struct._FcPtrListEntry*
  %11 = getelementptr inbounds %struct._FcPtrListEntry, %struct._FcPtrListEntry* %10, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = load void (i8*)*, void (i8*)** %5, align 8
  tail call void %15(i8* nonnull %12) #6
  br label %16

16:                                               ; preds = %14, %9
  %17 = inttoptr i64 %7 to i64*
  %18 = inttoptr i64 %7 to %struct._FcPtrListEntry*
  %19 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %2, align 8
  %20 = icmp eq %struct._FcPtrListEntry* %19, %18
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = load i64, i64* %17, align 8
  store i64 %22, i64* %3, align 8
  br label %23

23:                                               ; preds = %21, %16
  %24 = load i64, i64* %17, align 8
  %25 = inttoptr i64 %7 to i8*
  tail call void @free(i8* %25) #6
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %6

27:                                               ; preds = %23, %6
  %28 = bitcast %struct._FcPtrList* %0 to i8*
  tail call void @free(i8* %28) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FcPtrListIterInit(%struct._FcPtrList*, %struct._FcPtrListIter* nocapture) local_unnamed_addr #3 {
  %3 = bitcast %struct._FcPtrListIter* %1 to %struct._FcPtrList**
  store %struct._FcPtrList* %0, %struct._FcPtrList** %3, align 8
  %4 = getelementptr inbounds %struct._FcPtrList, %struct._FcPtrList* %0, i64 0, i32 1
  %5 = bitcast %struct._FcPtrListEntry** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 2
  %10 = bitcast i8** %9 to %struct._FcPtrListEntry**
  store %struct._FcPtrListEntry* null, %struct._FcPtrListEntry** %10, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @FcPtrListIterGetValue(%struct._FcPtrList* readnone, %struct._FcPtrListIter* nocapture readonly) local_unnamed_addr #4 {
  %3 = bitcast %struct._FcPtrListIter* %1 to %struct._FcPtrList**
  %4 = load %struct._FcPtrList*, %struct._FcPtrList** %3, align 8
  %5 = icmp eq %struct._FcPtrList* %4, %0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 1
  %8 = bitcast i8** %7 to %struct._FcPtrListEntry**
  %9 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %8, align 8
  %10 = icmp eq %struct._FcPtrListEntry* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct._FcPtrListEntry, %struct._FcPtrListEntry* %9, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  br label %14

14:                                               ; preds = %2, %6, %11
  %15 = phi i8* [ %13, %11 ], [ null, %6 ], [ null, %2 ]
  ret i8* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcPtrListIterRemove(%struct._FcPtrList*, %struct._FcPtrListIter* nocapture) local_unnamed_addr #2 {
  %3 = bitcast %struct._FcPtrListIter* %1 to %struct._FcPtrList**
  %4 = load %struct._FcPtrList*, %struct._FcPtrList** %3, align 8
  %5 = icmp eq %struct._FcPtrList* %4, %0
  br i1 %5, label %6, label %39

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 1
  %8 = bitcast i8** %7 to %struct._FcPtrListEntry**
  %9 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %8, align 8
  %10 = icmp eq %struct._FcPtrListEntry* %9, null
  %11 = bitcast %struct._FcPtrListEntry* %9 to i64*
  br i1 %10, label %39, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct._FcPtrList, %struct._FcPtrList* %0, i64 0, i32 1
  %14 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %13, align 8
  %15 = icmp eq %struct._FcPtrListEntry* %14, %9
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = load i64, i64* %11, align 8
  %18 = bitcast %struct._FcPtrListEntry** %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %8, align 8
  %20 = bitcast %struct._FcPtrListEntry* %19 to i64*
  br label %21

21:                                               ; preds = %16, %12
  %22 = phi i64* [ %20, %16 ], [ %11, %12 ]
  %23 = phi %struct._FcPtrListEntry* [ %19, %16 ], [ %9, %12 ]
  %24 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 2
  %25 = bitcast i8** %24 to %struct._FcPtrListEntry**
  %26 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %25, align 8
  %27 = icmp eq %struct._FcPtrListEntry* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %21
  %29 = bitcast %struct._FcPtrListEntry* %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %struct._FcPtrListEntry* %26 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast i8** %7 to i64**
  %33 = load i64*, i64** %32, align 8
  br label %34

34:                                               ; preds = %21, %28
  %35 = phi i64* [ %33, %28 ], [ %22, %21 ]
  %36 = load i64, i64* %35, align 8
  %37 = bitcast i8** %7 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %struct._FcPtrListEntry* %23 to i8*
  tail call void @free(i8* %38) #6
  br label %39

39:                                               ; preds = %6, %2, %34
  %40 = phi i32 [ 1, %34 ], [ 0, %2 ], [ 1, %6 ]
  ret i32 %40
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FcPtrListIterIsValid(%struct._FcPtrList* readnone, %struct._FcPtrListIter* nocapture readonly) local_unnamed_addr #4 {
  %3 = bitcast %struct._FcPtrListIter* %1 to %struct._FcPtrList**
  %4 = load %struct._FcPtrList*, %struct._FcPtrList** %3, align 8
  %5 = icmp eq %struct._FcPtrList* %4, %0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 1
  %8 = bitcast i8** %7 to %struct._FcPtrListEntry**
  %9 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %8, align 8
  %10 = icmp ne %struct._FcPtrListEntry* %9, null
  %11 = zext i1 %10 to i32
  br label %12

12:                                               ; preds = %6, %2
  %13 = phi i32 [ 0, %2 ], [ %11, %6 ]
  ret i32 %13
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FcPtrListIterInitAtLast(%struct._FcPtrList*, %struct._FcPtrListIter* nocapture) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct._FcPtrList, %struct._FcPtrList* %0, i64 0, i32 1
  br label %4

4:                                                ; preds = %4, %2
  %5 = phi %struct._FcPtrListEntry** [ %3, %2 ], [ %9, %4 ]
  %6 = phi %struct._FcPtrListEntry** [ %3, %2 ], [ %5, %4 ]
  %7 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %5, align 8
  %8 = icmp eq %struct._FcPtrListEntry* %7, null
  %9 = getelementptr inbounds %struct._FcPtrListEntry, %struct._FcPtrListEntry* %7, i64 0, i32 0
  br i1 %8, label %10, label %4

10:                                               ; preds = %4
  %11 = bitcast %struct._FcPtrListIter* %1 to %struct._FcPtrList**
  store %struct._FcPtrList* %0, %struct._FcPtrList** %11, align 8
  %12 = bitcast %struct._FcPtrListEntry** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast %struct._FcPtrListEntry** %6 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 2
  %19 = bitcast i8** %18 to i64*
  store i64 %17, i64* %19, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FcPtrListIterNext(%struct._FcPtrList* readnone, %struct._FcPtrListIter* nocapture) local_unnamed_addr #3 {
  %3 = bitcast %struct._FcPtrListIter* %1 to %struct._FcPtrList**
  %4 = load %struct._FcPtrList*, %struct._FcPtrList** %3, align 8
  %5 = icmp eq %struct._FcPtrList* %4, %0
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 1
  %8 = bitcast i8** %7 to %struct._FcPtrListEntry**
  %9 = bitcast i8** %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 2
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = inttoptr i64 %10 to %struct._FcPtrListEntry*
  %14 = getelementptr inbounds %struct._FcPtrListEntry, %struct._FcPtrListEntry* %13, i64 0, i32 0
  %15 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %14, align 8
  store %struct._FcPtrListEntry* %15, %struct._FcPtrListEntry** %8, align 8
  %16 = icmp ne %struct._FcPtrListEntry* %15, null
  %17 = zext i1 %16 to i32
  br label %18

18:                                               ; preds = %2, %6
  %19 = phi i32 [ %17, %6 ], [ 0, %2 ]
  ret i32 %19
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @FcPtrListIterAdd(%struct._FcPtrList*, %struct._FcPtrListIter* nocapture, i8*) local_unnamed_addr #0 {
  %4 = bitcast %struct._FcPtrListIter* %1 to %struct._FcPtrList**
  %5 = load %struct._FcPtrList*, %struct._FcPtrList** %4, align 8
  %6 = icmp eq %struct._FcPtrList* %5, %0
  br i1 %6, label %7, label %49

7:                                                ; preds = %3
  %8 = tail call noalias i8* @malloc(i64 16) #6
  %9 = icmp eq i8* %8, null
  br i1 %9, label %49, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i8**
  store i8* %2, i8** %12, align 8
  %13 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 1
  %14 = bitcast i8** %13 to %struct._FcPtrListEntry**
  %15 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %14, align 8
  %16 = icmp eq %struct._FcPtrListEntry* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = bitcast %struct._FcPtrListEntry* %15 to i8**
  %19 = bitcast %struct._FcPtrListEntry* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i8* %8 to i64*
  store i64 %20, i64* %21, align 8
  store i8* %8, i8** %18, align 8
  br label %36

22:                                               ; preds = %10
  %23 = bitcast i8* %8 to %struct._FcPtrListEntry**
  store %struct._FcPtrListEntry* null, %struct._FcPtrListEntry** %23, align 8
  %24 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 2
  %25 = bitcast i8** %24 to %struct._FcPtrListEntry**
  %26 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %25, align 8
  %27 = icmp eq %struct._FcPtrListEntry* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %struct._FcPtrListEntry* %26 to i8**
  store i8* %8, i8** %29, align 8
  %30 = bitcast i8** %24 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast i8** %13 to i64*
  store i64 %31, i64* %32, align 8
  br label %36

33:                                               ; preds = %22
  %34 = getelementptr inbounds %struct._FcPtrList, %struct._FcPtrList* %0, i64 0, i32 1
  %35 = bitcast %struct._FcPtrListEntry** %34 to i8**
  store i8* %8, i8** %35, align 8
  store i8* %8, i8** %13, align 8
  br label %49

36:                                               ; preds = %28, %17
  %37 = load %struct._FcPtrList*, %struct._FcPtrList** %4, align 8
  %38 = icmp eq %struct._FcPtrList* %37, %0
  br i1 %38, label %39, label %49

39:                                               ; preds = %36
  %40 = bitcast i8** %13 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct._FcPtrListIter, %struct._FcPtrListIter* %1, i64 0, i32 2
  %43 = bitcast i8** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = inttoptr i64 %41 to %struct._FcPtrListEntry*
  %45 = getelementptr inbounds %struct._FcPtrListEntry, %struct._FcPtrListEntry* %44, i64 0, i32 0
  %46 = load %struct._FcPtrListEntry*, %struct._FcPtrListEntry** %45, align 8
  store %struct._FcPtrListEntry* %46, %struct._FcPtrListEntry** %14, align 8
  %47 = icmp ne %struct._FcPtrListEntry* %46, null
  %48 = zext i1 %47 to i32
  br label %49

49:                                               ; preds = %39, %36, %7, %3, %33
  %50 = phi i32 [ 1, %33 ], [ 0, %3 ], [ 0, %7 ], [ %48, %39 ], [ 0, %36 ]
  ret i32 %50
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
