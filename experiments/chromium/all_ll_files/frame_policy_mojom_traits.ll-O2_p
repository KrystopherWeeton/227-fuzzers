; ModuleID = '../../third_party/blink/common/frame/frame_policy_mojom_traits.cc'
source_filename = "../../third_party/blink/common/frame/frame_policy_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::internal::FramePolicy_Data" = type { %"struct.mojo::internal::StructHeader", i32, i8, [3 x i8], %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.5" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.14, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.16", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.21", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.36" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.23", i8, i8, [6 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.31" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.41" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Map_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.50", %"struct.mojo::internal::Pointer.51" }
%"struct.mojo::internal::Pointer.50" = type { i64 }
%"struct.mojo::internal::Pointer.51" = type { i64 }
%"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data" = type { %"struct.mojo::internal::StructHeader", i32, i8, [3 x i8], %"struct.mojo::internal::Pointer.48" }
%"struct.mojo::internal::Pointer.48" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.blink::PolicyValue"*, %"class.blink::PolicyValue"*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::PolicyValue"* }
%"class.mojo::internal::Array_Data.66" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::Array_Data.67" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.blink::mojom::internal::PolicyValue_Data" = type { i32, i32, %"union.blink::mojom::internal::PolicyValue_Data::Union_" }
%"union.blink::mojom::internal::PolicyValue_Data::Union_" = type { double }
%"struct.std::__1::__temp_value" = type { %"struct.std::__1::aligned_storage<32, 8>::type", %"class.std::__1::allocator.46"* }
%"struct.std::__1::aligned_storage<32, 8>::type" = type { [32 x i8] }
%"class.std::__1::allocator.46" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::allocator.46"* }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom42ParsedPermissionsPolicyDeclarationDataViewEEENSt3__16vectorINS3_34ParsedPermissionsPolicyDeclarationENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal39ParsedPermissionsPolicyDeclaration_DataEEEEEPSC_PNS_7MessageE = comdat any

$_ZN4mojo8internal10SerializerINS_11MapDataViewIN5blink5mojom21DocumentPolicyFeatureENS4_19PolicyValueDataViewEEEN4base8flat_mapIS5_NS3_11PolicyValueENSt3__14lessIvEENSB_6vectorINSB_4pairIS5_SA_EENSB_9allocatorISG_EEEEEEE11DeserializeEPNS0_8Map_DataIiNS4_8internal16PolicyValue_DataEEEPSK_PNS_7MessageE = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom19PolicyValueDataViewEEENSt3__16vectorINS3_11PolicyValueENS7_9allocatorIS9_EEEENS0_14MapValueReaderIN4base8flat_mapINS4_21DocumentPolicyFeatureES9_NS7_4lessIvEENS8_INS7_4pairISG_S9_EENSA_ISK_EEEEEEEEvE19DeserializeElementsEPNS0_10Array_DataINS4_8internal16PolicyValue_DataEEEPSC_PNS_7MessageE = comdat any

$_ZNSt3__16vectorINS_4pairIN5blink5mojom21DocumentPolicyFeatureENS2_11PolicyValueEEENS_9allocatorIS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSB_IPKS6_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN5blink5mojom21DocumentPolicyFeatureENS2_11PolicyValueEEERNS_9allocatorIS6_EEE12emplace_backIJS6_EEEvDpOT_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom19FramePolicyDataViewENS1_11FramePolicyEE4ReadES3_PS4_(%"class.blink::mojom::internal::FramePolicy_Data"*, %"class.mojo::Message"*, %"struct.blink::FramePolicy"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::internal::FramePolicy_Data", %"class.blink::mojom::internal::FramePolicy_Data"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 0, i32 4
  store i8 %6, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::mojom::internal::FramePolicy_Data", %"class.blink::mojom::internal::FramePolicy_Data"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 1
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"class.blink::mojom::internal::FramePolicy_Data", %"class.blink::mojom::internal::FramePolicy_Data"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %27

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %11, i64 0, i32 0, i32 0
  %18 = load %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"** %17, align 8
  %19 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 0, i32 2, i32 0, i32 1
  %20 = load %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"** %19, align 8
  %21 = icmp eq %"struct.blink::ParsedPermissionsPolicyDeclaration"* %20, %18
  br i1 %21, label %26, label %22

22:                                               ; preds = %16, %22
  %23 = phi %"struct.blink::ParsedPermissionsPolicyDeclaration"* [ %24, %22 ], [ %20, %16 ]
  %24 = getelementptr inbounds %"struct.blink::ParsedPermissionsPolicyDeclaration", %"struct.blink::ParsedPermissionsPolicyDeclaration"* %23, i64 -1
  tail call void @_ZN5blink34ParsedPermissionsPolicyDeclarationD1Ev(%"struct.blink::ParsedPermissionsPolicyDeclaration"* %24) #8
  %25 = icmp eq %"struct.blink::ParsedPermissionsPolicyDeclaration"* %24, %18
  br i1 %25, label %26, label %22

26:                                               ; preds = %22, %16
  store %"struct.blink::ParsedPermissionsPolicyDeclaration"* %18, %"struct.blink::ParsedPermissionsPolicyDeclaration"** %19, align 8
  br label %32

27:                                               ; preds = %3
  %28 = bitcast %"struct.mojo::internal::Pointer"* %12 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %14
  %30 = bitcast i8* %29 to %"class.mojo::internal::Array_Data"*
  %31 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom42ParsedPermissionsPolicyDeclarationDataViewEEENSt3__16vectorINS3_34ParsedPermissionsPolicyDeclarationENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal39ParsedPermissionsPolicyDeclaration_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %30, %"class.std::__1::vector.21"* %11, %"class.mojo::Message"* %1) #8
  br i1 %31, label %32, label %43

32:                                               ; preds = %26, %27
  %33 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 0, i32 3
  %34 = getelementptr inbounds %"class.blink::mojom::internal::FramePolicy_Data", %"class.blink::mojom::internal::FramePolicy_Data"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %34, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  %38 = bitcast %"struct.mojo::internal::Pointer.0"* %34 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  %40 = bitcast i8* %39 to %"class.mojo::internal::Map_Data"*
  %41 = select i1 %37, %"class.mojo::internal::Map_Data"* null, %"class.mojo::internal::Map_Data"* %40
  %42 = tail call zeroext i1 @_ZN4mojo8internal10SerializerINS_11MapDataViewIN5blink5mojom21DocumentPolicyFeatureENS4_19PolicyValueDataViewEEEN4base8flat_mapIS5_NS3_11PolicyValueENSt3__14lessIvEENSB_6vectorINSB_4pairIS5_SA_EENSB_9allocatorISG_EEEEEEE11DeserializeEPNS0_8Map_DataIiNS4_8internal16PolicyValue_DataEEEPSK_PNS_7MessageE(%"class.mojo::internal::Map_Data"* %41, %"class.base::flat_map"* %33, %"class.mojo::Message"* %1) #8
  br label %43

43:                                               ; preds = %32, %27
  %44 = phi i1 [ false, %27 ], [ %42, %32 ]
  ret i1 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom42ParsedPermissionsPolicyDeclarationDataViewEEENSt3__16vectorINS3_34ParsedPermissionsPolicyDeclarationENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal39ParsedPermissionsPolicyDeclaration_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.std::__1::vector.21"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.blink::ParsedPermissionsPolicyDeclaration"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.21"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 40
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 40
  %19 = tail call i8* @_Znwm(i64 %18) #9
  %20 = bitcast i8* %19 to %"struct.blink::ParsedPermissionsPolicyDeclaration"*
  %21 = getelementptr inbounds %"struct.blink::ParsedPermissionsPolicyDeclaration", %"struct.blink::ParsedPermissionsPolicyDeclaration"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"struct.blink::ParsedPermissionsPolicyDeclaration"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN5blink34ParsedPermissionsPolicyDeclarationC1Ev(%"struct.blink::ParsedPermissionsPolicyDeclaration"* %24) #8
  %25 = getelementptr inbounds %"struct.blink::ParsedPermissionsPolicyDeclaration", %"struct.blink::ParsedPermissionsPolicyDeclaration"* %24, i64 1
  %26 = icmp eq %"struct.blink::ParsedPermissionsPolicyDeclaration"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.blink::ParsedPermissionsPolicyDeclaration"* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.blink::ParsedPermissionsPolicyDeclaration"** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %"struct.blink::ParsedPermissionsPolicyDeclaration"*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %"struct.blink::ParsedPermissionsPolicyDeclaration"*
  br i1 %39, label %49, label %41

41:                                               ; preds = %31
  %42 = icmp eq %"struct.blink::ParsedPermissionsPolicyDeclaration"* %40, %38
  br i1 %42, label %47, label %43

43:                                               ; preds = %41, %43
  %44 = phi %"struct.blink::ParsedPermissionsPolicyDeclaration"* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %"struct.blink::ParsedPermissionsPolicyDeclaration", %"struct.blink::ParsedPermissionsPolicyDeclaration"* %44, i64 -1
  tail call void @_ZN5blink34ParsedPermissionsPolicyDeclarationD1Ev(%"struct.blink::ParsedPermissionsPolicyDeclaration"* %45) #8
  %46 = icmp eq %"struct.blink::ParsedPermissionsPolicyDeclaration"* %45, %38
  br i1 %46, label %47, label %43

47:                                               ; preds = %43, %41
  %48 = inttoptr i64 %35 to i8*
  tail call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %3, %47, %31
  %50 = load i32, i32* %4, align 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  %54 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %1, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %52, %74
  %56 = phi i32 [ %50, %52 ], [ %75, %74 ]
  %57 = phi i64 [ 0, %52 ], [ %64, %74 ]
  %58 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %53, i64 %57
  %59 = bitcast %"class.mojo::internal::Array_Data"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  %62 = bitcast %"class.mojo::internal::Array_Data"* %58 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %60
  %64 = add nuw nsw i64 %57, 1
  %65 = icmp eq i8* %63, null
  %66 = or i1 %61, %65
  br i1 %66, label %74, label %67

67:                                               ; preds = %55
  %68 = bitcast i8* %63 to %"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data"*
  %69 = load %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"** %54, align 8
  %70 = getelementptr inbounds %"struct.blink::ParsedPermissionsPolicyDeclaration", %"struct.blink::ParsedPermissionsPolicyDeclaration"* %69, i64 %57
  %71 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom42ParsedPermissionsPolicyDeclarationDataViewENS1_34ParsedPermissionsPolicyDeclarationEE4ReadES3_PS4_(%"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data"* nonnull %68, %"class.mojo::Message"* %2, %"struct.blink::ParsedPermissionsPolicyDeclaration"* %70) #8
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = load i32, i32* %4, align 1
  br label %74

74:                                               ; preds = %72, %55
  %75 = phi i32 [ %73, %72 ], [ %56, %55 ]
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %64, %76
  br i1 %77, label %55, label %78

78:                                               ; preds = %74, %67, %49
  %79 = phi i1 [ true, %49 ], [ false, %67 ], [ true, %74 ]
  ret i1 %79
}

; Function Attrs: nounwind
declare void @_ZN5blink34ParsedPermissionsPolicyDeclarationD1Ev(%"struct.blink::ParsedPermissionsPolicyDeclaration"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN5blink34ParsedPermissionsPolicyDeclarationC1Ev(%"struct.blink::ParsedPermissionsPolicyDeclaration"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom42ParsedPermissionsPolicyDeclarationDataViewENS1_34ParsedPermissionsPolicyDeclarationEE4ReadES3_PS4_(%"class.blink::mojom::internal::ParsedPermissionsPolicyDeclaration_Data"*, %"class.mojo::Message"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal10SerializerINS_11MapDataViewIN5blink5mojom21DocumentPolicyFeatureENS4_19PolicyValueDataViewEEEN4base8flat_mapIS5_NS3_11PolicyValueENSt3__14lessIvEENSB_6vectorINSB_4pairIS5_SA_EENSB_9allocatorISG_EEEEEEE11DeserializeEPNS0_8Map_DataIiNS4_8internal16PolicyValue_DataEEEPSK_PNS_7MessageE(%"class.mojo::internal::Map_Data"*, %"class.base::flat_map"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = alloca %"class.std::__1::vector.59", align 8
  %6 = icmp eq %"class.mojo::internal::Map_Data"* %0, null
  br i1 %6, label %132, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.std::__1::vector.59"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #8
  %11 = getelementptr inbounds %"class.mojo::internal::Map_Data", %"class.mojo::internal::Map_Data"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.mojo::internal::Pointer.50", %"struct.mojo::internal::Pointer.50"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = bitcast %"struct.mojo::internal::Pointer.50"* %11 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %13
  %17 = bitcast i8* %16 to %"class.mojo::internal::Array_Data.66"*
  %18 = select i1 %14, %"class.mojo::internal::Array_Data.66"* null, %"class.mojo::internal::Array_Data.66"* %17
  %19 = getelementptr inbounds %"class.mojo::internal::Array_Data.66", %"class.mojo::internal::Array_Data.66"* %18, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 1
  %21 = zext i32 %20 to i64
  %22 = icmp eq i32 %20, 0
  br i1 %22, label %47, label %23

23:                                               ; preds = %7
  %24 = shl nuw nsw i64 %21, 2
  %25 = tail call i8* @_Znwm(i64 %24) #9
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds i32, i32* %26, i64 %21
  %28 = ptrtoint i8* %25 to i64
  %29 = add nsw i64 %21, -1
  %30 = getelementptr i32, i32* %26, i64 %29
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 4, %28
  %33 = add i64 %32, %31
  %34 = and i64 %33, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 0, i64 %34, i1 false) #8
  %35 = ptrtoint i32* %27 to i64
  %36 = getelementptr inbounds %"class.mojo::internal::Array_Data.66", %"class.mojo::internal::Array_Data.66"* %18, i64 1, i32 0, i32 0
  %37 = bitcast i8* %25 to i32*
  %38 = load i32, i32* %19, align 1
  %39 = zext i32 %38 to i64
  br label %40

40:                                               ; preds = %40, %23
  %41 = phi i64 [ 0, %23 ], [ %43, %40 ]
  %42 = getelementptr inbounds i32, i32* %36, i64 %41
  %43 = add nuw nsw i64 %41, 1
  %44 = getelementptr inbounds i32, i32* %37, i64 %41
  %45 = load i32, i32* %42, align 4
  store i32 %45, i32* %44, align 4
  %46 = icmp ult i64 %43, %39
  br i1 %46, label %40, label %47

47:                                               ; preds = %40, %7
  %48 = phi i64 [ 0, %7 ], [ %35, %40 ]
  %49 = phi i64 [ 0, %7 ], [ %28, %40 ]
  %50 = getelementptr inbounds %"class.mojo::internal::Map_Data", %"class.mojo::internal::Map_Data"* %0, i64 0, i32 2
  %51 = getelementptr inbounds %"struct.mojo::internal::Pointer.51", %"struct.mojo::internal::Pointer.51"* %50, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  %54 = bitcast %"struct.mojo::internal::Pointer.51"* %50 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 %52
  %56 = bitcast i8* %55 to %"class.mojo::internal::Array_Data.67"*
  %57 = select i1 %53, %"class.mojo::internal::Array_Data.67"* null, %"class.mojo::internal::Array_Data.67"* %56
  %58 = call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom19PolicyValueDataViewEEENSt3__16vectorINS3_11PolicyValueENS7_9allocatorIS9_EEEENS0_14MapValueReaderIN4base8flat_mapINS4_21DocumentPolicyFeatureES9_NS7_4lessIvEENS8_INS7_4pairISG_S9_EENSA_ISK_EEEEEEEEvE19DeserializeElementsEPNS0_10Array_DataINS4_8internal16PolicyValue_DataEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.67"* %57, %"class.std::__1::vector.59"* nonnull %5, %"class.mojo::Message"* %2)
  br i1 %58, label %59, label %120

59:                                               ; preds = %47
  %60 = sub i64 %48, %49
  %61 = ashr exact i64 %60, 2
  %62 = bitcast %"class.base::flat_map"* %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::pair"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = icmp eq i64 %60, 0
  br i1 %66, label %120, label %67

67:                                               ; preds = %59
  %68 = inttoptr i64 %63 to %"struct.std::__1::pair"*
  %69 = inttoptr i64 %49 to i32*
  %70 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 2
  %73 = bitcast %"class.blink::PolicyValue"* %72 to i8*
  %74 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0
  br label %76

76:                                               ; preds = %117, %67
  %77 = phi i64 [ %63, %67 ], [ %119, %117 ]
  %78 = phi %"struct.std::__1::pair"* [ %68, %67 ], [ %118, %117 ]
  %79 = phi i64 [ 0, %67 ], [ %115, %117 ]
  %80 = getelementptr inbounds i32, i32* %69, i64 %79
  %81 = load %"class.blink::PolicyValue"*, %"class.blink::PolicyValue"** %9, align 8
  %82 = getelementptr inbounds %"class.blink::PolicyValue", %"class.blink::PolicyValue"* %81, i64 %79
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #8
  %83 = load i32, i32* %80, align 4
  store i32 %83, i32* %71, align 8
  %84 = bitcast %"class.blink::PolicyValue"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %84, i64 24, i1 false) #8
  %85 = ptrtoint %"struct.std::__1::pair"* %78 to i64
  %86 = sub i64 %77, %85
  %87 = icmp eq i64 %86, 0
  %88 = inttoptr i64 %77 to %"struct.std::__1::pair"*
  br i1 %87, label %105, label %89

89:                                               ; preds = %76
  %90 = ashr exact i64 %86, 5
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi %"struct.std::__1::pair"* [ %78, %89 ], [ %103, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %102, %91 ]
  %94 = lshr i64 %93, 1
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 %94
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, %83
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 1
  %100 = xor i64 %94, -1
  %101 = add i64 %93, %100
  %102 = select i1 %98, i64 %101, i64 %94
  %103 = select i1 %98, %"struct.std::__1::pair"* %99, %"struct.std::__1::pair"* %92
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %105, label %91

105:                                              ; preds = %91, %76
  %106 = phi %"struct.std::__1::pair"* [ %78, %76 ], [ %103, %91 ]
  %107 = icmp eq %"struct.std::__1::pair"* %106, %88
  br i1 %107, label %112, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp slt i32 %83, %110
  br i1 %111, label %112, label %114

112:                                              ; preds = %108, %105
  %113 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN5blink5mojom21DocumentPolicyFeatureENS2_11PolicyValueEEENS_9allocatorIS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSB_IPKS6_EEDpOT_(%"class.std::__1::vector.41"* %75, %"struct.std::__1::pair"* %106, %"struct.std::__1::pair"* nonnull dereferenceable(32) %4) #8
  br label %114

114:                                              ; preds = %112, %108
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #8
  %115 = add nuw i64 %79, 1
  %116 = icmp ult i64 %115, %61
  br i1 %116, label %117, label %120

117:                                              ; preds = %114
  %118 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %74, align 8
  %119 = load i64, i64* %65, align 8
  br label %76

120:                                              ; preds = %114, %59, %47
  %121 = phi i1 [ false, %47 ], [ true, %59 ], [ true, %114 ]
  %122 = load %"class.blink::PolicyValue"*, %"class.blink::PolicyValue"** %9, align 8
  %123 = icmp eq %"class.blink::PolicyValue"* %122, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = ptrtoint %"class.blink::PolicyValue"* %122 to i64
  %126 = bitcast %"class.blink::PolicyValue"** %10 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"class.blink::PolicyValue"* %122 to i8*
  call void @_ZdlPv(i8* %127) #9
  br label %128

128:                                              ; preds = %120, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  %129 = icmp eq i64 %49, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = inttoptr i64 %49 to i8*
  call void @_ZdlPv(i8* %131) #9
  br label %132

132:                                              ; preds = %130, %128, %3
  %133 = phi i1 [ true, %3 ], [ %121, %128 ], [ %121, %130 ]
  ret i1 %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom19PolicyValueDataViewEEENSt3__16vectorINS3_11PolicyValueENS7_9allocatorIS9_EEEENS0_14MapValueReaderIN4base8flat_mapINS4_21DocumentPolicyFeatureES9_NS7_4lessIvEENS8_INS7_4pairISG_S9_EENSA_ISK_EEEEEEEEvE19DeserializeElementsEPNS0_10Array_DataINS4_8internal16PolicyValue_DataEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.67"*, %"class.std::__1::vector.59"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.67", %"class.mojo::internal::Array_Data.67"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.blink::PolicyValue"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.59"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 24
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %39, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 24
  %19 = tail call i8* @_Znwm(i64 %18) #9
  %20 = bitcast i8* %19 to %"class.blink::PolicyValue"*
  %21 = getelementptr inbounds %"class.blink::PolicyValue", %"class.blink::PolicyValue"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"class.blink::PolicyValue"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN5blink11PolicyValueC1Ev(%"class.blink::PolicyValue"* %24) #8
  %25 = getelementptr inbounds %"class.blink::PolicyValue", %"class.blink::PolicyValue"* %24, i64 1
  %26 = icmp eq %"class.blink::PolicyValue"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"class.blink::PolicyValue"* %21 to i64
  %29 = load i64, i64* %10, align 8
  br label %30

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %32 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %32, i64* %10, align 8
  store i64 %31, i64* %8, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.blink::PolicyValue"** %34 to i64*
  store i64 %31, i64* %35, align 8
  %36 = icmp eq i64 %33, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %38) #9
  br label %39

39:                                               ; preds = %3, %37, %30
  %40 = load i32, i32* %4, align 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %66, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.mojo::internal::Array_Data.67", %"class.mojo::internal::Array_Data.67"* %0, i64 1
  %44 = bitcast %"class.mojo::internal::Array_Data.67"* %43 to %"class.blink::mojom::internal::PolicyValue_Data"*
  %45 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %42, %62
  %47 = phi i32 [ %40, %42 ], [ %63, %62 ]
  %48 = phi i64 [ 0, %42 ], [ %50, %62 ]
  %49 = getelementptr inbounds %"class.blink::mojom::internal::PolicyValue_Data", %"class.blink::mojom::internal::PolicyValue_Data"* %44, i64 %48
  %50 = add nuw nsw i64 %48, 1
  %51 = load %"class.blink::PolicyValue"*, %"class.blink::PolicyValue"** %45, align 8
  %52 = getelementptr inbounds %"class.blink::PolicyValue", %"class.blink::PolicyValue"* %51, i64 %48
  %53 = icmp eq %"class.blink::mojom::internal::PolicyValue_Data"* %49, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::mojom::internal::PolicyValue_Data", %"class.blink::mojom::internal::PolicyValue_Data"* %49, i64 0, i32 0
  %56 = load i32, i32* %55, align 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN5blink5mojom19PolicyValueDataViewENS1_11PolicyValueEE4ReadES3_PS4_(%"class.blink::mojom::internal::PolicyValue_Data"* nonnull %49, %"class.blink::PolicyValue"* %52) #8
  br i1 %59, label %60, label %66

60:                                               ; preds = %58
  %61 = load i32, i32* %4, align 1
  br label %62

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ %61, %60 ], [ %47, %54 ], [ %47, %46 ]
  %64 = zext i32 %63 to i64
  %65 = icmp ult i64 %50, %64
  br i1 %65, label %46, label %66

66:                                               ; preds = %62, %58, %39
  %67 = phi i1 [ true, %39 ], [ false, %58 ], [ true, %62 ]
  ret i1 %67
}

declare void @_ZN5blink11PolicyValueC1Ev(%"class.blink::PolicyValue"*) unnamed_addr #6

declare zeroext i1 @_ZN4mojo11UnionTraitsIN5blink5mojom19PolicyValueDataViewENS1_11PolicyValueEE4ReadES3_PS4_(%"class.blink::mojom::internal::PolicyValue_Data"*, %"class.blink::PolicyValue"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN5blink5mojom21DocumentPolicyFeatureENS2_11PolicyValueEEENS_9allocatorIS6_EEE7emplaceIJS6_EEENS_11__wrap_iterIPS6_EENSB_IPKS6_EEDpOT_(%"class.std::__1::vector.41"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = alloca %"struct.std::__1::__temp_value", align 8
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair"* %11 to i64
  br i1 %12, label %15, label %108

15:                                               ; preds = %3
  %16 = icmp eq %"struct.std::__1::pair"* %9, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %19 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false) #8
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %21 = ptrtoint %"struct.std::__1::pair"* %20 to i64
  %22 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %21, i64* %22, align 8
  br label %256

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 1
  %27 = bitcast %"class.std::__1::allocator.46"** %26 to %"class.std::__1::__compressed_pair.43"**
  store %"class.std::__1::__compressed_pair.43"* %25, %"class.std::__1::__compressed_pair.43"** %27, align 8
  %28 = bitcast %"struct.std::__1::pair"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %28, i64 32, i1 false) #8
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %30 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  %31 = sub i64 %13, %30
  %32 = ashr exact i64 %31, 5
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %32
  %34 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %35 = icmp ult %"struct.std::__1::pair"* %33, %9
  br i1 %35, label %36, label %65

36:                                               ; preds = %23
  %37 = sub nsw i64 0, %32
  %38 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %37, i32 0
  %39 = bitcast i32* %38 to i8*
  %40 = xor i64 %4, -1
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 5
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %36, %47
  %48 = phi %"struct.std::__1::pair"* [ %54, %47 ], [ %9, %36 ]
  %49 = phi %"struct.std::__1::pair"* [ %53, %47 ], [ %33, %36 ]
  %50 = phi i64 [ %55, %47 ], [ %45, %36 ]
  %51 = bitcast %"struct.std::__1::pair"* %48 to i8*
  %52 = bitcast %"struct.std::__1::pair"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 32, i1 false) #8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 1
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 1
  %55 = add i64 %50, -1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %47, !llvm.loop !2

57:                                               ; preds = %47, %36
  %58 = phi %"struct.std::__1::pair"* [ %9, %36 ], [ %54, %47 ]
  %59 = phi %"struct.std::__1::pair"* [ %33, %36 ], [ %53, %47 ]
  %60 = phi %"struct.std::__1::pair"* [ undef, %36 ], [ %54, %47 ]
  %61 = icmp ult i8* %41, inttoptr (i64 96 to i8*)
  br i1 %61, label %62, label %80

62:                                               ; preds = %80, %57
  %63 = phi %"struct.std::__1::pair"* [ %60, %57 ], [ %98, %80 ]
  %64 = ptrtoint %"struct.std::__1::pair"* %63 to i64
  br label %65

65:                                               ; preds = %62, %23
  %66 = phi i64 [ %64, %62 ], [ %13, %23 ]
  store i64 %66, i64* %34, align 8
  %67 = icmp eq i64 %31, 0
  br i1 %67, label %100, label %68

68:                                               ; preds = %65, %68
  %69 = phi %"struct.std::__1::pair"* [ %72, %68 ], [ %9, %65 ]
  %70 = phi %"struct.std::__1::pair"* [ %71, %68 ], [ %33, %65 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 -1
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 -1
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 0
  store i32 %74, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 -1, i32 2
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 -1, i32 2
  %78 = tail call dereferenceable(24) %"class.blink::PolicyValue"* @_ZN5blink11PolicyValueaSERKS0_(%"class.blink::PolicyValue"* %77, %"class.blink::PolicyValue"* dereferenceable(24) %76) #8
  %79 = icmp eq %"struct.std::__1::pair"* %71, %1
  br i1 %79, label %100, label %68

80:                                               ; preds = %57, %80
  %81 = phi %"struct.std::__1::pair"* [ %98, %80 ], [ %58, %57 ]
  %82 = phi %"struct.std::__1::pair"* [ %97, %80 ], [ %59, %57 ]
  %83 = bitcast %"struct.std::__1::pair"* %81 to i8*
  %84 = bitcast %"struct.std::__1::pair"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 32, i1 false) #8
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %82, i64 1
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %81, i64 1
  %87 = bitcast %"struct.std::__1::pair"* %86 to i8*
  %88 = bitcast %"struct.std::__1::pair"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 32, i1 false) #8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %82, i64 2
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %81, i64 2
  %91 = bitcast %"struct.std::__1::pair"* %90 to i8*
  %92 = bitcast %"struct.std::__1::pair"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 32, i1 false) #8
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %82, i64 3
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %81, i64 3
  %95 = bitcast %"struct.std::__1::pair"* %94 to i8*
  %96 = bitcast %"struct.std::__1::pair"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 32, i1 false) #8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %82, i64 4
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %81, i64 4
  %99 = icmp ult %"struct.std::__1::pair"* %97, %9
  br i1 %99, label %80, label %62

100:                                              ; preds = %68, %65
  %101 = bitcast %"struct.std::__1::__temp_value"* %5 to i32*
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  store i32 %102, i32* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 8
  %105 = bitcast i8* %104 to %"class.blink::PolicyValue"*
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 2
  %107 = call dereferenceable(24) %"class.blink::PolicyValue"* @_ZN5blink11PolicyValueaSERKS0_(%"class.blink::PolicyValue"* %106, %"class.blink::PolicyValue"* dereferenceable(24) %105) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #8
  br label %256

108:                                              ; preds = %3
  %109 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 2
  %110 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #8
  %111 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %112 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %114 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %116 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %117 = bitcast %"class.std::__1::vector.41"* %0 to i64*
  %118 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 40, i1 false)
  %119 = load i64, i64* %117, align 8
  %120 = sub i64 %13, %119
  %121 = ashr exact i64 %120, 5
  %122 = add nsw i64 %121, 1
  %123 = icmp ugt i64 %122, 576460752303423487
  br i1 %123, label %124, label %126

124:                                              ; preds = %108
  %125 = bitcast %"class.std::__1::vector.41"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %125) #10
  unreachable

126:                                              ; preds = %108
  %127 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %128 = sub i64 %14, %119
  %129 = ashr exact i64 %128, 5
  %130 = icmp ult i64 %129, 288230376151711743
  br i1 %130, label %135, label %131

131:                                              ; preds = %126
  %132 = sub i64 %4, %119
  %133 = ashr exact i64 %132, 5
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %114, align 8
  %134 = bitcast %"class.std::__1::allocator.46"** %115 to %"class.std::__1::__compressed_pair.43"**
  store %"class.std::__1::__compressed_pair.43"* %109, %"class.std::__1::__compressed_pair.43"** %134, align 8
  br label %146

135:                                              ; preds = %126
  %136 = ashr exact i64 %128, 4
  %137 = icmp ult i64 %136, %122
  %138 = select i1 %137, i64 %122, i64 %136
  %139 = sub i64 %4, %119
  %140 = ashr exact i64 %139, 5
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %114, align 8
  %141 = bitcast %"class.std::__1::allocator.46"** %115 to %"class.std::__1::__compressed_pair.43"**
  store %"class.std::__1::__compressed_pair.43"* %109, %"class.std::__1::__compressed_pair.43"** %141, align 8
  %142 = icmp eq i64 %138, 0
  br i1 %142, label %152, label %143

143:                                              ; preds = %135
  %144 = icmp ugt i64 %138, 576460752303423487
  br i1 %144, label %145, label %146

145:                                              ; preds = %143
  tail call void @abort() #10
  unreachable

146:                                              ; preds = %131, %143
  %147 = phi i64 [ 576460752303423487, %131 ], [ %138, %143 ]
  %148 = phi i64 [ %133, %131 ], [ %140, %143 ]
  %149 = shl i64 %147, 5
  %150 = tail call i8* @_Znwm(i64 %149) #9
  %151 = bitcast i8* %150 to %"struct.std::__1::pair"*
  br label %152

152:                                              ; preds = %135, %146
  %153 = phi i64 [ %148, %146 ], [ %140, %135 ]
  %154 = phi i64 [ %147, %146 ], [ 0, %135 ]
  %155 = phi %"struct.std::__1::pair"* [ %151, %146 ], [ null, %135 ]
  store %"struct.std::__1::pair"* %155, %"struct.std::__1::pair"** %111, align 8
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %155, i64 %153
  store %"struct.std::__1::pair"* %156, %"struct.std::__1::pair"** %113, align 8
  store %"struct.std::__1::pair"* %156, %"struct.std::__1::pair"** %112, align 8
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %155, i64 %154
  store %"struct.std::__1::pair"* %157, %"struct.std::__1::pair"** %114, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN5blink5mojom21DocumentPolicyFeatureENS2_11PolicyValueEEERNS_9allocatorIS6_EEE12emplace_backIJS6_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, %"struct.std::__1::pair"* dereferenceable(32) %2)
  %158 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %112, align 8
  %159 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %160 = ptrtoint %"struct.std::__1::pair"* %159 to i64
  %161 = sub i64 %4, %160
  %162 = ashr exact i64 %161, 5
  %163 = sub nsw i64 0, %162
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 %163
  store %"struct.std::__1::pair"* %164, %"struct.std::__1::pair"** %112, align 8
  %165 = icmp sgt i64 %161, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %152
  %167 = bitcast %"struct.std::__1::pair"* %164 to i8*
  %168 = bitcast %"struct.std::__1::pair"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 %161, i1 false) #8
  br label %169

169:                                              ; preds = %166, %152
  %170 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %171 = icmp eq %"struct.std::__1::pair"* %170, %1
  br i1 %171, label %172, label %176

172:                                              ; preds = %169
  %173 = ptrtoint %"struct.std::__1::pair"* %170 to i64
  %174 = bitcast %"struct.std::__1::pair"** %113 to i64*
  %175 = load i64, i64* %174, align 8
  br label %230

176:                                              ; preds = %169
  %177 = bitcast %"struct.std::__1::pair"** %113 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %170, i64 -1, i32 0
  %180 = ptrtoint i32* %179 to i64
  %181 = sub i64 %180, %4
  %182 = lshr i64 %181, 5
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 3
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %199, label %186

186:                                              ; preds = %176, %186
  %187 = phi i8* [ %194, %186 ], [ %178, %176 ]
  %188 = phi %"struct.std::__1::pair"* [ %191, %186 ], [ %1, %176 ]
  %189 = phi i64 [ %195, %186 ], [ %184, %176 ]
  %190 = bitcast %"struct.std::__1::pair"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %190, i64 32, i1 false) #8
  %191 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 1
  %192 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %113, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %192, i64 1
  store %"struct.std::__1::pair"* %193, %"struct.std::__1::pair"** %113, align 8
  %194 = bitcast %"struct.std::__1::pair"* %193 to i8*
  %195 = add i64 %189, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %186, !llvm.loop !4

197:                                              ; preds = %186
  %198 = bitcast %"struct.std::__1::pair"* %193 to i8*
  br label %199

199:                                              ; preds = %176, %197
  %200 = phi %"struct.std::__1::pair"* [ undef, %176 ], [ %193, %197 ]
  %201 = phi i8* [ %178, %176 ], [ %198, %197 ]
  %202 = phi %"struct.std::__1::pair"* [ %1, %176 ], [ %191, %197 ]
  %203 = icmp ult i64 %181, 96
  br i1 %203, label %225, label %204

204:                                              ; preds = %199, %204
  %205 = phi i8* [ %224, %204 ], [ %201, %199 ]
  %206 = phi %"struct.std::__1::pair"* [ %221, %204 ], [ %202, %199 ]
  %207 = bitcast %"struct.std::__1::pair"* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %207, i64 32, i1 false) #8
  %208 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 1
  %209 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %113, align 8
  %210 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %209, i64 1
  store %"struct.std::__1::pair"* %210, %"struct.std::__1::pair"** %113, align 8
  %211 = bitcast %"struct.std::__1::pair"* %210 to i8*
  %212 = bitcast %"struct.std::__1::pair"* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 32, i1 false) #8
  %213 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 2
  %214 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %209, i64 2
  store %"struct.std::__1::pair"* %214, %"struct.std::__1::pair"** %113, align 8
  %215 = bitcast %"struct.std::__1::pair"* %214 to i8*
  %216 = bitcast %"struct.std::__1::pair"* %213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 32, i1 false) #8
  %217 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 3
  %218 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %209, i64 3
  store %"struct.std::__1::pair"* %218, %"struct.std::__1::pair"** %113, align 8
  %219 = bitcast %"struct.std::__1::pair"* %218 to i8*
  %220 = bitcast %"struct.std::__1::pair"* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 32, i1 false) #8
  %221 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 4
  %222 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %209, i64 4
  store %"struct.std::__1::pair"* %222, %"struct.std::__1::pair"** %113, align 8
  %223 = icmp eq %"struct.std::__1::pair"* %221, %170
  %224 = bitcast %"struct.std::__1::pair"* %222 to i8*
  br i1 %223, label %225, label %204

225:                                              ; preds = %204, %199
  %226 = phi %"struct.std::__1::pair"* [ %200, %199 ], [ %222, %204 ]
  %227 = ptrtoint %"struct.std::__1::pair"* %226 to i64
  %228 = load i64, i64* %116, align 8
  %229 = bitcast %"struct.std::__1::pair"** %113 to i64*
  br label %230

230:                                              ; preds = %172, %225
  %231 = phi i64* [ %174, %172 ], [ %229, %225 ]
  %232 = phi i64 [ %175, %172 ], [ %227, %225 ]
  %233 = phi i64 [ %173, %172 ], [ %228, %225 ]
  %234 = load i64, i64* %117, align 8
  %235 = bitcast %"struct.std::__1::pair"** %112 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %117, align 8
  store i64 %234, i64* %235, align 8
  store i64 %232, i64* %116, align 8
  store i64 %233, i64* %231, align 8
  %237 = load i64, i64* %127, align 8
  %238 = bitcast %"struct.std::__1::pair"** %114 to i64*
  %239 = load i64, i64* %238, align 8
  store i64 %239, i64* %127, align 8
  store i64 %237, i64* %238, align 8
  %240 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %234, i64* %240, align 8
  %241 = inttoptr i64 %234 to %"struct.std::__1::pair"*
  %242 = inttoptr i64 %233 to %"struct.std::__1::pair"*
  %243 = icmp eq %"struct.std::__1::pair"* %242, %241
  br i1 %243, label %251, label %244

244:                                              ; preds = %230
  %245 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 -1, i32 0
  %246 = ptrtoint i32* %245 to i64
  %247 = sub i64 %246, %234
  %248 = lshr i64 %247, 5
  %249 = xor i64 %248, -1
  %250 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %242, i64 %249
  store %"struct.std::__1::pair"* %250, %"struct.std::__1::pair"** %113, align 8
  br label %251

251:                                              ; preds = %244, %230
  %252 = icmp eq i64 %234, 0
  br i1 %252, label %255, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %234 to i8*
  call void @_ZdlPv(i8* %254) #9
  br label %255

255:                                              ; preds = %251, %253
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #8
  br label %256

256:                                              ; preds = %17, %100, %255
  %257 = phi %"struct.std::__1::pair"* [ %1, %17 ], [ %1, %100 ], [ %158, %255 ]
  ret %"struct.std::__1::pair"* %257
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN5blink5mojom21DocumentPolicyFeatureENS2_11PolicyValueEEERNS_9allocatorIS6_EEE12emplace_backIJS6_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair"* %4 to i8*
  br i1 %7, label %10, label %130

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  br i1 %15, label %17, label %44

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 5
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair"* %12, %4
  br i1 %24, label %39, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.std::__1::pair"* [ %35, %25 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair"* [ %34, %25 ], [ %12, %17 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 2
  %33 = tail call dereferenceable(24) %"class.blink::PolicyValue"* @_ZN5blink11PolicyValueaSERKS0_(%"class.blink::PolicyValue"* %32, %"class.blink::PolicyValue"* dereferenceable(24) %31) #8
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %36 = icmp eq %"struct.std::__1::pair"* %34, %4
  br i1 %36, label %37, label %25

37:                                               ; preds = %25
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %39

39:                                               ; preds = %37, %17
  %40 = phi %"struct.std::__1::pair"* [ %4, %17 ], [ %38, %37 ]
  %41 = phi %"struct.std::__1::pair"* [ %23, %17 ], [ %35, %37 ]
  store %"struct.std::__1::pair"* %41, %"struct.std::__1::pair"** %3, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 %22
  store %"struct.std::__1::pair"* %42, %"struct.std::__1::pair"** %11, align 8
  %43 = bitcast %"struct.std::__1::pair"* %41 to i8*
  br label %130

44:                                               ; preds = %10
  %45 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %46 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %47 = sub i64 %8, %16
  %48 = ashr exact i64 %47, 4
  %49 = icmp eq i64 %47, 0
  %50 = select i1 %49, i64 1, i64 %48
  %51 = icmp ugt i64 %50, 576460752303423487
  br i1 %51, label %52, label %53

52:                                               ; preds = %44
  tail call void @abort() #10
  unreachable

53:                                               ; preds = %44
  %54 = lshr i64 %50, 2
  %55 = shl i64 %50, 5
  %56 = tail call i8* @_Znwm(i64 %55) #9
  %57 = bitcast i8* %56 to %"struct.std::__1::pair"*
  %58 = ptrtoint i8* %56 to i64
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 %54
  %60 = ptrtoint %"struct.std::__1::pair"* %59 to i64
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 %50
  %62 = ptrtoint %"struct.std::__1::pair"* %61 to i64
  %63 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %64 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %65 = sub i64 %64, %63
  %66 = ashr exact i64 %65, 5
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 %66
  %68 = icmp eq i64 %65, 0
  br i1 %68, label %119, label %69

69:                                               ; preds = %53
  %70 = add i64 %65, -32
  %71 = lshr i64 %70, 5
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %89, label %75

75:                                               ; preds = %69, %75
  %76 = phi %"struct.std::__1::pair"* [ %82, %75 ], [ %59, %69 ]
  %77 = phi i64 [ %83, %75 ], [ %60, %69 ]
  %78 = phi %"struct.std::__1::pair"* [ %84, %75 ], [ %12, %69 ]
  %79 = phi i64 [ %85, %75 ], [ %73, %69 ]
  %80 = inttoptr i64 %77 to i8*
  %81 = bitcast %"struct.std::__1::pair"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 32, i1 false) #8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 1
  %83 = ptrtoint %"struct.std::__1::pair"* %82 to i64
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 1
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %75, !llvm.loop !5

87:                                               ; preds = %75
  %88 = ptrtoint %"struct.std::__1::pair"* %82 to i64
  br label %89

89:                                               ; preds = %69, %87
  %90 = phi %"struct.std::__1::pair"* [ %59, %69 ], [ %82, %87 ]
  %91 = phi i64 [ %60, %69 ], [ %88, %87 ]
  %92 = phi %"struct.std::__1::pair"* [ %12, %69 ], [ %84, %87 ]
  %93 = icmp ult i64 %70, 96
  br i1 %93, label %116, label %94

94:                                               ; preds = %89, %94
  %95 = phi %"struct.std::__1::pair"* [ %112, %94 ], [ %90, %89 ]
  %96 = phi i64 [ %113, %94 ], [ %91, %89 ]
  %97 = phi %"struct.std::__1::pair"* [ %114, %94 ], [ %92, %89 ]
  %98 = inttoptr i64 %96 to i8*
  %99 = bitcast %"struct.std::__1::pair"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 32, i1 false) #8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 1
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 1
  %102 = bitcast %"struct.std::__1::pair"* %100 to i8*
  %103 = bitcast %"struct.std::__1::pair"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 32, i1 false) #8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 2
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 2
  %106 = bitcast %"struct.std::__1::pair"* %104 to i8*
  %107 = bitcast %"struct.std::__1::pair"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 32, i1 false) #8
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 3
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 3
  %110 = bitcast %"struct.std::__1::pair"* %108 to i8*
  %111 = bitcast %"struct.std::__1::pair"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 32, i1 false) #8
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 4
  %113 = ptrtoint %"struct.std::__1::pair"* %112 to i64
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 4
  %115 = icmp eq %"struct.std::__1::pair"* %67, %112
  br i1 %115, label %116, label %94

116:                                              ; preds = %94, %89
  %117 = ptrtoint %"struct.std::__1::pair"* %67 to i64
  %118 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  br label %119

119:                                              ; preds = %53, %116
  %120 = phi %"struct.std::__1::pair"* [ %118, %116 ], [ %14, %53 ]
  %121 = phi i64 [ %117, %116 ], [ %60, %53 ]
  store i64 %58, i64* %46, align 8
  %122 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %60, i64* %122, align 8
  %123 = bitcast %"struct.std::__1::pair"** %3 to i64*
  store i64 %121, i64* %123, align 8
  store i64 %62, i64* %45, align 8
  %124 = icmp eq %"struct.std::__1::pair"* %120, null
  %125 = inttoptr i64 %121 to i8*
  br i1 %124, label %130, label %126

126:                                              ; preds = %119
  %127 = bitcast %"struct.std::__1::pair"* %120 to i8*
  tail call void @_ZdlPv(i8* %127) #9
  %128 = bitcast %"struct.std::__1::pair"** %3 to i8**
  %129 = load i8*, i8** %128, align 8
  br label %130

130:                                              ; preds = %126, %119, %39, %2
  %131 = phi i8* [ %129, %126 ], [ %125, %119 ], [ %43, %39 ], [ %9, %2 ]
  %132 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 32, i1 false) #8
  %133 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %133, i64 1
  store %"struct.std::__1::pair"* %134, %"struct.std::__1::pair"** %3, align 8
  ret void
}

declare dereferenceable(24) %"class.blink::PolicyValue"* @_ZN5blink11PolicyValueaSERKS0_(%"class.blink::PolicyValue"*, %"class.blink::PolicyValue"* dereferenceable(24)) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
