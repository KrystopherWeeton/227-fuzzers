; ModuleID = '../../v8/src/compiler/add-type-assertions-reducer.cc'
source_filename = "../../v8/src/compiler/add-type-assertions-reducer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::AddTypeAssertionsReducer" = type { %"class.v8::internal::compiler::AdvancedReducer", %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::NodeAuxData" }
%"class.v8::internal::compiler::AdvancedReducer" = type { %"class.v8::internal::compiler::Reducer", %"class.v8::internal::compiler::AdvancedReducer::Editor"* }
%"class.v8::internal::compiler::Reducer" = type { i32 (...)** }
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.666" }
%"class.v8::internal::ZoneVector.666" = type { %"class.std::__1::vector.667" }
%"class.std::__1::vector.667" = type { i64*, i64, %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::ZoneAllocator.670" }
%"class.v8::internal::ZoneAllocator.670" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::AdvancedReducer::Editor" = type { i32 (...)** }
%"class.v8::internal::compiler::JSGraph" = type { %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::MachineGraph" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.11", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.11" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.29", %"class.v8::internal::compiler::NodeCache.56", %"class.v8::internal::compiler::NodeCache.83" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.12", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.26", [4 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.v8::internal::ZoneAllocator.19" }
%"class.v8::internal::ZoneAllocator.19" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21", %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::internal::ZoneAllocator.23" }
%"class.v8::internal::ZoneAllocator.23" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { float }
%"class.v8::internal::compiler::NodeCache.29" = type { %"class.v8::internal::ZoneUnorderedMap.30" }
%"class.v8::internal::ZoneUnorderedMap.30" = type { %"class.std::__1::unordered_map.31" }
%"class.std::__1::unordered_map.31" = type { %"class.std::__1::__hash_table.32" }
%"class.std::__1::__hash_table.32" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base.36"** }
%"struct.std::__1::__hash_node_base.36" = type { %"struct.std::__1::__hash_node_base.36"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator.38" }
%"class.std::__1::__bucket_list_deallocator.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::ZoneAllocator.41" }
%"class.v8::internal::ZoneAllocator.41" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base.36" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.v8::internal::ZoneAllocator.45" }
%"class.v8::internal::ZoneAllocator.45" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.56" = type { %"class.v8::internal::ZoneUnorderedMap.57" }
%"class.v8::internal::ZoneUnorderedMap.57" = type { %"class.std::__1::unordered_map.58" }
%"class.std::__1::unordered_map.58" = type { %"class.std::__1::__hash_table.59" }
%"class.std::__1::__hash_table.59" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base.63"** }
%"struct.std::__1::__hash_node_base.63" = type { %"struct.std::__1::__hash_node_base.63"* }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::__bucket_list_deallocator.65" }
%"class.std::__1::__bucket_list_deallocator.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.v8::internal::ZoneAllocator.68" }
%"class.v8::internal::ZoneAllocator.68" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.63" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.v8::internal::ZoneAllocator.72" }
%"class.v8::internal::ZoneAllocator.72" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::compiler::NodeCache.83" = type { %"class.v8::internal::ZoneUnorderedMap.84" }
%"class.v8::internal::ZoneUnorderedMap.84" = type { %"class.std::__1::unordered_map.85" }
%"class.std::__1::unordered_map.85" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.v8::internal::ZoneAllocator.95" }
%"class.v8::internal::ZoneAllocator.95" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base.90" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.v8::internal::ZoneAllocator.99" }
%"class.v8::internal::ZoneAllocator.99" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.115", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.441", %"class.std::__1::unique_ptr.442", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.448", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.463", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.470", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.480", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.490", %"struct.std::__1::atomic.167", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.524", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.541"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.542", i32, i8, i8, i32, i32, %"class.std::__1::vector.548", %"class.std::__1::vector.548", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.555", i64, %"class.std::__1::unordered_map.556", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.316", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.175", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.615", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.621", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.655", %"class.std::__1::vector.659", %"class.std::__1::vector.659", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.110", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__cxx_atomic_impl.112" }
%"struct.std::__1::__cxx_atomic_impl.112" = type { %"struct.std::__1::__cxx_atomic_base_impl.113" }
%"struct.std::__1::__cxx_atomic_base_impl.113" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.121", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.150", %"class.std::__1::vector.154", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.176", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.180", %"class.std::__1::vector.180", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.259", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271", %"class.std::__1::shared_ptr.277", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.278", %"class.std::__1::unique_ptr.304", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.310", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.323", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.378", %"class.std::__1::unordered_map.352", %"class.std::__1::unordered_map.402", %"class.std::__1::vector.428", i8, %"class.std::__1::unique_ptr.435", i32, i32 }
%"class.std::__1::unordered_map.121" = type { %"class.std::__1::__hash_table.122" }
%"class.std::__1::__hash_table.122" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.126"** }
%"struct.std::__1::__hash_node_base.126" = type { %"struct.std::__1::__hash_node_base.126"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator.128" }
%"class.std::__1::__bucket_list_deallocator.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.126" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.145", %"struct.std::__1::atomic.145", %"struct.std::__1::atomic.145" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i64 }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.156" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.167", %"struct.std::__1::atomic.171", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.175" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.182" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.277" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.278" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.316", %"class.std::__1::vector.316" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.347", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.398", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.352" = type { %"class.std::__1::__hash_table.353" }
%"class.std::__1::__hash_table.353" = type <{ %"class.std::__1::unique_ptr.354", %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.372", [4 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base.357"** }
%"struct.std::__1::__hash_node_base.357" = type { %"struct.std::__1::__hash_node_base.357"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__bucket_list_deallocator.359" }
%"class.std::__1::__bucket_list_deallocator.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.357" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.428" = type { %"class.std::__1::__vector_base.429" }
%"class.std::__1::__vector_base.429" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.430" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.316" }
%"class.std::__1::shared_ptr.441" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.448" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.449", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.455", %"class.v8::internal::DetachableVector.456", %"class.v8::internal::DetachableVector.455", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.456" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.455" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.457" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { i32*, i32*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.470" = type { %"struct.std::__1::__atomic_base.471" }
%"struct.std::__1::__atomic_base.471" = type { %"struct.std::__1::__cxx_atomic_impl.472" }
%"struct.std::__1::__cxx_atomic_impl.472" = type { %"struct.std::__1::__cxx_atomic_base_impl.473" }
%"struct.std::__1::__cxx_atomic_base_impl.473" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.480" = type { %"struct.std::__1::__atomic_base.481" }
%"struct.std::__1::__atomic_base.481" = type { %"struct.std::__1::__cxx_atomic_impl.482" }
%"struct.std::__1::__cxx_atomic_impl.482" = type { %"struct.std::__1::__cxx_atomic_base_impl.483" }
%"struct.std::__1::__cxx_atomic_base_impl.483" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.490" = type { %"class.std::__1::__hash_table.491" }
%"class.std::__1::__hash_table.491" = type <{ %"class.std::__1::unique_ptr.492", %"class.std::__1::__compressed_pair.502", %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.510", [4 x i8] }>
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494", %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.std::__1::__hash_node_base.495"** }
%"struct.std::__1::__hash_node_base.495" = type { %"struct.std::__1::__hash_node_base.495"* }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.std::__1::__bucket_list_deallocator.497" }
%"class.std::__1::__bucket_list_deallocator.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"struct.std::__1::__hash_node_base.495" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.516", %"class.v8::internal::Handle.522", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.523", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.522" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.523" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.536" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.530"**, %"struct.std::__1::pair.530"**, %"struct.std::__1::pair.530"**, %"class.std::__1::__compressed_pair.531" }
%"struct.std::__1::pair.530" = type opaque
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"struct.std::__1::pair.530"** }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.541" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.475", i32, %"class.v8::Local.114" }
%"class.v8::Local.475" = type { %"class.v8::Promise"* }
%"class.v8::Local.114" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.555" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.578", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.175" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.584", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.613", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.584" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.609, %union.anon.611, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.609 = type { i64 }
%union.anon.611 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.613" = type { %"class.v8::PersistentBase.614" }
%"class.v8::PersistentBase.614" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.585", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.585" = type { %"class.std::__1::__hash_table.586" }
%"class.std::__1::__hash_table.586" = type <{ %"class.std::__1::unique_ptr.587", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.602", %"class.std::__1::__compressed_pair.605", [4 x i8] }>
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589", %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"struct.std::__1::__hash_node_base.590"** }
%"struct.std::__1::__hash_node_base.590" = type { %"struct.std::__1::__hash_node_base.590"* }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.std::__1::__bucket_list_deallocator.592" }
%"class.std::__1::__bucket_list_deallocator.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.590" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.476", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.476" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.629" }
%"class.std::__1::unordered_map.629" = type { %"class.std::__1::__hash_table.630" }
%"class.std::__1::__hash_table.630" = type <{ %"class.std::__1::unique_ptr.631", %"class.std::__1::__compressed_pair.641", %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.649", [4 x i8] }>
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633", %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::__hash_node_base.634"** }
%"struct.std::__1::__hash_node_base.634" = type { %"struct.std::__1::__hash_node_base.634"* }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.std::__1::__bucket_list_deallocator.636" }
%"class.std::__1::__bucket_list_deallocator.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.std::__1::__hash_node_base.634" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.655" = type { %"struct.std::__1::__atomic_base.656" }
%"struct.std::__1::__atomic_base.656" = type { %"struct.std::__1::__cxx_atomic_impl.657" }
%"struct.std::__1::__cxx_atomic_impl.657" = type { %"struct.std::__1::__cxx_atomic_base_impl.658" }
%"struct.std::__1::__cxx_atomic_base_impl.658" = type { %"class.std::__1::vector.659"* }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.661" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::compiler::JSOperatorBuilder" = type { %"struct.v8::internal::compiler::JSOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::JSOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneAllocator.671" = type { %"class.v8::internal::Zone"* }
%"struct.std::__1::array" = type { [1 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::internal::compiler::TypeBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>

$_ZNK2v88internal8compiler24AddTypeAssertionsReducer12reducer_nameEv = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_ = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_ = comdat any

@_ZTVN2v88internal8compiler24AddTypeAssertionsReducerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::compiler::AddTypeAssertionsReducer"*)* @_ZN2v88internal8compiler24AddTypeAssertionsReducerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::compiler::AddTypeAssertionsReducer"*)* @_ZN2v88internal8compiler24AddTypeAssertionsReducerD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::compiler::AddTypeAssertionsReducer"*)* @_ZNK2v88internal8compiler24AddTypeAssertionsReducer12reducer_nameEv to i8*), i8* bitcast (void (%"class.v8::internal::compiler::Reducer"*)* @_ZN2v88internal8compiler7Reducer8FinalizeEv to i8*), i8* bitcast (%"class.v8::internal::compiler::Node"* (%"class.v8::internal::compiler::AddTypeAssertionsReducer"*, %"class.v8::internal::compiler::Node"*)* @_ZN2v88internal8compiler24AddTypeAssertionsReducer6ReduceEPNS1_4NodeE to i8*)] }, align 8
@.str = private unnamed_addr constant [25 x i8] c"AddTypeAssertionsReducer\00", align 1

@_ZN2v88internal8compiler24AddTypeAssertionsReducerC1EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::AddTypeAssertionsReducer"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::AddTypeAssertionsReducer"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler24AddTypeAssertionsReducerC2EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS0_4ZoneE
@_ZN2v88internal8compiler24AddTypeAssertionsReducerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::AddTypeAssertionsReducer"*), void (%"class.v8::internal::compiler::AddTypeAssertionsReducer"*)* @_ZN2v88internal8compiler24AddTypeAssertionsReducerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler24AddTypeAssertionsReducerC2EPNS1_15AdvancedReducer6EditorEPNS1_7JSGraphEPNS0_4ZoneE(%"class.v8::internal::compiler::AddTypeAssertionsReducer"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.v8::internal::ZoneAllocator.671", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler24AddTypeAssertionsReducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::JSGraph"* %2, %"class.v8::internal::compiler::JSGraph"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #6
  store i8 0, i8* %5, align 1
  %16 = bitcast %"class.v8::internal::ZoneAllocator.671"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.671", %"class.v8::internal::ZoneAllocator.671"* %6, i64 0, i32 0
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %17, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.667"* %15, i64 %14, i8* nonnull dereferenceable(1) %5, %"class.v8::internal::ZoneAllocator.671"* nonnull dereferenceable(8) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler24AddTypeAssertionsReducerD2Ev(%"class.v8::internal::compiler::AddTypeAssertionsReducer"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal8compiler24AddTypeAssertionsReducerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler24AddTypeAssertionsReducerD0Ev(%"class.v8::internal::compiler::AddTypeAssertionsReducer"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler24AddTypeAssertionsReducer6ReduceEPNS1_4NodeE(%"class.v8::internal::compiler::AddTypeAssertionsReducer"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array", align 8
  %4 = alloca %"class.v8::internal::compiler::Type", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 2
  %8 = load i16, i16* %7, align 8
  switch i16 %8, label %9 [
    i16 200, label %184
    i16 35, label %184
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %184, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 16777215
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, %18
  br i1 %21, label %22, label %32

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %14, i64 0, i32 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = lshr i64 %18, 6
  %26 = getelementptr inbounds i64, i64* %24, i64 %25
  %27 = and i64 %18, 63
  %28 = shl i64 1, %27
  %29 = load i64, i64* %26, align 8
  %30 = and i64 %29, %28
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %42, label %184

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %14, i64 0, i32 0, i32 0
  %34 = add nuw nsw i64 %18, 1
  tail call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.667"* %33, i64 %34, i1 zeroext false) #6
  %35 = getelementptr inbounds %"class.v8::internal::compiler::NodeAuxData", %"class.v8::internal::compiler::NodeAuxData"* %14, i64 0, i32 0, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = lshr i64 %18, 6
  %38 = getelementptr inbounds i64, i64* %36, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %18, 63
  %41 = shl i64 1, %40
  br label %42

42:                                               ; preds = %22, %32
  %43 = phi i64 [ %28, %22 ], [ %41, %32 ]
  %44 = phi i64 [ %29, %22 ], [ %39, %32 ]
  %45 = phi i64 [ %25, %22 ], [ %37, %32 ]
  %46 = phi i64* [ %24, %22 ], [ %36, %32 ]
  %47 = and i64 %44, %43
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = getelementptr inbounds i64, i64* %46, i64 %45
  %51 = or i64 %44, %43
  store i64 %51, i64* %50, align 8
  br label %52

52:                                               ; preds = %42, %49
  %53 = bitcast %"class.v8::internal::compiler::Type"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #6
  %54 = load i64, i64* %10, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %4, i64 0, i32 0
  store i64 %54, i64* %55, align 8
  %56 = and i64 %54, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %52
  %59 = inttoptr i64 %54 to %"class.v8::internal::compiler::TypeBase"*
  %60 = getelementptr inbounds %"class.v8::internal::compiler::TypeBase", %"class.v8::internal::compiler::TypeBase"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 4
  %63 = icmp eq i64 %54, 1103
  %64 = or i1 %63, %62
  br i1 %64, label %72, label %67

65:                                               ; preds = %52
  %66 = icmp eq i64 %54, 1103
  br i1 %66, label %72, label %67

67:                                               ; preds = %65, %58
  %68 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %4, i64 1103) #6
  %69 = load i64, i64* %55, align 8
  %70 = icmp ne i64 %69, 1
  %71 = and i1 %68, %70
  br i1 %71, label %72, label %183

72:                                               ; preds = %67, %65, %58
  %73 = phi i64 [ %69, %67 ], [ 1103, %65 ], [ %54, %58 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 1
  %75 = bitcast %"class.v8::internal::compiler::JSGraph"** %74 to %"class.v8::internal::compiler::MachineGraph"**
  %76 = load %"class.v8::internal::compiler::MachineGraph"*, %"class.v8::internal::compiler::MachineGraph"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %76, i64 0, i32 0
  %78 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::compiler::MachineGraph"* %76, i64 1, i32 2
  %80 = bitcast %"class.v8::internal::compiler::MachineOperatorBuilder"** %79 to %"class.v8::internal::compiler::SimplifiedOperatorBuilder"**
  %81 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %80, align 8
  %82 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder10AssertTypeENS1_4TypeE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %81, i64 %73) #6
  %83 = bitcast %"struct.std::__1::array"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #6
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %84, align 8
  %85 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %78, %"class.v8::internal::compiler::Operator"* %82, i32 1, %"class.v8::internal::compiler::Node"** nonnull %84, i1 zeroext false) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #6
  %86 = load i64, i64* %55, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %85, i64 0, i32 1, i32 0
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %89 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %88, align 8
  %90 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %89, null
  br i1 %90, label %183, label %91

91:                                               ; preds = %72
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %89, i64 0, i32 0
  %93 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %92, align 8
  %94 = icmp eq %"class.v8::internal::compiler::Node"* %85, null
  %95 = getelementptr inbounds %"class.v8::internal::compiler::AddTypeAssertionsReducer", %"class.v8::internal::compiler::AddTypeAssertionsReducer"* %0, i64 0, i32 0, i32 1
  br i1 %94, label %96, label %138

96:                                               ; preds = %91, %135
  %97 = phi %"struct.v8::internal::compiler::Node::Use"* [ %137, %135 ], [ %93, %91 ]
  %98 = phi %"struct.v8::internal::compiler::Node::Use"* [ %97, %135 ], [ %89, %91 ]
  %99 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %98, i64 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = lshr i32 %100, 1
  %102 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %98, i64 1
  %103 = zext i32 %101 to i64
  %104 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %102, i64 %103
  %105 = and i32 %100, 1
  %106 = icmp eq i32 %105, 0
  %107 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %104 to i64
  %108 = select i1 %106, i64 16, i64 32
  %109 = add i64 %108, %107
  %110 = inttoptr i64 %109 to %"class.v8::internal::compiler::Node"**
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %110, i64 %103
  br i1 %106, label %114, label %112

112:                                              ; preds = %96
  %113 = bitcast %"struct.v8::internal::compiler::Node::Use"* %104 to %"class.v8::internal::compiler::Node"*
  br label %117

114:                                              ; preds = %96
  %115 = bitcast %"struct.v8::internal::compiler::Node::Use"* %104 to %"class.v8::internal::compiler::Node"**
  %116 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, align 8
  br label %117

117:                                              ; preds = %114, %112
  %118 = phi %"class.v8::internal::compiler::Node"* [ %113, %112 ], [ %116, %114 ]
  %119 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %98, %"class.v8::internal::compiler::Node"** %111) #6
  %120 = xor i1 %119, true
  %121 = icmp eq %"class.v8::internal::compiler::Node"* %118, null
  %122 = or i1 %121, %120
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, align 8
  %125 = icmp eq %"class.v8::internal::compiler::Node"* %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %124, %"struct.v8::internal::compiler::Node::Use"* nonnull %98) #6
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %111, align 8
  br label %127

127:                                              ; preds = %126, %123
  %128 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %95, align 8
  %129 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %128 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)***
  %130 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %130, i64 3
  %132 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %131, align 8
  call void %132(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %128, %"class.v8::internal::compiler::Node"* nonnull %118) #6
  br label %133

133:                                              ; preds = %127, %117
  %134 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %97, null
  br i1 %134, label %183, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %97, i64 0, i32 0
  %137 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %136, align 8
  br label %96

138:                                              ; preds = %91, %180
  %139 = phi %"struct.v8::internal::compiler::Node::Use"* [ %182, %180 ], [ %93, %91 ]
  %140 = phi %"struct.v8::internal::compiler::Node::Use"* [ %139, %180 ], [ %89, %91 ]
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %140, i64 0, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = lshr i32 %142, 1
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %140, i64 1
  %145 = zext i32 %143 to i64
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %144, i64 %145
  %147 = and i32 %142, 1
  %148 = icmp eq i32 %147, 0
  %149 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %146 to i64
  %150 = select i1 %148, i64 16, i64 32
  %151 = add i64 %150, %149
  %152 = inttoptr i64 %151 to %"class.v8::internal::compiler::Node"**
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 %145
  br i1 %148, label %156, label %154

154:                                              ; preds = %138
  %155 = bitcast %"struct.v8::internal::compiler::Node::Use"* %146 to %"class.v8::internal::compiler::Node"*
  br label %159

156:                                              ; preds = %138
  %157 = bitcast %"struct.v8::internal::compiler::Node::Use"* %146 to %"class.v8::internal::compiler::Node"**
  %158 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %157, align 8
  br label %159

159:                                              ; preds = %154, %156
  %160 = phi %"class.v8::internal::compiler::Node"* [ %155, %154 ], [ %158, %156 ]
  %161 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %140, %"class.v8::internal::compiler::Node"** %153) #6
  %162 = xor i1 %161, true
  %163 = icmp eq %"class.v8::internal::compiler::Node"* %160, %85
  %164 = or i1 %163, %162
  br i1 %164, label %178, label %165

165:                                              ; preds = %159
  %166 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, align 8
  %167 = icmp eq %"class.v8::internal::compiler::Node"* %166, %85
  br i1 %167, label %172, label %168

168:                                              ; preds = %165
  %169 = icmp eq %"class.v8::internal::compiler::Node"* %166, null
  br i1 %169, label %171, label %170

170:                                              ; preds = %168
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %166, %"struct.v8::internal::compiler::Node::Use"* nonnull %140) #6
  br label %171

171:                                              ; preds = %170, %168
  store %"class.v8::internal::compiler::Node"* %85, %"class.v8::internal::compiler::Node"** %153, align 8
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %85, %"struct.v8::internal::compiler::Node::Use"* nonnull %140) #6
  br label %172

172:                                              ; preds = %165, %171
  %173 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %95, align 8
  %174 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %173 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)***
  %175 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %175, i64 3
  %177 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %176, align 8
  call void %177(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %173, %"class.v8::internal::compiler::Node"* %160) #6
  br label %178

178:                                              ; preds = %159, %172
  %179 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %139, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %139, i64 0, i32 0
  %182 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %181, align 8
  br label %138

183:                                              ; preds = %178, %133, %72, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #6
  br label %184

184:                                              ; preds = %22, %9, %2, %2, %183
  ret %"class.v8::internal::compiler::Node"* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder10AssertTypeENS1_4TypeE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal8compiler24AddTypeAssertionsReducer12reducer_nameEv(%"class.v8::internal::compiler::AddTypeAssertionsReducer"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)
}

declare void @_ZN2v88internal8compiler7Reducer8FinalizeEv(%"class.v8::internal::compiler::Reducer"*) unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"*, i64) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.667"*, i64, i8* dereferenceable(1), %"class.v8::internal::ZoneAllocator.671"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneAllocator.671"* %3 to i64*
  %8 = bitcast %"class.std::__1::vector.667"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.669"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq i64 %1, 0
  %14 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %13, label %68, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %1, 17179869120
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.667"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #8
  unreachable

19:                                               ; preds = %15
  %20 = add nsw i64 %1, -1
  %21 = lshr i64 %20, 6
  %22 = add nuw nsw i64 %21, 1
  %23 = shl nuw nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %19
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %23) #6
  br label %34

32:                                               ; preds = %19
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %5, align 8
  store i64 0, i64* %6, align 8
  store i64 %22, i64* %10, align 8
  %37 = load i8, i8* %2, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  store i64 %1, i64* %6, align 8
  %39 = icmp ult i64 %1, 65
  %40 = getelementptr inbounds i64, i64* %36, i64 %21
  %41 = select i1 %39, i64* %36, i64* %40
  store i64 0, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.667"* %0 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !4
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %1, 6
  %46 = shl nuw nsw i64 %45, 3
  br i1 %38, label %57, label %47

47:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 %46, i1 false) #6
  %48 = and i64 %1, 63
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %43 to i64*
  %52 = getelementptr inbounds i64, i64* %51, i64 %45
  %53 = sub nuw nsw i64 64, %48
  %54 = lshr i64 -1, %53
  %55 = load i64, i64* %52, align 8
  %56 = or i64 %55, %54
  store i64 %56, i64* %52, align 8
  br label %68

57:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %46, i1 false) #6
  %58 = and i64 %1, 63
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %43 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %45
  %63 = sub nuw nsw i64 64, %58
  %64 = lshr i64 -1, %63
  %65 = xor i64 %64, -1
  %66 = load i64, i64* %62, align 8
  %67 = and i64 %66, %65
  store i64 %67, i64* %62, align 8
  br label %68

68:                                               ; preds = %60, %57, %50, %47, %4
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.667"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.667", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !7
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.667"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #6
  %27 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 2, i32 1, i32 0
  %28 = bitcast %"class.v8::internal::ZoneAllocator.670"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %4, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %4, i64 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.669"* %31 to i64*
  %33 = bitcast %"class.std::__1::vector.667"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false)
  store i64 %29, i64* %32, align 8
  %34 = icmp ugt i64 %1, 17179869120
  br i1 %34, label %35, label %37

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::vector.667"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #8
  unreachable

37:                                               ; preds = %25
  %38 = icmp ult i64 %11, 8589934560
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = shl i64 %10, 7
  %41 = add nuw nsw i64 %1, 63
  %42 = and i64 %41, -64
  %43 = icmp ult i64 %40, %42
  %44 = select i1 %43, i64 %42, i64 %40
  br label %45

45:                                               ; preds = %39, %37
  %46 = phi i64 [ %44, %39 ], [ 17179869120, %37 ]
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.667"* nonnull %4, i64 %46)
  %47 = load i64, i64* %5, align 8
  %48 = add i64 %47, %12
  %49 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %4, i64 0, i32 1
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = bitcast %"class.std::__1::vector.667"* %4 to i64*
  %53 = load i64, i64* %52, align 16, !noalias !12
  %54 = icmp sgt i64 %47, 0
  br i1 %54, label %55, label %76

55:                                               ; preds = %45
  %56 = inttoptr i64 %53 to i8*
  %57 = lshr i64 %47, 6
  %58 = bitcast i64* %51 to i8*
  %59 = shl nuw nsw i64 %57, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 %59, i1 false) #6, !noalias !17
  %60 = and i64 %47, 63
  %61 = inttoptr i64 %53 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %57
  %63 = ptrtoint i64* %62 to i64
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds i64, i64* %51, i64 %57
  %67 = sub nuw nsw i64 64, %60
  %68 = lshr i64 -1, %67
  %69 = load i64, i64* %66, align 8, !noalias !20
  %70 = and i64 %69, %68
  %71 = xor i64 %68, -1
  %72 = load i64, i64* %62, align 8, !noalias !17
  %73 = and i64 %72, %71
  %74 = or i64 %73, %70
  store i64 %74, i64* %62, align 8, !noalias !17
  %75 = trunc i64 %60 to i32
  br label %76

76:                                               ; preds = %55, %45, %65
  %77 = phi i32 [ %75, %65 ], [ 0, %55 ], [ 0, %45 ]
  %78 = phi i64 [ %63, %65 ], [ %63, %55 ], [ %53, %45 ]
  %79 = bitcast %"class.std::__1::vector.667"* %4 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 16
  %81 = bitcast %"class.std::__1::vector.667"* %0 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = bitcast %"class.std::__1::vector.667"* %0 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8
  %84 = bitcast %"class.std::__1::vector.667"* %4 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %84, align 16
  %85 = load i64, i64* %30, align 16
  store i64 %85, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #6
  br label %86

86:                                               ; preds = %76, %17
  %87 = phi i64 [ %78, %76 ], [ %24, %17 ]
  %88 = phi i32 [ %77, %76 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #6
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #6
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.667"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.667", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %63

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.667"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 2, i32 1, i32 0
  %13 = bitcast %"class.v8::internal::ZoneAllocator.670"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %3, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %3, i64 0, i32 2, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.669"* %16 to i64*
  %18 = bitcast %"class.std::__1::vector.667"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 24, i1 false)
  store i64 %14, i64* %17, align 8
  %19 = icmp ugt i64 %1, 17179869120
  %20 = inttoptr i64 %14 to %"class.v8::internal::Zone"*
  br i1 %19, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %"class.std::__1::vector.667"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #8
  unreachable

23:                                               ; preds = %10
  %24 = add nsw i64 %1, -1
  %25 = lshr i64 %24, 6
  %26 = add nuw nsw i64 %25, 1
  %27 = shl nuw nsw i64 %26, 3
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %27, %32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %23
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 %27) #6
  br label %38

36:                                               ; preds = %23
  %37 = add i64 %29, %27
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %3, i64 0, i32 0
  store i64* %40, i64** %41, align 16
  %42 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %3, i64 0, i32 1
  store i64 0, i64* %42, align 8
  store i64 %26, i64* %15, align 16
  %43 = bitcast %"class.std::__1::vector.667"* %0 to i64*
  %44 = load i64, i64* %43, align 8, !noalias !23
  %45 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %44, i64* %45, align 8, !alias.scope !23
  %46 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %46, align 8, !alias.scope !23
  %47 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !28
  %49 = inttoptr i64 %44 to i64*
  %50 = lshr i64 %48, 6
  %51 = getelementptr inbounds i64, i64* %49, i64 %50
  %52 = trunc i64 %48 to i32
  %53 = and i32 %52, 63
  %54 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %51, i64** %54, align 8, !alias.scope !31
  %55 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %53, i32* %55, align 8, !alias.scope !31
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.667"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %56 = load i64, i64* %43, align 8
  %57 = bitcast %"class.std::__1::vector.667"* %3 to i64*
  %58 = bitcast %"class.std::__1::vector.667"* %3 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16
  store i64 %56, i64* %57, align 16
  %60 = load i64, i64* %47, align 8
  %61 = bitcast %"class.std::__1::vector.667"* %0 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %61, align 8
  store i64 %60, i64* %42, align 8
  %62 = load i64, i64* %15, align 16
  store i64 %62, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  br label %63

63:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.667"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.667", %"class.std::__1::vector.667"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !34
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #6
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !37
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !37
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !37
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #6, !noalias !37
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !37
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !37
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !37
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !40
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !40
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !43
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !43
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !43
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !43
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !43
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !43
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #6
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!10 = distinct !{!10, !11, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!15 = distinct !{!15, !16, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!20 = !{!18, !21}
!21 = distinct !{!21, !22, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!26 = distinct !{!26, !27, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!40 = !{!38, !41}
!41 = distinct !{!41, !42, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!43 = !{!41}
