; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLOpsRenderPass.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLOpsRenderPass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLOpsRenderPass = type { %class.GrOpsRenderPass, %class.GrGLGpu*, i8, %struct.SkIRect, %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo", i8, %class.GrGLAttribArrayState*, i16* }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.137, %class.sk_sp.137, %class.sk_sp.137, i32, i32 }
%class.sk_sp.137 = type { %class.GrBuffer* }
%class.GrBuffer = type { i32 (...)** }
%class.GrGLGpu = type <{ %class.GrGpu, %"class.std::__1::unique_ptr.138", %class.sk_sp.266, i32, i32, %class.sk_sp.275, i32, i32, i32, %struct.anon, %class.anon, %struct.GrNativeRect, %"class.GrGLGpu::HWVertexArrayState", i8, [3 x i8], [6 x %struct.anon.309], %struct.anon.310, i32, i32, i32, %class.GrStencilSettings, i32, i32, i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, [4 x i8], %class.SkAutoTArray.311, [4 x float], i32, [3 x %struct.anon.318], [4 x i8], %class.sk_sp.319, [4 x %struct.anon.320], %class.sk_sp.319, i8, [7 x i8], i64, %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.327", %class.GrFinishCallbacks, i8, [7 x i8] }>
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.2, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.2 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.3 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %class.sk_sp.69, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.109", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.6", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.5 }
%class.sk_sp.5 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.16, %class.SkTArray.25, %class.SkTArray.27, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.9"*, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.27, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.28 }
%class.sk_sp.28 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.16 = type { %class.SkTHashTable.17 }
%class.SkTHashTable.17 = type { i32, i32, %class.SkAutoTArray.18 }
%class.SkAutoTArray.18 = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.409" }
%"struct.std::__1::pair.409" = type { i32, %class.SkTArray.410* }
%class.SkTArray.410 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.25 = type { %"class.std::__1::unique_ptr.26"*, i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.410, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.27 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.41 }
%class.SkFibBlockSizes.41 = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.69 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.81, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.97, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.1, i8* }
%class.sk_sp.1 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.73 }
%class.SkTHashTable.73 = type { i32, i32, %class.SkAutoTArray.74 }
%class.SkAutoTArray.74 = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.81 = type { %class.SkTHashTable.82 }
%class.SkTHashTable.82 = type { i32, i32, %class.SkAutoTArray.83 }
%class.SkAutoTArray.83 = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.90, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.90 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.91" }
%"struct.std::__1::atomic.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.96, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.96 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.135 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.135 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.136, void (i8*)*, i8* }
%class.SkNVRefCnt.136 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.2, %class.sk_sp.112, %class.sk_sp.112 }
%class.sk_sp.112 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.134 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.134 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %class.GrGLContext* }
%class.GrGLContext = type { %class.GrGLContextInfo }
%class.GrGLContextInfo = type { i32 (...)**, %class.sk_sp.141, %struct.GrGLDriverInfo, i32, %class.sk_sp.248 }
%class.sk_sp.141 = type { %struct.GrGLInterface* }
%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon.142, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%union.anon.142 = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray.27 }
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.143, %class.GrGLFunction.143, %class.GrGLFunction.144, %class.GrGLFunction.143, %class.GrGLFunction.144, %class.GrGLFunction.145, %class.GrGLFunction.143, %class.GrGLFunction.143, %class.GrGLFunction.143, %class.GrGLFunction.143, %class.GrGLFunction, %class.GrGLFunction.146, %class.GrGLFunction.147, %class.GrGLFunction, %class.GrGLFunction.143, %class.GrGLFunction.148, %class.GrGLFunction.149, %class.GrGLFunction.150, %class.GrGLFunction.151, %class.GrGLFunction, %class.GrGLFunction.147, %class.GrGLFunction.152, %class.GrGLFunction.153, %class.GrGLFunction.154, %class.GrGLFunction.155, %class.GrGLFunction, %class.GrGLFunction.156, %class.GrGLFunction.157, %class.GrGLFunction.158, %class.GrGLFunction.159, %class.GrGLFunction.151, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.160, %class.GrGLFunction.161, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.162, %class.GrGLFunction.163, %class.GrGLFunction.164, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.165, %class.GrGLFunction.166, %class.GrGLFunction.167, %class.GrGLFunction.168, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.146, %class.GrGLFunction, %class.GrGLFunction.146, %class.GrGLFunction.169, %class.GrGLFunction.170, %class.GrGLFunction.171, %class.GrGLFunction.172, %class.GrGLFunction, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.173, %class.GrGLFunction.174, %class.GrGLFunction.159, %class.GrGLFunction.175, %class.GrGLFunction.176, %class.GrGLFunction.177, %class.GrGLFunction.178, %class.GrGLFunction.179, %class.GrGLFunction.174, %class.GrGLFunction.180, %class.GrGLFunction.174, %class.GrGLFunction.181, %class.GrGLFunction.182, %class.GrGLFunction.174, %class.GrGLFunction.174, %class.GrGLFunction.179, %class.GrGLFunction.174, %class.GrGLFunction.183, %class.GrGLFunction.184, %class.GrGLFunction.185, %class.GrGLFunction.186, %class.GrGLFunction.187, %class.GrGLFunction.188, %class.GrGLFunction, %class.GrGLFunction.169, %class.GrGLFunction.189, %class.GrGLFunction.190, %class.GrGLFunction.191, %class.GrGLFunction.158, %class.GrGLFunction.192, %class.GrGLFunction.193, %class.GrGLFunction, %class.GrGLFunction.194, %class.GrGLFunction.195, %class.GrGLFunction.196, %class.GrGLFunction.197, %class.GrGLFunction.197, %class.GrGLFunction.198, %class.GrGLFunction.199, %class.GrGLFunction.200, %class.GrGLFunction.201, %class.GrGLFunction.202, %class.GrGLFunction.203, %class.GrGLFunction.204, %class.GrGLFunction.205, %class.GrGLFunction.191, %class.GrGLFunction.191, %class.GrGLFunction.143, %class.GrGLFunction.146, %class.GrGLFunction.188, %class.GrGLFunction.143, %class.GrGLFunction, %class.GrGLFunction.206, %class.GrGLFunction.207, %class.GrGLFunction.208, %class.GrGLFunction.208, %class.GrGLFunction.208, %class.GrGLFunction.209, %class.GrGLFunction.146, %class.GrGLFunction.195, %class.GrGLFunction.210, %class.GrGLFunction.211, %class.GrGLFunction.143, %class.GrGLFunction.212, %class.GrGLFunction.213, %class.GrGLFunction.214, %class.GrGLFunction, %class.GrGLFunction.143, %class.GrGLFunction.215, %class.GrGLFunction.170, %class.GrGLFunction.192, %class.GrGLFunction.215, %class.GrGLFunction.216, %class.GrGLFunction.217, %class.GrGLFunction.218, %class.GrGLFunction.219, %class.GrGLFunction.195, %class.GrGLFunction.210, %class.GrGLFunction.217, %class.GrGLFunction.208, %class.GrGLFunction.146, %class.GrGLFunction.189, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.224, %class.GrGLFunction.225, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.226, %class.GrGLFunction.211, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.227, %class.GrGLFunction.228, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.229, %class.GrGLFunction.229, %class.GrGLFunction.229, %class.GrGLFunction.192, %class.GrGLFunction.230, %class.GrGLFunction.230, %class.GrGLFunction, %class.GrGLFunction.231, %class.GrGLFunction.232, %class.GrGLFunction.232, %class.GrGLFunction.232, %class.GrGLFunction.143, %class.GrGLFunction.233, %class.GrGLFunction.234, %class.GrGLFunction.211, %class.GrGLFunction, %class.GrGLFunction.235, %class.GrGLFunction.236, %class.GrGLFunction.237, %class.GrGLFunction.238, %class.GrGLFunction.239, %class.GrGLFunction.240, %class.GrGLFunction.241, %class.GrGLFunction.242, %class.GrGLFunction.243, %class.GrGLFunction.244, %class.GrGLFunction.245, %class.GrGLFunction.146, %class.GrGLFunction.245, %class.GrGLFunction.246, %class.GrGLFunction.247, %class.GrGLFunction }
%class.GrGLFunction.144 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.145 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.148 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.149 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.150 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.147 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.152 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.153 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.154 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.155 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.156 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.157 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.151 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.161 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.162 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.163 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.164 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.160 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.165 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.166 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.167 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.168 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.171 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.172 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.173 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.159 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.175 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.176 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.177 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.178 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.180 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.181 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.182 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.179 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.174 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.183 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.184 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.185 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.186 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.187 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.169 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.190 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.158 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.193 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.194 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.196 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.197 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.198 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.199 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.200 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.201 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.202 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.203 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.204 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.205 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.191 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.188 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.206 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.207 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.209 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.212 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.213 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.214 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.170 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.215 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.216 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.218 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.219 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.195 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.210 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.217 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.208 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.189 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.220 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.221 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.224 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.225 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.226 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.227 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.228 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.222 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.223 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.229 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.192 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.230 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.231 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.232 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.143 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.233 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.234 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.211 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.235 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.236 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.237 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.238 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.239 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.240 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.241 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.242 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.243 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.244 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.146 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.245 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.246 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.247 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%struct.GrGLDriverInfo = type <{ i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%class.sk_sp.248 = type { %class.GrGLCaps* }
%class.GrGLCaps = type <{ %class.GrCaps.base, i8, i32, [4 x i8], %class.SkTArray.249, i32, i32, i32, i32, i32, i32, i32, i40, i32, i32, [4 x i8], [24 x %"struct.GrGLCaps::FormatInfo"], [31 x i32], [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%class.SkTArray.249 = type { i32*, i64 }
%"struct.GrGLCaps::FormatInfo" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, %class.SkTDArray.250, %"class.std::__1::unique_ptr.251", i32, [4 x i8] }>
%class.SkTDArray.250 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.GrGLCaps::ColorTypeInfo"* }
%"struct.GrGLCaps::ColorTypeInfo" = type <{ i32, i32, %class.GrSwizzle, %class.GrSwizzle, [4 x i8], %"class.std::__1::unique_ptr.254", i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats"* }
%"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%class.sk_sp.266 = type { %"class.GrGLGpu::ProgramCache"* }
%"class.GrGLGpu::ProgramCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.267, %class.SkTInternalLList }
%class.SkTHashTable.267 = type { i32, i32, %class.SkAutoTArray.268 }
%class.SkAutoTArray.268 = type { %"class.std::__1::unique_ptr.269" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"*, %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"* }
%"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry" = type opaque
%class.sk_sp.275 = type { %class.GrGLProgram* }
%class.GrGLProgram = type <{ %class.SkRefCnt.base, %"struct.GrGLProgram::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, i32, [4 x i8], %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.282", %"class.std::__1::vector", %"class.std::__1::unique_ptr.298", i32, i32, i32, i32, %class.GrGLGpu*, %class.GrGLProgramDataManager, i32, [4 x i8] }>
%"struct.GrGLProgram::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type opaque
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.288"*, %"class.std::__1::unique_ptr.288"*, %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.27, %class.SkTArray.291 }
%class.SkTArray.291 = type { %"class.std::__1::unique_ptr.288"*, i64 }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.std::__1::unique_ptr.288"* }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.GrGLProgram::Attribute"* }
%"struct.GrGLProgram::Attribute" = type { i32, i32, i64, i32 }
%class.GrGLProgramDataManager = type { %class.GrGLSLProgramDataManager, %class.SkTArray.304, %class.GrGLGpu* }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.304 = type { %"struct.GrGLProgramDataManager::Uniform"*, i64 }
%"struct.GrGLProgramDataManager::Uniform" = type { i32 }
%struct.anon = type { i32, %struct.GrNativeRect }
%class.anon = type { i32, i32, i32, %class.GrWindowRectsState }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.305 }
%union.anon.305 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.GrNativeRect = type { i32, i32, i32, i32 }
%"class.GrGLGpu::HWVertexArrayState" = type { i32, i8, [3 x i8], %class.GrGLAttribArrayState, %class.GrGLVertexArray* }
%class.GrGLAttribArrayState = type <{ %class.SkSTArray.306, i32, i8, i8, [2 x i8] }>
%class.SkSTArray.306 = type { %class.SkAlignedSTStorage.307, %class.SkTArray.308 }
%class.SkAlignedSTStorage.307 = type { [640 x i8] }
%class.SkTArray.308 = type { %"struct.GrGLAttribArrayState::AttribArrayState"*, i64 }
%"struct.GrGLAttribArrayState::AttribArrayState" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, i32, i32, [4 x i8], i8*, i32, [4 x i8] }>
%class.GrGLVertexArray = type { i32, [4 x i8], %class.GrGLAttribArrayState, %"class.GrGpuResource::UniqueID", [4 x i8] }
%struct.anon.309 = type <{ i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.310 = type { i32, i32, i32, %struct.SkRGBA4f, i8, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkAutoTArray.311 = type { %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.GrGLGpu::TextureUnitBindings"* }
%"class.GrGLGpu::TextureUnitBindings" = type { [3 x %"struct.GrGLGpu::TextureUnitBindings::TargetBinding"] }
%"struct.GrGLGpu::TextureUnitBindings::TargetBinding" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.318 = type { i32, i32, i32, i32 }
%struct.anon.320 = type { i32, i32, i32 }
%class.sk_sp.319 = type { %class.GrGLBuffer* }
%class.GrGLBuffer = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.GrGLGpu::SamplerObjectCache"* }
%"class.GrGLGpu::SamplerObjectCache" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %class.GrGLOpsRenderPass* }
%class.GrFinishCallbacks = type { %class.GrGpu*, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.333" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.GrOpsRenderPass::LoadAndStoreInfo" = type { i32, i32, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x float] }
%"struct.GrOpsRenderPass::StencilLoadAndStoreInfo" = type { i32, i32 }
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.GrGLRenderTarget = type { %class.GrRenderTarget.base, %class.sk_sp.338, i32, i32, i32, i32, i8, i32, %class.GrSurface }
%class.GrRenderTarget.base = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32 }>
%class.sk_sp.338 = type { %class.GrGLAttachment* }
%class.GrGLAttachment = type { %class.GrAttachment.base, i32, i32, [4 x i8] }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.339, i32, [4 x i8] }
%union.anon.339 = type { %struct.anon.340 }
%struct.anon.340 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.350, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.342, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.342 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.343, %class.sk_sp.344, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.345" }
%class.SkNVRefCnt.343 = type { %"struct.std::__1::atomic" }
%class.sk_sp.344 = type { %class.GrSurface* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.344, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.345" = type { %"struct.std::__1::__atomic_base.346" }
%"struct.std::__1::__atomic_base.346" = type { %"struct.std::__1::__atomic_base.347" }
%"struct.std::__1::__atomic_base.347" = type { %"struct.std::__1::__cxx_atomic_impl.348" }
%"struct.std::__1::__cxx_atomic_impl.348" = type { %"struct.std::__1::__cxx_atomic_base_impl.349" }
%"struct.std::__1::__cxx_atomic_base_impl.349" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.350 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.351, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.351 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.352"*, [24 x i8] }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.355, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.355 = type { %class.SkAlignedSTStorage.356, %class.SkTArray.357 }
%class.SkAlignedSTStorage.356 = type { [8 x i8] }
%class.SkTArray.357 = type { %"class.std::__1::unique_ptr.358"*, i64 }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings.367, [2 x i16], %struct.GrTStencilFaceSettings.367 }
%struct.GrTStencilFaceSettings.367 = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.368, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.368 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.369, i8*, i64 }
%class.GrNonAtomicRef.369 = type { i32 }
%struct.GrDrawIndirectCommand = type { i32, i32, i32, i32 }
%struct.GrDrawIndexedIndirectCommand = type { i32, i32, i32, i32, i32 }
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.381, %class.SkArenaAllocList.382, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.391*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.370, %class.sk_sp.372, %class.sk_sp.377, %class.GrGpu*, i32, i8* }
%class.SkTArray.370 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.371 }
%class.sk_sp.371 = type { %class.GrBuffer* }
%class.sk_sp.372 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef.373, [4 x i8], %"class.std::__1::unique_ptr.374", i32, [4 x i8] }>
%class.GrNonAtomicRef.373 = type { i32 }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.377, i8, [7 x i8] }>
%class.sk_sp.377 = type { %class.GrCpuBuffer* }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.381 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.382 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.383", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %class.GrOp* }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.389, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.389 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.390, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.390 = type { %"struct.std::__1::atomic" }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.358" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.SkTArray.391 = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"class.std::__1::function.392" = type { %"class.std::__1::__function::__policy_func.395" }
%"class.std::__1::__function::__policy_func.395" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.396", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.396" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::function.397"*)* }
%"class.std::__1::function.397" = type opaque
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }

$_ZN17GrGLOpsRenderPassD0Ev = comdat any

$_ZN17GrGLOpsRenderPass12inlineUploadEP14GrOpFlushStateRNSt3__18functionIFvRNS3_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEE = comdat any

$_ZN17GrGLOpsRenderPass3gpuEv = comdat any

$_ZN15GrOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE = comdat any

$_ZN15GrOpsRenderPassD2Ev = comdat any

$_ZN15GrOpsRenderPassD0Ev = comdat any

$_ZN15GrOpsRenderPass7onBeginEv = comdat any

$_ZN15GrOpsRenderPass5onEndEv = comdat any

$_ZN15GrOpsRenderPass14onDrawIndirectEPK8GrBuffermi = comdat any

$_ZN15GrOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi = comdat any

$_ZTV15GrOpsRenderPass = comdat any

@_ZTV17GrGLOpsRenderPass = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPassD2Ev to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*)* @_ZN17GrGLOpsRenderPassD0Ev to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, %class.GrOpFlushState*, %"class.std::__1::function.392"*)* @_ZN17GrGLOpsRenderPass12inlineUploadEP14GrOpFlushStateRNSt3__18functionIFvRNS3_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEE to i8*), i8* bitcast (%class.GrGpu* (%class.GrGLOpsRenderPass*)* @_ZN17GrGLOpsRenderPass3gpuEv to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*)* @_ZN17GrGLOpsRenderPass7onBeginEv to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*)* @_ZN17GrGLOpsRenderPass5onEndEv to i8*), i8* bitcast (i1 (%class.GrGLOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)* @_ZN17GrGLOpsRenderPass14onBindPipelineERK13GrProgramInfoRK6SkRect to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, %struct.SkIRect*)* @_ZN17GrGLOpsRenderPass16onSetScissorRectERK7SkIRect to i8*), i8* bitcast (i1 (%class.GrGLOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)* @_ZN17GrGLOpsRenderPass14onBindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, %class.sk_sp.137*, %class.sk_sp.137*, %class.sk_sp.137*, i1)* @_ZN17GrGLOpsRenderPass13onBindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, i32, i32)* @_ZN17GrGLOpsRenderPass6onDrawEii to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, i32, i32, i16, i16, i32)* @_ZN17GrGLOpsRenderPass13onDrawIndexedEiitti to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, i32, i32, i32, i32)* @_ZN17GrGLOpsRenderPass15onDrawInstancedEiiii to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, i32, i32, i32, i32, i32)* @_ZN17GrGLOpsRenderPass22onDrawIndexedInstancedEiiiii to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, %class.GrBuffer*, i64, i32)* @_ZN17GrGLOpsRenderPass14onDrawIndirectEPK8GrBuffermi to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, %class.GrBuffer*, i64, i32)* @_ZN17GrGLOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)* @_ZN17GrGLOpsRenderPass7onClearERK14GrScissorStateNSt3__15arrayIfLm4EEE to i8*), i8* bitcast (void (%class.GrGLOpsRenderPass*, %class.GrScissorState*, i1)* @_ZN17GrGLOpsRenderPass18onClearStencilClipERK14GrScissorStateb to i8*), i8* bitcast (void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)* @_ZN15GrOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE to i8*)] }, align 8
@_ZTV15GrOpsRenderPass = linkonce_odr hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPassD2Ev to i8*), i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPass7onBeginEv to i8*), i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPass5onEndEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)* @_ZN15GrOpsRenderPass14onDrawIndirectEPK8GrBuffermi to i8*), i8* bitcast (void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)* @_ZN15GrOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)* @_ZN15GrOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [49 x i8] c"../../third_party/skia/src/gpu/GrOpsRenderPass.h\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass3setEP14GrRenderTargetbRK7SkIRect15GrSurfaceOriginRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS6_23StencilLoadAndStoreInfoE(%class.GrGLOpsRenderPass* nocapture, %class.GrRenderTarget*, i1 zeroext, %struct.SkIRect* nocapture readonly dereferenceable(16), i32, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* nocapture readonly dereferenceable(24), %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = zext i1 %2 to i8
  %9 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 2
  store %class.GrRenderTarget* %1, %class.GrRenderTarget** %9, align 8
  %10 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 1
  store i32 %4, i32* %10, align 8
  %11 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 2
  store i8 %8, i8* %11, align 8
  %12 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 3
  %13 = bitcast %struct.SkIRect* %12 to i8*
  %14 = bitcast %struct.SkIRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 16, i1 false)
  %15 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 4
  %16 = bitcast %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %15 to i8*
  %17 = bitcast %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 24, i1 false)
  %18 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 5
  %19 = bitcast %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* %6 to i64*
  %20 = bitcast %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* %18 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass7onBeginEv(%class.GrGLOpsRenderPass*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %struct.SkIRect*
  %4 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 2
  %5 = bitcast %class.GrRenderTarget** %4 to %class.GrGLRenderTarget**
  %6 = load %class.GrGLRenderTarget*, %class.GrGLRenderTarget** %5, align 8
  %7 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %77, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 4, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %77

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %6, i64 0, i32 1, i32 0
  %16 = load %class.GrGLAttachment*, %class.GrGLAttachment** %15, align 8
  %17 = icmp eq %class.GrGLAttachment* %16, null
  br i1 %17, label %77, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = bitcast %class.GrGLRenderTarget* %6 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.GrGLRenderTarget* %6 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = getelementptr inbounds i8, i8* %27, i64 156
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 3
  %32 = bitcast %struct.SkIRect* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 3, i32 2
  %35 = bitcast i32* %34 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = lshr i64 %33, 32
  %38 = trunc i64 %37 to i32
  %39 = lshr i64 %36, 32
  %40 = trunc i64 %39 to i32
  %41 = sub i64 %36, %33
  %42 = sub i32 %40, %38
  %43 = icmp eq i32 %20, 1
  %44 = sub i32 %30, %38
  %45 = sub i32 %44, %42
  %46 = select i1 %43, i32 %45, i32 %38
  %47 = zext i32 %46 to i64
  %48 = shl nuw i64 %47, 32
  %49 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %50 = load %class.GrGLGpu*, %class.GrGLGpu** %49, align 8
  %51 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  %52 = shl i64 %33, 32
  %53 = ashr exact i64 %52, 32
  %54 = shl i64 %41, 32
  %55 = ashr exact i64 %54, 32
  %56 = add nsw i64 %55, %53
  %57 = icmp slt i64 %56, 2147483647
  %58 = select i1 %57, i64 %56, i64 2147483647
  %59 = icmp sgt i64 %58, -2147483647
  %60 = select i1 %59, i64 %58, i64 -2147483647
  %61 = sext i32 %46 to i64
  %62 = sext i32 %42 to i64
  %63 = add nsw i64 %61, %62
  %64 = icmp slt i64 %63, 2147483647
  %65 = select i1 %64, i64 %63, i64 2147483647
  %66 = icmp sgt i64 %65, -2147483647
  %67 = select i1 %66, i64 %65, i64 -2147483647
  %68 = and i64 %33, 4294967295
  %69 = or i64 %48, %68
  %70 = shl nsw i64 %67, 32
  %71 = and i64 %60, 4294967295
  %72 = or i64 %70, %71
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %69, i64* %73, align 8
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %72, i64* %74, align 8
  call void @_ZN7GrGLGpu17resolveRenderFBOsEP16GrGLRenderTargetRK7SkIRectNS_16ResolveDirectionEb(%class.GrGLGpu* %50, %class.GrGLRenderTarget* %6, %struct.SkIRect* nonnull dereferenceable(16) %3, i1 zeroext false, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  %75 = load i8, i8* %7, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  br label %77

77:                                               ; preds = %14, %1, %18, %10
  %78 = phi i1 [ true, %14 ], [ false, %1 ], [ %76, %18 ], [ true, %10 ]
  %79 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %80 = load %class.GrGLGpu*, %class.GrGLGpu** %79, align 8
  %81 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 3
  %82 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 4
  %85 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 5
  call void @_ZN7GrGLGpu18beginCommandBufferEP16GrGLRenderTargetbRK7SkIRect15GrSurfaceOriginRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS6_23StencilLoadAndStoreInfoE(%class.GrGLGpu* %80, %class.GrGLRenderTarget* %6, i1 zeroext %78, %struct.SkIRect* dereferenceable(16) %81, i32 %83, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* dereferenceable(24) %84, %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* dereferenceable(8) %85) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7GrGLGpu17resolveRenderFBOsEP16GrGLRenderTargetRK7SkIRectNS_16ResolveDirectionEb(%class.GrGLGpu*, %class.GrGLRenderTarget*, %struct.SkIRect* dereferenceable(16), i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7GrGLGpu18beginCommandBufferEP16GrGLRenderTargetbRK7SkIRect15GrSurfaceOriginRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS6_23StencilLoadAndStoreInfoE(%class.GrGLGpu*, %class.GrGLRenderTarget*, i1 zeroext, %struct.SkIRect* dereferenceable(16), i32, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* dereferenceable(24), %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass5onEndEv(%class.GrGLOpsRenderPass*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %struct.SkIRect*
  %4 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 2
  %5 = bitcast %class.GrRenderTarget** %4 to %class.GrGLRenderTarget**
  %6 = load %class.GrGLRenderTarget*, %class.GrGLRenderTarget** %5, align 8
  %7 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %8 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %9 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 4
  %13 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 5
  tail call void @_ZN7GrGLGpu16endCommandBufferEP16GrGLRenderTargetbRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS2_23StencilLoadAndStoreInfoE(%class.GrGLGpu* %8, %class.GrGLRenderTarget* %6, i1 zeroext %11, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* dereferenceable(24) %12, %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* dereferenceable(8) %13) #8
  %14 = load i8, i8* %9, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %81, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 4, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %81

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.GrGLRenderTarget, %class.GrGLRenderTarget* %6, i64 0, i32 1, i32 0
  %22 = load %class.GrGLAttachment*, %class.GrGLAttachment** %21, align 8
  %23 = icmp eq %class.GrGLAttachment* %22, null
  br i1 %23, label %81, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = load %class.GrRenderTarget*, %class.GrRenderTarget** %4, align 8
  %28 = bitcast %class.GrRenderTarget* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr i8, i8* %29, i64 -24
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %class.GrRenderTarget* %27 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %32
  %35 = getelementptr inbounds i8, i8* %34, i64 156
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 3
  %39 = bitcast %struct.SkIRect* %38 to i64*
  %40 = load i64, i64* %39, align 4
  %41 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 3, i32 2
  %42 = bitcast i32* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = lshr i64 %40, 32
  %45 = trunc i64 %44 to i32
  %46 = lshr i64 %43, 32
  %47 = trunc i64 %46 to i32
  %48 = sub i64 %43, %40
  %49 = sub i32 %47, %45
  %50 = icmp eq i32 %26, 1
  %51 = sub i32 %37, %45
  %52 = sub i32 %51, %49
  %53 = select i1 %50, i32 %52, i32 %45
  %54 = zext i32 %53 to i64
  %55 = shl nuw i64 %54, 32
  %56 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %57 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8
  %58 = shl i64 %40, 32
  %59 = ashr exact i64 %58, 32
  %60 = shl i64 %48, 32
  %61 = ashr exact i64 %60, 32
  %62 = add nsw i64 %61, %59
  %63 = icmp slt i64 %62, 2147483647
  %64 = select i1 %63, i64 %62, i64 2147483647
  %65 = icmp sgt i64 %64, -2147483647
  %66 = select i1 %65, i64 %64, i64 -2147483647
  %67 = sext i32 %53 to i64
  %68 = sext i32 %49 to i64
  %69 = add nsw i64 %67, %68
  %70 = icmp slt i64 %69, 2147483647
  %71 = select i1 %70, i64 %69, i64 2147483647
  %72 = icmp sgt i64 %71, -2147483647
  %73 = select i1 %72, i64 %71, i64 -2147483647
  %74 = and i64 %40, 4294967295
  %75 = or i64 %55, %74
  %76 = shl nsw i64 %73, 32
  %77 = and i64 %66, 4294967295
  %78 = or i64 %76, %77
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %75, i64* %79, align 8
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %78, i64* %80, align 8
  call void @_ZN7GrGLGpu17resolveRenderFBOsEP16GrGLRenderTargetRK7SkIRectNS_16ResolveDirectionEb(%class.GrGLGpu* %56, %class.GrGLRenderTarget* %6, %struct.SkIRect* nonnull dereferenceable(16) %3, i1 zeroext true, i1 zeroext true) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8
  br label %81

81:                                               ; preds = %20, %1, %24, %16
  ret void
}

declare void @_ZN7GrGLGpu16endCommandBufferEP16GrGLRenderTargetbRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS2_23StencilLoadAndStoreInfoE(%class.GrGLGpu*, %class.GrGLRenderTarget*, i1 zeroext, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* dereferenceable(24), %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrGLOpsRenderPass14onBindPipelineERK13GrProgramInfoRK6SkRect(%class.GrGLOpsRenderPass* nocapture, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 9
  %5 = load i8, i8* %4, align 4
  %6 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  store i8 %5, i8* %6, align 4
  %7 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %8 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %9 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 2
  %10 = load %class.GrRenderTarget*, %class.GrRenderTarget** %9, align 8
  %11 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = tail call zeroext i1 @_ZN7GrGLGpu12flushGLStateEP14GrRenderTargetbRK13GrProgramInfo(%class.GrGLGpu* %8, %class.GrRenderTarget* %10, i1 zeroext %13, %class.GrProgramInfo* dereferenceable(128) %1) #8
  ret i1 %14
}

declare zeroext i1 @_ZN7GrGLGpu12flushGLStateEP14GrRenderTargetbRK13GrProgramInfo(%class.GrGLGpu*, %class.GrRenderTarget*, i1 zeroext, %class.GrProgramInfo* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass16onSetScissorRectERK7SkIRect(%class.GrGLOpsRenderPass* nocapture readonly, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %4 = load %class.GrGLGpu*, %class.GrGLGpu** %3, align 8
  %5 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 2
  %6 = load %class.GrRenderTarget*, %class.GrRenderTarget** %5, align 8
  %7 = bitcast %class.GrRenderTarget* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr i8, i8* %8, i64 -24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.GrRenderTarget* %6 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %11
  %14 = getelementptr inbounds i8, i8* %13, i64 156
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  tail call void @_ZN7GrGLGpu16flushScissorRectERK7SkIRecti15GrSurfaceOrigin(%class.GrGLGpu* %4, %struct.SkIRect* dereferenceable(16) %1, i32 %16, i32 %18) #8
  ret void
}

declare void @_ZN7GrGLGpu16flushScissorRectERK7SkIRecti15GrSurfaceOrigin(%class.GrGLGpu*, %struct.SkIRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrGLOpsRenderPass14onBindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %6 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %7 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %6, i64 0, i32 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %6, i64 0, i32 0
  %12 = bitcast %class.GrGLGpu* %6 to void (%class.GrGpu*, i32)***
  %13 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %13, i64 38
  %15 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %14, align 8
  tail call void %15(%class.GrGpu* %11, i32 %8) #8
  store i32 0, i32* %7, align 8
  br label %16

16:                                               ; preds = %4, %10
  %17 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %6, i64 0, i32 5, i32 0
  %18 = load %class.GrGLProgram*, %class.GrGLProgram** %17, align 8
  tail call void @_ZN11GrGLProgram12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrGLProgram* %18, %class.GrGeometryProcessor* dereferenceable(80) %1, %class.GrSurfaceProxy** %2, %class.GrPipeline* dereferenceable(128) %3) #8
  ret i1 true
}

declare void @_ZN11GrGLProgram12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrGLProgram*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass13onBindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrGLOpsRenderPass* nocapture, %class.sk_sp.137* nocapture, %class.sk_sp.137* nocapture, %class.sk_sp.137* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %7 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %8 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %7, i64 0, i32 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %7, i64 0, i32 0
  %13 = bitcast %class.GrGLGpu* %7 to void (%class.GrGpu*, i32)***
  %14 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %14, i64 38
  %16 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %15, align 8
  tail call void %16(%class.GrGpu* %12, i32 %9) #8
  store i32 0, i32* %8, align 8
  %17 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  br label %18

18:                                               ; preds = %5, %11
  %19 = phi %class.GrGLGpu* [ %7, %5 ], [ %17, %11 ]
  %20 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %7, i64 0, i32 5, i32 0
  %21 = load %class.GrGLProgram*, %class.GrGLProgram** %20, align 8
  %22 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %21, i64 0, i32 9
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %21, i64 0, i32 10
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, %23
  %27 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %1, i64 0, i32 0
  %28 = load %class.GrBuffer*, %class.GrBuffer** %27, align 8
  %29 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %19, i64 0, i32 12
  %30 = tail call %class.GrGLAttribArrayState* @_ZN7GrGLGpu18HWVertexArrayState23bindInternalVertexArrayEPS_PK8GrBuffer(%"class.GrGLGpu::HWVertexArrayState"* %29, %class.GrGLGpu* %19, %class.GrBuffer* %28) #8
  tail call void @_ZN20GrGLAttribArrayState18enableVertexArraysEPK7GrGLGpui18GrPrimitiveRestart(%class.GrGLAttribArrayState* %30, %class.GrGLGpu* %19, i32 %26, i1 zeroext %4) #8
  %31 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  store %class.GrGLAttribArrayState* %30, %class.GrGLAttribArrayState** %31, align 8
  %32 = load %class.GrBuffer*, %class.GrBuffer** %27, align 8
  %33 = icmp eq %class.GrBuffer* %32, null
  br i1 %33, label %50, label %34

34:                                               ; preds = %18
  %35 = bitcast %class.GrBuffer* %32 to i1 (%class.GrBuffer*)***
  %36 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %36, i64 5
  %38 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %37, align 8
  %39 = tail call zeroext i1 %38(%class.GrBuffer* nonnull %32) #8
  br i1 %39, label %40, label %48

40:                                               ; preds = %34
  %41 = bitcast %class.sk_sp.137* %1 to %class.GrCpuBuffer**
  %42 = load %class.GrCpuBuffer*, %class.GrCpuBuffer** %41, align 8
  %43 = getelementptr inbounds %class.GrCpuBuffer, %class.GrCpuBuffer* %42, i64 0, i32 2
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 8
  %47 = bitcast i16** %46 to i64*
  store i64 %45, i64* %47, align 8
  br label %50

48:                                               ; preds = %34
  %49 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 8
  store i16* null, i16** %49, align 8
  br label %50

50:                                               ; preds = %18, %40, %48
  %51 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %52 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %51, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %class.GrGLContext*, %class.GrGLContext** %52, align 8
  %54 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %53, i64 0, i32 0, i32 4, i32 0
  %55 = load %class.GrGLCaps*, %class.GrGLCaps** %54, align 8
  %56 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %55, i64 0, i32 12
  %57 = bitcast i40* %56 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = trunc i64 %58 to i8
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %105

61:                                               ; preds = %50
  %62 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %2, i64 0, i32 0
  %63 = load %class.GrBuffer*, %class.GrBuffer** %62, align 8
  %64 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %51, i64 0, i32 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %51, i64 0, i32 0
  %69 = bitcast %class.GrGLGpu* %51 to void (%class.GrGpu*, i32)***
  %70 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %69, align 8
  %71 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %70, i64 38
  %72 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %71, align 8
  tail call void %72(%class.GrGpu* %68, i32 %65) #8
  store i32 0, i32* %64, align 8
  br label %73

73:                                               ; preds = %67, %61
  %74 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %51, i64 0, i32 5, i32 0
  %75 = load %class.GrGLProgram*, %class.GrGLProgram** %74, align 8
  %76 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %75, i64 0, i32 12
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %105, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %75, i64 0, i32 9
  %81 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %75, i64 0, i32 10
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %105

84:                                               ; preds = %79
  %85 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %75, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i32 [ 0, %84 ], [ %102, %86 ]
  %88 = load i32, i32* %80, align 8
  %89 = add nsw i32 %88, %87
  %90 = sext i32 %89 to i64
  %91 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %85, align 8
  %92 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %31, align 8
  %93 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %94 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %91, i64 %90, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %91, i64 %90, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %91, i64 %90, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %91, i64 %90, i32 2
  %101 = load i64, i64* %100, align 8
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %92, %class.GrGLGpu* %93, i32 %95, %class.GrBuffer* %63, i32 %97, i32 %99, i32 %77, i64 %101, i32 1) #8
  %102 = add nuw nsw i32 %87, 1
  %103 = load i32, i32* %81, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %86, label %105

105:                                              ; preds = %86, %79, %73, %50
  %106 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 5
  %107 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %2, i64 0, i32 0
  %108 = bitcast %class.sk_sp.137* %2 to i64*
  %109 = load i64, i64* %108, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %107, align 8
  %110 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %106, i64 0, i32 0
  %111 = load %class.GrBuffer*, %class.GrBuffer** %110, align 8
  %112 = bitcast %class.sk_sp.137* %106 to i64*
  store i64 %109, i64* %112, align 8
  %113 = icmp eq %class.GrBuffer* %111, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %105
  %115 = bitcast %class.GrBuffer* %111 to void (%class.GrBuffer*)***
  %116 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %116, i64 3
  %118 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %117, align 8
  tail call void %118(%class.GrBuffer* nonnull %111) #8
  br label %119

119:                                              ; preds = %105, %114
  %120 = load %class.GrBuffer*, %class.GrBuffer** %27, align 8
  %121 = icmp eq %class.GrBuffer* %120, null
  %122 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %123 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %122, i64 0, i32 1, i32 0, i32 0, i32 0
  %124 = load %class.GrGLContext*, %class.GrGLContext** %123, align 8
  %125 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %124, i64 0, i32 0, i32 4, i32 0
  %126 = load %class.GrGLCaps*, %class.GrGLCaps** %125, align 8
  %127 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %126, i64 0, i32 12
  %128 = bitcast i40* %127 to i64*
  %129 = load i64, i64* %128, align 4
  br i1 %121, label %133, label %130

130:                                              ; preds = %119
  %131 = trunc i64 %129 to i8
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %136, label %177

133:                                              ; preds = %119
  %134 = and i64 %129, 134217728
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %177

136:                                              ; preds = %133, %130
  %137 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %3, i64 0, i32 0
  %138 = load %class.GrBuffer*, %class.GrBuffer** %137, align 8
  %139 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %122, i64 0, i32 0, i32 4
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %122, i64 0, i32 0
  %144 = bitcast %class.GrGLGpu* %122 to void (%class.GrGpu*, i32)***
  %145 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %144, align 8
  %146 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %145, i64 38
  %147 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %146, align 8
  tail call void %147(%class.GrGpu* %143, i32 %140) #8
  store i32 0, i32* %139, align 8
  br label %148

148:                                              ; preds = %142, %136
  %149 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %122, i64 0, i32 5, i32 0
  %150 = load %class.GrGLProgram*, %class.GrGLProgram** %149, align 8
  %151 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %150, i64 0, i32 11
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %177, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %150, i64 0, i32 9
  %156 = load i32, i32* %155, align 8
  %157 = icmp sgt i32 %156, 0
  br i1 %157, label %158, label %177

158:                                              ; preds = %154
  %159 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %150, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %160

160:                                              ; preds = %160, %158
  %161 = phi i64 [ 0, %158 ], [ %173, %160 ]
  %162 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %159, align 8
  %163 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %31, align 8
  %164 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %165 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %162, i64 %161, i32 3
  %166 = load i32, i32* %165, align 8
  %167 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %162, i64 %161, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %162, i64 %161, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %162, i64 %161, i32 2
  %172 = load i64, i64* %171, align 8
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %163, %class.GrGLGpu* %164, i32 %166, %class.GrBuffer* %138, i32 %168, i32 %170, i32 %152, i64 %172, i32 0) #8
  %173 = add nuw nsw i64 %161, 1
  %174 = load i32, i32* %155, align 8
  %175 = sext i32 %174 to i64
  %176 = icmp slt i64 %173, %175
  br i1 %176, label %160, label %177

177:                                              ; preds = %160, %133, %130, %154, %148
  %178 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 4
  %179 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %3, i64 0, i32 0
  %180 = bitcast %class.sk_sp.137* %3 to i64*
  %181 = load i64, i64* %180, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %179, align 8
  %182 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %178, i64 0, i32 0
  %183 = load %class.GrBuffer*, %class.GrBuffer** %182, align 8
  %184 = bitcast %class.sk_sp.137* %178 to i64*
  store i64 %181, i64* %184, align 8
  %185 = icmp eq %class.GrBuffer* %183, null
  br i1 %185, label %191, label %186

186:                                              ; preds = %177
  %187 = bitcast %class.GrBuffer* %183 to void (%class.GrBuffer*)***
  %188 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %187, align 8
  %189 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %188, i64 3
  %190 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %189, align 8
  tail call void %190(%class.GrBuffer* nonnull %183) #8
  br label %191

191:                                              ; preds = %177, %186
  %192 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 3
  %193 = bitcast %class.sk_sp.137* %1 to i64*
  %194 = load i64, i64* %193, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %27, align 8
  %195 = getelementptr inbounds %class.sk_sp.137, %class.sk_sp.137* %192, i64 0, i32 0
  %196 = load %class.GrBuffer*, %class.GrBuffer** %195, align 8
  %197 = bitcast %class.sk_sp.137* %192 to i64*
  store i64 %194, i64* %197, align 8
  %198 = icmp eq %class.GrBuffer* %196, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %191
  %200 = bitcast %class.GrBuffer* %196 to void (%class.GrBuffer*)***
  %201 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %200, align 8
  %202 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %201, i64 3
  %203 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %202, align 8
  tail call void %203(%class.GrBuffer* nonnull %196) #8
  br label %204

204:                                              ; preds = %191, %199
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass18bindInstanceBufferEPK8GrBufferi(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrBuffer*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %5 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %6 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %5, i64 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %5, i64 0, i32 0
  %11 = bitcast %class.GrGLGpu* %5 to void (%class.GrGpu*, i32)***
  %12 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %12, i64 38
  %14 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %13, align 8
  tail call void %14(%class.GrGpu* %10, i32 %7) #8
  store i32 0, i32* %6, align 8
  br label %15

15:                                               ; preds = %3, %9
  %16 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %5, i64 0, i32 5, i32 0
  %17 = load %class.GrGLProgram*, %class.GrGLProgram** %16, align 8
  %18 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %17, i64 0, i32 12
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %52, label %21

21:                                               ; preds = %15
  %22 = sext i32 %2 to i64
  %23 = sext i32 %19 to i64
  %24 = mul nsw i64 %23, %22
  %25 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %17, i64 0, i32 9
  %26 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %17, i64 0, i32 10
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %52

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %17, i64 0, i32 8, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  br label %32

32:                                               ; preds = %29, %32
  %33 = phi i32 [ 0, %29 ], [ %49, %32 ]
  %34 = load i32, i32* %25, align 8
  %35 = add nsw i32 %34, %33
  %36 = sext i32 %35 to i64
  %37 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %30, align 8
  %38 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %31, align 8
  %39 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %40 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %37, i64 %36, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %37, i64 %36, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %37, i64 %36, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %37, i64 %36, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, %24
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %38, %class.GrGLGpu* %39, i32 %41, %class.GrBuffer* %1, i32 %43, i32 %45, i32 %19, i64 %48, i32 1) #8
  %49 = add nuw nsw i32 %33, 1
  %50 = load i32, i32* %26, align 4
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %32, label %52

52:                                               ; preds = %32, %21, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass16bindVertexBufferEPK8GrBufferi(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrBuffer*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %5 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %6 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %5, i64 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %5, i64 0, i32 0
  %11 = bitcast %class.GrGLGpu* %5 to void (%class.GrGpu*, i32)***
  %12 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %12, i64 38
  %14 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %13, align 8
  tail call void %14(%class.GrGpu* %10, i32 %7) #8
  store i32 0, i32* %6, align 8
  br label %15

15:                                               ; preds = %3, %9
  %16 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %5, i64 0, i32 5, i32 0
  %17 = load %class.GrGLProgram*, %class.GrGLProgram** %16, align 8
  %18 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %17, i64 0, i32 11
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %49, label %21

21:                                               ; preds = %15
  %22 = sext i32 %2 to i64
  %23 = sext i32 %19 to i64
  %24 = mul nsw i64 %23, %22
  %25 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %17, i64 0, i32 9
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %49

28:                                               ; preds = %21
  %29 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %17, i64 0, i32 8, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  br label %31

31:                                               ; preds = %28, %31
  %32 = phi i64 [ 0, %28 ], [ %45, %31 ]
  %33 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %29, align 8
  %34 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %30, align 8
  %35 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %36 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %33, i64 %32, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %33, i64 %32, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %33, i64 %32, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %33, i64 %32, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, %24
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %34, %class.GrGLGpu* %35, i32 %37, %class.GrBuffer* %1, i32 %39, i32 %41, i32 %19, i64 %44, i32 0) #8
  %45 = add nuw nsw i64 %32, 1
  %46 = load i32, i32* %25, align 8
  %47 = sext i32 %46 to i64
  %48 = icmp slt i64 %45, %47
  br i1 %48, label %31, label %49

49:                                               ; preds = %31, %21, %15
  ret void
}

declare void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState*, %class.GrGLGpu*, i32, %class.GrBuffer*, i32, i32, i32, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass6onDrawEii(%class.GrGLOpsRenderPass* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %5 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %6 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 4
  %8 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %5, i8 zeroext %7) #8
  %9 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %10 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.GrGLContext*, %class.GrGLContext** %10, align 8
  %12 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %11, i64 0, i32 0, i32 4, i32 0
  %13 = load %class.GrGLCaps*, %class.GrGLCaps** %12, align 8
  %14 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %13, i64 0, i32 12
  %15 = bitcast i40* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = and i64 %16, 134217728
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %65, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 4, i32 0
  %21 = load %class.GrBuffer*, %class.GrBuffer** %20, align 8
  %22 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %9, i64 0, i32 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %9, i64 0, i32 0
  %27 = bitcast %class.GrGLGpu* %9 to void (%class.GrGpu*, i32)***
  %28 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %28, i64 38
  %30 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %29, align 8
  tail call void %30(%class.GrGpu* %26, i32 %23) #8
  store i32 0, i32* %22, align 8
  br label %31

31:                                               ; preds = %25, %19
  %32 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %9, i64 0, i32 5, i32 0
  %33 = load %class.GrGLProgram*, %class.GrGLProgram** %32, align 8
  %34 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %33, i64 0, i32 11
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %65, label %37

37:                                               ; preds = %31
  %38 = sext i32 %2 to i64
  %39 = sext i32 %35 to i64
  %40 = mul nsw i64 %39, %38
  %41 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %33, i64 0, i32 9
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %65

44:                                               ; preds = %37
  %45 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %33, i64 0, i32 8, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  br label %47

47:                                               ; preds = %47, %44
  %48 = phi i64 [ 0, %44 ], [ %61, %47 ]
  %49 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %45, align 8
  %50 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %46, align 8
  %51 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %52 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %49, i64 %48, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %49, i64 %48, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %49, i64 %48, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %49, i64 %48, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, %40
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %50, %class.GrGLGpu* %51, i32 %53, %class.GrBuffer* %21, i32 %55, i32 %57, i32 %35, i64 %60, i32 0) #8
  %61 = add nuw nsw i64 %48, 1
  %62 = load i32, i32* %41, align 8
  %63 = sext i32 %62 to i64
  %64 = icmp slt i64 %61, %63
  br i1 %64, label %47, label %65

65:                                               ; preds = %47, %3, %37, %31
  %66 = phi i32 [ %2, %3 ], [ 0, %31 ], [ 0, %37 ], [ 0, %47 ]
  %67 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %68 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %67, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %class.GrGLContext*, %class.GrGLContext** %68, align 8
  %70 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %69, i64 0, i32 0, i32 1, i32 0
  %71 = load %struct.GrGLInterface*, %struct.GrGLInterface** %70, align 8
  %72 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %71, i64 0, i32 3, i32 46, i32 0
  %73 = load void (i8*, i32, i32, i32)*, void (i8*, i32, i32, i32)** %72, align 8
  %74 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %71, i64 0, i32 3, i32 46, i32 1, i64 0
  %75 = bitcast i64* %74 to i8*
  tail call void %73(i8* %75, i32 %8, i32 %66, i32 %1) #8
  ret void
}

declare i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass13onDrawIndexedEiitti(%class.GrGLOpsRenderPass* nocapture readonly, i32, i32, i16 zeroext, i16 zeroext, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %8 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %9 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 4
  %11 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %8, i8 zeroext %10) #8
  %12 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %13 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %class.GrGLContext*, %class.GrGLContext** %13, align 8
  %15 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %14, i64 0, i32 0, i32 4, i32 0
  %16 = load %class.GrGLCaps*, %class.GrGLCaps** %15, align 8
  %17 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %16, i64 0, i32 12
  %18 = bitcast i40* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = trunc i64 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %40

22:                                               ; preds = %6
  %23 = icmp eq i32 %5, 0
  br i1 %23, label %86, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %14, i64 0, i32 0, i32 1, i32 0
  %26 = load %struct.GrGLInterface*, %struct.GrGLInterface** %25, align 8
  %27 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 8
  %28 = load i16*, i16** %27, align 8
  %29 = icmp eq i16* %28, null
  %30 = sext i32 %2 to i64
  %31 = getelementptr inbounds i16, i16* %28, i64 %30
  %32 = bitcast i16* %31 to i8*
  %33 = shl nsw i64 %30, 1
  %34 = inttoptr i64 %33 to i8*
  %35 = select i1 %29, i8* %34, i8* %32
  %36 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %26, i64 0, i32 3, i32 114, i32 0
  %37 = load void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, void (i8*, i32, i32, i32, i8*, i32, i32, i32)** %36, align 8
  %38 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %26, i64 0, i32 3, i32 114, i32 1, i64 0
  %39 = bitcast i64* %38 to i8*
  tail call void %37(i8* %39, i32 %11, i32 %1, i32 5123, i8* %35, i32 1, i32 %5, i32 0) #8
  br label %129

40:                                               ; preds = %6
  %41 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 4, i32 0
  %42 = load %class.GrBuffer*, %class.GrBuffer** %41, align 8
  %43 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %12, i64 0, i32 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %12, i64 0, i32 0
  %48 = bitcast %class.GrGLGpu* %12 to void (%class.GrGpu*, i32)***
  %49 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %48, align 8
  %50 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %49, i64 38
  %51 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %50, align 8
  tail call void %51(%class.GrGpu* %47, i32 %44) #8
  store i32 0, i32* %43, align 8
  br label %52

52:                                               ; preds = %46, %40
  %53 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %12, i64 0, i32 5, i32 0
  %54 = load %class.GrGLProgram*, %class.GrGLProgram** %53, align 8
  %55 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %54, i64 0, i32 11
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %86, label %58

58:                                               ; preds = %52
  %59 = sext i32 %5 to i64
  %60 = sext i32 %56 to i64
  %61 = mul nsw i64 %60, %59
  %62 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %54, i64 0, i32 9
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %86

65:                                               ; preds = %58
  %66 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %54, i64 0, i32 8, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ 0, %65 ], [ %82, %68 ]
  %70 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %66, align 8
  %71 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %67, align 8
  %72 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %73 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %70, i64 %69, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %70, i64 %69, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %70, i64 %69, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %70, i64 %69, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, %61
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %71, %class.GrGLGpu* %72, i32 %74, %class.GrBuffer* %42, i32 %76, i32 %78, i32 %56, i64 %81, i32 0) #8
  %82 = add nuw nsw i64 %69, 1
  %83 = load i32, i32* %62, align 8
  %84 = sext i32 %83 to i64
  %85 = icmp slt i64 %82, %84
  br i1 %85, label %68, label %86

86:                                               ; preds = %68, %58, %52, %22
  %87 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %88 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %87, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %class.GrGLContext*, %class.GrGLContext** %88, align 8
  %90 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %89, i64 0, i32 0, i32 4, i32 0
  %91 = load %class.GrGLCaps*, %class.GrGLCaps** %90, align 8
  %92 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %91, i64 0, i32 12
  %93 = bitcast i40* %92 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = and i64 %94, 64
  %96 = icmp eq i64 %95, 0
  %97 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %89, i64 0, i32 0, i32 1, i32 0
  %98 = load %struct.GrGLInterface*, %struct.GrGLInterface** %97, align 8
  br i1 %96, label %115, label %99

99:                                               ; preds = %86
  %100 = zext i16 %3 to i32
  %101 = zext i16 %4 to i32
  %102 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 8
  %103 = load i16*, i16** %102, align 8
  %104 = icmp eq i16* %103, null
  %105 = sext i32 %2 to i64
  %106 = getelementptr inbounds i16, i16* %103, i64 %105
  %107 = bitcast i16* %106 to i8*
  %108 = shl nsw i64 %105, 1
  %109 = inttoptr i64 %108 to i8*
  %110 = select i1 %104, i8* %109, i8* %107
  %111 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %98, i64 0, i32 3, i32 54, i32 0
  %112 = load void (i8*, i32, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i32, i8*)** %111, align 8
  %113 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %98, i64 0, i32 3, i32 54, i32 1, i64 0
  %114 = bitcast i64* %113 to i8*
  tail call void %112(i8* %114, i32 %11, i32 %100, i32 %101, i32 %1, i32 5123, i8* %110) #8
  br label %129

115:                                              ; preds = %86
  %116 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 8
  %117 = load i16*, i16** %116, align 8
  %118 = icmp eq i16* %117, null
  %119 = sext i32 %2 to i64
  %120 = getelementptr inbounds i16, i16* %117, i64 %119
  %121 = bitcast i16* %120 to i8*
  %122 = shl nsw i64 %119, 1
  %123 = inttoptr i64 %122 to i8*
  %124 = select i1 %118, i8* %123, i8* %121
  %125 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %98, i64 0, i32 3, i32 51, i32 0
  %126 = load void (i8*, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i8*)** %125, align 8
  %127 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %98, i64 0, i32 3, i32 51, i32 1, i64 0
  %128 = bitcast i64* %127 to i8*
  tail call void %126(i8* %128, i32 %11, i32 %1, i32 5123, i8* %124) #8
  br label %129

129:                                              ; preds = %99, %115, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass15onDrawInstancedEiiii(%class.GrGLOpsRenderPass* nocapture readonly, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %7 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %8 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.GrGLContext*, %class.GrGLContext** %8, align 8
  %10 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %9, i64 0, i32 0, i32 4, i32 0
  %11 = load %class.GrGLCaps*, %class.GrGLCaps** %10, align 8
  %12 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %11, i64 0, i32 12
  %13 = bitcast i40* %12 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = and i64 %14, 134217728
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %59, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 4, i32 0
  %19 = load %class.GrBuffer*, %class.GrBuffer** %18, align 8
  %20 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %7, i64 0, i32 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %7, i64 0, i32 0
  %25 = bitcast %class.GrGLGpu* %7 to void (%class.GrGpu*, i32)***
  %26 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %26, i64 38
  %28 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %27, align 8
  tail call void %28(%class.GrGpu* %24, i32 %21) #8
  store i32 0, i32* %20, align 8
  br label %29

29:                                               ; preds = %23, %17
  %30 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %7, i64 0, i32 5, i32 0
  %31 = load %class.GrGLProgram*, %class.GrGLProgram** %30, align 8
  %32 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %31, i64 0, i32 11
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %59, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %31, i64 0, i32 9
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %59

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %31, i64 0, i32 8, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  br label %42

42:                                               ; preds = %42, %39
  %43 = phi i64 [ 0, %39 ], [ %55, %42 ]
  %44 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %40, align 8
  %45 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %41, align 8
  %46 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %47 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %44, i64 %43, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %44, i64 %43, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %44, i64 %43, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %44, i64 %43, i32 2
  %54 = load i64, i64* %53, align 8
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %45, %class.GrGLGpu* %46, i32 %48, %class.GrBuffer* %19, i32 %50, i32 %52, i32 %33, i64 %54, i32 0) #8
  %55 = add nuw nsw i64 %43, 1
  %56 = load i32, i32* %36, align 8
  %57 = sext i32 %56 to i64
  %58 = icmp slt i64 %55, %57
  br i1 %58, label %42, label %59

59:                                               ; preds = %42, %5, %35, %29
  %60 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %61 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %class.GrGLContext*, %class.GrGLContext** %61, align 8
  %63 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %62, i64 0, i32 0, i32 4, i32 0
  %64 = load %class.GrGLCaps*, %class.GrGLCaps** %63, align 8
  %65 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %64, i64 0, i32 13
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  %68 = select i1 %67, i32 %1, i32 %66
  %69 = icmp sgt i32 %1, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %59
  %71 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %72 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 5, i32 0
  %73 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  %74 = sext i32 %68 to i64
  %75 = sext i32 %1 to i64
  %76 = sext i32 %2 to i64
  br label %78

77:                                               ; preds = %162, %59
  ret void

78:                                               ; preds = %165, %70
  %79 = phi %class.GrGLGpu* [ %60, %70 ], [ %166, %165 ]
  %80 = phi i64 [ 0, %70 ], [ %163, %165 ]
  %81 = load i8, i8* %71, align 4
  %82 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %79, i8 zeroext %81) #8
  %83 = sub nsw i64 %75, %80
  %84 = icmp sgt i64 %83, %74
  %85 = trunc i64 %83 to i32
  %86 = select i1 %84, i32 %68, i32 %85
  %87 = add nsw i64 %80, %76
  %88 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %89 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %88, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %class.GrGLContext*, %class.GrGLContext** %89, align 8
  %91 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %90, i64 0, i32 0, i32 4, i32 0
  %92 = load %class.GrGLCaps*, %class.GrGLCaps** %91, align 8
  %93 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %92, i64 0, i32 12
  %94 = bitcast i40* %93 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = trunc i64 %95 to i8
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %106

98:                                               ; preds = %78
  %99 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %90, i64 0, i32 0, i32 1, i32 0
  %100 = load %struct.GrGLInterface*, %struct.GrGLInterface** %99, align 8
  %101 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %100, i64 0, i32 3, i32 113, i32 0
  %102 = load void (i8*, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32)** %101, align 8
  %103 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %100, i64 0, i32 3, i32 113, i32 1, i64 0
  %104 = bitcast i64* %103 to i8*
  %105 = trunc i64 %87 to i32
  tail call void %102(i8* %104, i32 %82, i32 %4, i32 %3, i32 %86, i32 %105) #8
  br label %162

106:                                              ; preds = %78
  %107 = load %class.GrBuffer*, %class.GrBuffer** %72, align 8
  %108 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %88, i64 0, i32 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %88, i64 0, i32 0
  %113 = bitcast %class.GrGLGpu* %88 to void (%class.GrGpu*, i32)***
  %114 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %113, align 8
  %115 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %114, i64 38
  %116 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %115, align 8
  tail call void %116(%class.GrGpu* %112, i32 %109) #8
  store i32 0, i32* %108, align 8
  br label %117

117:                                              ; preds = %111, %106
  %118 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %88, i64 0, i32 5, i32 0
  %119 = load %class.GrGLProgram*, %class.GrGLProgram** %118, align 8
  %120 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %119, i64 0, i32 12
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %152, label %123

123:                                              ; preds = %117
  %124 = sext i32 %121 to i64
  %125 = mul nsw i64 %87, %124
  %126 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %119, i64 0, i32 9
  %127 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %119, i64 0, i32 10
  %128 = load i32, i32* %127, align 4
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %152

130:                                              ; preds = %123
  %131 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %119, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i32 [ 0, %130 ], [ %149, %132 ]
  %134 = load i32, i32* %126, align 8
  %135 = add nsw i32 %134, %133
  %136 = sext i32 %135 to i64
  %137 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %131, align 8
  %138 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %73, align 8
  %139 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %140 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %137, i64 %136, i32 3
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %137, i64 %136, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %137, i64 %136, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %137, i64 %136, i32 2
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, %125
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %138, %class.GrGLGpu* %139, i32 %141, %class.GrBuffer* %107, i32 %143, i32 %145, i32 %121, i64 %148, i32 1) #8
  %149 = add nuw nsw i32 %133, 1
  %150 = load i32, i32* %127, align 4
  %151 = icmp slt i32 %149, %150
  br i1 %151, label %132, label %152

152:                                              ; preds = %132, %117, %123
  %153 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  %154 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %153, i64 0, i32 1, i32 0, i32 0, i32 0
  %155 = load %class.GrGLContext*, %class.GrGLContext** %154, align 8
  %156 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %155, i64 0, i32 0, i32 1, i32 0
  %157 = load %struct.GrGLInterface*, %struct.GrGLInterface** %156, align 8
  %158 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %157, i64 0, i32 3, i32 48, i32 0
  %159 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** %158, align 8
  %160 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %157, i64 0, i32 3, i32 48, i32 1, i64 0
  %161 = bitcast i64* %160 to i8*
  tail call void %159(i8* %161, i32 %82, i32 %4, i32 %3, i32 %86) #8
  br label %162

162:                                              ; preds = %152, %98
  %163 = add i64 %80, %74
  %164 = icmp slt i64 %163, %75
  br i1 %164, label %165, label %77

165:                                              ; preds = %162
  %166 = load %class.GrGLGpu*, %class.GrGLGpu** %6, align 8
  br label %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass22onDrawIndexedInstancedEiiiii(%class.GrGLOpsRenderPass* nocapture readonly, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %8 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %9 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %class.GrGLContext*, %class.GrGLContext** %9, align 8
  %11 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %10, i64 0, i32 0, i32 4, i32 0
  %12 = load %class.GrGLCaps*, %class.GrGLCaps** %11, align 8
  %13 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %12, i64 0, i32 13
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 %3, i32 %14
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %6
  %19 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %20 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 5, i32 0
  %21 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  %22 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 4, i32 0
  %23 = sext i32 %5 to i64
  %24 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 8
  %25 = sext i32 %2 to i64
  %26 = shl nsw i64 %25, 1
  %27 = inttoptr i64 %26 to i8*
  %28 = sext i32 %16 to i64
  %29 = sext i32 %3 to i64
  %30 = sext i32 %4 to i64
  br label %32

31:                                               ; preds = %170, %6
  ret void

32:                                               ; preds = %173, %18
  %33 = phi %class.GrGLGpu* [ %8, %18 ], [ %174, %173 ]
  %34 = phi i64 [ 0, %18 ], [ %171, %173 ]
  %35 = load i8, i8* %19, align 4
  %36 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %33, i8 zeroext %35) #8
  %37 = sub nsw i64 %29, %34
  %38 = icmp sgt i64 %37, %28
  %39 = trunc i64 %37 to i32
  %40 = select i1 %38, i32 %16, i32 %39
  %41 = add nsw i64 %34, %30
  %42 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %43 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %42, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %class.GrGLContext*, %class.GrGLContext** %43, align 8
  %45 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %44, i64 0, i32 0, i32 4, i32 0
  %46 = load %class.GrGLCaps*, %class.GrGLCaps** %45, align 8
  %47 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %46, i64 0, i32 12
  %48 = bitcast i40* %47 to i64*
  %49 = load i64, i64* %48, align 4
  %50 = trunc i64 %49 to i8
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %65

52:                                               ; preds = %32
  %53 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %44, i64 0, i32 0, i32 1, i32 0
  %54 = load %struct.GrGLInterface*, %struct.GrGLInterface** %53, align 8
  %55 = load i16*, i16** %24, align 8
  %56 = icmp eq i16* %55, null
  %57 = getelementptr inbounds i16, i16* %55, i64 %25
  %58 = bitcast i16* %57 to i8*
  %59 = select i1 %56, i8* %27, i8* %58
  %60 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %54, i64 0, i32 3, i32 114, i32 0
  %61 = load void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, void (i8*, i32, i32, i32, i8*, i32, i32, i32)** %60, align 8
  %62 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %54, i64 0, i32 3, i32 114, i32 1, i64 0
  %63 = bitcast i64* %62 to i8*
  %64 = trunc i64 %41 to i32
  tail call void %61(i8* %63, i32 %36, i32 %1, i32 5123, i8* %59, i32 %40, i32 %5, i32 %64) #8
  br label %170

65:                                               ; preds = %32
  %66 = load %class.GrBuffer*, %class.GrBuffer** %20, align 8
  %67 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %42, i64 0, i32 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %42, i64 0, i32 0
  %72 = bitcast %class.GrGLGpu* %42 to void (%class.GrGpu*, i32)***
  %73 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %72, align 8
  %74 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %73, i64 38
  %75 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %74, align 8
  tail call void %75(%class.GrGpu* %71, i32 %68) #8
  store i32 0, i32* %67, align 8
  br label %76

76:                                               ; preds = %70, %65
  %77 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %42, i64 0, i32 5, i32 0
  %78 = load %class.GrGLProgram*, %class.GrGLProgram** %77, align 8
  %79 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %78, i64 0, i32 12
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %111, label %82

82:                                               ; preds = %76
  %83 = sext i32 %80 to i64
  %84 = mul nsw i64 %41, %83
  %85 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %78, i64 0, i32 9
  %86 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %78, i64 0, i32 10
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %111

89:                                               ; preds = %82
  %90 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %78, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i32 [ 0, %89 ], [ %108, %91 ]
  %93 = load i32, i32* %85, align 8
  %94 = add nsw i32 %93, %92
  %95 = sext i32 %94 to i64
  %96 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %90, align 8
  %97 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %21, align 8
  %98 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %99 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %96, i64 %95, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %96, i64 %95, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %96, i64 %95, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %96, i64 %95, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %84
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %97, %class.GrGLGpu* %98, i32 %100, %class.GrBuffer* %66, i32 %102, i32 %104, i32 %80, i64 %107, i32 1) #8
  %108 = add nuw nsw i32 %92, 1
  %109 = load i32, i32* %86, align 4
  %110 = icmp slt i32 %108, %109
  br i1 %110, label %91, label %111

111:                                              ; preds = %91, %76, %82
  %112 = load %class.GrBuffer*, %class.GrBuffer** %22, align 8
  %113 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %114 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %113, i64 0, i32 0, i32 4
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %113, i64 0, i32 0
  %119 = bitcast %class.GrGLGpu* %113 to void (%class.GrGpu*, i32)***
  %120 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %119, align 8
  %121 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %120, i64 38
  %122 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %121, align 8
  tail call void %122(%class.GrGpu* %118, i32 %115) #8
  store i32 0, i32* %114, align 8
  br label %123

123:                                              ; preds = %117, %111
  %124 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %113, i64 0, i32 5, i32 0
  %125 = load %class.GrGLProgram*, %class.GrGLProgram** %124, align 8
  %126 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %125, i64 0, i32 11
  %127 = load i32, i32* %126, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %155, label %129

129:                                              ; preds = %123
  %130 = sext i32 %127 to i64
  %131 = mul nsw i64 %130, %23
  %132 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %125, i64 0, i32 9
  %133 = load i32, i32* %132, align 8
  %134 = icmp sgt i32 %133, 0
  br i1 %134, label %135, label %155

135:                                              ; preds = %129
  %136 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %125, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %151, %137 ]
  %139 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %136, align 8
  %140 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %21, align 8
  %141 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %142 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %139, i64 %138, i32 3
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %139, i64 %138, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %139, i64 %138, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %139, i64 %138, i32 2
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, %131
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %140, %class.GrGLGpu* %141, i32 %143, %class.GrBuffer* %112, i32 %145, i32 %147, i32 %127, i64 %150, i32 0) #8
  %151 = add nuw nsw i64 %138, 1
  %152 = load i32, i32* %132, align 8
  %153 = sext i32 %152 to i64
  %154 = icmp slt i64 %151, %153
  br i1 %154, label %137, label %155

155:                                              ; preds = %137, %123, %129
  %156 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %157 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %156, i64 0, i32 1, i32 0, i32 0, i32 0
  %158 = load %class.GrGLContext*, %class.GrGLContext** %157, align 8
  %159 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %158, i64 0, i32 0, i32 1, i32 0
  %160 = load %struct.GrGLInterface*, %struct.GrGLInterface** %159, align 8
  %161 = load i16*, i16** %24, align 8
  %162 = icmp eq i16* %161, null
  %163 = getelementptr inbounds i16, i16* %161, i64 %25
  %164 = bitcast i16* %163 to i8*
  %165 = select i1 %162, i8* %27, i8* %164
  %166 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %160, i64 0, i32 3, i32 53, i32 0
  %167 = load void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)** %166, align 8
  %168 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %160, i64 0, i32 3, i32 53, i32 1, i64 0
  %169 = bitcast i64* %168 to i8*
  tail call void %167(i8* %169, i32 %36, i32 %1, i32 5123, i8* %165, i32 %40) #8
  br label %170

170:                                              ; preds = %155, %52
  %171 = add i64 %34, %28
  %172 = icmp slt i64 %171, %29
  br i1 %172, label %173, label %31

173:                                              ; preds = %170
  %174 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  br label %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass14onDrawIndirectEPK8GrBuffermi(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrBuffer*, i64, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %6 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %7 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %class.GrGLContext*, %class.GrGLContext** %7, align 8
  %9 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %8, i64 0, i32 0, i32 4, i32 0
  %10 = load %class.GrGLCaps*, %class.GrGLCaps** %9, align 8
  %11 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %10, i64 0, i32 12
  %12 = bitcast i40* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = and i64 %13, 134217728
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %58, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 4, i32 0
  %18 = load %class.GrBuffer*, %class.GrBuffer** %17, align 8
  %19 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %6, i64 0, i32 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %6, i64 0, i32 0
  %24 = bitcast %class.GrGLGpu* %6 to void (%class.GrGpu*, i32)***
  %25 = load void (%class.GrGpu*, i32)**, void (%class.GrGpu*, i32)*** %24, align 8
  %26 = getelementptr inbounds void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %25, i64 38
  %27 = load void (%class.GrGpu*, i32)*, void (%class.GrGpu*, i32)** %26, align 8
  tail call void %27(%class.GrGpu* %23, i32 %20) #8
  store i32 0, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %16
  %29 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %6, i64 0, i32 5, i32 0
  %30 = load %class.GrGLProgram*, %class.GrGLProgram** %29, align 8
  %31 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %30, i64 0, i32 11
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %30, i64 0, i32 9
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %58

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %30, i64 0, i32 8, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 7
  br label %41

41:                                               ; preds = %41, %38
  %42 = phi i64 [ 0, %38 ], [ %54, %41 ]
  %43 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %39, align 8
  %44 = load %class.GrGLAttribArrayState*, %class.GrGLAttribArrayState** %40, align 8
  %45 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %46 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %43, i64 %42, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %43, i64 %42, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %43, i64 %42, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.GrGLProgram::Attribute", %"struct.GrGLProgram::Attribute"* %43, i64 %42, i32 2
  %53 = load i64, i64* %52, align 8
  tail call void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* %44, %class.GrGLGpu* %45, i32 %47, %class.GrBuffer* %18, i32 %49, i32 %51, i32 %32, i64 %53, i32 0) #8
  %54 = add nuw nsw i64 %42, 1
  %55 = load i32, i32* %35, align 8
  %56 = sext i32 %55 to i64
  %57 = icmp slt i64 %54, %56
  br i1 %57, label %41, label %58

58:                                               ; preds = %41, %4, %34, %28
  %59 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %60 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %59, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %class.GrGLContext*, %class.GrGLContext** %60, align 8
  %62 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %61, i64 0, i32 0, i32 4, i32 0
  %63 = load %class.GrGLCaps*, %class.GrGLCaps** %62, align 8
  %64 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %63, i64 0, i32 11
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %67, label %68

67:                                               ; preds = %58
  tail call void @_ZN17GrGLOpsRenderPass27multiDrawArraysANGLEOrWebGLEPK8GrBuffermi(%class.GrGLOpsRenderPass* %0, %class.GrBuffer* %1, i64 %2, i32 %3)
  br label %143

68:                                               ; preds = %58
  %69 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %59, i32 2, %class.GrBuffer* %1) #8
  %70 = icmp sgt i32 %3, 1
  br i1 %70, label %71, label %107

71:                                               ; preds = %68
  %72 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %73 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %72, i64 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %class.GrGLContext*, %class.GrGLContext** %73, align 8
  %75 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %74, i64 0, i32 0, i32 4, i32 0
  %76 = load %class.GrGLCaps*, %class.GrGLCaps** %75, align 8
  %77 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %76, i64 0, i32 11
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %109

80:                                               ; preds = %71
  %81 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %82 = load i8, i8* %81, align 4
  %83 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %72, i8 zeroext %82) #8
  %84 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %85 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %84, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %class.GrGLContext*, %class.GrGLContext** %85, align 8
  %87 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %86, i64 0, i32 0, i32 1, i32 0
  %88 = load %struct.GrGLInterface*, %struct.GrGLInterface** %87, align 8
  %89 = bitcast %class.GrBuffer* %1 to i1 (%class.GrBuffer*)***
  %90 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %89, align 8
  %91 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %90, i64 5
  %92 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %91, align 8
  %93 = tail call zeroext i1 %92(%class.GrBuffer* %1) #8
  br i1 %93, label %94, label %99

94:                                               ; preds = %80
  %95 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %1, i64 2
  %96 = bitcast %class.GrBuffer* %95 to i8**
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 %2
  br label %101

99:                                               ; preds = %80
  %100 = inttoptr i64 %2 to i8*
  br label %101

101:                                              ; preds = %94, %99
  %102 = phi i8* [ %98, %94 ], [ %100, %99 ]
  %103 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %88, i64 0, i32 3, i32 115, i32 0
  %104 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %103, align 8
  %105 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %88, i64 0, i32 3, i32 115, i32 1, i64 0
  %106 = bitcast i64* %105 to i8*
  tail call void %104(i8* %106, i32 %83, i8* %102, i32 %3, i32 16) #8
  br label %143

107:                                              ; preds = %68
  %108 = icmp eq i32 %3, 1
  br i1 %108, label %109, label %143

109:                                              ; preds = %71, %107
  %110 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %111 = bitcast %class.GrBuffer* %1 to i1 (%class.GrBuffer*)***
  %112 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %1, i64 2
  %113 = bitcast %class.GrBuffer* %112 to i8**
  br label %114

114:                                              ; preds = %134, %109
  %115 = phi i64 [ %2, %109 ], [ %140, %134 ]
  %116 = phi i32 [ 0, %109 ], [ %141, %134 ]
  %117 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %118 = load i8, i8* %110, align 4
  %119 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %117, i8 zeroext %118) #8
  %120 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %121 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %120, i64 0, i32 1, i32 0, i32 0, i32 0
  %122 = load %class.GrGLContext*, %class.GrGLContext** %121, align 8
  %123 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %122, i64 0, i32 0, i32 1, i32 0
  %124 = load %struct.GrGLInterface*, %struct.GrGLInterface** %123, align 8
  %125 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %111, align 8
  %126 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %125, i64 5
  %127 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %126, align 8
  %128 = tail call zeroext i1 %127(%class.GrBuffer* %1) #8
  br i1 %128, label %129, label %132

129:                                              ; preds = %114
  %130 = load i8*, i8** %113, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 %115
  br label %134

132:                                              ; preds = %114
  %133 = inttoptr i64 %115 to i8*
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi i8* [ %131, %129 ], [ %133, %132 ]
  %136 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %124, i64 0, i32 3, i32 47, i32 0
  %137 = load void (i8*, i32, i8*)*, void (i8*, i32, i8*)** %136, align 8
  %138 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %124, i64 0, i32 3, i32 47, i32 1, i64 0
  %139 = bitcast i64* %138 to i8*
  tail call void %137(i8* %139, i32 %119, i8* %135) #8
  %140 = add i64 %115, 16
  %141 = add nuw nsw i32 %116, 1
  %142 = icmp eq i32 %141, %3
  br i1 %142, label %143, label %114

143:                                              ; preds = %134, %107, %67, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass27multiDrawArraysANGLEOrWebGLEPK8GrBuffermi(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrBuffer* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca [128 x i32], align 16
  %6 = alloca [128 x i32], align 16
  %7 = alloca [128 x i32], align 16
  %8 = alloca [128 x i32], align 16
  %9 = bitcast [128 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 512, i1 false)
  %10 = bitcast [128 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 512, i1 false)
  %11 = bitcast [128 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 512, i1 false)
  %12 = bitcast [128 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 512, i1 false)
  %13 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %14 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %15 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %16 = load i8, i8* %15, align 4
  %17 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %14, i8 zeroext %16) #8
  %18 = icmp eq i32 %3, 0
  br i1 %18, label %79, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %1, i64 2
  %21 = bitcast %class.GrBuffer* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %2
  %24 = bitcast i8* %23 to %struct.GrDrawIndirectCommand*
  %25 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 0
  %26 = getelementptr inbounds [128 x i32], [128 x i32]* %6, i64 0, i64 0
  %27 = getelementptr inbounds [128 x i32], [128 x i32]* %7, i64 0, i64 0
  %28 = getelementptr inbounds [128 x i32], [128 x i32]* %8, i64 0, i64 0
  br label %29

29:                                               ; preds = %19, %74
  %30 = phi %struct.GrDrawIndirectCommand* [ %24, %19 ], [ %77, %74 ]
  %31 = phi i32 [ %3, %19 ], [ %75, %74 ]
  %32 = icmp slt i32 %31, 128
  %33 = select i1 %32, i32 %31, i32 128
  %34 = icmp sgt i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = sext i32 %33 to i64
  br label %44

37:                                               ; preds = %44, %29
  %38 = icmp eq i32 %33, 1
  %39 = load %class.GrGLGpu*, %class.GrGLGpu** %13, align 8
  %40 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %39, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %class.GrGLContext*, %class.GrGLContext** %40, align 8
  %42 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %41, i64 0, i32 0, i32 1, i32 0
  %43 = load %struct.GrGLInterface*, %struct.GrGLInterface** %42, align 8
  br i1 %38, label %60, label %69

44:                                               ; preds = %35, %44
  %45 = phi i64 [ 0, %35 ], [ %58, %44 ]
  %46 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %30, i64 %45, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %30, i64 %45, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %30, i64 %45, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %30, i64 %45, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 %45
  store i32 %51, i32* %54, align 4
  %55 = getelementptr inbounds [128 x i32], [128 x i32]* %6, i64 0, i64 %45
  store i32 %47, i32* %55, align 4
  %56 = getelementptr inbounds [128 x i32], [128 x i32]* %7, i64 0, i64 %45
  store i32 %49, i32* %56, align 4
  %57 = getelementptr inbounds [128 x i32], [128 x i32]* %8, i64 0, i64 %45
  store i32 %53, i32* %57, align 4
  %58 = add nuw nsw i64 %45, 1
  %59 = icmp slt i64 %58, %36
  br i1 %59, label %44, label %37

60:                                               ; preds = %37
  %61 = load i32, i32* %25, align 16
  %62 = load i32, i32* %26, align 16
  %63 = load i32, i32* %27, align 16
  %64 = load i32, i32* %28, align 16
  %65 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %43, i64 0, i32 3, i32 113, i32 0
  %66 = load void (i8*, i32, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32, i32)** %65, align 8
  %67 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %43, i64 0, i32 3, i32 113, i32 1, i64 0
  %68 = bitcast i64* %67 to i8*
  call void %66(i8* %68, i32 %17, i32 %61, i32 %62, i32 %63, i32 %64) #8
  br label %74

69:                                               ; preds = %37
  %70 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %43, i64 0, i32 3, i32 117, i32 0
  %71 = load void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, void (i8*, i32, i32*, i32*, i32*, i32*, i32)** %70, align 8
  %72 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %43, i64 0, i32 3, i32 117, i32 1, i64 0
  %73 = bitcast i64* %72 to i8*
  call void %71(i8* %73, i32 %17, i32* nonnull %25, i32* nonnull %26, i32* nonnull %27, i32* nonnull %28, i32 %33) #8
  br label %74

74:                                               ; preds = %69, %60
  %75 = sub nsw i32 %31, %33
  %76 = sext i32 %33 to i64
  %77 = getelementptr inbounds %struct.GrDrawIndirectCommand, %struct.GrDrawIndirectCommand* %30, i64 %76
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %79, label %29

79:                                               ; preds = %74, %4
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu*, i32, %class.GrBuffer*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrBuffer*, i64, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %6 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %7 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %class.GrGLContext*, %class.GrGLContext** %7, align 8
  %9 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %8, i64 0, i32 0, i32 4, i32 0
  %10 = load %class.GrGLCaps*, %class.GrGLCaps** %9, align 8
  %11 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %15

14:                                               ; preds = %4
  tail call void @_ZN17GrGLOpsRenderPass29multiDrawElementsANGLEOrWebGLEPK8GrBuffermi(%class.GrGLOpsRenderPass* %0, %class.GrBuffer* %1, i64 %2, i32 %3)
  br label %90

15:                                               ; preds = %4
  %16 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %6, i32 2, %class.GrBuffer* %1) #8
  %17 = icmp sgt i32 %3, 1
  br i1 %17, label %18, label %54

18:                                               ; preds = %15
  %19 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %20 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %class.GrGLContext*, %class.GrGLContext** %20, align 8
  %22 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %21, i64 0, i32 0, i32 4, i32 0
  %23 = load %class.GrGLCaps*, %class.GrGLCaps** %22, align 8
  %24 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %23, i64 0, i32 11
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %56

27:                                               ; preds = %18
  %28 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %29 = load i8, i8* %28, align 4
  %30 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %19, i8 zeroext %29) #8
  %31 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %32 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %31, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %class.GrGLContext*, %class.GrGLContext** %32, align 8
  %34 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %33, i64 0, i32 0, i32 1, i32 0
  %35 = load %struct.GrGLInterface*, %struct.GrGLInterface** %34, align 8
  %36 = bitcast %class.GrBuffer* %1 to i1 (%class.GrBuffer*)***
  %37 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %37, i64 5
  %39 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %38, align 8
  %40 = tail call zeroext i1 %39(%class.GrBuffer* %1) #8
  br i1 %40, label %41, label %46

41:                                               ; preds = %27
  %42 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %1, i64 2
  %43 = bitcast %class.GrBuffer* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %2
  br label %48

46:                                               ; preds = %27
  %47 = inttoptr i64 %2 to i8*
  br label %48

48:                                               ; preds = %41, %46
  %49 = phi i8* [ %45, %41 ], [ %47, %46 ]
  %50 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %35, i64 0, i32 3, i32 116, i32 0
  %51 = load void (i8*, i32, i32, i8*, i32, i32)*, void (i8*, i32, i32, i8*, i32, i32)** %50, align 8
  %52 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %35, i64 0, i32 3, i32 116, i32 1, i64 0
  %53 = bitcast i64* %52 to i8*
  tail call void %51(i8* %53, i32 %30, i32 5123, i8* %49, i32 %3, i32 20) #8
  br label %90

54:                                               ; preds = %15
  %55 = icmp eq i32 %3, 1
  br i1 %55, label %56, label %90

56:                                               ; preds = %18, %54
  %57 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %58 = bitcast %class.GrBuffer* %1 to i1 (%class.GrBuffer*)***
  %59 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %1, i64 2
  %60 = bitcast %class.GrBuffer* %59 to i8**
  br label %61

61:                                               ; preds = %81, %56
  %62 = phi i64 [ %2, %56 ], [ %87, %81 ]
  %63 = phi i32 [ 0, %56 ], [ %88, %81 ]
  %64 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %65 = load i8, i8* %57, align 4
  %66 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %64, i8 zeroext %65) #8
  %67 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %68 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %67, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %class.GrGLContext*, %class.GrGLContext** %68, align 8
  %70 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %69, i64 0, i32 0, i32 1, i32 0
  %71 = load %struct.GrGLInterface*, %struct.GrGLInterface** %70, align 8
  %72 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %58, align 8
  %73 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %72, i64 5
  %74 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %73, align 8
  %75 = tail call zeroext i1 %74(%class.GrBuffer* %1) #8
  br i1 %75, label %76, label %79

76:                                               ; preds = %61
  %77 = load i8*, i8** %60, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %62
  br label %81

79:                                               ; preds = %61
  %80 = inttoptr i64 %62 to i8*
  br label %81

81:                                               ; preds = %76, %79
  %82 = phi i8* [ %78, %76 ], [ %80, %79 ]
  %83 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %71, i64 0, i32 3, i32 52, i32 0
  %84 = load void (i8*, i32, i32, i8*)*, void (i8*, i32, i32, i8*)** %83, align 8
  %85 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %71, i64 0, i32 3, i32 52, i32 1, i64 0
  %86 = bitcast i64* %85 to i8*
  tail call void %84(i8* %86, i32 %66, i32 5123, i8* %82) #8
  %87 = add i64 %62, 20
  %88 = add nuw nsw i32 %63, 1
  %89 = icmp eq i32 %88, %3
  br i1 %89, label %90, label %61

90:                                               ; preds = %81, %54, %14, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass29multiDrawElementsANGLEOrWebGLEPK8GrBuffermi(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrBuffer* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca [128 x i32], align 16
  %6 = alloca [128 x i8*], align 16
  %7 = alloca [128 x i32], align 16
  %8 = alloca [128 x i32], align 16
  %9 = alloca [128 x i32], align 16
  %10 = bitcast [128 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 512, i1 false)
  %11 = bitcast [128 x i8*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 1024, i1 false)
  %12 = bitcast [128 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 512, i1 false)
  %13 = bitcast [128 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 512, i1 false)
  %14 = bitcast [128 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 512, i1 false)
  %15 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %16 = load %class.GrGLGpu*, %class.GrGLGpu** %15, align 8
  %17 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 6
  %18 = load i8, i8* %17, align 4
  %19 = tail call i32 @_ZN7GrGLGpu13prepareToDrawE15GrPrimitiveType(%class.GrGLGpu* %16, i8 zeroext %18) #8
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %95, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %1, i64 2
  %23 = bitcast %class.GrBuffer* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %2
  %26 = bitcast i8* %25 to %struct.GrDrawIndexedIndirectCommand*
  %27 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 8
  %28 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 0
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* %6, i64 0, i64 0
  %30 = getelementptr inbounds [128 x i32], [128 x i32]* %7, i64 0, i64 0
  %31 = getelementptr inbounds [128 x i32], [128 x i32]* %8, i64 0, i64 0
  %32 = getelementptr inbounds [128 x i32], [128 x i32]* %9, i64 0, i64 0
  br label %33

33:                                               ; preds = %21, %90
  %34 = phi %struct.GrDrawIndexedIndirectCommand* [ %26, %21 ], [ %93, %90 ]
  %35 = phi i32 [ %3, %21 ], [ %91, %90 ]
  %36 = icmp slt i32 %35, 128
  %37 = select i1 %36, i32 %35, i32 128
  %38 = icmp sgt i32 %35, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = sext i32 %37 to i64
  %41 = load i16*, i16** %27, align 8
  %42 = icmp eq i16* %41, null
  br label %50

43:                                               ; preds = %50, %33
  %44 = icmp eq i32 %37, 1
  %45 = load %class.GrGLGpu*, %class.GrGLGpu** %15, align 8
  %46 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %45, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %class.GrGLContext*, %class.GrGLContext** %46, align 8
  %48 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %47, i64 0, i32 0, i32 1, i32 0
  %49 = load %struct.GrGLInterface*, %struct.GrGLInterface** %48, align 8
  br i1 %44, label %75, label %85

50:                                               ; preds = %39, %50
  %51 = phi i64 [ 0, %39 ], [ %73, %50 ]
  %52 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %34, i64 %51, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %34, i64 %51, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %34, i64 %51, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %34, i64 %51, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %34, i64 %51, i32 4
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 %51
  store i32 %53, i32* %62, align 4
  %63 = sext i32 %57 to i64
  %64 = getelementptr inbounds i16, i16* %41, i64 %63
  %65 = bitcast i16* %64 to i8*
  %66 = shl nsw i64 %63, 1
  %67 = inttoptr i64 %66 to i8*
  %68 = select i1 %42, i8* %67, i8* %65
  %69 = getelementptr inbounds [128 x i8*], [128 x i8*]* %6, i64 0, i64 %51
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds [128 x i32], [128 x i32]* %7, i64 0, i64 %51
  store i32 %55, i32* %70, align 4
  %71 = getelementptr inbounds [128 x i32], [128 x i32]* %8, i64 0, i64 %51
  store i32 %59, i32* %71, align 4
  %72 = getelementptr inbounds [128 x i32], [128 x i32]* %9, i64 0, i64 %51
  store i32 %61, i32* %72, align 4
  %73 = add nuw nsw i64 %51, 1
  %74 = icmp slt i64 %73, %40
  br i1 %74, label %50, label %43

75:                                               ; preds = %43
  %76 = load i32, i32* %28, align 16
  %77 = load i8*, i8** %29, align 16
  %78 = load i32, i32* %30, align 16
  %79 = load i32, i32* %31, align 16
  %80 = load i32, i32* %32, align 16
  %81 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %49, i64 0, i32 3, i32 114, i32 0
  %82 = load void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, void (i8*, i32, i32, i32, i8*, i32, i32, i32)** %81, align 8
  %83 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %49, i64 0, i32 3, i32 114, i32 1, i64 0
  %84 = bitcast i64* %83 to i8*
  call void %82(i8* %84, i32 %19, i32 %76, i32 5123, i8* %77, i32 %78, i32 %79, i32 %80) #8
  br label %90

85:                                               ; preds = %43
  %86 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %49, i64 0, i32 3, i32 118, i32 0
  %87 = load void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)** %86, align 8
  %88 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %49, i64 0, i32 3, i32 118, i32 1, i64 0
  %89 = bitcast i64* %88 to i8*
  call void %87(i8* %89, i32 %19, i32* nonnull %28, i32 5123, i8** nonnull %29, i32* nonnull %30, i32* nonnull %31, i32* nonnull %32, i32 %37) #8
  br label %90

90:                                               ; preds = %85, %75
  %91 = sub nsw i32 %35, %37
  %92 = sext i32 %37 to i64
  %93 = getelementptr inbounds %struct.GrDrawIndexedIndirectCommand, %struct.GrDrawIndexedIndirectCommand* %34, i64 %92
  %94 = icmp eq i32 %91, 0
  br i1 %94, label %95, label %33

95:                                               ; preds = %90, %4
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass7onClearERK14GrScissorStateNSt3__15arrayIfLm4EEE(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrScissorState* dereferenceable(24), <2 x float>, <2 x float>) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %6 = load %class.GrGLGpu*, %class.GrGLGpu** %5, align 8
  %7 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 2
  %8 = load %class.GrRenderTarget*, %class.GrRenderTarget** %7, align 8
  %9 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  tail call void @_ZN7GrGLGpu5clearERK14GrScissorStateNSt3__15arrayIfLm4EEEP14GrRenderTargetb15GrSurfaceOrigin(%class.GrGLGpu* %6, %class.GrScissorState* dereferenceable(24) %1, <2 x float> %2, <2 x float> %3, %class.GrRenderTarget* %8, i1 zeroext %11, i32 %13) #8
  ret void
}

declare void @_ZN7GrGLGpu5clearERK14GrScissorStateNSt3__15arrayIfLm4EEEP14GrRenderTargetb15GrSurfaceOrigin(%class.GrGLGpu*, %class.GrScissorState* dereferenceable(24), <2 x float>, <2 x float>, %class.GrRenderTarget*, i1 zeroext, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrGLOpsRenderPass18onClearStencilClipERK14GrScissorStateb(%class.GrGLOpsRenderPass* nocapture readonly, %class.GrScissorState* dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %5 = load %class.GrGLGpu*, %class.GrGLGpu** %4, align 8
  %6 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 2
  %7 = load %class.GrRenderTarget*, %class.GrRenderTarget** %6, align 8
  %8 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN7GrGLGpu16clearStencilClipERK14GrScissorStatebP14GrRenderTargetb15GrSurfaceOrigin(%class.GrGLGpu* %5, %class.GrScissorState* dereferenceable(24) %1, i1 zeroext %2, %class.GrRenderTarget* %7, i1 zeroext %10, i32 %12) #8
  ret void
}

declare void @_ZN7GrGLGpu16clearStencilClipERK14GrScissorStatebP14GrRenderTargetb15GrSurfaceOrigin(%class.GrGLGpu*, %class.GrScissorState* dereferenceable(24), i1 zeroext, %class.GrRenderTarget*, i1 zeroext, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrGLOpsRenderPassD0Ev(%class.GrGLOpsRenderPass*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15GrOpsRenderPass, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 5, i32 0
  %4 = load %class.GrBuffer*, %class.GrBuffer** %3, align 8
  %5 = icmp eq %class.GrBuffer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrBuffer* %4 to void (%class.GrBuffer*)***
  %8 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %8, i64 3
  %10 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, align 8
  tail call void %10(%class.GrBuffer* nonnull %4) #8
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 4, i32 0
  %13 = load %class.GrBuffer*, %class.GrBuffer** %12, align 8
  %14 = icmp eq %class.GrBuffer* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrBuffer* %13 to void (%class.GrBuffer*)***
  %17 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %17, i64 3
  %19 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, align 8
  tail call void %19(%class.GrBuffer* nonnull %13) #8
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 0, i32 3, i32 0
  %22 = load %class.GrBuffer*, %class.GrBuffer** %21, align 8
  %23 = icmp eq %class.GrBuffer* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %class.GrBuffer* %22 to void (%class.GrBuffer*)***
  %26 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %26, i64 3
  %28 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %27, align 8
  tail call void %28(%class.GrBuffer* nonnull %22) #8
  br label %29

29:                                               ; preds = %20, %24
  %30 = bitcast %class.GrGLOpsRenderPass* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrGLOpsRenderPass12inlineUploadEP14GrOpFlushStateRNSt3__18functionIFvRNS3_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEE(%class.GrGLOpsRenderPass*, %class.GrOpFlushState*, %"class.std::__1::function.392"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN14GrOpFlushState8doUploadERNSt3__18functionIFvRNS1_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEEb(%class.GrOpFlushState* %1, %"class.std::__1::function.392"* dereferenceable(32) %2, i1 zeroext false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrGpu* @_ZN17GrGLOpsRenderPass3gpuEv(%class.GrGLOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLOpsRenderPass, %class.GrGLOpsRenderPass* %0, i64 0, i32 1
  %3 = bitcast %class.GrGLGpu** %2 to %class.GrGpu**
  %4 = load %class.GrGpu*, %class.GrGpu** %3, align 8
  ret %class.GrGpu* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE(%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.SkDrawable::GpuDrawHandler"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.SkDrawable::GpuDrawHandler"* %1 to void (%"class.SkDrawable::GpuDrawHandler"*)***
  %6 = load void (%"class.SkDrawable::GpuDrawHandler"*)**, void (%"class.SkDrawable::GpuDrawHandler"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %6, i64 1
  %8 = load void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %7, align 8
  tail call void %8(%"class.SkDrawable::GpuDrawHandler"* nonnull %1) #8
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

declare %class.GrGLAttribArrayState* @_ZN7GrGLGpu18HWVertexArrayState23bindInternalVertexArrayEPS_PK8GrBuffer(%"class.GrGLGpu::HWVertexArrayState"*, %class.GrGLGpu*, %class.GrBuffer*) local_unnamed_addr #2

declare void @_ZN20GrGLAttribArrayState18enableVertexArraysEPK7GrGLGpui18GrPrimitiveRestart(%class.GrGLAttribArrayState*, %class.GrGLGpu*, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPassD2Ev(%class.GrOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15GrOpsRenderPass, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrBuffer*, %class.GrBuffer** %3, align 8
  %5 = icmp eq %class.GrBuffer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrBuffer* %4 to void (%class.GrBuffer*)***
  %8 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %8, i64 3
  %10 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, align 8
  tail call void %10(%class.GrBuffer* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 4, i32 0
  %13 = load %class.GrBuffer*, %class.GrBuffer** %12, align 8
  %14 = icmp eq %class.GrBuffer* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrBuffer* %13 to void (%class.GrBuffer*)***
  %17 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %17, i64 3
  %19 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, align 8
  tail call void %19(%class.GrBuffer* nonnull %13) #8
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 3, i32 0
  %22 = load %class.GrBuffer*, %class.GrBuffer** %21, align 8
  %23 = icmp eq %class.GrBuffer* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %class.GrBuffer* %22 to void (%class.GrBuffer*)***
  %26 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %26, i64 3
  %28 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %27, align 8
  tail call void %28(%class.GrBuffer* nonnull %22) #8
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPassD0Ev(%class.GrOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass7onBeginEv(%class.GrOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass5onEndEv(%class.GrOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass14onDrawIndirectEPK8GrBuffermi(%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 194, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi(%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 197, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN14GrOpFlushState8doUploadERNSt3__18functionIFvRNS1_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEEb(%class.GrOpFlushState*, %"class.std::__1::function.392"* dereferenceable(32), i1 zeroext) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
