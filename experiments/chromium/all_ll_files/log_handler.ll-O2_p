; ModuleID = '../../content/browser/devtools/protocol/log_handler.cc'
source_filename = "../../content/browser/devtools/protocol/log_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::protocol::LogHandler" = type <{ %"class.content::protocol::DevToolsDomainHandler", %"class.content::protocol::Log::Backend", %"class.std::__1::unique_ptr.303", i8, [7 x i8] }>
%"class.content::protocol::DevToolsDomainHandler" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.content::DevToolsSession"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.content::DevToolsSession" = type { %"class.crdtp::FrontendChannel", %"class.blink::mojom::DevToolsSessionHost", %"class.content::DevToolsExternalAgentProxy", %"class.content::DevToolsAgentHostClientChannel", %"class.mojo::AssociatedReceiver", %"class.mojo::AssociatedRemote", %"class.mojo::Remote", i8, %"class.content::DevToolsAgentHostImpl"*, %"class.content::DevToolsAgentHostClient"*, i8, %"class.base::flat_map.224", %"class.std::__1::unique_ptr.240", i8, %"class.std::__1::list", %"class.base::flat_map.266", %"class.mojo::StructPtr", %"class.content::DevToolsSession"*, %"class.std::__1::basic_string", %"class.base::flat_map.292", %"class.base::OnceCallback.19", %"class.content::DevToolsExternalAgentProxyDelegate"*, %"class.base::WeakPtrFactory.302" }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::mojom::DevToolsSessionHost" = type { i32 (...)** }
%"class.content::DevToolsExternalAgentProxy" = type { i32 (...)** }
%"class.content::DevToolsAgentHostClientChannel" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::DevToolsSessionHostStub", %"class.base::WeakPtrFactory.68" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional", %"class.absl::optional.5", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.26", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map", %"class.std::__1::map.54", i64, %"class.base::OnceCallback.19", %"class.base::OnceCallback.63", i8, %class.scoped_refptr.10, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.64" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.19" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.10, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.13", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.309", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.10, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.310", [4 x i8] }>
%"class.base::RefCountedThreadSafe.309" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.310" = type { %"struct.std::__1::__atomic_base.311" }
%"struct.std::__1::__atomic_base.311" = type { %"struct.std::__1::__atomic_base.312" }
%"struct.std::__1::__atomic_base.312" = type { %"struct.std::__1::__cxx_atomic_impl.313" }
%"struct.std::__1::__cxx_atomic_impl.313" = type { %"struct.std::__1::__cxx_atomic_base_impl.314" }
%"struct.std::__1::__cxx_atomic_base_impl.314" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.25 }
%class.scoped_refptr.25 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.29", %class.scoped_refptr.30 }
%"class.base::RepeatingCallback.29" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.30 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.31", [4 x i8] }>
%"class.base::RefCountedThreadSafe.31" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.45" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.45" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.base::OnceCallback.63" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.10 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.11" }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.19" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.64" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::DevToolsSessionHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::DevToolsSessionHost"* }
%"class.base::WeakPtrFactory.68" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.69" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr", i32 }>
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::mojom::DevToolsSessionProxy"* }
%"class.blink::mojom::DevToolsSessionProxy" = type { %"class.blink::mojom::DevToolsSession", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::DevToolsSession" = type { i32 (...)** }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.69" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.75, %"class.std::__1::unique_ptr", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.10, i32 }>
%class.scoped_refptr.75 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.10, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.136", %"class.absl::optional.141", %"class.absl::optional.96", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.160", i8, [7 x i8], %class.scoped_refptr.10, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.31" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.19", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.10, %"class.std::__1::unique_ptr.76", %"class.absl::optional.86", %"struct.std::__1::atomic.92", i8, i8, i8, i8, i32, i32, %"class.absl::optional.96", %"class.std::__1::unique_ptr.101", i8, i64, %class.scoped_refptr.133, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.135" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.10, i8, %"class.mojo::ScopedHandleBase.79", %class.scoped_refptr.80, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.81", i8*, %"class.base::WeakPtrFactory.82" }
%"class.mojo::ScopedHandleBase.79" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.80 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.81" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.82" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.86" = type { %"class.absl::optional_internal::optional_data.87" }
%"class.absl::optional_internal::optional_data.87" = type { %"class.absl::optional_internal::optional_data_base.88" }
%"class.absl::optional_internal::optional_data_base.88" = type { %"class.absl::optional_internal::optional_data_dtor_base.89" }
%"class.absl::optional_internal::optional_data_dtor_base.89" = type { i8, %union.anon.90 }
%union.anon.90 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.91", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.91" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i8 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.104", i8, i64, %class.scoped_refptr.105, %class.scoped_refptr.129 }
%"class.base::RepeatingCallback.104" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.105 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.107", %"class.std::__1::map.118", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.107" = type { %"class.std::__1::__tree.108" }
%"class.std::__1::__tree.108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::map.118" = type { %"class.std::__1::__tree.119" }
%"class.std::__1::__tree.119" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%class.scoped_refptr.129 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.133 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.135" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, [7 x i8], %union.anon.145 }
%union.anon.145 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, %union.anon.100 }
%union.anon.100 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.146 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.146 = type { %"class.std::__1::map.148" }
%"class.std::__1::map.148" = type { %"class.std::__1::__tree.149" }
%"class.std::__1::__tree.149" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.159"*, i64 }
%"class.std::__1::unique_ptr.159" = type opaque
%"class.std::__1::map.160" = type { %"class.std::__1::__tree.161" }
%"class.std::__1::__tree.161" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.content::DevToolsAgentHostImpl" = type { %"class.content::DevToolsAgentHost.base", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.base::flat_map", %"class.content::DevToolsIOContext", %"class.content::DevToolsRendererChannel" }
%"class.content::DevToolsAgentHost.base" = type <{ i32 (...)**, %"class.base::RefCounted.169" }>
%"class.base::RefCounted.169" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.content::DevToolsSession"**, %"class.content::DevToolsSession"**, %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.content::DevToolsSession"** }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.175" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.std::__1::pair.177"*, %"struct.std::__1::pair.177"*, %"class.std::__1::__compressed_pair.178" }
%"struct.std::__1::pair.177" = type opaque
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::pair.177"* }
%"class.content::DevToolsIOContext" = type { %"class.base::SupportsWeakPtr", %"class.std::__1::map.183" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.std::__1::map.183" = type { %"class.std::__1::__tree.184" }
%"class.std::__1::__tree.184" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.content::DevToolsRendererChannel" = type { %"class.blink::mojom::DevToolsAgentHost", %"class.content::DevToolsAgentHostImpl"*, %"class.mojo::Receiver", %"class.mojo::AssociatedReceiver.195", %"class.mojo::Remote.197", %"class.mojo::AssociatedRemote.205", i32, %"class.content::RenderFrameHostImpl"*, %"class.base::internal::flat_tree.207", %"class.base::internal::flat_tree.207", %"class.base::internal::flat_tree.215", %"class.base::OnceCallback.19", %"class.base::WeakPtrFactory.223" }
%"class.blink::mojom::DevToolsAgentHost" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::DevToolsAgentHostStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.75, %"class.std::__1::unique_ptr", %"class.base::WeakPtrFactory.194" }
%"class.base::WeakPtrFactory.194" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::DevToolsAgentHostStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::DevToolsAgentHost"* }
%"class.mojo::AssociatedReceiver.195" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::DevToolsAgentHostStub", %"class.base::WeakPtrFactory.196" }
%"class.base::WeakPtrFactory.196" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Remote.197" = type { %"class.mojo::internal::InterfacePtrState.198" }
%"class.mojo::internal::InterfacePtrState.198" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::mojom::DevToolsAgentProxy"* }
%"class.blink::mojom::DevToolsAgentProxy" = type { %"class.blink::mojom::DevToolsAgent", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::DevToolsAgent" = type { i32 (...)** }
%"class.mojo::AssociatedRemote.205" = type { %"class.mojo::internal::AssociatedInterfacePtrState.206" }
%"class.mojo::internal::AssociatedInterfacePtrState.206" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.199" }
%"class.content::RenderFrameHostImpl" = type opaque
%"class.base::internal::flat_tree.207" = type { %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"class.content::protocol::TargetAutoAttacher"**, %"class.content::protocol::TargetAutoAttacher"**, %"class.std::__1::__compressed_pair.210" }
%"class.content::protocol::TargetAutoAttacher" = type opaque
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.content::protocol::TargetAutoAttacher"** }
%"class.base::internal::flat_tree.215" = type { %"class.std::__1::vector.216" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.content::WorkerDevToolsAgentHost"**, %"class.content::WorkerDevToolsAgentHost"**, %"class.std::__1::__compressed_pair.218" }
%"class.content::WorkerDevToolsAgentHost" = type opaque
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.content::WorkerDevToolsAgentHost"** }
%"class.base::WeakPtrFactory.223" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::DevToolsAgentHostClient" = type { i32 (...)** }
%"class.base::flat_map.224" = type { %"class.base::internal::flat_tree.225" }
%"class.base::internal::flat_tree.225" = type { %"class.std::__1::vector.226" }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"*, %"class.std::__1::__compressed_pair.235" }
%"struct.std::__1::pair.228" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.229" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.content::protocol::DevToolsDomainHandler"* }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::pair.228"* }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.crdtp::UberDispatcher"* }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.243", %"class.std::__1::vector.251" }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.std::__1::pair.245"*, %"struct.std::__1::pair.245"*, %"class.std::__1::__compressed_pair.246" }
%"struct.std::__1::pair.245" = type opaque
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.std::__1::pair.245"* }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"struct.std::__1::pair.253"*, %"struct.std::__1::pair.253"*, %"class.std::__1::__compressed_pair.254" }
%"struct.std::__1::pair.253" = type opaque
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::pair.253"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.262" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.base::flat_map.266" = type { %"class.base::internal::flat_tree.267" }
%"class.base::internal::flat_tree.267" = type { %"class.std::__1::vector.268" }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %"struct.std::__1::pair.270"*, %"struct.std::__1::pair.270"*, %"class.std::__1::__compressed_pair.271" }
%"struct.std::__1::pair.270" = type opaque
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::pair.270"* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.276" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::mojom::DevToolsSessionState"* }
%"class.blink::mojom::DevToolsSessionState" = type { %"class.base::flat_map.279" }
%"class.base::flat_map.279" = type { %"class.base::internal::flat_tree.280" }
%"class.base::internal::flat_tree.280" = type { %"class.std::__1::vector.281" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"struct.std::__1::pair.283"*, %"struct.std::__1::pair.283"*, %"class.std::__1::__compressed_pair.284" }
%"struct.std::__1::pair.283" = type opaque
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::pair.283"* }
%"class.base::flat_map.292" = type { %"class.base::internal::flat_tree.293" }
%"class.base::internal::flat_tree.293" = type { %"class.std::__1::vector.294" }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.std::__1::pair.296"*, %"struct.std::__1::pair.296"*, %"class.std::__1::__compressed_pair.297" }
%"struct.std::__1::pair.296" = type opaque
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::pair.296"* }
%"class.base::OnceCallback.19" = type { %"class.base::internal::CallbackBase" }
%"class.content::DevToolsExternalAgentProxyDelegate" = type opaque
%"class.base::WeakPtrFactory.302" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::protocol::Log::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.content::protocol::Log::Frontend"* }
%"class.content::protocol::Log::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"class.content::protocol::LogHandler"**, %"class.content::protocol::LogHandler"**, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.content::protocol::LogHandler"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.content::protocol::Log::LogEntry" = type { %"class.crdtp::ProtocolObject", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", double, %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe.322", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.329" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::detail::ValueMaybe.322" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.323" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.content::protocol::Runtime::StackTrace"* }
%"class.content::protocol::Runtime::StackTrace" = type { %"class.crdtp::ProtocolObject.337", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.340", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.347" }
%"class.crdtp::ProtocolObject.337" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.std::__1::vector.343"* }
%"class.std::__1::vector.343" = type { %"class.std::__1::__vector_base.363" }
%"class.std::__1::__vector_base.363" = type { %"class.std::__1::unique_ptr.364"*, %"class.std::__1::unique_ptr.364"*, %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.content::protocol::Runtime::CallFrame"* }
%"class.content::protocol::Runtime::CallFrame" = type { %"class.crdtp::ProtocolObject.367", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32 }
%"class.crdtp::ProtocolObject.367" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.std::__1::unique_ptr.364"* }
%"class.crdtp::detail::PtrMaybe.347" = type { %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.content::protocol::Runtime::StackTraceId"* }
%"class.content::protocol::Runtime::StackTraceId" = type { %"class.crdtp::ProtocolObject.351", %"class.std::__1::basic_string", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.351" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.std::__1::basic_string" }
%"class.crdtp::detail::PtrMaybe.329" = type { %"class.std::__1::unique_ptr.330" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.std::__1::vector.333"* }
%"class.std::__1::vector.333" = type { %"class.std::__1::__vector_base.378" }
%"class.std::__1::__vector_base.378" = type { %"class.std::__1::unique_ptr.379"*, %"class.std::__1::unique_ptr.379"*, %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.content::protocol::Runtime::RemoteObject"* }
%"class.content::protocol::Runtime::RemoteObject" = type { %"class.crdtp::ProtocolObject.382", %"class.std::__1::basic_string", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.385", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.392", %"class.crdtp::detail::PtrMaybe.441" }
%"class.crdtp::ProtocolObject.382" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.385" = type { %"class.std::__1::unique_ptr.386" }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.content::protocol::Value"* }
%"class.content::protocol::Value" = type <{ %"class.crdtp::Serializable", i32, [4 x i8] }>
%"class.crdtp::detail::PtrMaybe.392" = type { %"class.std::__1::unique_ptr.393" }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.content::protocol::Runtime::ObjectPreview"* }
%"class.content::protocol::Runtime::ObjectPreview" = type { %"class.crdtp::ProtocolObject.396", %"class.std::__1::basic_string", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", i8, %"class.std::__1::unique_ptr.399", %"class.crdtp::detail::PtrMaybe.418" }
%"class.crdtp::ProtocolObject.396" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::vector.402"* }
%"class.std::__1::vector.402" = type { %"class.std::__1::__vector_base.403" }
%"class.std::__1::__vector_base.403" = type { %"class.std::__1::unique_ptr.404"*, %"class.std::__1::unique_ptr.404"*, %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.content::protocol::Runtime::PropertyPreview"* }
%"class.content::protocol::Runtime::PropertyPreview" = type { %"class.crdtp::ProtocolObject.462", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.392", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.462" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.std::__1::unique_ptr.404"* }
%"class.crdtp::detail::PtrMaybe.418" = type { %"class.std::__1::unique_ptr.419" }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.std::__1::vector.422"* }
%"class.std::__1::vector.422" = type { %"class.std::__1::__vector_base.423" }
%"class.std::__1::__vector_base.423" = type { %"class.std::__1::unique_ptr.424"*, %"class.std::__1::unique_ptr.424"*, %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.content::protocol::Runtime::EntryPreview"* }
%"class.content::protocol::Runtime::EntryPreview" = type { %"class.crdtp::ProtocolObject.459", %"class.crdtp::detail::PtrMaybe.392", %"class.std::__1::unique_ptr.393" }
%"class.crdtp::ProtocolObject.459" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.std::__1::unique_ptr.424"* }
%"class.crdtp::detail::PtrMaybe.441" = type { %"class.std::__1::unique_ptr.442" }
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.content::protocol::Runtime::CustomPreview"* }
%"class.content::protocol::Runtime::CustomPreview" = type { %"class.crdtp::ProtocolObject.445", %"class.std::__1::basic_string", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.445" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.std::__1::unique_ptr.379"* }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { i8*, i8*, %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { i8* }
%"class.crdtp::StatusOr" = type { %"struct.crdtp::Status", %"class.std::__1::unique_ptr.357" }
%"struct.crdtp::Status" = type { i32, i64 }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.content::protocol::Log::LogEntry"* }
%"class.crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr", %"class.crdtp::cbor::CBORTokenizer", %"struct.crdtp::Status", %"class.std::__1::vector.482" }
%"class.std::__1::shared_ptr" = type { %"class.std::__1::vector.475"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.crdtp::cbor::CBORTokenizer" = type { %"class.crdtp::span", i32, %"struct.crdtp::Status", i64, i32, i64 }
%"class.crdtp::span" = type { i8*, i64 }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"class.crdtp::span.484"*, %"class.crdtp::span.484"*, %"class.std::__1::__compressed_pair.485" }
%"class.crdtp::span.484" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.crdtp::span.484"* }
%"class.crdtp::DeserializerDescriptor" = type <{ %"struct.crdtp::DeserializerDescriptor::Field"*, i64, i32, [4 x i8] }>
%"struct.crdtp::DeserializerDescriptor::Field" = type { %"class.crdtp::span.484", i8, i1 (%"class.crdtp::DeserializerState"*, i8*)* }

$_ZN7content21DevToolsAgentHostImpl14HandlersByNameINS_8protocol10LogHandlerEEENSt3__16vectorIPT_NS4_9allocatorIS7_EEEERKNS4_12basic_stringIcNS4_11char_traitsIcEENS8_IcEEEE = comdat any

$_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_8GetFirstENS2_4lessIvEENS2_6vectorINS2_4pairIS8_NS2_10unique_ptrIN7content8protocol21DevToolsDomainHandlerENS2_14default_deleteISH_EEEEEENS6_ISL_EEEEE11equal_rangeIS8_EENSD_INS2_11__wrap_iterIPKSL_EEST_EERKT_ = comdat any

$_ZN5crdtp28DeserializableProtocolObjectIN7content8protocol3Log8LogEntryEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE = comdat any

@_ZN7content8protocol3Log8Metainfo10domainNameE = external constant [0 x i8], align 1
@_ZTVN7content8protocol10LogHandlerE = hidden unnamed_addr constant { [8 x i8*], [6 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::protocol::LogHandler"*)* @_ZN7content8protocol10LogHandlerD2Ev to i8*), i8* bitcast (void (%"class.content::protocol::LogHandler"*)* @_ZN7content8protocol10LogHandlerD0Ev to i8*), i8* bitcast (void (%"class.content::protocol::DevToolsDomainHandler"*, i32, %"class.content::RenderFrameHostImpl"*)* @_ZN7content8protocol21DevToolsDomainHandler11SetRendererEiPNS_19RenderFrameHostImplE to i8*), i8* bitcast (void (%"class.content::protocol::LogHandler"*, %"class.crdtp::UberDispatcher"*)* @_ZN7content8protocol10LogHandler4WireEPN5crdtp14UberDispatcherE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.content::protocol::LogHandler"*)* @_ZN7content8protocol10LogHandler7DisableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.content::protocol::LogHandler"*)* @_ZN7content8protocol10LogHandler6EnableEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.content::protocol::LogHandler"*)* @_ZThn40_N7content8protocol10LogHandlerD1Ev to i8*), i8* bitcast (void (%"class.content::protocol::LogHandler"*)* @_ZThn40_N7content8protocol10LogHandlerD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.content::protocol::LogHandler"*)* @_ZThn40_N7content8protocol10LogHandler7DisableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.content::protocol::LogHandler"*)* @_ZThn40_N7content8protocol10LogHandler6EnableEv to i8*)] }, align 8
@_ZTVN7content8protocol3Log8LogEntryE = external unnamed_addr constant { [5 x i8*] }, align 8

@_ZN7content8protocol10LogHandlerC1Ev = hidden unnamed_addr alias void (%"class.content::protocol::LogHandler"*), void (%"class.content::protocol::LogHandler"*)* @_ZN7content8protocol10LogHandlerC2Ev
@_ZN7content8protocol10LogHandlerD1Ev = hidden unnamed_addr alias void (%"class.content::protocol::LogHandler"*), void (%"class.content::protocol::LogHandler"*)* @_ZN7content8protocol10LogHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8protocol10LogHandlerC2Ev(%"class.content::protocol::LogHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content8protocol3Log8Metainfo10domainNameE, i64 0, i64 0)) #10
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #11
  unreachable

9:                                                ; preds = %1
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #12
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %25

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %5, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20, %11
  %26 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %27 = phi i8* [ %4, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content8protocol3Log8Metainfo10domainNameE, i64 0, i64 0), i64 %5, i1 false) #10
  br label %28

28:                                               ; preds = %20, %25
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %26, %25 ]
  %30 = phi i8* [ %4, %20 ], [ %27, %25 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %5
  store i8 0, i8* %31, align 1
  call void @_ZN7content8protocol21DevToolsDomainHandlerC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::protocol::DevToolsDomainHandler"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #10
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %28, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  %39 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %41 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 2
  %42 = bitcast %"class.std::__1::unique_ptr.303"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 3
  store i8 0, i8* %43, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7content8protocol21DevToolsDomainHandlerC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::protocol::DevToolsDomainHandler"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8protocol10LogHandlerD2Ev(%"class.content::protocol::LogHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.content::protocol::Log::Frontend"*, %"class.content::protocol::Log::Frontend"** %4, align 8
  store %"class.content::protocol::Log::Frontend"* null, %"class.content::protocol::Log::Frontend"** %4, align 8
  %6 = icmp eq %"class.content::protocol::Log::Frontend"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.content::protocol::Log::Frontend"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 0
  tail call void @_ZN7content8protocol21DevToolsDomainHandlerD2Ev(%"class.content::protocol::DevToolsDomainHandler"* %10) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content8protocol21DevToolsDomainHandlerD2Ev(%"class.content::protocol::DevToolsDomainHandler"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N7content8protocol10LogHandlerD1Ev(%"class.content::protocol::LogHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast i64* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 5
  %5 = bitcast i64* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 6
  %7 = bitcast i64* %6 to %"class.content::protocol::Log::Frontend"**
  %8 = load %"class.content::protocol::Log::Frontend"*, %"class.content::protocol::Log::Frontend"** %7, align 8
  store %"class.content::protocol::Log::Frontend"* null, %"class.content::protocol::Log::Frontend"** %7, align 8
  %9 = icmp eq %"class.content::protocol::Log::Frontend"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.content::protocol::Log::Frontend"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast i64* %2 to %"class.content::protocol::DevToolsDomainHandler"*
  tail call void @_ZN7content8protocol21DevToolsDomainHandlerD2Ev(%"class.content::protocol::DevToolsDomainHandler"* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8protocol10LogHandlerD0Ev(%"class.content::protocol::LogHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.content::protocol::Log::Frontend"*, %"class.content::protocol::Log::Frontend"** %4, align 8
  store %"class.content::protocol::Log::Frontend"* null, %"class.content::protocol::Log::Frontend"** %4, align 8
  %6 = icmp eq %"class.content::protocol::Log::Frontend"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.content::protocol::Log::Frontend"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 0
  tail call void @_ZN7content8protocol21DevToolsDomainHandlerD2Ev(%"class.content::protocol::DevToolsDomainHandler"* %10) #10
  %11 = bitcast %"class.content::protocol::LogHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N7content8protocol10LogHandlerD0Ev(%"class.content::protocol::LogHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = bitcast i64* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 5
  %5 = bitcast i64* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [6 x i8*] }, { [8 x i8*], [6 x i8*] }* @_ZTVN7content8protocol10LogHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 6
  %7 = bitcast i64* %6 to %"class.content::protocol::Log::Frontend"**
  %8 = load %"class.content::protocol::Log::Frontend"*, %"class.content::protocol::Log::Frontend"** %7, align 8
  store %"class.content::protocol::Log::Frontend"* null, %"class.content::protocol::Log::Frontend"** %7, align 8
  %9 = icmp eq %"class.content::protocol::Log::Frontend"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.content::protocol::Log::Frontend"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast i64* %2 to %"class.content::protocol::DevToolsDomainHandler"*
  tail call void @_ZN7content8protocol21DevToolsDomainHandlerD2Ev(%"class.content::protocol::DevToolsDomainHandler"* %13) #10
  %14 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8protocol10LogHandler12ForAgentHostEPNS_21DevToolsAgentHostImplE(%"class.std::__1::vector.315"* noalias sret, %"class.content::DevToolsAgentHostImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content8protocol3Log8Metainfo10domainNameE, i64 0, i64 0)) #10
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #11
  unreachable

9:                                                ; preds = %2
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #12
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %25

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %5, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20, %11
  %26 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %27 = phi i8* [ %4, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content8protocol3Log8Metainfo10domainNameE, i64 0, i64 0), i64 %5, i1 false) #10
  br label %28

28:                                               ; preds = %20, %25
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %26, %25 ]
  %30 = phi i8* [ %4, %20 ], [ %27, %25 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %5
  store i8 0, i8* %31, align 1
  call void @_ZN7content21DevToolsAgentHostImpl14HandlersByNameINS_8protocol10LogHandlerEEENSt3__16vectorIPT_NS4_9allocatorIS7_EEEERKNS4_12basic_stringIcNS4_11char_traitsIcEENS8_IcEEEE(%"class.std::__1::vector.315"* sret %0, %"class.content::DevToolsAgentHostImpl"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %28, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content21DevToolsAgentHostImpl14HandlersByNameINS_8protocol10LogHandlerEEENSt3__16vectorIPT_NS4_9allocatorIS7_EEEERKNS4_12basic_stringIcNS4_11char_traitsIcEENS8_IcEEEE(%"class.std::__1::vector.315"* noalias sret, %"class.content::DevToolsAgentHostImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.315"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"class.content::DevToolsAgentHostImpl", %"class.content::DevToolsAgentHostImpl"* %1, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.content::DevToolsSession"**, %"class.content::DevToolsSession"*** %7, align 8
  %9 = getelementptr inbounds %"class.content::DevToolsAgentHostImpl", %"class.content::DevToolsAgentHostImpl"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.content::DevToolsSession"**, %"class.content::DevToolsSession"*** %9, align 8
  %11 = icmp eq %"class.content::DevToolsSession"** %8, %10
  br i1 %11, label %87, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.content::protocol::LogHandler"*** %4 to i64*
  %14 = bitcast %"class.std::__1::vector.315"* %0 to i64*
  %15 = bitcast %"class.content::protocol::LogHandler"*** %5 to i64*
  br label %16

16:                                               ; preds = %12, %84
  %17 = phi %"class.content::DevToolsSession"** [ %8, %12 ], [ %85, %84 ]
  %18 = load %"class.content::DevToolsSession"*, %"class.content::DevToolsSession"** %17, align 8
  %19 = getelementptr inbounds %"class.content::DevToolsSession", %"class.content::DevToolsSession"* %18, i64 0, i32 11, i32 0
  %20 = tail call { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"* } @_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_8GetFirstENS2_4lessIvEENS2_6vectorINS2_4pairIS8_NS2_10unique_ptrIN7content8protocol21DevToolsDomainHandlerENS2_14default_deleteISH_EEEEEENS6_ISL_EEEEE11equal_rangeIS8_EENSD_INS2_11__wrap_iterIPKSL_EEST_EERKT_(%"class.base::internal::flat_tree.225"* %19, %"class.std::__1::basic_string"* dereferenceable(24) %2) #10
  %21 = extractvalue { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"* } %20, 0
  %22 = extractvalue { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"* } %20, 1
  %23 = icmp eq %"struct.std::__1::pair.228"* %21, %22
  br i1 %23, label %84, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.content::DevToolsSession", %"class.content::DevToolsSession"* %18, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %26 = load %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"** %25, align 8
  %27 = icmp eq %"struct.std::__1::pair.228"* %21, %26
  br i1 %27, label %84, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::__1::pair.228", %"struct.std::__1::pair.228"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = bitcast %"class.content::protocol::DevToolsDomainHandler"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load %"class.content::protocol::LogHandler"**, %"class.content::protocol::LogHandler"*** %4, align 8
  %33 = load %"class.content::protocol::LogHandler"**, %"class.content::protocol::LogHandler"*** %5, align 8
  %34 = icmp ult %"class.content::protocol::LogHandler"** %32, %33
  %35 = ptrtoint %"class.content::protocol::LogHandler"** %33 to i64
  br i1 %34, label %36, label %40

36:                                               ; preds = %28
  %37 = bitcast %"class.content::protocol::LogHandler"** %32 to i64*
  store i64 %31, i64* %37, align 8
  %38 = getelementptr inbounds %"class.content::protocol::LogHandler"*, %"class.content::protocol::LogHandler"** %32, i64 1
  %39 = ptrtoint %"class.content::protocol::LogHandler"** %38 to i64
  store i64 %39, i64* %13, align 8
  br label %84

40:                                               ; preds = %28
  %41 = ptrtoint %"class.content::protocol::LogHandler"** %32 to i64
  %42 = load i64, i64* %14, align 8
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 2305843009213693951
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = bitcast %"class.std::__1::vector.315"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #11
  unreachable

49:                                               ; preds = %40
  %50 = sub i64 %35, %42
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, 1152921504606846975
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = ashr exact i64 %50, 2
  %55 = icmp ult i64 %54, %45
  %56 = select i1 %55, i64 %45, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 2305843009213693951
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @abort() #11
  unreachable

61:                                               ; preds = %58, %49
  %62 = phi i64 [ %56, %58 ], [ 2305843009213693951, %49 ]
  %63 = shl i64 %62, 3
  %64 = tail call i8* @_Znwm(i64 %63) #12
  %65 = bitcast i8* %64 to %"class.content::protocol::LogHandler"**
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi i8* [ %64, %61 ], [ null, %53 ]
  %69 = phi %"class.content::protocol::LogHandler"** [ %65, %61 ], [ null, %53 ]
  %70 = getelementptr inbounds %"class.content::protocol::LogHandler"*, %"class.content::protocol::LogHandler"** %69, i64 %44
  %71 = getelementptr inbounds %"class.content::protocol::LogHandler"*, %"class.content::protocol::LogHandler"** %69, i64 %67
  %72 = ptrtoint %"class.content::protocol::LogHandler"** %71 to i64
  %73 = bitcast %"class.content::protocol::LogHandler"** %70 to i64*
  store i64 %31, i64* %73, align 8
  %74 = getelementptr inbounds %"class.content::protocol::LogHandler"*, %"class.content::protocol::LogHandler"** %70, i64 1
  %75 = ptrtoint %"class.content::protocol::LogHandler"** %74 to i64
  %76 = ptrtoint %"class.content::protocol::LogHandler"** %69 to i64
  %77 = icmp sgt i64 %43, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %66
  %79 = inttoptr i64 %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %79, i64 %43, i1 false) #10
  br label %80

80:                                               ; preds = %78, %66
  store i64 %76, i64* %14, align 8
  store i64 %75, i64* %13, align 8
  store i64 %72, i64* %15, align 8
  %81 = icmp eq i64 %42, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = inttoptr i64 %42 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %16, %24, %82, %80, %36
  %85 = getelementptr inbounds %"class.content::DevToolsSession"*, %"class.content::DevToolsSession"** %17, i64 1
  %86 = icmp eq %"class.content::DevToolsSession"** %85, %10
  br i1 %86, label %87, label %16

87:                                               ; preds = %84, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8protocol10LogHandler4WireEPN5crdtp14UberDispatcherE(%"class.content::protocol::LogHandler"*, %"class.crdtp::UberDispatcher"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %1, i64 0, i32 1
  %4 = bitcast %"class.crdtp::FrontendChannel"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call i8* @_Znwm(i64 8) #12
  %7 = bitcast i8* %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = ptrtoint i8* %6 to i64
  %9 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.303"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.content::protocol::Log::Frontend"*, %"class.content::protocol::Log::Frontend"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.303"* %9 to i64*
  store i64 %8, i64* %12, align 8
  %13 = icmp eq %"class.content::protocol::Log::Frontend"* %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.content::protocol::Log::Frontend"* %11 to i8*
  tail call void @_ZdlPv(i8* %15) #12
  br label %16

16:                                               ; preds = %14, %2
  %17 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 1
  tail call void @_ZN7content8protocol3Log10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %1, %"class.content::protocol::Log::Backend"* %17) #10
  ret void
}

declare void @_ZN7content8protocol3Log10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.content::protocol::Log::Backend"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8protocol10LogHandler7DisableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.content::protocol::LogHandler"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %1, i64 0, i32 3
  store i8 0, i8* %3, align 8
  tail call void @_ZN5crdtp16DispatchResponse11FallThroughEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  ret void
}

declare void @_ZN5crdtp16DispatchResponse11FallThroughEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N7content8protocol10LogHandler7DisableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.content::protocol::LogHandler"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %1, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = getelementptr inbounds i64, i64* %3, i64 7
  %5 = bitcast i64* %4 to i8*
  store i8 0, i8* %5, align 8, !noalias !2
  tail call void @_ZN5crdtp16DispatchResponse11FallThroughEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8protocol10LogHandler6EnableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.content::protocol::LogHandler"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %1, i64 0, i32 3
  store i8 1, i8* %3, align 8
  tail call void @_ZN5crdtp16DispatchResponse11FallThroughEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N7content8protocol10LogHandler6EnableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.content::protocol::LogHandler"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %1, i64 -1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = getelementptr inbounds i64, i64* %3, i64 7
  %5 = bitcast i64* %4 to i8*
  store i8 1, i8* %5, align 8, !noalias !5
  tail call void @_ZN5crdtp16DispatchResponse11FallThroughEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8protocol10LogHandler10EntryAddedEPNS0_3Log8LogEntryE(%"class.content::protocol::LogHandler"* nocapture readonly, %"class.content::protocol::Log::LogEntry"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.475", align 16
  %4 = alloca %"class.crdtp::StatusOr", align 8
  %5 = alloca %"class.std::__1::vector.475", align 16
  %6 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %45, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.content::protocol::LogHandler", %"class.content::protocol::LogHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.content::protocol::Log::Frontend"*, %"class.content::protocol::Log::Frontend"** %10, align 8
  %12 = bitcast %"class.std::__1::vector.475"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = bitcast %"class.std::__1::vector.475"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %3, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 24, i1 false) #10
  %17 = getelementptr inbounds %"class.content::protocol::Log::LogEntry", %"class.content::protocol::Log::LogEntry"* %1, i64 0, i32 0, i32 0
  %18 = bitcast %"class.content::protocol::Log::LogEntry"* %1 to void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.475"*)***
  %19 = load void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.475"*)**, void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.475"*)*** %18, align 8
  %20 = load void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.475"*)*, void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.475"*)** %19, align 8
  call void %20(%"class.crdtp::Serializable"* %17, %"class.std::__1::vector.475"* nonnull %3) #10
  %21 = bitcast %"class.crdtp::StatusOr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  %22 = bitcast i8** %15 to i64*
  %23 = bitcast %"class.std::__1::vector.475"* %3 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 16
  %25 = bitcast %"class.std::__1::vector.475"* %5 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %25, align 16
  %26 = bitcast i8** %16 to i64*
  %27 = load i64, i64* %26, align 16
  %28 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i8** %28 to i64*
  store i64 %27, i64* %29, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 24, i1 false) #10
  call void @_ZN5crdtp28DeserializableProtocolObjectIN7content8protocol3Log8LogEntryEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.crdtp::StatusOr"* nonnull sret %4, %"class.std::__1::vector.475"* nonnull %5) #10
  %30 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.content::protocol::Log::LogEntry"*, %"class.content::protocol::Log::LogEntry"** %30, align 8
  store %"class.content::protocol::Log::LogEntry"* null, %"class.content::protocol::Log::LogEntry"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %5, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 16
  %34 = icmp eq i8* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %9
  %36 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %5, i64 0, i32 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = ptrtoint i8* %33 to i64
  store i64 %38, i64* %37, align 8
  call void @_ZdlPv(i8* nonnull %33) #12
  br label %39

39:                                               ; preds = %35, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %40 = load i8*, i8** %14, align 16
  %41 = icmp eq i8* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = ptrtoint i8* %40 to i64
  store i64 %43, i64* %22, align 8
  call void @_ZdlPv(i8* nonnull %40) #12
  br label %44

44:                                               ; preds = %39, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  call void @_ZN7content8protocol3Log8Frontend10EntryAddedENSt3__110unique_ptrINS1_8LogEntryENS3_14default_deleteIS5_EEEE(%"class.content::protocol::Log::Frontend"* %11, %"class.content::protocol::Log::LogEntry"* %31) #10
  br label %45

45:                                               ; preds = %2, %44
  ret void
}

declare void @_ZN7content8protocol3Log8Frontend10EntryAddedENSt3__110unique_ptrINS1_8LogEntryENS3_14default_deleteIS5_EEEE(%"class.content::protocol::Log::Frontend"*, %"class.content::protocol::Log::LogEntry"*) local_unnamed_addr #2

declare void @_ZN7content8protocol21DevToolsDomainHandler11SetRendererEiPNS_19RenderFrameHostImplE(%"class.content::protocol::DevToolsDomainHandler"*, i32, %"class.content::RenderFrameHostImpl"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"* } @_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_8GetFirstENS2_4lessIvEENS2_6vectorINS2_4pairIS8_NS2_10unique_ptrIN7content8protocol21DevToolsDomainHandlerENS2_14default_deleteISH_EEEEEENS6_ISL_EEEEE11equal_rangeIS8_EENSD_INS2_11__wrap_iterIPKSL_EEST_EERKT_(%"class.base::internal::flat_tree.225"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.225", %"class.base::internal::flat_tree.225"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.225", %"class.base::internal::flat_tree.225"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.228"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.228"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.228"*
  br i1 %10, label %63, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 5
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %17, i8* %23, i8* %24
  br label %26

26:                                               ; preds = %57, %12
  %27 = phi %"struct.std::__1::pair.228"* [ %4, %12 ], [ %59, %57 ]
  %28 = phi i64 [ %13, %12 ], [ %58, %57 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.228", %"struct.std::__1::pair.228"* %27, i64 %29
  %31 = bitcast %"struct.std::__1::pair.228"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"struct.std::__1::pair.228", %"struct.std::__1::pair.228"* %27, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp ult i64 %21, %38
  %40 = select i1 %39, i64 %21, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"struct.std::__1::pair.228", %"struct.std::__1::pair.228"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"struct.std::__1::pair.228"* %30 to i8*
  %46 = select i1 %34, i8* %44, i8* %45
  %47 = tail call i32 @memcmp(i8* %46, i8* %25, i64 %40) #10
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %42, %26
  %50 = icmp ult i64 %38, %21
  br i1 %50, label %53, label %57

51:                                               ; preds = %42
  %52 = icmp slt i32 %47, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %51, %49
  %54 = getelementptr inbounds %"struct.std::__1::pair.228", %"struct.std::__1::pair.228"* %30, i64 1
  %55 = xor i64 %29, -1
  %56 = add i64 %28, %55
  br label %57

57:                                               ; preds = %53, %51, %49
  %58 = phi i64 [ %56, %53 ], [ %29, %51 ], [ %29, %49 ]
  %59 = phi %"struct.std::__1::pair.228"* [ %54, %53 ], [ %27, %51 ], [ %27, %49 ]
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %26

61:                                               ; preds = %57
  %62 = ptrtoint %"struct.std::__1::pair.228"* %59 to i64
  br label %63

63:                                               ; preds = %61, %2
  %64 = phi i64 [ %62, %61 ], [ %8, %2 ]
  %65 = phi %"struct.std::__1::pair.228"* [ %59, %61 ], [ %4, %2 ]
  %66 = icmp eq %"struct.std::__1::pair.228"* %65, %11
  br i1 %66, label %105, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.std::__1::pair.228"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"struct.std::__1::pair.228", %"struct.std::__1::pair.228"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = zext i8 %70 to i64
  %75 = select i1 %71, i64 %73, i64 %74
  %76 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = zext i8 %78 to i64
  %83 = select i1 %79, i64 %81, i64 %82
  %84 = icmp ult i64 %75, %83
  %85 = select i1 %84, i64 %75, i64 %83
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %98, label %87

87:                                               ; preds = %67
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %91 = select i1 %79, i8* %89, i8* %90
  %92 = getelementptr inbounds %"struct.std::__1::pair.228", %"struct.std::__1::pair.228"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast %"struct.std::__1::pair.228"* %65 to i8*
  %95 = select i1 %71, i8* %93, i8* %94
  %96 = tail call i32 @memcmp(i8* %91, i8* %95, i64 %85) #10
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %87, %67
  %99 = icmp ult i64 %83, %75
  br i1 %99, label %105, label %102

100:                                              ; preds = %87
  %101 = icmp slt i32 %96, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98, %100
  %103 = getelementptr inbounds %"struct.std::__1::pair.228", %"struct.std::__1::pair.228"* %65, i64 1
  %104 = ptrtoint %"struct.std::__1::pair.228"* %103 to i64
  br label %105

105:                                              ; preds = %98, %100, %63, %102
  %106 = phi i64 [ %104, %102 ], [ %64, %63 ], [ %64, %100 ], [ %64, %98 ]
  %107 = insertvalue { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"* } undef, %"struct.std::__1::pair.228"* %65, 0
  %108 = inttoptr i64 %106 to %"struct.std::__1::pair.228"*
  %109 = insertvalue { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"* } %107, %"struct.std::__1::pair.228"* %108, 1
  ret { %"struct.std::__1::pair.228"*, %"struct.std::__1::pair.228"* } %109
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp28DeserializableProtocolObjectIN7content8protocol3Log8LogEntryEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.crdtp::StatusOr"* noalias sret, %"class.std::__1::vector.475"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.crdtp::DeserializerState", align 8
  %4 = alloca %"class.std::__1::vector.475", align 16
  %5 = bitcast %"class.crdtp::DeserializerState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 120, i1 false)
  %6 = bitcast %"class.std::__1::vector.475"* %1 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = bitcast %"class.std::__1::vector.475"* %4 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %8, align 16
  %9 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 16
  %14 = bitcast %"class.std::__1::vector.475"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  call void @_ZN5crdtp17DeserializerStateC1ENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.crdtp::DeserializerState"* nonnull %3, %"class.std::__1::vector.475"* nonnull %4) #10
  %15 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %4, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 16
  %17 = icmp eq i8* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::vector.475", %"class.std::__1::vector.475"* %4, i64 0, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = ptrtoint i8* %16 to i64
  store i64 %21, i64* %20, align 8
  call void @_ZdlPv(i8* nonnull %16) #12
  br label %22

22:                                               ; preds = %2, %18
  %23 = call i8* @_Znwm(i64 208) #12
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content8protocol3Log8LogEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = getelementptr inbounds i8, i8* %23, i64 96
  %27 = getelementptr inbounds i8, i8* %23, i64 124
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %23, i64 128
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 136
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds i8, i8* %23, i64 144
  %33 = getelementptr inbounds i8, i8* %23, i64 176
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 81, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 25, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 25, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #10
  %34 = call dereferenceable(24) %"class.crdtp::DeserializerDescriptor"* @_ZN7content8protocol3Log8LogEntry23deserializer_descriptorEv() #10
  %35 = call zeroext i1 @_ZNK5crdtp22DeserializerDescriptor11DeserializeEPNS_17DeserializerStateEPv(%"class.crdtp::DeserializerDescriptor"* %34, %"class.crdtp::DeserializerState"* nonnull %3, i8* nonnull %23) #10
  br i1 %35, label %45, label %36

36:                                               ; preds = %22
  %37 = bitcast i8* %23 to %"class.content::protocol::Log::LogEntry"*
  %38 = bitcast i8* %23 to void (%"class.content::protocol::Log::LogEntry"*)***
  %39 = load void (%"class.content::protocol::Log::LogEntry"*)**, void (%"class.content::protocol::Log::LogEntry"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.content::protocol::Log::LogEntry"*)*, void (%"class.content::protocol::Log::LogEntry"*)** %39, i64 2
  %41 = load void (%"class.content::protocol::Log::LogEntry"*)*, void (%"class.content::protocol::Log::LogEntry"*)** %40, align 8
  call void %41(%"class.content::protocol::Log::LogEntry"* nonnull %37) #10
  %42 = call { i32, i64 } @_ZNK5crdtp17DeserializerState6statusEv(%"class.crdtp::DeserializerState"* nonnull %3) #10
  %43 = extractvalue { i32, i64 } %42, 0
  %44 = extractvalue { i32, i64 } %42, 1
  br label %47

45:                                               ; preds = %22
  %46 = ptrtoint i8* %23 to i64
  br label %47

47:                                               ; preds = %45, %36
  %48 = phi i32 [ 0, %45 ], [ %43, %36 ]
  %49 = phi i64 [ -1, %45 ], [ %44, %36 ]
  %50 = phi i64 [ %46, %45 ], [ 0, %36 ]
  %51 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 0, i32 0
  store i32 %48, i32* %51, align 8
  %52 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 0, i32 1
  store i64 %49, i64* %52, align 8
  %53 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 1
  %54 = bitcast %"class.std::__1::unique_ptr.357"* %53 to i64*
  store i64 %50, i64* %54, align 8
  %55 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.crdtp::span.484"*, %"class.crdtp::span.484"** %55, align 8
  %57 = icmp eq %"class.crdtp::span.484"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %47
  %59 = ptrtoint %"class.crdtp::span.484"* %56 to i64
  %60 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 3, i32 0, i32 1
  %61 = bitcast %"class.crdtp::span.484"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"class.crdtp::span.484"* %56 to i8*
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %58, %47
  %64 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 1
  call void @_ZN5crdtp4cbor13CBORTokenizerD1Ev(%"class.crdtp::cbor::CBORTokenizer"* %64) #10
  %65 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %65, align 8
  %67 = icmp eq %"class.std::__1::__shared_weak_count"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %66, i64 0, i32 0, i32 1
  %70 = atomicrmw add i64* %69, i64 -1 acq_rel
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %66, i64 0, i32 0
  %74 = bitcast %"class.std::__1::__shared_weak_count"* %66 to void (%"class.std::__1::__shared_count"*)***
  %75 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, i64 2
  %77 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %76, align 8
  call void %77(%"class.std::__1::__shared_count"* %73) #10
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %66) #10
  br label %78

78:                                               ; preds = %63, %68, %72
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #10
  ret void
}

declare void @_ZN5crdtp17DeserializerStateC1ENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.crdtp::DeserializerState"*, %"class.std::__1::vector.475"*) unnamed_addr #2

declare { i32, i64 } @_ZNK5crdtp17DeserializerState6statusEv(%"class.crdtp::DeserializerState"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.crdtp::DeserializerDescriptor"* @_ZN7content8protocol3Log8LogEntry23deserializer_descriptorEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK5crdtp22DeserializerDescriptor11DeserializeEPNS_17DeserializerStateEPv(%"class.crdtp::DeserializerDescriptor"*, %"class.crdtp::DeserializerState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5crdtp4cbor13CBORTokenizerD1Ev(%"class.crdtp::cbor::CBORTokenizer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7content8protocol10LogHandler7DisableEv: argument 0"}
!4 = distinct !{!4, !"_ZN7content8protocol10LogHandler7DisableEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN7content8protocol10LogHandler6EnableEv: argument 0"}
!7 = distinct !{!7, !"_ZN7content8protocol10LogHandler6EnableEv"}
!8 = !{i8 0, i8 2}
