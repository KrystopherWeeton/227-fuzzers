; ModuleID = '../../third_party/pdfium/xfa/fde/cfde_textout.cpp'
source_filename = "../../third_party/pdfium/xfa/fde/cfde_textout.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CFGAS_TxtBreak::Run" = type <{ %"class.CFGAS_TxtBreak::Engine"*, %"class.fxcrt::WideString", i32*, i32, i32, %"class.fxcrt::RetainPtr.5", float, i32, i32, i32, i32, [4 x i8], %class.CFX_RectF*, i8, [7 x i8] }>
%"class.CFGAS_TxtBreak::Engine" = type { i32 (...)** }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.171" }
%"class.fxcrt::RetainPtr.171" = type { %"class.std::__1::unique_ptr.172" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.fxcrt::StringDataTemplate.175"* }
%"class.fxcrt::StringDataTemplate.175" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::RetainPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type { %"class.fxcrt::Retainable", %"class.pdfium::Optional", %"class.fxcrt::RetainPtr.9", %"class.fxcrt::MaybeOwned", %"class.std::__1::unique_ptr.80", %"class.std::__1::map", %"class.std::__1::map.95", %"class.std::__1::vector.104", %"class.std::__1::map.111" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.fxcrt::RetainPtr.9" = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.15", %"class.fxcrt::UnownedPtr.79" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.CFX_Font* }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.18", %"class.std::__1::unique_ptr.24", %"class.fxcrt::RetainPtr.30", %"class.fxcrt::RetainPtr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.70", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.18" = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.40", %"class.fxcrt::RetainPtr.44" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.52" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type <{ %"class.fxcrt::ByteString", i32, i32, i32, i32, i8, i8, i8, [5 x i8] }>
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.61" }
%"class.fxcrt::RetainPtr.61" = type { %"class.std::__1::unique_ptr.62" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.fxcrt::UnownedPtr.79" = type { %class.CFX_Font* }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.CFX_UnicodeEncodingEx* }
%class.CFX_UnicodeEncodingEx = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.86" }
%"class.std::__1::__tree.86" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"class.fxcrt::RetainPtr.5"*, %"class.fxcrt::RetainPtr.5"*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.fxcrt::RetainPtr.5"* }
%"class.std::__1::map.111" = type { %"class.std::__1::__tree.112" }
%"class.std::__1::__tree.112" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%class.CFX_RectF = type { float, float, float, float }
%"struct.CFDE_TextOut::Piece" = type <{ i64, i64, i32, %class.CFX_RectF, [4 x i8] }>
%class.CFDE_TextOut = type { %"class.std::__1::unique_ptr.124", %"class.fxcrt::RetainPtr.5", float, float, float, float, i8, %struct.FDE_TextStyle, %"class.std::__1::vector.164", i32, i32, %"class.fxcrt::WideString", %class.CFX_Matrix, %"class.std::__1::deque", i32, i64, i32, %"class.std::__1::vector.200" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.CFGAS_TxtBreak* }
%class.CFGAS_TxtBreak = type { %class.CFGAS_Break, i32, i32 }
%class.CFGAS_Break = type { i32 (...)**, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.5", %"class.fxcrt::UnownedPtr.127", i8, [7 x i8], [2 x %class.CFGAS_BreakLine] }
%"class.fxcrt::UnownedPtr.127" = type { %class.CFGAS_BreakLine* }
%class.CFGAS_BreakLine = type <{ %"class.std::__1::vector.128", %"class.std::__1::vector.153", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %class.CFGAS_Char*, %class.CFGAS_Char*, %"class.std::__1::__compressed_pair.148" }
%class.CFGAS_Char = type <{ i8, i8, i8, i8, i32, i32, i16, i16, i16, [2 x i8], i32, i32, [4 x i8], %"class.fxcrt::RetainPtr.130", i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.fxcrt::RetainPtr.130" = type { %"class.std::__1::unique_ptr.131" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.CFGAS_TextUserData* }
%class.CFGAS_TextUserData = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.134", %"class.fxcrt::RetainPtr.140" }
%"class.fxcrt::RetainPtr.134" = type { %"class.std::__1::unique_ptr.135" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %class.CFX_CSSComputedStyle* }
%class.CFX_CSSComputedStyle = type opaque
%"class.fxcrt::RetainPtr.140" = type { %"class.std::__1::unique_ptr.141" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.CFGAS_LinkUserData* }
%class.CFGAS_LinkUserData = type opaque
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.CFGAS_Char* }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %class.CFGAS_BreakPiece*, %class.CFGAS_BreakPiece*, %"class.std::__1::__compressed_pair.156" }
%class.CFGAS_BreakPiece = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::UnownedPtr.155", %"class.fxcrt::RetainPtr.130" }
%"class.fxcrt::UnownedPtr.155" = type { %"class.std::__1::vector.128"* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %class.CFGAS_BreakPiece* }
%struct.FDE_TextStyle = type { i8, i8, i8 }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { i32*, i32*, %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { i32* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.196" }
%"struct.std::__1::__split_buffer" = type { %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.std::__1::__compressed_pair.191" }
%"class.CFDE_TextOut::Line" = type { i8, %"class.std::__1::deque.179" }
%"class.std::__1::deque.179" = type { %"class.std::__1::__deque_base.180" }
%"class.std::__1::__deque_base.180" = type { %"struct.std::__1::__split_buffer.181", i64, %"class.std::__1::__compressed_pair.187" }
%"struct.std::__1::__split_buffer.181" = type { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.CFDE_TextOut::Piece"** }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.CFDE_TextOut::Line"** }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %class.TextCharPos*, %class.TextCharPos*, %"class.std::__1::__compressed_pair.202" }
%class.TextCharPos = type { %class.CFX_PTemplate, i32, i32, i32, i32, i8, i8, [4 x float] }
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %class.TextCharPos* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.1" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%"class.pdfium::span.122" = type { %"class.fxcrt::UnownedPtr.123", i64 }
%"class.fxcrt::UnownedPtr.123" = type { %class.TextCharPos* }
%struct.CFX_TextRenderOptions = type <{ i32, i8, i8, [2 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.207" }
%"class.pdfium::span.207" = type { %"class.fxcrt::UnownedPtr.208", i64 }
%"class.fxcrt::UnownedPtr.208" = type { i32* }
%class.CFX_STemplate = type { float, float }
%"struct.std::__1::__split_buffer.221" = type { %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.192", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::allocator.194"* }
%"class.std::__1::allocator.194" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.236" = type { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.183", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::allocator.185"* }
%"class.std::__1::allocator.185" = type { i8 }

$_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE9push_backERKS2_ = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE5eraseENS_16__deque_iteratorIS2_PKS2_RS7_PKS8_lLl0EEESC_ = comdat any

$_ZNSt3__112__deque_baseIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE5clearEv = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE19__add_back_capacityEm = comdat any

$_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineENS_9allocatorIS3_EEE9push_backEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineENS_9allocatorIS3_EEE10push_frontEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineERNS_9allocatorIS3_EEE10push_frontERKS3_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__16vectorI11TextCharPosNS_9allocatorIS1_EEE8__appendEmRKS1_ = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE6assignINS_16__deque_iteratorIS2_PKS2_RS8_PKS9_lLl0EEEEEvT_SE_PNS_9enable_ifIXsr33__is_cpp17_random_access_iteratorISE_EE5valueEvE4typeE = comdat any

$_ZNSt3__14copyIN12CFDE_TextOut5PieceEPKS2_RS3_PKS4_lLl0ES2_PS2_RS2_PS8_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENSB_IT_T0_T1_T2_T3_XT4_EEESN_SH_ = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE8__appendINS_16__deque_iteratorIS2_PKS2_RS8_PKS9_lLl0EEEEEvT_SE_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISE_EE5valueEvE4typeE = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE14__erase_to_endENS_16__deque_iteratorIS2_PKS2_RS7_PKS8_lLl0EEE = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE19__add_back_capacityEm = comdat any

$_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceENS_9allocatorIS3_EEE9push_backEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceENS_9allocatorIS3_EEE10push_frontEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceERNS_9allocatorIS3_EEE10push_frontERKS3_ = comdat any

$_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__113move_backwardIN12CFDE_TextOut5PieceEPS2_RS2_PS3_lLl0ES2_S3_S4_S5_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS6_IT_T0_T1_T2_T3_XT4_EEESI_SC_ = comdat any

$_ZNSt3__14moveIN12CFDE_TextOut5PieceEPS2_RS2_PS3_lLl0ES2_S3_S4_S5_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS6_IT_T0_T1_T2_T3_XT4_EEESI_SC_ = comdat any

$_ZNSt3__113move_backwardIPN12CFDE_TextOut5PieceES2_S3_RS2_PS3_lLl0EEENS_16__deque_iteratorIT0_T1_T2_T3_T4_XT5_EEET_SD_SC_PNS_9enable_ifIXsr33__is_cpp17_random_access_iteratorISD_EE5valueEvE4typeE = comdat any

@_ZZN12CFDE_TextOut10DrawStringEP16CFX_RenderDevicejRKN5fxcrt9RetainPtrI12CFGAS_GEFontEEN6pdfium4spanI11TextCharPosEEfRK10CFX_MatrixE8kOptions = internal constant { i32, i8, i8 } { i32 2, i8 0, i8 1 }, align 4
@__const._ZN12CFDE_TextOut13GetDisplayPosEPKNS_5PieceE.tr = private unnamed_addr constant %"struct.CFGAS_TxtBreak::Run" <{ %"class.CFGAS_TxtBreak::Engine"* inttoptr (i64 -6148914691236517206 to %"class.CFGAS_TxtBreak::Engine"*), %"class.fxcrt::WideString" { %"class.fxcrt::RetainPtr.171" { %"class.std::__1::unique_ptr.172" { %"class.std::__1::__compressed_pair.173" { %"struct.std::__1::__compressed_pair_elem.174" { %"class.fxcrt::StringDataTemplate.175"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.175"*) } } } } }, i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766, %"class.fxcrt::RetainPtr.5" { %"class.std::__1::unique_ptr.6" { %"class.std::__1::__compressed_pair.7" { %"struct.std::__1::__compressed_pair_elem.8" { %class.CFGAS_GEFont* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEFont*) } } } }, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@.str = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN12CFDE_TextOut5PieceC1Ev = hidden unnamed_addr alias void (%"struct.CFDE_TextOut::Piece"*), void (%"struct.CFDE_TextOut::Piece"*)* @_ZN12CFDE_TextOut5PieceC2Ev
@_ZN12CFDE_TextOut5PieceC1ERKS0_ = hidden unnamed_addr alias void (%"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"*), void (%"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"*)* @_ZN12CFDE_TextOut5PieceC2ERKS0_
@_ZN12CFDE_TextOut5PieceD1Ev = hidden unnamed_addr alias void (%"struct.CFDE_TextOut::Piece"*), void (%"struct.CFDE_TextOut::Piece"*)* @_ZN12CFDE_TextOut5PieceD2Ev
@_ZN12CFDE_TextOutC1Ev = hidden unnamed_addr alias void (%class.CFDE_TextOut*), void (%class.CFDE_TextOut*)* @_ZN12CFDE_TextOutC2Ev
@_ZN12CFDE_TextOutD1Ev = hidden unnamed_addr alias void (%class.CFDE_TextOut*), void (%class.CFDE_TextOut*)* @_ZN12CFDE_TextOutD2Ev
@_ZN12CFDE_TextOut4LineC1Ev = hidden unnamed_addr alias void (%"class.CFDE_TextOut::Line"*), void (%"class.CFDE_TextOut::Line"*)* @_ZN12CFDE_TextOut4LineC2Ev
@_ZN12CFDE_TextOut4LineC1ERKS0_ = hidden unnamed_addr alias void (%"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"*), void (%"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"*)* @_ZN12CFDE_TextOut4LineC2ERKS0_
@_ZN12CFDE_TextOut4LineD1Ev = hidden unnamed_addr alias void (%"class.CFDE_TextOut::Line"*), void (%"class.CFDE_TextOut::Line"*)* @_ZN12CFDE_TextOut4LineD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CFDE_TextOut10DrawStringEP16CFX_RenderDevicejRKN5fxcrt9RetainPtrI12CFGAS_GEFontEEN6pdfium4spanI11TextCharPosEEfRK10CFX_Matrix(%class.CFX_RenderDevice*, i32, %"class.fxcrt::RetainPtr.5"* nocapture readonly dereferenceable(8), %"class.pdfium::span.122"* nocapture readonly, float, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.CFX_Font, align 8
  %8 = alloca %"class.fxcrt::RetainPtr.5", align 8
  %9 = alloca %"class.fxcrt::RetainPtr.30", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.30", align 8
  %11 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %11, align 8
  %13 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %12, i64 0, i32 3, i32 1, i32 0
  %14 = load %class.CFX_Font*, %class.CFX_Font** %13, align 8
  %15 = tail call i32 @_ZNK12CFGAS_GEFont13GetFontStylesEv(%class.CFGAS_GEFont* %12) #12
  %16 = and i32 %15, 64
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %43, label %18

18:                                               ; preds = %6
  %19 = tail call zeroext i1 @_ZNK8CFX_Font8IsItalicEv(%class.CFX_Font* %14) #12
  br i1 %19, label %43, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.pdfium::span.122", %"class.pdfium::span.122"* %3, i64 0, i32 0, i32 0
  %22 = load %class.TextCharPos*, %class.TextCharPos** %21, align 8
  %23 = getelementptr inbounds %"class.pdfium::span.122", %"class.pdfium::span.122"* %3, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %22, i64 %24
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %20, %27
  %28 = phi %class.TextCharPos* [ %41, %27 ], [ %22, %20 ]
  %29 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %28, i64 0, i32 7, i64 0
  %30 = load float, float* %29, align 4
  %31 = fmul float %30, 0x3FD1261380000000
  %32 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %28, i64 0, i32 7, i64 2
  %33 = load float, float* %32, align 4
  %34 = fadd float %33, %31
  store float %34, float* %32, align 4
  %35 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %28, i64 0, i32 7, i64 1
  %36 = load float, float* %35, align 4
  %37 = fmul float %36, 0x3FD1261380000000
  %38 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %28, i64 0, i32 7, i64 3
  %39 = load float, float* %38, align 4
  %40 = fadd float %39, %37
  store float %40, float* %38, align 4
  %41 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %28, i64 1
  %42 = icmp eq %class.TextCharPos* %41, %25
  br i1 %42, label %43, label %27

43:                                               ; preds = %27, %20, %6, %18
  %44 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %11, align 8
  %45 = tail call i32 @_ZNK12CFGAS_GEFont13GetFontStylesEv(%class.CFGAS_GEFont* %44) #12
  %46 = bitcast %class.CFX_Font* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %46) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 96, i1 false)
  call void @_ZN8CFX_FontC1Ev(%class.CFX_Font* nonnull %7) #12
  %47 = call i8* @_Znwm(i64 32) #13
  %48 = bitcast i8* %47 to %class.CFX_SubstFont*
  call void @_ZN13CFX_SubstFontC1Ev(%class.CFX_SubstFont* nonnull %48) #12
  %49 = and i32 %45, 262144
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, i32 400, i32 700
  %52 = getelementptr inbounds i8, i8* %47, i64 12
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 4
  %54 = and i32 %45, 64
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %55, i32 0, i32 -12
  %57 = getelementptr inbounds i8, i8* %47, i64 16
  %58 = bitcast i8* %57 to i32*
  store i32 %56, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %47, i64 20
  %60 = bitcast i8* %59 to i32*
  store i32 %51, i32* %60, align 4
  %61 = getelementptr inbounds i8, i8* %47, i64 25
  %62 = lshr exact i32 %54, 6
  %63 = trunc i32 %62 to i8
  store i8 %63, i8* %61, align 1
  call void @_ZN8CFX_Font12SetSubstFontENSt3__110unique_ptrI13CFX_SubstFontNS0_14default_deleteIS2_EEEE(%class.CFX_Font* nonnull %7, %class.CFX_SubstFont* nonnull %48) #12
  %64 = getelementptr inbounds %"class.pdfium::span.122", %"class.pdfium::span.122"* %3, i64 0, i32 0, i32 0
  %65 = load %class.TextCharPos*, %class.TextCharPos** %64, align 8
  %66 = getelementptr inbounds %"class.pdfium::span.122", %"class.pdfium::span.122"* %3, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %65, i64 %67
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %234, label %70

70:                                               ; preds = %43
  %71 = bitcast %"class.fxcrt::RetainPtr.5"* %8 to i8*
  %72 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.fxcrt::RetainPtr.30"* %9 to i64*
  %74 = getelementptr inbounds %"class.fxcrt::RetainPtr.30", %"class.fxcrt::RetainPtr.30"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %7, i64 0, i32 7, i32 0, i32 0
  %76 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %7, i64 0, i32 7, i32 1
  %77 = fsub float -0.000000e+00, %4
  br label %83

78:                                               ; preds = %177
  %79 = inttoptr i64 %162 to %class.CFGAS_GEFont*
  %80 = icmp ne i64 %162, 0
  %81 = icmp ne i32 %164, 0
  %82 = and i1 %80, %81
  br i1 %82, label %180, label %220

83:                                               ; preds = %70, %177
  %84 = phi %class.TextCharPos* [ %65, %70 ], [ %178, %177 ]
  %85 = phi i32 [ 0, %70 ], [ %164, %177 ]
  %86 = phi %class.TextCharPos* [ null, %70 ], [ %163, %177 ]
  %87 = phi i64 [ 0, %70 ], [ %162, %177 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #12
  store %class.CFGAS_GEFont* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEFont*), %class.CFGAS_GEFont** %72, align 8
  %88 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %11, align 8
  %89 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %84, i64 0, i32 2
  %90 = load i32, i32* %89, align 4
  call void @_ZN12CFGAS_GEFont12GetSubstFontEi(%"class.fxcrt::RetainPtr.5"* nonnull sret %8, %class.CFGAS_GEFont* %88, i32 %90) #12
  %91 = load i32, i32* %89, align 4
  %92 = and i32 %91, 16777215
  store i32 %92, i32* %89, align 4
  %93 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %84, i64 0, i32 6
  store i8 0, i8* %93, align 1
  %94 = inttoptr i64 %87 to %class.CFGAS_GEFont*
  %95 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %72, align 8
  %96 = icmp eq %class.CFGAS_GEFont* %95, %94
  br i1 %96, label %158, label %97

97:                                               ; preds = %83
  %98 = icmp eq i64 %87, 0
  br i1 %98, label %135, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %94, i64 0, i32 3, i32 1, i32 0
  %101 = load %class.CFX_Font*, %class.CFX_Font** %100, align 8
  %102 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %103 = load %class.CFX_Face*, %class.CFX_Face** %102, align 8, !noalias !2
  %104 = ptrtoint %class.CFX_Face* %103 to i64
  store i64 %104, i64* %73, align 8, !alias.scope !2
  %105 = icmp eq %class.CFX_Face* %103, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %103, i64 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8, !noalias !2
  %109 = add nsw i64 %108, 1
  store i64 %109, i64* %107, align 8, !noalias !2
  br label %110

110:                                              ; preds = %99, %106
  call void @_ZN8CFX_Font7SetFaceEN5fxcrt9RetainPtrI8CFX_FaceEE(%class.CFX_Font* nonnull %7, %"class.fxcrt::RetainPtr.30"* nonnull %9) #12
  %111 = load %class.CFX_Face*, %class.CFX_Face** %74, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %74, align 8
  %112 = icmp eq %class.CFX_Face* %111, null
  br i1 %112, label %124, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %111, i64 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = add nsw i64 %115, -1
  store i64 %116, i64* %114, align 8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %111, i64 0, i32 0
  %120 = bitcast %class.CFX_Face* %111 to void (%"class.fxcrt::Retainable"*)***
  %121 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %121, i64 1
  %123 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %122, align 8
  call void %123(%"class.fxcrt::Retainable"* nonnull %119) #12
  br label %124

124:                                              ; preds = %110, %113, %118
  %125 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %101, i64 0, i32 7, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %101, i64 0, i32 7, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = load i8*, i8** %75, align 8
  %130 = icmp eq i8* %129, %126
  br i1 %130, label %132, label %131

131:                                              ; preds = %124
  store i8* %126, i8** %75, align 8
  br label %132

132:                                              ; preds = %124, %131
  store i64 %128, i64* %76, align 8
  %133 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* %0, i32 %85, %class.TextCharPos* %86, %class.CFX_Font* nonnull %7, float %77, %class.CFX_Matrix* dereferenceable(24) %5, i32 %1, %struct.CFX_TextRenderOptions* dereferenceable(8) bitcast ({ i32, i8, i8 }* @_ZZN12CFDE_TextOut10DrawStringEP16CFX_RenderDevicejRKN5fxcrt9RetainPtrI12CFGAS_GEFontEEN6pdfium4spanI11TextCharPosEEfRK10CFX_MatrixE8kOptions to %struct.CFX_TextRenderOptions*)) #12
  %134 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %72, align 8
  br label %135

135:                                              ; preds = %97, %132
  %136 = phi %class.CFGAS_GEFont* [ %134, %132 ], [ %95, %97 ]
  %137 = icmp eq %class.CFGAS_GEFont* %136, %94
  br i1 %137, label %160, label %138

138:                                              ; preds = %135
  %139 = icmp eq %class.CFGAS_GEFont* %136, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %136, i64 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = add nsw i64 %142, 1
  store i64 %143, i64* %141, align 8
  br label %144

144:                                              ; preds = %140, %138
  %145 = ptrtoint %class.CFGAS_GEFont* %136 to i64
  br i1 %98, label %160, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %94, i64 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %148, -1
  store i64 %149, i64* %147, align 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %160

151:                                              ; preds = %146
  %152 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %94, i64 0, i32 0
  %153 = inttoptr i64 %87 to void (%"class.fxcrt::Retainable"*)***
  %154 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %154, i64 1
  %156 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %155, align 8
  call void %156(%"class.fxcrt::Retainable"* nonnull %152) #12
  %157 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %72, align 8
  br label %160

158:                                              ; preds = %83
  %159 = add nsw i32 %85, 1
  br label %160

160:                                              ; preds = %151, %146, %144, %135, %158
  %161 = phi %class.CFGAS_GEFont* [ %94, %158 ], [ %136, %146 ], [ %157, %151 ], [ %136, %144 ], [ %94, %135 ]
  %162 = phi i64 [ %87, %158 ], [ %145, %146 ], [ %145, %151 ], [ %145, %144 ], [ %87, %135 ]
  %163 = phi %class.TextCharPos* [ %86, %158 ], [ %84, %146 ], [ %84, %151 ], [ %84, %144 ], [ %84, %135 ]
  %164 = phi i32 [ %159, %158 ], [ 1, %146 ], [ 1, %151 ], [ 1, %144 ], [ 1, %135 ]
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %72, align 8
  %165 = icmp eq %class.CFGAS_GEFont* %161, null
  br i1 %165, label %177, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %161, i64 0, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = add nsw i64 %168, -1
  store i64 %169, i64* %167, align 8
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %177

171:                                              ; preds = %166
  %172 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %161, i64 0, i32 0
  %173 = bitcast %class.CFGAS_GEFont* %161 to void (%"class.fxcrt::Retainable"*)***
  %174 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %174, i64 1
  %176 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %175, align 8
  call void %176(%"class.fxcrt::Retainable"* nonnull %172) #12
  br label %177

177:                                              ; preds = %160, %166, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #12
  %178 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %84, i64 1
  %179 = icmp eq %class.TextCharPos* %178, %68
  br i1 %179, label %78, label %83

180:                                              ; preds = %78
  %181 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %79, i64 0, i32 3, i32 1, i32 0
  %182 = load %class.CFX_Font*, %class.CFX_Font** %181, align 8
  %183 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %184 = load %class.CFX_Face*, %class.CFX_Face** %183, align 8, !noalias !5
  %185 = ptrtoint %class.CFX_Face* %184 to i64
  %186 = bitcast %"class.fxcrt::RetainPtr.30"* %10 to i64*
  store i64 %185, i64* %186, align 8, !alias.scope !5
  %187 = icmp eq %class.CFX_Face* %184, null
  br i1 %187, label %192, label %188

188:                                              ; preds = %180
  %189 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %184, i64 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8, !noalias !5
  %191 = add nsw i64 %190, 1
  store i64 %191, i64* %189, align 8, !noalias !5
  br label %192

192:                                              ; preds = %180, %188
  call void @_ZN8CFX_Font7SetFaceEN5fxcrt9RetainPtrI8CFX_FaceEE(%class.CFX_Font* nonnull %7, %"class.fxcrt::RetainPtr.30"* nonnull %10) #12
  %193 = getelementptr inbounds %"class.fxcrt::RetainPtr.30", %"class.fxcrt::RetainPtr.30"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %194 = load %class.CFX_Face*, %class.CFX_Face** %193, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %193, align 8
  %195 = icmp eq %class.CFX_Face* %194, null
  br i1 %195, label %207, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %194, i64 0, i32 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = add nsw i64 %198, -1
  store i64 %199, i64* %197, align 8
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %207

201:                                              ; preds = %196
  %202 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %194, i64 0, i32 0
  %203 = bitcast %class.CFX_Face* %194 to void (%"class.fxcrt::Retainable"*)***
  %204 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %204, i64 1
  %206 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %205, align 8
  call void %206(%"class.fxcrt::Retainable"* nonnull %202) #12
  br label %207

207:                                              ; preds = %192, %196, %201
  %208 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %182, i64 0, i32 7, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %182, i64 0, i32 7, i32 1
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %7, i64 0, i32 7, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = icmp eq i8* %213, %209
  br i1 %214, label %216, label %215

215:                                              ; preds = %207
  store i8* %209, i8** %212, align 8
  br label %216

216:                                              ; preds = %215, %207
  %217 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %7, i64 0, i32 7, i32 1
  store i64 %211, i64* %217, align 8
  %218 = fsub float -0.000000e+00, %4
  %219 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* %0, i32 %164, %class.TextCharPos* %163, %class.CFX_Font* nonnull %7, float %218, %class.CFX_Matrix* dereferenceable(24) %5, i32 %1, %struct.CFX_TextRenderOptions* dereferenceable(8) bitcast ({ i32, i8, i8 }* @_ZZN12CFDE_TextOut10DrawStringEP16CFX_RenderDevicejRKN5fxcrt9RetainPtrI12CFGAS_GEFontEEN6pdfium4spanI11TextCharPosEEfRK10CFX_MatrixE8kOptions to %struct.CFX_TextRenderOptions*)) #12
  br label %222

220:                                              ; preds = %78
  %221 = icmp eq i64 %162, 0
  br i1 %221, label %234, label %222

222:                                              ; preds = %216, %220
  %223 = phi i1 [ %219, %216 ], [ true, %220 ]
  %224 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %79, i64 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = add nsw i64 %225, -1
  store i64 %226, i64* %224, align 8
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %234

228:                                              ; preds = %222
  %229 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %79, i64 0, i32 0
  %230 = inttoptr i64 %162 to void (%"class.fxcrt::Retainable"*)***
  %231 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %231, i64 1
  %233 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %232, align 8
  call void %233(%"class.fxcrt::Retainable"* nonnull %229) #12
  br label %234

234:                                              ; preds = %43, %228, %222, %220
  %235 = phi i1 [ true, %220 ], [ %223, %222 ], [ %223, %228 ], [ true, %43 ]
  call void @_ZN8CFX_FontD1Ev(%class.CFX_Font* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %46) #12
  ret i1 %235
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK12CFGAS_GEFont13GetFontStylesEv(%class.CFGAS_GEFont*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8CFX_Font8IsItalicEv(%class.CFX_Font*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8CFX_FontC1Ev(%class.CFX_Font*) unnamed_addr #2

declare void @_ZN8CFX_Font12SetSubstFontENSt3__110unique_ptrI13CFX_SubstFontNS0_14default_deleteIS2_EEEE(%class.CFX_Font*, %class.CFX_SubstFont*) local_unnamed_addr #2

declare void @_ZN12CFGAS_GEFont12GetSubstFontEi(%"class.fxcrt::RetainPtr.5"* sret, %class.CFGAS_GEFont*, i32) local_unnamed_addr #2

declare void @_ZN8CFX_Font7SetFaceEN5fxcrt9RetainPtrI8CFX_FaceEE(%class.CFX_Font*, %"class.fxcrt::RetainPtr.30"*) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice*, i32, %class.TextCharPos*, %class.CFX_Font*, float, %class.CFX_Matrix* dereferenceable(24), i32, %struct.CFX_TextRenderOptions* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8CFX_FontD1Ev(%class.CFX_Font*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut5PieceC2Ev(%"struct.CFDE_TextOut::Piece"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.CFDE_TextOut::Piece"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut5PieceC2ERKS0_(%"struct.CFDE_TextOut::Piece"* nocapture, %"struct.CFDE_TextOut::Piece"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.CFDE_TextOut::Piece"* %0 to i8*
  %4 = bitcast %"struct.CFDE_TextOut::Piece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 36, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12CFDE_TextOut5PieceD2Ev(%"struct.CFDE_TextOut::Piece"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOutC2Ev(%class.CFDE_TextOut*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 216) #13
  %3 = bitcast i8* %2 to %class.CFGAS_TxtBreak*
  tail call void @_ZN14CFGAS_TxtBreakC1Ev(%class.CFGAS_TxtBreak* nonnull %3) #12
  %4 = bitcast %class.CFDE_TextOut* %0 to i8**
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 1
  %6 = bitcast %"class.fxcrt::RetainPtr.5"* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  store float 1.200000e+01, float* %7, align 8
  %8 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 3
  store float 1.200000e+01, float* %8, align 4
  %9 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 4
  %10 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 8
  %11 = bitcast %"class.std::__1::vector.164"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 9
  %13 = bitcast float* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 12, i1 false)
  store i32 -16777216, i32* %12, align 8
  %14 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 10
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 11
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %15) #12
  %16 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 12, i32 0
  %17 = bitcast float* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %17, align 4
  %18 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 12, i32 4
  %19 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13
  %20 = bitcast float* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 56, i1 false)
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::deque"* %19, i64 5) #12
  %21 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 14
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 15
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 16
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 17
  %25 = bitcast %"class.std::__1::vector.200"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #12
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOutD2Ev(%class.CFDE_TextOut*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 17
  %3 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %2, i64 0, i32 0, i32 0
  %4 = load %class.TextCharPos*, %class.TextCharPos** %3, align 8
  %5 = icmp eq %class.TextCharPos* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.TextCharPos* %4 to i8*
  %8 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 17, i32 0, i32 1
  %9 = load %class.TextCharPos*, %class.TextCharPos** %8, align 8
  %10 = icmp eq %class.TextCharPos* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %class.TextCharPos* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %12, i64 -1
  tail call void @_ZN11TextCharPosD1Ev(%class.TextCharPos* %13) #12
  %14 = icmp eq %class.TextCharPos* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.200"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %class.TextCharPos* %4, %class.TextCharPos** %8, align 8
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0
  tail call void @_ZNSt3__112__deque_baseIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"* %21) #12
  %22 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %23 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %22, align 8
  %24 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %25 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %24, align 8
  %26 = icmp eq %"class.CFDE_TextOut::Line"** %23, %25
  br i1 %26, label %45, label %27

27:                                               ; preds = %20, %27
  %28 = phi %"class.CFDE_TextOut::Line"** [ %31, %27 ], [ %23, %20 ]
  %29 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %28, align 8
  %30 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %29, i64 0, i32 0
  tail call void @_ZdlPv(i8* %30) #13
  %31 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %28, i64 1
  %32 = icmp eq %"class.CFDE_TextOut::Line"** %31, %25
  br i1 %32, label %33, label %27

33:                                               ; preds = %27
  %34 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %22, align 8
  %35 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %24, align 8
  %36 = icmp eq %"class.CFDE_TextOut::Line"** %35, %34
  br i1 %36, label %45, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %"class.CFDE_TextOut::Line"** %34 to i64
  %39 = getelementptr %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %35, i64 -1
  %40 = ptrtoint %"class.CFDE_TextOut::Line"** %39 to i64
  %41 = sub i64 %40, %38
  %42 = lshr i64 %41, 3
  %43 = xor i64 %42, -1
  %44 = getelementptr %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %35, i64 %43
  store %"class.CFDE_TextOut::Line"** %44, %"class.CFDE_TextOut::Line"*** %24, align 8
  br label %45

45:                                               ; preds = %37, %33, %20
  %46 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %21, i64 0, i32 0, i32 0
  %47 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %46, align 8
  %48 = icmp eq %"class.CFDE_TextOut::Line"** %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.CFDE_TextOut::Line"** %47 to i8*
  tail call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 11
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %52) #12
  %53 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 8, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = icmp eq i32* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = ptrtoint i32* %54 to i64
  %58 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 8, i32 0, i32 1
  %59 = bitcast i32** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast i32* %54 to i8*
  tail call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %51, %56
  %62 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %63 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %62, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %62, align 8
  %64 = icmp eq %class.CFGAS_GEFont* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %63, i64 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %63, i64 0, i32 0
  %72 = bitcast %class.CFGAS_GEFont* %63 to void (%"class.fxcrt::Retainable"*)***
  %73 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %73, i64 1
  %75 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, align 8
  tail call void %75(%"class.fxcrt::Retainable"* nonnull %71) #12
  br label %76

76:                                               ; preds = %61, %65, %70
  %77 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %77, align 8
  store %class.CFGAS_TxtBreak* null, %class.CFGAS_TxtBreak** %77, align 8
  %79 = icmp eq %class.CFGAS_TxtBreak* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = bitcast %class.CFGAS_TxtBreak* %78 to void (%class.CFGAS_TxtBreak*)***
  %82 = load void (%class.CFGAS_TxtBreak*)**, void (%class.CFGAS_TxtBreak*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.CFGAS_TxtBreak*)*, void (%class.CFGAS_TxtBreak*)** %82, i64 1
  %84 = load void (%class.CFGAS_TxtBreak*)*, void (%class.CFGAS_TxtBreak*)** %83, align 8
  tail call void %84(%class.CFGAS_TxtBreak* nonnull %78) #12
  br label %85

85:                                               ; preds = %76, %80
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFDE_TextOut* nocapture, %"class.fxcrt::RetainPtr.5"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %3, align 8
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %5, align 8
  %7 = icmp eq %class.CFGAS_GEFont* %4, %6
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = icmp eq %class.CFGAS_GEFont* %6, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %6, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8
  %14 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %3, align 8
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi %class.CFGAS_GEFont* [ %14, %10 ], [ %4, %8 ]
  store %class.CFGAS_GEFont* %6, %class.CFGAS_GEFont** %3, align 8
  %17 = icmp eq %class.CFGAS_GEFont* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %16, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %16, i64 0, i32 0
  %25 = bitcast %class.CFGAS_GEFont* %16 to void (%"class.fxcrt::Retainable"*)***
  %26 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, i64 1
  %28 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, align 8
  tail call void %28(%"class.fxcrt::Retainable"* nonnull %24) #12
  br label %29

29:                                               ; preds = %2, %15, %18, %23
  %30 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %30, align 8
  %32 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %31, i64 0, i32 0
  tail call void @_ZN11CFGAS_Break7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFGAS_Break* %32, %"class.fxcrt::RetainPtr.5"* dereferenceable(8) %1) #12
  ret void
}

declare void @_ZN11CFGAS_Break7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFGAS_Break*, %"class.fxcrt::RetainPtr.5"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut11SetFontSizeEf(%class.CFDE_TextOut* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  store float %1, float* %3, align 8
  %4 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %4, align 8
  %6 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %5, i64 0, i32 0
  tail call void @_ZN11CFGAS_Break11SetFontSizeEf(%class.CFGAS_Break* %6, float %1) #12
  ret void
}

declare void @_ZN11CFGAS_Break11SetFontSizeEf(%class.CFGAS_Break*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut9SetStylesERK13FDE_TextStyle(%class.CFDE_TextOut* nocapture, %struct.FDE_TextStyle* nocapture readonly dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %struct.FDE_TextStyle, %struct.FDE_TextStyle* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 3, i1 false)
  %5 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 10
  %6 = load i8, i8* %3, align 1, !range !8
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %7, i32 0, i32 512
  store i32 %8, i32* %5, align 4
  %9 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %9, align 8
  %11 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %10, i64 0, i32 0
  tail call void @_ZN11CFGAS_Break15SetLayoutStylesEj(%class.CFGAS_Break* %11, i32 %8) #12
  ret void
}

declare void @_ZN11CFGAS_Break15SetLayoutStylesEj(%class.CFGAS_Break*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut12SetAlignmentE17FDE_TextAlignment(%class.CFDE_TextOut* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 6
  store i8 %1, i8* %3, align 8
  %4 = icmp eq i8 %1, 3
  %5 = select i1 %4, i32 2, i32 0
  %6 = icmp eq i8 %1, 2
  %7 = select i1 %6, i32 1, i32 %5
  %8 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %8, align 8
  tail call void @_ZN14CFGAS_TxtBreak12SetAlignmentEi(%class.CFGAS_TxtBreak* %9, i32 %7) #12
  ret void
}

declare void @_ZN14CFGAS_TxtBreak12SetAlignmentEi(%class.CFGAS_TxtBreak*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12CFDE_TextOut12SetLineSpaceEf(%class.CFDE_TextOut* nocapture, float) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 3
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut21SetLineBreakToleranceEf(%class.CFDE_TextOut* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 5
  store float %1, float* %3, align 4
  %4 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %4, align 8
  %6 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %5, i64 0, i32 0
  tail call void @_ZN11CFGAS_Break21SetLineBreakToleranceEf(%class.CFGAS_Break* %6, float %1) #12
  ret void
}

declare void @_ZN11CFGAS_Break21SetLineBreakToleranceEf(%class.CFGAS_Break*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut13CalcLogicSizeEN5fxcrt18StringViewTemplateIwEEP13CFX_STemplateIfE(%class.CFDE_TextOut* nocapture, %"class.fxcrt::StringViewTemplate"* nocapture readonly, %class.CFX_STemplate*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_RectF, align 4
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = bitcast %class.CFX_RectF* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %4, i64 0, i32 0
  %8 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %4, i64 0, i32 1
  %9 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %4, i64 0, i32 2
  %10 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %4, i64 0, i32 3
  %11 = bitcast %class.CFX_STemplate* %2 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %2, i64 0, i32 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store float 0.000000e+00, float* %7, align 4
  store float 0.000000e+00, float* %8, align 4
  %16 = bitcast float* %9 to i32*
  store i32 %12, i32* %16, align 4
  %17 = bitcast float* %10 to i32*
  store i32 %15, i32* %17, align 4
  %18 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %19 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %19, i64 16, i1 false)
  call void @_ZN12CFDE_TextOut13CalcLogicSizeEN5fxcrt18StringViewTemplateIwEEP9CFX_RectF(%class.CFDE_TextOut* %0, %"class.fxcrt::StringViewTemplate"* nonnull %5, %class.CFX_RectF* nonnull %4)
  %20 = load i32, i32* %16, align 4, !noalias !9
  %21 = load i32, i32* %17, align 4, !noalias !9
  store i32 %20, i32* %11, align 4
  store i32 %21, i32* %14, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut13CalcLogicSizeEN5fxcrt18StringViewTemplateIwEEP9CFX_RectF(%class.CFDE_TextOut* nocapture, %"class.fxcrt::StringViewTemplate"* nocapture readonly, %class.CFX_RectF* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  store float 0.000000e+00, float* %13, align 4
  br label %115

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 0
  %16 = load i8, i8* %15, align 1, !range !8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %20, 1.000000e+00
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  %24 = load float, float* %23, align 8
  %25 = fmul float %24, 1.000000e+03
  store float %25, float* %19, align 4
  br label %26

26:                                               ; preds = %22, %18
  %27 = phi float [ %25, %22 ], [ %20, %18 ]
  %28 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %28, align 8
  tail call void @_ZN14CFGAS_TxtBreak12SetLineWidthEf(%class.CFGAS_TxtBreak* %29, float %27) #12
  br label %30

30:                                               ; preds = %14, %26
  %31 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 16
  store i32 0, i32* %31, align 8
  %32 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #12
  store float 0.000000e+00, float* %4, align 4
  %33 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #12
  store float 0.000000e+00, float* %5, align 4
  %34 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #12
  %35 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %38 = load float, float* %37, align 4
  %39 = fadd float %36, %38
  store float %39, float* %6, align 4
  %40 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i64, i64* %8, align 8
  %43 = getelementptr inbounds i32, i32* %41, i64 %42
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %30
  %46 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %52

47:                                               ; preds = %70, %30
  %48 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %48, align 8
  %50 = tail call zeroext i8 @_ZN14CFGAS_TxtBreak8EndBreakEN10CFGAS_Char9BreakTypeE(%class.CFGAS_TxtBreak* %49, i8 zeroext 3) #12
  %51 = icmp ult i8 %50, 2
  br i1 %51, label %75, label %73

52:                                               ; preds = %45, %70
  %53 = phi i32* [ %41, %45 ], [ %71, %70 ]
  %54 = phi i8 [ 0, %45 ], [ %63, %70 ]
  %55 = and i8 %54, 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = load i32, i32* %53, align 4
  switch i32 %58, label %62 [
    i32 10, label %59
    i32 13, label %59
  ]

59:                                               ; preds = %57, %57
  %60 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %46, align 8
  %61 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %60, i64 0, i32 0
  tail call void @_ZN11CFGAS_Break21SetParagraphBreakCharEw(%class.CFGAS_Break* %61, i32 signext %58) #12
  br label %62

62:                                               ; preds = %57, %52, %59
  %63 = phi i8 [ %54, %52 ], [ 1, %59 ], [ %54, %57 ]
  %64 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %46, align 8
  %65 = load i32, i32* %53, align 4
  %66 = tail call zeroext i8 @_ZN14CFGAS_TxtBreak10AppendCharEw(%class.CFGAS_TxtBreak* %64, i32 signext %65) #12
  %67 = icmp ult i8 %66, 2
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  %69 = call zeroext i1 @_ZN12CFDE_TextOut17RetrieveLineWidthEN10CFGAS_Char9BreakTypeEPfS2_S2_(%class.CFDE_TextOut* %0, i8 zeroext %66, float* nonnull %6, float* nonnull %4, float* nonnull %5)
  br label %70

70:                                               ; preds = %68, %62
  %71 = getelementptr inbounds i32, i32* %53, i64 1
  %72 = icmp eq i32* %71, %43
  br i1 %72, label %47, label %52

73:                                               ; preds = %47
  %74 = call zeroext i1 @_ZN12CFDE_TextOut17RetrieveLineWidthEN10CFGAS_Char9BreakTypeEPfS2_S2_(%class.CFDE_TextOut* %0, i8 zeroext %50, float* nonnull %6, float* nonnull %4, float* nonnull %5)
  br label %75

75:                                               ; preds = %73, %47
  %76 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %48, align 8
  %77 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %76, i64 0, i32 0
  tail call void @_ZN11CFGAS_Break5ResetEv(%class.CFGAS_Break* %77) #12
  %78 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %79 = load float, float* %78, align 4
  %80 = load float, float* %5, align 4
  %81 = fsub float %79, %80
  %82 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 6
  %83 = load i8, i8* %82, align 8
  %84 = add i8 %83, -1
  %85 = icmp ult i8 %84, 3
  %86 = fmul float %81, 5.000000e-01
  %87 = icmp eq i8 %83, 0
  %88 = select i1 %87, float 0.000000e+00, float %81
  %89 = select i1 %85, float %86, float %88
  %90 = load float, float* %6, align 4
  %91 = load float, float* %35, align 4
  %92 = fadd float %90, %91
  store float %92, float* %35, align 4
  %93 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %94 = load float, float* %93, align 4
  %95 = fadd float %89, %94
  store float %95, float* %93, align 4
  %96 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96)
  %97 = load float, float* %37, align 4
  store float %97, float* %7, align 4
  %98 = load float, float* %4, align 4
  %99 = fcmp olt float %97, %98
  %100 = select i1 %99, float* %7, float* %4
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = bitcast float* %37 to i32*
  store i32 %102, i32* %103, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96)
  store float %80, float* %78, align 4
  %104 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 2
  %105 = load i8, i8* %104, align 1, !range !8
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %75
  %108 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 3
  %109 = load float, float* %108, align 4
  %110 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  %111 = load float, float* %110, align 8
  %112 = fsub float %109, %111
  %113 = fsub float %80, %112
  store float %113, float* %78, align 4
  br label %114

114:                                              ; preds = %75, %107
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #12
  br label %115

115:                                              ; preds = %114, %11
  ret void
}

declare void @_ZN14CFGAS_TxtBreak12SetLineWidthEf(%class.CFGAS_TxtBreak*, float) local_unnamed_addr #2

declare void @_ZN11CFGAS_Break21SetParagraphBreakCharEw(%class.CFGAS_Break*, i32 signext) local_unnamed_addr #2

declare zeroext i8 @_ZN14CFGAS_TxtBreak10AppendCharEw(%class.CFGAS_TxtBreak*, i32 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CFDE_TextOut17RetrieveLineWidthEN10CFGAS_Char9BreakTypeEPfS2_S2_(%class.CFDE_TextOut* nocapture, i8 zeroext, float* nocapture, float* nocapture, float* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca float, align 4
  %7 = icmp ult i8 %1, 2
  br i1 %7, label %76, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  %11 = load float, float* %9, align 4
  %12 = load float, float* %10, align 4
  %13 = fcmp olt float %11, %12
  %14 = select i1 %13, float %12, float %11
  %15 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %15, align 8
  %17 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %16, i64 0, i32 0
  %18 = tail call i32 @_ZNK11CFGAS_Break16CountBreakPiecesEv(%class.CFGAS_Break* %17) #12
  %19 = icmp sgt i32 %18, 0
  %20 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %15, align 8
  %21 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %20, i64 0, i32 0
  br i1 %19, label %22, label %25

22:                                               ; preds = %8
  %23 = bitcast float* %6 to i8*
  %24 = bitcast float* %2 to i32*
  br label %29

25:                                               ; preds = %29, %8
  %26 = phi float [ 0.000000e+00, %8 ], [ %38, %29 ]
  %27 = phi %class.CFGAS_Break* [ %21, %8 ], [ %54, %29 ]
  tail call void @_ZN11CFGAS_Break16ClearBreakPiecesEv(%class.CFGAS_Break* %27) #12
  %28 = icmp eq i8 %1, 3
  br i1 %28, label %55, label %58

29:                                               ; preds = %22, %29
  %30 = phi float [ 0.000000e+00, %22 ], [ %38, %29 ]
  %31 = phi %class.CFGAS_Break* [ %21, %22 ], [ %54, %29 ]
  %32 = phi i32 [ 0, %22 ], [ %48, %29 ]
  %33 = tail call %class.CFGAS_BreakPiece* @_ZNK11CFGAS_Break21GetBreakPieceUnstableEi(%class.CFGAS_Break* %31, i32 %32) #12
  %34 = getelementptr inbounds %class.CFGAS_BreakPiece, %class.CFGAS_BreakPiece* %33, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = sitofp i32 %35 to float
  %37 = fdiv float %36, 2.000000e+04
  %38 = fadd float %30, %37
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  %39 = getelementptr inbounds %class.CFGAS_BreakPiece, %class.CFGAS_BreakPiece* %33, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sitofp i32 %40 to float
  %42 = fdiv float %41, 2.000000e+04
  store float %42, float* %6, align 4
  %43 = load float, float* %2, align 4
  %44 = fcmp olt float %42, %43
  %45 = select i1 %44, float* %6, float* %2
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  %48 = add nuw nsw i32 %32, 1
  %49 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %15, align 8
  %50 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %49, i64 0, i32 0
  %51 = tail call i32 @_ZNK11CFGAS_Break16CountBreakPiecesEv(%class.CFGAS_Break* %50) #12
  %52 = icmp slt i32 %48, %51
  %53 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %15, align 8
  %54 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %53, i64 0, i32 0
  br i1 %52, label %29, label %25

55:                                               ; preds = %25
  %56 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %15, align 8
  %57 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %56, i64 0, i32 0
  tail call void @_ZN11CFGAS_Break5ResetEv(%class.CFGAS_Break* %57) #12
  br label %64

58:                                               ; preds = %25
  %59 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 1
  %60 = load i8, i8* %59, align 1, !range !8
  %61 = icmp eq i8 %60, 0
  %62 = icmp eq i8 %1, 2
  %63 = and i1 %62, %61
  br i1 %63, label %68, label %64

64:                                               ; preds = %55, %58
  %65 = load float, float* %3, align 4
  %66 = fcmp olt float %65, %26
  %67 = select i1 %66, float %26, float %65
  store float %67, float* %3, align 4
  br label %68

68:                                               ; preds = %58, %64
  %69 = phi float* [ %4, %64 ], [ %3, %58 ]
  %70 = phi float [ %14, %64 ], [ %26, %58 ]
  %71 = load float, float* %69, align 4
  %72 = fadd float %70, %71
  store float %72, float* %69, align 4
  %73 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 16
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  br label %76

76:                                               ; preds = %5, %68
  %77 = phi i1 [ true, %68 ], [ false, %5 ]
  ret i1 %77
}

declare zeroext i8 @_ZN14CFGAS_TxtBreak8EndBreakEN10CFGAS_Char9BreakTypeE(%class.CFGAS_TxtBreak*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN11CFGAS_Break5ResetEv(%class.CFGAS_Break*) local_unnamed_addr #2

declare i32 @_ZNK11CFGAS_Break16CountBreakPiecesEv(%class.CFGAS_Break*) local_unnamed_addr #2

declare %class.CFGAS_BreakPiece* @_ZNK11CFGAS_Break21GetBreakPieceUnstableEi(%class.CFGAS_Break*, i32) local_unnamed_addr #2

declare void @_ZN11CFGAS_Break16ClearBreakPiecesEv(%class.CFGAS_Break*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut13DrawLogicTextEP16CFX_RenderDeviceN5fxcrt18StringViewTemplateIwEERK9CFX_RectF(%class.CFDE_TextOut*, %class.CFX_RenderDevice*, %"class.fxcrt::StringViewTemplate"* nocapture readonly, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_RectF*
  %9 = alloca %class.CFX_RectF, align 4
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.FX_RECT*
  %12 = alloca %"class.pdfium::span.122", align 8
  %13 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %190, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  %20 = load float, float* %19, align 8
  %21 = fcmp olt float %18, %20
  br i1 %21, label %190, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = fcmp olt float %24, %20
  br i1 %25, label %190, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %27, align 8
  tail call void @_ZN14CFGAS_TxtBreak12SetLineWidthEf(%class.CFGAS_TxtBreak* %28, float %18) #12
  %29 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0
  tail call void @_ZNSt3__112__deque_baseIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"* %29) #12
  %30 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.fxcrt::StringDataTemplate.175"*, %"class.fxcrt::StringDataTemplate.175"** %30, align 8
  store %"class.fxcrt::StringDataTemplate.175"* null, %"class.fxcrt::StringDataTemplate.175"** %30, align 8
  %32 = icmp eq %"class.fxcrt::StringDataTemplate.175"* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %26
  tail call void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate.175"* nonnull %31) #12
  br label %34

34:                                               ; preds = %26, %33
  %35 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %37 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %37, i64 16, i1 false)
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %5, %"class.fxcrt::StringViewTemplate"* nonnull %6) #12
  call void @_ZN12CFDE_TextOut8LoadTextERKN5fxcrt10WideStringERK9CFX_RectF(%class.CFDE_TextOut* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5, %class.CFX_RectF* dereferenceable(16) %3)
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  %38 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %39 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %38, align 8
  %40 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = udiv i64 %41, 73
  %43 = urem i64 %41, 73
  %44 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %39, i64 %42
  %45 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %46 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %45, align 8
  %47 = icmp eq %"class.CFDE_TextOut::Line"** %46, %39
  br i1 %47, label %88, label %48

48:                                               ; preds = %34
  %49 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %44, align 8
  %50 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %49, i64 %43
  %51 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, %41
  %54 = udiv i64 %53, 73
  %55 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %39, i64 %54
  %56 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %55, align 8
  %57 = urem i64 %53, 73
  %58 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %56, i64 %57
  %59 = icmp eq %"class.CFDE_TextOut::Line"* %58, %50
  br i1 %59, label %88, label %60

60:                                               ; preds = %48
  %61 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 14
  %62 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 15
  br label %63

63:                                               ; preds = %83, %60
  %64 = phi %"class.CFDE_TextOut::Line"* [ %50, %60 ], [ %86, %83 ]
  %65 = phi i32 [ 0, %60 ], [ %72, %83 ]
  %66 = phi %"class.CFDE_TextOut::Line"** [ %44, %60 ], [ %85, %83 ]
  %67 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %64, i64 0, i32 0
  %68 = load i8, i8* %67, align 8, !range !8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %63
  store i32 %65, i32* %61, align 8
  store i64 0, i64* %62, align 8
  call void @_ZN12CFDE_TextOut15ReloadLinePieceEPNS_4LineERK9CFX_RectF(%class.CFDE_TextOut* %0, %"class.CFDE_TextOut::Line"* %64, %class.CFX_RectF* dereferenceable(16) %3) #12
  br label %71

71:                                               ; preds = %70, %63
  %72 = add nuw nsw i32 %65, 1
  %73 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %64, i64 1
  %74 = ptrtoint %"class.CFDE_TextOut::Line"* %73 to i64
  %75 = bitcast %"class.CFDE_TextOut::Line"** %66 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = icmp eq i64 %77, 4088
  br i1 %78, label %79, label %83

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %66, i64 1
  %81 = bitcast %"class.CFDE_TextOut::Line"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %79, %71
  %84 = phi i64 [ %82, %79 ], [ %74, %71 ]
  %85 = phi %"class.CFDE_TextOut::Line"** [ %80, %79 ], [ %66, %71 ]
  %86 = inttoptr i64 %84 to %"class.CFDE_TextOut::Line"*
  %87 = icmp eq %"class.CFDE_TextOut::Line"* %58, %86
  br i1 %87, label %88, label %63

88:                                               ; preds = %83, %34, %48
  call void @_ZN12CFDE_TextOut11DoAlignmentERK9CFX_RectF(%class.CFDE_TextOut* %0, %class.CFX_RectF* dereferenceable(16) %3)
  %89 = icmp eq %class.CFX_RenderDevice* %1, null
  br i1 %89, label %190, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %190, label %94

94:                                               ; preds = %90
  %95 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #12
  %96 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 12
  %97 = bitcast %class.CFX_RectF* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #12
  %98 = bitcast %class.CFX_RectF* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %98, i8 0, i64 16, i1 false)
  %99 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK9CFX_RectF(%class.CFX_Matrix* %96, %class.CFX_RectF* nonnull dereferenceable(16) %9) #12
  %100 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %101 = extractvalue { <2 x float>, <2 x float> } %99, 0
  store <2 x float> %101, <2 x float>* %100, align 8
  %102 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %103 = extractvalue { <2 x float>, <2 x float> } %99, 1
  store <2 x float> %103, <2 x float>* %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #12
  call void @_ZN16CFX_RenderDevice9SaveStateEv(%class.CFX_RenderDevice* nonnull %1) #12
  %104 = extractelement <2 x float> %103, i32 0
  %105 = fcmp ogt float %104, 0.000000e+00
  %106 = extractelement <2 x float> %103, i32 1
  %107 = fcmp ogt float %106, 0.000000e+00
  %108 = and i1 %105, %107
  br i1 %108, label %109, label %117

109:                                              ; preds = %94
  %110 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #12
  %111 = call { i64, i64 } @_ZNK9CFX_RectF12GetOuterRectEv(%class.CFX_RectF* nonnull %8) #12
  %112 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %113 = extractvalue { i64, i64 } %111, 0
  store i64 %113, i64* %112, align 8
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %115 = extractvalue { i64, i64 } %111, 1
  store i64 %115, i64* %114, align 8
  %116 = call zeroext i1 @_ZN16CFX_RenderDevice12SetClip_RectERK7FX_RECT(%class.CFX_RenderDevice* nonnull %1, %struct.FX_RECT* nonnull dereferenceable(16) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #12
  br label %117

117:                                              ; preds = %109, %94
  %118 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %38, align 8
  %119 = load i64, i64* %40, align 8
  %120 = udiv i64 %119, 73
  %121 = urem i64 %119, 73
  %122 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %118, i64 %120
  %123 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %45, align 8
  %124 = icmp eq %"class.CFDE_TextOut::Line"** %123, %118
  br i1 %124, label %152, label %125

125:                                              ; preds = %117
  %126 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, align 8
  %127 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %126, i64 %121
  %128 = load i64, i64* %91, align 8
  %129 = add i64 %128, %119
  %130 = udiv i64 %129, 73
  %131 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %118, i64 %130
  %132 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %131, align 8
  %133 = urem i64 %129, 73
  %134 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %132, i64 %133
  %135 = icmp eq %"class.CFDE_TextOut::Line"* %134, %127
  br i1 %135, label %152, label %136

136:                                              ; preds = %125
  %137 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 9
  %138 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 1
  %139 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 17, i32 0, i32 0
  %140 = bitcast %class.TextCharPos** %139 to i64*
  %141 = bitcast %"class.pdfium::span.122"* %12 to i64*
  %142 = getelementptr inbounds %"class.pdfium::span.122", %"class.pdfium::span.122"* %12, i64 0, i32 1
  br label %143

143:                                              ; preds = %136, %164
  %144 = phi %"class.CFDE_TextOut::Line"* [ %127, %136 ], [ %167, %164 ]
  %145 = phi %"class.CFDE_TextOut::Line"** [ %122, %136 ], [ %166, %164 ]
  %146 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %144, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %153, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %144, i64 0, i32 1, i32 0, i32 1
  %151 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %144, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %169

152:                                              ; preds = %164, %117, %125
  call void @_ZN16CFX_RenderDevice12RestoreStateEb(%class.CFX_RenderDevice* nonnull %1, i1 zeroext false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #12
  br label %190

153:                                              ; preds = %186, %143
  %154 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %144, i64 1
  %155 = ptrtoint %"class.CFDE_TextOut::Line"* %154 to i64
  %156 = bitcast %"class.CFDE_TextOut::Line"** %145 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %155, %157
  %159 = icmp eq i64 %158, 4088
  br i1 %159, label %160, label %164

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %145, i64 1
  %162 = bitcast %"class.CFDE_TextOut::Line"** %161 to i64*
  %163 = load i64, i64* %162, align 8
  br label %164

164:                                              ; preds = %153, %160
  %165 = phi i64 [ %163, %160 ], [ %155, %153 ]
  %166 = phi %"class.CFDE_TextOut::Line"** [ %161, %160 ], [ %145, %153 ]
  %167 = inttoptr i64 %165 to %"class.CFDE_TextOut::Line"*
  %168 = icmp eq %"class.CFDE_TextOut::Line"* %134, %167
  br i1 %168, label %152, label %143

169:                                              ; preds = %149, %186
  %170 = phi i64 [ 0, %149 ], [ %187, %186 ]
  %171 = load i64, i64* %150, align 8
  %172 = add i64 %171, %170
  %173 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %151, align 8
  %174 = udiv i64 %172, 102
  %175 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %173, i64 %174
  %176 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %175, align 8
  %177 = urem i64 %172, 102
  %178 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %176, i64 %177
  %179 = call i64 @_ZN12CFDE_TextOut13GetDisplayPosEPKNS_5PieceE(%class.CFDE_TextOut* %0, %"struct.CFDE_TextOut::Piece"* %178)
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %169
  %182 = load i32, i32* %137, align 8
  %183 = load i64, i64* %140, align 8
  store i64 %183, i64* %141, align 8
  store i64 %179, i64* %142, align 8
  %184 = load float, float* %19, align 8
  %185 = call zeroext i1 @_ZN12CFDE_TextOut10DrawStringEP16CFX_RenderDevicejRKN5fxcrt9RetainPtrI12CFGAS_GEFontEEN6pdfium4spanI11TextCharPosEEfRK10CFX_Matrix(%class.CFX_RenderDevice* nonnull %1, i32 %182, %"class.fxcrt::RetainPtr.5"* dereferenceable(8) %138, %"class.pdfium::span.122"* nonnull %12, float %184, %class.CFX_Matrix* dereferenceable(24) %96)
  br label %186

186:                                              ; preds = %169, %181
  %187 = add nuw i64 %170, 1
  %188 = load i64, i64* %146, align 8
  %189 = icmp ult i64 %187, %188
  br i1 %189, label %169, label %153

190:                                              ; preds = %152, %88, %90, %16, %22, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut8LoadTextERKN5fxcrt10WideStringERK9CFX_RectF(%class.CFDE_TextOut*, %"class.fxcrt::WideString"* dereferenceable(8), %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 11
  %8 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %7, %"class.fxcrt::WideString"* dereferenceable(8) %1) #12
  %9 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 8
  %10 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 8, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.164"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.fxcrt::StringDataTemplate.175"*, %"class.fxcrt::StringDataTemplate.175"** %17, align 8
  %19 = icmp eq %"class.fxcrt::StringDataTemplate.175"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.175", %"class.fxcrt::StringDataTemplate.175"* %18, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, %16
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #12
  store i32 0, i32* %4, align 4
  %26 = sub i64 %22, %16
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi(%"class.std::__1::vector.164"* %9, i64 %26, i32* nonnull dereferenceable(4) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #12
  br label %27

27:                                               ; preds = %3, %24, %20
  %28 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 3
  %29 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  %30 = load float, float* %28, align 4
  %31 = load float, float* %29, align 4
  %32 = fcmp olt float %30, %31
  %33 = select i1 %32, float %31, float %30
  %34 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %37 = load float, float* %36, align 4
  %38 = fadd float %35, %37
  %39 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 4
  store float %35, float* %39, align 8
  %40 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  store i64 0, i64* %5, align 8
  %41 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #12
  store i32 0, i32* %6, align 4
  %42 = load %"class.fxcrt::StringDataTemplate.175"*, %"class.fxcrt::StringDataTemplate.175"** %17, align 8
  %43 = icmp eq %"class.fxcrt::StringDataTemplate.175"* %42, null
  %44 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.175", %"class.fxcrt::StringDataTemplate.175"* %42, i64 0, i32 3, i64 0
  %45 = select i1 %43, i32* null, i32* %44
  br i1 %43, label %50, label %46

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.175", %"class.fxcrt::StringDataTemplate.175"* %42, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.175", %"class.fxcrt::StringDataTemplate.175"* %42, i64 0, i32 3, i64 %48
  br label %50

50:                                               ; preds = %27, %46
  %51 = phi i32* [ %49, %46 ], [ null, %27 ]
  %52 = icmp eq i32* %45, %51
  br i1 %52, label %98, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 1
  %56 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 14
  br label %57

57:                                               ; preds = %53, %95
  %58 = phi i32* [ %45, %53 ], [ %96, %95 ]
  %59 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %54, align 8
  %60 = load i32, i32* %58, align 4
  %61 = call zeroext i8 @_ZN14CFGAS_TxtBreak10AppendCharEw(%class.CFGAS_TxtBreak* %59, i32 signext %60) #12
  %62 = icmp ult i8 %61, 2
  br i1 %62, label %95, label %63

63:                                               ; preds = %57
  %64 = call zeroext i1 @_ZN12CFDE_TextOut14RetrievePiecesEN10CFGAS_Char9BreakTypeEbRK9CFX_RectFPmPi(%class.CFDE_TextOut* %0, i8 zeroext %61, i1 zeroext false, %class.CFX_RectF* dereferenceable(16) %2, i64* nonnull %5, i32* nonnull %6)
  br i1 %64, label %65, label %76

65:                                               ; preds = %63
  %66 = load i8, i8* %55, align 1, !range !8
  %67 = icmp ne i8 %66, 0
  %68 = add i8 %61, -3
  %69 = icmp ult i8 %68, 2
  %70 = or i1 %69, %67
  br i1 %70, label %71, label %76

71:                                               ; preds = %65
  store i32 0, i32* %6, align 4
  %72 = load i32, i32* %56, align 8
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %56, align 8
  %74 = load float, float* %39, align 8
  %75 = fadd float %33, %74
  store float %75, float* %39, align 8
  br label %76

76:                                               ; preds = %65, %71, %63
  %77 = load float, float* %39, align 8
  %78 = fadd float %33, %77
  %79 = fcmp ogt float %78, %38
  br i1 %79, label %80, label %95

80:                                               ; preds = %76
  %81 = load i32, i32* %56, align 8
  %82 = zext i1 %64 to i32
  %83 = sub i32 %81, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %84
  %88 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %89 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %88, align 8
  %90 = udiv i64 %87, 73
  %91 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 %90
  %92 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, align 8
  %93 = urem i64 %87, 73
  %94 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %92, i64 %93, i32 0
  store i8 1, i8* %94, align 8
  br label %98

95:                                               ; preds = %76, %57
  %96 = getelementptr inbounds i32, i32* %58, i64 1
  %97 = icmp eq i32* %96, %51
  br i1 %97, label %98, label %57

98:                                               ; preds = %95, %50, %80
  %99 = phi i1 [ false, %80 ], [ true, %50 ], [ true, %95 ]
  %100 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %100, align 8
  %102 = call zeroext i8 @_ZN14CFGAS_TxtBreak8EndBreakEN10CFGAS_Char9BreakTypeE(%class.CFGAS_TxtBreak* %101, i8 zeroext 3) #12
  %103 = icmp ugt i8 %102, 1
  %104 = and i1 %99, %103
  br i1 %104, label %105, label %107

105:                                              ; preds = %98
  %106 = call zeroext i1 @_ZN12CFDE_TextOut14RetrievePiecesEN10CFGAS_Char9BreakTypeEbRK9CFX_RectFPmPi(%class.CFDE_TextOut* %0, i8 zeroext %102, i1 zeroext false, %class.CFX_RectF* dereferenceable(16) %2, i64* nonnull %5, i32* nonnull %6)
  br label %107

107:                                              ; preds = %98, %105
  %108 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %100, align 8
  %109 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %108, i64 0, i32 0
  call void @_ZN11CFGAS_Break16ClearBreakPiecesEv(%class.CFGAS_Break* %109) #12
  %110 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %100, align 8
  %111 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %110, i64 0, i32 0
  call void @_ZN11CFGAS_Break5ResetEv(%class.CFGAS_Break* %111) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  ret void
}

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut6ReloadERK9CFX_RectF(%class.CFDE_TextOut*, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %4 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %5 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = udiv i64 %6, 73
  %8 = urem i64 %6, 73
  %9 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %4, i64 %7
  %10 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %11 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %10, align 8
  %12 = icmp eq %"class.CFDE_TextOut::Line"** %11, %4
  br i1 %12, label %28, label %13

13:                                               ; preds = %2
  %14 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %9, align 8
  %15 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %14, i64 %8
  %16 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %6
  %19 = udiv i64 %18, 73
  %20 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %4, i64 %19
  %21 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %20, align 8
  %22 = urem i64 %18, 73
  %23 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %21, i64 %22
  %24 = icmp eq %"class.CFDE_TextOut::Line"* %23, %15
  br i1 %24, label %28, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 14
  %27 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 15
  br label %29

28:                                               ; preds = %49, %2, %13
  ret void

29:                                               ; preds = %25, %49
  %30 = phi %"class.CFDE_TextOut::Line"* [ %15, %25 ], [ %52, %49 ]
  %31 = phi i32 [ 0, %25 ], [ %38, %49 ]
  %32 = phi %"class.CFDE_TextOut::Line"** [ %9, %25 ], [ %51, %49 ]
  %33 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %30, i64 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  store i32 %31, i32* %26, align 8
  store i64 0, i64* %27, align 8
  tail call void @_ZN12CFDE_TextOut15ReloadLinePieceEPNS_4LineERK9CFX_RectF(%class.CFDE_TextOut* %0, %"class.CFDE_TextOut::Line"* %30, %class.CFX_RectF* dereferenceable(16) %1)
  br label %37

37:                                               ; preds = %29, %36
  %38 = add nuw nsw i32 %31, 1
  %39 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %30, i64 1
  %40 = ptrtoint %"class.CFDE_TextOut::Line"* %39 to i64
  %41 = bitcast %"class.CFDE_TextOut::Line"** %32 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = icmp eq i64 %43, 4088
  br i1 %44, label %45, label %49

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %32, i64 1
  %47 = bitcast %"class.CFDE_TextOut::Line"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  br label %49

49:                                               ; preds = %37, %45
  %50 = phi i64 [ %48, %45 ], [ %40, %37 ]
  %51 = phi %"class.CFDE_TextOut::Line"** [ %46, %45 ], [ %32, %37 ]
  %52 = inttoptr i64 %50 to %"class.CFDE_TextOut::Line"*
  %53 = icmp eq %"class.CFDE_TextOut::Line"* %23, %52
  br i1 %53, label %28, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut11DoAlignmentERK9CFX_RectF(%class.CFDE_TextOut* nocapture readonly, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %111, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %4
  %10 = add i64 %9, -1
  %11 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %12 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %11, align 8
  %13 = udiv i64 %10, 73
  %14 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %12, i64 %13
  %15 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %14, align 8
  %16 = urem i64 %10, 73
  %17 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %15, i64 %16, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %21, !prof !12

20:                                               ; preds = %6
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !13
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !14
  unreachable

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %15, i64 %16, i32 1, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %15, i64 %16, i32 1, i32 0, i32 0, i32 1
  %25 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %24, align 8
  %26 = udiv i64 %23, 102
  %27 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %25, i64 %26
  %28 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %27, align 8
  %29 = urem i64 %23, 102
  %30 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %28, i64 %29
  %31 = icmp eq %"struct.CFDE_TextOut::Piece"* %30, null
  br i1 %31, label %111, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %1, i64 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %1, i64 0, i32 3
  %36 = load float, float* %35, align 4
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %28, i64 %29, i32 3, i32 1
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %28, i64 %29, i32 3, i32 3
  %41 = load float, float* %40, align 4
  %42 = fadd float %39, %41
  %43 = fsub float %37, %42
  %44 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 6
  %45 = load i8, i8* %44, align 8
  %46 = add i8 %45, -1
  %47 = icmp ult i8 %46, 3
  br i1 %47, label %48, label %50

48:                                               ; preds = %32
  %49 = fmul float %43, 5.000000e-01
  br label %52

50:                                               ; preds = %32
  %51 = icmp eq i8 %45, 0
  br i1 %51, label %111, label %52

52:                                               ; preds = %50, %48
  %53 = phi float [ %49, %48 ], [ %43, %50 ]
  %54 = fcmp olt float %53, 1.000000e+00
  br i1 %54, label %111, label %55

55:                                               ; preds = %52
  %56 = udiv i64 %8, 73
  %57 = urem i64 %8, 73
  %58 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %12, i64 %56
  %59 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %60 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %59, align 8
  %61 = icmp eq %"class.CFDE_TextOut::Line"** %60, %12
  br i1 %61, label %111, label %62

62:                                               ; preds = %55
  %63 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %58, align 8
  %64 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %63, i64 %57
  %65 = udiv i64 %9, 73
  %66 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %12, i64 %65
  %67 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %66, align 8
  %68 = urem i64 %9, 73
  %69 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %67, i64 %68
  %70 = icmp eq %"class.CFDE_TextOut::Line"* %69, %64
  br i1 %70, label %111, label %71

71:                                               ; preds = %62, %91
  %72 = phi %"class.CFDE_TextOut::Line"* [ %94, %91 ], [ %64, %62 ]
  %73 = phi %"class.CFDE_TextOut::Line"** [ %93, %91 ], [ %58, %62 ]
  %74 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %72, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %72, i64 0, i32 1, i32 0, i32 1
  %79 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %72, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %96

80:                                               ; preds = %96, %71
  %81 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %72, i64 1
  %82 = ptrtoint %"class.CFDE_TextOut::Line"* %81 to i64
  %83 = bitcast %"class.CFDE_TextOut::Line"** %73 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %82, %84
  %86 = icmp eq i64 %85, 4088
  br i1 %86, label %87, label %91

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %73, i64 1
  %89 = bitcast %"class.CFDE_TextOut::Line"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  br label %91

91:                                               ; preds = %80, %87
  %92 = phi i64 [ %90, %87 ], [ %82, %80 ]
  %93 = phi %"class.CFDE_TextOut::Line"** [ %88, %87 ], [ %73, %80 ]
  %94 = inttoptr i64 %92 to %"class.CFDE_TextOut::Line"*
  %95 = icmp eq %"class.CFDE_TextOut::Line"* %69, %94
  br i1 %95, label %111, label %71

96:                                               ; preds = %77, %96
  %97 = phi i64 [ 0, %77 ], [ %108, %96 ]
  %98 = load i64, i64* %78, align 8
  %99 = add i64 %98, %97
  %100 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %79, align 8
  %101 = udiv i64 %99, 102
  %102 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %100, i64 %101
  %103 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %102, align 8
  %104 = urem i64 %99, 102
  %105 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %103, i64 %104, i32 3, i32 1
  %106 = load float, float* %105, align 4
  %107 = fadd float %53, %106
  store float %107, float* %105, align 4
  %108 = add nuw i64 %97, 1
  %109 = load i64, i64* %74, align 8
  %110 = icmp ult i64 %108, %109
  br i1 %110, label %96, label %80

111:                                              ; preds = %91, %55, %62, %50, %21, %52, %2
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK9CFX_RectF(%class.CFX_Matrix*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN16CFX_RenderDevice9SaveStateEv(%class.CFX_RenderDevice*) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice12SetClip_RectERK7FX_RECT(%class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK9CFX_RectF12GetOuterRectEv(%class.CFX_RectF*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK12CFDE_TextOut4Line7GetSizeEv(%"class.CFDE_TextOut::Line"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.CFDE_TextOut::Piece"* @_ZN12CFDE_TextOut4Line15GetPieceAtIndexEm(%"class.CFDE_TextOut::Line"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %7, label %6, !prof !15

6:                                                ; preds = %2
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !13
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !14
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %1
  %11 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %11, align 8
  %13 = udiv i64 %10, 102
  %14 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %12, i64 %13
  %15 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %14, align 8
  %16 = urem i64 %10, 102
  %17 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %15, i64 %16
  ret %"struct.CFDE_TextOut::Piece"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN12CFDE_TextOut13GetDisplayPosEPKNS_5PieceE(%class.CFDE_TextOut*, %"struct.CFDE_TextOut::Piece"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %class.TextCharPos, align 4
  %7 = alloca %"struct.CFGAS_TxtBreak::Run", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 17
  %10 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 17, i32 0, i32 1
  %11 = bitcast %class.TextCharPos** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.200"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 44
  %17 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %42

20:                                               ; preds = %2
  %21 = bitcast %class.TextCharPos* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %21) #12
  call void @_ZN11TextCharPosC1Ev(%class.TextCharPos* nonnull %6) #12
  %22 = load i64, i64* %11, align 8
  %23 = load i64, i64* %13, align 8
  %24 = sub i64 %22, %23
  %25 = sdiv exact i64 %24, 44
  %26 = icmp ugt i64 %18, %25
  %27 = inttoptr i64 %23 to %class.TextCharPos*
  %28 = inttoptr i64 %22 to %class.TextCharPos*
  br i1 %26, label %29, label %31

29:                                               ; preds = %20
  %30 = sub i64 %18, %25
  call void @_ZNSt3__16vectorI11TextCharPosNS_9allocatorIS1_EEE8__appendEmRKS1_(%"class.std::__1::vector.200"* %9, i64 %30, %class.TextCharPos* nonnull dereferenceable(44) %6) #12
  br label %41

31:                                               ; preds = %20
  %32 = icmp ult i64 %18, %25
  br i1 %32, label %33, label %41

33:                                               ; preds = %31
  %34 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %27, i64 %18
  %35 = icmp eq %class.TextCharPos* %34, %28
  br i1 %35, label %40, label %36

36:                                               ; preds = %33, %36
  %37 = phi %class.TextCharPos* [ %38, %36 ], [ %28, %33 ]
  %38 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %37, i64 -1
  call void @_ZN11TextCharPosD1Ev(%class.TextCharPos* %38) #12
  %39 = icmp eq %class.TextCharPos* %38, %34
  br i1 %39, label %40, label %36

40:                                               ; preds = %36, %33
  store %class.TextCharPos* %34, %class.TextCharPos** %10, align 8
  br label %41

41:                                               ; preds = %29, %31, %40
  call void @_ZN11TextCharPosD1Ev(%class.TextCharPos* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %21) #12
  br label %42

42:                                               ; preds = %41, %2
  %43 = bitcast %"struct.CFGAS_TxtBreak::Run"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %43) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 bitcast (%"struct.CFGAS_TxtBreak::Run"* @__const._ZN12CFDE_TextOut13GetDisplayPosEPKNS_5PieceE.tr to i8*), i64 80, i1 false)
  call void @_ZN14CFGAS_TxtBreak3RunC1Ev(%"struct.CFGAS_TxtBreak::Run"* nonnull %7) #12
  %44 = bitcast %"class.fxcrt::WideString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  %45 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %1, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48)
  %49 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49)
  %50 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50)
  store i32 %47, i32* %3, align 4, !noalias !16
  %51 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.fxcrt::StringDataTemplate.175"*, %"class.fxcrt::StringDataTemplate.175"** %51, align 8, !noalias !19
  %53 = icmp eq %"class.fxcrt::StringDataTemplate.175"* %52, null
  %54 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.175", %"class.fxcrt::StringDataTemplate.175"* %52, i64 0, i32 3
  %55 = select i1 %53, [1 x i32]* @.str, [1 x i32]* %54
  %56 = getelementptr inbounds [1 x i32], [1 x i32]* %55, i64 0, i64 0
  br i1 %53, label %60, label %57

57:                                               ; preds = %42
  %58 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.175", %"class.fxcrt::StringDataTemplate.175"* %52, i64 0, i32 1
  %59 = load i64, i64* %58, align 8, !noalias !22
  br label %60

60:                                               ; preds = %42, %57
  %61 = phi i64 [ %59, %57 ], [ 0, %42 ]
  %62 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %56, i32** %62, align 8, !alias.scope !22, !noalias !16
  %63 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 %61, i64* %63, align 8, !alias.scope !22, !noalias !16
  %64 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %3, i32** %64, align 8, !noalias !16
  %65 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 1, i64* %65, align 8, !noalias !16
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"* nonnull %8, %"class.fxcrt::StringViewTemplate"* nonnull %4, %"class.fxcrt::StringViewTemplate"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50)
  %66 = getelementptr inbounds %"struct.CFGAS_TxtBreak::Run", %"struct.CFGAS_TxtBreak::Run"* %7, i64 0, i32 1
  %67 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %66, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %8) #12
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  %68 = load i64, i64* %45, align 8
  %69 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 8, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %68
  %72 = getelementptr inbounds %"struct.CFGAS_TxtBreak::Run", %"struct.CFGAS_TxtBreak::Run"* %7, i64 0, i32 2
  store i32* %71, i32** %72, align 8
  %73 = load i64, i64* %17, align 8
  %74 = trunc i64 %73 to i32
  %75 = getelementptr inbounds %"struct.CFGAS_TxtBreak::Run", %"struct.CFGAS_TxtBreak::Run"* %7, i64 0, i32 4
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.CFGAS_TxtBreak::Run", %"struct.CFGAS_TxtBreak::Run"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %77 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %76, align 8
  %78 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %78, align 8
  %80 = icmp eq %class.CFGAS_GEFont* %77, %79
  br i1 %80, label %102, label %81

81:                                               ; preds = %60
  %82 = icmp eq %class.CFGAS_GEFont* %79, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %79, i64 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = add nsw i64 %85, 1
  store i64 %86, i64* %84, align 8
  %87 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %76, align 8
  br label %88

88:                                               ; preds = %83, %81
  %89 = phi %class.CFGAS_GEFont* [ %87, %83 ], [ %77, %81 ]
  store %class.CFGAS_GEFont* %79, %class.CFGAS_GEFont** %76, align 8
  %90 = icmp eq %class.CFGAS_GEFont* %89, null
  br i1 %90, label %102, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %89, i64 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %93, -1
  store i64 %94, i64* %92, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %91
  %97 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %89, i64 0, i32 0
  %98 = bitcast %class.CFGAS_GEFont* %89 to void (%"class.fxcrt::Retainable"*)***
  %99 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %99, i64 1
  %101 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %100, align 8
  call void %101(%"class.fxcrt::Retainable"* nonnull %97) #12
  br label %102

102:                                              ; preds = %60, %88, %91, %96
  %103 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %"struct.CFGAS_TxtBreak::Run", %"struct.CFGAS_TxtBreak::Run"* %7, i64 0, i32 6
  %107 = bitcast float* %106 to i32*
  store i32 %105, i32* %107, align 8
  %108 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 10
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"struct.CFGAS_TxtBreak::Run", %"struct.CFGAS_TxtBreak::Run"* %7, i64 0, i32 7
  store i32 %109, i32* %110, align 4
  %111 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %1, i64 0, i32 2
  %112 = load i32, i32* %111, align 8
  %113 = getelementptr inbounds %"struct.CFGAS_TxtBreak::Run", %"struct.CFGAS_TxtBreak::Run"* %7, i64 0, i32 10
  store i32 %112, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %1, i64 0, i32 3
  %115 = getelementptr inbounds %"struct.CFGAS_TxtBreak::Run", %"struct.CFGAS_TxtBreak::Run"* %7, i64 0, i32 12
  store %class.CFX_RectF* %114, %class.CFX_RectF** %115, align 8
  %116 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %9, i64 0, i32 0, i32 0
  %119 = load %class.TextCharPos*, %class.TextCharPos** %118, align 8
  %120 = call i64 @_ZNK14CFGAS_TxtBreak13GetDisplayPosERKNS_3RunEP11TextCharPos(%class.CFGAS_TxtBreak* %117, %"struct.CFGAS_TxtBreak::Run"* nonnull dereferenceable(80) %7, %class.TextCharPos* %119) #12
  call void @_ZN14CFGAS_TxtBreak3RunD1Ev(%"struct.CFGAS_TxtBreak::Run"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %43) #12
  ret i64 %120
}

declare void @_ZN16CFX_RenderDevice12RestoreStateEb(%class.CFX_RenderDevice*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12CFDE_TextOut14RetrievePiecesEN10CFGAS_Char9BreakTypeEbRK9CFX_RectFPmPi(%class.CFDE_TextOut*, i8 zeroext, i1 zeroext, %class.CFX_RectF* nocapture readonly dereferenceable(16), i64* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.CFDE_TextOut::Piece", align 8
  %8 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 2
  %10 = load float, float* %8, align 4
  %11 = load float, float* %9, align 4
  %12 = fcmp olt float %10, %11
  %13 = select i1 %12, float %11, float %10
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = fmul float %15, 2.000000e+04
  %17 = tail call i32 @FXSYS_roundf(float %16) #12
  %18 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %18, align 8
  %20 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %19, i64 0, i32 0
  %21 = tail call i32 @_ZNK11CFGAS_Break16CountBreakPiecesEv(%class.CFGAS_Break* %20) #12
  %22 = icmp sgt i32 %21, 0
  %23 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %18, align 8
  %24 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %23, i64 0, i32 0
  br i1 %22, label %25, label %47

25:                                               ; preds = %6
  %26 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 0
  %27 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 1
  %28 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 8, i32 0, i32 0
  %29 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 14
  %30 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 1
  %31 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %32 = bitcast %"struct.CFDE_TextOut::Piece"* %7 to i8*
  %33 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %7, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %7, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %7, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %7, i64 0, i32 3, i32 0
  %37 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %7, i64 0, i32 3, i32 1
  %38 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %7, i64 0, i32 3, i32 2
  %39 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %7, i64 0, i32 3, i32 3
  %40 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %7, i64 0, i32 4, i64 0
  %41 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 0
  %42 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 4
  %43 = bitcast float* %42 to i32*
  %44 = bitcast float* %37 to i32*
  %45 = add nsw i32 %21, -1
  %46 = bitcast i8* %40 to i32*
  br label %53

47:                                               ; preds = %135, %6
  %48 = phi i8 [ 0, %6 ], [ %94, %135 ]
  %49 = phi %class.CFGAS_Break* [ %24, %6 ], [ %143, %135 ]
  tail call void @_ZN11CFGAS_Break16ClearBreakPiecesEv(%class.CFGAS_Break* %49) #12
  %50 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 0
  %51 = load i8, i8* %50, align 1, !range !8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %145, label %153

53:                                               ; preds = %135, %25
  %54 = phi %class.CFGAS_Break* [ %24, %25 ], [ %143, %135 ]
  %55 = phi i32 [ 0, %25 ], [ %141, %135 ]
  %56 = phi i8 [ 0, %25 ], [ %94, %135 ]
  %57 = tail call %class.CFGAS_BreakPiece* @_ZNK11CFGAS_Break21GetBreakPieceUnstableEi(%class.CFGAS_Break* %54, i32 %55) #12
  %58 = getelementptr inbounds %class.CFGAS_BreakPiece, %class.CFGAS_BreakPiece* %57, i64 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %91

61:                                               ; preds = %53
  %62 = load i64, i64* %4, align 8
  %63 = shl i64 %62, 32
  %64 = ashr exact i64 %63, 32
  br label %65

65:                                               ; preds = %84, %61
  %66 = phi i64 [ %64, %61 ], [ %86, %84 ]
  %67 = phi i32 [ 0, %61 ], [ %89, %84 ]
  %68 = phi i32 [ 0, %61 ], [ %85, %84 ]
  %69 = tail call %class.CFGAS_Char* @_ZNK16CFGAS_BreakPiece7GetCharEi(%class.CFGAS_BreakPiece* %57, i32 %67) #12
  %70 = getelementptr inbounds %class.CFGAS_Char, %class.CFGAS_Char* %69, i64 0, i32 5
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, 0
  %73 = select i1 %72, i32 %71, i32 0
  %74 = load i8, i8* %26, align 1, !range !8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %65
  %77 = load i8, i8* %27, align 1, !range !8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %76, %65
  %80 = load i32, i32* %5, align 4
  %81 = sub i32 %17, %68
  %82 = sub i32 %81, %80
  %83 = icmp slt i32 %82, %73
  br i1 %83, label %91, label %84

84:                                               ; preds = %79, %76
  %85 = add nuw nsw i32 %73, %68
  %86 = add nsw i64 %66, 1
  %87 = load i32*, i32** %28, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 %66
  store i32 %73, i32* %88, align 4
  %89 = add nuw nsw i32 %67, 1
  %90 = icmp eq i32 %89, %59
  br i1 %90, label %91, label %65

91:                                               ; preds = %79, %84, %53
  %92 = phi i32 [ 0, %53 ], [ %68, %79 ], [ %85, %84 ]
  %93 = phi i32 [ 0, %53 ], [ %67, %79 ], [ %59, %84 ]
  %94 = phi i8 [ %56, %53 ], [ 1, %79 ], [ %56, %84 ]
  %95 = icmp eq i32 %93, 0
  %96 = xor i1 %95, true
  %97 = or i1 %96, %2
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = load i32, i32* %29, align 8
  %100 = sext i32 %99 to i64
  %101 = load i64, i64* %30, align 8
  %102 = add i64 %101, %100
  %103 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %31, align 8
  %104 = udiv i64 %102, 73
  %105 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %103, i64 %104
  %106 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %105, align 8
  %107 = urem i64 %102, 73
  %108 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %106, i64 %107, i32 0
  store i8 1, i8* %108, align 8
  br label %135

109:                                              ; preds = %91
  br i1 %95, label %135, label %110

110:                                              ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #12
  store i32 -1431655766, i32* %46, align 4
  %111 = load i64, i64* %4, align 8
  store i64 %111, i64* %33, align 8
  %112 = zext i32 %93 to i64
  store i64 %112, i64* %34, align 8
  %113 = getelementptr inbounds %class.CFGAS_BreakPiece, %class.CFGAS_BreakPiece* %57, i64 0, i32 11
  %114 = load i32, i32* %113, align 4
  store i32 %114, i32* %35, align 8
  %115 = load float, float* %41, align 4
  %116 = getelementptr inbounds %class.CFGAS_BreakPiece, %class.CFGAS_BreakPiece* %57, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = sitofp i32 %117 to float
  %119 = fdiv float %118, 2.000000e+04
  %120 = fadd float %115, %119
  %121 = load i32, i32* %43, align 8
  %122 = sitofp i32 %92 to float
  %123 = fdiv float %122, 2.000000e+04
  store float %120, float* %36, align 4
  store i32 %121, i32* %44, align 4
  store float %123, float* %38, align 4
  store float %13, float* %39, align 4
  %124 = getelementptr inbounds %class.CFGAS_BreakPiece, %class.CFGAS_BreakPiece* %57, i64 0, i32 5
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %110
  %129 = or i32 %114, 64
  store i32 %129, i32* %35, align 8
  br label %130

130:                                              ; preds = %110, %128
  %131 = and i8 %94, 1
  %132 = icmp ne i8 %131, 0
  %133 = icmp eq i32 %55, %45
  %134 = and i1 %133, %2
  call void @_ZN12CFDE_TextOut11AppendPieceERKNS_5PieceEbb(%class.CFDE_TextOut* %0, %"struct.CFDE_TextOut::Piece"* nonnull dereferenceable(40) %7, i1 zeroext %132, i1 zeroext %134)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #12
  br label %135

135:                                              ; preds = %109, %130, %98
  %136 = sext i32 %59 to i64
  %137 = load i64, i64* %4, align 8
  %138 = add i64 %137, %136
  store i64 %138, i64* %4, align 8
  %139 = load i32, i32* %5, align 4
  %140 = add nsw i32 %139, %92
  store i32 %140, i32* %5, align 4
  %141 = add nuw nsw i32 %55, 1
  %142 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %18, align 8
  %143 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %142, i64 0, i32 0
  %144 = icmp eq i32 %141, %21
  br i1 %144, label %47, label %53

145:                                              ; preds = %47
  %146 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 7, i32 1
  %147 = load i8, i8* %146, align 1, !range !8
  %148 = and i8 %48, 1
  %149 = or i8 %147, %148
  %150 = icmp ne i8 %149, 0
  %151 = icmp eq i8 %1, 3
  %152 = or i1 %151, %150
  ret i1 %152

153:                                              ; preds = %47
  ret i1 true
}

declare i32 @FXSYS_roundf(float) local_unnamed_addr #2

declare %class.CFGAS_Char* @_ZNK16CFGAS_BreakPiece7GetCharEi(%class.CFGAS_BreakPiece*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut11AppendPieceERKNS_5PieceEbb(%class.CFDE_TextOut*, %"struct.CFDE_TextOut::Piece"* nocapture readonly dereferenceable(40), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.CFDE_TextOut::Line", align 8
  %6 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 14
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13
  %9 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, 2147483648
  br i1 %11, label %13, label %12, !prof !15

12:                                               ; preds = %4
  tail call void @llvm.trap() #12
  unreachable

13:                                               ; preds = %4
  %14 = trunc i64 %10 to i32
  %15 = icmp slt i32 %7, %14
  br i1 %15, label %48, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #12
  %18 = bitcast %"class.CFDE_TextOut::Line"* %5 to i64*
  store i64 -6148914691236517206, i64* %18, align 8
  %19 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %5, i64 0, i32 1
  %20 = bitcast %"class.std::__1::deque.179"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 48, i1 false) #12
  %21 = zext i1 %2 to i8
  store i8 %21, i8* %17, align 8
  %22 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 15
  %23 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %5, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  call void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque.179"* %19) #12
  %27 = load i64, i64* %23, align 8
  %28 = load i64, i64* %24, align 8
  %29 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %25, align 8
  %30 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %26, align 8
  %31 = add i64 %28, %27
  %32 = icmp eq %"struct.CFDE_TextOut::Piece"** %30, %29
  br i1 %32, label %40, label %33

33:                                               ; preds = %16
  %34 = udiv i64 %31, 102
  %35 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %29, i64 %34
  %36 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %35, align 8
  %37 = urem i64 %31, 102
  %38 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %36, i64 %37
  %39 = bitcast %"struct.CFDE_TextOut::Piece"* %38 to i8*
  br label %40

40:                                               ; preds = %16, %33
  %41 = phi i8* [ %39, %33 ], [ null, %16 ]
  %42 = bitcast %"struct.CFDE_TextOut::Piece"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 36, i1 false) #12
  %43 = load i64, i64* %23, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %23, align 8
  store i64 %44, i64* %22, align 8
  call void @_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::deque"* %8, %"class.CFDE_TextOut::Line"* nonnull dereferenceable(56) %5)
  %45 = load i64, i64* %9, align 8
  %46 = icmp ult i64 %45, 2147483648
  br i1 %46, label %184, label %47, !prof !15

47:                                               ; preds = %40
  call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %13
  %49 = sext i32 %7 to i64
  %50 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, %49
  %53 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %54 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %53, align 8
  %55 = udiv i64 %52, 73
  %56 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %54, i64 %55
  %57 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %56, align 8
  %58 = urem i64 %52, 73
  %59 = zext i1 %2 to i8
  %60 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 0
  store i8 %59, i8* %60, align 8
  %61 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 15
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1
  %64 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 2, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp ugt i64 %65, %62
  br i1 %66, label %109, label %67

67:                                               ; preds = %48
  %68 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 0, i32 2
  %69 = bitcast %"struct.CFDE_TextOut::Piece"*** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 0, i32 1
  %72 = bitcast %"struct.CFDE_TextOut::Piece"*** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %70, %73
  %75 = ashr exact i64 %74, 3
  %76 = icmp eq i64 %74, 0
  %77 = mul i64 %75, 102
  %78 = add i64 %77, -1
  %79 = select i1 %76, i64 0, i64 %78
  %80 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, %65
  %83 = icmp eq i64 %79, %82
  %84 = inttoptr i64 %73 to %"struct.CFDE_TextOut::Piece"**
  %85 = inttoptr i64 %70 to %"struct.CFDE_TextOut::Piece"**
  br i1 %83, label %86, label %92

86:                                               ; preds = %67
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque.179"* %63) #12
  %87 = load i64, i64* %64, align 8
  %88 = load i64, i64* %80, align 8
  %89 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %71, align 8
  %90 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %68, align 8
  %91 = add i64 %88, %87
  br label %92

92:                                               ; preds = %86, %67
  %93 = phi i64 [ %91, %86 ], [ %82, %67 ]
  %94 = phi %"struct.CFDE_TextOut::Piece"** [ %90, %86 ], [ %85, %67 ]
  %95 = phi %"struct.CFDE_TextOut::Piece"** [ %89, %86 ], [ %84, %67 ]
  %96 = icmp eq %"struct.CFDE_TextOut::Piece"** %94, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = udiv i64 %93, 102
  %99 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %95, i64 %98
  %100 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, align 8
  %101 = urem i64 %93, 102
  %102 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %100, i64 %101
  %103 = bitcast %"struct.CFDE_TextOut::Piece"* %102 to i8*
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i8* [ %103, %97 ], [ null, %92 ]
  %106 = bitcast %"struct.CFDE_TextOut::Piece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 36, i1 false) #12
  %107 = load i64, i64* %64, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %64, align 8
  br label %122

109:                                              ; preds = %48
  %110 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, %62
  %113 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 0, i32 1
  %114 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %113, align 8
  %115 = udiv i64 %112, 102
  %116 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %114, i64 %115
  %117 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %116, align 8
  %118 = urem i64 %112, 102
  %119 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %117, i64 %118
  %120 = bitcast %"struct.CFDE_TextOut::Piece"* %119 to i8*
  %121 = bitcast %"struct.CFDE_TextOut::Piece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 36, i1 false) #12
  br label %122

122:                                              ; preds = %104, %109
  %123 = phi i64 [ %108, %104 ], [ %62, %109 ]
  store i64 %123, i64* %61, align 8
  br i1 %3, label %124, label %189

124:                                              ; preds = %122
  %125 = load i64, i64* %64, align 8
  %126 = icmp ugt i64 %125, %123
  br i1 %126, label %127, label %192

127:                                              ; preds = %124
  %128 = xor i64 %123, -1
  %129 = add i64 %125, %128
  %130 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, %125
  %133 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 0, i32 1
  %134 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %133, align 8
  %135 = udiv i64 %132, 102
  %136 = urem i64 %132, 102
  %137 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %134, i64 %135
  %138 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58, i32 1, i32 0, i32 0, i32 2
  %139 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %138, align 8
  %140 = icmp eq %"struct.CFDE_TextOut::Piece"** %139, %134
  br i1 %140, label %146, label %141

141:                                              ; preds = %127
  %142 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %137, align 8
  %143 = urem i64 %132, 102
  %144 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %142, i64 %143
  %145 = ptrtoint %"struct.CFDE_TextOut::Piece"* %144 to i64
  br label %146

146:                                              ; preds = %141, %127
  %147 = phi i64 [ %145, %141 ], [ 0, %127 ]
  %148 = icmp ult i64 %125, %129
  %149 = select i1 %148, i64 %125, i64 %129
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %174, label %151

151:                                              ; preds = %146
  %152 = bitcast %"struct.CFDE_TextOut::Piece"** %137 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %147, %153
  %155 = sdiv exact i64 %154, 40
  %156 = sub i64 %155, %149
  %157 = icmp sgt i64 %156, 0
  br i1 %157, label %158, label %165

158:                                              ; preds = %151
  %159 = udiv i64 %156, 102
  %160 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %137, i64 %159
  %161 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %160, align 8
  %162 = urem i64 %156, 102
  %163 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %161, i64 %162
  %164 = ptrtoint %"struct.CFDE_TextOut::Piece"* %163 to i64
  br label %174

165:                                              ; preds = %151
  %166 = sub nsw i64 101, %156
  %167 = sdiv i64 %166, -102
  %168 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %137, i64 %167
  %169 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %168, align 8
  %170 = srem i64 %166, 102
  %171 = sub nsw i64 101, %170
  %172 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %169, i64 %171
  %173 = ptrtoint %"struct.CFDE_TextOut::Piece"* %172 to i64
  br label %174

174:                                              ; preds = %165, %158, %146
  %175 = phi i64 [ %147, %146 ], [ %164, %158 ], [ %173, %165 ]
  %176 = phi %"struct.CFDE_TextOut::Piece"** [ %137, %146 ], [ %160, %158 ], [ %168, %165 ]
  %177 = inttoptr i64 %175 to %"struct.CFDE_TextOut::Piece"*
  br i1 %140, label %181, label %178

178:                                              ; preds = %174
  %179 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %137, align 8
  %180 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %179, i64 %136
  br label %181

181:                                              ; preds = %174, %178
  %182 = phi %"struct.CFDE_TextOut::Piece"* [ %180, %178 ], [ null, %174 ]
  %183 = tail call { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE5eraseENS_16__deque_iteratorIS2_PKS2_RS7_PKS8_lLl0EEESC_(%"class.std::__1::deque.179"* %63, %"struct.CFDE_TextOut::Piece"** %176, %"struct.CFDE_TextOut::Piece"* %177, %"struct.CFDE_TextOut::Piece"** %137, %"struct.CFDE_TextOut::Piece"* %182) #12
  br label %192

184:                                              ; preds = %40
  %185 = trunc i64 %45 to i32
  %186 = add nsw i32 %185, -1
  store i32 %186, i32* %6, align 8
  call void @_ZN12CFDE_TextOut4LineD2Ev(%"class.CFDE_TextOut::Line"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #12
  %187 = xor i1 %2, true
  %188 = or i1 %187, %3
  br i1 %188, label %192, label %190

189:                                              ; preds = %122
  br i1 %2, label %190, label %192

190:                                              ; preds = %184, %189
  %191 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 15
  store i64 0, i64* %191, align 8
  br label %192

192:                                              ; preds = %124, %181, %184, %190, %189
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN12CFDE_TextOut4Line8AddPieceEmRKNS_5PieceE(%"class.CFDE_TextOut::Line"*, i64, %"struct.CFDE_TextOut::Piece"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %1
  br i1 %7, label %50, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = bitcast %"struct.CFDE_TextOut::Piece"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.CFDE_TextOut::Piece"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  %18 = mul i64 %16, 102
  %19 = add i64 %18, -1
  %20 = select i1 %17, i64 0, i64 %19
  %21 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %6
  %24 = icmp eq i64 %20, %23
  %25 = inttoptr i64 %14 to %"struct.CFDE_TextOut::Piece"**
  %26 = inttoptr i64 %11 to %"struct.CFDE_TextOut::Piece"**
  br i1 %24, label %27, label %33

27:                                               ; preds = %8
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque.179"* %4) #12
  %28 = load i64, i64* %5, align 8
  %29 = load i64, i64* %21, align 8
  %30 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %12, align 8
  %31 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %32 = add i64 %29, %28
  br label %33

33:                                               ; preds = %27, %8
  %34 = phi i64 [ %32, %27 ], [ %23, %8 ]
  %35 = phi %"struct.CFDE_TextOut::Piece"** [ %31, %27 ], [ %26, %8 ]
  %36 = phi %"struct.CFDE_TextOut::Piece"** [ %30, %27 ], [ %25, %8 ]
  %37 = icmp eq %"struct.CFDE_TextOut::Piece"** %35, %36
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = udiv i64 %34, 102
  %40 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %36, i64 %39
  %41 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %40, align 8
  %42 = urem i64 %34, 102
  %43 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %41, i64 %42
  %44 = bitcast %"struct.CFDE_TextOut::Piece"* %43 to i8*
  br label %45

45:                                               ; preds = %33, %38
  %46 = phi i8* [ %44, %38 ], [ null, %33 ]
  %47 = bitcast %"struct.CFDE_TextOut::Piece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 36, i1 false) #12
  %48 = load i64, i64* %5, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %5, align 8
  br label %63

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, %1
  %54 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %55 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %54, align 8
  %56 = udiv i64 %53, 102
  %57 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %55, i64 %56
  %58 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %57, align 8
  %59 = urem i64 %53, 102
  %60 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %58, i64 %59
  %61 = bitcast %"struct.CFDE_TextOut::Piece"* %60 to i8*
  %62 = bitcast %"struct.CFDE_TextOut::Piece"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 36, i1 false)
  br label %63

63:                                               ; preds = %50, %45
  %64 = phi i64 [ %49, %45 ], [ %1, %50 ]
  ret i64 %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE9push_backERKS2_(%"class.std::__1::deque"*, %"class.CFDE_TextOut::Line"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.CFDE_TextOut::Line"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.CFDE_TextOut::Line"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  %12 = mul i64 %10, 73
  %13 = add i64 %12, -1
  %14 = select i1 %11, i64 0, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = icmp eq i64 %14, %19
  %21 = inttoptr i64 %8 to %"class.CFDE_TextOut::Line"**
  %22 = inttoptr i64 %5 to %"class.CFDE_TextOut::Line"**
  br i1 %20, label %23, label %29

23:                                               ; preds = %2
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %0)
  %24 = load i64, i64* %17, align 8
  %25 = load i64, i64* %15, align 8
  %26 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %6, align 8
  %27 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %28 = add i64 %25, %24
  br label %29

29:                                               ; preds = %23, %2
  %30 = phi i64 [ %28, %23 ], [ %19, %2 ]
  %31 = phi %"class.CFDE_TextOut::Line"** [ %27, %23 ], [ %22, %2 ]
  %32 = phi %"class.CFDE_TextOut::Line"** [ %26, %23 ], [ %21, %2 ]
  %33 = icmp eq %"class.CFDE_TextOut::Line"** %31, %32
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = udiv i64 %30, 73
  %36 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %32, i64 %35
  %37 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %36, align 8
  %38 = urem i64 %30, 73
  %39 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %37, i64 %38
  br label %40

40:                                               ; preds = %29, %34
  %41 = phi %"class.CFDE_TextOut::Line"* [ %39, %34 ], [ null, %29 ]
  %42 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %41, i64 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %41, i64 0, i32 1
  %44 = bitcast %"class.std::__1::deque.179"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 48, i1 false) #12
  %45 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !8
  store i8 %46, i8* %42, align 8
  %47 = icmp eq %"class.CFDE_TextOut::Line"* %41, %1
  br i1 %47, label %80, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %50 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %49, align 8
  %51 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = udiv i64 %52, 102
  %54 = urem i64 %52, 102
  %55 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %50, i64 %53
  %56 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %57 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %56, align 8
  %58 = icmp eq %"struct.CFDE_TextOut::Piece"** %57, %50
  br i1 %58, label %59, label %65

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, %52
  %63 = udiv i64 %62, 102
  %64 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %50, i64 %63
  br label %76

65:                                               ; preds = %48
  %66 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %55, align 8
  %67 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %66, i64 %54
  %68 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, %52
  %71 = udiv i64 %70, 102
  %72 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %50, i64 %71
  %73 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %72, align 8
  %74 = urem i64 %70, 102
  %75 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %73, i64 %74
  br label %76

76:                                               ; preds = %65, %59
  %77 = phi %"struct.CFDE_TextOut::Piece"** [ %72, %65 ], [ %64, %59 ]
  %78 = phi %"struct.CFDE_TextOut::Piece"* [ %67, %65 ], [ null, %59 ]
  %79 = phi %"struct.CFDE_TextOut::Piece"* [ %75, %65 ], [ null, %59 ]
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE6assignINS_16__deque_iteratorIS2_PKS2_RS8_PKS9_lLl0EEEEEvT_SE_PNS_9enable_ifIXsr33__is_cpp17_random_access_iteratorISE_EE5valueEvE4typeE(%"class.std::__1::deque.179"* %43, %"struct.CFDE_TextOut::Piece"** %55, %"struct.CFDE_TextOut::Piece"* %78, %"struct.CFDE_TextOut::Piece"** %77, %"struct.CFDE_TextOut::Piece"* %79, i8* null) #12
  br label %80

80:                                               ; preds = %40, %76
  %81 = load i64, i64* %17, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut4Line10RemoveLastEm(%"class.CFDE_TextOut::Line"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  %9 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %11 = udiv i64 %8, 102
  %12 = urem i64 %8, 102
  %13 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %10, i64 %11
  %14 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %14, align 8
  %16 = icmp eq %"struct.CFDE_TextOut::Piece"** %15, %10
  br i1 %16, label %22, label %17

17:                                               ; preds = %2
  %18 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %13, align 8
  %19 = urem i64 %8, 102
  %20 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %18, i64 %19
  %21 = ptrtoint %"struct.CFDE_TextOut::Piece"* %20 to i64
  br label %22

22:                                               ; preds = %2, %17
  %23 = phi i64 [ %21, %17 ], [ 0, %2 ]
  %24 = icmp ult i64 %5, %1
  %25 = select i1 %24, i64 %5, i64 %1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %50, label %27

27:                                               ; preds = %22
  %28 = bitcast %"struct.CFDE_TextOut::Piece"** %13 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %23, %29
  %31 = sdiv exact i64 %30, 40
  %32 = sub i64 %31, %25
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %27
  %35 = udiv i64 %32, 102
  %36 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %13, i64 %35
  %37 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %36, align 8
  %38 = urem i64 %32, 102
  %39 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %37, i64 %38
  %40 = ptrtoint %"struct.CFDE_TextOut::Piece"* %39 to i64
  br label %50

41:                                               ; preds = %27
  %42 = sub nsw i64 101, %32
  %43 = sdiv i64 %42, -102
  %44 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %13, i64 %43
  %45 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %44, align 8
  %46 = srem i64 %42, 102
  %47 = sub nsw i64 101, %46
  %48 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %45, i64 %47
  %49 = ptrtoint %"struct.CFDE_TextOut::Piece"* %48 to i64
  br label %50

50:                                               ; preds = %22, %34, %41
  %51 = phi i64 [ %23, %22 ], [ %40, %34 ], [ %49, %41 ]
  %52 = phi %"struct.CFDE_TextOut::Piece"** [ %13, %22 ], [ %36, %34 ], [ %44, %41 ]
  %53 = inttoptr i64 %51 to %"struct.CFDE_TextOut::Piece"*
  br i1 %16, label %57, label %54

54:                                               ; preds = %50
  %55 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %13, align 8
  %56 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %55, i64 %12
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi %"struct.CFDE_TextOut::Piece"* [ %56, %54 ], [ null, %50 ]
  %59 = tail call { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE5eraseENS_16__deque_iteratorIS2_PKS2_RS7_PKS8_lLl0EEESC_(%"class.std::__1::deque.179"* %3, %"struct.CFDE_TextOut::Piece"** %52, %"struct.CFDE_TextOut::Piece"* %53, %"struct.CFDE_TextOut::Piece"** %13, %"struct.CFDE_TextOut::Piece"* %58)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut15ReloadLinePieceEPNS_4LineERK9CFX_RectF(%class.CFDE_TextOut*, %"class.CFDE_TextOut::Line"* nocapture readonly, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.fxcrt::StringDataTemplate.175"*, %"class.fxcrt::StringDataTemplate.175"** %6, align 8, !noalias !23
  %8 = icmp eq %"class.fxcrt::StringDataTemplate.175"* %7, null
  %9 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.175", %"class.fxcrt::StringDataTemplate.175"* %7, i64 0, i32 3, i64 0
  br i1 %8, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.175", %"class.fxcrt::StringDataTemplate.175"* %7, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !23
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i64 [ %12, %10 ], [ 0, %3 ]
  %15 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  store i64 0, i64* %4, align 8
  %16 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #12
  store i32 0, i32* %5, align 4
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 1
  %22 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 4
  %24 = bitcast float* %23 to i32*
  %25 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = select i1 %8, i32* null, i32* %9
  br label %33

27:                                               ; preds = %57, %13
  %28 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %28, align 8
  %30 = tail call zeroext i8 @_ZN14CFGAS_TxtBreak8EndBreakEN10CFGAS_Char9BreakTypeE(%class.CFGAS_TxtBreak* %29, i8 zeroext 3) #12
  %31 = icmp ult i8 %30, 2
  br i1 %31, label %80, label %78

32:                                               ; preds = %60
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !13
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !14
  unreachable

33:                                               ; preds = %20, %60
  %34 = phi i64 [ 0, %20 ], [ %58, %60 ]
  %35 = load i64, i64* %21, align 8
  %36 = add i64 %35, %34
  %37 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %22, align 8
  %38 = udiv i64 %36, 102
  %39 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %37, i64 %38
  %40 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %39, align 8
  %41 = urem i64 %36, 102
  %42 = icmp eq i64 %34, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %33
  %44 = load i64, i64* %4, align 8
  br label %51

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %40, i64 %41, i32 0
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %4, align 8
  %48 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %40, i64 %41, i32 3, i32 1
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %24, align 8
  br label %51

51:                                               ; preds = %43, %45
  %52 = phi i64 [ %44, %43 ], [ %47, %45 ]
  %53 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %40, i64 %41, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %52
  %56 = icmp ult i64 %52, %55
  br i1 %56, label %63, label %57

57:                                               ; preds = %75, %51
  %58 = add nuw i64 %34, 1
  %59 = icmp eq i64 %58, %17
  br i1 %59, label %27, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %16, align 8
  %62 = icmp ugt i64 %61, %58
  br i1 %62, label %33, label %32, !prof !15

63:                                               ; preds = %51, %75
  %64 = phi i64 [ %76, %75 ], [ %52, %51 ]
  %65 = icmp ugt i64 %14, %64
  br i1 %65, label %67, label %66, !prof !15

66:                                               ; preds = %63
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !26
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !27
  unreachable

67:                                               ; preds = %63
  %68 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %25, align 8
  %69 = getelementptr inbounds i32, i32* %26, i64 %64
  %70 = load i32, i32* %69, align 4
  %71 = tail call zeroext i8 @_ZN14CFGAS_TxtBreak10AppendCharEw(%class.CFGAS_TxtBreak* %68, i32 signext %70) #12
  %72 = icmp ult i8 %71, 2
  br i1 %72, label %75, label %73

73:                                               ; preds = %67
  %74 = call zeroext i1 @_ZN12CFDE_TextOut14RetrievePiecesEN10CFGAS_Char9BreakTypeEbRK9CFX_RectFPmPi(%class.CFDE_TextOut* %0, i8 zeroext %71, i1 zeroext true, %class.CFX_RectF* dereferenceable(16) %2, i64* nonnull %4, i32* nonnull %5)
  br label %75

75:                                               ; preds = %67, %73
  %76 = add nuw i64 %64, 1
  %77 = icmp eq i64 %76, %55
  br i1 %77, label %57, label %63

78:                                               ; preds = %27
  %79 = call zeroext i1 @_ZN12CFDE_TextOut14RetrievePiecesEN10CFGAS_Char9BreakTypeEbRK9CFX_RectFPmPi(%class.CFDE_TextOut* %0, i8 zeroext %30, i1 zeroext true, %class.CFX_RectF* dereferenceable(16) %2, i64* nonnull %4, i32* nonnull %5)
  br label %80

80:                                               ; preds = %78, %27
  %81 = load %class.CFGAS_TxtBreak*, %class.CFGAS_TxtBreak** %28, align 8
  %82 = getelementptr inbounds %class.CFGAS_TxtBreak, %class.CFGAS_TxtBreak* %81, i64 0, i32 0
  tail call void @_ZN11CFGAS_Break5ResetEv(%class.CFGAS_Break* %82) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  ret void
}

declare void @_ZN11TextCharPosC1Ev(%class.TextCharPos*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11TextCharPosD1Ev(%class.TextCharPos*) unnamed_addr #3

declare void @_ZN14CFGAS_TxtBreak3RunC1Ev(%"struct.CFGAS_TxtBreak::Run"*) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3

declare i64 @_ZNK14CFGAS_TxtBreak13GetDisplayPosERKNS_3RunEP11TextCharPos(%class.CFGAS_TxtBreak*, %"struct.CFGAS_TxtBreak::Run"* dereferenceable(80), %class.TextCharPos*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN14CFGAS_TxtBreak3RunD1Ev(%"struct.CFGAS_TxtBreak::Run"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut4LineC2Ev(%"class.CFDE_TextOut::Line"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::deque.179"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut4LineC2ERKS0_(%"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"* readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::deque.179"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false) #12
  %6 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  store i8 %7, i8* %3, align 8
  %8 = icmp eq %"class.CFDE_TextOut::Line"* %0, %1
  br i1 %8, label %41, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %11 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  %12 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = udiv i64 %13, 102
  %15 = urem i64 %13, 102
  %16 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %11, i64 %14
  %17 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %17, align 8
  %19 = icmp eq %"struct.CFDE_TextOut::Piece"** %18, %11
  br i1 %19, label %20, label %26

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %13
  %24 = udiv i64 %23, 102
  %25 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %11, i64 %24
  br label %37

26:                                               ; preds = %9
  %27 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %16, align 8
  %28 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %27, i64 %15
  %29 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %13
  %32 = udiv i64 %31, 102
  %33 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %11, i64 %32
  %34 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %33, align 8
  %35 = urem i64 %31, 102
  %36 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %34, i64 %35
  br label %37

37:                                               ; preds = %26, %20
  %38 = phi %"struct.CFDE_TextOut::Piece"** [ %33, %26 ], [ %25, %20 ]
  %39 = phi %"struct.CFDE_TextOut::Piece"* [ %28, %26 ], [ null, %20 ]
  %40 = phi %"struct.CFDE_TextOut::Piece"* [ %36, %26 ], [ null, %20 ]
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE6assignINS_16__deque_iteratorIS2_PKS2_RS8_PKS9_lLl0EEEEEvT_SE_PNS_9enable_ifIXsr33__is_cpp17_random_access_iteratorISE_EE5valueEvE4typeE(%"class.std::__1::deque.179"* %4, %"struct.CFDE_TextOut::Piece"** %16, %"struct.CFDE_TextOut::Piece"* %39, %"struct.CFDE_TextOut::Piece"** %38, %"struct.CFDE_TextOut::Piece"* %40, i8* null) #12
  br label %41

41:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CFDE_TextOut4LineD2Ev(%"class.CFDE_TextOut::Line"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %3 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %2, align 8
  %4 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 102
  %7 = urem i64 %5, 102
  %8 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %3, i64 %6
  %9 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %11 = icmp eq %"struct.CFDE_TextOut::Piece"** %10, %3
  %12 = ptrtoint %"struct.CFDE_TextOut::Piece"** %10 to i64
  %13 = ptrtoint %"struct.CFDE_TextOut::Piece"** %3 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %28

16:                                               ; preds = %1
  %17 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %8, align 8
  %18 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %17, i64 %7
  %19 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = udiv i64 %21, 102
  %23 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %3, i64 %22
  %24 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %23, align 8
  %25 = urem i64 %21, 102
  %26 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %24, i64 %25
  %27 = icmp eq %"struct.CFDE_TextOut::Piece"* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %16, %14
  %29 = phi i64* [ %15, %14 ], [ %19, %16 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"struct.CFDE_TextOut::Piece"*** %9 to i64*
  %31 = sub i64 %12, %13
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %16, %47
  %35 = phi %"struct.CFDE_TextOut::Piece"* [ %50, %47 ], [ %18, %16 ]
  %36 = phi %"struct.CFDE_TextOut::Piece"** [ %49, %47 ], [ %8, %16 ]
  %37 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %35, i64 1
  %38 = ptrtoint %"struct.CFDE_TextOut::Piece"* %37 to i64
  %39 = bitcast %"struct.CFDE_TextOut::Piece"** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4080
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %36, i64 1
  %45 = bitcast %"struct.CFDE_TextOut::Piece"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi %"struct.CFDE_TextOut::Piece"** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to %"struct.CFDE_TextOut::Piece"*
  %51 = icmp eq %"struct.CFDE_TextOut::Piece"* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi %"struct.CFDE_TextOut::Piece"** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast %"struct.CFDE_TextOut::Piece"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #13
  %56 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %2, align 8
  %57 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %56, i64 1
  store %"struct.CFDE_TextOut::Piece"** %57, %"struct.CFDE_TextOut::Piece"*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint %"struct.CFDE_TextOut::Piece"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to %"struct.CFDE_TextOut::Piece"**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi %"struct.CFDE_TextOut::Piece"** [ %10, %28 ], [ %64, %63 ]
  %67 = phi %"struct.CFDE_TextOut::Piece"** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 102, %69 ], [ 51, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq %"struct.CFDE_TextOut::Piece"** %67, %66
  br i1 %73, label %92, label %74

74:                                               ; preds = %72, %74
  %75 = phi %"struct.CFDE_TextOut::Piece"** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast %"struct.CFDE_TextOut::Piece"** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #13
  %78 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %75, i64 1
  %79 = icmp eq %"struct.CFDE_TextOut::Piece"** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %2, align 8
  %82 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %83 = icmp eq %"struct.CFDE_TextOut::Piece"** %82, %81
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"struct.CFDE_TextOut::Piece"** %81 to i64
  %86 = getelementptr %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %82, i64 -1
  %87 = ptrtoint %"struct.CFDE_TextOut::Piece"** %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 3
  %90 = xor i64 %89, -1
  %91 = getelementptr %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %82, i64 %90
  store %"struct.CFDE_TextOut::Piece"** %91, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  br label %92

92:                                               ; preds = %84, %80, %72
  %93 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %93, align 8
  %95 = icmp eq %"struct.CFDE_TextOut::Piece"** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast %"struct.CFDE_TextOut::Piece"** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #13
  br label %98

98:                                               ; preds = %92, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.CFDE_TextOut::Piece"* @_ZNK12CFDE_TextOut4Line15GetPieceAtIndexEm(%"class.CFDE_TextOut::Line"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %7, label %6, !prof !15

6:                                                ; preds = %2
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !28
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !29
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %1
  %11 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %11, align 8
  %13 = udiv i64 %10, 102
  %14 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %12, i64 %13
  %15 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %14, align 8
  %16 = urem i64 %10, 102
  %17 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %15, i64 %16
  ret %"struct.CFDE_TextOut::Piece"* %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE5eraseENS_16__deque_iteratorIS2_PKS2_RS7_PKS8_lLl0EEESC_(%"class.std::__1::deque.179"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*) local_unnamed_addr #0 comdat align 2 {
  %6 = icmp eq %"struct.CFDE_TextOut::Piece"* %4, %2
  br i1 %6, label %25, label %7

7:                                                ; preds = %5
  %8 = ptrtoint %"struct.CFDE_TextOut::Piece"* %2 to i64
  %9 = ptrtoint %"struct.CFDE_TextOut::Piece"* %4 to i64
  %10 = ptrtoint %"struct.CFDE_TextOut::Piece"** %3 to i64
  %11 = ptrtoint %"struct.CFDE_TextOut::Piece"** %1 to i64
  %12 = sub i64 %10, %11
  %13 = ashr exact i64 %12, 3
  %14 = mul nsw i64 %13, 102
  %15 = bitcast %"struct.CFDE_TextOut::Piece"** %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %9, %16
  %18 = sdiv exact i64 %17, 40
  %19 = add nsw i64 %18, %14
  %20 = bitcast %"struct.CFDE_TextOut::Piece"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %8, %21
  %23 = sdiv exact i64 %22, -40
  %24 = add i64 %19, %23
  br label %25

25:                                               ; preds = %5, %7
  %26 = phi i64 [ %24, %7 ], [ 0, %5 ]
  %27 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = udiv i64 %30, 102
  %32 = urem i64 %30, 102
  %33 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %28, i64 %31
  %34 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 2
  %35 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %34, align 8
  %36 = icmp eq %"struct.CFDE_TextOut::Piece"** %35, %28
  br i1 %36, label %40, label %37

37:                                               ; preds = %25
  %38 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %33, align 8
  %39 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %38, i64 %32
  br label %40

40:                                               ; preds = %25, %37
  %41 = phi %"struct.CFDE_TextOut::Piece"* [ %39, %37 ], [ null, %25 ]
  %42 = ptrtoint %"struct.CFDE_TextOut::Piece"** %33 to i64
  %43 = ptrtoint %"struct.CFDE_TextOut::Piece"* %41 to i64
  %44 = icmp eq %"struct.CFDE_TextOut::Piece"* %41, %2
  br i1 %44, label %82, label %45

45:                                               ; preds = %40
  %46 = ptrtoint %"struct.CFDE_TextOut::Piece"* %2 to i64
  %47 = ptrtoint %"struct.CFDE_TextOut::Piece"** %1 to i64
  %48 = sub i64 %47, %42
  %49 = ashr exact i64 %48, 3
  %50 = mul nsw i64 %49, 102
  %51 = bitcast %"struct.CFDE_TextOut::Piece"** %1 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %46, %52
  %54 = sdiv exact i64 %53, 40
  %55 = add nsw i64 %54, %50
  %56 = bitcast %"struct.CFDE_TextOut::Piece"** %33 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %43, %57
  %59 = sdiv exact i64 %58, -40
  %60 = add i64 %55, %59
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %82, label %62

62:                                               ; preds = %45
  %63 = sdiv exact i64 %58, 40
  %64 = add nsw i64 %63, %60
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %62
  %67 = udiv i64 %64, 102
  %68 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %33, i64 %67
  %69 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %68, align 8
  %70 = urem i64 %64, 102
  %71 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %69, i64 %70
  %72 = ptrtoint %"struct.CFDE_TextOut::Piece"* %71 to i64
  br label %82

73:                                               ; preds = %62
  %74 = sub nsw i64 101, %64
  %75 = sdiv i64 %74, -102
  %76 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %33, i64 %75
  %77 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %76, align 8
  %78 = srem i64 %74, 102
  %79 = sub nsw i64 101, %78
  %80 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %77, i64 %79
  %81 = ptrtoint %"struct.CFDE_TextOut::Piece"* %80 to i64
  br label %82

82:                                               ; preds = %40, %45, %66, %73
  %83 = phi i1 [ true, %45 ], [ false, %66 ], [ false, %73 ], [ true, %40 ]
  %84 = phi i64 [ 0, %45 ], [ %60, %66 ], [ %60, %73 ], [ 0, %40 ]
  %85 = phi i64 [ %43, %45 ], [ %72, %66 ], [ %81, %73 ], [ %43, %40 ]
  %86 = phi %"struct.CFDE_TextOut::Piece"** [ %33, %45 ], [ %68, %66 ], [ %76, %73 ], [ %33, %40 ]
  %87 = inttoptr i64 %85 to %"struct.CFDE_TextOut::Piece"*
  %88 = icmp sgt i64 %26, 0
  br i1 %88, label %89, label %261

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %91, %26
  %93 = lshr i64 %92, 1
  %94 = icmp ugt i64 %84, %93
  %95 = bitcast %"struct.CFDE_TextOut::Piece"** %86 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %85, %96
  %98 = sdiv exact i64 %97, 40
  %99 = add nsw i64 %98, %26
  %100 = icmp sgt i64 %99, 0
  br i1 %94, label %162, label %101

101:                                              ; preds = %89
  br i1 %100, label %102, label %108

102:                                              ; preds = %101
  %103 = udiv i64 %99, 102
  %104 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %86, i64 %103
  %105 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %104, align 8
  %106 = urem i64 %99, 102
  %107 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %105, i64 %106
  br label %116

108:                                              ; preds = %101
  %109 = sub nsw i64 101, %99
  %110 = sdiv i64 %109, -102
  %111 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %86, i64 %110
  %112 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %111, align 8
  %113 = srem i64 %109, 102
  %114 = sub nsw i64 101, %113
  %115 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %112, i64 %114
  br label %116

116:                                              ; preds = %102, %108
  %117 = phi %"struct.CFDE_TextOut::Piece"* [ %107, %102 ], [ %115, %108 ]
  %118 = phi %"struct.CFDE_TextOut::Piece"** [ %104, %102 ], [ %111, %108 ]
  %119 = tail call { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__113move_backwardIN12CFDE_TextOut5PieceEPS2_RS2_PS3_lLl0ES2_S3_S4_S5_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS6_IT_T0_T1_T2_T3_XT4_EEESI_SC_(%"struct.CFDE_TextOut::Piece"** %33, %"struct.CFDE_TextOut::Piece"* %41, %"struct.CFDE_TextOut::Piece"** %86, %"struct.CFDE_TextOut::Piece"* %87, %"struct.CFDE_TextOut::Piece"** %118, %"struct.CFDE_TextOut::Piece"* %117)
  %120 = extractvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %119, 1
  %121 = icmp eq %"struct.CFDE_TextOut::Piece"* %41, %120
  br i1 %121, label %142, label %122

122:                                              ; preds = %116, %137
  %123 = phi %"struct.CFDE_TextOut::Piece"* [ %140, %137 ], [ %41, %116 ]
  %124 = phi i64 [ %138, %137 ], [ %42, %116 ]
  %125 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %123, i64 1
  %126 = ptrtoint %"struct.CFDE_TextOut::Piece"* %125 to i64
  %127 = inttoptr i64 %124 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %126, %128
  %130 = icmp eq i64 %129, 4080
  br i1 %130, label %131, label %137

131:                                              ; preds = %122
  %132 = inttoptr i64 %124 to %"struct.CFDE_TextOut::Piece"**
  %133 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %132, i64 1
  %134 = ptrtoint %"struct.CFDE_TextOut::Piece"** %133 to i64
  %135 = bitcast %"struct.CFDE_TextOut::Piece"** %133 to i64*
  %136 = load i64, i64* %135, align 8
  br label %137

137:                                              ; preds = %122, %131
  %138 = phi i64 [ %134, %131 ], [ %124, %122 ]
  %139 = phi i64 [ %136, %131 ], [ %126, %122 ]
  %140 = inttoptr i64 %139 to %"struct.CFDE_TextOut::Piece"*
  %141 = icmp eq %"struct.CFDE_TextOut::Piece"* %120, %140
  br i1 %141, label %142, label %122

142:                                              ; preds = %137, %116
  %143 = load i64, i64* %90, align 8
  %144 = sub i64 %143, %26
  store i64 %144, i64* %90, align 8
  %145 = load i64, i64* %29, align 8
  %146 = add i64 %145, %26
  store i64 %146, i64* %29, align 8
  %147 = icmp ult i64 %146, 204
  br i1 %147, label %148, label %150

148:                                              ; preds = %142
  %149 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %27, align 8
  br label %261

150:                                              ; preds = %142
  %151 = bitcast %"struct.CFDE_TextOut::Piece"*** %27 to i8***
  %152 = load i8**, i8*** %151, align 8
  br label %153

153:                                              ; preds = %150, %153
  %154 = phi i8** [ %152, %150 ], [ %161, %153 ]
  %155 = load i8*, i8** %154, align 8
  tail call void @_ZdlPv(i8* %155) #13
  %156 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %27, align 8
  %157 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %156, i64 1
  store %"struct.CFDE_TextOut::Piece"** %157, %"struct.CFDE_TextOut::Piece"*** %27, align 8
  %158 = load i64, i64* %29, align 8
  %159 = add i64 %158, -102
  store i64 %159, i64* %29, align 8
  %160 = icmp ult i64 %159, 204
  %161 = bitcast %"struct.CFDE_TextOut::Piece"** %157 to i8**
  br i1 %160, label %261, label %153

162:                                              ; preds = %89
  br i1 %100, label %163, label %169

163:                                              ; preds = %162
  %164 = udiv i64 %99, 102
  %165 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %86, i64 %164
  %166 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %165, align 8
  %167 = urem i64 %99, 102
  %168 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %166, i64 %167
  br label %177

169:                                              ; preds = %162
  %170 = sub nsw i64 101, %99
  %171 = sdiv i64 %170, -102
  %172 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %86, i64 %171
  %173 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %172, align 8
  %174 = srem i64 %170, 102
  %175 = sub nsw i64 101, %174
  %176 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %173, i64 %175
  br label %177

177:                                              ; preds = %163, %169
  %178 = phi %"struct.CFDE_TextOut::Piece"* [ %168, %163 ], [ %176, %169 ]
  %179 = phi %"struct.CFDE_TextOut::Piece"** [ %165, %163 ], [ %172, %169 ]
  %180 = add i64 %91, %30
  %181 = udiv i64 %180, 102
  %182 = urem i64 %180, 102
  %183 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %28, i64 %181
  br i1 %36, label %187, label %184

184:                                              ; preds = %177
  %185 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %183, align 8
  %186 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %185, i64 %182
  br label %187

187:                                              ; preds = %177, %184
  %188 = phi %"struct.CFDE_TextOut::Piece"* [ %186, %184 ], [ null, %177 ]
  %189 = tail call { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__14moveIN12CFDE_TextOut5PieceEPS2_RS2_PS3_lLl0ES2_S3_S4_S5_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS6_IT_T0_T1_T2_T3_XT4_EEESI_SC_(%"struct.CFDE_TextOut::Piece"** %179, %"struct.CFDE_TextOut::Piece"* %178, %"struct.CFDE_TextOut::Piece"** %183, %"struct.CFDE_TextOut::Piece"* %188, %"struct.CFDE_TextOut::Piece"** %86, %"struct.CFDE_TextOut::Piece"* %87)
  %190 = extractvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %189, 0
  %191 = extractvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %189, 1
  %192 = load i64, i64* %90, align 8
  %193 = load i64, i64* %29, align 8
  %194 = add i64 %193, %192
  %195 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %27, align 8
  %196 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %34, align 8
  %197 = icmp eq %"struct.CFDE_TextOut::Piece"** %196, %195
  %198 = ptrtoint %"struct.CFDE_TextOut::Piece"** %196 to i64
  %199 = ptrtoint %"struct.CFDE_TextOut::Piece"** %195 to i64
  br i1 %197, label %206, label %200

200:                                              ; preds = %187
  %201 = udiv i64 %194, 102
  %202 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %195, i64 %201
  %203 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %202, align 8
  %204 = urem i64 %194, 102
  %205 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %203, i64 %204
  br label %206

206:                                              ; preds = %187, %200
  %207 = phi %"struct.CFDE_TextOut::Piece"* [ %205, %200 ], [ null, %187 ]
  %208 = icmp eq %"struct.CFDE_TextOut::Piece"* %191, %207
  br i1 %208, label %209, label %221

209:                                              ; preds = %234, %206
  %210 = sub i64 %192, %26
  store i64 %210, i64* %90, align 8
  %211 = bitcast %"struct.CFDE_TextOut::Piece"*** %27 to i64*
  %212 = sub i64 %198, %199
  %213 = ashr exact i64 %212, 3
  %214 = icmp eq i64 %212, 0
  %215 = mul i64 %213, 102
  %216 = add i64 %215, -1
  %217 = select i1 %214, i64 0, i64 %216
  %218 = add i64 %210, %193
  %219 = sub i64 %217, %218
  %220 = icmp ult i64 %219, 204
  br i1 %220, label %261, label %239

221:                                              ; preds = %206, %234
  %222 = phi %"struct.CFDE_TextOut::Piece"** [ %236, %234 ], [ %190, %206 ]
  %223 = phi %"struct.CFDE_TextOut::Piece"* [ %237, %234 ], [ %191, %206 ]
  %224 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %223, i64 1
  %225 = ptrtoint %"struct.CFDE_TextOut::Piece"* %224 to i64
  %226 = bitcast %"struct.CFDE_TextOut::Piece"** %222 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = sub i64 %225, %227
  %229 = icmp eq i64 %228, 4080
  br i1 %229, label %230, label %234

230:                                              ; preds = %221
  %231 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %222, i64 1
  %232 = bitcast %"struct.CFDE_TextOut::Piece"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  br label %234

234:                                              ; preds = %221, %230
  %235 = phi i64 [ %233, %230 ], [ %225, %221 ]
  %236 = phi %"struct.CFDE_TextOut::Piece"** [ %231, %230 ], [ %222, %221 ]
  %237 = inttoptr i64 %235 to %"struct.CFDE_TextOut::Piece"*
  %238 = icmp eq %"struct.CFDE_TextOut::Piece"* %207, %237
  br i1 %238, label %209, label %221

239:                                              ; preds = %209, %239
  %240 = phi %"struct.CFDE_TextOut::Piece"** [ %245, %239 ], [ %196, %209 ]
  %241 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %240, i64 -1
  %242 = bitcast %"struct.CFDE_TextOut::Piece"** %241 to i8**
  %243 = load i8*, i8** %242, align 8
  tail call void @_ZdlPv(i8* %243) #13
  %244 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %34, align 8
  %245 = getelementptr %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %244, i64 -1
  store %"struct.CFDE_TextOut::Piece"** %245, %"struct.CFDE_TextOut::Piece"*** %34, align 8
  %246 = ptrtoint %"struct.CFDE_TextOut::Piece"** %245 to i64
  %247 = load i64, i64* %211, align 8
  %248 = sub i64 %246, %247
  %249 = ashr exact i64 %248, 3
  %250 = icmp eq i64 %248, 0
  %251 = mul i64 %249, 102
  %252 = add i64 %251, -1
  %253 = select i1 %250, i64 0, i64 %252
  %254 = load i64, i64* %29, align 8
  %255 = load i64, i64* %90, align 8
  %256 = add i64 %255, %254
  %257 = sub i64 %253, %256
  %258 = icmp ult i64 %257, 204
  br i1 %258, label %259, label %239

259:                                              ; preds = %239
  %260 = inttoptr i64 %247 to %"struct.CFDE_TextOut::Piece"**
  br label %261

261:                                              ; preds = %153, %148, %259, %209, %82
  %262 = phi i64 [ %146, %148 ], [ %254, %259 ], [ %193, %209 ], [ %30, %82 ], [ %159, %153 ]
  %263 = phi %"struct.CFDE_TextOut::Piece"** [ %149, %148 ], [ %260, %259 ], [ %195, %209 ], [ %28, %82 ], [ %157, %153 ]
  %264 = udiv i64 %262, 102
  %265 = urem i64 %262, 102
  %266 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %263, i64 %264
  %267 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %34, align 8
  %268 = icmp eq %"struct.CFDE_TextOut::Piece"** %267, %263
  br i1 %268, label %273, label %269

269:                                              ; preds = %261
  %270 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %266, align 8
  %271 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %270, i64 %265
  %272 = ptrtoint %"struct.CFDE_TextOut::Piece"* %271 to i64
  br label %273

273:                                              ; preds = %261, %269
  %274 = phi i64 [ %272, %269 ], [ 0, %261 ]
  br i1 %83, label %298, label %275

275:                                              ; preds = %273
  %276 = bitcast %"struct.CFDE_TextOut::Piece"** %266 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = sub i64 %274, %277
  %279 = sdiv exact i64 %278, 40
  %280 = add nsw i64 %279, %84
  %281 = icmp sgt i64 %280, 0
  br i1 %281, label %282, label %289

282:                                              ; preds = %275
  %283 = udiv i64 %280, 102
  %284 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %266, i64 %283
  %285 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %284, align 8
  %286 = urem i64 %280, 102
  %287 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %285, i64 %286
  %288 = ptrtoint %"struct.CFDE_TextOut::Piece"* %287 to i64
  br label %298

289:                                              ; preds = %275
  %290 = sub nsw i64 101, %280
  %291 = sdiv i64 %290, -102
  %292 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %266, i64 %291
  %293 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %292, align 8
  %294 = srem i64 %290, 102
  %295 = sub nsw i64 101, %294
  %296 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %293, i64 %295
  %297 = ptrtoint %"struct.CFDE_TextOut::Piece"* %296 to i64
  br label %298

298:                                              ; preds = %273, %282, %289
  %299 = phi i64 [ %274, %273 ], [ %288, %282 ], [ %297, %289 ]
  %300 = phi %"struct.CFDE_TextOut::Piece"** [ %266, %273 ], [ %284, %282 ], [ %292, %289 ]
  %301 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } undef, %"struct.CFDE_TextOut::Piece"** %300, 0
  %302 = inttoptr i64 %299 to %"struct.CFDE_TextOut::Piece"*
  %303 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %301, %"struct.CFDE_TextOut::Piece"* %302, 1
  ret { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %303
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 73
  %7 = urem i64 %5, 73
  %8 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %3, i64 %6
  %9 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  %11 = icmp eq %"class.CFDE_TextOut::Line"** %10, %3
  %12 = ptrtoint %"class.CFDE_TextOut::Line"** %10 to i64
  %13 = ptrtoint %"class.CFDE_TextOut::Line"** %3 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

16:                                               ; preds = %1
  %17 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %8, align 8
  %18 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %17, i64 %7
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = udiv i64 %21, 73
  %23 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %3, i64 %22
  %24 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %23, align 8
  %25 = urem i64 %21, 73
  %26 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %24, i64 %25
  %27 = icmp eq %"class.CFDE_TextOut::Line"* %26, %18
  br i1 %27, label %28, label %46

28:                                               ; preds = %14, %16
  %29 = phi i64* [ %15, %14 ], [ %19, %16 ]
  %30 = bitcast %"class.CFDE_TextOut::Line"*** %9 to i64*
  br label %37

31:                                               ; preds = %59
  %32 = bitcast %"class.CFDE_TextOut::Line"*** %9 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.CFDE_TextOut::Line"*** %2 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %35 to %"class.CFDE_TextOut::Line"**
  br label %37

37:                                               ; preds = %28, %31
  %38 = phi i64* [ %29, %28 ], [ %19, %31 ]
  %39 = phi i64* [ %30, %28 ], [ %32, %31 ]
  %40 = phi %"class.CFDE_TextOut::Line"** [ %3, %28 ], [ %36, %31 ]
  %41 = phi i64 [ %13, %28 ], [ %35, %31 ]
  %42 = phi i64 [ %12, %28 ], [ %33, %31 ]
  store i64 0, i64* %38, align 8
  %43 = sub i64 %42, %41
  %44 = ashr exact i64 %43, 3
  %45 = icmp ugt i64 %44, 2
  br i1 %45, label %64, label %75

46:                                               ; preds = %16, %59
  %47 = phi %"class.CFDE_TextOut::Line"* [ %62, %59 ], [ %18, %16 ]
  %48 = phi %"class.CFDE_TextOut::Line"** [ %61, %59 ], [ %8, %16 ]
  tail call void @_ZN12CFDE_TextOut4LineD2Ev(%"class.CFDE_TextOut::Line"* %47) #12
  %49 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %47, i64 1
  %50 = ptrtoint %"class.CFDE_TextOut::Line"* %49 to i64
  %51 = bitcast %"class.CFDE_TextOut::Line"** %48 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = icmp eq i64 %53, 4088
  br i1 %54, label %55, label %59

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %48, i64 1
  %57 = bitcast %"class.CFDE_TextOut::Line"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %46, %55
  %60 = phi i64 [ %58, %55 ], [ %50, %46 ]
  %61 = phi %"class.CFDE_TextOut::Line"** [ %56, %55 ], [ %48, %46 ]
  %62 = inttoptr i64 %60 to %"class.CFDE_TextOut::Line"*
  %63 = icmp eq %"class.CFDE_TextOut::Line"* %26, %62
  br i1 %63, label %31, label %46

64:                                               ; preds = %37, %64
  %65 = phi %"class.CFDE_TextOut::Line"** [ %69, %64 ], [ %40, %37 ]
  %66 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %65, align 8
  %67 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %66, i64 0, i32 0
  tail call void @_ZdlPv(i8* %67) #13
  %68 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %2, align 8
  %69 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %68, i64 1
  store %"class.CFDE_TextOut::Line"** %69, %"class.CFDE_TextOut::Line"*** %2, align 8
  %70 = load i64, i64* %39, align 8
  %71 = ptrtoint %"class.CFDE_TextOut::Line"** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ugt i64 %73, 2
  br i1 %74, label %64, label %75

75:                                               ; preds = %64, %37
  %76 = phi i64 [ %44, %37 ], [ %73, %64 ]
  switch i64 %76, label %80 [
    i64 1, label %78
    i64 2, label %77
  ]

77:                                               ; preds = %75
  br label %78

78:                                               ; preds = %75, %77
  %79 = phi i64 [ 73, %77 ], [ 36, %75 ]
  store i64 %79, i64* %4, align 8
  br label %80

80:                                               ; preds = %78, %75
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate.175"*) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEES2_(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN13CFX_SubstFontC1Ev(%class.CFX_SubstFont*) unnamed_addr #2

declare void @_ZN14CFGAS_TxtBreakC1Ev(%class.CFGAS_TxtBreak*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.CFDE_TextOut::Line"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.CFDE_TextOut::Line"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  %12 = mul i64 %10, 73
  %13 = add i64 %12, -1
  %14 = select i1 %11, i64 0, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = sub i64 %14, %19
  %21 = icmp ult i64 %20, %1
  %22 = inttoptr i64 %8 to %"class.CFDE_TextOut::Line"**
  %23 = inttoptr i64 %5 to %"class.CFDE_TextOut::Line"**
  br i1 %21, label %24, label %31

24:                                               ; preds = %2
  %25 = sub i64 %1, %20
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE19__add_back_capacityEm(%"class.std::__1::deque"* %0, i64 %25)
  %26 = load i64, i64* %17, align 8
  %27 = load i64, i64* %15, align 8
  %28 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %6, align 8
  %29 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %30 = add i64 %27, %26
  br label %31

31:                                               ; preds = %24, %2
  %32 = phi i64 [ %30, %24 ], [ %19, %2 ]
  %33 = phi %"class.CFDE_TextOut::Line"** [ %29, %24 ], [ %23, %2 ]
  %34 = phi %"class.CFDE_TextOut::Line"** [ %28, %24 ], [ %22, %2 ]
  %35 = phi i64 [ %26, %24 ], [ %18, %2 ]
  %36 = udiv i64 %32, 73
  %37 = urem i64 %32, 73
  %38 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %34, i64 %36
  %39 = icmp eq %"class.CFDE_TextOut::Line"** %33, %34
  br i1 %39, label %44, label %40

40:                                               ; preds = %31
  %41 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %38, align 8
  %42 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %41, i64 %37
  %43 = ptrtoint %"class.CFDE_TextOut::Line"* %42 to i64
  br label %44

44:                                               ; preds = %31, %40
  %45 = phi i64 [ %43, %40 ], [ 0, %31 ]
  %46 = icmp eq i64 %1, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.CFDE_TextOut::Line"** %38 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %45, %49
  %51 = sdiv exact i64 %50, 56
  %52 = add nsw i64 %51, %1
  %53 = icmp sgt i64 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %47
  %55 = udiv i64 %52, 73
  %56 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %38, i64 %55
  %57 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %56, align 8
  %58 = urem i64 %52, 73
  %59 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %57, i64 %58
  %60 = ptrtoint %"class.CFDE_TextOut::Line"* %59 to i64
  br label %70

61:                                               ; preds = %47
  %62 = sub nsw i64 72, %52
  %63 = sdiv i64 %62, -73
  %64 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %38, i64 %63
  %65 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %64, align 8
  %66 = srem i64 %62, 73
  %67 = sub nsw i64 72, %66
  %68 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %65, i64 %67
  %69 = ptrtoint %"class.CFDE_TextOut::Line"* %68 to i64
  br label %70

70:                                               ; preds = %44, %54, %61
  %71 = phi i64 [ %45, %44 ], [ %60, %54 ], [ %69, %61 ]
  %72 = phi %"class.CFDE_TextOut::Line"** [ %38, %44 ], [ %56, %54 ], [ %64, %61 ]
  %73 = inttoptr i64 %71 to %"class.CFDE_TextOut::Line"*
  %74 = inttoptr i64 %45 to %"class.CFDE_TextOut::Line"*
  %75 = icmp eq %"class.CFDE_TextOut::Line"* %74, %73
  br i1 %75, label %76, label %77

76:                                               ; preds = %99, %105, %70
  ret void

77:                                               ; preds = %70, %105
  %78 = phi i64 [ %104, %105 ], [ %35, %70 ]
  %79 = phi i64 [ %108, %105 ], [ %45, %70 ]
  %80 = phi %"class.CFDE_TextOut::Line"** [ %106, %105 ], [ %38, %70 ]
  %81 = icmp eq %"class.CFDE_TextOut::Line"** %80, %72
  br i1 %81, label %85, label %82

82:                                               ; preds = %77
  %83 = load %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %80, align 8
  %84 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %83, i64 73
  br label %85

85:                                               ; preds = %77, %82
  %86 = phi %"class.CFDE_TextOut::Line"* [ %84, %82 ], [ %73, %77 ]
  %87 = inttoptr i64 %79 to %"class.CFDE_TextOut::Line"*
  %88 = icmp eq %"class.CFDE_TextOut::Line"* %86, %87
  br i1 %88, label %99, label %89

89:                                               ; preds = %85, %89
  %90 = phi %"class.CFDE_TextOut::Line"* [ %94, %89 ], [ %87, %85 ]
  %91 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %90, i64 0, i32 0
  store i8 0, i8* %91, align 8
  %92 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %90, i64 0, i32 1
  %93 = bitcast %"class.std::__1::deque.179"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 48, i1 false) #12
  %94 = getelementptr inbounds %"class.CFDE_TextOut::Line", %"class.CFDE_TextOut::Line"* %90, i64 1
  %95 = icmp eq %"class.CFDE_TextOut::Line"* %86, %94
  br i1 %95, label %96, label %89

96:                                               ; preds = %89
  %97 = ptrtoint %"class.CFDE_TextOut::Line"* %86 to i64
  %98 = load i64, i64* %17, align 8
  br label %99

99:                                               ; preds = %96, %85
  %100 = phi i64 [ %98, %96 ], [ %78, %85 ]
  %101 = phi i64 [ %97, %96 ], [ %79, %85 ]
  %102 = sub i64 %101, %79
  %103 = sdiv exact i64 %102, 56
  %104 = add i64 %100, %103
  store i64 %104, i64* %17, align 8
  br i1 %81, label %76, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %80, i64 1
  %107 = bitcast %"class.CFDE_TextOut::Line"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = inttoptr i64 %108 to %"class.CFDE_TextOut::Line"*
  %110 = icmp eq %"class.CFDE_TextOut::Line"* %109, %73
  br i1 %110, label %76, label %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE19__add_back_capacityEm(%"class.std::__1::deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.CFDE_TextOut::Line"*, align 8
  %4 = alloca %"class.CFDE_TextOut::Line"*, align 8
  %5 = alloca %"struct.std::__1::__split_buffer.221", align 16
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  %11 = icmp eq %"class.CFDE_TextOut::Line"** %8, %10
  %12 = zext i1 %11 to i64
  %13 = add i64 %12, %1
  %14 = udiv i64 %13, 73
  %15 = urem i64 %13, 73
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %14, %17
  %19 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = udiv i64 %20, 73
  %22 = icmp ult i64 %18, %21
  %23 = select i1 %22, i64 %18, i64 %21
  %24 = sub nsw i64 %18, %23
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %"class.CFDE_TextOut::Line"** %8 to i64
  br i1 %25, label %27, label %186

27:                                               ; preds = %2
  %28 = mul i64 %23, -73
  %29 = add i64 %28, %20
  store i64 %29, i64* %19, align 8
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %768, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.CFDE_TextOut::Line"*** %32 to i64*
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = bitcast %"class.CFDE_TextOut::Line"*** %9 to i64*
  %37 = bitcast %"class.CFDE_TextOut::Line"*** %7 to i64*
  %38 = bitcast %"class.CFDE_TextOut::Line"*** %7 to i64**
  br label %39

39:                                               ; preds = %184, %31
  %40 = phi %"class.CFDE_TextOut::Line"** [ %8, %31 ], [ %181, %184 ]
  %41 = phi %"class.CFDE_TextOut::Line"** [ %10, %31 ], [ %185, %184 ]
  %42 = phi i64 [ %23, %31 ], [ %182, %184 ]
  %43 = bitcast %"class.CFDE_TextOut::Line"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %41, i64 1
  store %"class.CFDE_TextOut::Line"** %45, %"class.CFDE_TextOut::Line"*** %9, align 8
  %46 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %32, align 8
  %47 = icmp eq %"class.CFDE_TextOut::Line"** %40, %46
  %48 = ptrtoint %"class.CFDE_TextOut::Line"** %46 to i64
  %49 = bitcast %"class.CFDE_TextOut::Line"** %40 to i64*
  br i1 %47, label %50, label %178

50:                                               ; preds = %39
  %51 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %33, align 8
  %52 = icmp ugt %"class.CFDE_TextOut::Line"** %45, %51
  %53 = ptrtoint %"class.CFDE_TextOut::Line"** %51 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %50
  %55 = ptrtoint %"class.CFDE_TextOut::Line"** %45 to i64
  %56 = sub i64 %55, %53
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = sdiv i64 %58, -2
  %60 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %45, i64 %59
  %61 = sub i64 %48, %55
  %62 = ashr exact i64 %61, 3
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast %"class.CFDE_TextOut::Line"** %60 to i8*
  %66 = bitcast %"class.CFDE_TextOut::Line"** %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %61, i1 false) #12
  %67 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi %"class.CFDE_TextOut::Line"** [ %45, %54 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %60, i64 %62
  store %"class.CFDE_TextOut::Line"** %70, %"class.CFDE_TextOut::Line"*** %7, align 8
  %71 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %69, i64 %59
  store %"class.CFDE_TextOut::Line"** %71, %"class.CFDE_TextOut::Line"*** %9, align 8
  %72 = bitcast %"class.CFDE_TextOut::Line"** %70 to i64*
  br label %178

73:                                               ; preds = %50
  %74 = sub i64 %48, %53
  %75 = ashr exact i64 %74, 2
  %76 = icmp eq i64 %74, 0
  %77 = select i1 %76, i64 1, i64 %75
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call void @abort() #14
  unreachable

80:                                               ; preds = %73
  %81 = lshr i64 %77, 2
  %82 = shl i64 %77, 3
  %83 = tail call i8* @_Znwm(i64 %82) #13
  %84 = bitcast i8* %83 to %"class.CFDE_TextOut::Line"**
  %85 = ptrtoint i8* %83 to i64
  %86 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %84, i64 %81
  %87 = ptrtoint %"class.CFDE_TextOut::Line"** %86 to i64
  %88 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %84, i64 %77
  %89 = ptrtoint %"class.CFDE_TextOut::Line"** %88 to i64
  %90 = ptrtoint %"class.CFDE_TextOut::Line"** %45 to i64
  %91 = sub i64 %48, %90
  %92 = ashr exact i64 %91, 3
  %93 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %86, i64 %92
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %170, label %95

95:                                               ; preds = %80
  %96 = add i64 %91, -8
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95, %101
  %102 = phi %"class.CFDE_TextOut::Line"** [ %109, %101 ], [ %86, %95 ]
  %103 = phi i64 [ %110, %101 ], [ %87, %95 ]
  %104 = phi %"class.CFDE_TextOut::Line"** [ %111, %101 ], [ %45, %95 ]
  %105 = phi i64 [ %112, %101 ], [ %99, %95 ]
  %106 = bitcast %"class.CFDE_TextOut::Line"** %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %102, i64 1
  %110 = ptrtoint %"class.CFDE_TextOut::Line"** %109 to i64
  %111 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %104, i64 1
  %112 = add i64 %105, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !30

114:                                              ; preds = %101
  %115 = ptrtoint %"class.CFDE_TextOut::Line"** %109 to i64
  br label %116

116:                                              ; preds = %95, %114
  %117 = phi %"class.CFDE_TextOut::Line"** [ %86, %95 ], [ %109, %114 ]
  %118 = phi i64 [ %87, %95 ], [ %115, %114 ]
  %119 = phi %"class.CFDE_TextOut::Line"** [ %45, %95 ], [ %111, %114 ]
  %120 = icmp ult i64 %96, 56
  br i1 %120, label %167, label %121

121:                                              ; preds = %116, %121
  %122 = phi %"class.CFDE_TextOut::Line"** [ %163, %121 ], [ %117, %116 ]
  %123 = phi i64 [ %164, %121 ], [ %118, %116 ]
  %124 = phi %"class.CFDE_TextOut::Line"** [ %165, %121 ], [ %119, %116 ]
  %125 = bitcast %"class.CFDE_TextOut::Line"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = inttoptr i64 %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, i64 1
  %129 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %124, i64 1
  %130 = bitcast %"class.CFDE_TextOut::Line"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.CFDE_TextOut::Line"** %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, i64 2
  %134 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %124, i64 2
  %135 = bitcast %"class.CFDE_TextOut::Line"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.CFDE_TextOut::Line"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, i64 3
  %139 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %124, i64 3
  %140 = bitcast %"class.CFDE_TextOut::Line"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.CFDE_TextOut::Line"** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, i64 4
  %144 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %124, i64 4
  %145 = bitcast %"class.CFDE_TextOut::Line"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.CFDE_TextOut::Line"** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, i64 5
  %149 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %124, i64 5
  %150 = bitcast %"class.CFDE_TextOut::Line"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.CFDE_TextOut::Line"** %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, i64 6
  %154 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %124, i64 6
  %155 = bitcast %"class.CFDE_TextOut::Line"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.CFDE_TextOut::Line"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, i64 7
  %159 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %124, i64 7
  %160 = bitcast %"class.CFDE_TextOut::Line"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.CFDE_TextOut::Line"** %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %122, i64 8
  %164 = ptrtoint %"class.CFDE_TextOut::Line"** %163 to i64
  %165 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %124, i64 8
  %166 = icmp eq %"class.CFDE_TextOut::Line"** %93, %163
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %116
  %168 = ptrtoint %"class.CFDE_TextOut::Line"** %93 to i64
  %169 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %33, align 8
  br label %170

170:                                              ; preds = %167, %80
  %171 = phi %"class.CFDE_TextOut::Line"** [ %169, %167 ], [ %51, %80 ]
  %172 = phi i64 [ %168, %167 ], [ %87, %80 ]
  store i64 %85, i64* %35, align 8
  store i64 %87, i64* %36, align 8
  store i64 %172, i64* %37, align 8
  store i64 %89, i64* %34, align 8
  %173 = icmp eq %"class.CFDE_TextOut::Line"** %171, null
  %174 = inttoptr i64 %172 to i64*
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = bitcast %"class.CFDE_TextOut::Line"** %171 to i8*
  tail call void @_ZdlPv(i8* %176) #13
  %177 = load i64*, i64** %38, align 8
  br label %178

178:                                              ; preds = %39, %68, %170, %175
  %179 = phi i64* [ %177, %175 ], [ %174, %170 ], [ %72, %68 ], [ %49, %39 ]
  store i64 %44, i64* %179, align 8
  %180 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %7, align 8
  %181 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %180, i64 1
  store %"class.CFDE_TextOut::Line"** %181, %"class.CFDE_TextOut::Line"*** %7, align 8
  %182 = add i64 %42, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %768, label %184

184:                                              ; preds = %178
  %185 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  br label %39

186:                                              ; preds = %2
  %187 = ptrtoint %"class.CFDE_TextOut::Line"** %10 to i64
  %188 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %189 = bitcast %"class.CFDE_TextOut::Line"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::deque"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = bitcast %"class.CFDE_TextOut::Line"*** %7 to i64*
  %196 = bitcast %"class.CFDE_TextOut::Line"*** %9 to i64*
  %197 = sub i64 %26, %187
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 %194, %198
  %200 = icmp ugt i64 %24, %199
  br i1 %200, label %391, label %201

201:                                              ; preds = %186
  %202 = bitcast %"class.CFDE_TextOut::Line"** %3 to i8*
  %203 = bitcast %"class.CFDE_TextOut::Line"** %3 to i8**
  %204 = icmp eq i64 %190, %26
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %210
  %206 = phi i64 [ %208, %210 ], [ %24, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #12
  %207 = call i8* @_Znwm(i64 4088) #13
  store i8* %207, i8** %203, align 8
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"* %6, %"class.CFDE_TextOut::Line"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #12
  %208 = add i64 %206, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = load i64, i64* %189, align 8
  %212 = load i64, i64* %195, align 8
  %213 = icmp eq i64 %211, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %210, %201
  %215 = phi i64 [ %24, %201 ], [ %208, %210 ]
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %205, %214
  %218 = load i64, i64* %19, align 8
  br label %236

219:                                              ; preds = %214
  %220 = bitcast %"class.CFDE_TextOut::Line"** %4 to i8*
  %221 = bitcast %"class.CFDE_TextOut::Line"** %4 to i8**
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %215, %219 ], [ %225, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #12
  %224 = call i8* @_Znwm(i64 4088) #13
  store i8* %224, i8** %221, align 8
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"* %6, %"class.CFDE_TextOut::Line"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #12
  %225 = add i64 %223, -1
  %226 = load i64, i64* %195, align 8
  %227 = load i64, i64* %196, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 8
  %230 = select i1 %229, i64 72, i64 73
  %231 = load i64, i64* %19, align 8
  %232 = add i64 %230, %231
  store i64 %232, i64* %19, align 8
  %233 = icmp eq i64 %225, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %222
  %235 = add i64 %215, %23
  br label %236

236:                                              ; preds = %217, %234
  %237 = phi i64 [ %218, %217 ], [ %232, %234 ]
  %238 = phi i64 [ %23, %217 ], [ %235, %234 ]
  %239 = mul i64 %238, -73
  %240 = add i64 %237, %239
  store i64 %240, i64* %19, align 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %768, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"class.CFDE_TextOut::Line"*** %7 to i64**
  %245 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %7, align 8
  br label %246

246:                                              ; preds = %242, %385
  %247 = phi %"class.CFDE_TextOut::Line"** [ %245, %242 ], [ %388, %385 ]
  %248 = phi i64 [ %238, %242 ], [ %389, %385 ]
  %249 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  %250 = bitcast %"class.CFDE_TextOut::Line"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %249, i64 1
  store %"class.CFDE_TextOut::Line"** %252, %"class.CFDE_TextOut::Line"*** %9, align 8
  %253 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %188, align 8
  %254 = icmp eq %"class.CFDE_TextOut::Line"** %247, %253
  %255 = ptrtoint %"class.CFDE_TextOut::Line"** %253 to i64
  %256 = bitcast %"class.CFDE_TextOut::Line"** %247 to i64*
  br i1 %254, label %257, label %385

257:                                              ; preds = %246
  %258 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %243, align 8
  %259 = icmp ugt %"class.CFDE_TextOut::Line"** %252, %258
  %260 = ptrtoint %"class.CFDE_TextOut::Line"** %258 to i64
  br i1 %259, label %261, label %280

261:                                              ; preds = %257
  %262 = ptrtoint %"class.CFDE_TextOut::Line"** %252 to i64
  %263 = sub i64 %262, %260
  %264 = ashr exact i64 %263, 3
  %265 = add nsw i64 %264, 1
  %266 = sdiv i64 %265, -2
  %267 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %252, i64 %266
  %268 = sub i64 %255, %262
  %269 = ashr exact i64 %268, 3
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = bitcast %"class.CFDE_TextOut::Line"** %267 to i8*
  %273 = bitcast %"class.CFDE_TextOut::Line"** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %268, i1 false) #12
  %274 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  br label %275

275:                                              ; preds = %271, %261
  %276 = phi %"class.CFDE_TextOut::Line"** [ %252, %261 ], [ %274, %271 ]
  %277 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %267, i64 %269
  store %"class.CFDE_TextOut::Line"** %277, %"class.CFDE_TextOut::Line"*** %7, align 8
  %278 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 %266
  store %"class.CFDE_TextOut::Line"** %278, %"class.CFDE_TextOut::Line"*** %9, align 8
  %279 = bitcast %"class.CFDE_TextOut::Line"** %277 to i64*
  br label %385

280:                                              ; preds = %257
  %281 = sub i64 %255, %260
  %282 = ashr exact i64 %281, 2
  %283 = icmp eq i64 %281, 0
  %284 = select i1 %283, i64 1, i64 %282
  %285 = icmp ugt i64 %284, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %280
  call void @abort() #14
  unreachable

287:                                              ; preds = %280
  %288 = lshr i64 %284, 2
  %289 = shl i64 %284, 3
  %290 = call i8* @_Znwm(i64 %289) #13
  %291 = bitcast i8* %290 to %"class.CFDE_TextOut::Line"**
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %291, i64 %288
  %294 = ptrtoint %"class.CFDE_TextOut::Line"** %293 to i64
  %295 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %291, i64 %284
  %296 = ptrtoint %"class.CFDE_TextOut::Line"** %295 to i64
  %297 = ptrtoint %"class.CFDE_TextOut::Line"** %252 to i64
  %298 = sub i64 %255, %297
  %299 = ashr exact i64 %298, 3
  %300 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %293, i64 %299
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %377, label %302

302:                                              ; preds = %287
  %303 = add i64 %298, -8
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %323, label %308

308:                                              ; preds = %302, %308
  %309 = phi %"class.CFDE_TextOut::Line"** [ %316, %308 ], [ %293, %302 ]
  %310 = phi i64 [ %317, %308 ], [ %294, %302 ]
  %311 = phi %"class.CFDE_TextOut::Line"** [ %318, %308 ], [ %252, %302 ]
  %312 = phi i64 [ %319, %308 ], [ %306, %302 ]
  %313 = bitcast %"class.CFDE_TextOut::Line"** %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = inttoptr i64 %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %309, i64 1
  %317 = ptrtoint %"class.CFDE_TextOut::Line"** %316 to i64
  %318 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %311, i64 1
  %319 = add i64 %312, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %308, !llvm.loop !32

321:                                              ; preds = %308
  %322 = ptrtoint %"class.CFDE_TextOut::Line"** %316 to i64
  br label %323

323:                                              ; preds = %302, %321
  %324 = phi %"class.CFDE_TextOut::Line"** [ %293, %302 ], [ %316, %321 ]
  %325 = phi i64 [ %294, %302 ], [ %322, %321 ]
  %326 = phi %"class.CFDE_TextOut::Line"** [ %252, %302 ], [ %318, %321 ]
  %327 = icmp ult i64 %303, 56
  br i1 %327, label %374, label %328

328:                                              ; preds = %323, %328
  %329 = phi %"class.CFDE_TextOut::Line"** [ %370, %328 ], [ %324, %323 ]
  %330 = phi i64 [ %371, %328 ], [ %325, %323 ]
  %331 = phi %"class.CFDE_TextOut::Line"** [ %372, %328 ], [ %326, %323 ]
  %332 = bitcast %"class.CFDE_TextOut::Line"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %329, i64 1
  %336 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %331, i64 1
  %337 = bitcast %"class.CFDE_TextOut::Line"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"class.CFDE_TextOut::Line"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %329, i64 2
  %341 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %331, i64 2
  %342 = bitcast %"class.CFDE_TextOut::Line"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"class.CFDE_TextOut::Line"** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %329, i64 3
  %346 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %331, i64 3
  %347 = bitcast %"class.CFDE_TextOut::Line"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.CFDE_TextOut::Line"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %329, i64 4
  %351 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %331, i64 4
  %352 = bitcast %"class.CFDE_TextOut::Line"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"class.CFDE_TextOut::Line"** %350 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %329, i64 5
  %356 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %331, i64 5
  %357 = bitcast %"class.CFDE_TextOut::Line"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.CFDE_TextOut::Line"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %329, i64 6
  %361 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %331, i64 6
  %362 = bitcast %"class.CFDE_TextOut::Line"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.CFDE_TextOut::Line"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %329, i64 7
  %366 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %331, i64 7
  %367 = bitcast %"class.CFDE_TextOut::Line"** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.CFDE_TextOut::Line"** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %329, i64 8
  %371 = ptrtoint %"class.CFDE_TextOut::Line"** %370 to i64
  %372 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %331, i64 8
  %373 = icmp eq %"class.CFDE_TextOut::Line"** %300, %370
  br i1 %373, label %374, label %328

374:                                              ; preds = %328, %323
  %375 = ptrtoint %"class.CFDE_TextOut::Line"** %300 to i64
  %376 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %243, align 8
  br label %377

377:                                              ; preds = %374, %287
  %378 = phi %"class.CFDE_TextOut::Line"** [ %376, %374 ], [ %258, %287 ]
  %379 = phi i64 [ %375, %374 ], [ %294, %287 ]
  store i64 %292, i64* %191, align 8
  store i64 %294, i64* %196, align 8
  store i64 %379, i64* %195, align 8
  store i64 %296, i64* %189, align 8
  %380 = icmp eq %"class.CFDE_TextOut::Line"** %378, null
  %381 = inttoptr i64 %379 to i64*
  br i1 %380, label %385, label %382

382:                                              ; preds = %377
  %383 = bitcast %"class.CFDE_TextOut::Line"** %378 to i8*
  call void @_ZdlPv(i8* %383) #13
  %384 = load i64*, i64** %244, align 8
  br label %385

385:                                              ; preds = %246, %275, %377, %382
  %386 = phi i64* [ %384, %382 ], [ %381, %377 ], [ %279, %275 ], [ %256, %246 ]
  store i64 %251, i64* %386, align 8
  %387 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %7, align 8
  %388 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %387, i64 1
  store %"class.CFDE_TextOut::Line"** %388, %"class.CFDE_TextOut::Line"*** %7, align 8
  %389 = add i64 %248, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %768, label %246

391:                                              ; preds = %186
  %392 = bitcast %"struct.std::__1::__split_buffer.221"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %392) #12
  %393 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %5, i64 0, i32 0
  %394 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %5, i64 0, i32 1
  %395 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %5, i64 0, i32 2
  %396 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %5, i64 0, i32 3, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %5, i64 0, i32 3, i32 1, i32 0
  %398 = ashr exact i64 %193, 2
  %399 = add nsw i64 %198, %24
  %400 = icmp ult i64 %398, %399
  %401 = select i1 %400, i64 %399, i64 %398
  %402 = sub nsw i64 %198, %23
  %403 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %404 = bitcast %"struct.std::__1::__split_buffer.221"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %404, i8 -86, i64 24, i1 false)
  store %"class.CFDE_TextOut::Line"** null, %"class.CFDE_TextOut::Line"*** %396, align 8
  %405 = bitcast %"class.std::__1::allocator.194"** %397 to %"class.std::__1::__compressed_pair.191"**
  store %"class.std::__1::__compressed_pair.191"* %403, %"class.std::__1::__compressed_pair.191"** %405, align 8
  %406 = icmp eq i64 %401, 0
  br i1 %406, label %414, label %407

407:                                              ; preds = %391
  %408 = icmp ugt i64 %401, 2305843009213693951
  br i1 %408, label %409, label %410

409:                                              ; preds = %407
  tail call void @abort() #14
  unreachable

410:                                              ; preds = %407
  %411 = shl i64 %401, 3
  %412 = tail call i8* @_Znwm(i64 %411) #13
  %413 = bitcast i8* %412 to %"class.CFDE_TextOut::Line"**
  br label %414

414:                                              ; preds = %410, %391
  %415 = phi %"class.CFDE_TextOut::Line"** [ %413, %410 ], [ null, %391 ]
  store %"class.CFDE_TextOut::Line"** %415, %"class.CFDE_TextOut::Line"*** %393, align 16
  %416 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %415, i64 %402
  store %"class.CFDE_TextOut::Line"** %416, %"class.CFDE_TextOut::Line"*** %395, align 16
  store %"class.CFDE_TextOut::Line"** %416, %"class.CFDE_TextOut::Line"*** %394, align 8
  %417 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %415, i64 %401
  store %"class.CFDE_TextOut::Line"** %417, %"class.CFDE_TextOut::Line"*** %396, align 8
  %418 = bitcast %"class.CFDE_TextOut::Line"*** %396 to i64*
  %419 = bitcast %"struct.std::__1::__split_buffer.221"* %5 to i64*
  %420 = bitcast %"class.CFDE_TextOut::Line"*** %394 to i64*
  %421 = bitcast %"class.CFDE_TextOut::Line"*** %395 to i64*
  br label %433

422:                                              ; preds = %567
  %423 = icmp eq i64 %23, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %422
  %425 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  br label %718

426:                                              ; preds = %422
  %427 = bitcast %"class.CFDE_TextOut::Line"*** %9 to i64**
  %428 = bitcast %"class.CFDE_TextOut::Line"*** %396 to i64*
  %429 = bitcast %"struct.std::__1::__split_buffer.221"* %5 to i64*
  %430 = bitcast %"class.CFDE_TextOut::Line"*** %394 to i64*
  %431 = bitcast %"class.CFDE_TextOut::Line"*** %395 to i64*
  %432 = load i64*, i64** %427, align 8
  br label %575

433:                                              ; preds = %573, %414
  %434 = phi %"class.CFDE_TextOut::Line"** [ %417, %414 ], [ %574, %573 ]
  %435 = phi %"class.CFDE_TextOut::Line"** [ %416, %414 ], [ %570, %573 ]
  %436 = phi i64 [ %24, %414 ], [ %571, %573 ]
  %437 = tail call i8* @_Znwm(i64 4088) #13
  %438 = ptrtoint i8* %437 to i64
  %439 = icmp eq %"class.CFDE_TextOut::Line"** %435, %434
  %440 = ptrtoint %"class.CFDE_TextOut::Line"** %434 to i64
  %441 = bitcast %"class.CFDE_TextOut::Line"** %435 to i64*
  br i1 %439, label %442, label %567

442:                                              ; preds = %433
  %443 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %394, align 8
  %444 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %393, align 16
  %445 = icmp ugt %"class.CFDE_TextOut::Line"** %443, %444
  %446 = ptrtoint %"class.CFDE_TextOut::Line"** %444 to i64
  br i1 %445, label %447, label %463

447:                                              ; preds = %442
  %448 = ptrtoint %"class.CFDE_TextOut::Line"** %443 to i64
  %449 = sub i64 %448, %446
  %450 = ashr exact i64 %449, 3
  %451 = add nsw i64 %450, 1
  %452 = sdiv i64 %451, -2
  %453 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %443, i64 %452
  %454 = sub i64 %440, %448
  %455 = ashr exact i64 %454, 3
  %456 = icmp eq i64 %454, 0
  br i1 %456, label %460, label %457

457:                                              ; preds = %447
  %458 = bitcast %"class.CFDE_TextOut::Line"** %453 to i8*
  %459 = bitcast %"class.CFDE_TextOut::Line"** %443 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %458, i8* align 8 %459, i64 %454, i1 false) #12
  br label %460

460:                                              ; preds = %457, %447
  %461 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %453, i64 %455
  store %"class.CFDE_TextOut::Line"** %461, %"class.CFDE_TextOut::Line"*** %395, align 16
  store %"class.CFDE_TextOut::Line"** %453, %"class.CFDE_TextOut::Line"*** %394, align 8
  %462 = bitcast %"class.CFDE_TextOut::Line"** %461 to i64*
  br label %567

463:                                              ; preds = %442
  %464 = sub i64 %440, %446
  %465 = ashr exact i64 %464, 2
  %466 = icmp eq i64 %464, 0
  %467 = select i1 %466, i64 1, i64 %465
  %468 = icmp ugt i64 %467, 2305843009213693951
  br i1 %468, label %469, label %470

469:                                              ; preds = %463
  tail call void @abort() #14
  unreachable

470:                                              ; preds = %463
  %471 = lshr i64 %467, 2
  %472 = shl i64 %467, 3
  %473 = tail call i8* @_Znwm(i64 %472) #13
  %474 = bitcast i8* %473 to %"class.CFDE_TextOut::Line"**
  %475 = ptrtoint i8* %473 to i64
  %476 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %474, i64 %471
  %477 = ptrtoint %"class.CFDE_TextOut::Line"** %476 to i64
  %478 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %474, i64 %467
  %479 = ptrtoint %"class.CFDE_TextOut::Line"** %478 to i64
  %480 = ptrtoint %"class.CFDE_TextOut::Line"** %443 to i64
  %481 = sub i64 %440, %480
  %482 = ashr exact i64 %481, 3
  %483 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %476, i64 %482
  %484 = icmp eq i64 %481, 0
  br i1 %484, label %560, label %485

485:                                              ; preds = %470
  %486 = add i64 %481, -8
  %487 = lshr i64 %486, 3
  %488 = add nuw nsw i64 %487, 1
  %489 = and i64 %488, 7
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %506, label %491

491:                                              ; preds = %485, %491
  %492 = phi %"class.CFDE_TextOut::Line"** [ %499, %491 ], [ %476, %485 ]
  %493 = phi i64 [ %500, %491 ], [ %477, %485 ]
  %494 = phi %"class.CFDE_TextOut::Line"** [ %501, %491 ], [ %443, %485 ]
  %495 = phi i64 [ %502, %491 ], [ %489, %485 ]
  %496 = bitcast %"class.CFDE_TextOut::Line"** %494 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = inttoptr i64 %493 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %492, i64 1
  %500 = ptrtoint %"class.CFDE_TextOut::Line"** %499 to i64
  %501 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %494, i64 1
  %502 = add i64 %495, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %491, !llvm.loop !33

504:                                              ; preds = %491
  %505 = ptrtoint %"class.CFDE_TextOut::Line"** %499 to i64
  br label %506

506:                                              ; preds = %485, %504
  %507 = phi %"class.CFDE_TextOut::Line"** [ %476, %485 ], [ %499, %504 ]
  %508 = phi i64 [ %477, %485 ], [ %505, %504 ]
  %509 = phi %"class.CFDE_TextOut::Line"** [ %443, %485 ], [ %501, %504 ]
  %510 = icmp ult i64 %486, 56
  br i1 %510, label %557, label %511

511:                                              ; preds = %506, %511
  %512 = phi %"class.CFDE_TextOut::Line"** [ %553, %511 ], [ %507, %506 ]
  %513 = phi i64 [ %554, %511 ], [ %508, %506 ]
  %514 = phi %"class.CFDE_TextOut::Line"** [ %555, %511 ], [ %509, %506 ]
  %515 = bitcast %"class.CFDE_TextOut::Line"** %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = inttoptr i64 %513 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %512, i64 1
  %519 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %514, i64 1
  %520 = bitcast %"class.CFDE_TextOut::Line"** %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = bitcast %"class.CFDE_TextOut::Line"** %518 to i64*
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %512, i64 2
  %524 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %514, i64 2
  %525 = bitcast %"class.CFDE_TextOut::Line"** %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = bitcast %"class.CFDE_TextOut::Line"** %523 to i64*
  store i64 %526, i64* %527, align 8
  %528 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %512, i64 3
  %529 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %514, i64 3
  %530 = bitcast %"class.CFDE_TextOut::Line"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = bitcast %"class.CFDE_TextOut::Line"** %528 to i64*
  store i64 %531, i64* %532, align 8
  %533 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %512, i64 4
  %534 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %514, i64 4
  %535 = bitcast %"class.CFDE_TextOut::Line"** %534 to i64*
  %536 = load i64, i64* %535, align 8
  %537 = bitcast %"class.CFDE_TextOut::Line"** %533 to i64*
  store i64 %536, i64* %537, align 8
  %538 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %512, i64 5
  %539 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %514, i64 5
  %540 = bitcast %"class.CFDE_TextOut::Line"** %539 to i64*
  %541 = load i64, i64* %540, align 8
  %542 = bitcast %"class.CFDE_TextOut::Line"** %538 to i64*
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %512, i64 6
  %544 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %514, i64 6
  %545 = bitcast %"class.CFDE_TextOut::Line"** %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = bitcast %"class.CFDE_TextOut::Line"** %543 to i64*
  store i64 %546, i64* %547, align 8
  %548 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %512, i64 7
  %549 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %514, i64 7
  %550 = bitcast %"class.CFDE_TextOut::Line"** %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = bitcast %"class.CFDE_TextOut::Line"** %548 to i64*
  store i64 %551, i64* %552, align 8
  %553 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %512, i64 8
  %554 = ptrtoint %"class.CFDE_TextOut::Line"** %553 to i64
  %555 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %514, i64 8
  %556 = icmp eq %"class.CFDE_TextOut::Line"** %483, %553
  br i1 %556, label %557, label %511

557:                                              ; preds = %511, %506
  %558 = ptrtoint %"class.CFDE_TextOut::Line"** %483 to i64
  %559 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %393, align 16
  br label %560

560:                                              ; preds = %557, %470
  %561 = phi %"class.CFDE_TextOut::Line"** [ %559, %557 ], [ %444, %470 ]
  %562 = phi i64 [ %558, %557 ], [ %477, %470 ]
  store i64 %475, i64* %419, align 16
  store i64 %477, i64* %420, align 8
  store i64 %562, i64* %421, align 16
  store i64 %479, i64* %418, align 8
  %563 = icmp eq %"class.CFDE_TextOut::Line"** %561, null
  %564 = inttoptr i64 %562 to i64*
  br i1 %563, label %567, label %565

565:                                              ; preds = %560
  %566 = bitcast %"class.CFDE_TextOut::Line"** %561 to i8*
  tail call void @_ZdlPv(i8* %566) #13
  br label %567

567:                                              ; preds = %433, %460, %560, %565
  %568 = phi i64* [ %564, %565 ], [ %564, %560 ], [ %462, %460 ], [ %441, %433 ]
  store i64 %438, i64* %568, align 8
  %569 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %395, align 16
  %570 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %569, i64 1
  store %"class.CFDE_TextOut::Line"** %570, %"class.CFDE_TextOut::Line"*** %395, align 16
  %571 = add i64 %436, -1
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %422, label %573

573:                                              ; preds = %567
  %574 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %396, align 8
  br label %433

575:                                              ; preds = %426, %708
  %576 = phi %"class.CFDE_TextOut::Line"** [ %570, %426 ], [ %712, %708 ]
  %577 = phi i64* [ %432, %426 ], [ %717, %708 ]
  %578 = phi i64 [ %23, %426 ], [ %715, %708 ]
  %579 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %396, align 8
  %580 = icmp eq %"class.CFDE_TextOut::Line"** %576, %579
  %581 = ptrtoint %"class.CFDE_TextOut::Line"** %579 to i64
  %582 = bitcast %"class.CFDE_TextOut::Line"** %576 to i64*
  br i1 %580, label %583, label %708

583:                                              ; preds = %575
  %584 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %394, align 8
  %585 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %393, align 16
  %586 = icmp ugt %"class.CFDE_TextOut::Line"** %584, %585
  %587 = ptrtoint %"class.CFDE_TextOut::Line"** %585 to i64
  br i1 %586, label %588, label %604

588:                                              ; preds = %583
  %589 = ptrtoint %"class.CFDE_TextOut::Line"** %584 to i64
  %590 = sub i64 %589, %587
  %591 = ashr exact i64 %590, 3
  %592 = add nsw i64 %591, 1
  %593 = sdiv i64 %592, -2
  %594 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %584, i64 %593
  %595 = sub i64 %581, %589
  %596 = ashr exact i64 %595, 3
  %597 = icmp eq i64 %595, 0
  br i1 %597, label %601, label %598

598:                                              ; preds = %588
  %599 = bitcast %"class.CFDE_TextOut::Line"** %594 to i8*
  %600 = bitcast %"class.CFDE_TextOut::Line"** %584 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %599, i8* align 8 %600, i64 %595, i1 false) #12
  br label %601

601:                                              ; preds = %598, %588
  %602 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %594, i64 %596
  store %"class.CFDE_TextOut::Line"** %602, %"class.CFDE_TextOut::Line"*** %395, align 16
  store %"class.CFDE_TextOut::Line"** %594, %"class.CFDE_TextOut::Line"*** %394, align 8
  %603 = bitcast %"class.CFDE_TextOut::Line"** %602 to i64*
  br label %708

604:                                              ; preds = %583
  %605 = sub i64 %581, %587
  %606 = ashr exact i64 %605, 2
  %607 = icmp eq i64 %605, 0
  %608 = select i1 %607, i64 1, i64 %606
  %609 = icmp ugt i64 %608, 2305843009213693951
  br i1 %609, label %610, label %611

610:                                              ; preds = %604
  tail call void @abort() #14
  unreachable

611:                                              ; preds = %604
  %612 = lshr i64 %608, 2
  %613 = shl i64 %608, 3
  %614 = tail call i8* @_Znwm(i64 %613) #13
  %615 = bitcast i8* %614 to %"class.CFDE_TextOut::Line"**
  %616 = ptrtoint i8* %614 to i64
  %617 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %615, i64 %612
  %618 = ptrtoint %"class.CFDE_TextOut::Line"** %617 to i64
  %619 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %615, i64 %608
  %620 = ptrtoint %"class.CFDE_TextOut::Line"** %619 to i64
  %621 = ptrtoint %"class.CFDE_TextOut::Line"** %584 to i64
  %622 = sub i64 %581, %621
  %623 = ashr exact i64 %622, 3
  %624 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %617, i64 %623
  %625 = icmp eq i64 %622, 0
  br i1 %625, label %701, label %626

626:                                              ; preds = %611
  %627 = add i64 %622, -8
  %628 = lshr i64 %627, 3
  %629 = add nuw nsw i64 %628, 1
  %630 = and i64 %629, 7
  %631 = icmp eq i64 %630, 0
  br i1 %631, label %647, label %632

632:                                              ; preds = %626, %632
  %633 = phi %"class.CFDE_TextOut::Line"** [ %640, %632 ], [ %617, %626 ]
  %634 = phi i64 [ %641, %632 ], [ %618, %626 ]
  %635 = phi %"class.CFDE_TextOut::Line"** [ %642, %632 ], [ %584, %626 ]
  %636 = phi i64 [ %643, %632 ], [ %630, %626 ]
  %637 = bitcast %"class.CFDE_TextOut::Line"** %635 to i64*
  %638 = load i64, i64* %637, align 8
  %639 = inttoptr i64 %634 to i64*
  store i64 %638, i64* %639, align 8
  %640 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %633, i64 1
  %641 = ptrtoint %"class.CFDE_TextOut::Line"** %640 to i64
  %642 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %635, i64 1
  %643 = add i64 %636, -1
  %644 = icmp eq i64 %643, 0
  br i1 %644, label %645, label %632, !llvm.loop !34

645:                                              ; preds = %632
  %646 = ptrtoint %"class.CFDE_TextOut::Line"** %640 to i64
  br label %647

647:                                              ; preds = %626, %645
  %648 = phi %"class.CFDE_TextOut::Line"** [ %617, %626 ], [ %640, %645 ]
  %649 = phi i64 [ %618, %626 ], [ %646, %645 ]
  %650 = phi %"class.CFDE_TextOut::Line"** [ %584, %626 ], [ %642, %645 ]
  %651 = icmp ult i64 %627, 56
  br i1 %651, label %698, label %652

652:                                              ; preds = %647, %652
  %653 = phi %"class.CFDE_TextOut::Line"** [ %694, %652 ], [ %648, %647 ]
  %654 = phi i64 [ %695, %652 ], [ %649, %647 ]
  %655 = phi %"class.CFDE_TextOut::Line"** [ %696, %652 ], [ %650, %647 ]
  %656 = bitcast %"class.CFDE_TextOut::Line"** %655 to i64*
  %657 = load i64, i64* %656, align 8
  %658 = inttoptr i64 %654 to i64*
  store i64 %657, i64* %658, align 8
  %659 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %653, i64 1
  %660 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %655, i64 1
  %661 = bitcast %"class.CFDE_TextOut::Line"** %660 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = bitcast %"class.CFDE_TextOut::Line"** %659 to i64*
  store i64 %662, i64* %663, align 8
  %664 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %653, i64 2
  %665 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %655, i64 2
  %666 = bitcast %"class.CFDE_TextOut::Line"** %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = bitcast %"class.CFDE_TextOut::Line"** %664 to i64*
  store i64 %667, i64* %668, align 8
  %669 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %653, i64 3
  %670 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %655, i64 3
  %671 = bitcast %"class.CFDE_TextOut::Line"** %670 to i64*
  %672 = load i64, i64* %671, align 8
  %673 = bitcast %"class.CFDE_TextOut::Line"** %669 to i64*
  store i64 %672, i64* %673, align 8
  %674 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %653, i64 4
  %675 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %655, i64 4
  %676 = bitcast %"class.CFDE_TextOut::Line"** %675 to i64*
  %677 = load i64, i64* %676, align 8
  %678 = bitcast %"class.CFDE_TextOut::Line"** %674 to i64*
  store i64 %677, i64* %678, align 8
  %679 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %653, i64 5
  %680 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %655, i64 5
  %681 = bitcast %"class.CFDE_TextOut::Line"** %680 to i64*
  %682 = load i64, i64* %681, align 8
  %683 = bitcast %"class.CFDE_TextOut::Line"** %679 to i64*
  store i64 %682, i64* %683, align 8
  %684 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %653, i64 6
  %685 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %655, i64 6
  %686 = bitcast %"class.CFDE_TextOut::Line"** %685 to i64*
  %687 = load i64, i64* %686, align 8
  %688 = bitcast %"class.CFDE_TextOut::Line"** %684 to i64*
  store i64 %687, i64* %688, align 8
  %689 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %653, i64 7
  %690 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %655, i64 7
  %691 = bitcast %"class.CFDE_TextOut::Line"** %690 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = bitcast %"class.CFDE_TextOut::Line"** %689 to i64*
  store i64 %692, i64* %693, align 8
  %694 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %653, i64 8
  %695 = ptrtoint %"class.CFDE_TextOut::Line"** %694 to i64
  %696 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %655, i64 8
  %697 = icmp eq %"class.CFDE_TextOut::Line"** %624, %694
  br i1 %697, label %698, label %652

698:                                              ; preds = %652, %647
  %699 = ptrtoint %"class.CFDE_TextOut::Line"** %624 to i64
  %700 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %393, align 16
  br label %701

701:                                              ; preds = %698, %611
  %702 = phi %"class.CFDE_TextOut::Line"** [ %700, %698 ], [ %585, %611 ]
  %703 = phi i64 [ %699, %698 ], [ %618, %611 ]
  store i64 %616, i64* %429, align 16
  store i64 %618, i64* %430, align 8
  store i64 %703, i64* %431, align 16
  store i64 %620, i64* %428, align 8
  %704 = icmp eq %"class.CFDE_TextOut::Line"** %702, null
  %705 = inttoptr i64 %703 to i64*
  br i1 %704, label %708, label %706

706:                                              ; preds = %701
  %707 = bitcast %"class.CFDE_TextOut::Line"** %702 to i8*
  tail call void @_ZdlPv(i8* %707) #13
  br label %708

708:                                              ; preds = %575, %601, %701, %706
  %709 = phi i64* [ %705, %706 ], [ %705, %701 ], [ %603, %601 ], [ %582, %575 ]
  %710 = load i64, i64* %577, align 8
  store i64 %710, i64* %709, align 8
  %711 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %395, align 16
  %712 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %711, i64 1
  store %"class.CFDE_TextOut::Line"** %712, %"class.CFDE_TextOut::Line"*** %395, align 16
  %713 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  %714 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %713, i64 1
  store %"class.CFDE_TextOut::Line"** %714, %"class.CFDE_TextOut::Line"*** %9, align 8
  %715 = add i64 %578, -1
  %716 = icmp eq i64 %715, 0
  %717 = bitcast %"class.CFDE_TextOut::Line"** %714 to i64*
  br i1 %716, label %718, label %575

718:                                              ; preds = %708, %424
  %719 = phi %"class.CFDE_TextOut::Line"** [ %570, %424 ], [ %712, %708 ]
  %720 = phi %"class.CFDE_TextOut::Line"** [ %425, %424 ], [ %714, %708 ]
  %721 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %7, align 8
  %722 = icmp eq %"class.CFDE_TextOut::Line"** %721, %720
  br i1 %722, label %723, label %763

723:                                              ; preds = %718
  %724 = ptrtoint %"class.CFDE_TextOut::Line"** %721 to i64
  %725 = ptrtoint %"class.CFDE_TextOut::Line"** %719 to i64
  %726 = bitcast %"class.CFDE_TextOut::Line"*** %395 to i64*
  br label %731

727:                                              ; preds = %763
  %728 = load i64, i64* %195, align 8
  %729 = bitcast %"class.CFDE_TextOut::Line"*** %395 to i64*
  %730 = load i64, i64* %729, align 16
  br label %731

731:                                              ; preds = %723, %727
  %732 = phi i64* [ %726, %723 ], [ %729, %727 ]
  %733 = phi i64 [ %725, %723 ], [ %730, %727 ]
  %734 = phi i64 [ %724, %723 ], [ %728, %727 ]
  %735 = phi %"class.CFDE_TextOut::Line"** [ %720, %723 ], [ %766, %727 ]
  %736 = ptrtoint %"class.CFDE_TextOut::Line"** %735 to i64
  %737 = load i64, i64* %191, align 8
  %738 = bitcast %"struct.std::__1::__split_buffer.221"* %5 to i64*
  %739 = bitcast %"class.CFDE_TextOut::Line"*** %394 to i64*
  %740 = bitcast %"struct.std::__1::__split_buffer.221"* %5 to <2 x i64>*
  %741 = load <2 x i64>, <2 x i64>* %740, align 16
  store i64 %737, i64* %738, align 16
  %742 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %741, <2 x i64>* %742, align 8
  store i64 %736, i64* %739, align 8
  store i64 %733, i64* %195, align 8
  store i64 %734, i64* %732, align 8
  %743 = load i64, i64* %189, align 8
  %744 = bitcast %"class.CFDE_TextOut::Line"*** %396 to i64*
  %745 = load i64, i64* %744, align 8
  store i64 %745, i64* %189, align 8
  store i64 %743, i64* %744, align 8
  %746 = load i64, i64* %19, align 8
  %747 = mul i64 %23, -73
  %748 = add i64 %746, %747
  store i64 %748, i64* %19, align 8
  %749 = inttoptr i64 %734 to %"class.CFDE_TextOut::Line"**
  %750 = icmp eq %"class.CFDE_TextOut::Line"** %735, %749
  br i1 %750, label %758, label %751

751:                                              ; preds = %731
  %752 = getelementptr %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %749, i64 -1
  %753 = ptrtoint %"class.CFDE_TextOut::Line"** %752 to i64
  %754 = sub i64 %753, %736
  %755 = lshr i64 %754, 3
  %756 = xor i64 %755, -1
  %757 = getelementptr %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %749, i64 %756
  store %"class.CFDE_TextOut::Line"** %757, %"class.CFDE_TextOut::Line"*** %395, align 16
  br label %758

758:                                              ; preds = %751, %731
  %759 = icmp eq i64 %737, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %758
  %761 = inttoptr i64 %737 to i8*
  call void @_ZdlPv(i8* %761) #13
  br label %762

762:                                              ; preds = %758, %760
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %392) #12
  br label %768

763:                                              ; preds = %718, %763
  %764 = phi %"class.CFDE_TextOut::Line"** [ %765, %763 ], [ %721, %718 ]
  %765 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %764, i64 -1
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.221"* nonnull %5, %"class.CFDE_TextOut::Line"** dereferenceable(8) %765)
  %766 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %9, align 8
  %767 = icmp eq %"class.CFDE_TextOut::Line"** %765, %766
  br i1 %767, label %727, label %763

768:                                              ; preds = %385, %178, %236, %27, %762
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"*, %"class.CFDE_TextOut::Line"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %5, align 8
  %7 = icmp eq %"class.CFDE_TextOut::Line"** %4, %6
  %8 = ptrtoint %"class.CFDE_TextOut::Line"** %6 to i64
  %9 = bitcast %"class.CFDE_TextOut::Line"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %13, align 8
  %15 = icmp ugt %"class.CFDE_TextOut::Line"** %12, %14
  %16 = ptrtoint %"class.CFDE_TextOut::Line"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.CFDE_TextOut::Line"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %12, i64 %22
  %24 = ptrtoint %"class.CFDE_TextOut::Line"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.CFDE_TextOut::Line"** %23 to i8*
  %30 = bitcast %"class.CFDE_TextOut::Line"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.CFDE_TextOut::Line"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %23, i64 %26
  store %"class.CFDE_TextOut::Line"** %34, %"class.CFDE_TextOut::Line"*** %3, align 8
  %35 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %33, i64 %22
  store %"class.CFDE_TextOut::Line"** %35, %"class.CFDE_TextOut::Line"*** %11, align 8
  %36 = bitcast %"class.CFDE_TextOut::Line"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.CFDE_TextOut::Line"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"class.CFDE_TextOut::Line"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %50, i64 %47
  %53 = ptrtoint %"class.CFDE_TextOut::Line"** %52 to i64
  %54 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %50, i64 %43
  %55 = ptrtoint %"class.CFDE_TextOut::Line"** %54 to i64
  %56 = ptrtoint %"class.CFDE_TextOut::Line"** %12 to i64
  %57 = ptrtoint %"class.CFDE_TextOut::Line"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.CFDE_TextOut::Line"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.CFDE_TextOut::Line"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.CFDE_TextOut::Line"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %69, i64 1
  %77 = ptrtoint %"class.CFDE_TextOut::Line"** %76 to i64
  %78 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !35

81:                                               ; preds = %68
  %82 = ptrtoint %"class.CFDE_TextOut::Line"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.CFDE_TextOut::Line"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.CFDE_TextOut::Line"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.CFDE_TextOut::Line"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.CFDE_TextOut::Line"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.CFDE_TextOut::Line"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 1
  %96 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, i64 1
  %97 = bitcast %"class.CFDE_TextOut::Line"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.CFDE_TextOut::Line"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 2
  %101 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, i64 2
  %102 = bitcast %"class.CFDE_TextOut::Line"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.CFDE_TextOut::Line"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 3
  %106 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, i64 3
  %107 = bitcast %"class.CFDE_TextOut::Line"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.CFDE_TextOut::Line"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 4
  %111 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, i64 4
  %112 = bitcast %"class.CFDE_TextOut::Line"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.CFDE_TextOut::Line"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 5
  %116 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, i64 5
  %117 = bitcast %"class.CFDE_TextOut::Line"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.CFDE_TextOut::Line"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 6
  %121 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, i64 6
  %122 = bitcast %"class.CFDE_TextOut::Line"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.CFDE_TextOut::Line"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 7
  %126 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, i64 7
  %127 = bitcast %"class.CFDE_TextOut::Line"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.CFDE_TextOut::Line"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %89, i64 8
  %131 = ptrtoint %"class.CFDE_TextOut::Line"** %130 to i64
  %132 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %91, i64 8
  %133 = icmp eq %"class.CFDE_TextOut::Line"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.CFDE_TextOut::Line"** %60 to i64
  %136 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.CFDE_TextOut::Line"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.CFDE_TextOut::Line"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.CFDE_TextOut::Line"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.CFDE_TextOut::Line"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.CFDE_TextOut::Line"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"class.CFDE_TextOut::Line"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.CFDE_TextOut::Line"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %153 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %152, i64 1
  store %"class.CFDE_TextOut::Line"** %153, %"class.CFDE_TextOut::Line"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"*, %"class.CFDE_TextOut::Line"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %5, align 8
  %7 = icmp eq %"class.CFDE_TextOut::Line"** %4, %6
  %8 = ptrtoint %"class.CFDE_TextOut::Line"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %12, align 8
  %14 = icmp ult %"class.CFDE_TextOut::Line"** %11, %13
  %15 = bitcast %"class.CFDE_TextOut::Line"*** %12 to i64*
  %16 = ptrtoint %"class.CFDE_TextOut::Line"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.CFDE_TextOut::Line"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %11, i64 %22
  %24 = ptrtoint %"class.CFDE_TextOut::Line"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %23, i64 %29
  %31 = bitcast %"class.CFDE_TextOut::Line"** %30 to i8*
  %32 = bitcast %"class.CFDE_TextOut::Line"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.CFDE_TextOut::Line"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.CFDE_TextOut::Line"** [ %30, %27 ], [ %23, %17 ]
  store %"class.CFDE_TextOut::Line"** %36, %"class.CFDE_TextOut::Line"*** %3, align 8
  %37 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %35, i64 %22
  store %"class.CFDE_TextOut::Line"** %37, %"class.CFDE_TextOut::Line"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"class.CFDE_TextOut::Line"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %51, i64 %48
  %54 = ptrtoint %"class.CFDE_TextOut::Line"** %53 to i64
  %55 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %51, i64 %43
  %56 = ptrtoint %"class.CFDE_TextOut::Line"** %55 to i64
  %57 = ptrtoint %"class.CFDE_TextOut::Line"** %4 to i64
  %58 = ptrtoint %"class.CFDE_TextOut::Line"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.CFDE_TextOut::Line"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.CFDE_TextOut::Line"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.CFDE_TextOut::Line"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %70, i64 1
  %78 = ptrtoint %"class.CFDE_TextOut::Line"** %77 to i64
  %79 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !36

82:                                               ; preds = %69
  %83 = ptrtoint %"class.CFDE_TextOut::Line"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.CFDE_TextOut::Line"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.CFDE_TextOut::Line"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.CFDE_TextOut::Line"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.CFDE_TextOut::Line"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.CFDE_TextOut::Line"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 1
  %97 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 1
  %98 = bitcast %"class.CFDE_TextOut::Line"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.CFDE_TextOut::Line"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 2
  %102 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 2
  %103 = bitcast %"class.CFDE_TextOut::Line"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.CFDE_TextOut::Line"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 3
  %107 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 3
  %108 = bitcast %"class.CFDE_TextOut::Line"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.CFDE_TextOut::Line"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 4
  %112 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 4
  %113 = bitcast %"class.CFDE_TextOut::Line"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.CFDE_TextOut::Line"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 5
  %117 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 5
  %118 = bitcast %"class.CFDE_TextOut::Line"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.CFDE_TextOut::Line"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 6
  %122 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 6
  %123 = bitcast %"class.CFDE_TextOut::Line"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.CFDE_TextOut::Line"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 7
  %127 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 7
  %128 = bitcast %"class.CFDE_TextOut::Line"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.CFDE_TextOut::Line"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 8
  %132 = ptrtoint %"class.CFDE_TextOut::Line"** %131 to i64
  %133 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 8
  %134 = icmp eq %"class.CFDE_TextOut::Line"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.CFDE_TextOut::Line"** %61 to i64
  %137 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.CFDE_TextOut::Line"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.CFDE_TextOut::Line"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.CFDE_TextOut::Line"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.CFDE_TextOut::Line"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.CFDE_TextOut::Line"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.CFDE_TextOut::Line"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %148, i64 -1
  %150 = bitcast %"class.CFDE_TextOut::Line"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.CFDE_TextOut::Line"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %154 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %153, i64 -1
  store %"class.CFDE_TextOut::Line"** %154, %"class.CFDE_TextOut::Line"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.221"*, %"class.CFDE_TextOut::Line"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %0, i64 0, i32 1
  %4 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %0, i64 0, i32 0
  %6 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %5, align 8
  %7 = icmp eq %"class.CFDE_TextOut::Line"** %4, %6
  %8 = ptrtoint %"class.CFDE_TextOut::Line"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %0, i64 0, i32 2
  %11 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %12, align 8
  %14 = icmp ult %"class.CFDE_TextOut::Line"** %11, %13
  %15 = bitcast %"class.CFDE_TextOut::Line"*** %12 to i64*
  %16 = ptrtoint %"class.CFDE_TextOut::Line"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.CFDE_TextOut::Line"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %11, i64 %22
  %24 = ptrtoint %"class.CFDE_TextOut::Line"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %23, i64 %29
  %31 = bitcast %"class.CFDE_TextOut::Line"** %30 to i8*
  %32 = bitcast %"class.CFDE_TextOut::Line"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.CFDE_TextOut::Line"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.CFDE_TextOut::Line"** [ %30, %27 ], [ %23, %17 ]
  store %"class.CFDE_TextOut::Line"** %36, %"class.CFDE_TextOut::Line"*** %3, align 8
  %37 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %35, i64 %22
  store %"class.CFDE_TextOut::Line"** %37, %"class.CFDE_TextOut::Line"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.221"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"class.CFDE_TextOut::Line"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %51, i64 %48
  %54 = ptrtoint %"class.CFDE_TextOut::Line"** %53 to i64
  %55 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %51, i64 %43
  %56 = ptrtoint %"class.CFDE_TextOut::Line"** %55 to i64
  %57 = ptrtoint %"class.CFDE_TextOut::Line"** %4 to i64
  %58 = ptrtoint %"class.CFDE_TextOut::Line"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.CFDE_TextOut::Line"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.CFDE_TextOut::Line"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.CFDE_TextOut::Line"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %70, i64 1
  %78 = ptrtoint %"class.CFDE_TextOut::Line"** %77 to i64
  %79 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !37

82:                                               ; preds = %69
  %83 = ptrtoint %"class.CFDE_TextOut::Line"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.CFDE_TextOut::Line"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.CFDE_TextOut::Line"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.CFDE_TextOut::Line"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.CFDE_TextOut::Line"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.CFDE_TextOut::Line"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 1
  %97 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 1
  %98 = bitcast %"class.CFDE_TextOut::Line"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.CFDE_TextOut::Line"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 2
  %102 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 2
  %103 = bitcast %"class.CFDE_TextOut::Line"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.CFDE_TextOut::Line"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 3
  %107 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 3
  %108 = bitcast %"class.CFDE_TextOut::Line"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.CFDE_TextOut::Line"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 4
  %112 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 4
  %113 = bitcast %"class.CFDE_TextOut::Line"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.CFDE_TextOut::Line"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 5
  %117 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 5
  %118 = bitcast %"class.CFDE_TextOut::Line"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.CFDE_TextOut::Line"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 6
  %122 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 6
  %123 = bitcast %"class.CFDE_TextOut::Line"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.CFDE_TextOut::Line"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 7
  %127 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 7
  %128 = bitcast %"class.CFDE_TextOut::Line"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.CFDE_TextOut::Line"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %90, i64 8
  %132 = ptrtoint %"class.CFDE_TextOut::Line"** %131 to i64
  %133 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %92, i64 8
  %134 = icmp eq %"class.CFDE_TextOut::Line"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.CFDE_TextOut::Line"** %61 to i64
  %137 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.CFDE_TextOut::Line"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.CFDE_TextOut::Line"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.CFDE_TextOut::Line"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.CFDE_TextOut::Line"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.CFDE_TextOut::Line"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.CFDE_TextOut::Line"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %148, i64 -1
  %150 = bitcast %"class.CFDE_TextOut::Line"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.CFDE_TextOut::Line"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %3, align 8
  %154 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %153, i64 -1
  store %"class.CFDE_TextOut::Line"** %154, %"class.CFDE_TextOut::Line"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi(%"class.std::__1::vector.164"*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i32* %2 to i8*
  %5 = bitcast i32* %2 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 2
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %130, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i32*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds i32, i32* %16, i64 %1
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %128, label %20

20:                                               ; preds = %15
  %21 = shl nsw i64 %1, 2
  %22 = add i64 %21, -4
  %23 = lshr exact i64 %22, 2
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 8
  br i1 %25, label %26, label %47

26:                                               ; preds = %105, %47, %20
  %27 = phi i32* [ %16, %47 ], [ %16, %20 ], [ %59, %105 ]
  %28 = ptrtoint i32* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i32, i32* %16, i64 %29
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %26, %37
  %38 = phi i32* [ %41, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %42, %37 ], [ %35, %26 ]
  %40 = load i32, i32* %2, align 4
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds i32, i32* %38, i64 1
  %42 = add i64 %39, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %37, !llvm.loop !38

44:                                               ; preds = %37, %26
  %45 = phi i32* [ %27, %26 ], [ %41, %37 ]
  %46 = icmp ult i64 %32, 28
  br i1 %46, label %107, label %109

47:                                               ; preds = %20
  %48 = shl nsw i64 %1, 2
  %49 = add i64 %48, -4
  %50 = lshr exact i64 %49, 2
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr i32, i32* %16, i64 %51
  %53 = getelementptr i8, i8* %5, i64 1
  %54 = icmp ugt i8* %53, %17
  %55 = icmp ugt i32* %52, %2
  %56 = and i1 %54, %55
  br i1 %56, label %26, label %57

57:                                               ; preds = %47
  %58 = and i64 %24, 9223372036854775800
  %59 = getelementptr i32, i32* %16, i64 %58
  %60 = add nsw i64 %58, -8
  %61 = lshr exact i64 %60, 3
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %57
  %66 = sub nuw nsw i64 %62, %63
  %67 = load i32, i32* %2, align 4, !alias.scope !39
  %68 = insertelement <4 x i32> undef, i32 %67, i32 0
  %69 = shufflevector <4 x i32> %68, <4 x i32> undef, <4 x i32> zeroinitializer
  %70 = insertelement <4 x i32> undef, i32 %67, i32 0
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <4 x i32> zeroinitializer
  %72 = load i32, i32* %2, align 4, !alias.scope !39
  %73 = insertelement <4 x i32> undef, i32 %72, i32 0
  %74 = shufflevector <4 x i32> %73, <4 x i32> undef, <4 x i32> zeroinitializer
  %75 = insertelement <4 x i32> undef, i32 %72, i32 0
  %76 = shufflevector <4 x i32> %75, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %89, %77 ]
  %79 = phi i64 [ %66, %65 ], [ %90, %77 ]
  %80 = getelementptr i32, i32* %16, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %81, align 4, !alias.scope !42, !noalias !39
  %82 = getelementptr i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %83, align 4, !alias.scope !42, !noalias !39
  %84 = or i64 %78, 8
  %85 = getelementptr i32, i32* %16, i64 %84
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %86, align 4, !alias.scope !42, !noalias !39
  %87 = getelementptr i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %88, align 4, !alias.scope !42, !noalias !39
  %89 = add i64 %78, 16
  %90 = add i64 %79, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !44

92:                                               ; preds = %77, %57
  %93 = phi i64 [ 0, %57 ], [ %89, %77 ]
  %94 = icmp eq i64 %63, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr i32, i32* %16, i64 %93
  %97 = load i32, i32* %2, align 4, !alias.scope !39
  %98 = insertelement <4 x i32> undef, i32 %97, i32 0
  %99 = shufflevector <4 x i32> %98, <4 x i32> undef, <4 x i32> zeroinitializer
  %100 = insertelement <4 x i32> undef, i32 %97, i32 0
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> zeroinitializer
  %102 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %102, align 4, !alias.scope !42, !noalias !39
  %103 = getelementptr i32, i32* %96, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %104, align 4, !alias.scope !42, !noalias !39
  br label %105

105:                                              ; preds = %92, %95
  %106 = icmp eq i64 %24, %58
  br i1 %106, label %107, label %26

107:                                              ; preds = %44, %109, %105
  %108 = ptrtoint i32* %18 to i64
  br label %128

109:                                              ; preds = %44, %109
  %110 = phi i32* [ %126, %109 ], [ %45, %44 ]
  %111 = load i32, i32* %2, align 4
  store i32 %111, i32* %110, align 4
  %112 = getelementptr inbounds i32, i32* %110, i64 1
  %113 = load i32, i32* %2, align 4
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds i32, i32* %110, i64 2
  %115 = load i32, i32* %2, align 4
  store i32 %115, i32* %114, align 4
  %116 = getelementptr inbounds i32, i32* %110, i64 3
  %117 = load i32, i32* %2, align 4
  store i32 %117, i32* %116, align 4
  %118 = getelementptr inbounds i32, i32* %110, i64 4
  %119 = load i32, i32* %2, align 4
  store i32 %119, i32* %118, align 4
  %120 = getelementptr inbounds i32, i32* %110, i64 5
  %121 = load i32, i32* %2, align 4
  store i32 %121, i32* %120, align 4
  %122 = getelementptr inbounds i32, i32* %110, i64 6
  %123 = load i32, i32* %2, align 4
  store i32 %123, i32* %122, align 4
  %124 = getelementptr inbounds i32, i32* %110, i64 7
  %125 = load i32, i32* %2, align 4
  store i32 %125, i32* %124, align 4
  %126 = getelementptr inbounds i32, i32* %110, i64 8
  %127 = icmp eq i32* %126, %18
  br i1 %127, label %107, label %109, !llvm.loop !46

128:                                              ; preds = %15, %107
  %129 = phi i64 [ %108, %107 ], [ %11, %15 ]
  store i64 %129, i64* %10, align 8
  br label %292

130:                                              ; preds = %3
  %131 = bitcast %"class.std::__1::vector.164"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %11, %132
  %134 = ashr exact i64 %133, 2
  %135 = add i64 %134, %1
  %136 = icmp ugt i64 %135, 4611686018427387903
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector.164"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #14
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %8, %132
  %141 = ashr exact i64 %140, 2
  %142 = icmp ult i64 %141, 2305843009213693951
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 1
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 4611686018427387903
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @abort() #14
  unreachable

151:                                              ; preds = %139, %148
  %152 = phi i64 [ %146, %148 ], [ 4611686018427387903, %139 ]
  %153 = shl i64 %152, 2
  %154 = tail call i8* @_Znwm(i64 %153) #13
  %155 = bitcast i8* %154 to i32*
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i32* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds i32, i32* %158, i64 %134
  %160 = getelementptr inbounds i32, i32* %158, i64 %157
  %161 = getelementptr inbounds i32, i32* %159, i64 %1
  %162 = shl nsw i64 %1, 2
  %163 = add i64 %162, -4
  %164 = lshr exact i64 %163, 2
  %165 = add nuw nsw i64 %164, 1
  %166 = icmp ult i64 %165, 8
  br i1 %166, label %229, label %167

167:                                              ; preds = %156
  %168 = bitcast i32* %159 to i8*
  %169 = shl nsw i64 %1, 2
  %170 = add i64 %169, -4
  %171 = lshr exact i64 %170, 2
  %172 = add nsw i64 %134, %171
  %173 = add i64 %172, 1
  %174 = getelementptr i32, i32* %158, i64 %173
  %175 = getelementptr i8, i8* %4, i64 1
  %176 = icmp ugt i8* %175, %168
  %177 = icmp ugt i32* %174, %2
  %178 = and i1 %176, %177
  br i1 %178, label %229, label %179

179:                                              ; preds = %167
  %180 = and i64 %165, 9223372036854775800
  %181 = getelementptr i32, i32* %159, i64 %180
  %182 = add nsw i64 %180, -8
  %183 = lshr exact i64 %182, 3
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %182, 0
  br i1 %186, label %214, label %187

187:                                              ; preds = %179
  %188 = sub nuw nsw i64 %184, %185
  %189 = load i32, i32* %2, align 4, !alias.scope !47
  %190 = insertelement <4 x i32> undef, i32 %189, i32 0
  %191 = shufflevector <4 x i32> %190, <4 x i32> undef, <4 x i32> zeroinitializer
  %192 = insertelement <4 x i32> undef, i32 %189, i32 0
  %193 = shufflevector <4 x i32> %192, <4 x i32> undef, <4 x i32> zeroinitializer
  %194 = load i32, i32* %2, align 4, !alias.scope !47
  %195 = insertelement <4 x i32> undef, i32 %194, i32 0
  %196 = shufflevector <4 x i32> %195, <4 x i32> undef, <4 x i32> zeroinitializer
  %197 = insertelement <4 x i32> undef, i32 %194, i32 0
  %198 = shufflevector <4 x i32> %197, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %199

199:                                              ; preds = %199, %187
  %200 = phi i64 [ 0, %187 ], [ %211, %199 ]
  %201 = phi i64 [ %188, %187 ], [ %212, %199 ]
  %202 = getelementptr i32, i32* %159, i64 %200
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %191, <4 x i32>* %203, align 4, !alias.scope !50, !noalias !47
  %204 = getelementptr i32, i32* %202, i64 4
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %193, <4 x i32>* %205, align 4, !alias.scope !50, !noalias !47
  %206 = or i64 %200, 8
  %207 = getelementptr i32, i32* %159, i64 %206
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %196, <4 x i32>* %208, align 4, !alias.scope !50, !noalias !47
  %209 = getelementptr i32, i32* %207, i64 4
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %198, <4 x i32>* %210, align 4, !alias.scope !50, !noalias !47
  %211 = add i64 %200, 16
  %212 = add i64 %201, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %199, !llvm.loop !52

214:                                              ; preds = %199, %179
  %215 = phi i64 [ 0, %179 ], [ %211, %199 ]
  %216 = icmp eq i64 %185, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %214
  %218 = getelementptr i32, i32* %159, i64 %215
  %219 = load i32, i32* %2, align 4, !alias.scope !47
  %220 = insertelement <4 x i32> undef, i32 %219, i32 0
  %221 = shufflevector <4 x i32> %220, <4 x i32> undef, <4 x i32> zeroinitializer
  %222 = insertelement <4 x i32> undef, i32 %219, i32 0
  %223 = shufflevector <4 x i32> %222, <4 x i32> undef, <4 x i32> zeroinitializer
  %224 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %221, <4 x i32>* %224, align 4, !alias.scope !50, !noalias !47
  %225 = getelementptr i32, i32* %218, i64 4
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %223, <4 x i32>* %226, align 4, !alias.scope !50, !noalias !47
  br label %227

227:                                              ; preds = %214, %217
  %228 = icmp eq i64 %165, %180
  br i1 %228, label %270, label %229

229:                                              ; preds = %227, %167, %156
  %230 = phi i32* [ %159, %167 ], [ %159, %156 ], [ %181, %227 ]
  %231 = ptrtoint i32* %230 to i64
  %232 = add i64 %134, %1
  %233 = add i64 %232, -1
  %234 = getelementptr i32, i32* %158, i64 %233
  %235 = ptrtoint i32* %234 to i64
  %236 = sub i64 %235, %231
  %237 = lshr i64 %236, 2
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 7
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %229, %241
  %242 = phi i32* [ %245, %241 ], [ %230, %229 ]
  %243 = phi i64 [ %246, %241 ], [ %239, %229 ]
  %244 = load i32, i32* %2, align 4
  store i32 %244, i32* %242, align 4
  %245 = getelementptr inbounds i32, i32* %242, i64 1
  %246 = add i64 %243, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %241, !llvm.loop !53

248:                                              ; preds = %241, %229
  %249 = phi i32* [ %230, %229 ], [ %245, %241 ]
  %250 = icmp ult i64 %236, 28
  br i1 %250, label %270, label %251

251:                                              ; preds = %248, %251
  %252 = phi i32* [ %268, %251 ], [ %249, %248 ]
  %253 = load i32, i32* %2, align 4
  store i32 %253, i32* %252, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32, i32* %2, align 4
  store i32 %255, i32* %254, align 4
  %256 = getelementptr inbounds i32, i32* %252, i64 2
  %257 = load i32, i32* %2, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 3
  %259 = load i32, i32* %2, align 4
  store i32 %259, i32* %258, align 4
  %260 = getelementptr inbounds i32, i32* %252, i64 4
  %261 = load i32, i32* %2, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 5
  %263 = load i32, i32* %2, align 4
  store i32 %263, i32* %262, align 4
  %264 = getelementptr inbounds i32, i32* %252, i64 6
  %265 = load i32, i32* %2, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 7
  %267 = load i32, i32* %2, align 4
  store i32 %267, i32* %266, align 4
  %268 = getelementptr inbounds i32, i32* %252, i64 8
  %269 = icmp eq i32* %161, %268
  br i1 %269, label %270, label %251, !llvm.loop !54

270:                                              ; preds = %248, %251, %227
  %271 = ptrtoint i32* %160 to i64
  %272 = ptrtoint i32* %161 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %0, i64 0, i32 0, i32 0
  %274 = load i32*, i32** %273, align 8
  %275 = load i64, i64* %10, align 8
  %276 = ptrtoint i32* %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 2
  %279 = sub nsw i64 0, %278
  %280 = getelementptr inbounds i32, i32* %159, i64 %279
  %281 = ptrtoint i32* %280 to i64
  %282 = icmp sgt i64 %277, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %270
  %284 = bitcast i32* %280 to i8*
  %285 = bitcast i32* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %284, i8* align 4 %285, i64 %277, i1 false) #12
  %286 = load i32*, i32** %273, align 8
  br label %287

287:                                              ; preds = %270, %283
  %288 = phi i32* [ %274, %270 ], [ %286, %283 ]
  store i64 %281, i64* %131, align 8
  store i64 %272, i64* %10, align 8
  store i64 %271, i64* %7, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast i32* %288 to i8*
  tail call void @_ZdlPv(i8* %291) #13
  br label %292

292:                                              ; preds = %290, %287, %128
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut4LineENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.CFDE_TextOut::Line"*, align 8
  %3 = alloca %"class.CFDE_TextOut::Line"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.221", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 72
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -73
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %10, align 8
  %12 = bitcast %"class.CFDE_TextOut::Line"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %11, i64 1
  store %"class.CFDE_TextOut::Line"** %14, %"class.CFDE_TextOut::Line"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %17, align 8
  %19 = icmp eq %"class.CFDE_TextOut::Line"** %16, %18
  %20 = ptrtoint %"class.CFDE_TextOut::Line"** %18 to i64
  %21 = bitcast %"class.CFDE_TextOut::Line"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %23, align 8
  %25 = icmp ugt %"class.CFDE_TextOut::Line"** %14, %24
  %26 = ptrtoint %"class.CFDE_TextOut::Line"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.CFDE_TextOut::Line"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %14, i64 %32
  %34 = ptrtoint %"class.CFDE_TextOut::Line"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.CFDE_TextOut::Line"** %33 to i8*
  %40 = bitcast %"class.CFDE_TextOut::Line"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #12
  %41 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.CFDE_TextOut::Line"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %33, i64 %36
  store %"class.CFDE_TextOut::Line"** %44, %"class.CFDE_TextOut::Line"*** %15, align 8
  %45 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %43, i64 %32
  store %"class.CFDE_TextOut::Line"** %45, %"class.CFDE_TextOut::Line"*** %10, align 8
  %46 = bitcast %"class.CFDE_TextOut::Line"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.CFDE_TextOut::Line"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #13
  %60 = bitcast i8* %59 to %"class.CFDE_TextOut::Line"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %60, i64 %57
  %63 = ptrtoint %"class.CFDE_TextOut::Line"** %62 to i64
  %64 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %60, i64 %53
  %65 = ptrtoint %"class.CFDE_TextOut::Line"** %64 to i64
  %66 = ptrtoint %"class.CFDE_TextOut::Line"** %14 to i64
  %67 = ptrtoint %"class.CFDE_TextOut::Line"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.CFDE_TextOut::Line"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.CFDE_TextOut::Line"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.CFDE_TextOut::Line"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %79, i64 1
  %87 = ptrtoint %"class.CFDE_TextOut::Line"** %86 to i64
  %88 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !55

91:                                               ; preds = %78
  %92 = ptrtoint %"class.CFDE_TextOut::Line"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.CFDE_TextOut::Line"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.CFDE_TextOut::Line"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.CFDE_TextOut::Line"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.CFDE_TextOut::Line"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.CFDE_TextOut::Line"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %99, i64 1
  %106 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %101, i64 1
  %107 = bitcast %"class.CFDE_TextOut::Line"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.CFDE_TextOut::Line"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %99, i64 2
  %111 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %101, i64 2
  %112 = bitcast %"class.CFDE_TextOut::Line"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.CFDE_TextOut::Line"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %99, i64 3
  %116 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %101, i64 3
  %117 = bitcast %"class.CFDE_TextOut::Line"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.CFDE_TextOut::Line"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %99, i64 4
  %121 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %101, i64 4
  %122 = bitcast %"class.CFDE_TextOut::Line"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.CFDE_TextOut::Line"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %99, i64 5
  %126 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %101, i64 5
  %127 = bitcast %"class.CFDE_TextOut::Line"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.CFDE_TextOut::Line"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %99, i64 6
  %131 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %101, i64 6
  %132 = bitcast %"class.CFDE_TextOut::Line"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.CFDE_TextOut::Line"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %99, i64 7
  %136 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %101, i64 7
  %137 = bitcast %"class.CFDE_TextOut::Line"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.CFDE_TextOut::Line"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %99, i64 8
  %141 = ptrtoint %"class.CFDE_TextOut::Line"** %140 to i64
  %142 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %101, i64 8
  %143 = icmp eq %"class.CFDE_TextOut::Line"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.CFDE_TextOut::Line"** %70 to i64
  %146 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.CFDE_TextOut::Line"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.CFDE_TextOut::Line"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.CFDE_TextOut::Line"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.CFDE_TextOut::Line"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.CFDE_TextOut::Line"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  %156 = bitcast %"class.CFDE_TextOut::Line"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %15, align 8
  %161 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %160, i64 1
  store %"class.CFDE_TextOut::Line"** %161, %"class.CFDE_TextOut::Line"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.CFDE_TextOut::Line"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.CFDE_TextOut::Line"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.CFDE_TextOut::Line"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.CFDE_TextOut::Line"**
  %181 = inttoptr i64 %169 to %"class.CFDE_TextOut::Line"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.CFDE_TextOut::Line"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #12
  %186 = tail call i8* @_Znwm(i64 4088) #13
  %187 = bitcast %"class.CFDE_TextOut::Line"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"* %163, %"class.CFDE_TextOut::Line"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #12
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.CFDE_TextOut::Line"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #12
  %190 = tail call i8* @_Znwm(i64 4088) #13
  %191 = bitcast %"class.CFDE_TextOut::Line"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"* %163, %"class.CFDE_TextOut::Line"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #12
  %192 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %167, align 8
  %193 = bitcast %"class.CFDE_TextOut::Line"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %192, i64 1
  store %"class.CFDE_TextOut::Line"** %195, %"class.CFDE_TextOut::Line"*** %167, align 8
  %196 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %164, align 8
  %197 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %172, align 8
  %198 = icmp eq %"class.CFDE_TextOut::Line"** %196, %197
  %199 = ptrtoint %"class.CFDE_TextOut::Line"** %197 to i64
  %200 = bitcast %"class.CFDE_TextOut::Line"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %202, align 8
  %204 = icmp ugt %"class.CFDE_TextOut::Line"** %195, %203
  %205 = ptrtoint %"class.CFDE_TextOut::Line"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.CFDE_TextOut::Line"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %195, i64 %211
  %213 = ptrtoint %"class.CFDE_TextOut::Line"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.CFDE_TextOut::Line"** %212 to i8*
  %219 = bitcast %"class.CFDE_TextOut::Line"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #12
  %220 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.CFDE_TextOut::Line"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %212, i64 %215
  store %"class.CFDE_TextOut::Line"** %223, %"class.CFDE_TextOut::Line"*** %164, align 8
  %224 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %222, i64 %211
  store %"class.CFDE_TextOut::Line"** %224, %"class.CFDE_TextOut::Line"*** %167, align 8
  %225 = bitcast %"class.CFDE_TextOut::Line"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #13
  %237 = bitcast i8* %236 to %"class.CFDE_TextOut::Line"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %237, i64 %234
  %240 = ptrtoint %"class.CFDE_TextOut::Line"** %239 to i64
  %241 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %237, i64 %230
  %242 = ptrtoint %"class.CFDE_TextOut::Line"** %241 to i64
  %243 = ptrtoint %"class.CFDE_TextOut::Line"** %195 to i64
  %244 = ptrtoint %"class.CFDE_TextOut::Line"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.CFDE_TextOut::Line"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.CFDE_TextOut::Line"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.CFDE_TextOut::Line"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %256, i64 1
  %264 = ptrtoint %"class.CFDE_TextOut::Line"** %263 to i64
  %265 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !56

268:                                              ; preds = %255
  %269 = ptrtoint %"class.CFDE_TextOut::Line"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.CFDE_TextOut::Line"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.CFDE_TextOut::Line"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.CFDE_TextOut::Line"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.CFDE_TextOut::Line"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.CFDE_TextOut::Line"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 1
  %283 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %278, i64 1
  %284 = bitcast %"class.CFDE_TextOut::Line"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.CFDE_TextOut::Line"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 2
  %288 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %278, i64 2
  %289 = bitcast %"class.CFDE_TextOut::Line"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.CFDE_TextOut::Line"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 3
  %293 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %278, i64 3
  %294 = bitcast %"class.CFDE_TextOut::Line"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.CFDE_TextOut::Line"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 4
  %298 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %278, i64 4
  %299 = bitcast %"class.CFDE_TextOut::Line"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.CFDE_TextOut::Line"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 5
  %303 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %278, i64 5
  %304 = bitcast %"class.CFDE_TextOut::Line"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.CFDE_TextOut::Line"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 6
  %308 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %278, i64 6
  %309 = bitcast %"class.CFDE_TextOut::Line"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.CFDE_TextOut::Line"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 7
  %313 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %278, i64 7
  %314 = bitcast %"class.CFDE_TextOut::Line"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.CFDE_TextOut::Line"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %276, i64 8
  %318 = ptrtoint %"class.CFDE_TextOut::Line"** %317 to i64
  %319 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %278, i64 8
  %320 = icmp eq %"class.CFDE_TextOut::Line"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.CFDE_TextOut::Line"** %247 to i64
  %323 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.CFDE_TextOut::Line"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.CFDE_TextOut::Line"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.CFDE_TextOut::Line"** %325 to i8*
  call void @_ZdlPv(i8* %330) #13
  %331 = bitcast %"class.CFDE_TextOut::Line"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %164, align 8
  %336 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %335, i64 1
  store %"class.CFDE_TextOut::Line"** %336, %"class.CFDE_TextOut::Line"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.221"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #12
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.221", %"struct.std::__1::__split_buffer.221"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.221"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.CFDE_TextOut::Line"** null, %"class.CFDE_TextOut::Line"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.194"** %342 to %"class.std::__1::__compressed_pair.191"**
  store %"class.std::__1::__compressed_pair.191"* %346, %"class.std::__1::__compressed_pair.191"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #13
  %354 = bitcast i8* %353 to %"class.CFDE_TextOut::Line"**
  %355 = bitcast %"struct.std::__1::__split_buffer.221"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %354, i64 %171
  store %"class.CFDE_TextOut::Line"** %356, %"class.CFDE_TextOut::Line"*** %340, align 8
  store %"class.CFDE_TextOut::Line"** %356, %"class.CFDE_TextOut::Line"*** %339, align 8
  %357 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %354, i64 %345
  store %"class.CFDE_TextOut::Line"** %357, %"class.CFDE_TextOut::Line"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4088) #13
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.CFDE_TextOut::Line"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.CFDE_TextOut::Line"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.CFDE_TextOut::Line"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %356, i64 %370
  store %"class.CFDE_TextOut::Line"** %371, %"class.CFDE_TextOut::Line"*** %340, align 8
  store %"class.CFDE_TextOut::Line"** %371, %"class.CFDE_TextOut::Line"*** %339, align 8
  %372 = ptrtoint %"class.CFDE_TextOut::Line"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.221"* %4 to i64*
  %382 = bitcast %"class.CFDE_TextOut::Line"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #13
  %386 = bitcast i8* %385 to %"class.CFDE_TextOut::Line"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %386, i64 %383
  %389 = ptrtoint %"class.CFDE_TextOut::Line"** %388 to i64
  %390 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %386, i64 %377
  %391 = ptrtoint %"class.CFDE_TextOut::Line"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.CFDE_TextOut::Line"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.CFDE_TextOut::Line"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #13
  %394 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %164, align 8
  %395 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %167, align 8
  %396 = ptrtoint %"class.CFDE_TextOut::Line"** %395 to i64
  %397 = ptrtoint %"class.CFDE_TextOut::Line"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.CFDE_TextOut::Line"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.CFDE_TextOut::Line"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.CFDE_TextOut::Line"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.CFDE_TextOut::Line"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %406, i64 1
  store %"class.CFDE_TextOut::Line"** %408, %"class.CFDE_TextOut::Line"*** %340, align 8
  %409 = icmp eq %"class.CFDE_TextOut::Line"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.CFDE_TextOut::Line"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.221"* %4 to i64*
  %413 = bitcast %"class.CFDE_TextOut::Line"*** %339 to i64*
  %414 = bitcast %"class.CFDE_TextOut::Line"*** %340 to i64*
  %415 = bitcast %"class.CFDE_TextOut::Line"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.CFDE_TextOut::Line"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.221"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.CFDE_TextOut::Line"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.CFDE_TextOut::Line"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.CFDE_TextOut::Line"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.CFDE_TextOut::Line"**
  %441 = inttoptr i64 %434 to %"class.CFDE_TextOut::Line"**
  %442 = icmp eq %"class.CFDE_TextOut::Line"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %441, i64 -1
  %445 = ptrtoint %"class.CFDE_TextOut::Line"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %441, i64 %448
  store %"class.CFDE_TextOut::Line"** %449, %"class.CFDE_TextOut::Line"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #13
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #12
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.CFDE_TextOut::Line"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.CFDE_TextOut::Line"*, %"class.CFDE_TextOut::Line"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut4LineERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.221"* nonnull %4, %"class.CFDE_TextOut::Line"** dereferenceable(8) %457)
  %458 = load %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"*** %167, align 8
  %459 = icmp eq %"class.CFDE_TextOut::Line"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI11TextCharPosNS_9allocatorIS1_EEE8__appendEmRKS1_(%"class.std::__1::vector.200"*, i64, %class.TextCharPos* dereferenceable(44)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %class.TextCharPos** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %class.TextCharPos** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 44
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %25, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %class.TextCharPos*
  %15 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %23, label %19

17:                                               ; preds = %19
  %18 = ptrtoint %class.TextCharPos* %15 to i64
  br label %23

19:                                               ; preds = %13, %19
  %20 = phi %class.TextCharPos* [ %21, %19 ], [ %14, %13 ]
  tail call void @_ZN11TextCharPosC1ERKS_(%class.TextCharPos* %20, %class.TextCharPos* dereferenceable(44) %2) #12
  %21 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %20, i64 1
  %22 = icmp eq %class.TextCharPos* %21, %15
  br i1 %22, label %17, label %19

23:                                               ; preds = %13, %17
  %24 = phi i64 [ %18, %17 ], [ %9, %13 ]
  store i64 %24, i64* %8, align 8
  br label %91

25:                                               ; preds = %3
  %26 = bitcast %"class.std::__1::vector.200"* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %9, %27
  %29 = sdiv exact i64 %28, 44
  %30 = add i64 %29, %1
  %31 = icmp ugt i64 %30, 419244183493398900
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.std::__1::vector.200"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #14
  unreachable

34:                                               ; preds = %25
  %35 = sub i64 %6, %27
  %36 = sdiv exact i64 %35, 44
  %37 = icmp ult i64 %36, 209622091746699450
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  %39 = shl nsw i64 %36, 1
  %40 = icmp ult i64 %39, %30
  %41 = select i1 %40, i64 %30, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %34, %38
  %44 = phi i64 [ %41, %38 ], [ 419244183493398900, %34 ]
  %45 = mul i64 %44, 44
  %46 = tail call i8* @_Znwm(i64 %45) #13
  %47 = bitcast i8* %46 to %class.TextCharPos*
  br label %48

48:                                               ; preds = %38, %43
  %49 = phi i64 [ %44, %43 ], [ 0, %38 ]
  %50 = phi %class.TextCharPos* [ %47, %43 ], [ null, %38 ]
  %51 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %50, i64 %29
  %52 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %50, i64 %49
  %53 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %51, i64 %1
  br label %54

54:                                               ; preds = %48, %54
  %55 = phi %class.TextCharPos* [ %56, %54 ], [ %51, %48 ]
  tail call void @_ZN11TextCharPosC1ERKS_(%class.TextCharPos* %55, %class.TextCharPos* dereferenceable(44) %2) #12
  %56 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %55, i64 1
  %57 = icmp eq %class.TextCharPos* %53, %56
  br i1 %57, label %58, label %54

58:                                               ; preds = %54
  %59 = ptrtoint %class.TextCharPos* %52 to i64
  %60 = ptrtoint %class.TextCharPos* %53 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %0, i64 0, i32 0, i32 0
  %62 = load %class.TextCharPos*, %class.TextCharPos** %61, align 8
  %63 = load %class.TextCharPos*, %class.TextCharPos** %7, align 8
  %64 = icmp eq %class.TextCharPos* %63, %62
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = ptrtoint %class.TextCharPos* %62 to i64
  br label %76

67:                                               ; preds = %58, %67
  %68 = phi %class.TextCharPos* [ %70, %67 ], [ %51, %58 ]
  %69 = phi %class.TextCharPos* [ %71, %67 ], [ %63, %58 ]
  %70 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %68, i64 -1
  %71 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %69, i64 -1
  tail call void @_ZN11TextCharPosC1ERKS_(%class.TextCharPos* %70, %class.TextCharPos* dereferenceable(44) %71) #12
  %72 = icmp eq %class.TextCharPos* %71, %62
  br i1 %72, label %73, label %67

73:                                               ; preds = %67
  %74 = load i64, i64* %26, align 8
  %75 = load %class.TextCharPos*, %class.TextCharPos** %7, align 8
  br label %76

76:                                               ; preds = %65, %73
  %77 = phi %class.TextCharPos* [ %62, %65 ], [ %75, %73 ]
  %78 = phi %class.TextCharPos* [ %51, %65 ], [ %70, %73 ]
  %79 = phi i64 [ %66, %65 ], [ %74, %73 ]
  %80 = ptrtoint %class.TextCharPos* %78 to i64
  store i64 %80, i64* %26, align 8
  store i64 %60, i64* %8, align 8
  store i64 %59, i64* %5, align 8
  %81 = inttoptr i64 %79 to %class.TextCharPos*
  %82 = icmp eq %class.TextCharPos* %77, %81
  br i1 %82, label %87, label %83

83:                                               ; preds = %76, %83
  %84 = phi %class.TextCharPos* [ %85, %83 ], [ %77, %76 ]
  %85 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %84, i64 -1
  tail call void @_ZN11TextCharPosD1Ev(%class.TextCharPos* %85) #12
  %86 = icmp eq %class.TextCharPos* %85, %81
  br i1 %86, label %87, label %83

87:                                               ; preds = %83, %76
  %88 = icmp eq i64 %79, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = inttoptr i64 %79 to i8*
  tail call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %89, %87, %23
  ret void
}

declare void @_ZN11TextCharPosC1ERKS_(%class.TextCharPos*, %class.TextCharPos* dereferenceable(44)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE6assignINS_16__deque_iteratorIS2_PKS2_RS8_PKS9_lLl0EEEEEvT_SE_PNS_9enable_ifIXsr33__is_cpp17_random_access_iteratorISE_EE5valueEvE4typeE(%"class.std::__1::deque.179"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint %"struct.CFDE_TextOut::Piece"* %2 to i64
  %8 = icmp eq %"struct.CFDE_TextOut::Piece"* %4, %2
  br i1 %8, label %71, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.CFDE_TextOut::Piece"* %4 to i64
  %11 = ptrtoint %"struct.CFDE_TextOut::Piece"** %3 to i64
  %12 = ptrtoint %"struct.CFDE_TextOut::Piece"** %1 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 3
  %15 = mul nsw i64 %14, 102
  %16 = bitcast %"struct.CFDE_TextOut::Piece"** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %10, %17
  %19 = sdiv exact i64 %18, 40
  %20 = add nsw i64 %19, %15
  %21 = bitcast %"struct.CFDE_TextOut::Piece"** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %7, %22
  %24 = sdiv exact i64 %23, -40
  %25 = add i64 %20, %24
  %26 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 %25, %27
  br i1 %28, label %29, label %71

29:                                               ; preds = %9
  %30 = icmp eq i64 %27, 0
  br i1 %30, label %51, label %31

31:                                               ; preds = %29
  %32 = sdiv exact i64 %23, 40
  %33 = add nsw i64 %32, %27
  %34 = icmp sgt i64 %33, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %31
  %36 = udiv i64 %33, 102
  %37 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %1, i64 %36
  %38 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %37, align 8
  %39 = urem i64 %33, 102
  %40 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %38, i64 %39
  %41 = ptrtoint %"struct.CFDE_TextOut::Piece"* %40 to i64
  br label %51

42:                                               ; preds = %31
  %43 = sub nsw i64 101, %33
  %44 = sdiv i64 %43, -102
  %45 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %1, i64 %44
  %46 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %45, align 8
  %47 = srem i64 %43, 102
  %48 = sub nsw i64 101, %47
  %49 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %46, i64 %48
  %50 = ptrtoint %"struct.CFDE_TextOut::Piece"* %49 to i64
  br label %51

51:                                               ; preds = %29, %35, %42
  %52 = phi i64 [ %7, %29 ], [ %41, %35 ], [ %50, %42 ]
  %53 = phi %"struct.CFDE_TextOut::Piece"** [ %1, %29 ], [ %37, %35 ], [ %45, %42 ]
  %54 = inttoptr i64 %52 to %"struct.CFDE_TextOut::Piece"*
  %55 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = udiv i64 %58, 102
  %60 = urem i64 %58, 102
  %61 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %56, i64 %59
  %62 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 2
  %63 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %62, align 8
  %64 = icmp eq %"struct.CFDE_TextOut::Piece"** %63, %56
  br i1 %64, label %68, label %65

65:                                               ; preds = %51
  %66 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %61, align 8
  %67 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %66, i64 %60
  br label %68

68:                                               ; preds = %51, %65
  %69 = phi %"struct.CFDE_TextOut::Piece"* [ %67, %65 ], [ null, %51 ]
  %70 = tail call { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__14copyIN12CFDE_TextOut5PieceEPKS2_RS3_PKS4_lLl0ES2_PS2_RS2_PS8_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENSB_IT_T0_T1_T2_T3_XT4_EEESN_SH_(%"struct.CFDE_TextOut::Piece"** %1, %"struct.CFDE_TextOut::Piece"* %2, %"struct.CFDE_TextOut::Piece"** %53, %"struct.CFDE_TextOut::Piece"* %54, %"struct.CFDE_TextOut::Piece"** %61, %"struct.CFDE_TextOut::Piece"* %69)
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE8__appendINS_16__deque_iteratorIS2_PKS2_RS8_PKS9_lLl0EEEEEvT_SE_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISE_EE5valueEvE4typeE(%"class.std::__1::deque.179"* %0, %"struct.CFDE_TextOut::Piece"** %53, %"struct.CFDE_TextOut::Piece"* %54, %"struct.CFDE_TextOut::Piece"** %3, %"struct.CFDE_TextOut::Piece"* %4, i8* null)
  br label %90

71:                                               ; preds = %6, %9
  %72 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 1
  %73 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = udiv i64 %75, 102
  %77 = urem i64 %75, 102
  %78 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %73, i64 %76
  %79 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 2
  %80 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %79, align 8
  %81 = icmp eq %"struct.CFDE_TextOut::Piece"** %80, %73
  br i1 %81, label %85, label %82

82:                                               ; preds = %71
  %83 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %78, align 8
  %84 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %83, i64 %77
  br label %85

85:                                               ; preds = %71, %82
  %86 = phi %"struct.CFDE_TextOut::Piece"* [ %84, %82 ], [ null, %71 ]
  %87 = tail call { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__14copyIN12CFDE_TextOut5PieceEPKS2_RS3_PKS4_lLl0ES2_PS2_RS2_PS8_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENSB_IT_T0_T1_T2_T3_XT4_EEESN_SH_(%"struct.CFDE_TextOut::Piece"** %1, %"struct.CFDE_TextOut::Piece"* %2, %"struct.CFDE_TextOut::Piece"** %3, %"struct.CFDE_TextOut::Piece"* %4, %"struct.CFDE_TextOut::Piece"** %78, %"struct.CFDE_TextOut::Piece"* %86)
  %88 = extractvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %87, 0
  %89 = extractvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %87, 1
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE14__erase_to_endENS_16__deque_iteratorIS2_PKS2_RS7_PKS8_lLl0EEE(%"class.std::__1::deque.179"* %0, %"struct.CFDE_TextOut::Piece"** %88, %"struct.CFDE_TextOut::Piece"* %89)
  br label %90

90:                                               ; preds = %85, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__14copyIN12CFDE_TextOut5PieceEPKS2_RS3_PKS4_lLl0ES2_PS2_RS2_PS8_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENSB_IT_T0_T1_T2_T3_XT4_EEESN_SH_(%"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*) local_unnamed_addr #0 comdat {
  %7 = ptrtoint %"struct.CFDE_TextOut::Piece"* %1 to i64
  %8 = icmp eq %"struct.CFDE_TextOut::Piece"* %3, %1
  br i1 %8, label %133, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.CFDE_TextOut::Piece"* %3 to i64
  %11 = ptrtoint %"struct.CFDE_TextOut::Piece"** %2 to i64
  %12 = ptrtoint %"struct.CFDE_TextOut::Piece"** %0 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 3
  %15 = mul nsw i64 %14, 102
  %16 = bitcast %"struct.CFDE_TextOut::Piece"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %10, %17
  %19 = sdiv exact i64 %18, 40
  %20 = add nsw i64 %19, %15
  %21 = bitcast %"struct.CFDE_TextOut::Piece"** %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %7, %22
  %24 = sdiv exact i64 %23, -40
  %25 = add i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %27, label %133

27:                                               ; preds = %9, %127
  %28 = phi %"struct.CFDE_TextOut::Piece"* [ %101, %127 ], [ %5, %9 ]
  %29 = phi %"struct.CFDE_TextOut::Piece"** [ %100, %127 ], [ %4, %9 ]
  %30 = phi i64 [ %102, %127 ], [ %25, %9 ]
  %31 = phi i64 [ %129, %127 ], [ %7, %9 ]
  %32 = phi %"struct.CFDE_TextOut::Piece"** [ %128, %127 ], [ %0, %9 ]
  %33 = inttoptr i64 %31 to %"struct.CFDE_TextOut::Piece"*
  %34 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %32, align 8
  %35 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %34, i64 102
  %36 = ptrtoint %"struct.CFDE_TextOut::Piece"* %35 to i64
  %37 = sub i64 %36, %31
  %38 = sdiv exact i64 %37, 40
  %39 = icmp sgt i64 %38, %30
  %40 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %33, i64 %30
  %41 = select i1 %39, %"struct.CFDE_TextOut::Piece"* %40, %"struct.CFDE_TextOut::Piece"* %35
  %42 = select i1 %39, i64 %30, i64 %38
  %43 = ptrtoint %"struct.CFDE_TextOut::Piece"* %28 to i64
  %44 = icmp eq %"struct.CFDE_TextOut::Piece"* %41, %33
  br i1 %44, label %98, label %45

45:                                               ; preds = %27
  %46 = ptrtoint %"struct.CFDE_TextOut::Piece"* %41 to i64
  br label %47

47:                                               ; preds = %94, %45
  %48 = phi %"struct.CFDE_TextOut::Piece"* [ %33, %45 ], [ %62, %94 ]
  %49 = phi %"struct.CFDE_TextOut::Piece"** [ %29, %45 ], [ %96, %94 ]
  %50 = phi i64 [ %43, %45 ], [ %95, %94 ]
  %51 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %49, align 8
  %52 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %51, i64 102
  %53 = ptrtoint %"struct.CFDE_TextOut::Piece"* %52 to i64
  %54 = sub i64 %53, %50
  %55 = sdiv exact i64 %54, 40
  %56 = ptrtoint %"struct.CFDE_TextOut::Piece"* %48 to i64
  %57 = sub i64 %46, %56
  %58 = sdiv exact i64 %57, 40
  %59 = icmp sgt i64 %58, %55
  %60 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %48, i64 %55
  %61 = select i1 %59, i64 %55, i64 %58
  %62 = select i1 %59, %"struct.CFDE_TextOut::Piece"* %60, %"struct.CFDE_TextOut::Piece"* %41
  %63 = ptrtoint %"struct.CFDE_TextOut::Piece"* %62 to i64
  %64 = sub i64 %63, %56
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %47
  %67 = inttoptr i64 %50 to i8*
  %68 = bitcast %"struct.CFDE_TextOut::Piece"* %48 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %64, i1 false) #12
  br label %69

69:                                               ; preds = %66, %47
  %70 = icmp eq i64 %61, 0
  br i1 %70, label %94, label %71

71:                                               ; preds = %69
  %72 = bitcast %"struct.CFDE_TextOut::Piece"** %49 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %50, %73
  %75 = sdiv exact i64 %74, 40
  %76 = add nsw i64 %75, %61
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %71
  %79 = udiv i64 %76, 102
  %80 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %49, i64 %79
  %81 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %80, align 8
  %82 = urem i64 %76, 102
  %83 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %81, i64 %82
  %84 = ptrtoint %"struct.CFDE_TextOut::Piece"* %83 to i64
  br label %94

85:                                               ; preds = %71
  %86 = sub nsw i64 101, %76
  %87 = sdiv i64 %86, -102
  %88 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %49, i64 %87
  %89 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %88, align 8
  %90 = srem i64 %86, 102
  %91 = sub nuw nsw i64 101, %90
  %92 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %89, i64 %91
  %93 = ptrtoint %"struct.CFDE_TextOut::Piece"* %92 to i64
  br label %94

94:                                               ; preds = %85, %78, %69
  %95 = phi i64 [ %50, %69 ], [ %84, %78 ], [ %93, %85 ]
  %96 = phi %"struct.CFDE_TextOut::Piece"** [ %49, %69 ], [ %80, %78 ], [ %88, %85 ]
  %97 = icmp eq %"struct.CFDE_TextOut::Piece"* %62, %41
  br i1 %97, label %98, label %47

98:                                               ; preds = %94, %27
  %99 = phi i64 [ %43, %27 ], [ %95, %94 ]
  %100 = phi %"struct.CFDE_TextOut::Piece"** [ %29, %27 ], [ %96, %94 ]
  %101 = inttoptr i64 %99 to %"struct.CFDE_TextOut::Piece"*
  %102 = sub nsw i64 %30, %42
  %103 = icmp eq i64 %42, 0
  br i1 %103, label %127, label %104

104:                                              ; preds = %98
  %105 = bitcast %"struct.CFDE_TextOut::Piece"** %32 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %31, %106
  %108 = sdiv exact i64 %107, 40
  %109 = add nsw i64 %108, %42
  %110 = icmp sgt i64 %109, 0
  br i1 %110, label %111, label %118

111:                                              ; preds = %104
  %112 = udiv i64 %109, 102
  %113 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %32, i64 %112
  %114 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %113, align 8
  %115 = urem i64 %109, 102
  %116 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %114, i64 %115
  %117 = ptrtoint %"struct.CFDE_TextOut::Piece"* %116 to i64
  br label %127

118:                                              ; preds = %104
  %119 = sub nsw i64 101, %109
  %120 = sdiv i64 %119, -102
  %121 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %32, i64 %120
  %122 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %121, align 8
  %123 = srem i64 %119, 102
  %124 = sub nsw i64 101, %123
  %125 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %122, i64 %124
  %126 = ptrtoint %"struct.CFDE_TextOut::Piece"* %125 to i64
  br label %127

127:                                              ; preds = %98, %111, %118
  %128 = phi %"struct.CFDE_TextOut::Piece"** [ %32, %98 ], [ %113, %111 ], [ %121, %118 ]
  %129 = phi i64 [ %31, %98 ], [ %117, %111 ], [ %126, %118 ]
  %130 = icmp sgt i64 %102, 0
  br i1 %130, label %27, label %131

131:                                              ; preds = %127
  %132 = inttoptr i64 %99 to %"struct.CFDE_TextOut::Piece"*
  br label %133

133:                                              ; preds = %131, %6, %9
  %134 = phi %"struct.CFDE_TextOut::Piece"** [ %4, %9 ], [ %4, %6 ], [ %100, %131 ]
  %135 = phi %"struct.CFDE_TextOut::Piece"* [ %5, %9 ], [ %5, %6 ], [ %132, %131 ]
  %136 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } undef, %"struct.CFDE_TextOut::Piece"** %134, 0
  %137 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %136, %"struct.CFDE_TextOut::Piece"* %135, 1
  ret { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE8__appendINS_16__deque_iteratorIS2_PKS2_RS8_PKS9_lLl0EEEEEvT_SE_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISE_EE5valueEvE4typeE(%"class.std::__1::deque.179"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint %"struct.CFDE_TextOut::Piece"* %2 to i64
  %8 = icmp eq %"struct.CFDE_TextOut::Piece"* %4, %2
  br i1 %8, label %26, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.CFDE_TextOut::Piece"* %4 to i64
  %11 = ptrtoint %"struct.CFDE_TextOut::Piece"** %3 to i64
  %12 = ptrtoint %"struct.CFDE_TextOut::Piece"** %1 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 3
  %15 = mul nsw i64 %14, 102
  %16 = bitcast %"struct.CFDE_TextOut::Piece"** %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %10, %17
  %19 = sdiv exact i64 %18, 40
  %20 = add nsw i64 %19, %15
  %21 = bitcast %"struct.CFDE_TextOut::Piece"** %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %7, %22
  %24 = sdiv exact i64 %23, -40
  %25 = add i64 %20, %24
  br label %26

26:                                               ; preds = %6, %9
  %27 = phi i64 [ %25, %9 ], [ 0, %6 ]
  %28 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 2
  %29 = bitcast %"struct.CFDE_TextOut::Piece"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"struct.CFDE_TextOut::Piece"*** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  %37 = mul i64 %35, 102
  %38 = add i64 %37, -1
  %39 = select i1 %36, i64 0, i64 %38
  %40 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, %41
  %45 = sub i64 %39, %44
  %46 = icmp ugt i64 %27, %45
  %47 = inttoptr i64 %33 to %"struct.CFDE_TextOut::Piece"**
  %48 = inttoptr i64 %30 to %"struct.CFDE_TextOut::Piece"**
  br i1 %46, label %49, label %56

49:                                               ; preds = %26
  %50 = sub i64 %27, %45
  tail call void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE19__add_back_capacityEm(%"class.std::__1::deque.179"* %0, i64 %50)
  %51 = load i64, i64* %42, align 8
  %52 = load i64, i64* %40, align 8
  %53 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %31, align 8
  %54 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %28, align 8
  %55 = add i64 %52, %51
  br label %56

56:                                               ; preds = %49, %26
  %57 = phi i64 [ %55, %49 ], [ %44, %26 ]
  %58 = phi %"struct.CFDE_TextOut::Piece"** [ %54, %49 ], [ %48, %26 ]
  %59 = phi %"struct.CFDE_TextOut::Piece"** [ %53, %49 ], [ %47, %26 ]
  %60 = phi i64 [ %51, %49 ], [ %43, %26 ]
  %61 = udiv i64 %57, 102
  %62 = urem i64 %57, 102
  %63 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %59, i64 %61
  %64 = icmp eq %"struct.CFDE_TextOut::Piece"** %58, %59
  br i1 %64, label %69, label %65

65:                                               ; preds = %56
  %66 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %63, align 8
  %67 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %66, i64 %62
  %68 = ptrtoint %"struct.CFDE_TextOut::Piece"* %67 to i64
  br label %69

69:                                               ; preds = %56, %65
  %70 = phi i64 [ %68, %65 ], [ 0, %56 ]
  %71 = icmp eq i64 %27, 0
  br i1 %71, label %95, label %72

72:                                               ; preds = %69
  %73 = bitcast %"struct.CFDE_TextOut::Piece"** %63 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %70, %74
  %76 = sdiv exact i64 %75, 40
  %77 = add nsw i64 %76, %27
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %72
  %80 = udiv i64 %77, 102
  %81 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %63, i64 %80
  %82 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %81, align 8
  %83 = urem i64 %77, 102
  %84 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %82, i64 %83
  %85 = ptrtoint %"struct.CFDE_TextOut::Piece"* %84 to i64
  br label %95

86:                                               ; preds = %72
  %87 = sub nsw i64 101, %77
  %88 = sdiv i64 %87, -102
  %89 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %63, i64 %88
  %90 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, align 8
  %91 = srem i64 %87, 102
  %92 = sub nsw i64 101, %91
  %93 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %90, i64 %92
  %94 = ptrtoint %"struct.CFDE_TextOut::Piece"* %93 to i64
  br label %95

95:                                               ; preds = %69, %79, %86
  %96 = phi i64 [ %70, %69 ], [ %85, %79 ], [ %94, %86 ]
  %97 = phi %"struct.CFDE_TextOut::Piece"** [ %63, %69 ], [ %81, %79 ], [ %89, %86 ]
  %98 = inttoptr i64 %96 to %"struct.CFDE_TextOut::Piece"*
  %99 = inttoptr i64 %70 to %"struct.CFDE_TextOut::Piece"*
  %100 = icmp eq %"struct.CFDE_TextOut::Piece"* %99, %98
  br i1 %100, label %101, label %102

101:                                              ; preds = %143, %151, %95
  ret void

102:                                              ; preds = %95, %151
  %103 = phi i64 [ %150, %151 ], [ %60, %95 ]
  %104 = phi i64 [ %146, %151 ], [ %7, %95 ]
  %105 = phi %"struct.CFDE_TextOut::Piece"** [ %145, %151 ], [ %1, %95 ]
  %106 = phi i64 [ %154, %151 ], [ %70, %95 ]
  %107 = phi %"struct.CFDE_TextOut::Piece"** [ %152, %151 ], [ %63, %95 ]
  %108 = icmp eq %"struct.CFDE_TextOut::Piece"** %107, %97
  br i1 %108, label %112, label %109

109:                                              ; preds = %102
  %110 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %107, align 8
  %111 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %110, i64 102
  br label %112

112:                                              ; preds = %102, %109
  %113 = phi %"struct.CFDE_TextOut::Piece"* [ %111, %109 ], [ %98, %102 ]
  %114 = inttoptr i64 %106 to %"struct.CFDE_TextOut::Piece"*
  %115 = icmp eq %"struct.CFDE_TextOut::Piece"* %113, %114
  br i1 %115, label %143, label %116

116:                                              ; preds = %112, %136
  %117 = phi %"struct.CFDE_TextOut::Piece"* [ %124, %136 ], [ %114, %112 ]
  %118 = phi i64 [ %125, %136 ], [ %106, %112 ]
  %119 = phi i64 [ %138, %136 ], [ %104, %112 ]
  %120 = phi %"struct.CFDE_TextOut::Piece"** [ %137, %136 ], [ %105, %112 ]
  %121 = inttoptr i64 %119 to %"struct.CFDE_TextOut::Piece"*
  %122 = inttoptr i64 %118 to i8*
  %123 = inttoptr i64 %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 36, i1 false) #12
  %124 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %117, i64 1
  %125 = ptrtoint %"struct.CFDE_TextOut::Piece"* %124 to i64
  %126 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %121, i64 1
  %127 = ptrtoint %"struct.CFDE_TextOut::Piece"* %126 to i64
  %128 = bitcast %"struct.CFDE_TextOut::Piece"** %120 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = icmp eq i64 %130, 4080
  br i1 %131, label %132, label %136

132:                                              ; preds = %116
  %133 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %120, i64 1
  %134 = bitcast %"struct.CFDE_TextOut::Piece"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  br label %136

136:                                              ; preds = %116, %132
  %137 = phi %"struct.CFDE_TextOut::Piece"** [ %133, %132 ], [ %120, %116 ]
  %138 = phi i64 [ %135, %132 ], [ %127, %116 ]
  %139 = icmp eq %"struct.CFDE_TextOut::Piece"* %113, %124
  br i1 %139, label %140, label %116

140:                                              ; preds = %136
  %141 = ptrtoint %"struct.CFDE_TextOut::Piece"* %113 to i64
  %142 = load i64, i64* %42, align 8
  br label %143

143:                                              ; preds = %140, %112
  %144 = phi i64 [ %142, %140 ], [ %103, %112 ]
  %145 = phi %"struct.CFDE_TextOut::Piece"** [ %137, %140 ], [ %105, %112 ]
  %146 = phi i64 [ %138, %140 ], [ %104, %112 ]
  %147 = phi i64 [ %141, %140 ], [ %106, %112 ]
  %148 = sub i64 %147, %106
  %149 = sdiv exact i64 %148, 40
  %150 = add i64 %144, %149
  store i64 %150, i64* %42, align 8
  br i1 %108, label %101, label %151

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %107, i64 1
  %153 = bitcast %"struct.CFDE_TextOut::Piece"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = inttoptr i64 %154 to %"struct.CFDE_TextOut::Piece"*
  %156 = icmp eq %"struct.CFDE_TextOut::Piece"* %155, %98
  br i1 %156, label %101, label %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE14__erase_to_endENS_16__deque_iteratorIS2_PKS2_RS7_PKS8_lLl0EEE(%"class.std::__1::deque.179"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %5
  %9 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %11 = udiv i64 %8, 102
  %12 = urem i64 %8, 102
  %13 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %10, i64 %11
  %14 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %14, align 8
  %16 = icmp eq %"struct.CFDE_TextOut::Piece"** %15, %10
  %17 = ptrtoint %"struct.CFDE_TextOut::Piece"** %15 to i64
  %18 = ptrtoint %"struct.CFDE_TextOut::Piece"** %10 to i64
  br i1 %16, label %22, label %19

19:                                               ; preds = %3
  %20 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %13, align 8
  %21 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %20, i64 %12
  br label %22

22:                                               ; preds = %3, %19
  %23 = phi %"struct.CFDE_TextOut::Piece"* [ %21, %19 ], [ null, %3 ]
  %24 = icmp eq %"struct.CFDE_TextOut::Piece"* %23, %2
  br i1 %24, label %143, label %25

25:                                               ; preds = %22
  %26 = ptrtoint %"struct.CFDE_TextOut::Piece"* %23 to i64
  %27 = ptrtoint %"struct.CFDE_TextOut::Piece"** %13 to i64
  %28 = ptrtoint %"struct.CFDE_TextOut::Piece"* %2 to i64
  %29 = ptrtoint %"struct.CFDE_TextOut::Piece"** %1 to i64
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 3
  %32 = mul nsw i64 %31, 102
  %33 = bitcast %"struct.CFDE_TextOut::Piece"** %13 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %26, %34
  %36 = sdiv exact i64 %35, 40
  %37 = add nsw i64 %36, %32
  %38 = bitcast %"struct.CFDE_TextOut::Piece"** %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %28, %39
  %41 = sdiv exact i64 %40, -40
  %42 = add i64 %37, %41
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %143

44:                                               ; preds = %25
  %45 = udiv i64 %7, 102
  %46 = urem i64 %7, 102
  %47 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %10, i64 %45
  br i1 %16, label %51, label %48

48:                                               ; preds = %44
  %49 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %47, align 8
  %50 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %49, i64 %46
  br label %51

51:                                               ; preds = %44, %48
  %52 = phi %"struct.CFDE_TextOut::Piece"* [ %50, %48 ], [ null, %44 ]
  %53 = ptrtoint %"struct.CFDE_TextOut::Piece"* %52 to i64
  %54 = icmp eq %"struct.CFDE_TextOut::Piece"* %52, %2
  br i1 %54, label %88, label %55

55:                                               ; preds = %51
  %56 = ptrtoint %"struct.CFDE_TextOut::Piece"** %47 to i64
  %57 = sub i64 %29, %56
  %58 = ashr exact i64 %57, 3
  %59 = mul nsw i64 %58, 102
  %60 = sdiv exact i64 %40, 40
  %61 = add nsw i64 %60, %59
  %62 = bitcast %"struct.CFDE_TextOut::Piece"** %47 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %53, %63
  %65 = sdiv exact i64 %64, -40
  %66 = add i64 %61, %65
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %88, label %68

68:                                               ; preds = %55
  %69 = sdiv exact i64 %64, 40
  %70 = add nsw i64 %69, %66
  %71 = icmp sgt i64 %70, 0
  br i1 %71, label %72, label %79

72:                                               ; preds = %68
  %73 = udiv i64 %70, 102
  %74 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %47, i64 %73
  %75 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %74, align 8
  %76 = urem i64 %70, 102
  %77 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %75, i64 %76
  %78 = ptrtoint %"struct.CFDE_TextOut::Piece"* %77 to i64
  br label %88

79:                                               ; preds = %68
  %80 = sub nsw i64 101, %70
  %81 = sdiv i64 %80, -102
  %82 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %47, i64 %81
  %83 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %82, align 8
  %84 = srem i64 %80, 102
  %85 = sub nsw i64 101, %84
  %86 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %83, i64 %85
  %87 = ptrtoint %"struct.CFDE_TextOut::Piece"* %86 to i64
  br label %88

88:                                               ; preds = %51, %55, %72, %79
  %89 = phi i64 [ %53, %55 ], [ %78, %72 ], [ %87, %79 ], [ %53, %51 ]
  %90 = phi %"struct.CFDE_TextOut::Piece"** [ %47, %55 ], [ %74, %72 ], [ %82, %79 ], [ %47, %51 ]
  %91 = inttoptr i64 %89 to %"struct.CFDE_TextOut::Piece"*
  %92 = icmp eq %"struct.CFDE_TextOut::Piece"* %23, %91
  br i1 %92, label %93, label %105

93:                                               ; preds = %118, %88
  %94 = sub i64 %5, %42
  store i64 %94, i64* %4, align 8
  %95 = bitcast %"struct.CFDE_TextOut::Piece"*** %9 to i64*
  %96 = sub i64 %17, %18
  %97 = ashr exact i64 %96, 3
  %98 = icmp eq i64 %96, 0
  %99 = mul i64 %97, 102
  %100 = add i64 %99, -1
  %101 = select i1 %98, i64 0, i64 %100
  %102 = add i64 %94, %7
  %103 = sub i64 %101, %102
  %104 = icmp ult i64 %103, 204
  br i1 %104, label %143, label %123

105:                                              ; preds = %88, %118
  %106 = phi %"struct.CFDE_TextOut::Piece"* [ %121, %118 ], [ %91, %88 ]
  %107 = phi %"struct.CFDE_TextOut::Piece"** [ %120, %118 ], [ %90, %88 ]
  %108 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %106, i64 1
  %109 = ptrtoint %"struct.CFDE_TextOut::Piece"* %108 to i64
  %110 = bitcast %"struct.CFDE_TextOut::Piece"** %107 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %109, %111
  %113 = icmp eq i64 %112, 4080
  br i1 %113, label %114, label %118

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %107, i64 1
  %116 = bitcast %"struct.CFDE_TextOut::Piece"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  br label %118

118:                                              ; preds = %105, %114
  %119 = phi i64 [ %117, %114 ], [ %109, %105 ]
  %120 = phi %"struct.CFDE_TextOut::Piece"** [ %115, %114 ], [ %107, %105 ]
  %121 = inttoptr i64 %119 to %"struct.CFDE_TextOut::Piece"*
  %122 = icmp eq %"struct.CFDE_TextOut::Piece"* %23, %121
  br i1 %122, label %93, label %105

123:                                              ; preds = %93, %123
  %124 = phi %"struct.CFDE_TextOut::Piece"** [ %129, %123 ], [ %15, %93 ]
  %125 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 -1
  %126 = bitcast %"struct.CFDE_TextOut::Piece"** %125 to i8**
  %127 = load i8*, i8** %126, align 8
  tail call void @_ZdlPv(i8* %127) #13
  %128 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %14, align 8
  %129 = getelementptr %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %128, i64 -1
  store %"struct.CFDE_TextOut::Piece"** %129, %"struct.CFDE_TextOut::Piece"*** %14, align 8
  %130 = ptrtoint %"struct.CFDE_TextOut::Piece"** %129 to i64
  %131 = load i64, i64* %95, align 8
  %132 = sub i64 %130, %131
  %133 = ashr exact i64 %132, 3
  %134 = icmp eq i64 %132, 0
  %135 = mul i64 %133, 102
  %136 = add i64 %135, -1
  %137 = select i1 %134, i64 0, i64 %136
  %138 = load i64, i64* %6, align 8
  %139 = load i64, i64* %4, align 8
  %140 = add i64 %139, %138
  %141 = sub i64 %137, %140
  %142 = icmp ult i64 %141, 204
  br i1 %142, label %143, label %123

143:                                              ; preds = %123, %93, %22, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE19__add_back_capacityEm(%"class.std::__1::deque.179"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.CFDE_TextOut::Piece"*, align 8
  %4 = alloca %"struct.CFDE_TextOut::Piece"*, align 8
  %5 = alloca %"struct.std::__1::__split_buffer.236", align 16
  %6 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %11 = icmp eq %"struct.CFDE_TextOut::Piece"** %8, %10
  %12 = zext i1 %11 to i64
  %13 = add i64 %12, %1
  %14 = udiv i64 %13, 102
  %15 = urem i64 %13, 102
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %14, %17
  %19 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = udiv i64 %20, 102
  %22 = icmp ult i64 %18, %21
  %23 = select i1 %22, i64 %18, i64 %21
  %24 = sub nsw i64 %18, %23
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %"struct.CFDE_TextOut::Piece"** %8 to i64
  br i1 %25, label %27, label %186

27:                                               ; preds = %2
  %28 = mul i64 %23, -102
  %29 = add i64 %28, %20
  store i64 %29, i64* %19, align 8
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %768, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.CFDE_TextOut::Piece"*** %32 to i64*
  %35 = bitcast %"class.std::__1::deque.179"* %0 to i64*
  %36 = bitcast %"struct.CFDE_TextOut::Piece"*** %9 to i64*
  %37 = bitcast %"struct.CFDE_TextOut::Piece"*** %7 to i64*
  %38 = bitcast %"struct.CFDE_TextOut::Piece"*** %7 to i64**
  br label %39

39:                                               ; preds = %184, %31
  %40 = phi %"struct.CFDE_TextOut::Piece"** [ %8, %31 ], [ %181, %184 ]
  %41 = phi %"struct.CFDE_TextOut::Piece"** [ %10, %31 ], [ %185, %184 ]
  %42 = phi i64 [ %23, %31 ], [ %182, %184 ]
  %43 = bitcast %"struct.CFDE_TextOut::Piece"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %41, i64 1
  store %"struct.CFDE_TextOut::Piece"** %45, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %46 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %32, align 8
  %47 = icmp eq %"struct.CFDE_TextOut::Piece"** %40, %46
  %48 = ptrtoint %"struct.CFDE_TextOut::Piece"** %46 to i64
  %49 = bitcast %"struct.CFDE_TextOut::Piece"** %40 to i64*
  br i1 %47, label %50, label %178

50:                                               ; preds = %39
  %51 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %33, align 8
  %52 = icmp ugt %"struct.CFDE_TextOut::Piece"** %45, %51
  %53 = ptrtoint %"struct.CFDE_TextOut::Piece"** %51 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.CFDE_TextOut::Piece"** %45 to i64
  %56 = sub i64 %55, %53
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = sdiv i64 %58, -2
  %60 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %45, i64 %59
  %61 = sub i64 %48, %55
  %62 = ashr exact i64 %61, 3
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast %"struct.CFDE_TextOut::Piece"** %60 to i8*
  %66 = bitcast %"struct.CFDE_TextOut::Piece"** %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %61, i1 false) #12
  %67 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi %"struct.CFDE_TextOut::Piece"** [ %45, %54 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %60, i64 %62
  store %"struct.CFDE_TextOut::Piece"** %70, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  %71 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %69, i64 %59
  store %"struct.CFDE_TextOut::Piece"** %71, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %72 = bitcast %"struct.CFDE_TextOut::Piece"** %70 to i64*
  br label %178

73:                                               ; preds = %50
  %74 = sub i64 %48, %53
  %75 = ashr exact i64 %74, 2
  %76 = icmp eq i64 %74, 0
  %77 = select i1 %76, i64 1, i64 %75
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call void @abort() #14
  unreachable

80:                                               ; preds = %73
  %81 = lshr i64 %77, 2
  %82 = shl i64 %77, 3
  %83 = tail call i8* @_Znwm(i64 %82) #13
  %84 = bitcast i8* %83 to %"struct.CFDE_TextOut::Piece"**
  %85 = ptrtoint i8* %83 to i64
  %86 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %84, i64 %81
  %87 = ptrtoint %"struct.CFDE_TextOut::Piece"** %86 to i64
  %88 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %84, i64 %77
  %89 = ptrtoint %"struct.CFDE_TextOut::Piece"** %88 to i64
  %90 = ptrtoint %"struct.CFDE_TextOut::Piece"** %45 to i64
  %91 = sub i64 %48, %90
  %92 = ashr exact i64 %91, 3
  %93 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %86, i64 %92
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %170, label %95

95:                                               ; preds = %80
  %96 = add i64 %91, -8
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95, %101
  %102 = phi %"struct.CFDE_TextOut::Piece"** [ %109, %101 ], [ %86, %95 ]
  %103 = phi i64 [ %110, %101 ], [ %87, %95 ]
  %104 = phi %"struct.CFDE_TextOut::Piece"** [ %111, %101 ], [ %45, %95 ]
  %105 = phi i64 [ %112, %101 ], [ %99, %95 ]
  %106 = bitcast %"struct.CFDE_TextOut::Piece"** %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %102, i64 1
  %110 = ptrtoint %"struct.CFDE_TextOut::Piece"** %109 to i64
  %111 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %104, i64 1
  %112 = add i64 %105, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !57

114:                                              ; preds = %101
  %115 = ptrtoint %"struct.CFDE_TextOut::Piece"** %109 to i64
  br label %116

116:                                              ; preds = %95, %114
  %117 = phi %"struct.CFDE_TextOut::Piece"** [ %86, %95 ], [ %109, %114 ]
  %118 = phi i64 [ %87, %95 ], [ %115, %114 ]
  %119 = phi %"struct.CFDE_TextOut::Piece"** [ %45, %95 ], [ %111, %114 ]
  %120 = icmp ult i64 %96, 56
  br i1 %120, label %167, label %121

121:                                              ; preds = %116, %121
  %122 = phi %"struct.CFDE_TextOut::Piece"** [ %163, %121 ], [ %117, %116 ]
  %123 = phi i64 [ %164, %121 ], [ %118, %116 ]
  %124 = phi %"struct.CFDE_TextOut::Piece"** [ %165, %121 ], [ %119, %116 ]
  %125 = bitcast %"struct.CFDE_TextOut::Piece"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = inttoptr i64 %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %122, i64 1
  %129 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 1
  %130 = bitcast %"struct.CFDE_TextOut::Piece"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"struct.CFDE_TextOut::Piece"** %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %122, i64 2
  %134 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 2
  %135 = bitcast %"struct.CFDE_TextOut::Piece"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"struct.CFDE_TextOut::Piece"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %122, i64 3
  %139 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 3
  %140 = bitcast %"struct.CFDE_TextOut::Piece"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"struct.CFDE_TextOut::Piece"** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %122, i64 4
  %144 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 4
  %145 = bitcast %"struct.CFDE_TextOut::Piece"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"struct.CFDE_TextOut::Piece"** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %122, i64 5
  %149 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 5
  %150 = bitcast %"struct.CFDE_TextOut::Piece"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.CFDE_TextOut::Piece"** %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %122, i64 6
  %154 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 6
  %155 = bitcast %"struct.CFDE_TextOut::Piece"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"struct.CFDE_TextOut::Piece"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %122, i64 7
  %159 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 7
  %160 = bitcast %"struct.CFDE_TextOut::Piece"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"struct.CFDE_TextOut::Piece"** %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %122, i64 8
  %164 = ptrtoint %"struct.CFDE_TextOut::Piece"** %163 to i64
  %165 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %124, i64 8
  %166 = icmp eq %"struct.CFDE_TextOut::Piece"** %93, %163
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %116
  %168 = ptrtoint %"struct.CFDE_TextOut::Piece"** %93 to i64
  %169 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %33, align 8
  br label %170

170:                                              ; preds = %167, %80
  %171 = phi %"struct.CFDE_TextOut::Piece"** [ %169, %167 ], [ %51, %80 ]
  %172 = phi i64 [ %168, %167 ], [ %87, %80 ]
  store i64 %85, i64* %35, align 8
  store i64 %87, i64* %36, align 8
  store i64 %172, i64* %37, align 8
  store i64 %89, i64* %34, align 8
  %173 = icmp eq %"struct.CFDE_TextOut::Piece"** %171, null
  %174 = inttoptr i64 %172 to i64*
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = bitcast %"struct.CFDE_TextOut::Piece"** %171 to i8*
  tail call void @_ZdlPv(i8* %176) #13
  %177 = load i64*, i64** %38, align 8
  br label %178

178:                                              ; preds = %39, %68, %170, %175
  %179 = phi i64* [ %177, %175 ], [ %174, %170 ], [ %72, %68 ], [ %49, %39 ]
  store i64 %44, i64* %179, align 8
  %180 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  %181 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %180, i64 1
  store %"struct.CFDE_TextOut::Piece"** %181, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  %182 = add i64 %42, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %768, label %184

184:                                              ; preds = %178
  %185 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  br label %39

186:                                              ; preds = %2
  %187 = ptrtoint %"struct.CFDE_TextOut::Piece"** %10 to i64
  %188 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %189 = bitcast %"struct.CFDE_TextOut::Piece"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::deque.179"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = bitcast %"struct.CFDE_TextOut::Piece"*** %7 to i64*
  %196 = bitcast %"struct.CFDE_TextOut::Piece"*** %9 to i64*
  %197 = sub i64 %26, %187
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 %194, %198
  %200 = icmp ugt i64 %24, %199
  br i1 %200, label %391, label %201

201:                                              ; preds = %186
  %202 = bitcast %"struct.CFDE_TextOut::Piece"** %3 to i8*
  %203 = bitcast %"struct.CFDE_TextOut::Piece"** %3 to i8**
  %204 = icmp eq i64 %190, %26
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %210
  %206 = phi i64 [ %208, %210 ], [ %24, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #12
  %207 = call i8* @_Znwm(i64 4080) #13
  store i8* %207, i8** %203, align 8
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer.181"* %6, %"struct.CFDE_TextOut::Piece"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #12
  %208 = add i64 %206, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = load i64, i64* %189, align 8
  %212 = load i64, i64* %195, align 8
  %213 = icmp eq i64 %211, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %210, %201
  %215 = phi i64 [ %24, %201 ], [ %208, %210 ]
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %205, %214
  %218 = load i64, i64* %19, align 8
  br label %236

219:                                              ; preds = %214
  %220 = bitcast %"struct.CFDE_TextOut::Piece"** %4 to i8*
  %221 = bitcast %"struct.CFDE_TextOut::Piece"** %4 to i8**
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %215, %219 ], [ %225, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #12
  %224 = call i8* @_Znwm(i64 4080) #13
  store i8* %224, i8** %221, align 8
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer.181"* %6, %"struct.CFDE_TextOut::Piece"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #12
  %225 = add i64 %223, -1
  %226 = load i64, i64* %195, align 8
  %227 = load i64, i64* %196, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 8
  %230 = select i1 %229, i64 101, i64 102
  %231 = load i64, i64* %19, align 8
  %232 = add i64 %230, %231
  store i64 %232, i64* %19, align 8
  %233 = icmp eq i64 %225, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %222
  %235 = add i64 %215, %23
  br label %236

236:                                              ; preds = %217, %234
  %237 = phi i64 [ %218, %217 ], [ %232, %234 ]
  %238 = phi i64 [ %23, %217 ], [ %235, %234 ]
  %239 = mul i64 %238, -102
  %240 = add i64 %237, %239
  store i64 %240, i64* %19, align 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %768, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"struct.CFDE_TextOut::Piece"*** %7 to i64**
  %245 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  br label %246

246:                                              ; preds = %242, %385
  %247 = phi %"struct.CFDE_TextOut::Piece"** [ %245, %242 ], [ %388, %385 ]
  %248 = phi i64 [ %238, %242 ], [ %389, %385 ]
  %249 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %250 = bitcast %"struct.CFDE_TextOut::Piece"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %249, i64 1
  store %"struct.CFDE_TextOut::Piece"** %252, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %253 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %188, align 8
  %254 = icmp eq %"struct.CFDE_TextOut::Piece"** %247, %253
  %255 = ptrtoint %"struct.CFDE_TextOut::Piece"** %253 to i64
  %256 = bitcast %"struct.CFDE_TextOut::Piece"** %247 to i64*
  br i1 %254, label %257, label %385

257:                                              ; preds = %246
  %258 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %243, align 8
  %259 = icmp ugt %"struct.CFDE_TextOut::Piece"** %252, %258
  %260 = ptrtoint %"struct.CFDE_TextOut::Piece"** %258 to i64
  br i1 %259, label %261, label %280

261:                                              ; preds = %257
  %262 = ptrtoint %"struct.CFDE_TextOut::Piece"** %252 to i64
  %263 = sub i64 %262, %260
  %264 = ashr exact i64 %263, 3
  %265 = add nsw i64 %264, 1
  %266 = sdiv i64 %265, -2
  %267 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %252, i64 %266
  %268 = sub i64 %255, %262
  %269 = ashr exact i64 %268, 3
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = bitcast %"struct.CFDE_TextOut::Piece"** %267 to i8*
  %273 = bitcast %"struct.CFDE_TextOut::Piece"** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %268, i1 false) #12
  %274 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  br label %275

275:                                              ; preds = %271, %261
  %276 = phi %"struct.CFDE_TextOut::Piece"** [ %252, %261 ], [ %274, %271 ]
  %277 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %267, i64 %269
  store %"struct.CFDE_TextOut::Piece"** %277, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  %278 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 %266
  store %"struct.CFDE_TextOut::Piece"** %278, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %279 = bitcast %"struct.CFDE_TextOut::Piece"** %277 to i64*
  br label %385

280:                                              ; preds = %257
  %281 = sub i64 %255, %260
  %282 = ashr exact i64 %281, 2
  %283 = icmp eq i64 %281, 0
  %284 = select i1 %283, i64 1, i64 %282
  %285 = icmp ugt i64 %284, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %280
  call void @abort() #14
  unreachable

287:                                              ; preds = %280
  %288 = lshr i64 %284, 2
  %289 = shl i64 %284, 3
  %290 = call i8* @_Znwm(i64 %289) #13
  %291 = bitcast i8* %290 to %"struct.CFDE_TextOut::Piece"**
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %291, i64 %288
  %294 = ptrtoint %"struct.CFDE_TextOut::Piece"** %293 to i64
  %295 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %291, i64 %284
  %296 = ptrtoint %"struct.CFDE_TextOut::Piece"** %295 to i64
  %297 = ptrtoint %"struct.CFDE_TextOut::Piece"** %252 to i64
  %298 = sub i64 %255, %297
  %299 = ashr exact i64 %298, 3
  %300 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %293, i64 %299
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %377, label %302

302:                                              ; preds = %287
  %303 = add i64 %298, -8
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %323, label %308

308:                                              ; preds = %302, %308
  %309 = phi %"struct.CFDE_TextOut::Piece"** [ %316, %308 ], [ %293, %302 ]
  %310 = phi i64 [ %317, %308 ], [ %294, %302 ]
  %311 = phi %"struct.CFDE_TextOut::Piece"** [ %318, %308 ], [ %252, %302 ]
  %312 = phi i64 [ %319, %308 ], [ %306, %302 ]
  %313 = bitcast %"struct.CFDE_TextOut::Piece"** %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = inttoptr i64 %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %309, i64 1
  %317 = ptrtoint %"struct.CFDE_TextOut::Piece"** %316 to i64
  %318 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %311, i64 1
  %319 = add i64 %312, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %308, !llvm.loop !58

321:                                              ; preds = %308
  %322 = ptrtoint %"struct.CFDE_TextOut::Piece"** %316 to i64
  br label %323

323:                                              ; preds = %302, %321
  %324 = phi %"struct.CFDE_TextOut::Piece"** [ %293, %302 ], [ %316, %321 ]
  %325 = phi i64 [ %294, %302 ], [ %322, %321 ]
  %326 = phi %"struct.CFDE_TextOut::Piece"** [ %252, %302 ], [ %318, %321 ]
  %327 = icmp ult i64 %303, 56
  br i1 %327, label %374, label %328

328:                                              ; preds = %323, %328
  %329 = phi %"struct.CFDE_TextOut::Piece"** [ %370, %328 ], [ %324, %323 ]
  %330 = phi i64 [ %371, %328 ], [ %325, %323 ]
  %331 = phi %"struct.CFDE_TextOut::Piece"** [ %372, %328 ], [ %326, %323 ]
  %332 = bitcast %"struct.CFDE_TextOut::Piece"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %329, i64 1
  %336 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %331, i64 1
  %337 = bitcast %"struct.CFDE_TextOut::Piece"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"struct.CFDE_TextOut::Piece"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %329, i64 2
  %341 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %331, i64 2
  %342 = bitcast %"struct.CFDE_TextOut::Piece"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"struct.CFDE_TextOut::Piece"** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %329, i64 3
  %346 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %331, i64 3
  %347 = bitcast %"struct.CFDE_TextOut::Piece"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"struct.CFDE_TextOut::Piece"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %329, i64 4
  %351 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %331, i64 4
  %352 = bitcast %"struct.CFDE_TextOut::Piece"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"struct.CFDE_TextOut::Piece"** %350 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %329, i64 5
  %356 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %331, i64 5
  %357 = bitcast %"struct.CFDE_TextOut::Piece"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"struct.CFDE_TextOut::Piece"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %329, i64 6
  %361 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %331, i64 6
  %362 = bitcast %"struct.CFDE_TextOut::Piece"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"struct.CFDE_TextOut::Piece"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %329, i64 7
  %366 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %331, i64 7
  %367 = bitcast %"struct.CFDE_TextOut::Piece"** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"struct.CFDE_TextOut::Piece"** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %329, i64 8
  %371 = ptrtoint %"struct.CFDE_TextOut::Piece"** %370 to i64
  %372 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %331, i64 8
  %373 = icmp eq %"struct.CFDE_TextOut::Piece"** %300, %370
  br i1 %373, label %374, label %328

374:                                              ; preds = %328, %323
  %375 = ptrtoint %"struct.CFDE_TextOut::Piece"** %300 to i64
  %376 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %243, align 8
  br label %377

377:                                              ; preds = %374, %287
  %378 = phi %"struct.CFDE_TextOut::Piece"** [ %376, %374 ], [ %258, %287 ]
  %379 = phi i64 [ %375, %374 ], [ %294, %287 ]
  store i64 %292, i64* %191, align 8
  store i64 %294, i64* %196, align 8
  store i64 %379, i64* %195, align 8
  store i64 %296, i64* %189, align 8
  %380 = icmp eq %"struct.CFDE_TextOut::Piece"** %378, null
  %381 = inttoptr i64 %379 to i64*
  br i1 %380, label %385, label %382

382:                                              ; preds = %377
  %383 = bitcast %"struct.CFDE_TextOut::Piece"** %378 to i8*
  call void @_ZdlPv(i8* %383) #13
  %384 = load i64*, i64** %244, align 8
  br label %385

385:                                              ; preds = %246, %275, %377, %382
  %386 = phi i64* [ %384, %382 ], [ %381, %377 ], [ %279, %275 ], [ %256, %246 ]
  store i64 %251, i64* %386, align 8
  %387 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  %388 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %387, i64 1
  store %"struct.CFDE_TextOut::Piece"** %388, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  %389 = add i64 %248, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %768, label %246

391:                                              ; preds = %186
  %392 = bitcast %"struct.std::__1::__split_buffer.236"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %392) #12
  %393 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %5, i64 0, i32 0
  %394 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %5, i64 0, i32 1
  %395 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %5, i64 0, i32 2
  %396 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %5, i64 0, i32 3, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %5, i64 0, i32 3, i32 1, i32 0
  %398 = ashr exact i64 %193, 2
  %399 = add nsw i64 %198, %24
  %400 = icmp ult i64 %398, %399
  %401 = select i1 %400, i64 %399, i64 %398
  %402 = sub nsw i64 %198, %23
  %403 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 3
  %404 = bitcast %"struct.std::__1::__split_buffer.236"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %404, i8 -86, i64 24, i1 false)
  store %"struct.CFDE_TextOut::Piece"** null, %"struct.CFDE_TextOut::Piece"*** %396, align 8
  %405 = bitcast %"class.std::__1::allocator.185"** %397 to %"class.std::__1::__compressed_pair.182"**
  store %"class.std::__1::__compressed_pair.182"* %403, %"class.std::__1::__compressed_pair.182"** %405, align 8
  %406 = icmp eq i64 %401, 0
  br i1 %406, label %414, label %407

407:                                              ; preds = %391
  %408 = icmp ugt i64 %401, 2305843009213693951
  br i1 %408, label %409, label %410

409:                                              ; preds = %407
  tail call void @abort() #14
  unreachable

410:                                              ; preds = %407
  %411 = shl i64 %401, 3
  %412 = tail call i8* @_Znwm(i64 %411) #13
  %413 = bitcast i8* %412 to %"struct.CFDE_TextOut::Piece"**
  br label %414

414:                                              ; preds = %410, %391
  %415 = phi %"struct.CFDE_TextOut::Piece"** [ %413, %410 ], [ null, %391 ]
  store %"struct.CFDE_TextOut::Piece"** %415, %"struct.CFDE_TextOut::Piece"*** %393, align 16
  %416 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %415, i64 %402
  store %"struct.CFDE_TextOut::Piece"** %416, %"struct.CFDE_TextOut::Piece"*** %395, align 16
  store %"struct.CFDE_TextOut::Piece"** %416, %"struct.CFDE_TextOut::Piece"*** %394, align 8
  %417 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %415, i64 %401
  store %"struct.CFDE_TextOut::Piece"** %417, %"struct.CFDE_TextOut::Piece"*** %396, align 8
  %418 = bitcast %"struct.CFDE_TextOut::Piece"*** %396 to i64*
  %419 = bitcast %"struct.std::__1::__split_buffer.236"* %5 to i64*
  %420 = bitcast %"struct.CFDE_TextOut::Piece"*** %394 to i64*
  %421 = bitcast %"struct.CFDE_TextOut::Piece"*** %395 to i64*
  br label %433

422:                                              ; preds = %567
  %423 = icmp eq i64 %23, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %422
  %425 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  br label %718

426:                                              ; preds = %422
  %427 = bitcast %"struct.CFDE_TextOut::Piece"*** %9 to i64**
  %428 = bitcast %"struct.CFDE_TextOut::Piece"*** %396 to i64*
  %429 = bitcast %"struct.std::__1::__split_buffer.236"* %5 to i64*
  %430 = bitcast %"struct.CFDE_TextOut::Piece"*** %394 to i64*
  %431 = bitcast %"struct.CFDE_TextOut::Piece"*** %395 to i64*
  %432 = load i64*, i64** %427, align 8
  br label %575

433:                                              ; preds = %573, %414
  %434 = phi %"struct.CFDE_TextOut::Piece"** [ %417, %414 ], [ %574, %573 ]
  %435 = phi %"struct.CFDE_TextOut::Piece"** [ %416, %414 ], [ %570, %573 ]
  %436 = phi i64 [ %24, %414 ], [ %571, %573 ]
  %437 = tail call i8* @_Znwm(i64 4080) #13
  %438 = ptrtoint i8* %437 to i64
  %439 = icmp eq %"struct.CFDE_TextOut::Piece"** %435, %434
  %440 = ptrtoint %"struct.CFDE_TextOut::Piece"** %434 to i64
  %441 = bitcast %"struct.CFDE_TextOut::Piece"** %435 to i64*
  br i1 %439, label %442, label %567

442:                                              ; preds = %433
  %443 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %394, align 8
  %444 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %393, align 16
  %445 = icmp ugt %"struct.CFDE_TextOut::Piece"** %443, %444
  %446 = ptrtoint %"struct.CFDE_TextOut::Piece"** %444 to i64
  br i1 %445, label %447, label %463

447:                                              ; preds = %442
  %448 = ptrtoint %"struct.CFDE_TextOut::Piece"** %443 to i64
  %449 = sub i64 %448, %446
  %450 = ashr exact i64 %449, 3
  %451 = add nsw i64 %450, 1
  %452 = sdiv i64 %451, -2
  %453 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %443, i64 %452
  %454 = sub i64 %440, %448
  %455 = ashr exact i64 %454, 3
  %456 = icmp eq i64 %454, 0
  br i1 %456, label %460, label %457

457:                                              ; preds = %447
  %458 = bitcast %"struct.CFDE_TextOut::Piece"** %453 to i8*
  %459 = bitcast %"struct.CFDE_TextOut::Piece"** %443 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %458, i8* align 8 %459, i64 %454, i1 false) #12
  br label %460

460:                                              ; preds = %457, %447
  %461 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %453, i64 %455
  store %"struct.CFDE_TextOut::Piece"** %461, %"struct.CFDE_TextOut::Piece"*** %395, align 16
  store %"struct.CFDE_TextOut::Piece"** %453, %"struct.CFDE_TextOut::Piece"*** %394, align 8
  %462 = bitcast %"struct.CFDE_TextOut::Piece"** %461 to i64*
  br label %567

463:                                              ; preds = %442
  %464 = sub i64 %440, %446
  %465 = ashr exact i64 %464, 2
  %466 = icmp eq i64 %464, 0
  %467 = select i1 %466, i64 1, i64 %465
  %468 = icmp ugt i64 %467, 2305843009213693951
  br i1 %468, label %469, label %470

469:                                              ; preds = %463
  tail call void @abort() #14
  unreachable

470:                                              ; preds = %463
  %471 = lshr i64 %467, 2
  %472 = shl i64 %467, 3
  %473 = tail call i8* @_Znwm(i64 %472) #13
  %474 = bitcast i8* %473 to %"struct.CFDE_TextOut::Piece"**
  %475 = ptrtoint i8* %473 to i64
  %476 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %474, i64 %471
  %477 = ptrtoint %"struct.CFDE_TextOut::Piece"** %476 to i64
  %478 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %474, i64 %467
  %479 = ptrtoint %"struct.CFDE_TextOut::Piece"** %478 to i64
  %480 = ptrtoint %"struct.CFDE_TextOut::Piece"** %443 to i64
  %481 = sub i64 %440, %480
  %482 = ashr exact i64 %481, 3
  %483 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %476, i64 %482
  %484 = icmp eq i64 %481, 0
  br i1 %484, label %560, label %485

485:                                              ; preds = %470
  %486 = add i64 %481, -8
  %487 = lshr i64 %486, 3
  %488 = add nuw nsw i64 %487, 1
  %489 = and i64 %488, 7
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %506, label %491

491:                                              ; preds = %485, %491
  %492 = phi %"struct.CFDE_TextOut::Piece"** [ %499, %491 ], [ %476, %485 ]
  %493 = phi i64 [ %500, %491 ], [ %477, %485 ]
  %494 = phi %"struct.CFDE_TextOut::Piece"** [ %501, %491 ], [ %443, %485 ]
  %495 = phi i64 [ %502, %491 ], [ %489, %485 ]
  %496 = bitcast %"struct.CFDE_TextOut::Piece"** %494 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = inttoptr i64 %493 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %492, i64 1
  %500 = ptrtoint %"struct.CFDE_TextOut::Piece"** %499 to i64
  %501 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %494, i64 1
  %502 = add i64 %495, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %491, !llvm.loop !59

504:                                              ; preds = %491
  %505 = ptrtoint %"struct.CFDE_TextOut::Piece"** %499 to i64
  br label %506

506:                                              ; preds = %485, %504
  %507 = phi %"struct.CFDE_TextOut::Piece"** [ %476, %485 ], [ %499, %504 ]
  %508 = phi i64 [ %477, %485 ], [ %505, %504 ]
  %509 = phi %"struct.CFDE_TextOut::Piece"** [ %443, %485 ], [ %501, %504 ]
  %510 = icmp ult i64 %486, 56
  br i1 %510, label %557, label %511

511:                                              ; preds = %506, %511
  %512 = phi %"struct.CFDE_TextOut::Piece"** [ %553, %511 ], [ %507, %506 ]
  %513 = phi i64 [ %554, %511 ], [ %508, %506 ]
  %514 = phi %"struct.CFDE_TextOut::Piece"** [ %555, %511 ], [ %509, %506 ]
  %515 = bitcast %"struct.CFDE_TextOut::Piece"** %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = inttoptr i64 %513 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %512, i64 1
  %519 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %514, i64 1
  %520 = bitcast %"struct.CFDE_TextOut::Piece"** %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = bitcast %"struct.CFDE_TextOut::Piece"** %518 to i64*
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %512, i64 2
  %524 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %514, i64 2
  %525 = bitcast %"struct.CFDE_TextOut::Piece"** %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = bitcast %"struct.CFDE_TextOut::Piece"** %523 to i64*
  store i64 %526, i64* %527, align 8
  %528 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %512, i64 3
  %529 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %514, i64 3
  %530 = bitcast %"struct.CFDE_TextOut::Piece"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = bitcast %"struct.CFDE_TextOut::Piece"** %528 to i64*
  store i64 %531, i64* %532, align 8
  %533 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %512, i64 4
  %534 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %514, i64 4
  %535 = bitcast %"struct.CFDE_TextOut::Piece"** %534 to i64*
  %536 = load i64, i64* %535, align 8
  %537 = bitcast %"struct.CFDE_TextOut::Piece"** %533 to i64*
  store i64 %536, i64* %537, align 8
  %538 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %512, i64 5
  %539 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %514, i64 5
  %540 = bitcast %"struct.CFDE_TextOut::Piece"** %539 to i64*
  %541 = load i64, i64* %540, align 8
  %542 = bitcast %"struct.CFDE_TextOut::Piece"** %538 to i64*
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %512, i64 6
  %544 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %514, i64 6
  %545 = bitcast %"struct.CFDE_TextOut::Piece"** %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = bitcast %"struct.CFDE_TextOut::Piece"** %543 to i64*
  store i64 %546, i64* %547, align 8
  %548 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %512, i64 7
  %549 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %514, i64 7
  %550 = bitcast %"struct.CFDE_TextOut::Piece"** %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = bitcast %"struct.CFDE_TextOut::Piece"** %548 to i64*
  store i64 %551, i64* %552, align 8
  %553 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %512, i64 8
  %554 = ptrtoint %"struct.CFDE_TextOut::Piece"** %553 to i64
  %555 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %514, i64 8
  %556 = icmp eq %"struct.CFDE_TextOut::Piece"** %483, %553
  br i1 %556, label %557, label %511

557:                                              ; preds = %511, %506
  %558 = ptrtoint %"struct.CFDE_TextOut::Piece"** %483 to i64
  %559 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %393, align 16
  br label %560

560:                                              ; preds = %557, %470
  %561 = phi %"struct.CFDE_TextOut::Piece"** [ %559, %557 ], [ %444, %470 ]
  %562 = phi i64 [ %558, %557 ], [ %477, %470 ]
  store i64 %475, i64* %419, align 16
  store i64 %477, i64* %420, align 8
  store i64 %562, i64* %421, align 16
  store i64 %479, i64* %418, align 8
  %563 = icmp eq %"struct.CFDE_TextOut::Piece"** %561, null
  %564 = inttoptr i64 %562 to i64*
  br i1 %563, label %567, label %565

565:                                              ; preds = %560
  %566 = bitcast %"struct.CFDE_TextOut::Piece"** %561 to i8*
  tail call void @_ZdlPv(i8* %566) #13
  br label %567

567:                                              ; preds = %433, %460, %560, %565
  %568 = phi i64* [ %564, %565 ], [ %564, %560 ], [ %462, %460 ], [ %441, %433 ]
  store i64 %438, i64* %568, align 8
  %569 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %395, align 16
  %570 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %569, i64 1
  store %"struct.CFDE_TextOut::Piece"** %570, %"struct.CFDE_TextOut::Piece"*** %395, align 16
  %571 = add i64 %436, -1
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %422, label %573

573:                                              ; preds = %567
  %574 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %396, align 8
  br label %433

575:                                              ; preds = %426, %708
  %576 = phi %"struct.CFDE_TextOut::Piece"** [ %570, %426 ], [ %712, %708 ]
  %577 = phi i64* [ %432, %426 ], [ %717, %708 ]
  %578 = phi i64 [ %23, %426 ], [ %715, %708 ]
  %579 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %396, align 8
  %580 = icmp eq %"struct.CFDE_TextOut::Piece"** %576, %579
  %581 = ptrtoint %"struct.CFDE_TextOut::Piece"** %579 to i64
  %582 = bitcast %"struct.CFDE_TextOut::Piece"** %576 to i64*
  br i1 %580, label %583, label %708

583:                                              ; preds = %575
  %584 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %394, align 8
  %585 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %393, align 16
  %586 = icmp ugt %"struct.CFDE_TextOut::Piece"** %584, %585
  %587 = ptrtoint %"struct.CFDE_TextOut::Piece"** %585 to i64
  br i1 %586, label %588, label %604

588:                                              ; preds = %583
  %589 = ptrtoint %"struct.CFDE_TextOut::Piece"** %584 to i64
  %590 = sub i64 %589, %587
  %591 = ashr exact i64 %590, 3
  %592 = add nsw i64 %591, 1
  %593 = sdiv i64 %592, -2
  %594 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %584, i64 %593
  %595 = sub i64 %581, %589
  %596 = ashr exact i64 %595, 3
  %597 = icmp eq i64 %595, 0
  br i1 %597, label %601, label %598

598:                                              ; preds = %588
  %599 = bitcast %"struct.CFDE_TextOut::Piece"** %594 to i8*
  %600 = bitcast %"struct.CFDE_TextOut::Piece"** %584 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %599, i8* align 8 %600, i64 %595, i1 false) #12
  br label %601

601:                                              ; preds = %598, %588
  %602 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %594, i64 %596
  store %"struct.CFDE_TextOut::Piece"** %602, %"struct.CFDE_TextOut::Piece"*** %395, align 16
  store %"struct.CFDE_TextOut::Piece"** %594, %"struct.CFDE_TextOut::Piece"*** %394, align 8
  %603 = bitcast %"struct.CFDE_TextOut::Piece"** %602 to i64*
  br label %708

604:                                              ; preds = %583
  %605 = sub i64 %581, %587
  %606 = ashr exact i64 %605, 2
  %607 = icmp eq i64 %605, 0
  %608 = select i1 %607, i64 1, i64 %606
  %609 = icmp ugt i64 %608, 2305843009213693951
  br i1 %609, label %610, label %611

610:                                              ; preds = %604
  tail call void @abort() #14
  unreachable

611:                                              ; preds = %604
  %612 = lshr i64 %608, 2
  %613 = shl i64 %608, 3
  %614 = tail call i8* @_Znwm(i64 %613) #13
  %615 = bitcast i8* %614 to %"struct.CFDE_TextOut::Piece"**
  %616 = ptrtoint i8* %614 to i64
  %617 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %615, i64 %612
  %618 = ptrtoint %"struct.CFDE_TextOut::Piece"** %617 to i64
  %619 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %615, i64 %608
  %620 = ptrtoint %"struct.CFDE_TextOut::Piece"** %619 to i64
  %621 = ptrtoint %"struct.CFDE_TextOut::Piece"** %584 to i64
  %622 = sub i64 %581, %621
  %623 = ashr exact i64 %622, 3
  %624 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %617, i64 %623
  %625 = icmp eq i64 %622, 0
  br i1 %625, label %701, label %626

626:                                              ; preds = %611
  %627 = add i64 %622, -8
  %628 = lshr i64 %627, 3
  %629 = add nuw nsw i64 %628, 1
  %630 = and i64 %629, 7
  %631 = icmp eq i64 %630, 0
  br i1 %631, label %647, label %632

632:                                              ; preds = %626, %632
  %633 = phi %"struct.CFDE_TextOut::Piece"** [ %640, %632 ], [ %617, %626 ]
  %634 = phi i64 [ %641, %632 ], [ %618, %626 ]
  %635 = phi %"struct.CFDE_TextOut::Piece"** [ %642, %632 ], [ %584, %626 ]
  %636 = phi i64 [ %643, %632 ], [ %630, %626 ]
  %637 = bitcast %"struct.CFDE_TextOut::Piece"** %635 to i64*
  %638 = load i64, i64* %637, align 8
  %639 = inttoptr i64 %634 to i64*
  store i64 %638, i64* %639, align 8
  %640 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %633, i64 1
  %641 = ptrtoint %"struct.CFDE_TextOut::Piece"** %640 to i64
  %642 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %635, i64 1
  %643 = add i64 %636, -1
  %644 = icmp eq i64 %643, 0
  br i1 %644, label %645, label %632, !llvm.loop !60

645:                                              ; preds = %632
  %646 = ptrtoint %"struct.CFDE_TextOut::Piece"** %640 to i64
  br label %647

647:                                              ; preds = %626, %645
  %648 = phi %"struct.CFDE_TextOut::Piece"** [ %617, %626 ], [ %640, %645 ]
  %649 = phi i64 [ %618, %626 ], [ %646, %645 ]
  %650 = phi %"struct.CFDE_TextOut::Piece"** [ %584, %626 ], [ %642, %645 ]
  %651 = icmp ult i64 %627, 56
  br i1 %651, label %698, label %652

652:                                              ; preds = %647, %652
  %653 = phi %"struct.CFDE_TextOut::Piece"** [ %694, %652 ], [ %648, %647 ]
  %654 = phi i64 [ %695, %652 ], [ %649, %647 ]
  %655 = phi %"struct.CFDE_TextOut::Piece"** [ %696, %652 ], [ %650, %647 ]
  %656 = bitcast %"struct.CFDE_TextOut::Piece"** %655 to i64*
  %657 = load i64, i64* %656, align 8
  %658 = inttoptr i64 %654 to i64*
  store i64 %657, i64* %658, align 8
  %659 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %653, i64 1
  %660 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %655, i64 1
  %661 = bitcast %"struct.CFDE_TextOut::Piece"** %660 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = bitcast %"struct.CFDE_TextOut::Piece"** %659 to i64*
  store i64 %662, i64* %663, align 8
  %664 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %653, i64 2
  %665 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %655, i64 2
  %666 = bitcast %"struct.CFDE_TextOut::Piece"** %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = bitcast %"struct.CFDE_TextOut::Piece"** %664 to i64*
  store i64 %667, i64* %668, align 8
  %669 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %653, i64 3
  %670 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %655, i64 3
  %671 = bitcast %"struct.CFDE_TextOut::Piece"** %670 to i64*
  %672 = load i64, i64* %671, align 8
  %673 = bitcast %"struct.CFDE_TextOut::Piece"** %669 to i64*
  store i64 %672, i64* %673, align 8
  %674 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %653, i64 4
  %675 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %655, i64 4
  %676 = bitcast %"struct.CFDE_TextOut::Piece"** %675 to i64*
  %677 = load i64, i64* %676, align 8
  %678 = bitcast %"struct.CFDE_TextOut::Piece"** %674 to i64*
  store i64 %677, i64* %678, align 8
  %679 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %653, i64 5
  %680 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %655, i64 5
  %681 = bitcast %"struct.CFDE_TextOut::Piece"** %680 to i64*
  %682 = load i64, i64* %681, align 8
  %683 = bitcast %"struct.CFDE_TextOut::Piece"** %679 to i64*
  store i64 %682, i64* %683, align 8
  %684 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %653, i64 6
  %685 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %655, i64 6
  %686 = bitcast %"struct.CFDE_TextOut::Piece"** %685 to i64*
  %687 = load i64, i64* %686, align 8
  %688 = bitcast %"struct.CFDE_TextOut::Piece"** %684 to i64*
  store i64 %687, i64* %688, align 8
  %689 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %653, i64 7
  %690 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %655, i64 7
  %691 = bitcast %"struct.CFDE_TextOut::Piece"** %690 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = bitcast %"struct.CFDE_TextOut::Piece"** %689 to i64*
  store i64 %692, i64* %693, align 8
  %694 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %653, i64 8
  %695 = ptrtoint %"struct.CFDE_TextOut::Piece"** %694 to i64
  %696 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %655, i64 8
  %697 = icmp eq %"struct.CFDE_TextOut::Piece"** %624, %694
  br i1 %697, label %698, label %652

698:                                              ; preds = %652, %647
  %699 = ptrtoint %"struct.CFDE_TextOut::Piece"** %624 to i64
  %700 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %393, align 16
  br label %701

701:                                              ; preds = %698, %611
  %702 = phi %"struct.CFDE_TextOut::Piece"** [ %700, %698 ], [ %585, %611 ]
  %703 = phi i64 [ %699, %698 ], [ %618, %611 ]
  store i64 %616, i64* %429, align 16
  store i64 %618, i64* %430, align 8
  store i64 %703, i64* %431, align 16
  store i64 %620, i64* %428, align 8
  %704 = icmp eq %"struct.CFDE_TextOut::Piece"** %702, null
  %705 = inttoptr i64 %703 to i64*
  br i1 %704, label %708, label %706

706:                                              ; preds = %701
  %707 = bitcast %"struct.CFDE_TextOut::Piece"** %702 to i8*
  tail call void @_ZdlPv(i8* %707) #13
  br label %708

708:                                              ; preds = %575, %601, %701, %706
  %709 = phi i64* [ %705, %706 ], [ %705, %701 ], [ %603, %601 ], [ %582, %575 ]
  %710 = load i64, i64* %577, align 8
  store i64 %710, i64* %709, align 8
  %711 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %395, align 16
  %712 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %711, i64 1
  store %"struct.CFDE_TextOut::Piece"** %712, %"struct.CFDE_TextOut::Piece"*** %395, align 16
  %713 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %714 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %713, i64 1
  store %"struct.CFDE_TextOut::Piece"** %714, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %715 = add i64 %578, -1
  %716 = icmp eq i64 %715, 0
  %717 = bitcast %"struct.CFDE_TextOut::Piece"** %714 to i64*
  br i1 %716, label %718, label %575

718:                                              ; preds = %708, %424
  %719 = phi %"struct.CFDE_TextOut::Piece"** [ %570, %424 ], [ %712, %708 ]
  %720 = phi %"struct.CFDE_TextOut::Piece"** [ %425, %424 ], [ %714, %708 ]
  %721 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %7, align 8
  %722 = icmp eq %"struct.CFDE_TextOut::Piece"** %721, %720
  br i1 %722, label %723, label %763

723:                                              ; preds = %718
  %724 = ptrtoint %"struct.CFDE_TextOut::Piece"** %721 to i64
  %725 = ptrtoint %"struct.CFDE_TextOut::Piece"** %719 to i64
  %726 = bitcast %"struct.CFDE_TextOut::Piece"*** %395 to i64*
  br label %731

727:                                              ; preds = %763
  %728 = load i64, i64* %195, align 8
  %729 = bitcast %"struct.CFDE_TextOut::Piece"*** %395 to i64*
  %730 = load i64, i64* %729, align 16
  br label %731

731:                                              ; preds = %723, %727
  %732 = phi i64* [ %726, %723 ], [ %729, %727 ]
  %733 = phi i64 [ %725, %723 ], [ %730, %727 ]
  %734 = phi i64 [ %724, %723 ], [ %728, %727 ]
  %735 = phi %"struct.CFDE_TextOut::Piece"** [ %720, %723 ], [ %766, %727 ]
  %736 = ptrtoint %"struct.CFDE_TextOut::Piece"** %735 to i64
  %737 = load i64, i64* %191, align 8
  %738 = bitcast %"struct.std::__1::__split_buffer.236"* %5 to i64*
  %739 = bitcast %"struct.CFDE_TextOut::Piece"*** %394 to i64*
  %740 = bitcast %"struct.std::__1::__split_buffer.236"* %5 to <2 x i64>*
  %741 = load <2 x i64>, <2 x i64>* %740, align 16
  store i64 %737, i64* %738, align 16
  %742 = bitcast %"class.std::__1::deque.179"* %0 to <2 x i64>*
  store <2 x i64> %741, <2 x i64>* %742, align 8
  store i64 %736, i64* %739, align 8
  store i64 %733, i64* %195, align 8
  store i64 %734, i64* %732, align 8
  %743 = load i64, i64* %189, align 8
  %744 = bitcast %"struct.CFDE_TextOut::Piece"*** %396 to i64*
  %745 = load i64, i64* %744, align 8
  store i64 %745, i64* %189, align 8
  store i64 %743, i64* %744, align 8
  %746 = load i64, i64* %19, align 8
  %747 = mul i64 %23, -102
  %748 = add i64 %746, %747
  store i64 %748, i64* %19, align 8
  %749 = inttoptr i64 %734 to %"struct.CFDE_TextOut::Piece"**
  %750 = icmp eq %"struct.CFDE_TextOut::Piece"** %735, %749
  br i1 %750, label %758, label %751

751:                                              ; preds = %731
  %752 = getelementptr %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %749, i64 -1
  %753 = ptrtoint %"struct.CFDE_TextOut::Piece"** %752 to i64
  %754 = sub i64 %753, %736
  %755 = lshr i64 %754, 3
  %756 = xor i64 %755, -1
  %757 = getelementptr %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %749, i64 %756
  store %"struct.CFDE_TextOut::Piece"** %757, %"struct.CFDE_TextOut::Piece"*** %395, align 16
  br label %758

758:                                              ; preds = %751, %731
  %759 = icmp eq i64 %737, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %758
  %761 = inttoptr i64 %737 to i8*
  call void @_ZdlPv(i8* %761) #13
  br label %762

762:                                              ; preds = %758, %760
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %392) #12
  br label %768

763:                                              ; preds = %718, %763
  %764 = phi %"struct.CFDE_TextOut::Piece"** [ %765, %763 ], [ %721, %718 ]
  %765 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %764, i64 -1
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.236"* nonnull %5, %"struct.CFDE_TextOut::Piece"** dereferenceable(8) %765)
  %766 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %9, align 8
  %767 = icmp eq %"struct.CFDE_TextOut::Piece"** %765, %766
  br i1 %767, label %727, label %763

768:                                              ; preds = %385, %178, %236, %27, %762
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer.181"*, %"struct.CFDE_TextOut::Piece"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.181", %"struct.std::__1::__split_buffer.181"* %0, i64 0, i32 2
  %4 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.181", %"struct.std::__1::__split_buffer.181"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %5, align 8
  %7 = icmp eq %"struct.CFDE_TextOut::Piece"** %4, %6
  %8 = ptrtoint %"struct.CFDE_TextOut::Piece"** %6 to i64
  %9 = bitcast %"struct.CFDE_TextOut::Piece"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.181", %"struct.std::__1::__split_buffer.181"* %0, i64 0, i32 1
  %12 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.181", %"struct.std::__1::__split_buffer.181"* %0, i64 0, i32 0
  %14 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %13, align 8
  %15 = icmp ugt %"struct.CFDE_TextOut::Piece"** %12, %14
  %16 = ptrtoint %"struct.CFDE_TextOut::Piece"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.CFDE_TextOut::Piece"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %12, i64 %22
  %24 = ptrtoint %"struct.CFDE_TextOut::Piece"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.CFDE_TextOut::Piece"** %23 to i8*
  %30 = bitcast %"struct.CFDE_TextOut::Piece"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.CFDE_TextOut::Piece"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %23, i64 %26
  store %"struct.CFDE_TextOut::Piece"** %34, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %35 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %33, i64 %22
  store %"struct.CFDE_TextOut::Piece"** %35, %"struct.CFDE_TextOut::Piece"*** %11, align 8
  %36 = bitcast %"struct.CFDE_TextOut::Piece"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.CFDE_TextOut::Piece"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.181"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"struct.CFDE_TextOut::Piece"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %50, i64 %47
  %53 = ptrtoint %"struct.CFDE_TextOut::Piece"** %52 to i64
  %54 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %50, i64 %43
  %55 = ptrtoint %"struct.CFDE_TextOut::Piece"** %54 to i64
  %56 = ptrtoint %"struct.CFDE_TextOut::Piece"** %12 to i64
  %57 = ptrtoint %"struct.CFDE_TextOut::Piece"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.CFDE_TextOut::Piece"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.CFDE_TextOut::Piece"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.CFDE_TextOut::Piece"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %69, i64 1
  %77 = ptrtoint %"struct.CFDE_TextOut::Piece"** %76 to i64
  %78 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !61

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.CFDE_TextOut::Piece"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.CFDE_TextOut::Piece"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.CFDE_TextOut::Piece"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.CFDE_TextOut::Piece"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.CFDE_TextOut::Piece"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.CFDE_TextOut::Piece"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, i64 1
  %96 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %91, i64 1
  %97 = bitcast %"struct.CFDE_TextOut::Piece"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.CFDE_TextOut::Piece"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, i64 2
  %101 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %91, i64 2
  %102 = bitcast %"struct.CFDE_TextOut::Piece"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.CFDE_TextOut::Piece"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, i64 3
  %106 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %91, i64 3
  %107 = bitcast %"struct.CFDE_TextOut::Piece"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.CFDE_TextOut::Piece"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, i64 4
  %111 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %91, i64 4
  %112 = bitcast %"struct.CFDE_TextOut::Piece"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.CFDE_TextOut::Piece"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, i64 5
  %116 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %91, i64 5
  %117 = bitcast %"struct.CFDE_TextOut::Piece"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.CFDE_TextOut::Piece"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, i64 6
  %121 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %91, i64 6
  %122 = bitcast %"struct.CFDE_TextOut::Piece"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.CFDE_TextOut::Piece"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, i64 7
  %126 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %91, i64 7
  %127 = bitcast %"struct.CFDE_TextOut::Piece"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.CFDE_TextOut::Piece"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %89, i64 8
  %131 = ptrtoint %"struct.CFDE_TextOut::Piece"** %130 to i64
  %132 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %91, i64 8
  %133 = icmp eq %"struct.CFDE_TextOut::Piece"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.CFDE_TextOut::Piece"** %60 to i64
  %136 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.CFDE_TextOut::Piece"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.CFDE_TextOut::Piece"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.CFDE_TextOut::Piece"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.CFDE_TextOut::Piece"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.CFDE_TextOut::Piece"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"struct.CFDE_TextOut::Piece"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.CFDE_TextOut::Piece"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %153 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %152, i64 1
  store %"struct.CFDE_TextOut::Piece"** %153, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer.181"*, %"struct.CFDE_TextOut::Piece"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.181", %"struct.std::__1::__split_buffer.181"* %0, i64 0, i32 1
  %4 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.181", %"struct.std::__1::__split_buffer.181"* %0, i64 0, i32 0
  %6 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %5, align 8
  %7 = icmp eq %"struct.CFDE_TextOut::Piece"** %4, %6
  %8 = ptrtoint %"struct.CFDE_TextOut::Piece"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.181", %"struct.std::__1::__split_buffer.181"* %0, i64 0, i32 2
  %11 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.181", %"struct.std::__1::__split_buffer.181"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %12, align 8
  %14 = icmp ult %"struct.CFDE_TextOut::Piece"** %11, %13
  %15 = bitcast %"struct.CFDE_TextOut::Piece"*** %12 to i64*
  %16 = ptrtoint %"struct.CFDE_TextOut::Piece"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.CFDE_TextOut::Piece"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %11, i64 %22
  %24 = ptrtoint %"struct.CFDE_TextOut::Piece"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %23, i64 %29
  %31 = bitcast %"struct.CFDE_TextOut::Piece"** %30 to i8*
  %32 = bitcast %"struct.CFDE_TextOut::Piece"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.CFDE_TextOut::Piece"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.CFDE_TextOut::Piece"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.CFDE_TextOut::Piece"** %36, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %37 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %35, i64 %22
  store %"struct.CFDE_TextOut::Piece"** %37, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.181"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"struct.CFDE_TextOut::Piece"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %51, i64 %48
  %54 = ptrtoint %"struct.CFDE_TextOut::Piece"** %53 to i64
  %55 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %51, i64 %43
  %56 = ptrtoint %"struct.CFDE_TextOut::Piece"** %55 to i64
  %57 = ptrtoint %"struct.CFDE_TextOut::Piece"** %4 to i64
  %58 = ptrtoint %"struct.CFDE_TextOut::Piece"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.CFDE_TextOut::Piece"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.CFDE_TextOut::Piece"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.CFDE_TextOut::Piece"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %70, i64 1
  %78 = ptrtoint %"struct.CFDE_TextOut::Piece"** %77 to i64
  %79 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !62

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.CFDE_TextOut::Piece"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.CFDE_TextOut::Piece"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.CFDE_TextOut::Piece"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.CFDE_TextOut::Piece"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.CFDE_TextOut::Piece"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.CFDE_TextOut::Piece"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 1
  %97 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 1
  %98 = bitcast %"struct.CFDE_TextOut::Piece"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.CFDE_TextOut::Piece"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 2
  %102 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 2
  %103 = bitcast %"struct.CFDE_TextOut::Piece"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.CFDE_TextOut::Piece"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 3
  %107 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 3
  %108 = bitcast %"struct.CFDE_TextOut::Piece"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.CFDE_TextOut::Piece"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 4
  %112 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 4
  %113 = bitcast %"struct.CFDE_TextOut::Piece"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.CFDE_TextOut::Piece"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 5
  %117 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 5
  %118 = bitcast %"struct.CFDE_TextOut::Piece"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.CFDE_TextOut::Piece"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 6
  %122 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 6
  %123 = bitcast %"struct.CFDE_TextOut::Piece"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.CFDE_TextOut::Piece"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 7
  %127 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 7
  %128 = bitcast %"struct.CFDE_TextOut::Piece"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.CFDE_TextOut::Piece"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 8
  %132 = ptrtoint %"struct.CFDE_TextOut::Piece"** %131 to i64
  %133 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 8
  %134 = icmp eq %"struct.CFDE_TextOut::Piece"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.CFDE_TextOut::Piece"** %61 to i64
  %137 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.CFDE_TextOut::Piece"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.CFDE_TextOut::Piece"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.CFDE_TextOut::Piece"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.CFDE_TextOut::Piece"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.CFDE_TextOut::Piece"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.CFDE_TextOut::Piece"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %148, i64 -1
  %150 = bitcast %"struct.CFDE_TextOut::Piece"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.CFDE_TextOut::Piece"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %154 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %153, i64 -1
  store %"struct.CFDE_TextOut::Piece"** %154, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.236"*, %"struct.CFDE_TextOut::Piece"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %0, i64 0, i32 1
  %4 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %0, i64 0, i32 0
  %6 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %5, align 8
  %7 = icmp eq %"struct.CFDE_TextOut::Piece"** %4, %6
  %8 = ptrtoint %"struct.CFDE_TextOut::Piece"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %0, i64 0, i32 2
  %11 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %12, align 8
  %14 = icmp ult %"struct.CFDE_TextOut::Piece"** %11, %13
  %15 = bitcast %"struct.CFDE_TextOut::Piece"*** %12 to i64*
  %16 = ptrtoint %"struct.CFDE_TextOut::Piece"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.CFDE_TextOut::Piece"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %11, i64 %22
  %24 = ptrtoint %"struct.CFDE_TextOut::Piece"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %23, i64 %29
  %31 = bitcast %"struct.CFDE_TextOut::Piece"** %30 to i8*
  %32 = bitcast %"struct.CFDE_TextOut::Piece"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.CFDE_TextOut::Piece"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.CFDE_TextOut::Piece"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.CFDE_TextOut::Piece"** %36, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %37 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %35, i64 %22
  store %"struct.CFDE_TextOut::Piece"** %37, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.236"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"struct.CFDE_TextOut::Piece"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %51, i64 %48
  %54 = ptrtoint %"struct.CFDE_TextOut::Piece"** %53 to i64
  %55 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %51, i64 %43
  %56 = ptrtoint %"struct.CFDE_TextOut::Piece"** %55 to i64
  %57 = ptrtoint %"struct.CFDE_TextOut::Piece"** %4 to i64
  %58 = ptrtoint %"struct.CFDE_TextOut::Piece"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.CFDE_TextOut::Piece"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.CFDE_TextOut::Piece"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.CFDE_TextOut::Piece"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %70, i64 1
  %78 = ptrtoint %"struct.CFDE_TextOut::Piece"** %77 to i64
  %79 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !63

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.CFDE_TextOut::Piece"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.CFDE_TextOut::Piece"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.CFDE_TextOut::Piece"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.CFDE_TextOut::Piece"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.CFDE_TextOut::Piece"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.CFDE_TextOut::Piece"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 1
  %97 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 1
  %98 = bitcast %"struct.CFDE_TextOut::Piece"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.CFDE_TextOut::Piece"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 2
  %102 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 2
  %103 = bitcast %"struct.CFDE_TextOut::Piece"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.CFDE_TextOut::Piece"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 3
  %107 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 3
  %108 = bitcast %"struct.CFDE_TextOut::Piece"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.CFDE_TextOut::Piece"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 4
  %112 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 4
  %113 = bitcast %"struct.CFDE_TextOut::Piece"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.CFDE_TextOut::Piece"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 5
  %117 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 5
  %118 = bitcast %"struct.CFDE_TextOut::Piece"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.CFDE_TextOut::Piece"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 6
  %122 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 6
  %123 = bitcast %"struct.CFDE_TextOut::Piece"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.CFDE_TextOut::Piece"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 7
  %127 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 7
  %128 = bitcast %"struct.CFDE_TextOut::Piece"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.CFDE_TextOut::Piece"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %90, i64 8
  %132 = ptrtoint %"struct.CFDE_TextOut::Piece"** %131 to i64
  %133 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %92, i64 8
  %134 = icmp eq %"struct.CFDE_TextOut::Piece"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.CFDE_TextOut::Piece"** %61 to i64
  %137 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.CFDE_TextOut::Piece"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.CFDE_TextOut::Piece"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.CFDE_TextOut::Piece"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.CFDE_TextOut::Piece"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.CFDE_TextOut::Piece"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.CFDE_TextOut::Piece"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %148, i64 -1
  %150 = bitcast %"struct.CFDE_TextOut::Piece"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.CFDE_TextOut::Piece"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  %154 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %153, i64 -1
  store %"struct.CFDE_TextOut::Piece"** %154, %"struct.CFDE_TextOut::Piece"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN12CFDE_TextOut5PieceENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque.179"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.CFDE_TextOut::Piece"*, align 8
  %3 = alloca %"struct.CFDE_TextOut::Piece"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.236", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 101
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -102
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  %12 = bitcast %"struct.CFDE_TextOut::Piece"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %11, i64 1
  store %"struct.CFDE_TextOut::Piece"** %14, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %17, align 8
  %19 = icmp eq %"struct.CFDE_TextOut::Piece"** %16, %18
  %20 = ptrtoint %"struct.CFDE_TextOut::Piece"** %18 to i64
  %21 = bitcast %"struct.CFDE_TextOut::Piece"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %23, align 8
  %25 = icmp ugt %"struct.CFDE_TextOut::Piece"** %14, %24
  %26 = ptrtoint %"struct.CFDE_TextOut::Piece"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.CFDE_TextOut::Piece"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %14, i64 %32
  %34 = ptrtoint %"struct.CFDE_TextOut::Piece"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.CFDE_TextOut::Piece"** %33 to i8*
  %40 = bitcast %"struct.CFDE_TextOut::Piece"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #12
  %41 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.CFDE_TextOut::Piece"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %33, i64 %36
  store %"struct.CFDE_TextOut::Piece"** %44, %"struct.CFDE_TextOut::Piece"*** %15, align 8
  %45 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %43, i64 %32
  store %"struct.CFDE_TextOut::Piece"** %45, %"struct.CFDE_TextOut::Piece"*** %10, align 8
  %46 = bitcast %"struct.CFDE_TextOut::Piece"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.CFDE_TextOut::Piece"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.179"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #13
  %60 = bitcast i8* %59 to %"struct.CFDE_TextOut::Piece"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %60, i64 %57
  %63 = ptrtoint %"struct.CFDE_TextOut::Piece"** %62 to i64
  %64 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %60, i64 %53
  %65 = ptrtoint %"struct.CFDE_TextOut::Piece"** %64 to i64
  %66 = ptrtoint %"struct.CFDE_TextOut::Piece"** %14 to i64
  %67 = ptrtoint %"struct.CFDE_TextOut::Piece"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.CFDE_TextOut::Piece"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.CFDE_TextOut::Piece"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.CFDE_TextOut::Piece"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %79, i64 1
  %87 = ptrtoint %"struct.CFDE_TextOut::Piece"** %86 to i64
  %88 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !64

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.CFDE_TextOut::Piece"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.CFDE_TextOut::Piece"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.CFDE_TextOut::Piece"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.CFDE_TextOut::Piece"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.CFDE_TextOut::Piece"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.CFDE_TextOut::Piece"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, i64 1
  %106 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %101, i64 1
  %107 = bitcast %"struct.CFDE_TextOut::Piece"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.CFDE_TextOut::Piece"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, i64 2
  %111 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %101, i64 2
  %112 = bitcast %"struct.CFDE_TextOut::Piece"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.CFDE_TextOut::Piece"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, i64 3
  %116 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %101, i64 3
  %117 = bitcast %"struct.CFDE_TextOut::Piece"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.CFDE_TextOut::Piece"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, i64 4
  %121 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %101, i64 4
  %122 = bitcast %"struct.CFDE_TextOut::Piece"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.CFDE_TextOut::Piece"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, i64 5
  %126 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %101, i64 5
  %127 = bitcast %"struct.CFDE_TextOut::Piece"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.CFDE_TextOut::Piece"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, i64 6
  %131 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %101, i64 6
  %132 = bitcast %"struct.CFDE_TextOut::Piece"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.CFDE_TextOut::Piece"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, i64 7
  %136 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %101, i64 7
  %137 = bitcast %"struct.CFDE_TextOut::Piece"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.CFDE_TextOut::Piece"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %99, i64 8
  %141 = ptrtoint %"struct.CFDE_TextOut::Piece"** %140 to i64
  %142 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %101, i64 8
  %143 = icmp eq %"struct.CFDE_TextOut::Piece"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.CFDE_TextOut::Piece"** %70 to i64
  %146 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.CFDE_TextOut::Piece"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.CFDE_TextOut::Piece"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.CFDE_TextOut::Piece"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.CFDE_TextOut::Piece"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.CFDE_TextOut::Piece"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  %156 = bitcast %"struct.CFDE_TextOut::Piece"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %15, align 8
  %161 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %160, i64 1
  store %"struct.CFDE_TextOut::Piece"** %161, %"struct.CFDE_TextOut::Piece"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.CFDE_TextOut::Piece"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.CFDE_TextOut::Piece"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.CFDE_TextOut::Piece"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.179"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.CFDE_TextOut::Piece"**
  %181 = inttoptr i64 %169 to %"struct.CFDE_TextOut::Piece"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.CFDE_TextOut::Piece"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #12
  %186 = tail call i8* @_Znwm(i64 4080) #13
  %187 = bitcast %"struct.CFDE_TextOut::Piece"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer.181"* %163, %"struct.CFDE_TextOut::Piece"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #12
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.CFDE_TextOut::Piece"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #12
  %190 = tail call i8* @_Znwm(i64 4080) #13
  %191 = bitcast %"struct.CFDE_TextOut::Piece"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer.181"* %163, %"struct.CFDE_TextOut::Piece"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #12
  %192 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %167, align 8
  %193 = bitcast %"struct.CFDE_TextOut::Piece"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %192, i64 1
  store %"struct.CFDE_TextOut::Piece"** %195, %"struct.CFDE_TextOut::Piece"*** %167, align 8
  %196 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %164, align 8
  %197 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %172, align 8
  %198 = icmp eq %"struct.CFDE_TextOut::Piece"** %196, %197
  %199 = ptrtoint %"struct.CFDE_TextOut::Piece"** %197 to i64
  %200 = bitcast %"struct.CFDE_TextOut::Piece"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %202, align 8
  %204 = icmp ugt %"struct.CFDE_TextOut::Piece"** %195, %203
  %205 = ptrtoint %"struct.CFDE_TextOut::Piece"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.CFDE_TextOut::Piece"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %195, i64 %211
  %213 = ptrtoint %"struct.CFDE_TextOut::Piece"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.CFDE_TextOut::Piece"** %212 to i8*
  %219 = bitcast %"struct.CFDE_TextOut::Piece"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #12
  %220 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.CFDE_TextOut::Piece"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %212, i64 %215
  store %"struct.CFDE_TextOut::Piece"** %223, %"struct.CFDE_TextOut::Piece"*** %164, align 8
  %224 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %222, i64 %211
  store %"struct.CFDE_TextOut::Piece"** %224, %"struct.CFDE_TextOut::Piece"*** %167, align 8
  %225 = bitcast %"struct.CFDE_TextOut::Piece"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #13
  %237 = bitcast i8* %236 to %"struct.CFDE_TextOut::Piece"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %237, i64 %234
  %240 = ptrtoint %"struct.CFDE_TextOut::Piece"** %239 to i64
  %241 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %237, i64 %230
  %242 = ptrtoint %"struct.CFDE_TextOut::Piece"** %241 to i64
  %243 = ptrtoint %"struct.CFDE_TextOut::Piece"** %195 to i64
  %244 = ptrtoint %"struct.CFDE_TextOut::Piece"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.CFDE_TextOut::Piece"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.CFDE_TextOut::Piece"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.CFDE_TextOut::Piece"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %256, i64 1
  %264 = ptrtoint %"struct.CFDE_TextOut::Piece"** %263 to i64
  %265 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !65

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.CFDE_TextOut::Piece"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.CFDE_TextOut::Piece"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.CFDE_TextOut::Piece"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.CFDE_TextOut::Piece"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.CFDE_TextOut::Piece"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.CFDE_TextOut::Piece"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 1
  %283 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %278, i64 1
  %284 = bitcast %"struct.CFDE_TextOut::Piece"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.CFDE_TextOut::Piece"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 2
  %288 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %278, i64 2
  %289 = bitcast %"struct.CFDE_TextOut::Piece"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.CFDE_TextOut::Piece"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 3
  %293 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %278, i64 3
  %294 = bitcast %"struct.CFDE_TextOut::Piece"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.CFDE_TextOut::Piece"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 4
  %298 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %278, i64 4
  %299 = bitcast %"struct.CFDE_TextOut::Piece"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.CFDE_TextOut::Piece"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 5
  %303 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %278, i64 5
  %304 = bitcast %"struct.CFDE_TextOut::Piece"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.CFDE_TextOut::Piece"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 6
  %308 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %278, i64 6
  %309 = bitcast %"struct.CFDE_TextOut::Piece"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.CFDE_TextOut::Piece"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 7
  %313 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %278, i64 7
  %314 = bitcast %"struct.CFDE_TextOut::Piece"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.CFDE_TextOut::Piece"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %276, i64 8
  %318 = ptrtoint %"struct.CFDE_TextOut::Piece"** %317 to i64
  %319 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %278, i64 8
  %320 = icmp eq %"struct.CFDE_TextOut::Piece"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.CFDE_TextOut::Piece"** %247 to i64
  %323 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.CFDE_TextOut::Piece"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.CFDE_TextOut::Piece"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.CFDE_TextOut::Piece"** %325 to i8*
  call void @_ZdlPv(i8* %330) #13
  %331 = bitcast %"struct.CFDE_TextOut::Piece"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %164, align 8
  %336 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %335, i64 1
  store %"struct.CFDE_TextOut::Piece"** %336, %"struct.CFDE_TextOut::Piece"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.236"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #12
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.236", %"struct.std::__1::__split_buffer.236"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.179", %"class.std::__1::deque.179"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.236"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.CFDE_TextOut::Piece"** null, %"struct.CFDE_TextOut::Piece"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.185"** %342 to %"class.std::__1::__compressed_pair.182"**
  store %"class.std::__1::__compressed_pair.182"* %346, %"class.std::__1::__compressed_pair.182"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #13
  %354 = bitcast i8* %353 to %"struct.CFDE_TextOut::Piece"**
  %355 = bitcast %"struct.std::__1::__split_buffer.236"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %354, i64 %171
  store %"struct.CFDE_TextOut::Piece"** %356, %"struct.CFDE_TextOut::Piece"*** %340, align 8
  store %"struct.CFDE_TextOut::Piece"** %356, %"struct.CFDE_TextOut::Piece"*** %339, align 8
  %357 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %354, i64 %345
  store %"struct.CFDE_TextOut::Piece"** %357, %"struct.CFDE_TextOut::Piece"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4080) #13
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.CFDE_TextOut::Piece"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.CFDE_TextOut::Piece"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.CFDE_TextOut::Piece"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %356, i64 %370
  store %"struct.CFDE_TextOut::Piece"** %371, %"struct.CFDE_TextOut::Piece"*** %340, align 8
  store %"struct.CFDE_TextOut::Piece"** %371, %"struct.CFDE_TextOut::Piece"*** %339, align 8
  %372 = ptrtoint %"struct.CFDE_TextOut::Piece"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.236"* %4 to i64*
  %382 = bitcast %"struct.CFDE_TextOut::Piece"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #13
  %386 = bitcast i8* %385 to %"struct.CFDE_TextOut::Piece"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %386, i64 %383
  %389 = ptrtoint %"struct.CFDE_TextOut::Piece"** %388 to i64
  %390 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %386, i64 %377
  %391 = ptrtoint %"struct.CFDE_TextOut::Piece"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.CFDE_TextOut::Piece"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.CFDE_TextOut::Piece"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #13
  %394 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %164, align 8
  %395 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %167, align 8
  %396 = ptrtoint %"struct.CFDE_TextOut::Piece"** %395 to i64
  %397 = ptrtoint %"struct.CFDE_TextOut::Piece"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.CFDE_TextOut::Piece"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.CFDE_TextOut::Piece"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.CFDE_TextOut::Piece"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.CFDE_TextOut::Piece"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %406, i64 1
  store %"struct.CFDE_TextOut::Piece"** %408, %"struct.CFDE_TextOut::Piece"*** %340, align 8
  %409 = icmp eq %"struct.CFDE_TextOut::Piece"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.CFDE_TextOut::Piece"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.236"* %4 to i64*
  %413 = bitcast %"struct.CFDE_TextOut::Piece"*** %339 to i64*
  %414 = bitcast %"struct.CFDE_TextOut::Piece"*** %340 to i64*
  %415 = bitcast %"struct.CFDE_TextOut::Piece"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.CFDE_TextOut::Piece"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.236"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.CFDE_TextOut::Piece"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.CFDE_TextOut::Piece"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.CFDE_TextOut::Piece"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.CFDE_TextOut::Piece"**
  %441 = inttoptr i64 %434 to %"struct.CFDE_TextOut::Piece"**
  %442 = icmp eq %"struct.CFDE_TextOut::Piece"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %441, i64 -1
  %445 = ptrtoint %"struct.CFDE_TextOut::Piece"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %441, i64 %448
  store %"struct.CFDE_TextOut::Piece"** %449, %"struct.CFDE_TextOut::Piece"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #13
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #12
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.CFDE_TextOut::Piece"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN12CFDE_TextOut5PieceERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.236"* nonnull %4, %"struct.CFDE_TextOut::Piece"** dereferenceable(8) %457)
  %458 = load %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*** %167, align 8
  %459 = icmp eq %"struct.CFDE_TextOut::Piece"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__113move_backwardIN12CFDE_TextOut5PieceEPS2_RS2_PS3_lLl0ES2_S3_S4_S5_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS6_IT_T0_T1_T2_T3_XT4_EEESI_SC_(%"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*) local_unnamed_addr #0 comdat {
  %7 = ptrtoint %"struct.CFDE_TextOut::Piece"* %3 to i64
  %8 = icmp eq %"struct.CFDE_TextOut::Piece"* %3, %1
  br i1 %8, label %88, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.CFDE_TextOut::Piece"* %1 to i64
  %11 = ptrtoint %"struct.CFDE_TextOut::Piece"** %2 to i64
  %12 = ptrtoint %"struct.CFDE_TextOut::Piece"** %0 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 3
  %15 = mul nsw i64 %14, 102
  %16 = bitcast %"struct.CFDE_TextOut::Piece"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %7, %17
  %19 = sdiv exact i64 %18, 40
  %20 = add nsw i64 %19, %15
  %21 = bitcast %"struct.CFDE_TextOut::Piece"** %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %10, %22
  %24 = sdiv exact i64 %23, -40
  %25 = add i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %27, label %88

27:                                               ; preds = %9, %84
  %28 = phi %"struct.CFDE_TextOut::Piece"* [ %57, %84 ], [ %5, %9 ]
  %29 = phi %"struct.CFDE_TextOut::Piece"** [ %56, %84 ], [ %4, %9 ]
  %30 = phi i64 [ %58, %84 ], [ %25, %9 ]
  %31 = phi %"struct.CFDE_TextOut::Piece"** [ %86, %84 ], [ %2, %9 ]
  %32 = phi i64 [ %85, %84 ], [ %7, %9 ]
  %33 = inttoptr i64 %32 to %"struct.CFDE_TextOut::Piece"*
  %34 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %31, align 8
  %35 = icmp eq %"struct.CFDE_TextOut::Piece"* %34, %33
  br i1 %35, label %36, label %40

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %31, i64 -1
  %38 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %37, align 8
  %39 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %38, i64 102
  br label %40

40:                                               ; preds = %27, %36
  %41 = phi %"struct.CFDE_TextOut::Piece"* [ %38, %36 ], [ %34, %27 ]
  %42 = phi %"struct.CFDE_TextOut::Piece"** [ %37, %36 ], [ %31, %27 ]
  %43 = phi %"struct.CFDE_TextOut::Piece"* [ %39, %36 ], [ %33, %27 ]
  %44 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %43, i64 -1
  %45 = ptrtoint %"struct.CFDE_TextOut::Piece"* %44 to i64
  %46 = ptrtoint %"struct.CFDE_TextOut::Piece"* %43 to i64
  %47 = ptrtoint %"struct.CFDE_TextOut::Piece"* %41 to i64
  %48 = sub i64 %46, %47
  %49 = sdiv exact i64 %48, 40
  %50 = icmp sgt i64 %49, %30
  %51 = sub nsw i64 0, %30
  %52 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %43, i64 %51
  %53 = select i1 %50, i64 %30, i64 %49
  %54 = select i1 %50, %"struct.CFDE_TextOut::Piece"* %52, %"struct.CFDE_TextOut::Piece"* %41
  %55 = tail call { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__113move_backwardIPN12CFDE_TextOut5PieceES2_S3_RS2_PS3_lLl0EEENS_16__deque_iteratorIT0_T1_T2_T3_T4_XT5_EEET_SD_SC_PNS_9enable_ifIXsr33__is_cpp17_random_access_iteratorISD_EE5valueEvE4typeE(%"struct.CFDE_TextOut::Piece"* %54, %"struct.CFDE_TextOut::Piece"* %43, %"struct.CFDE_TextOut::Piece"** %29, %"struct.CFDE_TextOut::Piece"* %28, i8* null)
  %56 = extractvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %55, 0
  %57 = extractvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %55, 1
  %58 = sub nsw i64 %30, %53
  %59 = add nsw i64 %53, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %84, label %61

61:                                               ; preds = %40
  %62 = bitcast %"struct.CFDE_TextOut::Piece"** %42 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %45, %63
  %65 = sdiv exact i64 %64, 40
  %66 = sub i64 %65, %59
  %67 = icmp sgt i64 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %61
  %69 = udiv i64 %66, 102
  %70 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %42, i64 %69
  %71 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %70, align 8
  %72 = urem i64 %66, 102
  %73 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %71, i64 %72
  %74 = ptrtoint %"struct.CFDE_TextOut::Piece"* %73 to i64
  br label %84

75:                                               ; preds = %61
  %76 = sub nsw i64 101, %66
  %77 = sdiv i64 %76, -102
  %78 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %42, i64 %77
  %79 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %78, align 8
  %80 = srem i64 %76, 102
  %81 = sub nsw i64 101, %80
  %82 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %79, i64 %81
  %83 = ptrtoint %"struct.CFDE_TextOut::Piece"* %82 to i64
  br label %84

84:                                               ; preds = %40, %68, %75
  %85 = phi i64 [ %45, %40 ], [ %74, %68 ], [ %83, %75 ]
  %86 = phi %"struct.CFDE_TextOut::Piece"** [ %42, %40 ], [ %70, %68 ], [ %78, %75 ]
  %87 = icmp sgt i64 %58, 0
  br i1 %87, label %27, label %88

88:                                               ; preds = %84, %6, %9
  %89 = phi %"struct.CFDE_TextOut::Piece"** [ %4, %9 ], [ %4, %6 ], [ %56, %84 ]
  %90 = phi %"struct.CFDE_TextOut::Piece"* [ %5, %9 ], [ %5, %6 ], [ %57, %84 ]
  %91 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } undef, %"struct.CFDE_TextOut::Piece"** %89, 0
  %92 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %91, %"struct.CFDE_TextOut::Piece"* %90, 1
  ret { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %92
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__14moveIN12CFDE_TextOut5PieceEPS2_RS2_PS3_lLl0ES2_S3_S4_S5_lLl0EEENS_16__deque_iteratorIT5_T6_T7_T8_T9_XT10_EEENS6_IT_T0_T1_T2_T3_XT4_EEESI_SC_(%"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*) local_unnamed_addr #0 comdat {
  %7 = ptrtoint %"struct.CFDE_TextOut::Piece"* %1 to i64
  %8 = icmp eq %"struct.CFDE_TextOut::Piece"* %3, %1
  br i1 %8, label %133, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.CFDE_TextOut::Piece"* %3 to i64
  %11 = ptrtoint %"struct.CFDE_TextOut::Piece"** %2 to i64
  %12 = ptrtoint %"struct.CFDE_TextOut::Piece"** %0 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 3
  %15 = mul nsw i64 %14, 102
  %16 = bitcast %"struct.CFDE_TextOut::Piece"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %10, %17
  %19 = sdiv exact i64 %18, 40
  %20 = add nsw i64 %19, %15
  %21 = bitcast %"struct.CFDE_TextOut::Piece"** %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %7, %22
  %24 = sdiv exact i64 %23, -40
  %25 = add i64 %20, %24
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %27, label %133

27:                                               ; preds = %9, %127
  %28 = phi %"struct.CFDE_TextOut::Piece"* [ %101, %127 ], [ %5, %9 ]
  %29 = phi %"struct.CFDE_TextOut::Piece"** [ %100, %127 ], [ %4, %9 ]
  %30 = phi i64 [ %102, %127 ], [ %25, %9 ]
  %31 = phi i64 [ %129, %127 ], [ %7, %9 ]
  %32 = phi %"struct.CFDE_TextOut::Piece"** [ %128, %127 ], [ %0, %9 ]
  %33 = inttoptr i64 %31 to %"struct.CFDE_TextOut::Piece"*
  %34 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %32, align 8
  %35 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %34, i64 102
  %36 = ptrtoint %"struct.CFDE_TextOut::Piece"* %35 to i64
  %37 = sub i64 %36, %31
  %38 = sdiv exact i64 %37, 40
  %39 = icmp sgt i64 %38, %30
  %40 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %33, i64 %30
  %41 = select i1 %39, %"struct.CFDE_TextOut::Piece"* %40, %"struct.CFDE_TextOut::Piece"* %35
  %42 = select i1 %39, i64 %30, i64 %38
  %43 = ptrtoint %"struct.CFDE_TextOut::Piece"* %28 to i64
  %44 = icmp eq %"struct.CFDE_TextOut::Piece"* %41, %33
  br i1 %44, label %98, label %45

45:                                               ; preds = %27
  %46 = ptrtoint %"struct.CFDE_TextOut::Piece"* %41 to i64
  br label %47

47:                                               ; preds = %94, %45
  %48 = phi %"struct.CFDE_TextOut::Piece"* [ %33, %45 ], [ %62, %94 ]
  %49 = phi %"struct.CFDE_TextOut::Piece"** [ %29, %45 ], [ %96, %94 ]
  %50 = phi i64 [ %43, %45 ], [ %95, %94 ]
  %51 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %49, align 8
  %52 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %51, i64 102
  %53 = ptrtoint %"struct.CFDE_TextOut::Piece"* %52 to i64
  %54 = sub i64 %53, %50
  %55 = sdiv exact i64 %54, 40
  %56 = ptrtoint %"struct.CFDE_TextOut::Piece"* %48 to i64
  %57 = sub i64 %46, %56
  %58 = sdiv exact i64 %57, 40
  %59 = icmp sgt i64 %58, %55
  %60 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %48, i64 %55
  %61 = select i1 %59, i64 %55, i64 %58
  %62 = select i1 %59, %"struct.CFDE_TextOut::Piece"* %60, %"struct.CFDE_TextOut::Piece"* %41
  %63 = ptrtoint %"struct.CFDE_TextOut::Piece"* %62 to i64
  %64 = sub i64 %63, %56
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %47
  %67 = inttoptr i64 %50 to i8*
  %68 = bitcast %"struct.CFDE_TextOut::Piece"* %48 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %64, i1 false) #12
  br label %69

69:                                               ; preds = %66, %47
  %70 = icmp eq i64 %61, 0
  br i1 %70, label %94, label %71

71:                                               ; preds = %69
  %72 = bitcast %"struct.CFDE_TextOut::Piece"** %49 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %50, %73
  %75 = sdiv exact i64 %74, 40
  %76 = add nsw i64 %75, %61
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %71
  %79 = udiv i64 %76, 102
  %80 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %49, i64 %79
  %81 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %80, align 8
  %82 = urem i64 %76, 102
  %83 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %81, i64 %82
  %84 = ptrtoint %"struct.CFDE_TextOut::Piece"* %83 to i64
  br label %94

85:                                               ; preds = %71
  %86 = sub nsw i64 101, %76
  %87 = sdiv i64 %86, -102
  %88 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %49, i64 %87
  %89 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %88, align 8
  %90 = srem i64 %86, 102
  %91 = sub nuw nsw i64 101, %90
  %92 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %89, i64 %91
  %93 = ptrtoint %"struct.CFDE_TextOut::Piece"* %92 to i64
  br label %94

94:                                               ; preds = %85, %78, %69
  %95 = phi i64 [ %50, %69 ], [ %84, %78 ], [ %93, %85 ]
  %96 = phi %"struct.CFDE_TextOut::Piece"** [ %49, %69 ], [ %80, %78 ], [ %88, %85 ]
  %97 = icmp eq %"struct.CFDE_TextOut::Piece"* %62, %41
  br i1 %97, label %98, label %47

98:                                               ; preds = %94, %27
  %99 = phi i64 [ %43, %27 ], [ %95, %94 ]
  %100 = phi %"struct.CFDE_TextOut::Piece"** [ %29, %27 ], [ %96, %94 ]
  %101 = inttoptr i64 %99 to %"struct.CFDE_TextOut::Piece"*
  %102 = sub nsw i64 %30, %42
  %103 = icmp eq i64 %42, 0
  br i1 %103, label %127, label %104

104:                                              ; preds = %98
  %105 = bitcast %"struct.CFDE_TextOut::Piece"** %32 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %31, %106
  %108 = sdiv exact i64 %107, 40
  %109 = add nsw i64 %108, %42
  %110 = icmp sgt i64 %109, 0
  br i1 %110, label %111, label %118

111:                                              ; preds = %104
  %112 = udiv i64 %109, 102
  %113 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %32, i64 %112
  %114 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %113, align 8
  %115 = urem i64 %109, 102
  %116 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %114, i64 %115
  %117 = ptrtoint %"struct.CFDE_TextOut::Piece"* %116 to i64
  br label %127

118:                                              ; preds = %104
  %119 = sub nsw i64 101, %109
  %120 = sdiv i64 %119, -102
  %121 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %32, i64 %120
  %122 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %121, align 8
  %123 = srem i64 %119, 102
  %124 = sub nsw i64 101, %123
  %125 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %122, i64 %124
  %126 = ptrtoint %"struct.CFDE_TextOut::Piece"* %125 to i64
  br label %127

127:                                              ; preds = %98, %111, %118
  %128 = phi %"struct.CFDE_TextOut::Piece"** [ %32, %98 ], [ %113, %111 ], [ %121, %118 ]
  %129 = phi i64 [ %31, %98 ], [ %117, %111 ], [ %126, %118 ]
  %130 = icmp sgt i64 %102, 0
  br i1 %130, label %27, label %131

131:                                              ; preds = %127
  %132 = inttoptr i64 %99 to %"struct.CFDE_TextOut::Piece"*
  br label %133

133:                                              ; preds = %131, %6, %9
  %134 = phi %"struct.CFDE_TextOut::Piece"** [ %4, %9 ], [ %4, %6 ], [ %100, %131 ]
  %135 = phi %"struct.CFDE_TextOut::Piece"* [ %5, %9 ], [ %5, %6 ], [ %132, %131 ]
  %136 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } undef, %"struct.CFDE_TextOut::Piece"** %134, 0
  %137 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %136, %"struct.CFDE_TextOut::Piece"* %135, 1
  ret { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } @_ZNSt3__113move_backwardIPN12CFDE_TextOut5PieceES2_S3_RS2_PS3_lLl0EEENS_16__deque_iteratorIT0_T1_T2_T3_T4_XT5_EEET_SD_SC_PNS_9enable_ifIXsr33__is_cpp17_random_access_iteratorISD_EE5valueEvE4typeE(%"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"*, i8*) local_unnamed_addr #0 comdat {
  %6 = ptrtoint %"struct.CFDE_TextOut::Piece"* %3 to i64
  %7 = icmp eq %"struct.CFDE_TextOut::Piece"* %1, %0
  br i1 %7, label %87, label %8

8:                                                ; preds = %5
  %9 = ptrtoint %"struct.CFDE_TextOut::Piece"* %0 to i64
  br label %10

10:                                               ; preds = %8, %83
  %11 = phi %"struct.CFDE_TextOut::Piece"* [ %1, %8 ], [ %50, %83 ]
  %12 = phi %"struct.CFDE_TextOut::Piece"** [ %2, %8 ], [ %85, %83 ]
  %13 = phi i64 [ %6, %8 ], [ %84, %83 ]
  %14 = bitcast %"struct.CFDE_TextOut::Piece"** %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 40
  %18 = add nsw i64 %17, -1
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %10
  %21 = udiv i64 %18, 102
  %22 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %12, i64 %21
  %23 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %22, align 8
  %24 = urem i64 %18, 102
  %25 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %23, i64 %24
  br label %34

26:                                               ; preds = %10
  %27 = sub nsw i64 102, %17
  %28 = sdiv i64 %27, -102
  %29 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %12, i64 %28
  %30 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %29, align 8
  %31 = srem i64 %27, 102
  %32 = sub nuw nsw i64 101, %31
  %33 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %30, i64 %32
  br label %34

34:                                               ; preds = %20, %26
  %35 = phi %"struct.CFDE_TextOut::Piece"* [ %25, %20 ], [ %33, %26 ]
  %36 = phi %"struct.CFDE_TextOut::Piece"** [ %22, %20 ], [ %29, %26 ]
  %37 = bitcast %"struct.CFDE_TextOut::Piece"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %35, i64 1
  %40 = ptrtoint %"struct.CFDE_TextOut::Piece"* %39 to i64
  %41 = sub i64 %40, %38
  %42 = sdiv exact i64 %41, 40
  %43 = ptrtoint %"struct.CFDE_TextOut::Piece"* %11 to i64
  %44 = sub i64 %43, %9
  %45 = sdiv exact i64 %44, 40
  %46 = icmp sgt i64 %45, %42
  %47 = sub nsw i64 0, %42
  %48 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %11, i64 %47
  %49 = select i1 %46, i64 %42, i64 %45
  %50 = select i1 %46, %"struct.CFDE_TextOut::Piece"* %48, %"struct.CFDE_TextOut::Piece"* %0
  %51 = ptrtoint %"struct.CFDE_TextOut::Piece"* %50 to i64
  %52 = sub i64 %43, %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %34
  %55 = sdiv exact i64 %52, -40
  %56 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %39, i64 %55
  %57 = bitcast %"struct.CFDE_TextOut::Piece"* %56 to i8*
  %58 = bitcast %"struct.CFDE_TextOut::Piece"* %50 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 %52, i1 false) #12
  br label %59

59:                                               ; preds = %34, %54
  %60 = icmp eq i64 %49, 0
  br i1 %60, label %83, label %61

61:                                               ; preds = %59
  %62 = load i64, i64* %14, align 8
  %63 = sub i64 %13, %62
  %64 = sdiv exact i64 %63, 40
  %65 = sub nsw i64 %64, %49
  %66 = icmp sgt i64 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %61
  %68 = udiv i64 %65, 102
  %69 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %12, i64 %68
  %70 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %69, align 8
  %71 = urem i64 %65, 102
  %72 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %70, i64 %71
  %73 = ptrtoint %"struct.CFDE_TextOut::Piece"* %72 to i64
  br label %83

74:                                               ; preds = %61
  %75 = sub nsw i64 101, %65
  %76 = sdiv i64 %75, -102
  %77 = getelementptr inbounds %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %12, i64 %76
  %78 = load %"struct.CFDE_TextOut::Piece"*, %"struct.CFDE_TextOut::Piece"** %77, align 8
  %79 = srem i64 %75, 102
  %80 = sub nuw nsw i64 101, %79
  %81 = getelementptr inbounds %"struct.CFDE_TextOut::Piece", %"struct.CFDE_TextOut::Piece"* %78, i64 %80
  %82 = ptrtoint %"struct.CFDE_TextOut::Piece"* %81 to i64
  br label %83

83:                                               ; preds = %59, %67, %74
  %84 = phi i64 [ %13, %59 ], [ %73, %67 ], [ %82, %74 ]
  %85 = phi %"struct.CFDE_TextOut::Piece"** [ %12, %59 ], [ %69, %67 ], [ %77, %74 ]
  %86 = icmp eq %"struct.CFDE_TextOut::Piece"* %50, %0
  br i1 %86, label %87, label %10

87:                                               ; preds = %83, %5
  %88 = phi i64 [ %6, %5 ], [ %84, %83 ]
  %89 = phi %"struct.CFDE_TextOut::Piece"** [ %2, %5 ], [ %85, %83 ]
  %90 = inttoptr i64 %88 to %"struct.CFDE_TextOut::Piece"*
  %91 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } undef, %"struct.CFDE_TextOut::Piece"** %89, 0
  %92 = insertvalue { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %91, %"struct.CFDE_TextOut::Piece"* %90, 1
  ret { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"* } %92
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK8CFX_Font7GetFaceEv: argument 0"}
!4 = distinct !{!4, !"_ZNK8CFX_Font7GetFaceEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK8CFX_Font7GetFaceEv: argument 0"}
!7 = distinct !{!7, !"_ZNK8CFX_Font7GetFaceEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK9CFX_RectF4SizeEv: argument 0"}
!11 = distinct !{!11, !"_ZNK9CFX_RectF4SizeEv"}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{i32 -2140890819}
!14 = !{i32 -2140890798}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5fxcrtplERKNS_10WideStringEw: argument 0"}
!18 = distinct !{!18, !"_ZN5fxcrtplERKNS_10WideStringEw"}
!19 = !{!20, !17}
!20 = distinct !{!20, !21, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!22 = !{!20}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5fxcrt10WideString4spanEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5fxcrt10WideString4spanEv"}
!26 = !{i32 -2143686123}
!27 = !{i32 -2143686102}
!28 = !{i32 -2140891406}
!29 = !{i32 -2140891385}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.disable"}
!32 = distinct !{!32, !31}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !31}
!35 = distinct !{!35, !31}
!36 = distinct !{!36, !31}
!37 = distinct !{!37, !31}
!38 = distinct !{!38, !31}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !45}
!45 = !{!"llvm.loop.isvectorized", i32 1}
!46 = distinct !{!46, !45}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !45}
!53 = distinct !{!53, !31}
!54 = distinct !{!54, !45}
!55 = distinct !{!55, !31}
!56 = distinct !{!56, !31}
!57 = distinct !{!57, !31}
!58 = distinct !{!58, !31}
!59 = distinct !{!59, !31}
!60 = distinct !{!60, !31}
!61 = distinct !{!61, !31}
!62 = distinct !{!62, !31}
!63 = distinct !{!63, !31}
!64 = distinct !{!64, !31}
!65 = distinct !{!65, !31}
