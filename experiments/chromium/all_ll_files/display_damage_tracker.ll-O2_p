; ModuleID = '../../components/viz/service/display/display_damage_tracker.cc'
source_filename = "../../components/viz/service/display/display_damage_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.viz::DisplayDamageTracker" = type { %"class.viz::SurfaceObserver", %"class.base::ObserverList", %"class.viz::SurfaceManager"*, %"class.viz::SurfaceAggregator"*, i8, i8, %"class.base::flat_map.232", %"class.std::__1::vector.33", %"class.viz::SurfaceId" }
%"class.viz::SurfaceObserver" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::flat_map.232" = type { %"class.base::internal::flat_tree.233" }
%"class.base::internal::flat_tree.233" = type { %"class.std::__1::vector.234" }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"*, %"class.std::__1::__compressed_pair.237" }
%"struct.std::__1::pair.236" = type { %"class.viz::SurfaceId", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState" }
%"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState" = type { %"struct.viz::BeginFrameArgs", %"struct.viz::BeginFrameAck" }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::pair.236"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.viz::SurfaceId"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::SurfaceManager" = type { %"class.viz::SurfaceManagerDelegate"*, %"class.absl::optional", %"class.base::flat_map", %"class.base::flat_map.8", %"class.base::flat_map.18", %"class.base::ObserverList.28", %"class.base::ThreadChecker", %"class.base::internal::flat_tree.32", %"class.viz::SurfaceId", %"class.base::internal::flat_tree.32", %"class.base::TickClock"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.58", %"class.std::__1::unordered_map.82", %"class.absl::optional.108", i8, %"class.base::WeakPtrFactory.127" }
%"class.viz::SurfaceManagerDelegate" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.8" = type { %"class.base::internal::flat_tree.9" }
%"class.base::internal::flat_tree.9" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.std::__1::pair.12"*, %"struct.std::__1::pair.12"*, %"class.std::__1::__compressed_pair.13" }
%"struct.std::__1::pair.12" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::pair.12"* }
%"class.base::flat_map.18" = type { %"class.base::internal::flat_tree.19" }
%"class.base::internal::flat_tree.19" = type { %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.std::__1::pair.22"*, %"struct.std::__1::pair.22"*, %"class.std::__1::__compressed_pair.23" }
%"struct.std::__1::pair.22" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::pair.22"* }
%"class.base::ObserverList.28" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.29", i64, i32, [4 x i8] }>
%"class.base::LinkedList.29" = type { %"class.base::LinkNode.30" }
%"class.base::LinkNode.30" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::internal::flat_tree.32" = type { %"class.std::__1::vector.33" }
%"class.base::TickClock" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.55", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64 }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { float }
%"class.std::__1::unordered_map.58" = type { %"class.std::__1::__hash_table.59" }
%"class.std::__1::__hash_table.59" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.78", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base.63"** }
%"struct.std::__1::__hash_node_base.63" = type { %"struct.std::__1::__hash_node_base.63"* }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::__bucket_list_deallocator.65" }
%"class.std::__1::__bucket_list_deallocator.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::__hash_node_base.63" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unordered_map.82" = type { %"class.std::__1::__hash_table.83" }
%"class.std::__1::__hash_table.83" = type <{ %"class.std::__1::unique_ptr.84", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.102", [4 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86", %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base.87"** }
%"struct.std::__1::__hash_node_base.87" = type { %"struct.std::__1::__hash_node_base.87"* }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__bucket_list_deallocator.89" }
%"class.std::__1::__bucket_list_deallocator.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.87" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.absl::optional.108" = type { %"class.absl::optional_internal::optional_data.109" }
%"class.absl::optional_internal::optional_data.109" = type { %"class.absl::optional_internal::optional_data_base.110" }
%"class.absl::optional_internal::optional_data_base.110" = type { %"class.absl::optional_internal::optional_data_dtor_base.111" }
%"class.absl::optional_internal::optional_data_dtor_base.111" = type { i8, %union.anon.112 }
%union.anon.112 = type { %"class.base::RepeatingTimer" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.114 }
%class.scoped_refptr.114 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.115", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.115" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.116" }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.121 }
%class.scoped_refptr.121 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.122", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.122" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.127" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::SurfaceAggregator" = type { %"class.viz::SurfaceManager"*, %"class.viz::DisplayResourceProvider"*, i8, i8, i8, i8, %"class.gfx::DisplayColorSpaces", i32, %"class.util::IdType", %"class.util::IdType", %"class.base::flat_map.133", %"class.base::internal::flat_tree.32", %"class.viz::SurfaceId", %"class.gfx::Transform", %"class.absl::optional.143", %"class.base::flat_map.148", %"class.base::flat_map.148", %"class.base::flat_map.158", %"class.base::flat_map.158", %"class.base::internal::flat_tree.32", %"class.std::__1::vector.168"*, %"class.base::TimeTicks", %"class.base::internal::flat_tree.176", %"class.base::internal::flat_tree.176", %"class.base::internal::flat_tree.176", %"class.base::flat_map.184", %"class.gfx::Rect", %"class.std::__1::vector.194"*, i8, i8, i8, i8, %"class.base::flat_map.201", %"class.std::__1::unique_ptr.211", i64, %"class.base::internal::flat_tree.32", %"class.base::internal::flat_tree.32", i8, i8, %"class.std::__1::unique_ptr.215", i8, i8, i8, %"class.viz::RenderPassIdRemapper", %"class.base::WeakPtrFactory.231" }
%"class.viz::DisplayResourceProvider" = type opaque
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.128" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::flat_map.133" = type { %"class.base::internal::flat_tree.134" }
%"class.base::internal::flat_tree.134" = type { %"class.std::__1::vector.135" }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"struct.std::__1::pair.137"*, %"struct.std::__1::pair.137"*, %"class.std::__1::__compressed_pair.138" }
%"struct.std::__1::pair.137" = type opaque
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::pair.137"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"struct.viz::SurfaceAggregator::AggregateStatistics" }
%"struct.viz::SurfaceAggregator::AggregateStatistics" = type { i32, i32, i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::flat_map.148" = type { %"class.base::internal::flat_tree.149" }
%"class.base::internal::flat_tree.149" = type { %"class.std::__1::vector.150" }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"struct.std::__1::pair.152"*, %"struct.std::__1::pair.152"*, %"class.std::__1::__compressed_pair.153" }
%"struct.std::__1::pair.152" = type { %"class.viz::SurfaceId", i64 }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.std::__1::pair.152"* }
%"class.base::flat_map.158" = type { %"class.base::internal::flat_tree.159" }
%"class.base::internal::flat_tree.159" = type { %"class.std::__1::vector.160" }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"struct.std::__1::pair.162"*, %"struct.std::__1::pair.162"*, %"class.std::__1::__compressed_pair.163" }
%"struct.std::__1::pair.162" = type opaque
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::pair.162"* }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"class.std::__1::unique_ptr.170"*, %"class.std::__1::unique_ptr.170"*, %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::unique_ptr.170" = type opaque
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.std::__1::unique_ptr.170"* }
%"class.base::internal::flat_tree.176" = type { %"class.std::__1::vector.177" }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.util::IdType"* }
%"class.base::flat_map.184" = type { %"class.base::internal::flat_tree.185" }
%"class.base::internal::flat_tree.185" = type { %"class.std::__1::vector.186" }
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { %"struct.std::__1::pair.188"*, %"struct.std::__1::pair.188"*, %"class.std::__1::__compressed_pair.189" }
%"struct.std::__1::pair.188" = type opaque
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::pair.188"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.gfx::Rect"* }
%"class.base::flat_map.201" = type { %"class.base::internal::flat_tree.202" }
%"class.base::internal::flat_tree.202" = type { %"class.std::__1::vector.203" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.std::__1::pair.205"*, %"struct.std::__1::pair.205"*, %"class.std::__1::__compressed_pair.206" }
%"struct.std::__1::pair.205" = type opaque
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::pair.205"* }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.viz::SurfaceAggregator::FrameAnnotator"* }
%"class.viz::SurfaceAggregator::FrameAnnotator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.viz::RenderPassIdRemapper" = type { %"class.base::flat_map.221", %"class.util::IdType<viz::AggregatedRenderPass, unsigned long, 0, 1>::Generator" }
%"class.base::flat_map.221" = type { %"class.base::internal::flat_tree.222" }
%"class.base::internal::flat_tree.222" = type { %"class.std::__1::vector.223" }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"struct.std::__1::pair.225"*, %"struct.std::__1::pair.225"*, %"class.std::__1::__compressed_pair.226" }
%"struct.std::__1::pair.225" = type opaque
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::pair.225"* }
%"class.util::IdType<viz::AggregatedRenderPass, unsigned long, 0, 1>::Generator" = type { i64 }
%"class.base::WeakPtrFactory.231" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.viz::DisplayDamageTracker::Observer" = type { i32 (...)** }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.458", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.460", i64, i64 }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.471" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.244 }
%union.anon.244 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.viz::Surface" = type { %"class.viz::SurfaceInfo", %"class.viz::SurfaceId", %"class.viz::SurfaceManager"*, %"class.base::WeakPtr", %"class.std::__1::unique_ptr.249", %"class.absl::optional.260", %"class.absl::optional.260", %"class.absl::optional.406", i8, i8, %"class.base::internal::flat_tree.32", %"class.std::__1::vector.33", %"class.base::internal::flat_tree.411", %"class.base::internal::flat_tree.32", %"class.base::internal::flat_tree.411", i8, i8, %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceSavedFrameStorage", i8, %"class.base::WeakPtrFactory.446" }
%"class.viz::SurfaceInfo" = type <{ %"class.viz::SurfaceId", float, %"class.gfx::Size", [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.248 }
%class.scoped_refptr.248 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.viz::SurfaceDependencyDeadline"* }
%"class.viz::SurfaceDependencyDeadline" = type { %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.absl::optional.252" }
%"class.absl::optional.252" = type { %"class.absl::optional_internal::optional_data.253" }
%"class.absl::optional_internal::optional_data.253" = type { %"class.absl::optional_internal::optional_data_base.254" }
%"class.absl::optional_internal::optional_data_base.254" = type { %"class.absl::optional_internal::optional_data_dtor_base.255" }
%"class.absl::optional_internal::optional_data_dtor_base.255" = type { i8, %union.anon.256 }
%union.anon.256 = type { %"class.base::TimeTicks" }
%"class.absl::optional.260" = type { %"class.absl::optional_internal::optional_data.261" }
%"class.absl::optional_internal::optional_data.261" = type { %"class.absl::optional_internal::optional_data_base.262" }
%"class.absl::optional_internal::optional_data_base.262" = type { %"class.absl::optional_internal::optional_data_dtor_base.263" }
%"class.absl::optional_internal::optional_data_dtor_base.263" = type { i8, [7 x i8], %union.anon.264 }
%union.anon.264 = type { %"struct.viz::Surface::FrameData" }
%"struct.viz::Surface::FrameData" = type <{ %"class.viz::CompositorFrame", i64, i8, i8, i8, [5 x i8] }>
%"class.viz::CompositorFrame" = type { %"class.viz::CompositorFrameMetadata", %"class.std::__1::vector.320", %"class.std::__1::vector.341" }
%"class.viz::CompositorFrameMetadata" = type { float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, i32, %"class.std::__1::vector.265", %"class.std::__1::vector.282", %"class.std::__1::vector.33", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, float, %"class.absl::optional.294", %"class.absl::optional.299", i32, %"class.std::__1::unique_ptr.215", %"class.std::__1::vector.304" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.277" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.267", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.267" = type { %"class.base::internal::flat_tree.268" }
%"class.base::internal::flat_tree.268" = type { %"class.std::__1::vector.269" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"struct.std::__1::pair.271"*, %"struct.std::__1::pair.271"*, %"class.std::__1::__compressed_pair.272" }
%"struct.std::__1::pair.271" = type opaque
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::pair.271"* }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.289" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.284", %"class.viz::SurfaceId" }
%"class.absl::optional.284" = type { %"class.absl::optional_internal::optional_data.285" }
%"class.absl::optional_internal::optional_data.285" = type { %"class.absl::optional_internal::optional_data_base.286" }
%"class.absl::optional_internal::optional_data_base.286" = type { %"class.absl::optional_internal::optional_data_dtor_base.287" }
%"class.absl::optional_internal::optional_data_dtor_base.287" = type { i8, %union.anon.288 }
%union.anon.288 = type { %"class.viz::SurfaceId" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.viz::SurfaceRange"* }
%"class.viz::FrameDeadline" = type <{ %"class.base::TimeTicks", i32, [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.absl::optional.294" = type { %"class.absl::optional_internal::optional_data.295" }
%"class.absl::optional_internal::optional_data.295" = type { %"class.absl::optional_internal::optional_data_base.296" }
%"class.absl::optional_internal::optional_data_base.296" = type { %"class.absl::optional_internal::optional_data_dtor_base.297" }
%"class.absl::optional_internal::optional_data_dtor_base.297" = type { i8, %union.anon.298 }
%union.anon.298 = type { float }
%"class.absl::optional.299" = type { %"class.absl::optional_internal::optional_data.300" }
%"class.absl::optional_internal::optional_data.300" = type { %"class.absl::optional_internal::optional_data_base.301" }
%"class.absl::optional_internal::optional_data_base.301" = type { %"class.absl::optional_internal::optional_data_dtor_base.302" }
%"class.absl::optional_internal::optional_data_dtor_base.302" = type { i8, %union.anon.303 }
%union.anon.303 = type { %"class.base::TimeDelta" }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.std::__1::__compressed_pair.315" }
%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector.306" }
%"class.std::__1::vector.306" = type { %"class.std::__1::__vector_base.307" }
%"class.std::__1::__vector_base.307" = type { %"class.util::IdType.308"*, %"class.util::IdType.308"*, %"class.std::__1::__compressed_pair.310" }
%"class.util::IdType.308" = type { %"class.base::StrongAlias.309" }
%"class.base::StrongAlias.309" = type { i64 }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.util::IdType.308"* }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.viz::CompositorFrameTransitionDirective"* }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"*, %"class.std::__1::__compressed_pair.336" }
%"struct.viz::TransferableResource" = type { %"class.util::IdType.322", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.326", i8, i32, i8, [7 x i8], %"class.absl::optional.331" }
%"class.util::IdType.322" = type { %"class.base::StrongAlias.323" }
%"class.base::StrongAlias.323" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.324", i64 }
%"class.util::IdType.324" = type { %"class.base::StrongAlias.325" }
%"class.base::StrongAlias.325" = type { i64 }
%"class.absl::optional.326" = type { %"class.absl::optional_internal::optional_data.327" }
%"class.absl::optional_internal::optional_data.327" = type { %"class.absl::optional_internal::optional_data_base.328" }
%"class.absl::optional_internal::optional_data_base.328" = type { %"class.absl::optional_internal::optional_data_dtor_base.329" }
%"class.absl::optional_internal::optional_data_dtor_base.329" = type { i8, %union.anon.330 }
%union.anon.330 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.331" = type { %"class.absl::optional_internal::optional_data.332" }
%"class.absl::optional_internal::optional_data.332" = type { %"class.absl::optional_internal::optional_data_base.333" }
%"class.absl::optional_internal::optional_data_base.333" = type { %"class.absl::optional_internal::optional_data_dtor_base.334" }
%"class.absl::optional_internal::optional_data_dtor_base.334" = type { i8, [7 x i8], %union.anon.335 }
%union.anon.335 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.viz::TransferableResource"* }
%"class.std::__1::vector.341" = type { %"class.std::__1::__vector_base.342" }
%"class.std::__1::__vector_base.342" = type { %"class.std::__1::unique_ptr.343"*, %"class.std::__1::unique_ptr.343"*, %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.viz::CompositorRenderPass"* }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType.308", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.359", i8, i8, i8, i8, %"class.std::__1::vector.364", %"class.viz::QuadList", %"class.cc::ListContainer.393" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.346" }
%"class.std::__1::vector.346" = type { %"class.std::__1::__vector_base.347" }
%"class.std::__1::__vector_base.347" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.354" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.194", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.348, i32, %"class.absl::optional.349", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.348 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.349" = type { %"class.absl::optional_internal::optional_data.350" }
%"class.absl::optional_internal::optional_data.350" = type { %"class.absl::optional_internal::optional_data_base.351" }
%"class.absl::optional_internal::optional_data_base.351" = type { %"class.absl::optional_internal::optional_data_dtor_base.352" }
%"class.absl::optional_internal::optional_data_dtor_base.352" = type { i8, %union.anon.353 }
%union.anon.353 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.359" = type { %"class.absl::optional_internal::optional_data.360" }
%"class.absl::optional_internal::optional_data.360" = type { %"class.absl::optional_internal::optional_data_base.361" }
%"class.absl::optional_internal::optional_data_base.361" = type { %"class.absl::optional_internal::optional_data_dtor_base.362" }
%"class.absl::optional_internal::optional_data_dtor_base.362" = type { i8, %union.anon.363 }
%union.anon.363 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"class.std::__1::unique_ptr.366"*, %"class.std::__1::unique_ptr.366"*, %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.369", %"class.absl::optional.374", %"class.absl::optional.374" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.369" = type { %"class.absl::optional_internal::optional_data.370" }
%"class.absl::optional_internal::optional_data.370" = type { %"class.absl::optional_internal::optional_data_base.371" }
%"class.absl::optional_internal::optional_data_base.371" = type { %"class.absl::optional_internal::optional_data_dtor_base.372" }
%"class.absl::optional_internal::optional_data_dtor_base.372" = type { i8, %union.anon.373 }
%union.anon.373 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.374" = type { %"class.absl::optional_internal::optional_data.375" }
%"class.absl::optional_internal::optional_data.375" = type { %"class.absl::optional_internal::optional_data_base.376" }
%"class.absl::optional_internal::optional_data_base.376" = type { %"class.absl::optional_internal::optional_data_dtor_base.377" }
%"class.absl::optional_internal::optional_data_dtor_base.377" = type { i8, %union.anon.378 }
%union.anon.378 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.std::__1::unique_ptr.366"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.387" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.393" = type { %"class.cc::ListContainerHelper" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.std::__1::unique_ptr.343"* }
%"class.absl::optional.406" = type { %"class.absl::optional_internal::optional_data.407" }
%"class.absl::optional_internal::optional_data.407" = type { %"class.absl::optional_internal::optional_data_base.408" }
%"class.absl::optional_internal::optional_data_base.408" = type { %"class.absl::optional_internal::optional_data_dtor_base.409" }
%"class.absl::optional_internal::optional_data_dtor_base.409" = type { i8, %union.anon.410 }
%union.anon.410 = type { %"class.viz::CompositorFrame" }
%"class.base::internal::flat_tree.411" = type { %"class.std::__1::vector.412" }
%"class.std::__1::vector.412" = type { %"class.std::__1::__vector_base.413" }
%"class.std::__1::__vector_base.413" = type { %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"**, %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.viz::SurfaceAllocationGroup"** }
%"class.viz::SurfaceAllocationGroup" = type opaque
%"class.viz::SurfaceSavedFrameStorage" = type { %"class.viz::Surface"*, %"class.base::internal::CancelableCallbackImpl", %"class.std::__1::unique_ptr.421" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.419", %"class.base::WeakPtrFactory.420" }
%"class.base::OnceCallback.419" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.420" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.viz::SurfaceSavedFrame"* }
%"class.viz::SurfaceSavedFrame" = type { %"class.viz::CompositorFrameTransitionDirective", %"class.base::OnceCallback.424", %"class.absl::optional.425", i64, i64, %"class.base::WeakPtrFactory.442" }
%"class.base::OnceCallback.424" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.425" = type { %"class.absl::optional_internal::optional_data.426" }
%"class.absl::optional_internal::optional_data.426" = type { %"class.absl::optional_internal::optional_data_base.427" }
%"class.absl::optional_internal::optional_data_base.427" = type { %"class.absl::optional_internal::optional_data_dtor_base.428" }
%"class.absl::optional_internal::optional_data_dtor_base.428" = type { i8, %union.anon.429 }
%union.anon.429 = type { %"struct.viz::SurfaceSavedFrame::FrameResult" }
%"struct.viz::SurfaceSavedFrame::FrameResult" = type { %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"class.std::__1::vector.434" }
%"struct.viz::SurfaceSavedFrame::OutputCopyResult" = type { %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %class.SkBitmap, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData", i8, %"class.base::OnceCallback.433" }
%class.SkBitmap = type { %class.sk_sp.430, %class.SkPixmap, %class.sk_sp.432 }
%class.sk_sp.430 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.431, i32, i32 }
%class.sk_sp.431 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.116" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.432 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.viz::SurfaceSavedFrame::RenderPassDrawData" = type { %"class.gfx::Rect", %"class.gfx::Transform", float }
%"class.base::OnceCallback.433" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.434" = type { %"class.std::__1::__vector_base.435" }
%"class.std::__1::__vector_base.435" = type { %"class.absl::optional.436"*, %"class.absl::optional.436"*, %"class.std::__1::__compressed_pair.437" }
%"class.absl::optional.436" = type opaque
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.absl::optional.436"* }
%"class.base::WeakPtrFactory.442" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.446" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::__temp_value" = type { %"struct.std::__1::aligned_storage<128, 8>::type", %"class.std::__1::allocator.240"* }
%"struct.std::__1::aligned_storage<128, 8>::type" = type { [128 x i8] }
%"class.std::__1::allocator.240" = type { i8 }
%"struct.std::__1::__split_buffer.508" = type { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"*, %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::allocator.240"* }

$_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIbNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_SE_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIbEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN4base8flat_mapIN3viz9SurfaceIdENS1_20DisplayDamageTracker22SurfaceBeginFrameStateENSt3__14lessIvEENS5_6vectorINS5_4pairIS2_S4_EENS5_9allocatorISA_EEEEEixERKS2_ = comdat any

$_ZN3viz20DisplayDamageTracker24OnFirstSurfaceActivationERKNS_11SurfaceInfoE = comdat any

$_ZN3viz20DisplayDamageTracker18OnSurfaceActivatedERKNS_9SurfaceIdE = comdat any

$_ZN3viz15SurfaceObserver20OnSurfaceWillBeDrawnEPNS_7SurfaceE = comdat any

$_ZN3viz15SurfaceObserver23OnAddedSurfaceReferenceERKNS_9SurfaceIdES3_ = comdat any

$_ZN3viz15SurfaceObserver25OnRemovedSurfaceReferenceERKNS_9SurfaceIdES3_ = comdat any

$_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS5_9allocatorISC_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSC_EESL_EERKT_ = comdat any

$_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE7emplaceIJRKS3_S5_EEENS_11__wrap_iterIPS6_EENSD_IPKS6_EEDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE12__move_rangeEPS6_SA_SA_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEERNS_9allocatorIS6_EEE12emplace_backIJRKS3_S5_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EEPS6_ = comdat any

@_ZTVN3viz20DisplayDamageTrackerE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::DisplayDamageTracker"*)* @_ZN3viz20DisplayDamageTrackerD2Ev to i8*), i8* bitcast (void (%"class.viz::DisplayDamageTracker"*)* @_ZN3viz20DisplayDamageTrackerD0Ev to i8*), i8* bitcast (void (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceInfo"*)* @_ZN3viz20DisplayDamageTracker24OnFirstSurfaceActivationERKNS_11SurfaceInfoE to i8*), i8* bitcast (void (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)* @_ZN3viz20DisplayDamageTracker18OnSurfaceActivatedERKNS_9SurfaceIdE to i8*), i8* bitcast (void (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)* @_ZN3viz20DisplayDamageTracker29OnSurfaceMarkedForDestructionERKNS_9SurfaceIdE to i8*), i8* bitcast (void (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)* @_ZN3viz20DisplayDamageTracker18OnSurfaceDestroyedERKNS_9SurfaceIdE to i8*), i8* bitcast (i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)* @_ZN3viz20DisplayDamageTracker16OnSurfaceDamagedERKNS_9SurfaceIdERKNS_13BeginFrameAckE to i8*), i8* bitcast (void (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)* @_ZN3viz20DisplayDamageTracker23OnSurfaceDamageExpectedERKNS_9SurfaceIdERKNS_14BeginFrameArgsE to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*)* @_ZN3viz15SurfaceObserver20OnSurfaceWillBeDrawnEPNS_7SurfaceE to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)* @_ZN3viz15SurfaceObserver23OnAddedSurfaceReferenceERKNS_9SurfaceIdES3_ to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)* @_ZN3viz15SurfaceObserver25OnRemovedSurfaceReferenceERKNS_9SurfaceIdES3_ to i8*), i8* bitcast (i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)* @_ZNK3viz20DisplayDamageTracker22SurfaceHasUnackedFrameERKNS_9SurfaceIdE to i8*), i8* bitcast (void (%"class.viz::DisplayDamageTracker"*)* @_ZN3viz20DisplayDamageTracker22UpdateRootFrameMissingEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [42 x i8] c"DisplayDamageTracker::SetRootFrameMissing\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"missing\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"DisplayDamageTracker::SetNewRootSurface\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"DisplayDamageTracker::SurfaceDamaged\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"surface_id\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"DisplayDamageTracker::HasPendingSurfaces\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"has_pending_surfaces\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"pending_surface_id\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"DisplayDamageTracker::SurfaceDestroyed\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"DisplayDamageTracker::SurfaceDamageExpected\00", align 1

@_ZN3viz20DisplayDamageTrackerC1EPNS_14SurfaceManagerEPNS_17SurfaceAggregatorE = hidden unnamed_addr alias void (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceManager"*, %"class.viz::SurfaceAggregator"*), void (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceManager"*, %"class.viz::SurfaceAggregator"*)* @_ZN3viz20DisplayDamageTrackerC2EPNS_14SurfaceManagerEPNS_17SurfaceAggregatorE
@_ZN3viz20DisplayDamageTrackerD1Ev = hidden unnamed_addr alias void (%"class.viz::DisplayDamageTracker"*), void (%"class.viz::DisplayDamageTracker"*)* @_ZN3viz20DisplayDamageTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTrackerC2EPNS_14SurfaceManagerEPNS_17SurfaceAggregatorE(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceManager"*, %"class.viz::SurfaceAggregator"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN3viz20DisplayDamageTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::ObserverList"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %7, %"class.base::internal::LinkNodeBase"* %7, %"class.base::internal::LinkNodeBase"* %7) #10
  %8 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 2
  store %"class.viz::SurfaceManager"* %1, %"class.viz::SurfaceManager"** %10, align 8
  %11 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 3
  store %"class.viz::SurfaceAggregator"* %2, %"class.viz::SurfaceAggregator"** %11, align 8
  %12 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 4
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 5
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5
  %16 = icmp eq %"class.viz::DisplayDamageTracker"* %0, null
  %17 = bitcast %"class.base::flat_map.232"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 80, i1 false)
  br i1 %16, label %18, label %21

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %20 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %19, align 8
  br label %39

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.base::ObserverList.28", %"class.base::ObserverList.28"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %22, align 8
  %24 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %25 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %24, align 8
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %23, %25
  %27 = bitcast %"class.viz::DisplayDamageTracker"* %0 to i8*
  br i1 %26, label %36, label %28

28:                                               ; preds = %21, %33
  %29 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %34, %33 ], [ %23, %21 ]
  %30 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %29, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, %27
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %29, i64 1
  %35 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %34, %25
  br i1 %35, label %39, label %28

36:                                               ; preds = %28, %21
  %37 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %23, %21 ], [ %29, %28 ]
  %38 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %37, %25
  br i1 %38, label %39, label %112

39:                                               ; preds = %33, %18, %36
  %40 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %20, %18 ], [ %25, %36 ], [ %25, %33 ]
  %41 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %41, align 8
  %44 = ptrtoint %"class.viz::DisplayDamageTracker"* %0 to i64
  %45 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %48 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %40, %47
  %49 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %47 to i64
  br i1 %48, label %50, label %55

50:                                               ; preds = %39
  %51 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %40 to i64*
  store i64 %44, i64* %51, align 8
  %52 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %40, i64 1
  %53 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %52 to i64
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %45 to i64*
  store i64 %53, i64* %54, align 8
  br label %112

55:                                               ; preds = %39
  %56 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %40 to i64
  %57 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %45 to i64*
  %58 = bitcast %"class.base::ObserverList.28"* %15 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %56, %59
  %61 = ashr exact i64 %60, 3
  %62 = add nsw i64 %61, 1
  %63 = icmp ugt i64 %62, 2305843009213693951
  br i1 %63, label %64, label %66

64:                                               ; preds = %55
  %65 = bitcast %"class.base::ObserverList.28"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %65) #11
  unreachable

66:                                               ; preds = %55
  %67 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %46 to i64*
  %68 = sub i64 %49, %59
  %69 = ashr exact i64 %68, 3
  %70 = icmp ult i64 %69, 1152921504606846975
  br i1 %70, label %71, label %79

71:                                               ; preds = %66
  %72 = ashr exact i64 %68, 2
  %73 = icmp ult i64 %72, %62
  %74 = select i1 %73, i64 %62, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %71
  %77 = icmp ugt i64 %74, 2305843009213693951
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  tail call void @abort() #11
  unreachable

79:                                               ; preds = %76, %66
  %80 = phi i64 [ %74, %76 ], [ 2305843009213693951, %66 ]
  %81 = shl i64 %80, 3
  %82 = tail call i8* @_Znwm(i64 %81) #12
  %83 = bitcast i8* %82 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %84

84:                                               ; preds = %79, %71
  %85 = phi i64 [ %80, %79 ], [ 0, %71 ]
  %86 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %83, %79 ], [ null, %71 ]
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %86, i64 %61
  %88 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %86, i64 %85
  %89 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %88 to i64
  %90 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i64*
  store i64 %44, i64* %90, align 8
  %91 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %87, i64 1
  %92 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %91 to i64
  %93 = getelementptr inbounds %"class.base::ObserverList.28", %"class.base::ObserverList.28"* %15, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %93, align 8
  %95 = load i64, i64* %57, align 8
  %96 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %94 to i64
  %97 = sub i64 %95, %96
  %98 = ashr exact i64 %97, 3
  %99 = sub nsw i64 0, %98
  %100 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %87, i64 %99
  %101 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %100 to i64
  %102 = icmp sgt i64 %97, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %84
  %104 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %100 to i8*
  %105 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 %97, i1 false) #10
  %106 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %93, align 8
  br label %107

107:                                              ; preds = %103, %84
  %108 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %94, %84 ], [ %106, %103 ]
  store i64 %101, i64* %58, align 8
  store i64 %92, i64* %57, align 8
  store i64 %89, i64* %67, align 8
  %109 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %110, %107, %50, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTrackerD2Ev(%"class.viz::DisplayDamageTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN3viz20DisplayDamageTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 2
  %4 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %6, %8
  %10 = bitcast %"class.viz::DisplayDamageTracker"* %0 to i8*
  %11 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %8 to i64
  br i1 %9, label %20, label %12

12:                                               ; preds = %1, %17
  %13 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %18, %17 ], [ %6, %1 ]
  %14 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %13, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, %10
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %13, i64 1
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %18, %8
  br i1 %19, label %49, label %12

20:                                               ; preds = %12, %1
  %21 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %6, %1 ], [ %13, %12 ]
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %8
  br i1 %22, label %49, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  store i64 %30, i64* %28, align 8
  br label %31

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %33 = bitcast %"class.base::internal::LinkNodeBase"** %32 to %"class.base::LinkNode.30"**
  %34 = load %"class.base::LinkNode.30"*, %"class.base::LinkNode.30"** %33, align 8
  %35 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 1, i32 0
  %36 = icmp eq %"class.base::LinkNode.30"* %34, %35
  br i1 %36, label %37, label %48

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 1
  %39 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %38 to i64
  %40 = sub i64 %11, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %38 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 %40, i1 false) #10
  br label %46

46:                                               ; preds = %43, %37
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 %41
  store %"class.base::internal::UncheckedObserverAdapter"* %47, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  br label %49

48:                                               ; preds = %31
  store i8* null, i8** %24, align 8
  br label %49

49:                                               ; preds = %17, %20, %46, %48
  %50 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 7, i32 0, i32 0
  %51 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %50, align 8
  %52 = icmp eq %"class.viz::SurfaceId"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = ptrtoint %"class.viz::SurfaceId"* %51 to i64
  %55 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 7, i32 0, i32 1
  %56 = bitcast %"class.viz::SurfaceId"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"class.viz::SurfaceId"* %51 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %49, %53
  %59 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %59, align 8
  %61 = icmp eq %"struct.std::__1::pair.236"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = ptrtoint %"struct.std::__1::pair.236"* %60 to i64
  %64 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::pair.236"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"struct.std::__1::pair.236"* %60 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %58, %62
  %68 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %69 = bitcast %"class.base::internal::LinkNodeBase"** %68 to %"class.base::LinkNode"**
  %70 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 1, i32 0
  %71 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %69, align 8
  %72 = icmp eq %"class.base::LinkNode"* %71, %70
  br i1 %72, label %85, label %73

73:                                               ; preds = %67, %82
  %74 = phi %"class.base::LinkNode"* [ %83, %82 ], [ %71, %67 ]
  %75 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %74, i64 1
  %76 = bitcast %"class.base::LinkNode"* %75 to %"class.base::ObserverList"**
  %77 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %76, align 8
  %78 = icmp eq %"class.base::ObserverList"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %76, align 8
  %80 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %74, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %80) #10
  %81 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %69, align 8
  br label %82

82:                                               ; preds = %79, %73
  %83 = phi %"class.base::LinkNode"* [ %74, %73 ], [ %81, %79 ]
  %84 = icmp eq %"class.base::LinkNode"* %83, %70
  br i1 %84, label %85, label %73

85:                                               ; preds = %82, %67
  %86 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %86, align 8
  %88 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %91 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  tail call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %85, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTrackerD0Ev(%"class.viz::DisplayDamageTracker"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3viz20DisplayDamageTrackerD2Ev(%"class.viz::DisplayDamageTracker"* %0) #10
  %2 = bitcast %"class.viz::DisplayDamageTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker11AddObserverEPNS0_8ObserverE(%"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1
  %4 = icmp eq %"class.viz::DisplayDamageTracker::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.viz::DisplayDamageTracker::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.viz::DisplayDamageTracker::Observer"* %1 to i64
  %32 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #11
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #11
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #12
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #10
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker14RemoveObserverEPNS0_8ObserverE(%"class.viz::DisplayDamageTracker"*, %"class.viz::DisplayDamageTracker::Observer"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.viz::DisplayDamageTracker::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #10
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker19SetRootFrameMissingEb(%"class.viz::DisplayDamageTracker"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8, !prof !2

8:                                                ; preds = %2
  %9 = call i64 @_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* nonnull dereferenceable(1) %3)
  %10 = load i8, i8* %3, align 1, !range !3
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i8 [ %4, %2 ], [ %10, %8 ]
  %13 = phi i64 [ -6148914691236517206, %2 ], [ %9, %8 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), %8 ]
  %15 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %8 ]
  %16 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, %12
  br i1 %18, label %21, label %19

19:                                               ; preds = %11
  store i8 %12, i8* %16, align 8
  %20 = icmp ne i8 %12, 0
  call void @_ZN3viz20DisplayDamageTracker22NotifyRootFrameMissingEb(%"class.viz::DisplayDamageTracker"* %0, i1 zeroext %20)
  br label %21

21:                                               ; preds = %11, %19
  %22 = icmp eq i8* %15, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = load i8, i8* %15, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #10
  br label %27

27:                                               ; preds = %21, %23, %26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = load i8, i8* %8, align 1, !range !3
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8*
  store i8 %20, i8* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #10
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #10
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #10
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker22NotifyRootFrameMissingEb(%"class.viz::DisplayDamageTracker"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !4
  %13 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !4
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #10
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10, !alias.scope !4
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8
  %20 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #10
  store i64 0, i64* %8, align 8
  %21 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %54, %50, %44, %31, %17
  %60 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #10
  %61 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #10
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #10, !alias.scope !7
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %68

68:                                               ; preds = %308, %59
  %69 = phi %"class.base::ObserverList"* [ %67, %59 ], [ %306, %308 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !10

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %398
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %400, %398 ], [ %169, %167 ]
  %174 = phi i64 [ %399, %398 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %376, label %370

189:                                              ; preds = %398, %167
  %190 = phi i64 [ %168, %167 ], [ %399, %398 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #10
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #10
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !12

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %366
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %368, %366 ], [ %262, %260 ]
  %267 = phi i64 [ %367, %366 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %344, label %338

282:                                              ; preds = %366, %260
  %283 = phi i64 [ %261, %260 ], [ %367, %366 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #10
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #10
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %"class.viz::DisplayDamageTracker::Observer"**
  %301 = load %"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::DisplayDamageTracker::Observer"** %300, align 8
  %302 = bitcast %"class.viz::DisplayDamageTracker::Observer"* %301 to void (%"class.viz::DisplayDamageTracker::Observer"*, i1)***
  %303 = load void (%"class.viz::DisplayDamageTracker::Observer"*, i1)**, void (%"class.viz::DisplayDamageTracker::Observer"*, i1)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.viz::DisplayDamageTracker::Observer"*, i1)*, void (%"class.viz::DisplayDamageTracker::Observer"*, i1)** %303, i64 3
  %305 = load void (%"class.viz::DisplayDamageTracker::Observer"*, i1)*, void (%"class.viz::DisplayDamageTracker::Observer"*, i1)** %304, align 8
  call void %305(%"class.viz::DisplayDamageTracker::Observer"* %301, i1 zeroext %1) #10
  %306 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %307 = icmp eq %"class.base::ObserverList"* %306, null
  br i1 %307, label %308, label %309

308:                                              ; preds = %333, %329, %296, %309, %323
  br label %68

309:                                              ; preds = %296
  %310 = load i64, i64* %8, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %8, align 8
  %312 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 1
  %313 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.base::ObserverList"* %306 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = sub i64 %314, %316
  %318 = ashr exact i64 %317, 3
  %319 = load i64, i64* %9, align 8
  %320 = icmp ult i64 %318, %319
  %321 = select i1 %320, i64 %318, i64 %319
  %322 = icmp ult i64 %311, %321
  br i1 %322, label %323, label %308

323:                                              ; preds = %309
  %324 = inttoptr i64 %316 to %"class.base::internal::UncheckedObserverAdapter"*
  %325 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 %311, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %329, label %308

329:                                              ; preds = %323, %333
  %330 = phi i64 [ %331, %333 ], [ %311, %323 ]
  %331 = add nuw i64 %330, 1
  store i64 %331, i64* %8, align 8
  %332 = icmp ult i64 %331, %321
  br i1 %332, label %333, label %308

333:                                              ; preds = %329
  %334 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %325, align 8
  %335 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %331, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %329, label %308

338:                                              ; preds = %277
  %339 = ptrtoint i8* %280 to i64
  %340 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %341 = inttoptr i64 %278 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %340, i64 1
  %343 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %342 to i64
  br label %344

344:                                              ; preds = %338, %277
  %345 = phi i64 [ %278, %277 ], [ %343, %338 ]
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  br i1 %348, label %355, label %349

349:                                              ; preds = %344
  %350 = ptrtoint i8* %347 to i64
  %351 = inttoptr i64 %345 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %345 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %344
  %356 = phi i64 [ %345, %344 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %369 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %368, %217
  br i1 %369, label %282, label %265

370:                                              ; preds = %184
  %371 = ptrtoint i8* %187 to i64
  %372 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %185 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %184
  %377 = phi i64 [ %185, %184 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %401 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %400, %124
  br i1 %401, label %189, label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker17SetNewRootSurfaceERKNS_9SurfaceIdE(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.viz::BeginFrameAck", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !2

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %10 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %8 ]
  %18 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8
  %19 = bitcast %"class.viz::SurfaceId"* %18 to i8*
  %20 = bitcast %"class.viz::SurfaceId"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false)
  %21 = bitcast %"class.viz::DisplayDamageTracker"* %0 to void (%"class.viz::DisplayDamageTracker"*)***
  %22 = load void (%"class.viz::DisplayDamageTracker"*)**, void (%"class.viz::DisplayDamageTracker"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.viz::DisplayDamageTracker"*)*, void (%"class.viz::DisplayDamageTracker"*)** %22, i64 12
  %24 = load void (%"class.viz::DisplayDamageTracker"*)*, void (%"class.viz::DisplayDamageTracker"*)** %23, align 8
  call void %24(%"class.viz::DisplayDamageTracker"* %0) #10
  %25 = bitcast %"struct.viz::BeginFrameAck"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %3, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %3, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %3, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #10
  call void @_ZN3viz12BeginFrameIdC1Ev(%"struct.viz::BeginFrameId"* nonnull %28) #10
  store i64 -1, i64* %26, align 8
  store i8 1, i8* %27, align 8
  call void @_ZN3viz20DisplayDamageTracker20ProcessSurfaceDamageERKNS_9SurfaceIdERKNS_13BeginFrameAckEb(%"class.viz::DisplayDamageTracker"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %18, %"struct.viz::BeginFrameAck"* nonnull dereferenceable(32) %3, i1 zeroext true) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  %29 = icmp eq i8* %17, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %14
  %31 = load i8, i8* %17, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #10
  br label %34

34:                                               ; preds = %14, %30, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker21SetRootSurfaceDamagedEv(%"class.viz::DisplayDamageTracker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.viz::BeginFrameAck", align 8
  %3 = bitcast %"struct.viz::BeginFrameAck"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %2, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %2, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %2, i64 0, i32 0
  %7 = bitcast %"struct.viz::BeginFrameAck"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @_ZN3viz12BeginFrameIdC1Ev(%"struct.viz::BeginFrameId"* nonnull %6) #10
  store i64 -1, i64* %4, align 8
  store i8 1, i8* %5, align 8
  %8 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8
  call void @_ZN3viz20DisplayDamageTracker20ProcessSurfaceDamageERKNS_9SurfaceIdERKNS_13BeginFrameAckEb(%"class.viz::DisplayDamageTracker"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %8, %"struct.viz::BeginFrameAck"* nonnull dereferenceable(32) %2, i1 zeroext true)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker20ProcessSurfaceDamageERKNS_9SurfaceIdERKNS_13BeginFrameAckEb(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::BeginFrameAck"* dereferenceable(32), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.viz::SurfaceId", align 16
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10, !prof !2

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  call void @_ZNK3viz9SurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.viz::SurfaceId"* %1) #10
  %12 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %10, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  br label %21

21:                                               ; preds = %4, %20
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), %20 ]
  %23 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %20 ]
  %24 = phi i64 [ -6148914691236517206, %4 ], [ %12, %20 ]
  %25 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %62

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %62

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %62

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %62

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %50, %52
  br i1 %53, label %54, label %62

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %56, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 5
  store i8 0, i8* %61, align 1
  br label %62

62:                                               ; preds = %21, %48, %36, %42, %30, %60, %54
  %63 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %2, i64 0, i32 0
  %64 = call zeroext i1 @_ZNK3viz12BeginFrameId15IsSequenceValidEv(%"struct.viz::BeginFrameId"* %63) #10
  br i1 %64, label %65, label %84

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0
  %67 = call { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS5_9allocatorISC_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSC_EESL_EERKT_(%"class.base::internal::flat_tree.233"* %66, %"class.viz::SurfaceId"* dereferenceable(32) %1) #10
  %68 = extractvalue { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } %67, 0
  %69 = extractvalue { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } %67, 1
  %70 = icmp eq %"struct.std::__1::pair.236"* %68, %69
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %73 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %72, align 8
  %74 = icmp eq %"struct.std::__1::pair.236"* %68, %73
  br i1 %74, label %84, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %68, i64 0, i32 1, i32 1, i32 0
  %77 = call zeroext i1 @_ZNK3viz12BeginFrameId18IsNextInSequenceToERKS0_(%"struct.viz::BeginFrameId"* %76, %"struct.viz::BeginFrameId"* dereferenceable(16) %63) #10
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = call dereferenceable(16) %"struct.viz::BeginFrameId"* @_ZN3viz12BeginFrameIdaSERKS0_(%"struct.viz::BeginFrameId"* %76, %"struct.viz::BeginFrameId"* dereferenceable(16) %63) #10
  %80 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %68, i64 0, i32 1, i32 1, i32 1
  %81 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %2, i64 0, i32 1
  %82 = bitcast i64* %80 to i8*
  %83 = bitcast i64* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 9, i1 false) #10
  br label %84

84:                                               ; preds = %65, %71, %78, %75, %62
  %85 = phi i1 [ false, %62 ], [ true, %78 ], [ false, %75 ], [ false, %71 ], [ false, %65 ]
  br i1 %3, label %86, label %94

86:                                               ; preds = %84
  %87 = bitcast %"class.viz::SurfaceId"* %1 to <4 x i32>*
  %88 = load <4 x i32>, <4 x i32>* %87, align 4
  %89 = bitcast %"class.viz::SurfaceId"* %6 to <4 x i32>*
  store <4 x i32> %88, <4 x i32>* %89, align 16
  %90 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %6, i64 0, i32 1, i32 2
  %91 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %92 = bitcast %"class.base::UnguessableToken"* %90 to i8*
  %93 = bitcast %"class.base::UnguessableToken"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false) #10
  call void @_ZN3viz20DisplayDamageTracker20NotifyDisplayDamagedENS_9SurfaceIdE(%"class.viz::DisplayDamageTracker"* %0, %"class.viz::SurfaceId"* nonnull %6)
  br label %96

94:                                               ; preds = %84
  br i1 %85, label %95, label %96

95:                                               ; preds = %94
  call void @_ZN3viz20DisplayDamageTracker28NotifyPendingSurfacesChangedEv(%"class.viz::DisplayDamageTracker"* %0)
  br label %96

96:                                               ; preds = %94, %95, %86
  %97 = icmp eq i8* %23, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %96
  %99 = load i8, i8* %23, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %98
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %22, i64 %24) #10
  br label %102

102:                                              ; preds = %96, %98, %101
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz20DisplayDamageTracker18IsRootSurfaceValidEv(%"class.viz::DisplayDamageTracker"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ne i64 %23, 0
  br label %25

25:                                               ; preds = %5, %9, %13, %17, %21
  %26 = phi i1 [ false, %5 ], [ false, %13 ], [ false, %9 ], [ true, %17 ], [ %24, %21 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker14DisplayResizedEv(%"class.viz::DisplayDamageTracker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.viz::SurfaceId", align 16
  %3 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 5
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = bitcast i32* %4 to <4 x i32>*
  %6 = load <4 x i32>, <4 x i32>* %5, align 4
  %7 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  store <4 x i32> %6, <4 x i32>* %7, align 16
  %8 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2
  %10 = bitcast %"class.base::UnguessableToken"* %8 to i8*
  %11 = bitcast %"class.base::UnguessableToken"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false) #10
  call void @_ZN3viz20DisplayDamageTracker20NotifyDisplayDamagedENS_9SurfaceIdE(%"class.viz::DisplayDamageTracker"* %0, %"class.viz::SurfaceId"* nonnull %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker20NotifyDisplayDamagedENS_9SurfaceIdE(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.viz::SurfaceId", align 16
  %6 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1
  %7 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %6, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8, !noalias !13
  %14 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !13
  %16 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %13, %15
  %17 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %17) #10
  br i1 %16, label %18, label %20

18:                                               ; preds = %2
  %19 = bitcast %"class.base::ObserverList"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10, !alias.scope !13
  br label %60

20:                                               ; preds = %2
  store %"class.base::ObserverList"* %6, %"class.base::ObserverList"** %8, align 8
  %21 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %17, %"class.base::internal::LinkNodeBase"* %21) #10
  store i64 0, i64* %9, align 8
  %22 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %14 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::ObserverList"* %6 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 3
  br label %32

32:                                               ; preds = %25, %20
  %33 = phi i64 [ %31, %25 ], [ -1, %20 ]
  store i64 %33, i64* %10, align 8
  %34 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %35 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %34, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::ObserverList"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %41, %33
  %43 = select i1 %42, i64 %41, i64 %33
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %32
  %46 = inttoptr i64 %39 to %"class.base::internal::UncheckedObserverAdapter"*
  %47 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %34, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %46, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %60

51:                                               ; preds = %45, %55
  %52 = phi i64 [ %53, %55 ], [ 0, %45 ]
  %53 = add nuw i64 %52, 1
  store i64 %53, i64* %9, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %47, align 8
  %57 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %56, i64 %53, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %51, label %60

60:                                               ; preds = %55, %51, %45, %32, %18
  %61 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %64 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %65 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %65) #10
  %67 = bitcast %"class.base::ObserverList"** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #10, !alias.scope !16
  %68 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %5, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %70 = bitcast %"class.base::UnguessableToken"* %68 to i8*
  %71 = bitcast %"class.base::UnguessableToken"* %69 to i8*
  %72 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %73 = bitcast %"class.viz::SurfaceId"* %1 to <4 x i32>*
  %74 = bitcast %"class.viz::SurfaceId"* %5 to <4 x i32>*
  br label %75

75:                                               ; preds = %316, %60
  %76 = phi %"class.base::ObserverList"* [ %72, %60 ], [ %314, %316 ]
  %77 = icmp eq %"class.base::ObserverList"* %76, null
  br i1 %77, label %93, label %78

78:                                               ; preds = %75
  %79 = load i64, i64* %9, align 8
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %76, i64 0, i32 0, i32 0, i32 1
  %81 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.base::ObserverList"* %76 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %82, %84
  %86 = ashr exact i64 %85, 3
  %87 = load i64, i64* %10, align 8
  %88 = icmp ult i64 %86, %87
  %89 = select i1 %88, i64 %86, i64 %87
  %90 = icmp eq i64 %79, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %78
  %92 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  br label %109

93:                                               ; preds = %78, %75
  %94 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  %95 = icmp eq %"class.base::ObserverList"* %94, null
  br i1 %95, label %209, label %96

96:                                               ; preds = %93
  %97 = load i64, i64* %63, align 8
  %98 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %94, i64 0, i32 0, i32 0, i32 1
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.base::ObserverList"* %94 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = ashr exact i64 %103, 3
  %105 = load i64, i64* %64, align 8
  %106 = icmp ult i64 %104, %105
  %107 = select i1 %106, i64 %104, i64 %105
  %108 = icmp eq i64 %97, %107
  br i1 %108, label %118, label %109

109:                                              ; preds = %96, %91
  %110 = phi %"class.base::ObserverList"* [ %92, %91 ], [ %94, %96 ]
  %111 = icmp eq %"class.base::ObserverList"* %76, %110
  %112 = load i64, i64* %9, align 8
  %113 = load i64, i64* %63, align 8
  %114 = icmp eq i64 %112, %113
  %115 = and i1 %111, %114
  br i1 %115, label %116, label %303

116:                                              ; preds = %109
  %117 = icmp eq %"class.base::ObserverList"* %76, null
  br i1 %117, label %209, label %118

118:                                              ; preds = %96, %116
  %119 = phi %"class.base::ObserverList"* [ %76, %116 ], [ %94, %96 ]
  %120 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %119, i64 0, i32 1
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %119, i64 0, i32 1, i32 0, i32 0, i32 1
  %122 = bitcast %"class.base::internal::LinkNodeBase"** %121 to %"class.base::LinkNode"**
  %123 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %122, align 8
  %124 = bitcast %"class.base::LinkedList"* %120 to %"class.base::LinkNode"**
  %125 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %124, align 8
  %126 = icmp eq %"class.base::LinkNode"* %123, %125
  br i1 %126, label %127, label %205

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %119, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %128, align 8
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %119, i64 0, i32 0, i32 0, i32 1
  %131 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %130, align 8
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %129, %131
  br i1 %132, label %141, label %133

133:                                              ; preds = %127, %138
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %138 ], [ %129, %127 ]
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %131
  br i1 %140, label %205, label %133

141:                                              ; preds = %133, %127
  %142 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %129, %127 ], [ %134, %133 ]
  %143 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %142 to i64
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %131
  br i1 %144, label %205, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %142, i64 1
  %147 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %146, %131
  br i1 %147, label %200, label %148

148:                                              ; preds = %145
  %149 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 -2, i32 0
  %150 = ptrtoint i8** %149 to i64
  %151 = sub i64 %150, %143
  %152 = lshr i64 %151, 3
  %153 = add nuw nsw i64 %152, 1
  %154 = and i64 %153, 3
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %174, label %156

156:                                              ; preds = %148, %169
  %157 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %171, %169 ], [ %146, %148 ]
  %158 = phi i64 [ %170, %169 ], [ %143, %148 ]
  %159 = phi i64 [ %172, %169 ], [ %154, %148 ]
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %156
  %164 = ptrtoint i8* %161 to i64
  %165 = inttoptr i64 %158 to %"class.base::internal::UncheckedObserverAdapter"*
  %166 = inttoptr i64 %158 to i64*
  store i64 %164, i64* %166, align 8
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %165, i64 1
  %168 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %167 to i64
  br label %169

169:                                              ; preds = %163, %156
  %170 = phi i64 [ %158, %156 ], [ %168, %163 ]
  %171 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %172 = add i64 %159, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %156, !llvm.loop !19

174:                                              ; preds = %169, %148
  %175 = phi i64 [ undef, %148 ], [ %170, %169 ]
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %146, %148 ], [ %171, %169 ]
  %177 = phi i64 [ %143, %148 ], [ %170, %169 ]
  %178 = icmp ult i64 %151, 24
  br i1 %178, label %196, label %179

179:                                              ; preds = %174, %406
  %180 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %408, %406 ], [ %176, %174 ]
  %181 = phi i64 [ %407, %406 ], [ %177, %174 ]
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = icmp eq i8* %183, null
  br i1 %184, label %191, label %185

185:                                              ; preds = %179
  %186 = ptrtoint i8* %183 to i64
  %187 = inttoptr i64 %181 to %"class.base::internal::UncheckedObserverAdapter"*
  %188 = inttoptr i64 %181 to i64*
  store i64 %186, i64* %188, align 8
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %187, i64 1
  %190 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %189 to i64
  br label %191

191:                                              ; preds = %185, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %185 ]
  %193 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = icmp eq i8* %194, null
  br i1 %195, label %384, label %378

196:                                              ; preds = %406, %174
  %197 = phi i64 [ %175, %174 ], [ %407, %406 ]
  %198 = inttoptr i64 %197 to %"class.base::internal::UncheckedObserverAdapter"*
  %199 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %130, align 8
  br label %200

200:                                              ; preds = %196, %145
  %201 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %145 ], [ %199, %196 ]
  %202 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %145 ], [ %198, %196 ]
  %203 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %202, %201
  br i1 %203, label %205, label %204

204:                                              ; preds = %200
  store %"class.base::internal::UncheckedObserverAdapter"* %202, %"class.base::internal::UncheckedObserverAdapter"** %130, align 8
  br label %205

205:                                              ; preds = %138, %204, %200, %141, %118
  %206 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %62, align 8
  %207 = icmp eq %"class.base::ObserverList"* %206, null
  br i1 %207, label %209, label %208

208:                                              ; preds = %205
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %62, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %65) #10
  br label %209

209:                                              ; preds = %93, %116, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #10
  %210 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %211 = icmp eq %"class.base::ObserverList"* %210, null
  br i1 %211, label %302, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %210, i64 0, i32 1
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %210, i64 0, i32 1, i32 0, i32 0, i32 1
  %215 = bitcast %"class.base::internal::LinkNodeBase"** %214 to %"class.base::LinkNode"**
  %216 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %215, align 8
  %217 = bitcast %"class.base::LinkedList"* %213 to %"class.base::LinkNode"**
  %218 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %217, align 8
  %219 = icmp eq %"class.base::LinkNode"* %216, %218
  br i1 %219, label %220, label %298

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %210, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %221, align 8
  %223 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %210, i64 0, i32 0, i32 0, i32 1
  %224 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %223, align 8
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %222, %224
  br i1 %225, label %234, label %226

226:                                              ; preds = %220, %231
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %231 ], [ %222, %220 ]
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 0, i32 0
  %229 = load i8*, i8** %228, align 8
  %230 = icmp eq i8* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %224
  br i1 %233, label %298, label %226

234:                                              ; preds = %226, %220
  %235 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %222, %220 ], [ %227, %226 ]
  %236 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %235 to i64
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %224
  br i1 %237, label %298, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %235, i64 1
  %240 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %239, %224
  br i1 %240, label %293, label %241

241:                                              ; preds = %238
  %242 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 -2, i32 0
  %243 = ptrtoint i8** %242 to i64
  %244 = sub i64 %243, %236
  %245 = lshr i64 %244, 3
  %246 = add nuw nsw i64 %245, 1
  %247 = and i64 %246, 3
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %267, label %249

249:                                              ; preds = %241, %262
  %250 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %264, %262 ], [ %239, %241 ]
  %251 = phi i64 [ %263, %262 ], [ %236, %241 ]
  %252 = phi i64 [ %265, %262 ], [ %247, %241 ]
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = icmp eq i8* %254, null
  br i1 %255, label %262, label %256

256:                                              ; preds = %249
  %257 = ptrtoint i8* %254 to i64
  %258 = inttoptr i64 %251 to %"class.base::internal::UncheckedObserverAdapter"*
  %259 = inttoptr i64 %251 to i64*
  store i64 %257, i64* %259, align 8
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 1
  %261 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %260 to i64
  br label %262

262:                                              ; preds = %256, %249
  %263 = phi i64 [ %251, %249 ], [ %261, %256 ]
  %264 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %265 = add i64 %252, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %249, !llvm.loop !20

267:                                              ; preds = %262, %241
  %268 = phi i64 [ undef, %241 ], [ %263, %262 ]
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %239, %241 ], [ %264, %262 ]
  %270 = phi i64 [ %236, %241 ], [ %263, %262 ]
  %271 = icmp ult i64 %244, 24
  br i1 %271, label %289, label %272

272:                                              ; preds = %267, %374
  %273 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %376, %374 ], [ %269, %267 ]
  %274 = phi i64 [ %375, %374 ], [ %270, %267 ]
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 0, i32 0
  %276 = load i8*, i8** %275, align 8
  %277 = icmp eq i8* %276, null
  br i1 %277, label %284, label %278

278:                                              ; preds = %272
  %279 = ptrtoint i8* %276 to i64
  %280 = inttoptr i64 %274 to %"class.base::internal::UncheckedObserverAdapter"*
  %281 = inttoptr i64 %274 to i64*
  store i64 %279, i64* %281, align 8
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %280, i64 1
  %283 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %282 to i64
  br label %284

284:                                              ; preds = %278, %272
  %285 = phi i64 [ %274, %272 ], [ %283, %278 ]
  %286 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1, i32 0
  %287 = load i8*, i8** %286, align 8
  %288 = icmp eq i8* %287, null
  br i1 %288, label %352, label %346

289:                                              ; preds = %374, %267
  %290 = phi i64 [ %268, %267 ], [ %375, %374 ]
  %291 = inttoptr i64 %290 to %"class.base::internal::UncheckedObserverAdapter"*
  %292 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %223, align 8
  br label %293

293:                                              ; preds = %289, %238
  %294 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %238 ], [ %292, %289 ]
  %295 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %238 ], [ %291, %289 ]
  %296 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %295, %294
  br i1 %296, label %298, label %297

297:                                              ; preds = %293
  store %"class.base::internal::UncheckedObserverAdapter"* %295, %"class.base::internal::UncheckedObserverAdapter"** %223, align 8
  br label %298

298:                                              ; preds = %231, %297, %293, %234, %212
  %299 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %300 = icmp eq %"class.base::ObserverList"* %299, null
  br i1 %300, label %302, label %301

301:                                              ; preds = %298
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %8, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %17) #10
  br label %302

302:                                              ; preds = %209, %298, %301
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #10
  ret void

303:                                              ; preds = %109
  %304 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %76, i64 0, i32 0, i32 0, i32 0
  %305 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %304, align 8
  %306 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %305, i64 %112
  %307 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %306 to %"class.viz::DisplayDamageTracker::Observer"**
  %308 = load %"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::DisplayDamageTracker::Observer"** %307, align 8
  %309 = load <4 x i32>, <4 x i32>* %73, align 4
  store <4 x i32> %309, <4 x i32>* %74, align 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 16, i1 false) #10
  %310 = bitcast %"class.viz::DisplayDamageTracker::Observer"* %308 to void (%"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::SurfaceId"*)***
  %311 = load void (%"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::SurfaceId"*)**, void (%"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::SurfaceId"*)*** %310, align 8
  %312 = getelementptr inbounds void (%"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::SurfaceId"*)** %311, i64 2
  %313 = load void (%"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::SurfaceId"*)*, void (%"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::SurfaceId"*)** %312, align 8
  call void %313(%"class.viz::DisplayDamageTracker::Observer"* %308, %"class.viz::SurfaceId"* nonnull %5) #10
  %314 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %8, align 8
  %315 = icmp eq %"class.base::ObserverList"* %314, null
  br i1 %315, label %316, label %317

316:                                              ; preds = %341, %337, %303, %317, %331
  br label %75

317:                                              ; preds = %303
  %318 = load i64, i64* %9, align 8
  %319 = add i64 %318, 1
  store i64 %319, i64* %9, align 8
  %320 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %314, i64 0, i32 0, i32 0, i32 1
  %321 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.base::ObserverList"* %314 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %322, %324
  %326 = ashr exact i64 %325, 3
  %327 = load i64, i64* %10, align 8
  %328 = icmp ult i64 %326, %327
  %329 = select i1 %328, i64 %326, i64 %327
  %330 = icmp ult i64 %319, %329
  br i1 %330, label %331, label %316

331:                                              ; preds = %317
  %332 = inttoptr i64 %324 to %"class.base::internal::UncheckedObserverAdapter"*
  %333 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %314, i64 0, i32 0, i32 0, i32 0
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 %319, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %337, label %316

337:                                              ; preds = %331, %341
  %338 = phi i64 [ %339, %341 ], [ %319, %331 ]
  %339 = add nuw i64 %338, 1
  store i64 %339, i64* %9, align 8
  %340 = icmp ult i64 %339, %329
  br i1 %340, label %341, label %316

341:                                              ; preds = %337
  %342 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %333, align 8
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 %339, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = icmp eq i8* %344, null
  br i1 %345, label %337, label %316

346:                                              ; preds = %284
  %347 = ptrtoint i8* %287 to i64
  %348 = inttoptr i64 %285 to %"class.base::internal::UncheckedObserverAdapter"*
  %349 = inttoptr i64 %285 to i64*
  store i64 %347, i64* %349, align 8
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %348, i64 1
  %351 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %350 to i64
  br label %352

352:                                              ; preds = %346, %284
  %353 = phi i64 [ %285, %284 ], [ %351, %346 ]
  %354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 2, i32 0
  %355 = load i8*, i8** %354, align 8
  %356 = icmp eq i8* %355, null
  br i1 %356, label %363, label %357

357:                                              ; preds = %352
  %358 = ptrtoint i8* %355 to i64
  %359 = inttoptr i64 %353 to %"class.base::internal::UncheckedObserverAdapter"*
  %360 = inttoptr i64 %353 to i64*
  store i64 %358, i64* %360, align 8
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %359, i64 1
  %362 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %361 to i64
  br label %363

363:                                              ; preds = %357, %352
  %364 = phi i64 [ %353, %352 ], [ %362, %357 ]
  %365 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 3, i32 0
  %366 = load i8*, i8** %365, align 8
  %367 = icmp eq i8* %366, null
  br i1 %367, label %374, label %368

368:                                              ; preds = %363
  %369 = ptrtoint i8* %366 to i64
  %370 = inttoptr i64 %364 to %"class.base::internal::UncheckedObserverAdapter"*
  %371 = inttoptr i64 %364 to i64*
  store i64 %369, i64* %371, align 8
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %370, i64 1
  %373 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %372 to i64
  br label %374

374:                                              ; preds = %368, %363
  %375 = phi i64 [ %364, %363 ], [ %373, %368 ]
  %376 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 4
  %377 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %376, %224
  br i1 %377, label %289, label %272

378:                                              ; preds = %191
  %379 = ptrtoint i8* %194 to i64
  %380 = inttoptr i64 %192 to %"class.base::internal::UncheckedObserverAdapter"*
  %381 = inttoptr i64 %192 to i64*
  store i64 %379, i64* %381, align 8
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %380, i64 1
  %383 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %382 to i64
  br label %384

384:                                              ; preds = %378, %191
  %385 = phi i64 [ %192, %191 ], [ %383, %378 ]
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 2, i32 0
  %387 = load i8*, i8** %386, align 8
  %388 = icmp eq i8* %387, null
  br i1 %388, label %395, label %389

389:                                              ; preds = %384
  %390 = ptrtoint i8* %387 to i64
  %391 = inttoptr i64 %385 to %"class.base::internal::UncheckedObserverAdapter"*
  %392 = inttoptr i64 %385 to i64*
  store i64 %390, i64* %392, align 8
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %391, i64 1
  %394 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %393 to i64
  br label %395

395:                                              ; preds = %389, %384
  %396 = phi i64 [ %385, %384 ], [ %394, %389 ]
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 3, i32 0
  %398 = load i8*, i8** %397, align 8
  %399 = icmp eq i8* %398, null
  br i1 %399, label %406, label %400

400:                                              ; preds = %395
  %401 = ptrtoint i8* %398 to i64
  %402 = inttoptr i64 %396 to %"class.base::internal::UncheckedObserverAdapter"*
  %403 = inttoptr i64 %396 to i64*
  store i64 %401, i64* %403, align 8
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %402, i64 1
  %405 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %404 to i64
  br label %406

406:                                              ; preds = %400, %395
  %407 = phi i64 [ %396, %395 ], [ %405, %400 ]
  %408 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 4
  %409 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %408, %131
  br i1 %409, label %196, label %179
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #10
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #10
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #10
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #10
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %29
}

declare void @_ZNK3viz9SurfaceId8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.viz::SurfaceId"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK3viz12BeginFrameId15IsSequenceValidEv(%"struct.viz::BeginFrameId"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK3viz12BeginFrameId18IsNextInSequenceToERKS0_(%"struct.viz::BeginFrameId"*, %"struct.viz::BeginFrameId"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker28NotifyPendingSurfacesChangedEv(%"class.viz::DisplayDamageTracker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1
  %5 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !21
  %12 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !21
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #10
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10, !alias.scope !21
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %6, align 8
  %19 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #10
  store i64 0, i64* %7, align 8
  %20 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 1, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::ObserverList"* %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8
  %32 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %53, %49, %43, %30, %16
  %59 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<viz::DisplayDamageTracker::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #10
  %65 = bitcast %"class.base::ObserverList"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #10, !alias.scope !24
  %66 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  br label %67

67:                                               ; preds = %307, %58
  %68 = phi %"class.base::ObserverList"* [ %66, %58 ], [ %305, %307 ]
  %69 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = load i64, i64* %8, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %201, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %61, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %62, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList"* %68, %102
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %61, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %295

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %109, label %201, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode"**
  %115 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %114, align 8
  %116 = bitcast %"class.base::LinkedList"* %112 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode"* %115, %117
  br i1 %118, label %119, label %197

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %121, %123
  br i1 %124, label %133, label %125

125:                                              ; preds = %119, %130
  %126 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %130 ], [ %121, %119 ]
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 1
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %123
  br i1 %132, label %197, label %125

133:                                              ; preds = %125, %119
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %121, %119 ], [ %126, %125 ]
  %135 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %134 to i64
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %123
  br i1 %136, label %197, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %123
  br i1 %139, label %192, label %140

140:                                              ; preds = %137
  %141 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 -2, i32 0
  %142 = ptrtoint i8** %141 to i64
  %143 = sub i64 %142, %135
  %144 = lshr i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %140, %161
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %161 ], [ %138, %140 ]
  %150 = phi i64 [ %162, %161 ], [ %135, %140 ]
  %151 = phi i64 [ %164, %161 ], [ %146, %140 ]
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i8* %153 to i64
  %157 = inttoptr i64 %150 to %"class.base::internal::UncheckedObserverAdapter"*
  %158 = inttoptr i64 %150 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  br label %161

161:                                              ; preds = %155, %148
  %162 = phi i64 [ %150, %148 ], [ %160, %155 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %164 = add i64 %151, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %148, !llvm.loop !27

166:                                              ; preds = %161, %140
  %167 = phi i64 [ undef, %140 ], [ %162, %161 ]
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %140 ], [ %163, %161 ]
  %169 = phi i64 [ %135, %140 ], [ %162, %161 ]
  %170 = icmp ult i64 %143, 24
  br i1 %170, label %188, label %171

171:                                              ; preds = %166, %397
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %399, %397 ], [ %168, %166 ]
  %173 = phi i64 [ %398, %397 ], [ %169, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %173 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %171
  %184 = phi i64 [ %173, %171 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %375, label %369

188:                                              ; preds = %397, %166
  %189 = phi i64 [ %167, %166 ], [ %398, %397 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %192

192:                                              ; preds = %188, %137
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %137 ], [ %191, %188 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %137 ], [ %190, %188 ]
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %194, %193
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  store %"class.base::internal::UncheckedObserverAdapter"* %194, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %197

197:                                              ; preds = %130, %196, %192, %133, %110
  %198 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %199 = icmp eq %"class.base::ObserverList"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #10
  br label %201

201:                                              ; preds = %85, %108, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #10
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %294, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.base::internal::LinkNodeBase"** %206 to %"class.base::LinkNode"**
  %208 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %207, align 8
  %209 = bitcast %"class.base::LinkedList"* %205 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = icmp eq %"class.base::LinkNode"* %208, %210
  br i1 %211, label %212, label %290

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 1
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %212, %223
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %223 ], [ %214, %212 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %216
  br i1 %225, label %290, label %218

226:                                              ; preds = %218, %212
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %214, %212 ], [ %219, %218 ]
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %216
  br i1 %229, label %290, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %216
  br i1 %232, label %285, label %233

233:                                              ; preds = %230
  %234 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 -2, i32 0
  %235 = ptrtoint i8** %234 to i64
  %236 = sub i64 %235, %228
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %233, %254
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %254 ], [ %231, %233 ]
  %243 = phi i64 [ %255, %254 ], [ %228, %233 ]
  %244 = phi i64 [ %257, %254 ], [ %239, %233 ]
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = ptrtoint i8* %246 to i64
  %250 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %251 = inttoptr i64 %243 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %253 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %252 to i64
  br label %254

254:                                              ; preds = %248, %241
  %255 = phi i64 [ %243, %241 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %257 = add i64 %244, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %241, !llvm.loop !28

259:                                              ; preds = %254, %233
  %260 = phi i64 [ undef, %233 ], [ %255, %254 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %233 ], [ %256, %254 ]
  %262 = phi i64 [ %228, %233 ], [ %255, %254 ]
  %263 = icmp ult i64 %236, 24
  br i1 %263, label %281, label %264

264:                                              ; preds = %259, %365
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %367, %365 ], [ %261, %259 ]
  %266 = phi i64 [ %366, %365 ], [ %262, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi i64 [ %266, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %343, label %337

281:                                              ; preds = %365, %259
  %282 = phi i64 [ %260, %259 ], [ %366, %365 ]
  %283 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %285

285:                                              ; preds = %281, %230
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %230 ], [ %284, %281 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %230 ], [ %283, %281 ]
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %287, %286
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  store %"class.base::internal::UncheckedObserverAdapter"* %287, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %290

290:                                              ; preds = %223, %289, %285, %226, %204
  %291 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %292 = icmp eq %"class.base::ObserverList"* %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #10
  br label %294

294:                                              ; preds = %201, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret void

295:                                              ; preds = %101
  %296 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %296, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %297, i64 %104
  %299 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %298 to %"class.viz::DisplayDamageTracker::Observer"**
  %300 = load %"class.viz::DisplayDamageTracker::Observer"*, %"class.viz::DisplayDamageTracker::Observer"** %299, align 8
  %301 = bitcast %"class.viz::DisplayDamageTracker::Observer"* %300 to void (%"class.viz::DisplayDamageTracker::Observer"*)***
  %302 = load void (%"class.viz::DisplayDamageTracker::Observer"*)**, void (%"class.viz::DisplayDamageTracker::Observer"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.viz::DisplayDamageTracker::Observer"*)*, void (%"class.viz::DisplayDamageTracker::Observer"*)** %302, i64 4
  %304 = load void (%"class.viz::DisplayDamageTracker::Observer"*)*, void (%"class.viz::DisplayDamageTracker::Observer"*)** %303, align 8
  call void %304(%"class.viz::DisplayDamageTracker::Observer"* %300) #10
  %305 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %306 = icmp eq %"class.base::ObserverList"* %305, null
  br i1 %306, label %307, label %308

307:                                              ; preds = %332, %328, %295, %308, %322
  br label %67

308:                                              ; preds = %295
  %309 = load i64, i64* %7, align 8
  %310 = add i64 %309, 1
  store i64 %310, i64* %7, align 8
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 1
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.base::ObserverList"* %305 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sub i64 %313, %315
  %317 = ashr exact i64 %316, 3
  %318 = load i64, i64* %8, align 8
  %319 = icmp ult i64 %317, %318
  %320 = select i1 %319, i64 %317, i64 %318
  %321 = icmp ult i64 %310, %320
  br i1 %321, label %322, label %307

322:                                              ; preds = %308
  %323 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %324 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %305, i64 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %323, i64 %310, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = icmp eq i8* %326, null
  br i1 %327, label %328, label %307

328:                                              ; preds = %322, %332
  %329 = phi i64 [ %330, %332 ], [ %310, %322 ]
  %330 = add nuw i64 %329, 1
  store i64 %330, i64* %7, align 8
  %331 = icmp ult i64 %330, %320
  br i1 %331, label %332, label %307

332:                                              ; preds = %328
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %324, align 8
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %333, i64 %330, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %328, label %307

337:                                              ; preds = %276
  %338 = ptrtoint i8* %279 to i64
  %339 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %340 = inttoptr i64 %277 to i64*
  store i64 %338, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %339, i64 1
  %342 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %341 to i64
  br label %343

343:                                              ; preds = %337, %276
  %344 = phi i64 [ %277, %276 ], [ %342, %337 ]
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 2, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %343
  %349 = ptrtoint i8* %346 to i64
  %350 = inttoptr i64 %344 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %344 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %343
  %355 = phi i64 [ %344, %343 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 3, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 4
  %368 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %367, %216
  br i1 %368, label %281, label %264

369:                                              ; preds = %183
  %370 = ptrtoint i8* %186 to i64
  %371 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %372 = inttoptr i64 %184 to i64*
  store i64 %370, i64* %372, align 8
  %373 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %371, i64 1
  %374 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %373 to i64
  br label %375

375:                                              ; preds = %369, %183
  %376 = phi i64 [ %184, %183 ], [ %374, %369 ]
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 2, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %386, label %380

380:                                              ; preds = %375
  %381 = ptrtoint i8* %378 to i64
  %382 = inttoptr i64 %376 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %376 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %375
  %387 = phi i64 [ %376, %375 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 3, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 4
  %400 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %399, %123
  br i1 %400, label %188, label %171
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3viz20DisplayDamageTracker22SurfaceHasUnackedFrameERKNS_9SurfaceIdE(%"class.viz::DisplayDamageTracker"* nocapture readonly, %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 2
  %4 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %3, align 8
  %5 = tail call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %4, %"class.viz::SurfaceId"* dereferenceable(32) %1) #10
  %6 = icmp eq %"class.viz::Surface"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %13 = load i8, i8* %12, align 1, !range !3
  %14 = icmp eq i8 %13, 0
  br label %15

15:                                               ; preds = %11, %7, %2
  %16 = phi i1 [ false, %2 ], [ false, %7 ], [ %14, %11 ]
  ret i1 %16
}

declare %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz20DisplayDamageTracker18HasPendingSurfacesERKNS_14BeginFrameArgsE(%"class.viz::DisplayDamageTracker"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %6, align 8
  %8 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.236"* %7, %9
  br i1 %10, label %49, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.viz::BeginFrameArgs", %"struct.viz::BeginFrameArgs"* %1, i64 0, i32 3
  %13 = bitcast %"class.viz::DisplayDamageTracker"* %0 to i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)***
  br label %14

14:                                               ; preds = %11, %46
  %15 = phi %"struct.std::__1::pair.236"* [ %7, %11 ], [ %47, %46 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %15, i64 0, i32 1, i32 0, i32 2, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i64 %18, -1
  br i1 %19, label %20, label %46

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %15, i64 0, i32 1, i32 0, i32 3
  %22 = tail call zeroext i1 @_ZNK3viz12BeginFrameIdneERKS0_(%"struct.viz::BeginFrameId"* %21, %"struct.viz::BeginFrameId"* dereferenceable(16) %12) #10
  br i1 %22, label %46, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %15, i64 0, i32 1, i32 1, i32 0
  %25 = tail call zeroext i1 @_ZNK3viz12BeginFrameIdeqERKS0_(%"struct.viz::BeginFrameId"* %24, %"struct.viz::BeginFrameId"* dereferenceable(16) %12) #10
  br i1 %25, label %46, label %26

26:                                               ; preds = %23
  %27 = load i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)**, i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)*** %13, align 8
  %28 = getelementptr inbounds i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)*, i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)** %27, i64 11
  %29 = load i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)*, i1 (%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.viz::DisplayDamageTracker"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %16) #10
  br i1 %30, label %46, label %31

31:                                               ; preds = %26
  %32 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %33 = and i8 %32, 25
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %55, label %35, !prof !2

35:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  store i8 1, i8* %3, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #10
  call void @_ZNK3viz9SurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.viz::SurfaceId"* %16) #10
  %37 = call i64 @_ZN20trace_event_internal13AddTraceEventIbNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_SE_OT0_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* nonnull dereferenceable(1) %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %35, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  br label %55

46:                                               ; preds = %20, %14, %23, %26
  %47 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %15, i64 1
  %48 = icmp eq %"struct.std::__1::pair.236"* %47, %9
  br i1 %48, label %49, label %14

49:                                               ; preds = %46, %2
  %50 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %51 = and i8 %50, 25
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53, !prof !2

53:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 0, i8* %5, align 1
  %54 = call i64 @_ZN20trace_event_internal13AddTraceEventIbEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* nonnull dereferenceable(1) %5)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  br label %55

55:                                               ; preds = %45, %31, %53, %49
  %56 = phi i1 [ false, %49 ], [ false, %53 ], [ true, %31 ], [ true, %45 ]
  ret i1 %56
}

declare zeroext i1 @_ZNK3viz12BeginFrameIdneERKS0_(%"struct.viz::BeginFrameId"*, %"struct.viz::BeginFrameId"* dereferenceable(16)) local_unnamed_addr #5

declare zeroext i1 @_ZNK3viz12BeginFrameIdeqERKS0_(%"struct.viz::BeginFrameId"*, %"struct.viz::BeginFrameId"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIbNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_SE_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8* dereferenceable(1), i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false) #10
  store i8 2, i8* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 0
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 1
  store i8 7, i8* %20, align 1
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %22, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %24 = load i8, i8* %8, align 1, !range !3
  %25 = bitcast %"union.base::trace_event::TraceValue"* %23 to i8*
  store i8 %24, i8* %25, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %27 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %34 = select i1 %30, i8* %32, i8* %33
  %35 = bitcast %"union.base::trace_event::TraceValue"* %26 to i8**
  store i8* %34, i8** %35, align 8
  %36 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #10
  %37 = load i8, i8* %18, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %73, label %39

39:                                               ; preds = %11, %68
  %40 = phi i64 [ %69, %68 ], [ 0, %11 ]
  %41 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 8
  br i1 %43, label %44, label %55

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %40
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %47 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %46, align 8
  %48 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %47, null
  br i1 %48, label %68, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %47 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %51 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %51, i64 1
  %53 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %52, align 8
  call void %53(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %47) #10
  %54 = load i8, i8* %41, align 1
  br label %55

55:                                               ; preds = %49, %39
  %56 = phi i8 [ %42, %39 ], [ %54, %49 ]
  %57 = icmp eq i8 %56, 9
  br i1 %57, label %58, label %68

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %40
  %60 = bitcast %"union.base::trace_event::TraceValue"* %59 to %"class.protozero::HeapBuffered"**
  %61 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %60, align 8
  %62 = icmp eq %"class.protozero::HeapBuffered"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %61, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %64) #10
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %61, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %65) #10
  %66 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %61, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %66) #10
  %67 = bitcast %"class.protozero::HeapBuffered"* %61 to i8*
  call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %63, %58, %55, %44
  %69 = add nuw nsw i64 %40, 1
  %70 = load i8, i8* %18, align 8
  %71 = zext i8 %70 to i64
  %72 = icmp ult i64 %69, %71
  br i1 %72, label %39, label %73

73:                                               ; preds = %68, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  ret i64 %36
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIbEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = load i8, i8* %8, align 1, !range !3
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8*
  store i8 %20, i8* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #10
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #10
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #10
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker29OnSurfaceMarkedForDestructionERKNS_9SurfaceIdE(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0
  %4 = tail call { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS5_9allocatorISC_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSC_EESL_EERKT_(%"class.base::internal::flat_tree.233"* %3, %"class.viz::SurfaceId"* dereferenceable(32) %1) #10
  %5 = extractvalue { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } %4, 0
  %6 = extractvalue { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } %4, 1
  %7 = icmp eq %"struct.std::__1::pair.236"* %5, %6
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %9, align 8
  %11 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %12 = icmp eq %"struct.std::__1::pair.236"* %5, %10
  br i1 %12, label %36, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %5, i64 1
  %15 = icmp eq %"struct.std::__1::pair.236"* %14, %10
  br i1 %15, label %34, label %16

16:                                               ; preds = %13, %16
  %17 = phi %"struct.std::__1::pair.236"* [ %32, %16 ], [ %5, %13 ]
  %18 = phi %"struct.std::__1::pair.236"* [ %31, %16 ], [ %14, %13 ]
  %19 = bitcast %"struct.std::__1::pair.236"* %17 to i8*
  %20 = bitcast %"struct.std::__1::pair.236"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false) #10
  %21 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %17, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %18, i64 0, i32 1, i32 0
  %23 = tail call dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZN3viz14BeginFrameArgsaSERKS0_(%"struct.viz::BeginFrameArgs"* %21, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %22) #10
  %24 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %17, i64 0, i32 1, i32 1, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %18, i64 0, i32 1, i32 1, i32 0
  %26 = tail call dereferenceable(16) %"struct.viz::BeginFrameId"* @_ZN3viz12BeginFrameIdaSERKS0_(%"struct.viz::BeginFrameId"* %24, %"struct.viz::BeginFrameId"* dereferenceable(16) %25) #10
  %27 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %17, i64 0, i32 1, i32 1, i32 1
  %28 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %18, i64 0, i32 1, i32 1, i32 1
  %29 = bitcast i64* %27 to i8*
  %30 = bitcast i64* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 9, i1 false) #10
  %31 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %18, i64 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %17, i64 1
  %33 = icmp eq %"struct.std::__1::pair.236"* %31, %10
  br i1 %33, label %34, label %16

34:                                               ; preds = %16, %13
  %35 = phi %"struct.std::__1::pair.236"* [ %5, %13 ], [ %32, %16 ]
  store %"struct.std::__1::pair.236"* %35, %"struct.std::__1::pair.236"** %11, align 8
  tail call void @_ZN3viz20DisplayDamageTracker28NotifyPendingSurfacesChangedEv(%"class.viz::DisplayDamageTracker"* %0)
  br label %36

36:                                               ; preds = %2, %8, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz20DisplayDamageTracker16OnSurfaceDamagedERKNS_9SurfaceIdERKNS_13BeginFrameAckE(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::BeginFrameAck"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.viz::BeginFrameAck", %"struct.viz::BeginFrameAck"* %2, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %75, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 3
  %9 = load %"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceAggregator"** %8, align 8
  %10 = tail call zeroext i1 @_ZN3viz17SurfaceAggregator43NotifySurfaceDamageAndCheckForDisplayDamageERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"* %9, %"class.viz::SurfaceId"* dereferenceable(32) %1) #10
  %11 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %48

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %48

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %48

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %48

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  br i1 %39, label %40, label %48

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp ne i64 %42, %44
  %46 = xor i1 %10, true
  %47 = and i1 %45, %46
  br i1 %47, label %75, label %49

48:                                               ; preds = %7, %34, %22, %28, %16
  br i1 %10, label %49, label %75

49:                                               ; preds = %48, %40
  %50 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 7, i32 0, i32 1
  %51 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %50, align 8
  %52 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %53 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %52, align 8
  %54 = icmp eq %"class.viz::SurfaceId"* %51, %53
  br i1 %54, label %73, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 0, i32 0
  store i32 %12, i32* %56, align 4
  %57 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %57, align 4
  %60 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 1, i32 1
  %64 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %63, align 4
  %66 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 0, i32 1, i32 2
  %67 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %68 = bitcast %"class.base::UnguessableToken"* %66 to i8*
  %69 = bitcast %"class.base::UnguessableToken"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #10
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %51, i64 1
  %71 = ptrtoint %"class.viz::SurfaceId"* %70 to i64
  %72 = bitcast %"class.viz::SurfaceId"** %50 to i64*
  store i64 %71, i64* %72, align 8
  br label %75

73:                                               ; preds = %49
  %74 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 7
  tail call void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.33"* %74, %"class.viz::SurfaceId"* dereferenceable(32) %1) #10
  br label %75

75:                                               ; preds = %48, %40, %73, %55, %3
  %76 = phi i8 [ 0, %48 ], [ 0, %3 ], [ 1, %55 ], [ 1, %73 ], [ 0, %40 ]
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %78, %80
  br i1 %81, label %82, label %117

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %88, label %117

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %94, label %117

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %117

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %102, %104
  br i1 %105, label %106, label %117

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8, i32 1, i32 2, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %108, %110
  br i1 %111, label %112, label %117

112:                                              ; preds = %106
  %113 = bitcast %"class.viz::DisplayDamageTracker"* %0 to void (%"class.viz::DisplayDamageTracker"*)***
  %114 = load void (%"class.viz::DisplayDamageTracker"*)**, void (%"class.viz::DisplayDamageTracker"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.viz::DisplayDamageTracker"*)*, void (%"class.viz::DisplayDamageTracker"*)** %114, i64 12
  %116 = load void (%"class.viz::DisplayDamageTracker"*)*, void (%"class.viz::DisplayDamageTracker"*)** %115, align 8
  tail call void %116(%"class.viz::DisplayDamageTracker"* %0) #10
  br label %117

117:                                              ; preds = %75, %100, %88, %94, %82, %112, %106
  %118 = icmp ne i8 %76, 0
  tail call void @_ZN3viz20DisplayDamageTracker20ProcessSurfaceDamageERKNS_9SurfaceIdERKNS_13BeginFrameAckEb(%"class.viz::DisplayDamageTracker"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"struct.viz::BeginFrameAck"* dereferenceable(32) %2, i1 zeroext %118)
  ret i1 %118
}

declare zeroext i1 @_ZN3viz17SurfaceAggregator43NotifySurfaceDamageAndCheckForDisplayDamageERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker18OnSurfaceDestroyedERKNS_9SurfaceIdE(%"class.viz::DisplayDamageTracker"* nocapture readonly, %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !2

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 3
  %18 = load %"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceAggregator"** %17, align 8
  call void @_ZN3viz17SurfaceAggregator16ReleaseResourcesERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"* %18, %"class.viz::SurfaceId"* dereferenceable(32) %1) #10
  %19 = icmp eq i8* %16, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = load i8, i8* %16, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #10
  br label %24

24:                                               ; preds = %13, %20, %23
  ret void
}

declare void @_ZN3viz17SurfaceAggregator16ReleaseResourcesERKNS_9SurfaceIdE(%"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker23OnSurfaceDamageExpectedERKNS_9SurfaceIdERKNS_14BeginFrameArgsE(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::BeginFrameArgs"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %19, label %8, !prof !2

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  call void @_ZNK3viz9SurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.viz::SurfaceId"* %1) #10
  %10 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %8, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  br label %19

19:                                               ; preds = %3, %18
  %20 = phi i64 [ -6148914691236517206, %3 ], [ %10, %18 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), %18 ]
  %22 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %18 ]
  %23 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 6
  %24 = call dereferenceable(96) %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* @_ZN4base8flat_mapIN3viz9SurfaceIdENS1_20DisplayDamageTracker22SurfaceBeginFrameStateENSt3__14lessIvEENS5_6vectorINS5_4pairIS2_S4_EENS5_9allocatorISA_EEEEEixERKS2_(%"class.base::flat_map.232"* %23, %"class.viz::SurfaceId"* dereferenceable(32) %1)
  %25 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %24, i64 0, i32 0
  %26 = call dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZN3viz14BeginFrameArgsaSERKS0_(%"struct.viz::BeginFrameArgs"* %25, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %2) #10
  call void @_ZN3viz20DisplayDamageTracker28NotifyPendingSurfacesChangedEv(%"class.viz::DisplayDamageTracker"* %0)
  %27 = icmp eq i8* %22, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %19
  %29 = load i8, i8* %22, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %20) #10
  br label %32

32:                                               ; preds = %19, %28, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* @_ZN4base8flat_mapIN3viz9SurfaceIdENS1_20DisplayDamageTracker22SurfaceBeginFrameStateENSt3__14lessIvEENS5_6vectorINS5_4pairIS2_S4_EENS5_9allocatorISA_EEEEEixERKS2_(%"class.base::flat_map.232"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", align 8
  %4 = getelementptr inbounds %"class.base::flat_map.232", %"class.base::flat_map.232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map.232", %"class.base::flat_map.232"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.236"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.236"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.236"*
  br i1 %11, label %73, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %10, 7
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = load i64, i64* %24, align 8
  br label %27

27:                                               ; preds = %69, %13
  %28 = phi %"struct.std::__1::pair.236"* [ %5, %13 ], [ %71, %69 ]
  %29 = phi i64 [ %14, %13 ], [ %70, %69 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %28, i64 %30
  %32 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %28, i64 %30, i32 0, i32 0, i32 1
  %34 = load i32, i32* %32, align 4
  %35 = icmp ult i32 %34, %17
  br i1 %35, label %65, label %36

36:                                               ; preds = %27
  %37 = icmp ult i32 %17, %34
  br i1 %37, label %69, label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %33, align 4
  %40 = icmp ult i32 %39, %18
  br i1 %40, label %65, label %41

41:                                               ; preds = %38
  %42 = icmp ult i32 %18, %39
  br i1 %42, label %69, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %28, i64 %30, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %28, i64 %30, i32 0, i32 1, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = icmp ult i32 %46, %21
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = icmp ult i32 %21, %46
  br i1 %49, label %69, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp ult i32 %51, %22
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = icmp ult i32 %22, %51
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 1
  %58 = load i64, i64* %56, align 8
  %59 = icmp ult i64 %58, %25
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = icmp ult i64 %25, %58
  br i1 %61, label %69, label %62

62:                                               ; preds = %60
  %63 = load i64, i64* %57, align 8
  %64 = icmp ult i64 %63, %26
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %55, %50, %43, %38, %27
  %66 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %31, i64 1
  %67 = xor i64 %30, -1
  %68 = add i64 %29, %67
  br label %69

69:                                               ; preds = %65, %62, %60, %53, %48, %41, %36
  %70 = phi i64 [ %68, %65 ], [ %30, %62 ], [ %30, %41 ], [ %30, %60 ], [ %30, %53 ], [ %30, %48 ], [ %30, %36 ]
  %71 = phi %"struct.std::__1::pair.236"* [ %66, %65 ], [ %28, %62 ], [ %28, %41 ], [ %28, %60 ], [ %28, %53 ], [ %28, %48 ], [ %28, %36 ]
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %27

73:                                               ; preds = %69, %2
  %74 = phi %"struct.std::__1::pair.236"* [ %5, %2 ], [ %71, %69 ]
  %75 = icmp eq %"struct.std::__1::pair.236"* %74, %12
  br i1 %75, label %122, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %74, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %77, align 4
  %82 = load i32, i32* %79, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %122, label %84

84:                                               ; preds = %76
  %85 = icmp ult i32 %82, %81
  br i1 %85, label %130, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %78, align 4
  %88 = load i32, i32* %80, align 4
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %122, label %90

90:                                               ; preds = %86
  %91 = icmp ult i32 %88, %87
  br i1 %91, label %130, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %74, i64 0, i32 0, i32 1, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %74, i64 0, i32 0, i32 1, i32 1
  %97 = load i32, i32* %93, align 4
  %98 = load i32, i32* %95, align 4
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %122, label %100

100:                                              ; preds = %92
  %101 = icmp ult i32 %98, %97
  br i1 %101, label %130, label %102

102:                                              ; preds = %100
  %103 = load i32, i32* %94, align 4
  %104 = load i32, i32* %96, align 4
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %122, label %106

106:                                              ; preds = %102
  %107 = icmp ult i32 %104, %103
  br i1 %107, label %130, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %113 = load i64, i64* %109, align 8
  %114 = load i64, i64* %111, align 8
  %115 = icmp ult i64 %113, %114
  br i1 %115, label %122, label %116

116:                                              ; preds = %108
  %117 = icmp ult i64 %114, %113
  br i1 %117, label %130, label %118

118:                                              ; preds = %116
  %119 = load i64, i64* %110, align 8
  %120 = load i64, i64* %112, align 8
  %121 = icmp ult i64 %119, %120
  br i1 %121, label %122, label %130

122:                                              ; preds = %76, %92, %102, %108, %86, %73, %118
  %123 = bitcast %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %123) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 96, i1 false)
  %124 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 0
  call void @_ZN3viz14BeginFrameArgsC1Ev(%"struct.viz::BeginFrameArgs"* nonnull %124) #10
  %125 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 1, i32 0
  call void @_ZN3viz12BeginFrameIdC1Ev(%"struct.viz::BeginFrameId"* %125) #10
  %126 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 1, i32 1
  store i64 -1, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 1, i32 2
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.base::flat_map.232", %"class.base::flat_map.232"* %0, i64 0, i32 0, i32 0
  %129 = call %"struct.std::__1::pair.236"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE7emplaceIJRKS3_S5_EEENS_11__wrap_iterIPS6_EENSD_IPKS6_EEDpOT_(%"class.std::__1::vector.234"* %128, %"struct.std::__1::pair.236"* %74, %"class.viz::SurfaceId"* dereferenceable(32) %1, %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* nonnull dereferenceable(96) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %123) #10
  br label %130

130:                                              ; preds = %84, %100, %106, %116, %90, %122, %118
  %131 = phi %"struct.std::__1::pair.236"* [ %129, %122 ], [ %74, %118 ], [ %74, %90 ], [ %74, %116 ], [ %74, %106 ], [ %74, %100 ], [ %74, %84 ]
  %132 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %131, i64 0, i32 1
  ret %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %132
}

declare dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZN3viz14BeginFrameArgsaSERKS0_(%"struct.viz::BeginFrameArgs"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker22UpdateRootFrameMissingEv(%"class.viz::DisplayDamageTracker"*) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 2
  %4 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 8
  %6 = tail call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %4, %"class.viz::SurfaceId"* dereferenceable(32) %5) #10
  %7 = icmp eq %"class.viz::Surface"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = xor i8 %10, 1
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i8 [ 1, %1 ], [ %11, %8 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2)
  store i8 %13, i8* %2, align 1
  %14 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %15 = and i8 %14, 25
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17, !prof !2

17:                                               ; preds = %12
  %18 = call i64 @_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* nonnull dereferenceable(1) %2) #10
  %19 = load i8, i8* %2, align 1, !range !3
  br label %20

20:                                               ; preds = %17, %12
  %21 = phi i8 [ %13, %12 ], [ %19, %17 ]
  %22 = phi i64 [ -6148914691236517206, %12 ], [ %18, %17 ]
  %23 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %12 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), %17 ]
  %24 = phi i8* [ null, %12 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %17 ]
  %25 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 4
  %26 = load i8, i8* %25, align 8, !range !3
  %27 = icmp eq i8 %26, %21
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  store i8 %21, i8* %25, align 8
  %29 = icmp ne i8 %21, 0
  call void @_ZN3viz20DisplayDamageTracker22NotifyRootFrameMissingEb(%"class.viz::DisplayDamageTracker"* %0, i1 zeroext %29) #10
  br label %30

30:                                               ; preds = %28, %20
  %31 = icmp eq i8* %24, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = load i8, i8* %24, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %24, i8* %23, i64 %22) #10
  br label %36

36:                                               ; preds = %30, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DisplayDamageTracker16RunDrawCallbacksEv(%"class.viz::DisplayDamageTracker"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 7, i32 0, i32 1
  %6 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %5, align 8
  %7 = icmp eq %"class.viz::SurfaceId"* %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = ptrtoint %"class.viz::SurfaceId"* %4 to i64
  br label %15

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 2
  br label %27

12:                                               ; preds = %33
  %13 = bitcast %"class.std::__1::vector.33"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi i64 [ %14, %12 ], [ %9, %8 ]
  %17 = bitcast %"class.viz::SurfaceId"** %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 3
  %19 = load %"class.viz::SurfaceAggregator"*, %"class.viz::SurfaceAggregator"** %18, align 8
  %20 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %19, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::pair.152"*, %"struct.std::__1::pair.152"** %20, align 8
  %22 = getelementptr inbounds %"class.viz::SurfaceAggregator", %"class.viz::SurfaceAggregator"* %19, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1
  %23 = load %"struct.std::__1::pair.152"*, %"struct.std::__1::pair.152"** %22, align 8
  %24 = icmp eq %"struct.std::__1::pair.152"* %21, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.viz::DisplayDamageTracker", %"class.viz::DisplayDamageTracker"* %0, i64 0, i32 2
  br label %37

27:                                               ; preds = %10, %33
  %28 = phi %"class.viz::SurfaceId"* [ %4, %10 ], [ %34, %33 ]
  %29 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %11, align 8
  %30 = tail call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %29, %"class.viz::SurfaceId"* dereferenceable(32) %28) #10
  %31 = icmp eq %"class.viz::Surface"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN3viz7Surface15SendAckToClientEv(%"class.viz::Surface"* nonnull %30) #10
  br label %33

33:                                               ; preds = %27, %32
  %34 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %28, i64 1
  %35 = icmp eq %"class.viz::SurfaceId"* %34, %6
  br i1 %35, label %12, label %27

36:                                               ; preds = %44, %15
  ret void

37:                                               ; preds = %25, %44
  %38 = phi %"struct.std::__1::pair.152"* [ %21, %25 ], [ %45, %44 ]
  %39 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %26, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.152", %"struct.std::__1::pair.152"* %38, i64 0, i32 0
  %41 = tail call %"class.viz::Surface"* @_ZNK3viz14SurfaceManager15GetSurfaceForIdERKNS_9SurfaceIdE(%"class.viz::SurfaceManager"* %39, %"class.viz::SurfaceId"* dereferenceable(32) %40) #10
  %42 = icmp eq %"class.viz::Surface"* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  tail call void @_ZN3viz7Surface15SendAckToClientEv(%"class.viz::Surface"* nonnull %41) #10
  br label %44

44:                                               ; preds = %37, %43
  %45 = getelementptr inbounds %"struct.std::__1::pair.152", %"struct.std::__1::pair.152"* %38, i64 1
  %46 = icmp eq %"struct.std::__1::pair.152"* %45, %23
  br i1 %46, label %36, label %37
}

declare void @_ZN3viz7Surface15SendAckToClientEv(%"class.viz::Surface"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz20DisplayDamageTracker24OnFirstSurfaceActivationERKNS_11SurfaceInfoE(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceInfo"* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz20DisplayDamageTracker18OnSurfaceActivatedERKNS_9SurfaceIdE(%"class.viz::DisplayDamageTracker"*, %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver20OnSurfaceWillBeDrawnEPNS_7SurfaceE(%"class.viz::SurfaceObserver"*, %"class.viz::Surface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver23OnAddedSurfaceReferenceERKNS_9SurfaceIdES3_(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver25OnRemovedSurfaceReferenceERKNS_9SurfaceIdES3_(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #5

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #5

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #5

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #5

declare void @_ZN3viz12BeginFrameIdC1Ev(%"struct.viz::BeginFrameId"*) unnamed_addr #5

declare dereferenceable(16) %"struct.viz::BeginFrameId"* @_ZN3viz12BeginFrameIdaSERKS0_(%"struct.viz::BeginFrameId"*, %"struct.viz::BeginFrameId"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_NS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS5_9allocatorISC_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSC_EESL_EERKT_(%"class.base::internal::flat_tree.233"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.233", %"class.base::internal::flat_tree.233"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.233", %"class.base::internal::flat_tree.233"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.236"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.236"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.236"*
  br i1 %10, label %74, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 7
  %14 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 4
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = load i64, i64* %22, align 8
  %25 = load i64, i64* %23, align 8
  br label %26

26:                                               ; preds = %68, %12
  %27 = phi %"struct.std::__1::pair.236"* [ %4, %12 ], [ %70, %68 ]
  %28 = phi i64 [ %13, %12 ], [ %69, %68 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 %29, i32 0, i32 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, %16
  br i1 %34, label %64, label %35

35:                                               ; preds = %26
  %36 = icmp ult i32 %16, %33
  br i1 %36, label %68, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, %17
  br i1 %39, label %64, label %40

40:                                               ; preds = %37
  %41 = icmp ult i32 %17, %38
  br i1 %41, label %68, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 %29, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 %29, i32 0, i32 1, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = icmp ult i32 %45, %20
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = icmp ult i32 %20, %45
  br i1 %48, label %68, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %44, align 4
  %51 = icmp ult i32 %50, %21
  br i1 %51, label %64, label %52

52:                                               ; preds = %49
  %53 = icmp ult i32 %21, %50
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 1
  %57 = load i64, i64* %55, align 8
  %58 = icmp ult i64 %57, %24
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = icmp ult i64 %24, %57
  br i1 %60, label %68, label %61

61:                                               ; preds = %59
  %62 = load i64, i64* %56, align 8
  %63 = icmp ult i64 %62, %25
  br i1 %63, label %64, label %68

64:                                               ; preds = %61, %54, %49, %42, %37, %26
  %65 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %30, i64 1
  %66 = xor i64 %29, -1
  %67 = add i64 %28, %66
  br label %68

68:                                               ; preds = %64, %61, %59, %52, %47, %40, %35
  %69 = phi i64 [ %67, %64 ], [ %29, %61 ], [ %29, %40 ], [ %29, %59 ], [ %29, %52 ], [ %29, %47 ], [ %29, %35 ]
  %70 = phi %"struct.std::__1::pair.236"* [ %65, %64 ], [ %27, %61 ], [ %27, %40 ], [ %27, %59 ], [ %27, %52 ], [ %27, %47 ], [ %27, %35 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %26

72:                                               ; preds = %68
  %73 = ptrtoint %"struct.std::__1::pair.236"* %70 to i64
  br label %74

74:                                               ; preds = %72, %2
  %75 = phi i64 [ %73, %72 ], [ %8, %2 ]
  %76 = phi %"struct.std::__1::pair.236"* [ %70, %72 ], [ %4, %2 ]
  %77 = icmp eq %"struct.std::__1::pair.236"* %76, %11
  br i1 %77, label %127, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %79, align 4
  %84 = load i32, i32* %81, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %127, label %86

86:                                               ; preds = %78
  %87 = icmp ult i32 %84, %83
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %80, align 4
  %90 = load i32, i32* %82, align 4
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %127, label %92

92:                                               ; preds = %88
  %93 = icmp ult i32 %90, %89
  br i1 %93, label %124, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 1, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 1, i32 1
  %99 = load i32, i32* %95, align 4
  %100 = load i32, i32* %97, align 4
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %127, label %102

102:                                              ; preds = %94
  %103 = icmp ult i32 %100, %99
  br i1 %103, label %124, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %98, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %127, label %108

108:                                              ; preds = %104
  %109 = icmp ult i32 %106, %105
  br i1 %109, label %124, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %113 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %115 = load i64, i64* %111, align 8
  %116 = load i64, i64* %113, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %127, label %118

118:                                              ; preds = %110
  %119 = icmp ult i64 %116, %115
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %112, align 8
  %122 = load i64, i64* %114, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %127, label %124

124:                                              ; preds = %86, %102, %108, %118, %92, %120
  %125 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 1
  %126 = ptrtoint %"struct.std::__1::pair.236"* %125 to i64
  br label %127

127:                                              ; preds = %78, %94, %104, %110, %88, %120, %74, %124
  %128 = phi i64 [ %126, %124 ], [ %75, %74 ], [ %75, %120 ], [ %75, %88 ], [ %75, %110 ], [ %75, %104 ], [ %75, %94 ], [ %75, %78 ]
  %129 = insertvalue { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } undef, %"struct.std::__1::pair.236"* %76, 0
  %130 = inttoptr i64 %128 to %"struct.std::__1::pair.236"*
  %131 = insertvalue { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } %129, %"struct.std::__1::pair.236"* %130, 1
  ret { %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"* } %131
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3viz9SurfaceIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.33"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.viz::SurfaceId"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.viz::SurfaceId"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.viz::SurfaceId"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.viz::SurfaceId"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9
  %38 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %35
  %39 = ptrtoint %"class.viz::SurfaceId"* %38 to i64
  %40 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %40, align 4
  %43 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 0, i32 1
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %43, align 4
  %46 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 0
  %47 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %46, align 8
  %49 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 1
  %50 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %36, i64 %9, i32 1, i32 2
  %53 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %54 = bitcast %"class.base::UnguessableToken"* %52 to i8*
  %55 = bitcast %"class.base::UnguessableToken"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #10
  %56 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 1
  %57 = ptrtoint %"class.viz::SurfaceId"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %58, align 8
  %60 = ptrtoint %"class.viz::SurfaceId"* %59 to i64
  %61 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %3, align 8
  %62 = icmp eq %"class.viz::SurfaceId"* %61, %59
  br i1 %62, label %134, label %63

63:                                               ; preds = %34
  %64 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 0, i32 0
  %65 = ptrtoint i32* %64 to i64
  %66 = sub i64 %65, %60
  %67 = and i64 %66, 32
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %88

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1
  %71 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 0, i32 0
  %72 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %70, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 0, i32 1
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 1
  %81 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1, i32 1, i32 2
  %84 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %61, i64 -1, i32 1, i32 2
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  %86 = bitcast %"class.base::UnguessableToken"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #10
  %87 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %37, i64 -1
  br label %88

88:                                               ; preds = %69, %63
  %89 = phi %"class.viz::SurfaceId"* [ undef, %63 ], [ %87, %69 ]
  %90 = phi %"class.viz::SurfaceId"* [ %37, %63 ], [ %87, %69 ]
  %91 = phi %"class.viz::SurfaceId"* [ %61, %63 ], [ %70, %69 ]
  %92 = icmp ult i64 %66, 32
  br i1 %92, label %131, label %93

93:                                               ; preds = %88, %93
  %94 = phi %"class.viz::SurfaceId"* [ %129, %93 ], [ %90, %88 ]
  %95 = phi %"class.viz::SurfaceId"* [ %112, %93 ], [ %91, %88 ]
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 0, i32 0
  %97 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 0, i32 1
  %100 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 0
  %103 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 0
  %104 = load i32, i32* %103, align 8
  store i32 %104, i32* %102, align 8
  %105 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 1
  %106 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 1
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -1, i32 1, i32 2
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -1, i32 1, i32 2
  %110 = bitcast %"class.base::UnguessableToken"* %108 to i8*
  %111 = bitcast %"class.base::UnguessableToken"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #10
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2
  %113 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 0, i32 0
  %114 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %112, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %113, align 4
  %116 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 0, i32 1
  %117 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %116, align 4
  %119 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 0
  %120 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 0
  %121 = load i32, i32* %120, align 8
  store i32 %121, i32* %119, align 8
  %122 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 1
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 1
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2, i32 1, i32 2
  %126 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %95, i64 -2, i32 1, i32 2
  %127 = bitcast %"class.base::UnguessableToken"* %125 to i8*
  %128 = bitcast %"class.base::UnguessableToken"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 16, i1 false) #10
  %129 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %94, i64 -2
  %130 = icmp eq %"class.viz::SurfaceId"* %112, %59
  br i1 %130, label %131, label %93

131:                                              ; preds = %93, %88
  %132 = phi %"class.viz::SurfaceId"* [ %89, %88 ], [ %129, %93 ]
  %133 = load i64, i64* %6, align 8
  br label %134

134:                                              ; preds = %34, %131
  %135 = phi %"class.viz::SurfaceId"* [ %132, %131 ], [ %37, %34 ]
  %136 = phi i64 [ %133, %131 ], [ %60, %34 ]
  %137 = ptrtoint %"class.viz::SurfaceId"* %135 to i64
  store i64 %137, i64* %6, align 8
  store i64 %57, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  %140 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %140) #12
  br label %141

141:                                              ; preds = %134, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.236"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE7emplaceIJRKS3_S5_EEENS_11__wrap_iterIPS6_EENSD_IPKS6_EEDpOT_(%"class.std::__1::vector.234"*, %"struct.std::__1::pair.236"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::__temp_value", align 16
  %6 = alloca %"struct.std::__1::__split_buffer.508", align 8
  %7 = ptrtoint %"struct.std::__1::pair.236"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.236"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.236"* %11 to i64
  br i1 %12, label %14, label %74

14:                                               ; preds = %4
  %15 = icmp eq %"struct.std::__1::pair.236"* %9, %1
  br i1 %15, label %16, label %44

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %23, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %31 = bitcast %"class.base::UnguessableToken"* %29 to i8*
  %32 = bitcast %"class.base::UnguessableToken"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false) #10
  %33 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 0
  tail call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* %33, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %34) #10
  %35 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 1, i32 1, i32 0
  %36 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 1, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %35, %"struct.viz::BeginFrameId"* dereferenceable(16) %36) #10
  %37 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 1, i32 1, i32 1
  %38 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 1, i32 1
  %39 = bitcast i64* %37 to i8*
  %40 = bitcast i64* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 9, i1 false) #10
  %41 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 1
  %42 = ptrtoint %"struct.std::__1::pair.236"* %41 to i64
  %43 = bitcast %"struct.std::__1::pair.236"** %8 to i64*
  store i64 %42, i64* %43, align 8
  br label %141

44:                                               ; preds = %14
  %45 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 -86, i64 96, i1 false)
  %47 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 2
  %48 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 1
  %49 = bitcast %"class.std::__1::allocator.240"** %48 to %"class.std::__1::__compressed_pair.237"**
  store %"class.std::__1::__compressed_pair.237"* %47, %"class.std::__1::__compressed_pair.237"** %49, align 16
  %50 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 4
  %52 = bitcast %"struct.std::__1::__temp_value"* %5 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %52, align 16
  %53 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 16
  %54 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %55 = bitcast %"class.base::UnguessableToken"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %53, i8* align 8 %55, i64 16, i1 false) #10
  %56 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 32
  %57 = bitcast i8* %56 to %"struct.viz::BeginFrameArgs"*
  %58 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 0
  call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* %57, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %58) #10
  %59 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 96
  %60 = bitcast i8* %59 to %"struct.viz::BeginFrameId"*
  %61 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 1, i32 0
  call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %60, %"struct.viz::BeginFrameId"* dereferenceable(16) %61) #10
  %62 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 112
  %63 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %3, i64 0, i32 1, i32 1
  %64 = bitcast i64* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %62, i8* align 8 %64, i64 9, i1 false) #10
  %65 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %8, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 1
  call void @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE12__move_rangeEPS6_SA_SA_(%"class.std::__1::vector.234"* %0, %"struct.std::__1::pair.236"* %1, %"struct.std::__1::pair.236"* %65, %"struct.std::__1::pair.236"* %66)
  %67 = bitcast %"struct.std::__1::pair.236"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 16 %45, i64 32, i1 false) #10
  %68 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 1, i32 0
  %69 = call dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZN3viz14BeginFrameArgsaSERKS0_(%"struct.viz::BeginFrameArgs"* %68, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %57) #10
  %70 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 1, i32 1, i32 0
  %71 = call dereferenceable(16) %"struct.viz::BeginFrameId"* @_ZN3viz12BeginFrameIdaSERKS0_(%"struct.viz::BeginFrameId"* %70, %"struct.viz::BeginFrameId"* dereferenceable(16) %60) #10
  %72 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 0, i32 1, i32 1, i32 1
  %73 = bitcast i64* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 16 %62, i64 9, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %45) #10
  br label %141

74:                                               ; preds = %4
  %75 = ptrtoint %"struct.std::__1::pair.236"* %9 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 2
  %77 = bitcast %"struct.std::__1::__split_buffer.508"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #10
  %78 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %6, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %6, i64 0, i32 1
  %80 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %6, i64 0, i32 2
  %81 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %6, i64 0, i32 3, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %6, i64 0, i32 3, i32 1, i32 0
  %83 = bitcast %"class.std::__1::vector.234"* %0 to i64*
  %84 = bitcast %"struct.std::__1::__split_buffer.508"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 40, i1 false)
  %85 = load i64, i64* %83, align 8
  %86 = sub i64 %75, %85
  %87 = ashr exact i64 %86, 7
  %88 = add nsw i64 %87, 1
  %89 = icmp ugt i64 %88, 144115188075855871
  br i1 %89, label %90, label %92

90:                                               ; preds = %74
  %91 = bitcast %"class.std::__1::vector.234"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %91) #11
  unreachable

92:                                               ; preds = %74
  %93 = sub i64 %13, %85
  %94 = ashr exact i64 %93, 7
  %95 = icmp ult i64 %94, 72057594037927935
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = sub i64 %7, %85
  %98 = ashr exact i64 %97, 7
  store %"struct.std::__1::pair.236"* null, %"struct.std::__1::pair.236"** %81, align 8
  %99 = bitcast %"class.std::__1::allocator.240"** %82 to %"class.std::__1::__compressed_pair.237"**
  store %"class.std::__1::__compressed_pair.237"* %76, %"class.std::__1::__compressed_pair.237"** %99, align 8
  br label %111

100:                                              ; preds = %92
  %101 = ashr exact i64 %93, 6
  %102 = icmp ult i64 %101, %88
  %103 = select i1 %102, i64 %88, i64 %101
  %104 = sub i64 %7, %85
  %105 = ashr exact i64 %104, 7
  store %"struct.std::__1::pair.236"* null, %"struct.std::__1::pair.236"** %81, align 8
  %106 = bitcast %"class.std::__1::allocator.240"** %82 to %"class.std::__1::__compressed_pair.237"**
  store %"class.std::__1::__compressed_pair.237"* %76, %"class.std::__1::__compressed_pair.237"** %106, align 8
  %107 = icmp eq i64 %103, 0
  br i1 %107, label %117, label %108

108:                                              ; preds = %100
  %109 = icmp ugt i64 %103, 144115188075855871
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  tail call void @abort() #11
  unreachable

111:                                              ; preds = %96, %108
  %112 = phi i64 [ 144115188075855871, %96 ], [ %103, %108 ]
  %113 = phi i64 [ %98, %96 ], [ %105, %108 ]
  %114 = shl i64 %112, 7
  %115 = tail call i8* @_Znwm(i64 %114) #12
  %116 = bitcast i8* %115 to %"struct.std::__1::pair.236"*
  br label %117

117:                                              ; preds = %100, %111
  %118 = phi i64 [ %113, %111 ], [ %105, %100 ]
  %119 = phi i64 [ %112, %111 ], [ 0, %100 ]
  %120 = phi %"struct.std::__1::pair.236"* [ %116, %111 ], [ null, %100 ]
  store %"struct.std::__1::pair.236"* %120, %"struct.std::__1::pair.236"** %78, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %120, i64 %118
  store %"struct.std::__1::pair.236"* %121, %"struct.std::__1::pair.236"** %80, align 8
  store %"struct.std::__1::pair.236"* %121, %"struct.std::__1::pair.236"** %79, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %120, i64 %119
  store %"struct.std::__1::pair.236"* %122, %"struct.std::__1::pair.236"** %81, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEERNS_9allocatorIS6_EEE12emplace_backIJRKS3_S5_EEEvDpOT_(%"struct.std::__1::__split_buffer.508"* nonnull %6, %"class.viz::SurfaceId"* dereferenceable(32) %2, %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* dereferenceable(96) %3)
  %123 = call %"struct.std::__1::pair.236"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EEPS6_(%"class.std::__1::vector.234"* %0, %"struct.std::__1::__split_buffer.508"* nonnull dereferenceable(40) %6, %"struct.std::__1::pair.236"* %1)
  %124 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %79, align 8
  %125 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %80, align 8
  %126 = icmp eq %"struct.std::__1::pair.236"* %125, %124
  br i1 %126, label %135, label %127

127:                                              ; preds = %117
  %128 = ptrtoint %"struct.std::__1::pair.236"* %124 to i64
  %129 = getelementptr %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %125, i64 -1, i32 0, i32 0, i32 0
  %130 = ptrtoint i32* %129 to i64
  %131 = sub i64 %130, %128
  %132 = lshr i64 %131, 7
  %133 = xor i64 %132, -1
  %134 = getelementptr %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %125, i64 %133
  store %"struct.std::__1::pair.236"* %134, %"struct.std::__1::pair.236"** %80, align 8
  br label %135

135:                                              ; preds = %127, %117
  %136 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %78, align 8
  %137 = icmp eq %"struct.std::__1::pair.236"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = bitcast %"struct.std::__1::pair.236"* %136 to i8*
  call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %135, %138
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #10
  br label %141

141:                                              ; preds = %16, %44, %140
  %142 = phi %"struct.std::__1::pair.236"* [ %1, %16 ], [ %1, %44 ], [ %123, %140 ]
  ret %"struct.std::__1::pair.236"* %142
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE12__move_rangeEPS6_SA_SA_(%"class.std::__1::vector.234"*, %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %5, align 8
  %7 = ptrtoint %"struct.std::__1::pair.236"* %6 to i64
  %8 = ptrtoint %"struct.std::__1::pair.236"* %3 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 7
  %11 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %1, i64 %10
  %12 = bitcast %"struct.std::__1::pair.236"** %5 to i64*
  %13 = icmp ult %"struct.std::__1::pair.236"* %11, %2
  br i1 %13, label %38, label %16

14:                                               ; preds = %38
  %15 = ptrtoint %"struct.std::__1::pair.236"* %66 to i64
  br label %16

16:                                               ; preds = %14, %4
  %17 = phi i64 [ %15, %14 ], [ %7, %4 ]
  store i64 %17, i64* %12, align 8
  %18 = icmp eq i64 %9, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %16, %19
  %20 = phi %"struct.std::__1::pair.236"* [ %23, %19 ], [ %6, %16 ]
  %21 = phi %"struct.std::__1::pair.236"* [ %22, %19 ], [ %11, %16 ]
  %22 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %21, i64 -1
  %23 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %20, i64 -1
  %24 = bitcast %"struct.std::__1::pair.236"* %23 to i8*
  %25 = bitcast %"struct.std::__1::pair.236"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false) #10
  %26 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %20, i64 -1, i32 1, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %21, i64 -1, i32 1, i32 0
  %28 = tail call dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZN3viz14BeginFrameArgsaSERKS0_(%"struct.viz::BeginFrameArgs"* %26, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %27) #10
  %29 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %20, i64 -1, i32 1, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %21, i64 -1, i32 1, i32 1, i32 0
  %31 = tail call dereferenceable(16) %"struct.viz::BeginFrameId"* @_ZN3viz12BeginFrameIdaSERKS0_(%"struct.viz::BeginFrameId"* %29, %"struct.viz::BeginFrameId"* dereferenceable(16) %30) #10
  %32 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %20, i64 -1, i32 1, i32 1, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %21, i64 -1, i32 1, i32 1, i32 1
  %34 = bitcast i64* %32 to i8*
  %35 = bitcast i64* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 9, i1 false) #10
  %36 = icmp eq %"struct.std::__1::pair.236"* %22, %1
  br i1 %36, label %37, label %19

37:                                               ; preds = %19, %16
  ret void

38:                                               ; preds = %4, %38
  %39 = phi %"struct.std::__1::pair.236"* [ %66, %38 ], [ %6, %4 ]
  %40 = phi %"struct.std::__1::pair.236"* [ %65, %38 ], [ %11, %4 ]
  %41 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %41, align 4
  %44 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %44, align 4
  %47 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 0, i32 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %47, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 0, i32 0, i32 1, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 0, i32 0, i32 1, i32 1
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %50, align 4
  %53 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 0, i32 0, i32 1, i32 2
  %54 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 0, i32 0, i32 1, i32 2
  %55 = bitcast %"class.base::UnguessableToken"* %53 to i8*
  %56 = bitcast %"class.base::UnguessableToken"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false) #10
  %57 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 0, i32 1, i32 0
  tail call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* %57, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %58) #10
  %59 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 0, i32 1, i32 1, i32 0
  %60 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 0, i32 1, i32 1, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %59, %"struct.viz::BeginFrameId"* dereferenceable(16) %60) #10
  %61 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 0, i32 1, i32 1, i32 1
  %62 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 0, i32 1, i32 1, i32 1
  %63 = bitcast i64* %61 to i8*
  %64 = bitcast i64* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 9, i1 false) #10
  %65 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %40, i64 1
  %66 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %39, i64 1
  %67 = icmp ult %"struct.std::__1::pair.236"* %65, %2
  br i1 %67, label %38, label %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEERNS_9allocatorIS6_EEE12emplace_backIJRKS3_S5_EEEvDpOT_(%"struct.std::__1::__split_buffer.508"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.236"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.236"* %7 to i64
  br i1 %8, label %10, label %117

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.236"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.236"* %14 to i64
  br i1 %15, label %17, label %49

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.236"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 7
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.236"* %12, %5
  br i1 %24, label %45, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.std::__1::pair.236"* [ %41, %25 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.236"* [ %40, %25 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair.236"* %26 to i8*
  %29 = bitcast %"struct.std::__1::pair.236"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 32, i1 false) #10
  %30 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %26, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 0, i32 1, i32 0
  %32 = tail call dereferenceable(64) %"struct.viz::BeginFrameArgs"* @_ZN3viz14BeginFrameArgsaSERKS0_(%"struct.viz::BeginFrameArgs"* %30, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %31) #10
  %33 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %26, i64 0, i32 1, i32 1, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 0, i32 1, i32 1, i32 0
  %35 = tail call dereferenceable(16) %"struct.viz::BeginFrameId"* @_ZN3viz12BeginFrameIdaSERKS0_(%"struct.viz::BeginFrameId"* %33, %"struct.viz::BeginFrameId"* dereferenceable(16) %34) #10
  %36 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %26, i64 0, i32 1, i32 1, i32 1
  %37 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 0, i32 1, i32 1, i32 1
  %38 = bitcast i64* %36 to i8*
  %39 = bitcast i64* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 9, i1 false) #10
  %40 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %27, i64 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %26, i64 1
  %42 = icmp eq %"struct.std::__1::pair.236"* %40, %5
  br i1 %42, label %43, label %25

43:                                               ; preds = %25
  %44 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %11, align 8
  br label %45

45:                                               ; preds = %43, %17
  %46 = phi %"struct.std::__1::pair.236"* [ %5, %17 ], [ %44, %43 ]
  %47 = phi %"struct.std::__1::pair.236"* [ %23, %17 ], [ %41, %43 ]
  store %"struct.std::__1::pair.236"* %47, %"struct.std::__1::pair.236"** %4, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %46, i64 %22
  store %"struct.std::__1::pair.236"* %48, %"struct.std::__1::pair.236"** %11, align 8
  br label %117

49:                                               ; preds = %10
  %50 = bitcast %"struct.std::__1::pair.236"** %6 to i64*
  %51 = bitcast %"struct.std::__1::__split_buffer.508"* %0 to i64*
  %52 = sub i64 %9, %16
  %53 = ashr exact i64 %52, 6
  %54 = icmp eq i64 %52, 0
  %55 = select i1 %54, i64 1, i64 %53
  %56 = icmp ugt i64 %55, 144115188075855871
  br i1 %56, label %57, label %58

57:                                               ; preds = %49
  tail call void @abort() #11
  unreachable

58:                                               ; preds = %49
  %59 = lshr i64 %55, 2
  %60 = shl i64 %55, 7
  %61 = tail call i8* @_Znwm(i64 %60) #12
  %62 = bitcast i8* %61 to %"struct.std::__1::pair.236"*
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %62, i64 %59
  %65 = ptrtoint %"struct.std::__1::pair.236"* %64 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %62, i64 %55
  %67 = ptrtoint %"struct.std::__1::pair.236"* %66 to i64
  %68 = ptrtoint %"struct.std::__1::pair.236"* %12 to i64
  %69 = ptrtoint %"struct.std::__1::pair.236"* %5 to i64
  %70 = sub i64 %69, %68
  %71 = ashr exact i64 %70, 7
  %72 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %64, i64 %71
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %107, label %74

74:                                               ; preds = %58, %74
  %75 = phi %"struct.std::__1::pair.236"* [ %101, %74 ], [ %64, %58 ]
  %76 = phi %"struct.std::__1::pair.236"* [ %102, %74 ], [ %12, %58 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %77, align 4
  %80 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 0, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 0, i32 0, i32 1, i32 0
  %84 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 8
  store i32 %85, i32* %83, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 0, i32 0, i32 1, i32 1
  %87 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 1, i32 1
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 0, i32 0, i32 1, i32 2
  %90 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 0, i32 1, i32 2
  %91 = bitcast %"class.base::UnguessableToken"* %89 to i8*
  %92 = bitcast %"class.base::UnguessableToken"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 16, i1 false) #10
  %93 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 1, i32 0
  tail call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* %93, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %94) #10
  %95 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 0, i32 1, i32 1, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 1, i32 1, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %95, %"struct.viz::BeginFrameId"* dereferenceable(16) %96) #10
  %97 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 0, i32 1, i32 1, i32 1
  %98 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 0, i32 1, i32 1, i32 1
  %99 = bitcast i64* %97 to i8*
  %100 = bitcast i64* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 9, i1 false) #10
  %101 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %75, i64 1
  %102 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %76, i64 1
  %103 = icmp eq %"struct.std::__1::pair.236"* %72, %101
  br i1 %103, label %104, label %74

104:                                              ; preds = %74
  %105 = ptrtoint %"struct.std::__1::pair.236"* %72 to i64
  %106 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %13, align 8
  br label %107

107:                                              ; preds = %58, %104
  %108 = phi %"struct.std::__1::pair.236"* [ %106, %104 ], [ %14, %58 ]
  %109 = phi i64 [ %105, %104 ], [ %65, %58 ]
  store i64 %63, i64* %51, align 8
  %110 = bitcast %"struct.std::__1::pair.236"** %11 to i64*
  store i64 %65, i64* %110, align 8
  %111 = bitcast %"struct.std::__1::pair.236"** %4 to i64*
  store i64 %109, i64* %111, align 8
  store i64 %67, i64* %50, align 8
  %112 = icmp eq %"struct.std::__1::pair.236"* %108, null
  %113 = inttoptr i64 %109 to %"struct.std::__1::pair.236"*
  br i1 %112, label %117, label %114

114:                                              ; preds = %107
  %115 = bitcast %"struct.std::__1::pair.236"* %108 to i8*
  tail call void @_ZdlPv(i8* %115) #12
  %116 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %4, align 8
  br label %117

117:                                              ; preds = %114, %107, %45, %3
  %118 = phi %"struct.std::__1::pair.236"* [ %116, %114 ], [ %113, %107 ], [ %47, %45 ], [ %5, %3 ]
  %119 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  store i32 %121, i32* %119, align 4
  %122 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %118, i64 0, i32 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %118, i64 0, i32 0, i32 1, i32 0
  %126 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %127 = load i32, i32* %126, align 8
  store i32 %127, i32* %125, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %118, i64 0, i32 0, i32 1, i32 1
  %129 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %118, i64 0, i32 0, i32 1, i32 2
  %132 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %133 = bitcast %"class.base::UnguessableToken"* %131 to i8*
  %134 = bitcast %"class.base::UnguessableToken"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 16, i1 false) #10
  %135 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %118, i64 0, i32 1, i32 0
  %136 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %2, i64 0, i32 0
  tail call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* %135, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %136) #10
  %137 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %118, i64 0, i32 1, i32 1, i32 0
  %138 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %2, i64 0, i32 1, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %137, %"struct.viz::BeginFrameId"* dereferenceable(16) %138) #10
  %139 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %118, i64 0, i32 1, i32 1, i32 1
  %140 = getelementptr inbounds %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState", %"struct.viz::DisplayDamageTracker::SurfaceBeginFrameState"* %2, i64 0, i32 1, i32 1
  %141 = bitcast i64* %139 to i8*
  %142 = bitcast i64* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 9, i1 false) #10
  %143 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %4, align 8
  %144 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %143, i64 1
  store %"struct.std::__1::pair.236"* %144, %"struct.std::__1::pair.236"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.236"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdENS2_20DisplayDamageTracker22SurfaceBeginFrameStateEEENS_9allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EEPS6_(%"class.std::__1::vector.234"*, %"struct.std::__1::__split_buffer.508"* dereferenceable(40), %"struct.std::__1::pair.236"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %1, i64 0, i32 1
  %5 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.236"* %7, %2
  br i1 %8, label %40, label %9

9:                                                ; preds = %3, %9
  %10 = phi %"struct.std::__1::pair.236"* [ %38, %9 ], [ %5, %3 ]
  %11 = phi %"struct.std::__1::pair.236"* [ %12, %9 ], [ %2, %3 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %10, i64 -1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %12, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %13, align 4
  %16 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %10, i64 -1, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %11, i64 -1, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %10, i64 -1, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %11, i64 -1, i32 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %10, i64 -1, i32 0, i32 1, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %11, i64 -1, i32 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %10, i64 -1, i32 0, i32 1, i32 2
  %26 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %11, i64 -1, i32 0, i32 1, i32 2
  %27 = bitcast %"class.base::UnguessableToken"* %25 to i8*
  %28 = bitcast %"class.base::UnguessableToken"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false) #10
  %29 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %10, i64 -1, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %11, i64 -1, i32 1, i32 0
  tail call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* %29, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %30) #10
  %31 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %10, i64 -1, i32 1, i32 1, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %11, i64 -1, i32 1, i32 1, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %31, %"struct.viz::BeginFrameId"* dereferenceable(16) %32) #10
  %33 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %10, i64 -1, i32 1, i32 1, i32 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %11, i64 -1, i32 1, i32 1, i32 1
  %35 = bitcast i64* %33 to i8*
  %36 = bitcast i64* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 9, i1 false) #10
  %37 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %4, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %37, i64 -1
  store %"struct.std::__1::pair.236"* %38, %"struct.std::__1::pair.236"** %4, align 8
  %39 = icmp eq %"struct.std::__1::pair.236"* %12, %7
  br i1 %39, label %40, label %9

40:                                               ; preds = %9, %3
  %41 = phi %"struct.std::__1::pair.236"* [ %5, %3 ], [ %38, %9 ]
  %42 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 1
  %43 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %1, i64 0, i32 2
  %45 = icmp eq %"struct.std::__1::pair.236"* %43, %2
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = ptrtoint %"struct.std::__1::pair.236"* %41 to i64
  %48 = bitcast %"struct.std::__1::pair.236"** %4 to i64*
  br label %85

49:                                               ; preds = %40
  %50 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %44, align 8
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi %"struct.std::__1::pair.236"* [ %80, %51 ], [ %50, %49 ]
  %53 = phi %"struct.std::__1::pair.236"* [ %78, %51 ], [ %2, %49 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %52, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %54, align 4
  %57 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %52, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %57, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %52, i64 0, i32 0, i32 1, i32 0
  %61 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 0, i32 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %52, i64 0, i32 0, i32 1, i32 1
  %64 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 0, i32 0, i32 1, i32 1
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %63, align 4
  %66 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %52, i64 0, i32 0, i32 1, i32 2
  %67 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 0, i32 0, i32 1, i32 2
  %68 = bitcast %"class.base::UnguessableToken"* %66 to i8*
  %69 = bitcast %"class.base::UnguessableToken"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #10
  %70 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %52, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 0, i32 1, i32 0
  tail call void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"* %70, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %71) #10
  %72 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %52, i64 0, i32 1, i32 1, i32 0
  %73 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 0, i32 1, i32 1, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %72, %"struct.viz::BeginFrameId"* dereferenceable(16) %73) #10
  %74 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %52, i64 0, i32 1, i32 1, i32 1
  %75 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 0, i32 1, i32 1, i32 1
  %76 = bitcast i64* %74 to i8*
  %77 = bitcast i64* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 9, i1 false) #10
  %78 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %53, i64 1
  %79 = load %"struct.std::__1::pair.236"*, %"struct.std::__1::pair.236"** %44, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.236", %"struct.std::__1::pair.236"* %79, i64 1
  store %"struct.std::__1::pair.236"* %80, %"struct.std::__1::pair.236"** %44, align 8
  %81 = icmp eq %"struct.std::__1::pair.236"* %78, %43
  br i1 %81, label %82, label %51

82:                                               ; preds = %51
  %83 = bitcast %"struct.std::__1::pair.236"** %4 to i64*
  %84 = load i64, i64* %83, align 8
  br label %85

85:                                               ; preds = %46, %82
  %86 = phi i64* [ %48, %46 ], [ %83, %82 ]
  %87 = phi i64 [ %47, %46 ], [ %84, %82 ]
  %88 = bitcast %"class.std::__1::vector.234"* %0 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %87, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  %90 = bitcast %"struct.std::__1::pair.236"** %42 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"struct.std::__1::pair.236"** %44 to i64*
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %90, align 8
  store i64 %91, i64* %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector.234", %"class.std::__1::vector.234"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::__1::__split_buffer.508", %"struct.std::__1::__split_buffer.508"* %1, i64 0, i32 3, i32 0, i32 0
  %96 = bitcast %"struct.std::__1::pair.236"** %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"struct.std::__1::pair.236"** %95 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = load i64, i64* %86, align 8
  %101 = bitcast %"struct.std::__1::__split_buffer.508"* %1 to i64*
  store i64 %100, i64* %101, align 8
  ret %"struct.std::__1::pair.236"* %5
}

declare void @_ZN3viz14BeginFrameArgsC1ERKS0_(%"struct.viz::BeginFrameArgs"*, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) unnamed_addr #5

declare void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"*, %"struct.viz::BeginFrameId"* dereferenceable(16)) unnamed_addr #5

declare void @_ZN3viz14BeginFrameArgsC1Ev(%"struct.viz::BeginFrameArgs"*) unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #5

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !11}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base12ObserverListIN3viz20DisplayDamageTracker8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !11}
