; ModuleID = '../../third_party/blink/renderer/platform/scheduler/main_thread/compositor_priority_experiments.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/main_thread/compositor_priority_experiments.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam.621" = type { %"struct.base::Feature"*, i8*, double }
%"class.blink::scheduler::CompositorPriorityExperiments" = type <{ %"class.blink::scheduler::MainThreadSchedulerImpl"*, i32, i8, i8, [2 x i8], %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [7 x i8], %"class.std::__1::unique_ptr", i32, i8, [3 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* }
%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.std::__1::unique_ptr.0", i8, [7 x i8] }>
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::scheduler::CPUTimeBudgetPool"* }
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.79", %"class.absl::optional.79", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.103" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet", i8 }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.4", %"class.base::WeakPtr", %class.scoped_refptr, %class.scoped_refptr.77, i32, i32, i8*, %"class.base::WeakPtrFactory.78" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr, %class.scoped_refptr.8, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.8 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.9", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.10", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.15, i8, [7 x i8] }>
%class.scoped_refptr.15 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.16", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.20" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.25", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.30", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.60", %"class.base::RepeatingCallback.61", %"class.absl::optional.62", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.37", %"struct.std::__1::less" }>
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.41" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.39, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.39 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.40" }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.46", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.48" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.54", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.60" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.61" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.67", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.110", i64, [64 x %"class.base::RepeatingCallback.115"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.67", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__cxx_atomic_impl.113" }
%"struct.std::__1::__cxx_atomic_impl.113" = type { %"struct.std::__1::__cxx_atomic_base_impl.114" }
%"struct.std::__1::__cxx_atomic_base_impl.114" = type { i64 }
%"class.base::RepeatingCallback.115" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.76 }
%class.scoped_refptr.76 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.7", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.77 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.78" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.79" = type { %"class.absl::optional_internal::optional_data.80" }
%"class.absl::optional_internal::optional_data.80" = type { %"class.absl::optional_internal::optional_data_base.81" }
%"class.absl::optional_internal::optional_data_base.81" = type { %"class.absl::optional_internal::optional_data_dtor_base.82" }
%"class.absl::optional_internal::optional_data_dtor_base.82" = type { i8, %union.anon.83 }
%union.anon.83 = type { %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.84", %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86", %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { float }
%"class.base::RepeatingCallback.103" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::AgentSchedulingStrategy::Delegate", %"class.blink::scheduler::IdleHelper::Delegate", %"class.blink::scheduler::SchedulerHelper::Observer", %"class.blink::scheduler::RenderWidgetSignals::Observer", %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8, i8, [6 x i8], %"class.blink::scheduler::TraceableVariableController", %"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings", %"class.std::__1::unique_ptr.117", %"class.blink::scheduler::MainThreadSchedulerHelper", %class.scoped_refptr.130, %"class.blink::scheduler::IdleHelper", %"class.std::__1::unique_ptr.229", %"class.blink::scheduler::RenderWidgetSignals", %"class.std::__1::unique_ptr.253", %class.scoped_refptr.130, %class.scoped_refptr.130, %class.scoped_refptr.130, %class.scoped_refptr.130, %"class.std::__1::map", %class.scoped_refptr.130, %class.scoped_refptr.130, %class.scoped_refptr.130, %class.scoped_refptr.77, %class.scoped_refptr.77, %class.scoped_refptr.77, %class.scoped_refptr.77, %class.scoped_refptr.77, %"class.blink::MemoryPurgeManager", %"class.std::__1::unique_ptr.270", %"class.blink::scheduler::NonWakingTimeDomain", %"class.base::RepeatingCallback.115", %"class.blink::scheduler::DeadlineTaskRunner", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.115", %"class.base::RepeatingCallback.283", %"class.std::__1::unique_ptr.284", %"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly", %"class.base::Lock", %"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread", %"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly", %class.PollableThreadSafeFlag, %class.PollableThreadSafeFlag, %"class.WTF::HashSet.437", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.base::WeakPtrFactory.441" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::AgentSchedulingStrategy::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::RenderWidgetSignals::Observer" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.std::__1::array.116", i8, i8 }
%"struct.std::__1::array.116" = type { [6 x i8] }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.base::sequence_manager::SequenceManager"* }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::MainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %class.scoped_refptr.130, %class.scoped_refptr.130 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr.77, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional.123" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr.77, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper" = type { %"class.base::TaskObserver", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate", %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, %class.scoped_refptr.132, %class.scoped_refptr.214, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::IdleHelper::State", %"class.base::TimeDelta", i8, %"class.base::WeakPtr.227", %"class.base::WeakPtrFactory.228" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate" = type { i32 (...)** }
%class.scoped_refptr.132 = type { %"class.base::sequence_manager::TaskQueue"* }
%class.scoped_refptr.214 = type { %"class.blink::scheduler::SingleThreadIdleTaskRunner"* }
%"class.blink::scheduler::SingleThreadIdleTaskRunner" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.215", %class.scoped_refptr.77, %"class.std::__1::multimap", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate"*, %"class.base::trace_event::BlameContext"*, %"class.base::WeakPtr.225", %"class.base::WeakPtrFactory.226" }
%"class.base::RefCountedThreadSafe.215" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::WeakPtr.225" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.226" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::IdleHelper::State" = type { i32 (...)**, %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8*, i8* }
%"class.base::WeakPtr.227" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.228" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::scheduler::TaskQueueThrottler"* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap.232", %"class.base::RepeatingCallback.237", %class.scoped_refptr.77, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.238", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional", i8, [7 x i8], %"class.WTF::HashMap.244", %"class.base::WeakPtrFactory.249" }
%"class.WTF::HashMap.232" = type { %"class.WTF::HashTable.233" }
%"class.WTF::HashTable.233" = type <{ %"struct.WTF::KeyValuePair.236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.236" = type opaque
%"class.base::RepeatingCallback.237" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type opaque
%"class.WTF::HashMap.244" = type { %"class.WTF::HashTable.245" }
%"class.WTF::HashTable.245" = type <{ %"struct.WTF::KeyValuePair.248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.248" = type opaque
%"class.base::WeakPtrFactory.249" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::RenderWidgetSignals" = type { %"class.blink::scheduler::RenderWidgetSignals::Observer"*, i32, i32 }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::scheduler::FindInPageBudgetPoolController"* }
%"class.blink::scheduler::FindInPageBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.std::__1::unique_ptr.0", i8, i8, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.259" }
%"class.std::__1::__tree.259" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%class.scoped_refptr.130 = type { %"class.blink::scheduler::MainThreadTaskQueue"* }
%"class.blink::scheduler::MainThreadTaskQueue" = type { %"class.base::RefCountedThreadSafe.131", %class.scoped_refptr.132, i32, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, %"class.absl::optional.133", %"class.absl::optional.138", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.base::WeakPtrFactory.213" }
%"class.base::RefCountedThreadSafe.131" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits" = type { i8, i32 }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { i32 }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { i32 }
%"class.blink::scheduler::AgentGroupSchedulerImpl" = type { %"class.blink::AgentGroupScheduler", %class.scoped_refptr.130, %class.scoped_refptr.77, %class.scoped_refptr.130, %class.scoped_refptr.77, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::BrowserInterfaceBrokerProxy" }
%"class.blink::AgentGroupScheduler" = type { %"class.blink::scheduler::WebAgentGroupScheduler" }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.609" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.603" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.442, %"class.std::__1::unique_ptr.560", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.39, i32 }>
%class.scoped_refptr.442 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.39, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.524", %"class.absl::optional.529", %"class.absl::optional.483", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque.548", %"class.std::__1::map.551", i8, [7 x i8], %class.scoped_refptr.39, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.443" }>
%"class.base::RefCountedThreadSafe.443" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.446 }
%union.anon.446 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.462" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.462" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.39, %"class.std::__1::unique_ptr.463", %"class.absl::optional.473", %"struct.std::__1::atomic.479", i8, i8, i8, i8, i32, i32, %"class.absl::optional.483", %"class.std::__1::unique_ptr.488", i8, i64, %class.scoped_refptr.520, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.522", %"class.base::WeakPtrFactory.523" }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.39, i8, %"class.mojo::ScopedHandleBase.466", %class.scoped_refptr.467, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.468", i8*, %"class.base::WeakPtrFactory.469" }
%"class.mojo::ScopedHandleBase.466" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.467 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.468" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.469" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.473" = type { %"class.absl::optional_internal::optional_data.474" }
%"class.absl::optional_internal::optional_data.474" = type { %"class.absl::optional_internal::optional_data_base.475" }
%"class.absl::optional_internal::optional_data_base.475" = type { %"class.absl::optional_internal::optional_data_dtor_base.476" }
%"class.absl::optional_internal::optional_data_dtor_base.476" = type { i8, %union.anon.477 }
%union.anon.477 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.478", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.478" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.479" = type { %"struct.std::__1::__atomic_base.480" }
%"struct.std::__1::__atomic_base.480" = type { %"struct.std::__1::__cxx_atomic_impl.481" }
%"struct.std::__1::__cxx_atomic_impl.481" = type { %"struct.std::__1::__cxx_atomic_base_impl.482" }
%"struct.std::__1::__cxx_atomic_base_impl.482" = type { i8 }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.491", i8, i64, %class.scoped_refptr.492, %class.scoped_refptr.516 }
%"class.base::RepeatingCallback.491" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.492 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.494", %"class.std::__1::map.505", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.493 }
%class.scoped_refptr.493 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::map.505" = type { %"class.std::__1::__tree.506" }
%"class.std::__1::__tree.506" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%class.scoped_refptr.516 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.520 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.521 }
%class.scoped_refptr.521 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.620", [4 x i8], %"class.base::RepeatingCallback.115", %class.scoped_refptr.39, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.10", [4 x i8] }>
%"class.base::RefCountedThreadSafe.620" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.522" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.523" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.524" = type { %"class.absl::optional_internal::optional_data.525" }
%"class.absl::optional_internal::optional_data.525" = type { %"class.absl::optional_internal::optional_data_base.526" }
%"class.absl::optional_internal::optional_data_base.526" = type { %"class.absl::optional_internal::optional_data_dtor_base.527" }
%"class.absl::optional_internal::optional_data_dtor_base.527" = type { i8, %union.anon.528 }
%union.anon.528 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.529" = type { %"class.absl::optional_internal::optional_data.530" }
%"class.absl::optional_internal::optional_data.530" = type { %"class.absl::optional_internal::optional_data_base.531" }
%"class.absl::optional_internal::optional_data_base.531" = type { %"class.absl::optional_internal::optional_data_dtor_base.532" }
%"class.absl::optional_internal::optional_data_dtor_base.532" = type { i8, [7 x i8], %union.anon.533 }
%union.anon.533 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.483" = type { %"class.absl::optional_internal::optional_data.484" }
%"class.absl::optional_internal::optional_data.484" = type { %"class.absl::optional_internal::optional_data_base.485" }
%"class.absl::optional_internal::optional_data_base.485" = type { %"class.absl::optional_internal::optional_data_dtor_base.486" }
%"class.absl::optional_internal::optional_data_dtor_base.486" = type { i8, %union.anon.487 }
%union.anon.487 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.534 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.534 = type { %"class.std::__1::map.537" }
%"class.std::__1::map.537" = type { %"class.std::__1::__tree.538" }
%"class.std::__1::__tree.538" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::circular_deque.548" = type { %"class.base::internal::VectorBuffer.549", i64, i64 }
%"class.base::internal::VectorBuffer.549" = type { %"class.std::__1::unique_ptr.550"*, i64 }
%"class.std::__1::unique_ptr.550" = type opaque
%"class.std::__1::map.551" = type { %"class.std::__1::__tree.552" }
%"class.std::__1::__tree.552" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.115", %"class.base::OnceCallback.563", %"class.absl::optional.79", %"class.absl::optional.564", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.570", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.578", %"class.std::__1::map.589", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.598", i8, %class.scoped_refptr.39, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.599" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.563" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.564" = type { %"class.absl::optional_internal::optional_data.565" }
%"class.absl::optional_internal::optional_data.565" = type { %"class.absl::optional_internal::optional_data_base.566" }
%"class.absl::optional_internal::optional_data_base.566" = type { %"class.absl::optional_internal::optional_data_dtor_base.567" }
%"class.absl::optional_internal::optional_data_dtor_base.567" = type { i8, %union.anon.568 }
%union.anon.568 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.39, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.269" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.269" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.569 }
%class.scoped_refptr.569 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.573", %class.scoped_refptr.574 }
%"class.base::RepeatingCallback.573" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.574 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.443", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.578" = type { %"class.std::__1::__tree.579" }
%"class.std::__1::__tree.579" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::map.589" = type { %"class.std::__1::__tree.590" }
%"class.std::__1::__tree.590" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.591", %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::OnceCallback.598" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.599" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.609" = type { %"class.std::__1::__tree.610" }
%"class.std::__1::__tree.610" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.blink::scheduler::FrameSchedulerImpl" = type { %"class.blink::FrameScheduler", %"class.blink::scheduler::FrameTaskQueueController::Delegate", i32, i8, %"class.base::TimeDelta", %"class.blink::scheduler::TraceableVariableController", %"class.std::__1::unique_ptr.147", %"class.WTF::HashMap.169", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::PageSchedulerImpl"*, %"class.blink::FrameScheduler::Delegate"*, %"class.base::trace_event::BlameContext"*, i32, [4 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.187", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::StateTracer", %"class.blink::scheduler::TraceableState", %"class.WTF::Vector.189", %"class.blink::scheduler::TraceableState", i32, [4 x i8], %"class.blink::scheduler::TraceableState", i64, %"class.base::flat_map", %"class.std::__1::bitset", %"class.blink::scheduler::TraceableState", i64, i8, i8, [6 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.204", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.std::__1::unique_ptr.206", %"class.base::WeakPtrFactory.212", %"class.base::WeakPtrFactory.212", %"class.base::WeakPtrFactory.212" }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory.146" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.143" }
%"class.WTF::HashTable.143" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory.146" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::FrameTaskQueueController::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::scheduler::FrameTaskQueueController"* }
%"class.blink::scheduler::FrameTaskQueueController" = type { %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.WTF::HashMap.150", %"class.WTF::HashSet.155", %"class.WTF::HashMap.159", %"class.WTF::Vector" }
%"class.WTF::HashMap.150" = type { %"class.WTF::HashTable.151" }
%"class.WTF::HashTable.151" = type <{ %"struct.WTF::KeyValuePair.154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.154" = type opaque
%"class.WTF::HashSet.155" = type { %"class.WTF::HashTable.156" }
%"class.WTF::HashTable.156" = type <{ %class.scoped_refptr.130*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.159" = type { %"class.WTF::HashTable.160" }
%"class.WTF::HashTable.160" = type <{ %"struct.WTF::KeyValuePair.163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.163" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.WTF::HashMap.169" = type { %"class.WTF::HashTable.170" }
%"class.WTF::HashTable.170" = type <{ %"struct.WTF::KeyValuePair.173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.173" = type opaque
%"class.blink::scheduler::PageSchedulerImpl" = type { %"class.blink::PageScheduler", i8, [7 x i8], %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet.174", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, i32, %"class.base::TimeTicks", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::PageScheduler::Delegate"*, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.180", %"class.base::WeakPtrFactory.186" }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.WTF::HashSet.174" = type { %"class.WTF::HashTable.175" }
%"class.WTF::HashTable.175" = type <{ %"class.blink::scheduler::FrameSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional" }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker"* }
%"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker" = type <{ %"class.blink::scheduler::PageSchedulerImpl"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.186" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::TraceableState.187" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base" = type <{ i8*, i8 }>
%"class.blink::scheduler::StateTracer" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle"*, i32, i32 }
%"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle" = type { %"class.base::WeakPtr.192", %"class.base::WeakPtr.193" }
%"class.base::WeakPtr.192" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.193" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.196" }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.std::__1::pair.198"*, %"struct.std::__1::pair.198"*, %"class.std::__1::__compressed_pair.199" }
%"struct.std::__1::pair.198" = type opaque
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.std::__1::pair.198"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::scheduler::TraceableState.204" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.212" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.213" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::MemoryPurgeManager" = type { i8, i8, i32, i32, %"class.base::OneShotTimer" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* }
%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TaskObserver", i32, i32, i8, %"class.blink::scheduler::SchedulerHelper"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Lock", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Time", %"class.base::Time", %"class.std::__1::unique_ptr.274" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.273" }
%"class.base::time_internal::TimeBase.273" = type { i64 }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.base::subtle::ScopedTimeClockOverrides"* }
%"class.base::subtle::ScopedTimeClockOverrides" = type { i8 }
%"class.blink::scheduler::NonWakingTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TickClock"* }
%"class.blink::scheduler::DeadlineTaskRunner" = type { %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.115", %"class.base::TimeTicks", %class.scoped_refptr.77 }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.115", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.115", %"class.base::WeakPtrFactory.178" }
%"class.base::WeakPtrFactory.178" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.283" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::scheduler::AgentSchedulingStrategy"* }
%"class.blink::scheduler::AgentSchedulingStrategy" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly" = type { %"class.blink::scheduler::IdleTimeEstimator", %"class.blink::scheduler::TraceableState.309", %"class.blink::scheduler::MainThreadSchedulerImpl::Policy", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter.313", %"class.blink::scheduler::TraceableCounter.314", %"class.blink::scheduler::TraceableObjectState", %"class.blink::scheduler::TraceableState.322", %"class.absl::optional.326", %"class.blink::scheduler::TraceableState.322", %"class.blink::scheduler::TraceableState.338", %"class.blink::scheduler::TraceableState.338", %"class.blink::scheduler::TraceableState.340", %"class.blink::scheduler::TraceableState.340", %"class.blink::scheduler::TraceableState.340", %"class.blink::scheduler::TraceableState.340", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.322", %"class.blink::scheduler::TraceableState.340", %"class.blink::scheduler::TraceableState.340", %"class.blink::scheduler::TraceableState.340", %"class.base::TimeTicks", %"class.WTF::HashSet.344", %"class.base::ObserverList.348", %"class.blink::scheduler::MainThreadMetricsHelper", %"class.blink::scheduler::TraceableState.369", %"class.blink::scheduler::TraceableState.371", %"class.blink::scheduler::TraceableState.382", %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i32, i32, i8, %"class.std::__1::stack", i32, [4 x i8], %"class.blink::scheduler::TraceableState.338", %"class.WTF::Vector.396", %"class.blink::scheduler::CompositorPriorityExperiments", i8, [7 x i8], %"class.blink::scheduler::TraceableState.401", %"class.WTF::Vector.403", %"class.std::__1::unique_ptr.206" }
%"class.blink::scheduler::IdleTimeEstimator" = type <{ %"class.base::TaskObserver", %"class.cc::RollingTimeDeltaHistory", %"class.base::TickClock"*, double, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.cc::RollingTimeDeltaHistory" = type { %"class.std::__1::multiset", %"class.base::circular_deque", i64, %"class.base::flat_map.299" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.290" }
%"class.std::__1::__tree.290" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::__tree_const_iterator"*, i64 }
%"class.std::__1::__tree_const_iterator" = type opaque
%"class.base::flat_map.299" = type { %"class.base::internal::flat_tree.300" }
%"class.base::internal::flat_tree.300" = type { %"class.std::__1::vector.301" }
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { %"struct.std::__1::pair.303"*, %"struct.std::__1::pair.303"*, %"class.std::__1::__compressed_pair.304" }
%"struct.std::__1::pair.303" = type opaque
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.std::__1::pair.303"* }
%"class.blink::scheduler::TraceableState.309" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.311", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base.311" = type <{ i8*, i8 }>
%"class.blink::scheduler::MainThreadSchedulerImpl::Policy" = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"class.blink::scheduler::TraceableCounter.313" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter.314" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableObjectState" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::ProtoStateTracer.base", i32, void (%"class.perfetto::protos::pbzero::TrackEvent"*, i32)* }
%"class.blink::scheduler::ProtoStateTracer.base" = type <{ i8*, i8 }>
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.315" }
%"class.std::__1::list.315" = type { %"class.std::__1::__list_imp.316" }
%"class.std::__1::__list_imp.316" = type { %"struct.std::__1::__list_node_base.317", %"class.std::__1::__compressed_pair.318" }
%"struct.std::__1::__list_node_base.317" = type { %"struct.std::__1::__list_node_base.317"*, %"struct.std::__1::__list_node_base.317"* }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.absl::optional.326" = type { %"class.absl::optional_internal::optional_data.327" }
%"class.absl::optional_internal::optional_data.327" = type { %"class.absl::optional_internal::optional_data_base.328" }
%"class.absl::optional_internal::optional_data_base.328" = type { %"class.absl::optional_internal::optional_data_dtor_base.329" }
%"class.absl::optional_internal::optional_data_dtor_base.329" = type { i8, %union.anon.330 }
%union.anon.330 = type { %"class.base::ScopedSampleMetadata" }
%"class.base::ScopedSampleMetadata" = type { i64, %"class.absl::optional.331" }
%"class.absl::optional.331" = type { %"class.absl::optional_internal::optional_data.332" }
%"class.absl::optional_internal::optional_data.332" = type { %"class.absl::optional_internal::optional_data_base.333" }
%"class.absl::optional_internal::optional_data_base.333" = type { %"class.absl::optional_internal::optional_data_dtor_base.334" }
%"class.absl::optional_internal::optional_data_dtor_base.334" = type { i8, %union.anon.335 }
%union.anon.335 = type { i64 }
%"class.blink::scheduler::TraceableState.322" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.324", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.324" = type <{ i8*, i8 }>
%"class.blink::scheduler::TraceableState.340" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.342", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.342" = type <{ i8*, i8 }>
%"class.WTF::HashSet.344" = type { %"class.WTF::HashTable.345" }
%"class.WTF::HashTable.345" = type <{ %"class.blink::scheduler::PageSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::ObserverList.348" = type <{ %"class.std::__1::vector.46", %"class.base::LinkedList.349", i64, i32, [4 x i8] }>
%"class.base::LinkedList.349" = type { %"class.base::LinkNode.350" }
%"class.base::LinkNode.350" = type { %"class.base::internal::LinkNodeBase" }
%"class.blink::scheduler::MainThreadMetricsHelper" = type <{ %"class.blink::scheduler::MetricsHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, i8, [7 x i8], %"class.absl::optional", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.scheduling_metrics::TaskDurationMetricReporter.368", %"class.scheduling_metrics::TaskDurationMetricReporter.368", %"class.scheduling_metrics::TaskDurationMetricReporter.368", %"class.scheduling_metrics::TaskDurationMetricReporter.368", %"class.scheduling_metrics::TaskDurationMetricReporter.368", %"class.scheduling_metrics::TaskDurationMetricReporter.368", %"class.scheduling_metrics::TaskDurationMetricReporter.368", %"class.scheduling_metrics::TaskDurationMetricReporter.368", %"class.scheduling_metrics::TotalDurationMetricReporter", i32, [4 x i8], %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.366", %"class.scheduling_metrics::TaskDurationMetricReporter.366", %"class.scheduling_metrics::TaskDurationMetricReporter.366", %"class.scheduling_metrics::TaskDurationMetricReporter.366", %"class.scheduling_metrics::TaskDurationMetricReporter.366", %"class.scheduling_metrics::TaskDurationMetricReporter.366" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.352" }
%"class.base::time_internal::TimeBase.352" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr.353" }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.356" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.10", [4 x i8] }>
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { i32*, i32*, %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.366" = type { %"class.std::__1::unique_ptr.353" }
%"class.blink::scheduler::ThreadLoadTracker" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::RepeatingCallback.367" }
%"class.base::RepeatingCallback.367" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.scheduling_metrics::TaskDurationMetricReporter.368" = type { %"class.std::__1::unique_ptr.353" }
%"class.scheduling_metrics::TotalDurationMetricReporter" = type { %"class.absl::optional.79", %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.blink::scheduler::TraceableState.369" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.324", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState.371" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", void (i8*)*, i8* (i64, i64)*, %"class.absl::optional.372" }
%"class.absl::optional.372" = type { %"class.absl::optional_internal::optional_data.373" }
%"class.absl::optional_internal::optional_data.373" = type { %"class.absl::optional_internal::optional_data_base.374" }
%"class.absl::optional_internal::optional_data_base.374" = type { %"class.absl::optional_internal::optional_data_dtor_base.375" }
%"class.absl::optional_internal::optional_data_dtor_base.375" = type { i8, %union.anon.376 }
%union.anon.376 = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" }
%"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" = type { i8, %"class.absl::optional.377" }
%"class.absl::optional.377" = type { %"class.absl::optional_internal::optional_data.378" }
%"class.absl::optional_internal::optional_data.378" = type { %"class.absl::optional_internal::optional_data_base.379" }
%"class.absl::optional_internal::optional_data_base.379" = type { %"class.absl::optional_internal::optional_data_dtor_base.380" }
%"class.absl::optional_internal::optional_data_dtor_base.380" = type { i8, %union.anon.381 }
%union.anon.381 = type { i32 }
%"class.blink::scheduler::TraceableState.382" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i16)*, %"class.absl::optional.383", [6 x i8] }>
%"class.absl::optional.383" = type { %"class.absl::optional_internal::optional_data.384" }
%"class.absl::optional_internal::optional_data.384" = type { %"class.absl::optional_internal::optional_data_base.385" }
%"class.absl::optional_internal::optional_data_base.385" = type { %"class.absl::optional_internal::optional_data_dtor_base.386" }
%"class.absl::optional_internal::optional_data_dtor_base.386" = type { i8, %union.anon.387 }
%union.anon.387 = type { i8 }
%"class.std::__1::stack" = type { %"class.std::__1::vector.389" }
%"class.std::__1::vector.389" = type { %"class.std::__1::__vector_base.390" }
%"class.std::__1::__vector_base.390" = type { %class.scoped_refptr.130*, %class.scoped_refptr.130*, %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %class.scoped_refptr.130* }
%"class.blink::scheduler::TraceableState.338" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.311", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::scheduler::TraceableState.401" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.311", [7 x i8], void (i8*)*, i8* (i8)*, i8, [7 x i8] }>
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope"*, i32, i32 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope" = type { %"class.std::__1::unique_ptr.406", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"*, %class.scoped_refptr.77, %class.scoped_refptr.77, i8*, i8* }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.base::ThreadTaskRunnerHandleOverride"* }
%"class.base::ThreadTaskRunnerHandleOverride" = type <{ %"class.absl::optional.409", %class.scoped_refptr.77, %"class.absl::optional.414", [6 x i8] }>
%"class.absl::optional.409" = type { %"class.absl::optional_internal::optional_data.410" }
%"class.absl::optional_internal::optional_data.410" = type { %"class.absl::optional_internal::optional_data_base.411" }
%"class.absl::optional_internal::optional_data_base.411" = type { %"class.absl::optional_internal::optional_data_dtor_base.412" }
%"class.absl::optional_internal::optional_data_dtor_base.412" = type { i8, %union.anon.413 }
%union.anon.413 = type { %"class.base::ThreadTaskRunnerHandle" }
%"class.base::ThreadTaskRunnerHandle" = type { %class.scoped_refptr.77, %"class.base::SequencedTaskRunnerHandle" }
%"class.base::SequencedTaskRunnerHandle" = type { %class.scoped_refptr.39 }
%"class.absl::optional.414" = type { %"class.absl::optional_internal::optional_data.415" }
%"class.absl::optional_internal::optional_data.415" = type { %"class.absl::optional_internal::optional_data_base.416" }
%"class.absl::optional_internal::optional_data_base.416" = type { %"class.absl::optional_internal::optional_data_dtor_base.417" }
%"class.absl::optional_internal::optional_data_dtor_base.417" = type { i8, %union.anon.418 }
%union.anon.418 = type { %"class.base::RunLoop::ScopedDisallowRunning" }
%"class.base::RunLoop::ScopedDisallowRunning" = type { i8 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread" = type { %"class.blink::scheduler::PendingUserInput::Monitor", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::scheduler::UserModel", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableCounter.429" }
%"class.blink::scheduler::PendingUserInput::Monitor" = type { %"class.WTF::HashMap.424" }
%"class.WTF::HashMap.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"struct.WTF::KeyValuePair.428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.428" = type opaque
%"class.blink::scheduler::UserModel" = type <{ i32, [4 x i8], %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.blink::scheduler::TraceableCounter.429" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly" = type { i32, %"class.std::__1::unique_ptr.431" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.base::ThreadChecker"* }
%class.PollableThreadSafeFlag = type { i32, %"class.base::Lock"* }
%"class.WTF::HashSet.437" = type { %"class.WTF::HashTable.438" }
%"class.WTF::HashTable.438" = type <{ %"class.blink::scheduler::AgentGroupSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.441" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.base::FeatureParam" = type <{ %"struct.base::Feature"*, i8*, i32, [4 x i8] }>
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"class.blink::scheduler::BudgetPool" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet", i8, [7 x i8] }>

$_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController20AddQueueToBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE = comdat any

$_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController25RemoveQueueFromBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE = comdat any

$_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController20UnregisterBudgetPoolEPNS0_10BudgetPoolE = comdat any

$_ZNK5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController11IsThrottledEPN4base16sequence_manager9TaskQueueE = comdat any

@_ZN5blink9schedulerL41kPrioritizeCompositingUntilBeginMainFrameE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i32 0, i32 0), i32 1 }, align 8
@_ZN5blink9schedulerL37kVeryHighPriorityForCompositingAlwaysE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i32 0, i32 0), i32 0 }, align 8
@_ZN5blink9schedulerL39kVeryHighPriorityForCompositingWhenFastE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i32 0, i32 0), i32 0 }, align 8
@_ZN5blink9schedulerL42kVeryHighPriorityForCompositingAlternatingE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i32 0, i32 0), i32 0 }, align 8
@_ZN5blink9schedulerL37kVeryHighPriorityForCompositingBudgetE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i32 0, i32 0), i32 0 }, align 8
@_ZN5blink9schedulerL41kVeryHighPriorityForCompositingAfterDelayE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i32 0, i32 0), i32 1 }, align 8
@_ZN5blink9schedulerL29kCompositorBudgetRecoveryRateE = internal constant %"struct.base::FeatureParam.621" { %"struct.base::Feature"* @_ZN5blink9schedulerL37kVeryHighPriorityForCompositingBudgetE, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), double 2.500000e-01 }, align 8
@_ZTVN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)* @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)* @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController20AddQueueToBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController25RemoveQueueFromBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::BudgetPool"*)* @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController20UnregisterBudgetPoolEPNS0_10BudgetPoolE to i8*), i8* bitcast (void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, i64, %"class.base::sequence_manager::TaskQueue"*)* @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController35UpdateQueueSchedulingLifecycleStateEN4base9TimeTicksEPNS3_16sequence_manager9TaskQueueE to i8*), i8* bitcast (i1 (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*)* @_ZNK5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController11IsThrottledEPN4base16sequence_manager9TaskQueueE to i8*)] }, align 8
@.str = private unnamed_addr constant [21 x i8] c"CompositorBudgetPool\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"CompositingDelayLength\00", align 1
@_ZN5blink9schedulerL23kCompositingDelayLengthE = internal constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN5blink9schedulerL41kVeryHighPriorityForCompositingAfterDelayE, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0), i32 100 }, align 8
@.str.3 = private unnamed_addr constant [55 x i8] c"BlinkSchedulerPrioritizeCompositingUntilBeginMainFrame\00", align 1
@.str.4 = private unnamed_addr constant [51 x i8] c"BlinkSchedulerVeryHighPriorityForCompositingAlways\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"BlinkSchedulerVeryHighPriorityForCompositingWhenFast\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"BlinkSchedulerVeryHighPriorityForCompositingAlternating\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"BlinkSchedulerVeryHighPriorityForCompositingBudget\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"BlinkSchedulerVeryHighPriorityForCompositingAfterDelay\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"InitialCompositorBudgetInMilliseconds\00", align 1
@_ZN5blink9schedulerL38kInitialCompositorBudgetInMillisecondsE = internal constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN5blink9schedulerL37kVeryHighPriorityForCompositingBudgetE, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i32 0, i32 0), i32 250 }, align 8
@.str.11 = private unnamed_addr constant [29 x i8] c"CompositorBudgetRecoveryRate\00", align 1

@_ZN5blink9scheduler29CompositorPriorityExperimentsC1EPNS0_23MainThreadSchedulerImplE = hidden unnamed_addr alias void (%"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*), void (%"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*)* @_ZN5blink9scheduler29CompositorPriorityExperimentsC2EPNS0_23MainThreadSchedulerImplE
@_ZN5blink9scheduler29CompositorPriorityExperimentsD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::CompositorPriorityExperiments"*), void (%"class.blink::scheduler::CompositorPriorityExperiments"*)* @_ZN5blink9scheduler29CompositorPriorityExperimentsD2Ev
@_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerC1EPS1_PNS0_23MainThreadSchedulerImplEPNS0_19MainThreadTaskQueueEPNS0_27TraceableVariableControllerEN4base9TimeDeltaEd = hidden unnamed_addr alias void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::TraceableVariableController"*, i64, double), void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::TraceableVariableController"*, i64, double)* @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerC2EPS1_PNS0_23MainThreadSchedulerImplEPNS0_19MainThreadTaskQueueEPNS0_27TraceableVariableControllerEN4base9TimeDeltaEd
@_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*), void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)* @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperimentsC2EPNS0_23MainThreadSchedulerImplE(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture, %"class.blink::scheduler::MainThreadSchedulerImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  store %"class.blink::scheduler::MainThreadSchedulerImpl"* %1, %"class.blink::scheduler::MainThreadSchedulerImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL37kVeryHighPriorityForCompositingAlwaysE) #8
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL39kVeryHighPriorityForCompositingWhenFastE) #8
  br i1 %7, label %15, label %8

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL42kVeryHighPriorityForCompositingAlternatingE) #8
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL37kVeryHighPriorityForCompositingBudgetE) #8
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL41kVeryHighPriorityForCompositingAfterDelayE) #8
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %2, %6, %8, %10, %12
  %16 = phi i32 [ 1, %2 ], [ 2, %6 ], [ 3, %8 ], [ 5, %10 ], [ %14, %12 ]
  store i32 %16, i32* %4, align 8
  %17 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 2
  store i8 2, i8* %17, align 4
  %18 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 3
  store i8 4, i8* %18, align 1
  %19 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %3, align 8
  %20 = bitcast %"class.blink::scheduler::MainThreadSchedulerImpl"* %19 to %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)***
  %21 = load %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)**, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)** %21, i64 32
  %23 = load %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)** %22, align 8
  %24 = tail call %"class.base::TickClock"* %23(%"class.blink::scheduler::MainThreadSchedulerImpl"* %19) #8
  %25 = bitcast %"class.base::TickClock"* %24 to i64 (%"class.base::TickClock"*)***
  %26 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %26, i64 2
  %28 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %27, align 8
  %29 = tail call i64 %28(%"class.base::TickClock"* %24) #8
  %30 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"* bitcast ({ %"struct.base::Feature"*, i8*, i32 }* @_ZN5blink9schedulerL23kCompositingDelayLengthE to %"struct.base::FeatureParam"*)) #8
  %32 = sext i32 %31 to i64
  %33 = mul nsw i64 %32, 1000
  %34 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 6, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 7
  store i8 2, i8* %35, align 8
  %36 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 9
  %37 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 10
  %39 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL41kPrioritizeCompositingUntilBeginMainFrameE) #8
  %40 = zext i1 %39 to i32
  store i32 %40, i32* %38, align 8
  %41 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 11
  store i8 0, i8* %41, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9scheduler29CompositorPriorityExperiments28GetExperimentFromFeatureListEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL37kVeryHighPriorityForCompositingAlwaysE) #8
  br i1 %1, label %11, label %2

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL39kVeryHighPriorityForCompositingWhenFastE) #8
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL42kVeryHighPriorityForCompositingAlternatingE) #8
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL37kVeryHighPriorityForCompositingBudgetE) #8
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink9schedulerL41kVeryHighPriorityForCompositingAfterDelayE) #8
  %10 = select i1 %9, i32 4, i32 0
  br label %11

11:                                               ; preds = %8, %6, %4, %2, %0
  %12 = phi i32 [ 1, %0 ], [ 2, %2 ], [ 3, %4 ], [ 5, %6 ], [ %10, %8 ]
  ret i32 %12
}

declare i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperimentsD2Ev(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"** %2, align 8
  store %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* null, %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %3 to void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)***
  %7 = load void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)**, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)** %7, i64 1
  %9 = load void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)** %8, align 8
  tail call void %9(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* nonnull %3) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9scheduler29CompositorPriorityExperiments18IsExperimentActiveEv(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink9scheduler29CompositorPriorityExperiments21GetCompositorPriorityEv(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %21 [
    i32 1, label %22
    i32 2, label %4
    i32 3, label %11
    i32 4, label %14
    i32 5, label %17
    i32 0, label %20
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  %6 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::MainThreadSchedulerImpl", %"class.blink::scheduler::MainThreadSchedulerImpl"* %6, i64 0, i32 40, i32 44
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i8 4, i8 2
  br label %22

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 2
  %13 = load i8, i8* %12, align 4
  br label %22

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 1
  br label %22

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 7
  %19 = load i8, i8* %18, align 8
  br label %22

20:                                               ; preds = %1
  br label %22

21:                                               ; preds = %1
  unreachable

22:                                               ; preds = %4, %1, %20, %17, %14, %11
  %23 = phi i8 [ 4, %20 ], [ %19, %17 ], [ %16, %14 ], [ %13, %11 ], [ 2, %1 ], [ %10, %4 ]
  ret i8 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments32OnMainThreadSchedulerInitializedEv(%"class.blink::scheduler::CompositorPriorityExperiments"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 5
  br i1 %4, label %5, label %37

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  %7 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %6, align 8
  %8 = tail call %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl19CompositorTaskQueueEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %7) #8
  %9 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %6, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::MainThreadSchedulerImpl", %"class.blink::scheduler::MainThreadSchedulerImpl"* %9, i64 0, i32 9
  %11 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"* bitcast ({ %"struct.base::Feature"*, i8*, i32 }* @_ZN5blink9schedulerL38kInitialCompositorBudgetInMillisecondsE to %"struct.base::FeatureParam"*)) #8
  %12 = sext i32 %11 to i64
  %13 = mul nsw i64 %12, 1000
  %14 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam.621"* nonnull @_ZN5blink9schedulerL29kCompositorBudgetRecoveryRateE) #8
  %15 = tail call i8* @_Znwm(i64 32) #9
  %16 = bitcast i8* %15 to %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*
  %17 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %6, align 8
  tail call void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerC2EPS1_PNS0_23MainThreadSchedulerImplEPNS0_19MainThreadTaskQueueEPNS0_27TraceableVariableControllerEN4base9TimeDeltaEd(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* nonnull %16, %"class.blink::scheduler::CompositorPriorityExperiments"* %0, %"class.blink::scheduler::MainThreadSchedulerImpl"* %17, %"class.blink::scheduler::MainThreadTaskQueue"* %8, %"class.blink::scheduler::TraceableVariableController"* %10, i64 %13, double %14) #8
  %18 = ptrtoint i8* %15 to i64
  %19 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 9
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %5
  %25 = bitcast %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %21 to void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)***
  %26 = load void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)**, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)** %26, i64 1
  %28 = load void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)** %27, align 8
  tail call void %28(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* nonnull %21) #8
  br label %29

29:                                               ; preds = %24, %5
  %30 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %8, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"* nonnull %8) #8
  %36 = bitcast %"class.blink::scheduler::MainThreadTaskQueue"* %8 to i8*
  tail call void @_ZdlPv(i8* %36) #9
  br label %37

37:                                               ; preds = %35, %31, %29, %1
  ret void
}

declare %"class.blink::scheduler::MainThreadTaskQueue"* @_ZN5blink9scheduler23MainThreadSchedulerImpl19CompositorTaskQueueEv(%"class.blink::scheduler::MainThreadSchedulerImpl"*) local_unnamed_addr #1

declare double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam.621"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments29OnMainThreadSchedulerShutdownEv(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"** %2, align 8
  store %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* null, %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %3 to void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)***
  %7 = load void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)**, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)** %7, i64 1
  %9 = load void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)*, void (%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*)** %8, align 8
  tail call void %9(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* nonnull %3) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments20OnWillBeginMainFrameEv(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 11
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments15OnTaskCompletedEPNS0_19MainThreadTaskQueueEN4base16sequence_manager9TaskQueue13QueuePriorityEPNS6_10TaskTimingE(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture, %"class.blink::scheduler::MainThreadTaskQueue"* readonly, i8 zeroext, %"class.base::sequence_manager::TaskQueue::TaskTiming"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = icmp eq %"class.blink::scheduler::MainThreadTaskQueue"* %1, null
  br i1 %5, label %98, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::scheduler::MainThreadTaskQueue", %"class.blink::scheduler::MainThreadTaskQueue"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 8
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 10
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 11
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  store i8 0, i8* %15, align 4
  br label %19

19:                                               ; preds = %10, %14, %18, %6
  %20 = phi i1 [ true, %18 ], [ false, %14 ], [ false, %6 ], [ true, %10 ]
  %21 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %98 [
    i32 5, label %65
    i32 2, label %23
    i32 3, label %26
    i32 4, label %40
  ]

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  %25 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %24, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %25) #8
  br label %98

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 2
  %28 = load i8, i8* %27, align 4
  %29 = icmp eq i8 %28, 2
  %30 = and i1 %20, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  store i8 4, i8* %27, align 4
  %32 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  %33 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %32, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %33) #8
  br label %98

34:                                               ; preds = %26
  %35 = icmp eq i8 %28, 4
  br i1 %35, label %36, label %98

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 2
  store i8 2, i8* %37, align 4
  %38 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  %39 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %38, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %39) #8
  br label %98

40:                                               ; preds = %19
  br i1 %20, label %41, label %46

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 3
  store i8 4, i8* %42, align 1
  %43 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %3, i64 0, i32 4, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %44, i64* %45, align 8
  br label %59

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %3, i64 0, i32 4, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 5, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = sub nsw i64 %48, %50
  %52 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 6, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp slt i64 %51, %53
  %55 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 3
  br i1 %54, label %56, label %58

56:                                               ; preds = %46
  %57 = load i8, i8* %55, align 1
  br label %59

58:                                               ; preds = %46
  store i8 2, i8* %55, align 1
  br label %59

59:                                               ; preds = %56, %58, %41
  %60 = phi i8 [ %57, %56 ], [ 2, %58 ], [ 4, %41 ]
  %61 = icmp eq i8 %60, %2
  br i1 %61, label %98, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  %64 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %63, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %64) #8
  br label %98

65:                                               ; preds = %19
  %66 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %67 = load %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"** %66, align 8
  br i1 %20, label %68, label %75

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %67, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %69, align 8
  %71 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %3, i64 0, i32 3, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %3, i64 0, i32 4, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPool17RecordTaskRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksES6_(%"class.blink::scheduler::CPUTimeBudgetPool"* %70, %"class.base::sequence_manager::TaskQueue"* null, i64 %72, i64 %74) #8
  br label %75

75:                                               ; preds = %68, %65
  %76 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %3, i64 0, i32 4, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %67, i64 0, i32 2, i32 0, i32 0, i32 0
  %79 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %78, align 8
  %80 = tail call zeroext i1 @_ZNK5blink9scheduler17CPUTimeBudgetPool13CanRunTasksAtEN4base9TimeTicksEb(%"class.blink::scheduler::CPUTimeBudgetPool"* %79, i64 %77, i1 zeroext false) #8
  %81 = xor i1 %80, true
  %82 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %67, i64 0, i32 3
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = zext i8 %83 to i32
  %85 = zext i1 %81 to i32
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %98, label %87

87:                                               ; preds = %75
  %88 = zext i1 %81 to i8
  store i8 %88, i8* %82, align 8
  %89 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %67, i64 0, i32 1
  %90 = load %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::CompositorPriorityExperiments"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %90, i64 0, i32 7
  br i1 %80, label %95, label %92

92:                                               ; preds = %87
  store i8 4, i8* %91, align 8
  %93 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %90, i64 0, i32 0
  %94 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %93, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %94) #8
  br label %98

95:                                               ; preds = %87
  store i8 2, i8* %91, align 8
  %96 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %90, i64 0, i32 0
  %97 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %96, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %97) #8
  br label %98

98:                                               ; preds = %95, %92, %75, %23, %34, %36, %31, %59, %62, %19, %4
  ret void
}

declare void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController15OnTaskCompletedEPNS0_19MainThreadTaskQueueEPN4base16sequence_manager9TaskQueue10TaskTimingEb(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* nocapture, %"class.blink::scheduler::MainThreadTaskQueue"* nocapture readnone, %"class.base::sequence_manager::TaskQueue::TaskTiming"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %3, label %5, label %12

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %6, align 8
  %8 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 3, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 4, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPool17RecordTaskRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksES6_(%"class.blink::scheduler::CPUTimeBudgetPool"* %7, %"class.base::sequence_manager::TaskQueue"* null, i64 %9, i64 %11) #8
  br label %12

12:                                               ; preds = %5, %4
  %13 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 4, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK5blink9scheduler17CPUTimeBudgetPool13CanRunTasksAtEN4base9TimeTicksEb(%"class.blink::scheduler::CPUTimeBudgetPool"* %16, i64 %14, i1 zeroext false) #8
  %18 = xor i1 %17, true
  %19 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 3
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = zext i8 %20 to i32
  %22 = zext i1 %18 to i32
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %32, label %24

24:                                               ; preds = %12
  %25 = zext i1 %18 to i8
  store i8 %25, i8* %19, align 8
  %26 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 1
  %27 = load %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::CompositorPriorityExperiments"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %27, i64 0, i32 7
  %29 = select i1 %17, i8 2, i8 4
  store i8 %29, i8* %28, align 8
  %30 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %27, i64 0, i32 0
  %31 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %30, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %31) #8
  br label %32

32:                                               ; preds = %24, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments17OnBudgetExhaustedEv(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 7
  store i8 4, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  %4 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %3, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments19OnBudgetReplenishedEv(%"class.blink::scheduler::CompositorPriorityExperiments"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 7
  store i8 2, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %0, i64 0, i32 0
  %4 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %3, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerC2EPS1_PNS0_23MainThreadSchedulerImplEPNS0_19MainThreadTaskQueueEPNS0_27TraceableVariableControllerEN4base9TimeDeltaEd(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadTaskQueue"*, %"class.blink::scheduler::TraceableVariableController"*, i64, double) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 1
  store %"class.blink::scheduler::CompositorPriorityExperiments"* %1, %"class.blink::scheduler::CompositorPriorityExperiments"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::unique_ptr.0"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 3
  store i8 0, i8* %12, align 8
  %13 = bitcast %"class.blink::scheduler::MainThreadSchedulerImpl"* %2 to %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)***
  %14 = load %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)**, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)** %14, i64 32
  %16 = load %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)*, %"class.base::TickClock"* (%"class.blink::scheduler::MainThreadSchedulerImpl"*)** %15, align 8
  %17 = tail call %"class.base::TickClock"* %16(%"class.blink::scheduler::MainThreadSchedulerImpl"* %2) #8
  %18 = bitcast %"class.base::TickClock"* %17 to i64 (%"class.base::TickClock"*)***
  %19 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, i64 2
  %21 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::TickClock"* %17) #8
  %23 = tail call noalias i8* @malloc(i64 160) #8
  %24 = bitcast i8* %23 to %"class.blink::scheduler::CPUTimeBudgetPool"*
  %25 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPoolC1EPKcPNS0_20BudgetPoolControllerEPNS0_27TraceableVariableControllerEN4base9TimeTicksE(%"class.blink::scheduler::CPUTimeBudgetPool"* %24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), %"class.blink::scheduler::BudgetPoolController"* %25, %"class.blink::scheduler::TraceableVariableController"* %4, i64 %22) #8
  %26 = ptrtoint i8* %23 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %10, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %27, align 8
  store i64 %26, i64* %11, align 8
  %29 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %28, null
  %30 = bitcast i8* %23 to %"class.blink::scheduler::CPUTimeBudgetPool"*
  br i1 %29, label %37, label %31

31:                                               ; preds = %7
  %32 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %28 to void (%"class.blink::scheduler::CPUTimeBudgetPool"*)***
  %33 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)**, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %33, i64 1
  %35 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %34, align 8
  tail call void %35(%"class.blink::scheduler::CPUTimeBudgetPool"* nonnull %28) #8
  %36 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %27, align 8
  br label %37

37:                                               ; preds = %31, %7
  %38 = phi %"class.blink::scheduler::CPUTimeBudgetPool"* [ %36, %31 ], [ %30, %7 ]
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPool22SetMinBudgetLevelToRunEN4base9TimeTicksENS2_9TimeDeltaE(%"class.blink::scheduler::CPUTimeBudgetPool"* %38, i64 %22, i64 %5) #8
  %39 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %27, align 8
  tail call void @_ZN5blink9scheduler17CPUTimeBudgetPool25SetTimeBudgetRecoveryRateEN4base9TimeTicksEd(%"class.blink::scheduler::CPUTimeBudgetPool"* %39, i64 %22, double %6) #8
  %40 = bitcast %"class.std::__1::unique_ptr.0"* %10 to %"class.blink::scheduler::BudgetPool"**
  %41 = load %"class.blink::scheduler::BudgetPool"*, %"class.blink::scheduler::BudgetPool"** %40, align 8
  tail call void @_ZN5blink9scheduler19MainThreadTaskQueue15AddToBudgetPoolEN4base9TimeTicksEPNS0_10BudgetPoolE(%"class.blink::scheduler::MainThreadTaskQueue"* %3, i64 %22, %"class.blink::scheduler::BudgetPool"* %41) #8
  ret void
}

declare void @_ZN5blink9scheduler17CPUTimeBudgetPool22SetMinBudgetLevelToRunEN4base9TimeTicksENS2_9TimeDeltaE(%"class.blink::scheduler::CPUTimeBudgetPool"*, i64, i64) local_unnamed_addr #1

declare void @_ZN5blink9scheduler17CPUTimeBudgetPool25SetTimeBudgetRecoveryRateEN4base9TimeTicksEd(%"class.blink::scheduler::CPUTimeBudgetPool"*, i64, double) local_unnamed_addr #1

declare void @_ZN5blink9scheduler19MainThreadTaskQueue15AddToBudgetPoolEN4base9TimeTicksEPNS0_10BudgetPoolE(%"class.blink::scheduler::MainThreadTaskQueue"*, i64, %"class.blink::scheduler::BudgetPool"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerD2Ev(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  store %"class.blink::scheduler::CPUTimeBudgetPool"* null, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %4 to void (%"class.blink::scheduler::CPUTimeBudgetPool"*)***
  %8 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)**, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %8, i64 1
  %10 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %9, align 8
  tail call void %10(%"class.blink::scheduler::CPUTimeBudgetPool"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerD0Ev(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  store %"class.blink::scheduler::CPUTimeBudgetPool"* null, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::CPUTimeBudgetPool"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::scheduler::CPUTimeBudgetPool"* %4 to void (%"class.blink::scheduler::CPUTimeBudgetPool"*)***
  %8 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)**, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %8, i64 1
  %10 = load void (%"class.blink::scheduler::CPUTimeBudgetPool"*)*, void (%"class.blink::scheduler::CPUTimeBudgetPool"*)** %9, align 8
  tail call void %10(%"class.blink::scheduler::CPUTimeBudgetPool"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController35UpdateQueueSchedulingLifecycleStateEN4base9TimeTicksEPNS3_16sequence_manager9TaskQueueE(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* nocapture, i64, %"class.base::sequence_manager::TaskQueue"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink9scheduler17CPUTimeBudgetPool13CanRunTasksAtEN4base9TimeTicksEb(%"class.blink::scheduler::CPUTimeBudgetPool"* %5, i64 %1, i1 zeroext false) #8
  %7 = xor i1 %6, true
  %8 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = zext i8 %9 to i32
  %11 = zext i1 %7 to i32
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %3
  %14 = zext i1 %7 to i8
  store i8 %14, i8* %8, align 8
  %15 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 1
  %16 = load %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::CompositorPriorityExperiments"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %16, i64 0, i32 7
  %18 = select i1 %6, i8 2, i8 4
  store i8 %18, i8* %17, align 8
  %19 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %16, i64 0, i32 0
  %20 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %19, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %20) #8
  br label %21

21:                                               ; preds = %13, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController27UpdateCompositorBudgetStateEN4base9TimeTicksE(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::CPUTimeBudgetPool"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink9scheduler17CPUTimeBudgetPool13CanRunTasksAtEN4base9TimeTicksEb(%"class.blink::scheduler::CPUTimeBudgetPool"* %4, i64 %1, i1 zeroext false) #8
  %6 = xor i1 %5, true
  %7 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = zext i8 %8 to i32
  %10 = zext i1 %6 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = zext i1 %6 to i8
  store i8 %13, i8* %7, align 8
  %14 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* %0, i64 0, i32 1
  %15 = load %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.blink::scheduler::CompositorPriorityExperiments"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %15, i64 0, i32 7
  %17 = select i1 %5, i8 2, i8 4
  store i8 %17, i8* %16, align 8
  %18 = getelementptr inbounds %"class.blink::scheduler::CompositorPriorityExperiments", %"class.blink::scheduler::CompositorPriorityExperiments"* %15, i64 0, i32 0
  %19 = load %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::MainThreadSchedulerImpl"** %18, align 8
  tail call void @_ZN5blink9scheduler23MainThreadSchedulerImpl54OnCompositorPriorityExperimentUpdateCompositorPriorityEv(%"class.blink::scheduler::MainThreadSchedulerImpl"* %19) #8
  br label %20

20:                                               ; preds = %12, %2
  ret void
}

declare zeroext i1 @_ZNK5blink9scheduler17CPUTimeBudgetPool13CanRunTasksAtEN4base9TimeTicksEb(%"class.blink::scheduler::CPUTimeBudgetPool"*, i64, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink9scheduler17CPUTimeBudgetPool17RecordTaskRunTimeEPN4base16sequence_manager9TaskQueueENS2_9TimeTicksES6_(%"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.base::sequence_manager::TaskQueue"*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController20AddQueueToBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController25RemoveQueueFromBudgetPoolEPN4base16sequence_manager9TaskQueueEPNS0_10BudgetPoolE(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController20UnregisterBudgetPoolEPNS0_10BudgetPoolE(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.blink::scheduler::BudgetPool"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9scheduler29CompositorPriorityExperiments30CompositorBudgetPoolController11IsThrottledEPN4base16sequence_manager9TaskQueueE(%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"*, %"class.base::sequence_manager::TaskQueue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind
declare void @_ZN5blink9scheduler19MainThreadTaskQueueD1Ev(%"class.blink::scheduler::MainThreadTaskQueue"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN5blink9scheduler17CPUTimeBudgetPoolC1EPKcPNS0_20BudgetPoolControllerEPNS0_27TraceableVariableControllerEN4base9TimeTicksE(%"class.blink::scheduler::CPUTimeBudgetPool"*, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.blink::scheduler::TraceableVariableController"*, i64) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
