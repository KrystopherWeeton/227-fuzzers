; ModuleID = '../../ui/platform_window/platform_window_delegate.cc'
source_filename = "../../ui/platform_window/platform_window_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::PlatformWindowDelegate::BoundsChange" = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.ui::PlatformWindowDelegate" = type { i32 (...)** }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }

@_ZTVN2ui22PlatformWindowDelegateE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::PlatformWindowDelegate"*)* @_ZN2ui22PlatformWindowDelegateD2Ev to i8*), i8* bitcast (void (%"class.ui::PlatformWindowDelegate"*)* @_ZN2ui22PlatformWindowDelegateD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i64, i32 } (%"class.ui::PlatformWindowDelegate"*)* @_ZN2ui22PlatformWindowDelegate23GetMinimumSizeForWindowEv to i8*), i8* bitcast ({ i64, i32 } (%"class.ui::PlatformWindowDelegate"*)* @_ZN2ui22PlatformWindowDelegate23GetMaximumSizeForWindowEv to i8*), i8* bitcast (void (%class.SkPath*, %"class.ui::PlatformWindowDelegate"*)* @_ZN2ui22PlatformWindowDelegate35GetWindowMaskForWindowShapeInPixelsEv to i8*), i8* bitcast (void (%"class.ui::PlatformWindowDelegate"*, i1)* @_ZN2ui22PlatformWindowDelegate28OnSurfaceFrameLockingChangedEb to i8*), i8* bitcast (i64 (%"class.ui::PlatformWindowDelegate"*)* @_ZN2ui22PlatformWindowDelegate11GetMenuTypeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN2ui22PlatformWindowDelegate12BoundsChangeC1Ev = hidden unnamed_addr alias void (%"struct.ui::PlatformWindowDelegate::BoundsChange"*), void (%"struct.ui::PlatformWindowDelegate::BoundsChange"*)* @_ZN2ui22PlatformWindowDelegate12BoundsChangeC2Ev
@_ZN2ui22PlatformWindowDelegate12BoundsChangeC1ERKN3gfx4RectE = hidden unnamed_addr alias void (%"struct.ui::PlatformWindowDelegate::BoundsChange"*, %"class.gfx::Rect"*), void (%"struct.ui::PlatformWindowDelegate::BoundsChange"*, %"class.gfx::Rect"*)* @_ZN2ui22PlatformWindowDelegate12BoundsChangeC2ERKN3gfx4RectE
@_ZN2ui22PlatformWindowDelegate12BoundsChangeD1Ev = hidden unnamed_addr alias void (%"struct.ui::PlatformWindowDelegate::BoundsChange"*), void (%"struct.ui::PlatformWindowDelegate::BoundsChange"*)* @_ZN2ui22PlatformWindowDelegate12BoundsChangeD2Ev
@_ZN2ui22PlatformWindowDelegateD1Ev = hidden unnamed_addr alias void (%"class.ui::PlatformWindowDelegate"*), void (%"class.ui::PlatformWindowDelegate"*)* @_ZN2ui22PlatformWindowDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC2Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 16, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22PlatformWindowDelegate12BoundsChangeC2ERKN3gfx4RectE(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nocapture, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::PlatformWindowDelegate::BoundsChange"* %0 to i8*
  %4 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui22PlatformWindowDelegate12BoundsChangeD2Ev(%"struct.ui::PlatformWindowDelegate::BoundsChange"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui22PlatformWindowDelegateC2Ev(%"class.ui::PlatformWindowDelegate"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::PlatformWindowDelegate", %"class.ui::PlatformWindowDelegate"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN2ui22PlatformWindowDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui22PlatformWindowDelegateD2Ev(%"class.ui::PlatformWindowDelegate"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2ui22PlatformWindowDelegateD0Ev(%"class.ui::PlatformWindowDelegate"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i32 } @_ZN2ui22PlatformWindowDelegate23GetMinimumSizeForWindowEv(%"class.ui::PlatformWindowDelegate"* nocapture readnone) unnamed_addr #2 align 2 {
  ret { i64, i32 } { i64 0, i32 undef }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i32 } @_ZN2ui22PlatformWindowDelegate23GetMaximumSizeForWindowEv(%"class.ui::PlatformWindowDelegate"* nocapture readnone) unnamed_addr #2 align 2 {
  ret { i64, i32 } { i64 0, i32 undef }
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui22PlatformWindowDelegate35GetWindowMaskForWindowShapeInPixelsEv(%class.SkPath* noalias sret, %"class.ui::PlatformWindowDelegate"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %0) #7
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui22PlatformWindowDelegate28OnSurfaceFrameLockingChangedEb(%"class.ui::PlatformWindowDelegate"* nocapture, i1 zeroext) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2ui22PlatformWindowDelegate11GetMenuTypeEv(%"class.ui::PlatformWindowDelegate"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i64 0
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
