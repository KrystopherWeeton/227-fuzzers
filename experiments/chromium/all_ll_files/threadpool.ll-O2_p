; ModuleID = '../../third_party/unrar/src/threadpool.cpp'
source_filename = "../../third_party/unrar/src/threadpool.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_mutexattr_t = type { i32 }
%union.pthread_condattr_t = type { i32 }
%union.pthread_attr_t = type { i64, [48 x i8] }

@ErrHandler = external global %class.ErrorHandler, align 4
@.str = private unnamed_addr constant [36 x i32] [i32 10, i32 84, i32 104, i32 114, i32 101, i32 97, i32 100, i32 32, i32 112, i32 111, i32 111, i32 108, i32 32, i32 105, i32 110, i32 105, i32 116, i32 105, i32 97, i32 108, i32 105, i32 122, i32 97, i32 116, i32 105, i32 111, i32 110, i32 32, i32 102, i32 97, i32 105, i32 108, i32 101, i32 100, i32 46, i32 0], align 4
@.str.1 = private unnamed_addr constant [33 x i32] [i32 10, i32 112, i32 116, i32 104, i32 114, i32 101, i32 97, i32 100, i32 95, i32 99, i32 114, i32 101, i32 97, i32 116, i32 101, i32 32, i32 102, i32 97, i32 105, i32 108, i32 101, i32 100, i32 44, i32 32, i32 99, i32 111, i32 100, i32 101, i32 32, i32 37, i32 100, i32 10, i32 0], align 4
@.str.2 = private unnamed_addr constant [28 x i32] [i32 10, i32 112, i32 116, i32 104, i32 114, i32 101, i32 97, i32 100, i32 95, i32 99, i32 111, i32 110, i32 100, i32 95, i32 119, i32 97, i32 105, i32 116, i32 32, i32 101, i32 114, i32 114, i32 111, i32 114, i32 32, i32 37, i32 100, i32 0], align 4

@_ZN10ThreadPoolC1Ej = hidden unnamed_addr alias void (%class.ThreadPool*, i32), void (%class.ThreadPool*, i32)* @_ZN10ThreadPoolC2Ej
@_ZN10ThreadPoolD1Ev = hidden unnamed_addr alias void (%class.ThreadPool*), void (%class.ThreadPool*)* @_ZN10ThreadPoolD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z14GetNumberOfCPUv() local_unnamed_addr #0 {
  %1 = tail call i64 @sysconf(i32 84) #4
  %2 = trunc i64 %1 to i32
  %3 = icmp eq i32 %2, 0
  %4 = select i1 %3, i32 1, i32 %2
  ret i32 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i64 @sysconf(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z18GetNumberOfThreadsv() local_unnamed_addr #0 {
  %1 = tail call i64 @sysconf(i32 84) #4
  %2 = trunc i64 %1 to i32
  %3 = icmp eq i32 %2, 0
  %4 = select i1 %3, i32 1, i32 %2
  %5 = icmp ult i32 %4, 64
  %6 = select i1 %5, i32 %4, i32 64
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ThreadPoolC2Ej(%class.ThreadPool*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 0
  %4 = icmp ult i32 %1, 64
  %5 = select i1 %4, i32 %1, i32 64
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 1, i32 %5
  store i32 %7, i32* %3, align 8
  %8 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 7
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 14
  %11 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %10, %union.pthread_mutexattr_t* null) #4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 11
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 8
  store i32 0, i32* %14, align 4
  br i1 %12, label %15, label %31

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 12
  %17 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %16, %union.pthread_condattr_t* null) #4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 13
  %21 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %20, %union.pthread_mutexattr_t* null) #4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 9
  %25 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %24, %union.pthread_condattr_t* null) #4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 10
  %29 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %28, %union.pthread_mutexattr_t* null) #4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %2, %15, %19, %23, %27
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([36 x i32], [36 x i32]* @.str, i64 0, i64 0)) #4
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 2) #4
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 5
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 6
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 3
  store i32 0, i32* %35, align 4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_condattr_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #2

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #3

declare void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ThreadPoolD2Ev(%class.ThreadPool*) unnamed_addr #0 align 2 {
  tail call void @_ZN10ThreadPool8WaitDoneEv(%class.ThreadPool* %0)
  %2 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 7
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 10
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #4
  %5 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, 64
  store i32 %7, i32* %5, align 4
  %8 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #4
  %9 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 9
  %10 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %9) #4
  %11 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %23, %1
  %15 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 14
  %16 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %15) #4
  %17 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 12
  %18 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %17) #4
  %19 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 13
  %20 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %19) #4
  %21 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %9) #4
  %22 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #4
  ret void

23:                                               ; preds = %1, %23
  %24 = phi i64 [ %28, %23 ], [ 0, %1 ]
  %25 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 1, i64 %24
  %26 = load i64, i64* %25, align 8
  %27 = tail call i32 @pthread_join(i64 %26, i8** null) #4
  %28 = add nuw nsw i64 %24, 1
  %29 = load i32, i32* %11, align 8
  %30 = zext i32 %29 to i64
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %23, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ThreadPool8WaitDoneEv(%class.ThreadPool*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 11
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 10
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #4
  %9 = load i32, i32* %2, align 4
  %10 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, %9
  store i32 %12, i32* %10, align 4
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #4
  %14 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 9
  %15 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %14) #4
  %16 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 13
  %17 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %16) #4
  %18 = load i8, i8* %6, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 12
  br label %22

22:                                               ; preds = %20, %26
  %23 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %21, %union.pthread_mutex_t* %16) #4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([28 x i32], [28 x i32]* @.str.2, i64 0, i64 0), i32 %23) #4
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 2) #4
  br label %26

26:                                               ; preds = %22, %25
  %27 = load i8, i8* %6, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %22

29:                                               ; preds = %26, %5
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %16) #4
  br label %31

31:                                               ; preds = %1, %29
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_cond_broadcast(%union.pthread_cond_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_cond_destroy(%union.pthread_cond_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ThreadPool13CreateThreadsEv(%class.ThreadPool*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca [100 x i32], align 16
  %4 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.ThreadPool* %0 to i8*
  %9 = bitcast i64* %2 to i8*
  %10 = bitcast [100 x i32]* %3 to i8*
  %11 = getelementptr inbounds [100 x i32], [100 x i32]* %3, i64 0, i64 0
  %12 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 2
  br label %14

13:                                               ; preds = %20, %1
  ret void

14:                                               ; preds = %7, %20
  %15 = phi i64 [ 0, %7 ], [ %25, %20 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  store i64 -6148914691236517206, i64* %2, align 8
  %16 = call i32 @pthread_create(i64* nonnull %2, %union.pthread_attr_t* null, i8* (i8*)* nonnull @_ZN10ThreadPool10PoolThreadEPv, i8* %8) #4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 400, i1 false) #4
  %19 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %11, i64 100, i32* getelementptr inbounds ([33 x i32], [33 x i32]* @.str.1, i64 0, i64 0), i32 %16) #4
  call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* nonnull %11) #4
  call void @_ZN12ErrorHandler9SysErrMsgEv(%class.ErrorHandler* nonnull @ErrHandler) #4
  call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 2) #4
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %10) #4
  br label %20

20:                                               ; preds = %14, %18
  %21 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  %22 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 1, i64 %15
  store i64 %21, i64* %22, align 8
  %23 = load i32, i32* %12, align 8
  %24 = add i32 %23, 1
  store i32 %24, i32* %12, align 8
  %25 = add nuw nsw i64 %15, 1
  %26 = load i32, i32* %4, align 8
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %14, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN10ThreadPool10PoolThreadEPv(i8*) #0 align 2 {
  %2 = bitcast i8* %0 to %class.ThreadPool*
  tail call void @_ZN10ThreadPool14PoolThreadLoopEv(%class.ThreadPool* %2)
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ThreadPool14PoolThreadLoopEv(%class.ThreadPool*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ThreadPool::QueueEntry", align 8
  %3 = bitcast %"struct.ThreadPool::QueueEntry"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #4
  %4 = getelementptr inbounds %"struct.ThreadPool::QueueEntry", %"struct.ThreadPool::QueueEntry"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.ThreadPool::QueueEntry", %"struct.ThreadPool::QueueEntry"* %2, i64 0, i32 1
  %6 = bitcast %"struct.ThreadPool::QueueEntry"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = call zeroext i1 @_ZN10ThreadPool13GetQueuedTaskEPNS_10QueueEntryE(%class.ThreadPool* %0, %"struct.ThreadPool::QueueEntry"* nonnull %2)
  br i1 %7, label %8, label %28

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 14
  %10 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 13
  %12 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 11
  %13 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 12
  br label %14

14:                                               ; preds = %8, %25
  %15 = load void (i8*)*, void (i8*)** %4, align 8
  %16 = load i8*, i8** %5, align 8
  tail call void %15(i8* %16) #4
  %17 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %9) #4
  %18 = load i32, i32* %10, align 4
  %19 = add i32 %18, -1
  store i32 %19, i32* %10, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %14
  %22 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %11) #4
  store i8 0, i8* %12, align 8
  %23 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %13) #4
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #4
  br label %25

25:                                               ; preds = %21, %14
  %26 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #4
  %27 = call zeroext i1 @_ZN10ThreadPool13GetQueuedTaskEPNS_10QueueEntryE(%class.ThreadPool* %0, %"struct.ThreadPool::QueueEntry"* nonnull %2)
  br i1 %27, label %14, label %28

28:                                               ; preds = %25, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10ThreadPool13GetQueuedTaskEPNS_10QueueEntryE(%class.ThreadPool*, %"struct.ThreadPool::QueueEntry"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 10
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #4
  %5 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 9
  br label %10

10:                                               ; preds = %8, %14
  %11 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %9, %union.pthread_mutex_t* %3) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([28 x i32], [28 x i32]* @.str.2, i64 0, i64 0), i32 %11) #4
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 2) #4
  br label %14

14:                                               ; preds = %10, %13
  %15 = load i32, i32* %5, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %10, label %17

17:                                               ; preds = %14, %2
  %18 = phi i32 [ %6, %2 ], [ %15, %14 ]
  %19 = add i32 %18, -1
  store i32 %19, i32* %5, align 4
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #4
  %21 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 7
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %37

24:                                               ; preds = %17
  %25 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 14
  %26 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %25) #4
  %27 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 6
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 4, i64 %29
  %31 = bitcast %"struct.ThreadPool::QueueEntry"* %1 to i8*
  %32 = bitcast %"struct.ThreadPool::QueueEntry"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false)
  %33 = load i32, i32* %27, align 4
  %34 = add i32 %33, 1
  %35 = and i32 %34, 63
  store i32 %35, i32* %27, align 4
  %36 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %25) #4
  br label %37

37:                                               ; preds = %17, %24
  %38 = phi i1 [ true, %24 ], [ false, %17 ]
  ret i1 %38
}

; Function Attrs: nounwind
declare i32 @pthread_cond_signal(%union.pthread_cond_t*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ThreadPool7AddTaskEPFvPvES0_(%class.ThreadPool*, void (i8*)*, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN10ThreadPool13CreateThreadsEv(%class.ThreadPool* %0)
  br label %8

8:                                                ; preds = %7, %3
  %9 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp ugt i32 %10, 63
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN10ThreadPool8WaitDoneEv(%class.ThreadPool* %0)
  %13 = load i32, i32* %9, align 4
  br label %14

14:                                               ; preds = %12, %8
  %15 = phi i32 [ %13, %12 ], [ %10, %8 ]
  %16 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 4, i64 %18, i32 0
  store void (i8*)* %1, void (i8*)** %19, align 8
  %20 = load i32, i32* %16, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %class.ThreadPool, %class.ThreadPool* %0, i64 0, i32 4, i64 %21, i32 1
  store i8* %2, i8** %22, align 8
  %23 = add i32 %20, 1
  %24 = and i32 %23, 63
  store i32 %24, i32* %16, align 8
  %25 = add i32 %15, 1
  store i32 %25, i32* %9, align 4
  ret void
}

declare i32 @pthread_join(i64, i8**) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i32 @swprintf(i32*, i64, i32*, ...) local_unnamed_addr #2

declare void @_ZN12ErrorHandler9SysErrMsgEv(%class.ErrorHandler*) local_unnamed_addr #3

declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
