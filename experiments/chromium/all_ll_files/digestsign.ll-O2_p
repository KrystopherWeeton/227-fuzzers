; ModuleID = '../../third_party/boringssl/src/crypto/evp/digestsign.c'
source_filename = "../../third_party/boringssl/src/crypto/evp/digestsign.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_md_pctx_ops = type { void (%struct.evp_pkey_ctx_st*)*, %struct.evp_pkey_ctx_st* (%struct.evp_pkey_ctx_st*)* }
%struct.evp_pkey_ctx_st = type { %struct.evp_pkey_method_st*, %struct.engine_st*, %struct.evp_pkey_st*, %struct.evp_pkey_st*, i32, i8* }
%struct.evp_pkey_method_st = type { i32, i32 (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, void (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* }
%struct.engine_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }
%struct.cbs_st = type opaque
%struct.cbb_st = type opaque
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type { i32, i32, i32, void (%struct.env_md_ctx_st*)*, void (%struct.env_md_ctx_st*, i8*, i64)*, void (%struct.env_md_ctx_st*, i8*)*, i32, i32 }

@.str = private unnamed_addr constant [56 x i8] c"../../third_party/boringssl/src/crypto/evp/digestsign.c\00", align 1
@md_pctx_ops = internal constant %struct.evp_md_pctx_ops { void (%struct.evp_pkey_ctx_st*)* @EVP_PKEY_CTX_free, %struct.evp_pkey_ctx_st* (%struct.evp_pkey_ctx_st*)* @EVP_PKEY_CTX_dup }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_DigestSignInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %6 = tail call fastcc i32 @do_sigver_init(%struct.env_md_ctx_st* %0, %struct.evp_pkey_ctx_st** %1, %struct.env_md_st* %2, %struct.engine_st* %3, %struct.evp_pkey_st* %4, i32 0)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @do_sigver_init(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*, i32) unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 2
  %8 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %7, align 8
  %9 = icmp eq %struct.evp_pkey_ctx_st* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = tail call %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new(%struct.evp_pkey_st* %4, %struct.engine_st* %3) #3
  store %struct.evp_pkey_ctx_st* %11, %struct.evp_pkey_ctx_st** %7, align 8
  %12 = icmp eq %struct.evp_pkey_ctx_st* %11, null
  br i1 %12, label %53, label %13

13:                                               ; preds = %6, %10
  %14 = phi %struct.evp_pkey_ctx_st* [ %11, %10 ], [ %8, %6 ]
  %15 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 3
  store %struct.evp_md_pctx_ops* @md_pctx_ops, %struct.evp_md_pctx_ops** %15, align 8
  %16 = icmp eq i32 %5, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call i32 @EVP_PKEY_verify_init(%struct.evp_pkey_ctx_st* nonnull %14) #3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %53, label %23

20:                                               ; preds = %13
  %21 = tail call i32 @EVP_PKEY_sign_init(%struct.evp_pkey_ctx_st* nonnull %14) #3
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %53, label %23

23:                                               ; preds = %17, %20
  %24 = icmp eq %struct.env_md_st* %2, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %7, align 8
  %27 = tail call i32 @EVP_PKEY_CTX_set_signature_md(%struct.evp_pkey_ctx_st* %26, %struct.env_md_st* nonnull %2) #3
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %53, label %29

29:                                               ; preds = %25, %23
  %30 = icmp eq i32 %5, 0
  %31 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %7, align 8
  %32 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %31, i64 0, i32 0
  %33 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %32, align 8
  br i1 %30, label %34, label %38

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %33, i64 0, i32 5
  %36 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %35, align 8
  %37 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %36, null
  br i1 %37, label %47, label %42

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %33, i64 0, i32 7
  %40 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)** %39, align 8
  %41 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %34, %38
  br i1 %24, label %43, label %44

43:                                               ; preds = %42
  tail call void @ERR_put_error(i32 6, i32 0, i32 119, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 107) #3
  br label %53

44:                                               ; preds = %42
  %45 = tail call i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st* %0, %struct.env_md_st* nonnull %2, %struct.engine_st* %3) #3
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %34, %38, %44
  %48 = icmp eq %struct.evp_pkey_ctx_st** %1, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %47
  %50 = bitcast %struct.evp_pkey_ctx_st** %7 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %struct.evp_pkey_ctx_st** %1 to i64*
  store i64 %51, i64* %52, align 8
  br label %53

53:                                               ; preds = %49, %47, %44, %25, %20, %17, %10, %43
  %54 = phi i32 [ 0, %43 ], [ 0, %10 ], [ 0, %17 ], [ 0, %20 ], [ 0, %25 ], [ 0, %44 ], [ 1, %47 ], [ 1, %49 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %6 = tail call fastcc i32 @do_sigver_init(%struct.env_md_ctx_st* %0, %struct.evp_pkey_ctx_st** %1, %struct.env_md_st* %2, %struct.engine_st* %3, %struct.evp_pkey_st* %4, i32 1)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_DigestSignUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 2
  %5 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %4, align 8
  %6 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %5, i64 0, i32 0
  %7 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %6, align 8
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %7, i64 0, i32 5
  %9 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 133) #3
  br label %14

12:                                               ; preds = %3
  %13 = tail call i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* %0, i8* %1, i64 %2) #3
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ %13, %12 ], [ 0, %11 ]
  ret i32 %15
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare i32 @EVP_DigestUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 2
  %5 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %4, align 8
  %6 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %5, i64 0, i32 0
  %7 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %6, align 8
  %8 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %7, i64 0, i32 7
  %9 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)** %8, align 8
  %10 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 142) #3
  br label %14

12:                                               ; preds = %3
  %13 = tail call i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* %0, i8* %1, i64 %2) #3
  br label %14

14:                                               ; preds = %12, %11
  %15 = phi i32 [ %13, %12 ], [ 0, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_DigestSignFinal(%struct.env_md_ctx_st*, i8*, i64*) local_unnamed_addr #0 {
  %4 = alloca %struct.env_md_ctx_st, align 8
  %5 = alloca [64 x i8], align 16
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 2
  %8 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %7, align 8
  %9 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %8, i64 0, i32 0
  %10 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %9, align 8
  %11 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %10, i64 0, i32 5
  %12 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %11, align 8
  %13 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 152) #3
  br label %43

15:                                               ; preds = %3
  %16 = icmp eq i8* %1, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %15
  %18 = bitcast %struct.env_md_ctx_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #3
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  %20 = bitcast %struct.env_md_ctx_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 64, i1 false)
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #3
  store i32 -1431655766, i32* %6, align 4
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %4) #3
  %22 = call i32 @EVP_MD_CTX_copy_ex(%struct.env_md_ctx_st* nonnull %4, %struct.env_md_ctx_st* %0) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %17
  %25 = call i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st* nonnull %4, i8* nonnull %19, i32* nonnull %6) #3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %24
  %28 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %7, align 8
  %29 = load i32, i32* %6, align 4
  %30 = zext i32 %29 to i64
  %31 = call i32 @EVP_PKEY_sign(%struct.evp_pkey_ctx_st* %28, i8* nonnull %1, i64* %2, i8* nonnull %19, i64 %30) #3
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i32
  br label %34

34:                                               ; preds = %24, %17, %27
  %35 = phi i32 [ 0, %24 ], [ 0, %17 ], [ %33, %27 ]
  %36 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %4) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #3
  br label %43

37:                                               ; preds = %15
  %38 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 0
  %39 = load %struct.env_md_st*, %struct.env_md_st** %38, align 8
  %40 = tail call i64 @EVP_MD_size(%struct.env_md_st* %39) #3
  %41 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %7, align 8
  %42 = tail call i32 @EVP_PKEY_sign(%struct.evp_pkey_ctx_st* %41, i8* null, i64* %2, i8* null, i64 %40) #3
  br label %43

43:                                               ; preds = %37, %34, %14
  %44 = phi i32 [ %35, %34 ], [ %42, %37 ], [ 0, %14 ]
  ret i32 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #1

declare i32 @EVP_MD_CTX_copy_ex(%struct.env_md_ctx_st*, %struct.env_md_ctx_st*) local_unnamed_addr #1

declare i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st*, i8*, i32*) local_unnamed_addr #1

declare i32 @EVP_PKEY_sign(%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #1

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @EVP_MD_size(%struct.env_md_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.env_md_ctx_st, align 8
  %5 = alloca [64 x i8], align 16
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 2
  %8 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %7, align 8
  %9 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %8, i64 0, i32 0
  %10 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %9, align 8
  %11 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %10, i64 0, i32 7
  %12 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)** %11, align 8
  %13 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 178) #3
  br label %35

15:                                               ; preds = %3
  %16 = bitcast %struct.env_md_ctx_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #3
  %17 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  %18 = bitcast %struct.env_md_ctx_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %17) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 64, i1 false)
  %19 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #3
  store i32 -1431655766, i32* %6, align 4
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %4) #3
  %20 = call i32 @EVP_MD_CTX_copy_ex(%struct.env_md_ctx_st* nonnull %4, %struct.env_md_ctx_st* %0) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %15
  %23 = call i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st* nonnull %4, i8* nonnull %17, i32* nonnull %6) #3
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %7, align 8
  %27 = load i32, i32* %6, align 4
  %28 = zext i32 %27 to i64
  %29 = call i32 @EVP_PKEY_verify(%struct.evp_pkey_ctx_st* %26, i8* %1, i64 %2, i8* nonnull %17, i64 %28) #3
  %30 = icmp ne i32 %29, 0
  %31 = zext i1 %30 to i32
  br label %32

32:                                               ; preds = %22, %15, %25
  %33 = phi i32 [ 0, %22 ], [ 0, %15 ], [ %31, %25 ]
  %34 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %4) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %17) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #3
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i32 [ %33, %32 ], [ 0, %14 ]
  ret i32 %36
}

declare i32 @EVP_PKEY_verify(%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_DigestSign(%struct.env_md_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 2
  %7 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %6, align 8
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %7, i64 0, i32 0
  %9 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %8, align 8
  %10 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 5
  %11 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %10, align 8
  %12 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %5
  %14 = icmp eq i8* %1, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = tail call i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* %0, i8* %3, i64 %4) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15, %13
  %19 = tail call i32 @EVP_DigestSignFinal(%struct.env_md_ctx_st* %0, i8* %1, i64* %2)
  br label %27

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 6
  %22 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)** %21, align 8
  %23 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 210) #3
  br label %27

25:                                               ; preds = %20
  %26 = tail call i32 %22(%struct.evp_pkey_ctx_st* %7, i8* %1, i64* %2, i8* %3, i64 %4) #3
  br label %27

27:                                               ; preds = %15, %25, %24, %18
  %28 = phi i32 [ %19, %18 ], [ 0, %24 ], [ %26, %25 ], [ 0, %15 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_DigestVerify(%struct.env_md_ctx_st*, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.env_md_ctx_st, %struct.env_md_ctx_st* %0, i64 0, i32 2
  %7 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %6, align 8
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %7, i64 0, i32 0
  %9 = load %struct.evp_pkey_method_st*, %struct.evp_pkey_method_st** %8, align 8
  %10 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 7
  %11 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)** %10, align 8
  %12 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %5
  %14 = tail call i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* %0, i8* %3, i64 %4) #3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st* %0, i8* %1, i64 %2)
  %18 = icmp ne i32 %17, 0
  %19 = zext i1 %18 to i32
  br label %27

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct.evp_pkey_method_st, %struct.evp_pkey_method_st* %9, i64 0, i32 8
  %22 = load i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)** %21, align 8
  %23 = icmp eq i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call void @ERR_put_error(i32 6, i32 0, i32 125, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 226) #3
  br label %27

25:                                               ; preds = %20
  %26 = tail call i32 %22(%struct.evp_pkey_ctx_st* %7, i8* %1, i64 %2, i8* %3, i64 %4) #3
  br label %27

27:                                               ; preds = %16, %13, %25, %24
  %28 = phi i32 [ 0, %24 ], [ %26, %25 ], [ 0, %13 ], [ %19, %16 ]
  ret i32 %28
}

declare %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new(%struct.evp_pkey_st*, %struct.engine_st*) local_unnamed_addr #1

declare i32 @EVP_PKEY_verify_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #1

declare i32 @EVP_PKEY_sign_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #1

declare i32 @EVP_PKEY_CTX_set_signature_md(%struct.evp_pkey_ctx_st*, %struct.env_md_st*) local_unnamed_addr #1

declare i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st*, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #1

declare void @EVP_PKEY_CTX_free(%struct.evp_pkey_ctx_st*) #1

declare %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_dup(%struct.evp_pkey_ctx_st*) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
