; ModuleID = '../../third_party/blink/common/frame/frame_visual_properties.cc'
source_filename = "../../third_party/blink/common/frame/frame_visual_properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::FrameVisualProperties" = type { %"struct.blink::ScreenInfo", i8, i8, i32, double, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", %"class.viz::LocalSurfaceId" }
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Rect"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZN5blink21FrameVisualPropertiesC1Ev = hidden unnamed_addr alias void (%"struct.blink::FrameVisualProperties"*), void (%"struct.blink::FrameVisualProperties"*)* @_ZN5blink21FrameVisualPropertiesC2Ev
@_ZN5blink21FrameVisualPropertiesC1ERKS0_ = hidden unnamed_addr alias void (%"struct.blink::FrameVisualProperties"*, %"struct.blink::FrameVisualProperties"*), void (%"struct.blink::FrameVisualProperties"*, %"struct.blink::FrameVisualProperties"*)* @_ZN5blink21FrameVisualPropertiesC2ERKS0_
@_ZN5blink21FrameVisualPropertiesD1Ev = hidden unnamed_addr alias void (%"struct.blink::FrameVisualProperties"*), void (%"struct.blink::FrameVisualProperties"*)* @_ZN5blink21FrameVisualPropertiesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FrameVisualPropertiesC2Ev(%"struct.blink::FrameVisualProperties"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 0
  tail call void @_ZN5blink10ScreenInfoC1Ev(%"struct.blink::ScreenInfo"* %2) #7
  %3 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 3
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 4
  store double 0.000000e+00, double* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 5
  store float 1.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 6
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 7, i32 0
  %10 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 112, i1 false)
  ret void
}

declare void @_ZN5blink10ScreenInfoC1Ev(%"struct.blink::ScreenInfo"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FrameVisualPropertiesC2ERKS0_(%"struct.blink::FrameVisualProperties"*, %"struct.blink::FrameVisualProperties"* dereferenceable(688)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 0
  tail call void @_ZN5blink10ScreenInfoC1ERKS0_(%"struct.blink::ScreenInfo"* %3, %"struct.blink::ScreenInfo"* dereferenceable(552) %4) #7
  %5 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 48, i1 false)
  %7 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 10
  %8 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 10
  %9 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #7
  %10 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 10, i32 0, i32 1
  %11 = bitcast %"class.gfx::Rect"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 4
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %2
  %19 = icmp ugt i64 %16, 1152921504606846975
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #8
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #9
  %24 = bitcast i8* %23 to %"class.gfx::Rect"*
  %25 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 10, i32 0, i32 1
  %26 = bitcast %"class.gfx::Rect"** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %24, i64 %16
  %29 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Rect"* %28, %"class.gfx::Rect"** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %31 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %30, align 8
  %32 = load i64, i64* %11, align 8
  %33 = bitcast %"class.gfx::Rect"** %25 to i64*
  %34 = ptrtoint i8* %23 to i64
  %35 = ptrtoint %"class.gfx::Rect"* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %22
  %39 = lshr exact i64 %36, 4
  %40 = bitcast %"class.gfx::Rect"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %40, i64 %36, i1 false) #7
  %41 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %24, i64 %39
  %42 = ptrtoint %"class.gfx::Rect"* %41 to i64
  br label %43

43:                                               ; preds = %38, %22
  %44 = phi i64 [ %42, %38 ], [ %34, %22 ]
  store i64 %44, i64* %33, align 8
  br label %45

45:                                               ; preds = %2, %43
  %46 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 11
  %47 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 11
  %48 = bitcast %"class.gfx::Rect"* %46 to i8*
  %49 = bitcast %"class.gfx::Rect"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 40, i1 false)
  %50 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 14, i32 0
  %51 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 14, i32 0
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %50, align 8
  %53 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 14, i32 1
  %54 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 14, i32 1
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %53, align 4
  %56 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 14, i32 2
  %57 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 14, i32 2
  %58 = bitcast %"class.base::UnguessableToken"* %56 to i8*
  %59 = bitcast %"class.base::UnguessableToken"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #7
  ret void
}

declare void @_ZN5blink10ScreenInfoC1ERKS0_(%"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"* dereferenceable(552)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21FrameVisualPropertiesD2Ev(%"struct.blink::FrameVisualProperties"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %2, align 8
  %4 = icmp eq %"class.gfx::Rect"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.gfx::Rect"* %3 to i64
  %7 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 10, i32 0, i32 1
  %8 = bitcast %"class.gfx::Rect"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.gfx::Rect"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 0
  tail call void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"* %11) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10ScreenInfoD1Ev(%"struct.blink::ScreenInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(688) %"struct.blink::FrameVisualProperties"* @_ZN5blink21FrameVisualPropertiesaSERKS0_(%"struct.blink::FrameVisualProperties"* returned, %"struct.blink::FrameVisualProperties"* dereferenceable(688)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(552) %"struct.blink::ScreenInfo"* @_ZN5blink10ScreenInfoaSERKS0_(%"struct.blink::ScreenInfo"* %3, %"struct.blink::ScreenInfo"* dereferenceable(552) %4) #7
  %6 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 48, i1 false)
  %8 = icmp eq %"struct.blink::FrameVisualProperties"* %0, %1
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 10, i32 0, i32 0
  %12 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 10, i32 0, i32 1
  %14 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %13, align 8
  tail call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %10, %"class.gfx::Rect"* %12, %"class.gfx::Rect"* %14) #7
  br label %15

15:                                               ; preds = %2, %9
  %16 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %0, i64 0, i32 11
  %17 = getelementptr inbounds %"struct.blink::FrameVisualProperties", %"struct.blink::FrameVisualProperties"* %1, i64 0, i32 11
  %18 = bitcast %"class.gfx::Rect"* %16 to i8*
  %19 = bitcast %"class.gfx::Rect"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 64, i1 false)
  ret %"struct.blink::FrameVisualProperties"* %0
}

declare dereferenceable(552) %"struct.blink::ScreenInfo"* @_ZN5blink10ScreenInfoaSERKS0_(%"struct.blink::ScreenInfo"*, %"struct.blink::ScreenInfo"* dereferenceable(552)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Rect"* %2 to i64
  %5 = ptrtoint %"class.gfx::Rect"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Rect"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Rect"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Rect"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Rect"* %24, %"class.gfx::Rect"* %2
  %26 = ptrtoint %"class.gfx::Rect"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #7
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Rect"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #7
  %42 = inttoptr i64 %35 to %"class.gfx::Rect"*
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Rect"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %16, i64 %28
  store %"class.gfx::Rect"* %48, %"class.gfx::Rect"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Rect"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #7
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #8
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #8
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #9
  %75 = bitcast i8* %74 to %"class.gfx::Rect"*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Rect"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %72
  store %"class.gfx::Rect"* %79, %"class.gfx::Rect"** %8, align 8
  %80 = bitcast %"class.gfx::Rect"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #7
  %86 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Rect"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
