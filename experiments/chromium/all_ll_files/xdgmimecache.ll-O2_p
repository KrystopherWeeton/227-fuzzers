; ModuleID = '../../base/third_party/xdg_mime/xdgmimecache.c'
source_filename = "../../base/third_party/xdg_mime/xdgmimecache.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct._XdgMimeCache = type { i32, i32, i64, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.MimeWeight = type { i8*, i32 }

@_caches = external local_unnamed_addr global %struct._XdgMimeCache**, align 8
@xdg_mime_type_unknown = external constant [0 x i8], align 1
@xdg_mime_type_empty = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"text/\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"inode/\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"/*\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c" - %s\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct._XdgMimeCache* @_xdg_mime_cache_ref(%struct._XdgMimeCache* returned) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret %struct._XdgMimeCache* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_xdg_mime_cache_unref(%struct._XdgMimeCache* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = tail call i32 @munmap(i8* %8, i64 %10) #16
  %12 = bitcast %struct._XdgMimeCache* %0 to i8*
  tail call void @free(i8* %12) #16
  br label %13

13:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct._XdgMimeCache* @_xdg_mime_cache_new_from_file(i8* nocapture readonly) local_unnamed_addr #1 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %3) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 144, i1 false)
  br label %4

4:                                                ; preds = %7, %1
  %5 = tail call i32 (i8*, i32, ...) @open64(i8* %0, i32 0, i32 0) #16
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = tail call i32* @__errno_location() #17
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %4, label %53

11:                                               ; preds = %4
  %12 = icmp slt i32 %5, 0
  br i1 %12, label %53, label %13

13:                                               ; preds = %11
  %14 = bitcast %struct.stat* %2 to %struct.stat64*
  %15 = call i32 @__fxstat64(i32 1, i32 %5, %struct.stat64* nonnull %14) #16
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 8
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %19, 4
  br i1 %20, label %50, label %21

21:                                               ; preds = %17
  %22 = call i8* @mmap64(i8* null, i64 %19, i32 1, i32 1, i32 %5, i64 0) #16
  %23 = icmp eq i8* %22, inttoptr (i64 -1 to i8*)
  br i1 %23, label %50, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %22, i64 2
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 2
  %28 = call i16 @llvm.bswap.i16(i16 %27) #16
  %29 = bitcast i8* %22 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp ne i16 %30, 256
  %32 = add i16 %28, -1
  %33 = icmp ugt i16 %32, 1
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %24
  %36 = load i64, i64* %18, align 8
  %37 = call i32 @munmap(i8* %22, i64 %36) #16
  br label %50

38:                                               ; preds = %24
  %39 = zext i16 %28 to i32
  %40 = call noalias i8* @malloc(i64 24) #16
  %41 = bitcast i8* %40 to %struct._XdgMimeCache*
  %42 = getelementptr inbounds i8, i8* %40, i64 4
  %43 = bitcast i8* %42 to i32*
  store i32 %39, i32* %43, align 4
  %44 = bitcast i8* %40 to i32*
  store i32 1, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %40, i64 16
  %46 = bitcast i8* %45 to i8**
  store i8* %22, i8** %46, align 8
  %47 = load i64, i64* %18, align 8
  %48 = getelementptr inbounds i8, i8* %40, i64 8
  %49 = bitcast i8* %48 to i64*
  store i64 %47, i64* %49, align 8
  br label %50

50:                                               ; preds = %35, %38, %17, %13, %21
  %51 = phi %struct._XdgMimeCache* [ null, %13 ], [ null, %17 ], [ null, %21 ], [ null, %35 ], [ %41, %38 ]
  %52 = call i32 @close(i32 %5) #16
  br label %53

53:                                               ; preds = %7, %50, %11
  %54 = phi %struct._XdgMimeCache* [ null, %11 ], [ %51, %50 ], [ null, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %3) #16
  ret %struct._XdgMimeCache* %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare i32 @close(i32) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_xdg_mime_cache_get_max_buffer_extents() local_unnamed_addr #8 {
  %1 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %2 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %1, align 8
  %3 = icmp eq %struct._XdgMimeCache* %2, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %0, %4
  %5 = phi i64 [ %22, %4 ], [ 0, %0 ]
  %6 = phi %struct._XdgMimeCache* [ %24, %4 ], [ %2, %0 ]
  %7 = phi i32 [ %21, %4 ], [ 0, %0 ]
  %8 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %6, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #16
  %14 = add i32 %13, 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %9, i64 %15
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #16
  %20 = icmp ugt i32 %7, %19
  %21 = select i1 %20, i32 %7, i32 %19
  %22 = add nuw i64 %5, 1
  %23 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %1, i64 %22
  %24 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %23, align 8
  %25 = icmp eq %struct._XdgMimeCache* %24, null
  br i1 %25, label %26, label %4

26:                                               ; preds = %4, %0
  %27 = phi i32 [ 0, %0 ], [ %21, %4 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_xdg_mime_cache_get_mime_type_for_data(i8* nocapture readonly, i64, i32*) local_unnamed_addr #1 {
  %4 = tail call fastcc i8* @cache_get_mime_type_for_data(i8* %0, i64 %1, i32* %2, i8** null, i32 0)
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @cache_get_mime_type_for_data(i8* nocapture readonly, i64, i32*, i8** nocapture readonly, i32) unnamed_addr #1 {
  %6 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %7 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %6, align 8
  %8 = icmp eq %struct._XdgMimeCache* %7, null
  br i1 %8, label %91, label %9

9:                                                ; preds = %5, %81
  %10 = phi i64 [ %87, %81 ], [ 0, %5 ]
  %11 = phi %struct._XdgMimeCache* [ %89, %81 ], [ %7, %5 ]
  %12 = phi i32 [ %86, %81 ], [ 0, %5 ]
  %13 = phi i8* [ %85, %81 ], [ null, %5 ]
  %14 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %11, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 24
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #16
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %15, i64 %20
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %19, 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %15, i64 %25
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = tail call i32 @llvm.bswap.i32(i32 %28) #16
  %30 = icmp eq i32 %23, 0
  br i1 %30, label %81, label %31

31:                                               ; preds = %9
  %32 = tail call i32 @llvm.bswap.i32(i32 %23) #16
  %33 = zext i32 %32 to i64
  br label %34

34:                                               ; preds = %77, %31
  %35 = phi i32 [ 0, %31 ], [ %78, %77 ]
  %36 = phi i64 [ 0, %31 ], [ %79, %77 ]
  %37 = trunc i64 %36 to i32
  %38 = shl i32 %37, 4
  %39 = add i32 %38, %29
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %15, i64 %40
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = tail call i32 @llvm.bswap.i32(i32 %43) #16
  %45 = add i32 %39, 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %15, i64 %46
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = tail call i32 @llvm.bswap.i32(i32 %49) #16
  %51 = add i32 %39, 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %15, i64 %52
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = tail call i32 @llvm.bswap.i32(i32 %55) #16
  %57 = add i32 %39, 12
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %15, i64 %58
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = tail call i32 @llvm.bswap.i32(i32 %61) #16
  %63 = icmp eq i32 %55, 0
  br i1 %63, label %77, label %66

64:                                               ; preds = %66
  %65 = icmp ult i32 %72, %56
  br i1 %65, label %66, label %77

66:                                               ; preds = %34, %64
  %67 = phi i32 [ %72, %64 ], [ 0, %34 ]
  %68 = shl i32 %67, 5
  %69 = add i32 %68, %62
  %70 = tail call fastcc i32 @cache_magic_matchlet_compare(%struct._XdgMimeCache* nonnull %11, i32 %69, i8* %0, i64 %1) #16
  %71 = icmp eq i32 %70, 0
  %72 = add nuw i32 %67, 1
  br i1 %71, label %64, label %73

73:                                               ; preds = %66
  %74 = zext i32 %50 to i64
  %75 = getelementptr inbounds i8, i8* %15, i64 %74
  %76 = icmp eq i8* %75, null
  br i1 %76, label %77, label %81

77:                                               ; preds = %64, %73, %34
  %78 = phi i32 [ %35, %34 ], [ %44, %73 ], [ %35, %64 ]
  %79 = add nuw nsw i64 %36, 1
  %80 = icmp ult i64 %79, %33
  br i1 %80, label %34, label %81

81:                                               ; preds = %73, %77, %9
  %82 = phi i32 [ 0, %9 ], [ %44, %73 ], [ %78, %77 ]
  %83 = phi i8* [ null, %9 ], [ %75, %73 ], [ null, %77 ]
  %84 = icmp sgt i32 %82, %12
  %85 = select i1 %84, i8* %83, i8* %13
  %86 = select i1 %84, i32 %82, i32 %12
  %87 = add nuw i64 %10, 1
  %88 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %6, i64 %87
  %89 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %88, align 8
  %90 = icmp eq %struct._XdgMimeCache* %89, null
  br i1 %90, label %91, label %9

91:                                               ; preds = %81, %5
  %92 = phi i8* [ null, %5 ], [ %85, %81 ]
  %93 = phi i32 [ 0, %5 ], [ %86, %81 ]
  %94 = icmp eq i32* %2, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  store i32 %93, i32* %2, align 4
  br label %96

96:                                               ; preds = %91, %95
  %97 = icmp sgt i32 %93, 0
  br i1 %97, label %98, label %117

98:                                               ; preds = %96
  %99 = icmp sgt i32 %4, 0
  br i1 %99, label %100, label %129

100:                                              ; preds = %98
  %101 = zext i32 %4 to i64
  br label %102

102:                                              ; preds = %114, %100
  %103 = phi i64 [ 0, %100 ], [ %115, %114 ]
  %104 = getelementptr inbounds i8*, i8** %3, i64 %103
  %105 = load i8*, i8** %104, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %114, label %107

107:                                              ; preds = %102
  %108 = tail call i32 @_xdg_mime_cache_mime_type_subclass(i8* nonnull %105, i8* %92)
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %107
  %111 = and i64 %103, 4294967295
  %112 = getelementptr inbounds i8*, i8** %3, i64 %111
  %113 = load i8*, i8** %112, align 8
  br label %129

114:                                              ; preds = %107, %102
  %115 = add nuw nsw i64 %103, 1
  %116 = icmp eq i64 %115, %101
  br i1 %116, label %117, label %102

117:                                              ; preds = %114, %96
  %118 = icmp sgt i32 %4, 0
  br i1 %118, label %119, label %129

119:                                              ; preds = %117
  %120 = zext i32 %4 to i64
  br label %123

121:                                              ; preds = %123
  %122 = icmp eq i64 %128, %120
  br i1 %122, label %129, label %123

123:                                              ; preds = %121, %119
  %124 = phi i64 [ 0, %119 ], [ %128, %121 ]
  %125 = getelementptr inbounds i8*, i8** %3, i64 %124
  %126 = load i8*, i8** %125, align 8
  %127 = icmp eq i8* %126, null
  %128 = add nuw nsw i64 %124, 1
  br i1 %127, label %121, label %129

129:                                              ; preds = %123, %121, %98, %117, %110
  %130 = phi i8* [ %113, %110 ], [ null, %117 ], [ %92, %98 ], [ %126, %123 ], [ null, %121 ]
  ret i8* %130
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_xdg_mime_cache_get_mime_type_for_file(i8*, %struct.stat* readonly) local_unnamed_addr #1 {
  %3 = alloca [10 x i8*], align 16
  %4 = alloca %struct.stat, align 8
  %5 = bitcast [10 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 80, i1 false)
  %6 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 144, i1 false)
  %7 = icmp eq i8* %0, null
  br i1 %7, label %86, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @_xdg_utf8_validate(i8* nonnull %0) #16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %86, label %11

11:                                               ; preds = %8
  %12 = tail call i8* @_xdg_get_base_name(i8* nonnull %0) #16
  %13 = getelementptr inbounds [10 x i8*], [10 x i8*]* %3, i64 0, i64 0
  %14 = call fastcc i32 @cache_glob_lookup_file_name(i8* %12, i8** nonnull %13, i32 10)
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = load i8*, i8** %13, align 16
  br label %86

18:                                               ; preds = %11
  %19 = icmp eq %struct.stat* %1, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = bitcast %struct.stat* %4 to %struct.stat64*
  %22 = call i32 @__xstat64(i32 1, i8* nonnull %0, %struct.stat64* nonnull %21) #16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %86

24:                                               ; preds = %20, %18
  %25 = phi %struct.stat* [ %1, %18 ], [ %4, %20 ]
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %25, i64 0, i32 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %86, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.stat, %struct.stat* %25, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 61440
  %33 = icmp eq i32 %32, 32768
  br i1 %33, label %34, label %86

34:                                               ; preds = %29
  %35 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %36 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %35, align 8
  %37 = icmp eq %struct._XdgMimeCache* %36, null
  br i1 %37, label %62, label %38

38:                                               ; preds = %34, %38
  %39 = phi i64 [ %56, %38 ], [ 0, %34 ]
  %40 = phi %struct._XdgMimeCache* [ %58, %38 ], [ %36, %34 ]
  %41 = phi i32 [ %55, %38 ], [ 0, %34 ]
  %42 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %40, i64 0, i32 3
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 24
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = call i32 @llvm.bswap.i32(i32 %46) #16
  %48 = add i32 %47, 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = call i32 @llvm.bswap.i32(i32 %52) #16
  %54 = icmp ugt i32 %41, %53
  %55 = select i1 %54, i32 %41, i32 %53
  %56 = add nuw i64 %39, 1
  %57 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %35, i64 %56
  %58 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %57, align 8
  %59 = icmp eq %struct._XdgMimeCache* %58, null
  br i1 %59, label %60, label %38

60:                                               ; preds = %38
  %61 = sext i32 %55 to i64
  br label %62

62:                                               ; preds = %60, %34
  %63 = phi i64 [ 0, %34 ], [ %61, %60 ]
  %64 = call noalias i8* @malloc(i64 %63) #16
  %65 = icmp eq i8* %64, null
  br i1 %65, label %86, label %66

66:                                               ; preds = %62
  %67 = call %struct._IO_FILE* @fopen64(i8* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %68 = icmp eq %struct._IO_FILE* %67, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @free(i8* nonnull %64) #16
  br label %86

70:                                               ; preds = %66
  %71 = call i64 @fread(i8* nonnull %64, i64 1, i64 %63, %struct._IO_FILE* nonnull %67)
  %72 = call i32 @ferror(%struct._IO_FILE* nonnull %67) #16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  call void @free(i8* nonnull %64) #16
  %75 = call i32 @fclose(%struct._IO_FILE* nonnull %67)
  br label %86

76:                                               ; preds = %70
  %77 = shl i64 %71, 32
  %78 = ashr exact i64 %77, 32
  %79 = call fastcc i8* @cache_get_mime_type_for_data(i8* nonnull %64, i64 %78, i32* null, i8** nonnull %13, i32 %14)
  %80 = icmp eq i8* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = call i8* @_xdg_binary_or_text_fallback(i8* nonnull %64, i64 %78) #16
  br label %83

83:                                               ; preds = %76, %81
  %84 = phi i8* [ %79, %76 ], [ %82, %81 ]
  call void @free(i8* nonnull %64) #16
  %85 = call i32 @fclose(%struct._IO_FILE* nonnull %67)
  br label %86

86:                                               ; preds = %62, %29, %24, %20, %8, %2, %83, %74, %69, %16
  %87 = phi i8* [ %17, %16 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_unknown, i64 0, i64 0), %69 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_unknown, i64 0, i64 0), %74 ], [ %84, %83 ], [ null, %2 ], [ null, %8 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_unknown, i64 0, i64 0), %20 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_empty, i64 0, i64 0), %24 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_unknown, i64 0, i64 0), %29 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_unknown, i64 0, i64 0), %62 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #16
  ret i8* %87
}

declare i32 @_xdg_utf8_validate(i8*) local_unnamed_addr #7

declare i8* @_xdg_get_base_name(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cache_glob_lookup_file_name(i8*, i8** nocapture, i32) unnamed_addr #1 {
  %4 = alloca [10 x %struct.MimeWeight], align 16
  %5 = bitcast [10 x %struct.MimeWeight]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 160, i1 false)
  %6 = tail call noalias i8* @strdup(i8* %0) #16
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %3, %9
  %10 = phi i8 [ %17, %9 ], [ %7, %3 ]
  %11 = phi i8* [ %16, %9 ], [ %6, %3 ]
  %12 = add i8 %10, -65
  %13 = icmp ult i8 %12, 26
  %14 = add i8 %10, 32
  %15 = select i1 %13, i8 %14, i8 %10
  %16 = getelementptr inbounds i8, i8* %11, i64 1
  store i8 %15, i8* %11, align 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %9

19:                                               ; preds = %9, %3
  %20 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %21 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %20, align 8
  %22 = icmp eq %struct._XdgMimeCache* %21, null
  br i1 %22, label %148, label %23

23:                                               ; preds = %19, %75
  %24 = phi i64 [ %76, %75 ], [ 0, %19 ]
  %25 = phi %struct._XdgMimeCache* [ %78, %75 ], [ %21, %19 ]
  %26 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %25, i64 0, i32 3
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 12
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = tail call i32 @llvm.bswap.i32(i32 %30) #16
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %27, i64 %32
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = tail call i32 @llvm.bswap.i32(i32 %35) #16
  %37 = add i32 %36, -1
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %75, label %39

39:                                               ; preds = %23
  %40 = add i32 %31, 4
  br label %41

41:                                               ; preds = %71, %39
  %42 = phi i32 [ %37, %39 ], [ %73, %71 ]
  %43 = phi i32 [ 0, %39 ], [ %72, %71 ]
  %44 = add nsw i32 %43, %42
  %45 = sdiv i32 %44, 2
  %46 = mul nsw i32 %45, 12
  %47 = add i32 %40, %46
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %27, i64 %48
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = tail call i32 @llvm.bswap.i32(i32 %51) #16
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %27, i64 %53
  %55 = tail call i32 @strcmp(i8* %54, i8* %6) #18
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %41
  %58 = add nsw i32 %45, 1
  br label %71

59:                                               ; preds = %41
  %60 = icmp eq i32 %55, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = add nsw i32 %45, -1
  br label %71

63:                                               ; preds = %59
  %64 = add i32 %47, 8
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %27, i64 %65
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 65536
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %80, label %89

71:                                               ; preds = %61, %57
  %72 = phi i32 [ %58, %57 ], [ %43, %61 ]
  %73 = phi i32 [ %42, %57 ], [ %62, %61 ]
  %74 = icmp slt i32 %73, %72
  br i1 %74, label %75, label %41

75:                                               ; preds = %71, %23
  %76 = add nuw i64 %24, 1
  %77 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %20, i64 %76
  %78 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %77, align 8
  %79 = icmp eq %struct._XdgMimeCache* %78, null
  br i1 %79, label %89, label %23

80:                                               ; preds = %63
  %81 = add i32 %47, 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %27, i64 %82
  %84 = bitcast i8* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = tail call i32 @llvm.bswap.i32(i32 %85) #16
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %27, i64 %87
  store i8* %88, i8** %1, align 8
  tail call void @free(i8* %6) #16
  br label %275

89:                                               ; preds = %75, %63
  br i1 %22, label %148, label %90

90:                                               ; preds = %89, %134
  %91 = phi i64 [ %135, %134 ], [ 0, %89 ]
  %92 = phi %struct._XdgMimeCache* [ %137, %134 ], [ %21, %89 ]
  %93 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %92, i64 0, i32 3
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 12
  %96 = bitcast i8* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = tail call i32 @llvm.bswap.i32(i32 %97) #16
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %94, i64 %99
  %101 = bitcast i8* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = tail call i32 @llvm.bswap.i32(i32 %102) #16
  %104 = add i32 %103, -1
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %134, label %106

106:                                              ; preds = %90
  %107 = add i32 %98, 4
  br label %108

108:                                              ; preds = %130, %106
  %109 = phi i32 [ %104, %106 ], [ %132, %130 ]
  %110 = phi i32 [ 0, %106 ], [ %131, %130 ]
  %111 = add nsw i32 %110, %109
  %112 = sdiv i32 %111, 2
  %113 = mul nsw i32 %112, 12
  %114 = add i32 %107, %113
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %94, i64 %115
  %117 = bitcast i8* %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = tail call i32 @llvm.bswap.i32(i32 %118) #16
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %94, i64 %120
  %122 = tail call i32 @strcmp(i8* %121, i8* %0) #18
  %123 = icmp slt i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %108
  %125 = add nsw i32 %112, 1
  br label %130

126:                                              ; preds = %108
  %127 = icmp eq i32 %122, 0
  br i1 %127, label %139, label %128

128:                                              ; preds = %126
  %129 = add nsw i32 %112, -1
  br label %130

130:                                              ; preds = %128, %124
  %131 = phi i32 [ %125, %124 ], [ %110, %128 ]
  %132 = phi i32 [ %109, %124 ], [ %129, %128 ]
  %133 = icmp slt i32 %132, %131
  br i1 %133, label %134, label %108

134:                                              ; preds = %130, %90
  %135 = add nuw i64 %91, 1
  %136 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %20, i64 %135
  %137 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %136, align 8
  %138 = icmp eq %struct._XdgMimeCache* %137, null
  br i1 %138, label %150, label %90

139:                                              ; preds = %126
  %140 = add i32 %114, 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %94, i64 %141
  %143 = bitcast i8* %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = tail call i32 @llvm.bswap.i32(i32 %144) #16
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %94, i64 %146
  store i8* %147, i8** %1, align 8
  tail call void @free(i8* %6) #16
  br label %275

148:                                              ; preds = %89, %19
  %149 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %4, i64 0, i64 0
  br label %213

150:                                              ; preds = %134
  %151 = tail call i64 @strlen(i8* %0) #18
  %152 = trunc i64 %151 to i32
  %153 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %4, i64 0, i64 0
  br i1 %22, label %213, label %159

154:                                              ; preds = %159
  %155 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %156 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %155, i64 %181
  %157 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %156, align 8
  %158 = icmp eq %struct._XdgMimeCache* %157, null
  br i1 %158, label %182, label %159

159:                                              ; preds = %150, %154
  %160 = phi i64 [ %181, %154 ], [ 0, %150 ]
  %161 = phi %struct._XdgMimeCache* [ %157, %154 ], [ %21, %150 ]
  %162 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %161, i64 0, i32 3
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 16
  %165 = bitcast i8* %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = tail call i32 @llvm.bswap.i32(i32 %166) #16
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds i8, i8* %163, i64 %168
  %170 = bitcast i8* %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = tail call i32 @llvm.bswap.i32(i32 %171) #16
  %173 = add i32 %167, 4
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds i8, i8* %163, i64 %174
  %176 = bitcast i8* %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = tail call i32 @llvm.bswap.i32(i32 %177) #16
  %179 = call fastcc i32 @cache_glob_node_lookup_suffix(%struct._XdgMimeCache* nonnull %161, i32 %172, i32 %178, i8* %6, i32 %152, i32 0, %struct.MimeWeight* nonnull %153) #16
  %180 = icmp sgt i32 %179, 0
  %181 = add nuw i64 %160, 1
  br i1 %180, label %219, label %154

182:                                              ; preds = %154
  %183 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %155, align 8
  %184 = icmp eq %struct._XdgMimeCache* %183, null
  br i1 %184, label %213, label %190

185:                                              ; preds = %190
  %186 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %187 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %186, i64 %212
  %188 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %187, align 8
  %189 = icmp eq %struct._XdgMimeCache* %188, null
  br i1 %189, label %213, label %190

190:                                              ; preds = %182, %185
  %191 = phi i64 [ %212, %185 ], [ 0, %182 ]
  %192 = phi %struct._XdgMimeCache* [ %188, %185 ], [ %183, %182 ]
  %193 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %192, i64 0, i32 3
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds i8, i8* %194, i64 16
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = tail call i32 @llvm.bswap.i32(i32 %197) #16
  %199 = zext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %194, i64 %199
  %201 = bitcast i8* %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = tail call i32 @llvm.bswap.i32(i32 %202) #16
  %204 = add i32 %198, 4
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds i8, i8* %194, i64 %205
  %207 = bitcast i8* %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = tail call i32 @llvm.bswap.i32(i32 %208) #16
  %210 = call fastcc i32 @cache_glob_node_lookup_suffix(%struct._XdgMimeCache* nonnull %192, i32 %203, i32 %209, i8* %0, i32 %152, i32 1, %struct.MimeWeight* nonnull %153) #16
  %211 = icmp sgt i32 %210, 0
  %212 = add nuw i64 %191, 1
  br i1 %211, label %219, label %185

213:                                              ; preds = %185, %148, %150, %182
  %214 = phi %struct.MimeWeight* [ %153, %182 ], [ %149, %148 ], [ %153, %150 ], [ %153, %185 ]
  %215 = call fastcc i32 @cache_glob_lookup_fnmatch(i8* %6, %struct.MimeWeight* nonnull %214, i32 0)
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %213
  %218 = call fastcc i32 @cache_glob_lookup_fnmatch(i8* %0, %struct.MimeWeight* nonnull %214, i32 1)
  br label %219

219:                                              ; preds = %159, %190, %217, %213
  %220 = phi i32 [ %218, %217 ], [ %215, %213 ], [ %210, %190 ], [ %179, %159 ]
  tail call void @free(i8* %6) #16
  %221 = sext i32 %220 to i64
  call void @qsort(i8* nonnull %5, i64 %221, i64 16, i32 (i8*, i8*)* nonnull @compare_mime_weight) #16
  %222 = icmp sgt i32 %220, %2
  %223 = select i1 %222, i32 %2, i32 %220
  %224 = icmp sgt i32 %223, 0
  br i1 %224, label %225, label %275

225:                                              ; preds = %219
  %226 = sext i32 %223 to i64
  %227 = add nsw i64 %226, -1
  %228 = and i64 %226, 3
  %229 = icmp ult i64 %227, 3
  br i1 %229, label %261, label %230

230:                                              ; preds = %225
  %231 = sub nsw i64 %226, %228
  br label %232

232:                                              ; preds = %232, %230
  %233 = phi i64 [ 0, %230 ], [ %258, %232 ]
  %234 = phi i64 [ %231, %230 ], [ %259, %232 ]
  %235 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %4, i64 0, i64 %233, i32 0
  %236 = bitcast i8** %235 to i64*
  %237 = load i64, i64* %236, align 16
  %238 = getelementptr inbounds i8*, i8** %1, i64 %233
  %239 = bitcast i8** %238 to i64*
  store i64 %237, i64* %239, align 8
  %240 = or i64 %233, 1
  %241 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %4, i64 0, i64 %240, i32 0
  %242 = bitcast i8** %241 to i64*
  %243 = load i64, i64* %242, align 16
  %244 = getelementptr inbounds i8*, i8** %1, i64 %240
  %245 = bitcast i8** %244 to i64*
  store i64 %243, i64* %245, align 8
  %246 = or i64 %233, 2
  %247 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %4, i64 0, i64 %246, i32 0
  %248 = bitcast i8** %247 to i64*
  %249 = load i64, i64* %248, align 16
  %250 = getelementptr inbounds i8*, i8** %1, i64 %246
  %251 = bitcast i8** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = or i64 %233, 3
  %253 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %4, i64 0, i64 %252, i32 0
  %254 = bitcast i8** %253 to i64*
  %255 = load i64, i64* %254, align 16
  %256 = getelementptr inbounds i8*, i8** %1, i64 %252
  %257 = bitcast i8** %256 to i64*
  store i64 %255, i64* %257, align 8
  %258 = add nuw nsw i64 %233, 4
  %259 = add i64 %234, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %232

261:                                              ; preds = %232, %225
  %262 = phi i64 [ 0, %225 ], [ %258, %232 ]
  %263 = icmp eq i64 %228, 0
  br i1 %263, label %275, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %272, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %273, %264 ], [ %228, %261 ]
  %267 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %4, i64 0, i64 %265, i32 0
  %268 = bitcast i8** %267 to i64*
  %269 = load i64, i64* %268, align 16
  %270 = getelementptr inbounds i8*, i8** %1, i64 %265
  %271 = bitcast i8** %270 to i64*
  store i64 %269, i64* %271, align 8
  %272 = add nuw nsw i64 %265, 1
  %273 = add i64 %266, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %264, !llvm.loop !2

275:                                              ; preds = %261, %264, %219, %139, %80
  %276 = phi i32 [ 1, %80 ], [ 1, %139 ], [ %223, %219 ], [ %223, %264 ], [ %223, %261 ]
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #16
  ret i32 %276
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #6

declare i8* @_xdg_binary_or_text_fallback(i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_xdg_mime_cache_get_mime_type_from_file_name(i8*) local_unnamed_addr #1 {
  %2 = alloca i8*, align 8
  %3 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %4 = call fastcc i32 @cache_glob_lookup_file_name(i8* %0, i8** nonnull %2, i32 1)
  %5 = icmp eq i32 %4, 0
  %6 = load i8*, i8** %2, align 8
  %7 = select i1 %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_unknown, i64 0, i64 0), i8* %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #16
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_xdg_mime_cache_get_mime_types_from_file_name(i8*, i8** nocapture, i32) local_unnamed_addr #1 {
  %4 = tail call fastcc i32 @cache_glob_lookup_file_name(i8* %0, i8** %1, i32 %2)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_xdg_mime_cache_mime_type_subclass(i8*, i8*) local_unnamed_addr #1 {
  %3 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %4 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %3, align 8
  %5 = icmp eq %struct._XdgMimeCache* %4, null
  br i1 %5, label %126, label %6

6:                                                ; preds = %2, %59
  %7 = phi i64 [ %60, %59 ], [ 0, %2 ]
  %8 = phi %struct._XdgMimeCache* [ %62, %59 ], [ %4, %2 ]
  %9 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %8, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 4
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = tail call i32 @llvm.bswap.i32(i32 %13) #16
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #16
  %20 = add i32 %19, -1
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %59, label %22

22:                                               ; preds = %6
  %23 = add i32 %14, 4
  br label %24

24:                                               ; preds = %46, %22
  %25 = phi i32 [ %20, %22 ], [ %48, %46 ]
  %26 = phi i32 [ 0, %22 ], [ %47, %46 ]
  %27 = add nsw i32 %26, %25
  %28 = sdiv i32 %27, 2
  %29 = shl nsw i32 %28, 3
  %30 = add i32 %23, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %10, i64 %31
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = tail call i32 @llvm.bswap.i32(i32 %34) #16
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %10, i64 %36
  %38 = tail call i32 @strcmp(i8* %37, i8* %0) #18
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %24
  %41 = add nsw i32 %28, 1
  br label %46

42:                                               ; preds = %24
  %43 = icmp eq i32 %38, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %42
  %45 = add nsw i32 %28, -1
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi i32 [ %41, %40 ], [ %26, %44 ]
  %48 = phi i32 [ %25, %40 ], [ %45, %44 ]
  %49 = icmp slt i32 %48, %47
  br i1 %49, label %59, label %24

50:                                               ; preds = %42
  %51 = add i32 %30, 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %10, i64 %52
  %54 = bitcast i8* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = tail call i32 @llvm.bswap.i32(i32 %55) #16
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %10, i64 %57
  br label %64

59:                                               ; preds = %46, %6
  %60 = add nuw i64 %7, 1
  %61 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %3, i64 %60
  %62 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %61, align 8
  %63 = icmp eq %struct._XdgMimeCache* %62, null
  br i1 %63, label %64, label %6

64:                                               ; preds = %59, %50
  %65 = phi i8* [ %58, %50 ], [ null, %59 ]
  %66 = icmp eq i8* %65, null
  %67 = select i1 %66, i8* %0, i8* %65
  br label %68

68:                                               ; preds = %64, %121
  %69 = phi i64 [ %122, %121 ], [ 0, %64 ]
  %70 = phi %struct._XdgMimeCache* [ %124, %121 ], [ %4, %64 ]
  %71 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %70, i64 0, i32 3
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 4
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = tail call i32 @llvm.bswap.i32(i32 %75) #16
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %72, i64 %77
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = tail call i32 @llvm.bswap.i32(i32 %80) #16
  %82 = add i32 %81, -1
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %121, label %84

84:                                               ; preds = %68
  %85 = add i32 %76, 4
  br label %86

86:                                               ; preds = %108, %84
  %87 = phi i32 [ %82, %84 ], [ %110, %108 ]
  %88 = phi i32 [ 0, %84 ], [ %109, %108 ]
  %89 = add nsw i32 %88, %87
  %90 = sdiv i32 %89, 2
  %91 = shl nsw i32 %90, 3
  %92 = add i32 %85, %91
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %72, i64 %93
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = tail call i32 @llvm.bswap.i32(i32 %96) #16
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %72, i64 %98
  %100 = tail call i32 @strcmp(i8* %99, i8* %1) #18
  %101 = icmp slt i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %86
  %103 = add nsw i32 %90, 1
  br label %108

104:                                              ; preds = %86
  %105 = icmp eq i32 %100, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %104
  %107 = add nsw i32 %90, -1
  br label %108

108:                                              ; preds = %106, %102
  %109 = phi i32 [ %103, %102 ], [ %88, %106 ]
  %110 = phi i32 [ %87, %102 ], [ %107, %106 ]
  %111 = icmp slt i32 %110, %109
  br i1 %111, label %121, label %86

112:                                              ; preds = %104
  %113 = add i32 %92, 4
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %72, i64 %114
  %116 = bitcast i8* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = tail call i32 @llvm.bswap.i32(i32 %117) #16
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %72, i64 %119
  br label %126

121:                                              ; preds = %108, %68
  %122 = add nuw i64 %69, 1
  %123 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %3, i64 %122
  %124 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %123, align 8
  %125 = icmp eq %struct._XdgMimeCache* %124, null
  br i1 %125, label %126, label %68

126:                                              ; preds = %121, %2, %112
  %127 = phi i8* [ %67, %112 ], [ %0, %2 ], [ %67, %121 ]
  %128 = phi i8* [ %120, %112 ], [ null, %2 ], [ null, %121 ]
  %129 = icmp eq i8* %128, null
  %130 = select i1 %129, i8* %1, i8* %128
  %131 = tail call i32 @strcmp(i8* %127, i8* %130) #18
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %259, label %133

133:                                              ; preds = %126
  %134 = tail call i64 @strlen(i8* %130) #18
  %135 = trunc i64 %134 to i32
  %136 = icmp slt i32 %135, 2
  br i1 %136, label %147, label %137

137:                                              ; preds = %133
  %138 = shl i64 %134, 32
  %139 = ashr exact i64 %138, 32
  %140 = getelementptr inbounds i8, i8* %130, i64 %139
  %141 = getelementptr inbounds i8, i8* %140, i64 -2
  %142 = tail call i32 @strcmp(i8* %141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #18
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %137
  %145 = tail call i32 @xdg_mime_media_type_equal(i8* %127, i8* %130) #16
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %259

147:                                              ; preds = %137, %133, %144
  %148 = tail call i32 @strcmp(i8* %130, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #18
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %147
  %151 = tail call i32 @strncmp(i8* %127, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #18
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %259, label %153

153:                                              ; preds = %150, %147
  %154 = tail call i32 @strcmp(i8* %130, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #18
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  %157 = tail call i32 @strncmp(i8* %127, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #18
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %259

159:                                              ; preds = %156, %153
  %160 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %161 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %160, align 8
  %162 = icmp eq %struct._XdgMimeCache* %161, null
  br i1 %162, label %259, label %163

163:                                              ; preds = %159, %253
  %164 = phi %struct._XdgMimeCache** [ %254, %253 ], [ %160, %159 ]
  %165 = phi i64 [ %255, %253 ], [ 0, %159 ]
  %166 = phi %struct._XdgMimeCache* [ %257, %253 ], [ %161, %159 ]
  %167 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %166, i64 0, i32 3
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 8
  %170 = bitcast i8* %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = tail call i32 @llvm.bswap.i32(i32 %171) #16
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %168, i64 %173
  %175 = bitcast i8* %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = tail call i32 @llvm.bswap.i32(i32 %176) #16
  %178 = add i32 %177, -1
  %179 = icmp slt i32 %178, 0
  br i1 %179, label %253, label %180

180:                                              ; preds = %163
  %181 = add i32 %172, 4
  br label %182

182:                                              ; preds = %180, %247
  %183 = phi i32 [ %178, %180 ], [ %249, %247 ]
  %184 = phi i32 [ 0, %180 ], [ %248, %247 ]
  %185 = add nsw i32 %183, %184
  %186 = sdiv i32 %185, 2
  %187 = shl nsw i32 %186, 3
  %188 = add i32 %181, %187
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds i8, i8* %168, i64 %189
  %191 = bitcast i8* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = tail call i32 @llvm.bswap.i32(i32 %192) #16
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds i8, i8* %168, i64 %194
  %196 = tail call i32 @strcmp(i8* %195, i8* %127) #18
  %197 = icmp slt i32 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %182
  %199 = add nsw i32 %186, 1
  br label %247

200:                                              ; preds = %182
  %201 = icmp eq i32 %196, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %200
  %203 = add nsw i32 %186, -1
  br label %247

204:                                              ; preds = %200
  %205 = add i32 %188, 4
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %168, i64 %206
  %208 = bitcast i8* %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = tail call i32 @llvm.bswap.i32(i32 %209) #16
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %168, i64 %211
  %213 = bitcast i8* %212 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %253, label %216

216:                                              ; preds = %204
  %217 = tail call i32 @llvm.bswap.i32(i32 %214) #16
  %218 = add i32 %210, 4
  %219 = zext i32 %217 to i64
  %220 = zext i32 %218 to i64
  %221 = getelementptr inbounds i8, i8* %168, i64 %220
  %222 = bitcast i8* %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = tail call i32 @llvm.bswap.i32(i32 %223) #16
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* %168, i64 %225
  %227 = tail call i32 @_xdg_mime_cache_mime_type_subclass(i8* %226, i8* %130)
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %259

229:                                              ; preds = %216, %232
  %230 = phi i64 [ %246, %232 ], [ 1, %216 ]
  %231 = icmp ult i64 %230, %219
  br i1 %231, label %232, label %251

232:                                              ; preds = %229
  %233 = load i8*, i8** %167, align 8
  %234 = trunc i64 %230 to i32
  %235 = shl i32 %234, 2
  %236 = add i32 %218, %235
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds i8, i8* %233, i64 %237
  %239 = bitcast i8* %238 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = tail call i32 @llvm.bswap.i32(i32 %240) #16
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds i8, i8* %233, i64 %242
  %244 = tail call i32 @_xdg_mime_cache_mime_type_subclass(i8* %243, i8* %130)
  %245 = icmp eq i32 %244, 0
  %246 = add nuw nsw i64 %230, 1
  br i1 %245, label %229, label %259

247:                                              ; preds = %202, %198
  %248 = phi i32 [ %199, %198 ], [ %184, %202 ]
  %249 = phi i32 [ %183, %198 ], [ %203, %202 ]
  %250 = icmp slt i32 %249, %248
  br i1 %250, label %253, label %182

251:                                              ; preds = %229
  %252 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  br label %253

253:                                              ; preds = %247, %251, %204, %163
  %254 = phi %struct._XdgMimeCache** [ %252, %251 ], [ %164, %204 ], [ %164, %163 ], [ %164, %247 ]
  %255 = add nuw i64 %165, 1
  %256 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %254, i64 %255
  %257 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %256, align 8
  %258 = icmp eq %struct._XdgMimeCache* %257, null
  br i1 %258, label %259, label %163

259:                                              ; preds = %253, %216, %232, %159, %156, %150, %144, %126
  %260 = phi i32 [ 1, %126 ], [ 1, %144 ], [ 1, %150 ], [ 1, %156 ], [ 0, %159 ], [ 1, %232 ], [ 0, %253 ], [ 1, %216 ]
  ret i32 %260
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_xdg_mime_cache_unalias_mime_type(i8* readonly) local_unnamed_addr #8 {
  %2 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %3 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %2, align 8
  %4 = icmp eq %struct._XdgMimeCache* %3, null
  br i1 %4, label %63, label %5

5:                                                ; preds = %1, %58
  %6 = phi i64 [ %59, %58 ], [ 0, %1 ]
  %7 = phi %struct._XdgMimeCache* [ %61, %58 ], [ %3, %1 ]
  %8 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %7, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 4
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #16
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #16
  %19 = add i32 %18, -1
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %58, label %21

21:                                               ; preds = %5
  %22 = add i32 %13, 4
  br label %23

23:                                               ; preds = %45, %21
  %24 = phi i32 [ %19, %21 ], [ %47, %45 ]
  %25 = phi i32 [ 0, %21 ], [ %46, %45 ]
  %26 = add nsw i32 %25, %24
  %27 = sdiv i32 %26, 2
  %28 = shl nsw i32 %27, 3
  %29 = add i32 %22, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %9, i64 %30
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = tail call i32 @llvm.bswap.i32(i32 %33) #16
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %9, i64 %35
  %37 = tail call i32 @strcmp(i8* %36, i8* %0) #18
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %23
  %40 = add nsw i32 %27, 1
  br label %45

41:                                               ; preds = %23
  %42 = icmp eq i32 %37, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  %44 = add nsw i32 %27, -1
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi i32 [ %40, %39 ], [ %25, %43 ]
  %47 = phi i32 [ %24, %39 ], [ %44, %43 ]
  %48 = icmp slt i32 %47, %46
  br i1 %48, label %58, label %23

49:                                               ; preds = %41
  %50 = add i32 %29, 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %9, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = tail call i32 @llvm.bswap.i32(i32 %54) #16
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %9, i64 %56
  br label %63

58:                                               ; preds = %45, %5
  %59 = add nuw i64 %6, 1
  %60 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %2, i64 %59
  %61 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %60, align 8
  %62 = icmp eq %struct._XdgMimeCache* %61, null
  br i1 %62, label %63, label %5

63:                                               ; preds = %58, %1, %49
  %64 = phi i8* [ %57, %49 ], [ null, %1 ], [ null, %58 ]
  %65 = icmp eq i8* %64, null
  %66 = select i1 %65, i8* %0, i8* %64
  ret i8* %66
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #9

declare i32 @xdg_mime_media_type_equal(i8*, i8*) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8** @_xdg_mime_cache_list_mime_parents(i8*) local_unnamed_addr #1 {
  %2 = alloca [128 x i8*], align 16
  %3 = bitcast [128 x i8*]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %3) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 1024, i1 false)
  %4 = tail call i8* @xdg_mime_unalias_mime_type(i8* %0) #16
  %5 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %6 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %5, align 8
  %7 = icmp eq %struct._XdgMimeCache* %6, null
  br i1 %7, label %112, label %8

8:                                                ; preds = %1, %106
  %9 = phi i64 [ %108, %106 ], [ 0, %1 ]
  %10 = phi %struct._XdgMimeCache* [ %110, %106 ], [ %6, %1 ]
  %11 = phi i32 [ %107, %106 ], [ 0, %1 ]
  %12 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %10, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = tail call i32 @llvm.bswap.i32(i32 %16) #16
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %106, label %23

23:                                               ; preds = %8
  %24 = tail call i32 @llvm.bswap.i32(i32 %21) #16
  %25 = add i32 %17, 4
  %26 = zext i32 %24 to i64
  br label %29

27:                                               ; preds = %29
  %28 = icmp ult i64 %43, %26
  br i1 %28, label %29, label %106

29:                                               ; preds = %23, %27
  %30 = phi i64 [ 0, %23 ], [ %43, %27 ]
  %31 = trunc i64 %30 to i32
  %32 = shl i32 %31, 3
  %33 = add i32 %25, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %13, i64 %34
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = tail call i32 @llvm.bswap.i32(i32 %37) #16
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %13, i64 %39
  %41 = tail call i32 @strcmp(i8* %40, i8* %4) #18
  %42 = icmp eq i32 %41, 0
  %43 = add nuw nsw i64 %30, 1
  br i1 %42, label %44, label %27

44:                                               ; preds = %29
  %45 = add i32 %33, 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %13, i64 %46
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = tail call i32 @llvm.bswap.i32(i32 %49) #16
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %13, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, 0
  %56 = icmp slt i32 %11, 127
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %106

58:                                               ; preds = %44
  %59 = tail call i32 @llvm.bswap.i32(i32 %54) #16
  %60 = add i32 %50, 4
  %61 = zext i32 %59 to i64
  br label %62

62:                                               ; preds = %58, %100
  %63 = phi i64 [ 0, %58 ], [ %102, %100 ]
  %64 = phi i32 [ %11, %58 ], [ %101, %100 ]
  %65 = trunc i64 %63 to i32
  %66 = shl i32 %65, 2
  %67 = add i32 %60, %66
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %13, i64 %68
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = tail call i32 @llvm.bswap.i32(i32 %71) #16
  %73 = icmp sgt i32 %64, 0
  br i1 %73, label %74, label %91

74:                                               ; preds = %62
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds i8, i8* %13, i64 %75
  %77 = zext i32 %64 to i64
  br label %78

78:                                               ; preds = %85, %74
  %79 = phi i64 [ 0, %74 ], [ %86, %85 ]
  %80 = phi i32 [ 0, %74 ], [ %87, %85 ]
  %81 = getelementptr inbounds [128 x i8*], [128 x i8*]* %2, i64 0, i64 %79
  %82 = load i8*, i8** %81, align 8
  %83 = tail call i32 @strcmp(i8* %82, i8* %76) #18
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %78
  %86 = add nuw nsw i64 %79, 1
  %87 = add nuw nsw i32 %80, 1
  %88 = icmp eq i64 %86, %77
  br i1 %88, label %91, label %78

89:                                               ; preds = %78
  %90 = trunc i64 %79 to i32
  br label %91

91:                                               ; preds = %85, %89, %62
  %92 = phi i32 [ 0, %62 ], [ %90, %89 ], [ %87, %85 ]
  %93 = icmp eq i32 %92, %64
  br i1 %93, label %94, label %100

94:                                               ; preds = %91
  %95 = zext i32 %72 to i64
  %96 = getelementptr inbounds i8, i8* %13, i64 %95
  %97 = add nsw i32 %64, 1
  %98 = sext i32 %64 to i64
  %99 = getelementptr inbounds [128 x i8*], [128 x i8*]* %2, i64 0, i64 %98
  store i8* %96, i8** %99, align 8
  br label %100

100:                                              ; preds = %91, %94
  %101 = phi i32 [ %97, %94 ], [ %64, %91 ]
  %102 = add nuw nsw i64 %63, 1
  %103 = icmp ult i64 %102, %61
  %104 = icmp slt i32 %101, 127
  %105 = and i1 %104, %103
  br i1 %105, label %62, label %106

106:                                              ; preds = %27, %100, %8, %44
  %107 = phi i32 [ %11, %44 ], [ %11, %8 ], [ %101, %100 ], [ %11, %27 ]
  %108 = add nuw i64 %9, 1
  %109 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %5, i64 %108
  %110 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %109, align 8
  %111 = icmp eq %struct._XdgMimeCache* %110, null
  br i1 %111, label %112, label %8

112:                                              ; preds = %106, %1
  %113 = phi i32 [ 0, %1 ], [ %107, %106 ]
  %114 = add nsw i32 %113, 1
  %115 = sext i32 %113 to i64
  %116 = getelementptr inbounds [128 x i8*], [128 x i8*]* %2, i64 0, i64 %115
  store i8* null, i8** %116, align 8
  %117 = sext i32 %114 to i64
  %118 = shl nsw i64 %117, 3
  %119 = tail call noalias i8* @malloc(i64 %118) #16
  %120 = bitcast i8* %119 to i8**
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 16 %3, i64 %118, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %3) #16
  ret i8** %120
}

declare i8* @xdg_mime_unalias_mime_type(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_xdg_mime_cache_get_generic_icon(i8* nocapture readonly) local_unnamed_addr #8 {
  %2 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %3 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %2, align 8
  %4 = icmp eq %struct._XdgMimeCache* %3, null
  br i1 %4, label %63, label %5

5:                                                ; preds = %1, %58
  %6 = phi i64 [ %59, %58 ], [ 0, %1 ]
  %7 = phi %struct._XdgMimeCache* [ %61, %58 ], [ %3, %1 ]
  %8 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %7, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 36
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #16
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #16
  %19 = add i32 %18, -1
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %58, label %21

21:                                               ; preds = %5
  %22 = add i32 %13, 4
  br label %23

23:                                               ; preds = %45, %21
  %24 = phi i32 [ %19, %21 ], [ %47, %45 ]
  %25 = phi i32 [ 0, %21 ], [ %46, %45 ]
  %26 = add nsw i32 %25, %24
  %27 = sdiv i32 %26, 2
  %28 = shl nsw i32 %27, 3
  %29 = add i32 %22, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %9, i64 %30
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = tail call i32 @llvm.bswap.i32(i32 %33) #16
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %9, i64 %35
  %37 = tail call i32 @strcmp(i8* %36, i8* %0) #18
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %23
  %40 = add nsw i32 %27, 1
  br label %45

41:                                               ; preds = %23
  %42 = icmp eq i32 %37, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  %44 = add nsw i32 %27, -1
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi i32 [ %40, %39 ], [ %25, %43 ]
  %47 = phi i32 [ %24, %39 ], [ %44, %43 ]
  %48 = icmp slt i32 %47, %46
  br i1 %48, label %58, label %23

49:                                               ; preds = %41
  %50 = add i32 %29, 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %9, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = tail call i32 @llvm.bswap.i32(i32 %54) #16
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %9, i64 %56
  br label %63

58:                                               ; preds = %45, %5
  %59 = add nuw i64 %6, 1
  %60 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %2, i64 %59
  %61 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %60, align 8
  %62 = icmp eq %struct._XdgMimeCache* %61, null
  br i1 %62, label %63, label %5

63:                                               ; preds = %58, %1, %49
  %64 = phi i8* [ %57, %49 ], [ null, %1 ], [ null, %58 ]
  ret i8* %64
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_xdg_mime_cache_get_icon(i8* nocapture readonly) local_unnamed_addr #8 {
  %2 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %3 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %2, align 8
  %4 = icmp eq %struct._XdgMimeCache* %3, null
  br i1 %4, label %63, label %5

5:                                                ; preds = %1, %58
  %6 = phi i64 [ %59, %58 ], [ 0, %1 ]
  %7 = phi %struct._XdgMimeCache* [ %61, %58 ], [ %3, %1 ]
  %8 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %7, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 32
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #16
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #16
  %19 = add i32 %18, -1
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %58, label %21

21:                                               ; preds = %5
  %22 = add i32 %13, 4
  br label %23

23:                                               ; preds = %45, %21
  %24 = phi i32 [ %19, %21 ], [ %47, %45 ]
  %25 = phi i32 [ 0, %21 ], [ %46, %45 ]
  %26 = add nsw i32 %25, %24
  %27 = sdiv i32 %26, 2
  %28 = shl nsw i32 %27, 3
  %29 = add i32 %22, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %9, i64 %30
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = tail call i32 @llvm.bswap.i32(i32 %33) #16
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %9, i64 %35
  %37 = tail call i32 @strcmp(i8* %36, i8* %0) #18
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %23
  %40 = add nsw i32 %27, 1
  br label %45

41:                                               ; preds = %23
  %42 = icmp eq i32 %37, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  %44 = add nsw i32 %27, -1
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi i32 [ %40, %39 ], [ %25, %43 ]
  %47 = phi i32 [ %24, %39 ], [ %44, %43 ]
  %48 = icmp slt i32 %47, %46
  br i1 %48, label %58, label %23

49:                                               ; preds = %41
  %50 = add i32 %29, 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %9, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = tail call i32 @llvm.bswap.i32(i32 %54) #16
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %9, i64 %56
  br label %63

58:                                               ; preds = %45, %5
  %59 = add nuw i64 %6, 1
  %60 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %2, i64 %59
  %61 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %60, align 8
  %62 = icmp eq %struct._XdgMimeCache* %61, null
  br i1 %62, label %63, label %5

63:                                               ; preds = %58, %1, %49
  %64 = phi i8* [ %57, %49 ], [ null, %1 ], [ null, %58 ]
  ret i8* %64
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_xdg_mime_cache_glob_dump() local_unnamed_addr #10 {
  %1 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %2 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %1, align 8
  %3 = icmp eq %struct._XdgMimeCache* %2, null
  br i1 %3, label %41, label %4

4:                                                ; preds = %0, %34
  %5 = phi %struct._XdgMimeCache** [ %35, %34 ], [ %1, %0 ]
  %6 = phi %struct._XdgMimeCache* [ %39, %34 ], [ %2, %0 ]
  %7 = phi i32 [ %36, %34 ], [ 0, %0 ]
  %8 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %6, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #16
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #16
  %19 = add i32 %13, 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %9, i64 %20
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = tail call i32 @llvm.bswap.i32(i32 %23) #16
  %25 = icmp eq i32 %17, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %4, %26
  %27 = phi i32 [ %30, %26 ], [ 0, %4 ]
  %28 = mul i32 %27, 20
  %29 = add i32 %28, %24
  tail call fastcc void @dump_glob_node(%struct._XdgMimeCache* nonnull %6, i32 %29, i32 0)
  %30 = add nuw i32 %27, 1
  %31 = icmp ult i32 %30, %18
  br i1 %31, label %26, label %32

32:                                               ; preds = %26
  %33 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  br label %34

34:                                               ; preds = %32, %4
  %35 = phi %struct._XdgMimeCache** [ %33, %32 ], [ %5, %4 ]
  %36 = add i32 %7, 1
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %35, i64 %37
  %39 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %38, align 8
  %40 = icmp eq %struct._XdgMimeCache* %39, null
  br i1 %40, label %41, label %4

41:                                               ; preds = %34, %0
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @dump_glob_node(%struct._XdgMimeCache* nocapture readonly, i32, i32) unnamed_addr #10 {
  %4 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds i8, i8* %5, i64 %6
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = tail call i32 @llvm.bswap.i32(i32 %9) #16
  %11 = add i32 %1, 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #16
  %17 = add i32 %1, 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %5, i64 %18
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = tail call i32 @llvm.bswap.i32(i32 %21) #16
  %23 = add i32 %1, 12
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %5, i64 %24
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = tail call i32 @llvm.bswap.i32(i32 %27) #16
  %29 = icmp sgt i32 %2, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %3, %30
  %31 = phi i32 [ %33, %30 ], [ 0, %3 ]
  %32 = tail call i32 @putchar(i32 32)
  %33 = add nuw nsw i32 %31, 1
  %34 = icmp eq i32 %33, %2
  br i1 %34, label %35, label %30

35:                                               ; preds = %30, %3
  %36 = tail call i32 @putchar(i32 %10)
  %37 = icmp eq i32 %15, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = load i8*, i8** %4, align 8
  %40 = zext i32 %16 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* %41)
  br label %43

43:                                               ; preds = %35, %38
  %44 = tail call i32 @putchar(i32 10)
  %45 = icmp ne i32 %27, 0
  %46 = icmp ne i32 %21, 0
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = add nsw i32 %2, 1
  br label %50

50:                                               ; preds = %48, %50
  %51 = phi i32 [ 0, %48 ], [ %54, %50 ]
  %52 = mul i32 %51, 20
  %53 = add i32 %52, %28
  tail call fastcc void @dump_glob_node(%struct._XdgMimeCache* %0, i32 %53, i32 %49)
  %54 = add nuw i32 %51, 1
  %55 = icmp ult i32 %54, %22
  br i1 %55, label %50, label %56

56:                                               ; preds = %50, %43
  ret void
}

; Function Attrs: nounwind
declare i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc i32 @cache_magic_matchlet_compare(%struct._XdgMimeCache* nocapture readonly, i32, i8* nocapture readonly, i64) unnamed_addr #8 {
  %5 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %0, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = add i32 %1, 24
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @llvm.bswap.i32(i32 %11) #16
  %13 = add i32 %1, 28
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #16
  %19 = zext i32 %1 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = tail call i32 @llvm.bswap.i32(i32 %22) #16
  %24 = add i32 %1, 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %6, i64 %25
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = tail call i32 @llvm.bswap.i32(i32 %28) #16
  %30 = add i32 %1, 12
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %6, i64 %31
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = tail call i32 @llvm.bswap.i32(i32 %34) #16
  %36 = add i32 %1, 16
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %6, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = tail call i32 @llvm.bswap.i32(i32 %40) #16
  %42 = add i32 %1, 20
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %6, i64 %43
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = tail call i32 @llvm.bswap.i32(i32 %46) #16
  %48 = add i32 %29, %23
  %49 = icmp ult i32 %23, %48
  br i1 %49, label %50, label %105

50:                                               ; preds = %4
  %51 = icmp eq i32 %46, 0
  %52 = icmp eq i32 %34, 0
  %53 = zext i32 %41 to i64
  %54 = getelementptr inbounds i8, i8* %6, i64 %53
  %55 = zext i32 %35 to i64
  %56 = zext i32 %23 to i64
  %57 = zext i32 %48 to i64
  br label %58

58:                                               ; preds = %91, %50
  %59 = phi i64 [ %56, %50 ], [ %92, %91 ]
  %60 = trunc i64 %59 to i32
  %61 = add i32 %35, %60
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %62, %3
  br i1 %63, label %105, label %64

64:                                               ; preds = %58
  br i1 %51, label %87, label %65

65:                                               ; preds = %64
  br i1 %52, label %94, label %68

66:                                               ; preds = %68
  %67 = icmp ult i64 %86, %55
  br i1 %67, label %68, label %94

68:                                               ; preds = %65, %66
  %69 = phi i64 [ %86, %66 ], [ 0, %65 ]
  %70 = trunc i64 %69 to i32
  %71 = add i32 %41, %70
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %6, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = add i32 %47, %70
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %6, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = add nuw i64 %69, %59
  %80 = and i64 %79, 4294967295
  %81 = getelementptr inbounds i8, i8* %2, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = xor i8 %82, %74
  %84 = and i8 %83, %78
  %85 = icmp eq i8 %84, 0
  %86 = add nuw nsw i64 %69, 1
  br i1 %85, label %66, label %91

87:                                               ; preds = %64
  %88 = getelementptr inbounds i8, i8* %2, i64 %59
  %89 = tail call i32 @bcmp(i8* %54, i8* %88, i64 %55) #16
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %68, %87
  %92 = add nuw nsw i64 %59, 1
  %93 = icmp eq i64 %92, %57
  br i1 %93, label %105, label %58

94:                                               ; preds = %87, %65, %66
  %95 = icmp eq i32 %11, 0
  br i1 %95, label %105, label %98

96:                                               ; preds = %98
  %97 = icmp ult i32 %104, %12
  br i1 %97, label %98, label %105

98:                                               ; preds = %94, %96
  %99 = phi i32 [ %104, %96 ], [ 0, %94 ]
  %100 = shl i32 %99, 5
  %101 = add i32 %100, %18
  %102 = tail call fastcc i32 @cache_magic_matchlet_compare(%struct._XdgMimeCache* %0, i32 %101, i8* %2, i64 %3)
  %103 = icmp eq i32 %102, 0
  %104 = add nuw i32 %99, 1
  br i1 %103, label %96, label %105

105:                                              ; preds = %58, %91, %98, %96, %4, %94
  %106 = phi i32 [ 1, %94 ], [ 0, %4 ], [ 1, %98 ], [ 0, %96 ], [ 0, %91 ], [ 0, %58 ]
  ret i32 %106
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cache_glob_lookup_fnmatch(i8*, %struct.MimeWeight* nocapture, i32) unnamed_addr #1 {
  %4 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %5 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %4, align 8
  %6 = icmp eq %struct._XdgMimeCache* %5, null
  br i1 %6, label %87, label %7

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, 0
  br label %16

9:                                                ; preds = %16, %85
  %10 = phi i32 [ %78, %85 ], [ %19, %16 ]
  %11 = add nuw i64 %17, 1
  %12 = load %struct._XdgMimeCache**, %struct._XdgMimeCache*** @_caches, align 8
  %13 = getelementptr inbounds %struct._XdgMimeCache*, %struct._XdgMimeCache** %12, i64 %11
  %14 = load %struct._XdgMimeCache*, %struct._XdgMimeCache** %13, align 8
  %15 = icmp eq %struct._XdgMimeCache* %14, null
  br i1 %15, label %87, label %16

16:                                               ; preds = %7, %9
  %17 = phi i64 [ 0, %7 ], [ %11, %9 ]
  %18 = phi %struct._XdgMimeCache* [ %5, %7 ], [ %14, %9 ]
  %19 = phi i32 [ 0, %7 ], [ %10, %9 ]
  %20 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %18, i64 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 20
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #16
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %21, i64 %26
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 0
  %31 = icmp slt i32 %19, 10
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %9

33:                                               ; preds = %16
  %34 = tail call i32 @llvm.bswap.i32(i32 %29) #16
  %35 = add i32 %25, 4
  %36 = zext i32 %34 to i64
  br label %37

37:                                               ; preds = %83, %33
  %38 = phi i8* [ %21, %33 ], [ %84, %83 ]
  %39 = phi i64 [ 0, %33 ], [ %79, %83 ]
  %40 = phi i32 [ %19, %33 ], [ %78, %83 ]
  %41 = trunc i64 %39 to i32
  %42 = mul i32 %41, 12
  %43 = add i32 %35, %42
  %44 = add i32 %43, 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %38, i64 %45
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = tail call i32 @llvm.bswap.i32(i32 %48) #16
  %50 = add i32 %43, 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %38, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = tail call i32 @llvm.bswap.i32(i32 %54) #16
  %56 = and i32 %55, 256
  %57 = and i32 %55, 255
  %58 = zext i32 %49 to i64
  %59 = getelementptr inbounds i8, i8* %38, i64 %58
  %60 = icmp ne i32 %56, 0
  %61 = and i1 %8, %60
  br i1 %61, label %77, label %62

62:                                               ; preds = %37
  %63 = zext i32 %43 to i64
  %64 = getelementptr inbounds i8, i8* %38, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = tail call i32 @llvm.bswap.i32(i32 %66) #16
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %38, i64 %68
  %70 = tail call i32 @fnmatch(i8* %69, i8* %0, i32 0) #16
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %62
  %73 = sext i32 %40 to i64
  %74 = getelementptr inbounds %struct.MimeWeight, %struct.MimeWeight* %1, i64 %73, i32 0
  store i8* %59, i8** %74, align 8
  %75 = getelementptr inbounds %struct.MimeWeight, %struct.MimeWeight* %1, i64 %73, i32 1
  store i32 %57, i32* %75, align 8
  %76 = add nsw i32 %40, 1
  br label %77

77:                                               ; preds = %62, %72, %37
  %78 = phi i32 [ %40, %37 ], [ %76, %72 ], [ %40, %62 ]
  %79 = add nuw nsw i64 %39, 1
  %80 = icmp ult i64 %79, %36
  %81 = icmp slt i32 %78, 10
  %82 = and i1 %81, %80
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = load i8*, i8** %20, align 8
  br label %37

85:                                               ; preds = %77
  %86 = icmp sgt i32 %78, 0
  br i1 %86, label %87, label %9

87:                                               ; preds = %9, %85, %3
  %88 = phi i32 [ 0, %3 ], [ %78, %85 ], [ 0, %9 ]
  ret i32 %88
}

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @compare_mime_weight(i8* nocapture readonly, i8* nocapture readonly) #12 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %5, %8
  ret i32 %9
}

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @cache_glob_node_lookup_suffix(%struct._XdgMimeCache* nocapture readonly, i32, i32, i8* nocapture readonly, i32, i32, %struct.MimeWeight* nocapture) unnamed_addr #10 {
  %8 = add nsw i32 %4, -1
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %3, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = add i32 %1, -1
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %105, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct._XdgMimeCache, %struct._XdgMimeCache* %0, i64 0, i32 3
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %101
  %19 = phi i32 [ %13, %15 ], [ %103, %101 ]
  %20 = phi i32 [ 0, %15 ], [ %102, %101 ]
  %21 = add nsw i32 %19, %20
  %22 = sdiv i32 %21, 2
  %23 = mul nsw i32 %22, 12
  %24 = add i32 %23, %2
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %17, i64 %25
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = tail call i32 @llvm.bswap.i32(i32 %28) #16
  %30 = icmp ult i32 %29, %12
  br i1 %30, label %31, label %33

31:                                               ; preds = %18
  %32 = add nsw i32 %22, 1
  br label %101

33:                                               ; preds = %18
  %34 = icmp ugt i32 %29, %12
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = add nsw i32 %22, -1
  br label %101

37:                                               ; preds = %33
  %38 = add i32 %24, 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %17, i64 %39
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = tail call i32 @llvm.bswap.i32(i32 %42) #16
  %44 = add i32 %24, 8
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %17, i64 %45
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = tail call i32 @llvm.bswap.i32(i32 %48) #16
  %50 = icmp sgt i32 %8, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %37
  %52 = tail call fastcc i32 @cache_glob_node_lookup_suffix(%struct._XdgMimeCache* %0, i32 %43, i32 %49, i8* %3, i32 %8, i32 %5, %struct.MimeWeight* %6)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %105

54:                                               ; preds = %37, %51
  %55 = icmp eq i32 %42, 0
  br i1 %55, label %105, label %56

56:                                               ; preds = %54
  %57 = icmp eq i32 %5, 0
  %58 = zext i32 %43 to i64
  br label %59

59:                                               ; preds = %56, %95
  %60 = phi i64 [ 0, %56 ], [ %97, %95 ]
  %61 = phi i32 [ 0, %56 ], [ %96, %95 ]
  %62 = load i8*, i8** %16, align 8
  %63 = trunc i64 %60 to i32
  %64 = mul i32 %63, 12
  %65 = add i32 %64, %49
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %62, i64 %66
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %105

71:                                               ; preds = %59
  %72 = add i32 %65, 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %62, i64 %73
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = tail call i32 @llvm.bswap.i32(i32 %76) #16
  %78 = and i32 %77, 256
  %79 = icmp ne i32 %78, 0
  %80 = and i1 %57, %79
  br i1 %80, label %95, label %81

81:                                               ; preds = %71
  %82 = add i32 %65, 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %62, i64 %83
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = tail call i32 @llvm.bswap.i32(i32 %86) #16
  %88 = and i32 %77, 255
  %89 = zext i32 %87 to i64
  %90 = getelementptr inbounds i8, i8* %62, i64 %89
  %91 = sext i32 %61 to i64
  %92 = getelementptr inbounds %struct.MimeWeight, %struct.MimeWeight* %6, i64 %91, i32 0
  store i8* %90, i8** %92, align 8
  %93 = getelementptr inbounds %struct.MimeWeight, %struct.MimeWeight* %6, i64 %91, i32 1
  store i32 %88, i32* %93, align 8
  %94 = add nsw i32 %61, 1
  br label %95

95:                                               ; preds = %71, %81
  %96 = phi i32 [ %61, %71 ], [ %94, %81 ]
  %97 = add nuw nsw i64 %60, 1
  %98 = icmp slt i32 %96, 10
  %99 = icmp ult i64 %97, %58
  %100 = and i1 %99, %98
  br i1 %100, label %59, label %105

101:                                              ; preds = %35, %31
  %102 = phi i32 [ %32, %31 ], [ %20, %35 ]
  %103 = phi i32 [ %19, %31 ], [ %36, %35 ]
  %104 = icmp slt i32 %103, %102
  br i1 %104, label %105, label %18

105:                                              ; preds = %101, %59, %95, %54, %7, %51
  %106 = phi i32 [ %52, %51 ], [ 0, %54 ], [ 0, %7 ], [ %61, %59 ], [ %96, %95 ], [ 0, %101 ]
  ret i32 %106
}

declare i32 @fnmatch(i8*, i8*, i32) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #13

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #13

; Function Attrs: nofree nounwind
declare i32 @putchar(i32) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nofree nounwind }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { nounwind readnone }
attributes #18 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
