; ModuleID = '../../cc/raster/raster_query_queue.cc'
source_filename = "../../cc/raster/raster_query_queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.cc::RasterQuery"*, i64 }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.viz::RasterContextProvider::ScopedRasterContextLock" = type { %"class.viz::RasterContextProvider"*, %"class.base::internal::BasicAutoLock", %"class.std::__1::unique_ptr" }
%"class.base::internal::BasicAutoLock" = type { %"class.base::Lock"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gpu::raster::RasterInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.2", [4 x i8] }>
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base14circular_dequeIN2cc11RasterQueryEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferIN2cc11RasterQueryEE13DestructRangeIS3_Li0EEEvPS3_S6_ = comdat any

$_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN2cc11RasterQueryEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN4base14circular_dequeIN2cc11RasterQueryEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN2cc11RasterQueryEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_ = comdat any

$_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm = comdat any

$_ZN4base14circular_dequeIN2cc11RasterQueryEE5eraseENS_8internal29circular_deque_const_iteratorIS2_EES6_ = comdat any

@_ZTVN2cc16RasterQueryQueueE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RasterQueryQueue"*)* @_ZN2cc16RasterQueryQueueD2Ev to i8*), i8* bitcast (void (%"class.cc::RasterQueryQueue"*)* @_ZN2cc16RasterQueryQueueD0Ev to i8*), i8* bitcast (i1 (%"class.cc::RasterQueryQueue"*)* @_ZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [60 x i8] c"Renderer4.%s.RasterTaskSchedulingDelayNoAtRasterDecodes.All\00", align 1
@.str.1 = private unnamed_addr constant [88 x i8] c"Renderer4.%s.RasterTaskSchedulingDelayNoAtRasterDecodes.TilesWithJpegHwDecodeCandidates\00", align 1
@.str.2 = private unnamed_addr constant [88 x i8] c"Renderer4.%s.RasterTaskSchedulingDelayNoAtRasterDecodes.TilesWithWebPHwDecodeCandidates\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"Renderer4.%s.RasterTaskTotalDuration.Oop\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"Renderer4.%s.RasterTaskTotalDuration.Gpu\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN2cc11RasterQueryC1Ev = hidden unnamed_addr alias void (%"struct.cc::RasterQuery"*), void (%"struct.cc::RasterQuery"*)* @_ZN2cc11RasterQueryC2Ev
@_ZN2cc11RasterQueryD1Ev = hidden unnamed_addr alias void (%"struct.cc::RasterQuery"*), void (%"struct.cc::RasterQuery"*)* @_ZN2cc11RasterQueryD2Ev
@_ZN2cc16RasterQueryQueueC1EPN3viz21RasterContextProviderEb = hidden unnamed_addr alias void (%"class.cc::RasterQueryQueue"*, %"class.viz::RasterContextProvider"*, i1), void (%"class.cc::RasterQueryQueue"*, %"class.viz::RasterContextProvider"*, i1)* @_ZN2cc16RasterQueryQueueC2EPN3viz21RasterContextProviderEb
@_ZN2cc16RasterQueryQueueD1Ev = hidden unnamed_addr alias void (%"class.cc::RasterQueryQueue"*), void (%"class.cc::RasterQueryQueue"*)* @_ZN2cc16RasterQueryQueueD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc11RasterQueryC2Ev(%"struct.cc::RasterQuery"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %0, i64 0, i32 2, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %0, i64 0, i32 6
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %0, i64 0, i32 7
  store i8 0, i8* %7, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc11RasterQueryD2Ev(%"struct.cc::RasterQuery"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16RasterQueryQueueC2EPN3viz21RasterContextProviderEb(%"class.cc::RasterQueryQueue"*, %"class.viz::RasterContextProvider"*, i1 zeroext) unnamed_addr #2 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc16RasterQueryQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 1
  store %"class.viz::RasterContextProvider"* %1, %"class.viz::RasterContextProvider"** %6, align 8
  %7 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 2
  store i8 %4, i8* %7, align 8
  %8 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %8) #11
  %9 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4
  %10 = bitcast %"class.base::circular_deque"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16RasterQueryQueueD2Ev(%"class.cc::RasterQueryQueue"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc16RasterQueryQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 2
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4base14circular_dequeIN2cc11RasterQueryEE13DestructRangeEmm(%"class.base::circular_deque"* %3, i64 %5, i64 %7) #11
  %8 = bitcast %"class.base::circular_deque"* %3 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #11
  %10 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16RasterQueryQueueD0Ev(%"class.cc::RasterQueryQueue"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc16RasterQueryQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 2
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4base14circular_dequeIN2cc11RasterQueryEE13DestructRangeEmm(%"class.base::circular_deque"* %3, i64 %5, i64 %7) #11
  %8 = bitcast %"class.base::circular_deque"* %3 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #11
  %10 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %10) #11
  %11 = bitcast %"class.cc::RasterQueryQueue"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16RasterQueryQueue6AppendENS_11RasterQueryE(%"class.cc::RasterQueryQueue"*, %"struct.cc::RasterQuery"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #11
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4
  tail call void @_ZN4base14circular_dequeIN2cc11RasterQueryEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %10, i64 1) #11
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %13) #11
  %15 = bitcast %"struct.cc::RasterQuery"* %14 to i8*
  %16 = bitcast %"struct.cc::RasterQuery"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 40, i1 false) #11
  %17 = load i64, i64* %12, align 8
  %18 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, -1
  %21 = icmp eq i64 %17, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %9
  store i64 0, i64* %12, align 8
  br label %26

23:                                               ; preds = %9
  %24 = add i64 %17, 1
  store i64 %24, i64* %12, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23, %22
  br label %27

27:                                               ; preds = %23, %26
  %28 = phi i64 [ %20, %26 ], [ %17, %23 ]
  %29 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %11, i64 %28) #11
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEv(%"class.cc::RasterQueryQueue"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.viz::RasterContextProvider::ScopedRasterContextLock", align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca %"class.base::TimeDelta", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %14, i64 0, i32 0, i32 0
  %16 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %15) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18, !prof !2

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %14, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %19) #11
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %23, %25
  br i1 %26, label %253, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.viz::RasterContextProvider::ScopedRasterContextLock", %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %2, i64 0, i32 0
  %30 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 1
  %31 = bitcast %"class.viz::RasterContextProvider::ScopedRasterContextLock"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  %32 = load %"class.viz::RasterContextProvider"*, %"class.viz::RasterContextProvider"** %30, align 8
  call void @_ZN3viz21RasterContextProvider23ScopedRasterContextLockC1EPS0_PKc(%"class.viz::RasterContextProvider::ScopedRasterContextLock"* nonnull %2, %"class.viz::RasterContextProvider"* %32, i8* null) #11
  %33 = load %"class.viz::RasterContextProvider"*, %"class.viz::RasterContextProvider"** %29, align 8
  %34 = bitcast %"class.viz::RasterContextProvider"* %33 to %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)***
  %35 = load %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)**, %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)** %35, i64 13
  %37 = load %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.viz::RasterContextProvider"*)** %36, align 8
  %38 = call %"class.gpu::raster::RasterInterface"* %37(%"class.viz::RasterContextProvider"* %33) #11
  %39 = load i64, i64* %22, align 8
  %40 = load i64, i64* %24, align 8
  %41 = icmp eq i64 %39, %40
  br i1 %41, label %239, label %42

42:                                               ; preds = %27
  %43 = bitcast i32* %3 to i8*
  %44 = bitcast %"class.gpu::raster::RasterInterface"* %38 to void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)***
  %45 = bitcast i32* %4 to i8*
  %46 = bitcast %"class.gpu::raster::RasterInterface"* %38 to void (%"class.gpu::raster::RasterInterface"*, i32, i32*)***
  %47 = bitcast %"class.base::TimeDelta"* %5 to i8*
  %48 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  %49 = bitcast i64* %6 to i8*
  %50 = bitcast %"class.gpu::raster::RasterInterface"* %38 to void (%"class.gpu::raster::RasterInterface"*, i32, i32, i64*)***
  %51 = bitcast %"class.base::TimeDelta"* %7 to i8*
  %52 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  %53 = bitcast %"class.base::TimeDelta"* %8 to i8*
  %54 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %69 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %76

76:                                               ; preds = %42, %226
  %77 = phi i64 [ %39, %42 ], [ %234, %226 ]
  %78 = phi %"class.base::circular_deque"* [ %21, %42 ], [ %233, %226 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #11
  store i32 0, i32* %3, align 4
  %79 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %78, i64 0, i32 0
  %80 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %81 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*** %44, align 8
  %84 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)** %83, i64 34
  %85 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)** %84, align 8
  call void %85(%"class.gpu::raster::RasterInterface"* %38, i32 %82, i32 34920, i32* nonnull %3) #11
  %86 = load i32, i32* %3, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %237, label %88

88:                                               ; preds = %76
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #11
  store i32 0, i32* %4, align 4
  %89 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %90 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*** %44, align 8
  %93 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)** %92, i64 34
  %94 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)** %93, align 8
  call void %94(%"class.gpu::raster::RasterInterface"* %38, i32 %91, i32 34918, i32* nonnull %4) #11
  %95 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %96 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %95, i64 0, i32 0
  %97 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*** %46, align 8
  %98 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %97, i64 30
  %99 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %98, align 8
  call void %99(%"class.gpu::raster::RasterInterface"* %38, i32 1, i32* %96) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  store i64 -6148914691236517206, i64* %48, align 8
  %100 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %101 = load i32, i32* %4, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %100, i64 0, i32 2, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %104, i64 %102) #11
  %106 = extractvalue { i64, i1 } %105, 1
  %107 = extractvalue { i64, i1 } %105, 0
  %108 = select i1 %106, i64 9223372036854775807, i64 %107, !prof !3
  store i64 %108, i64* %48, align 8
  %109 = call i8* @_ZN2cc23GetClientNameForMetricsEv() #11
  %110 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %111 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %110, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %185, label %114

114:                                              ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  store i64 0, i64* %6, align 8
  %115 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %116 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %115, i64 0, i32 3
  %117 = load i32, i32* %116, align 8
  %118 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32, i64*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i64*)*** %50, align 8
  %119 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32, i64*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i64*)** %118, i64 35
  %120 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32, i64*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i64*)** %119, align 8
  call void %120(%"class.gpu::raster::RasterInterface"* %38, i32 %117, i32 34918, i64* nonnull %6) #11
  %121 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %122 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %121, i64 0, i32 3
  %123 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*** %46, align 8
  %124 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %123, i64 30
  %125 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %124, align 8
  call void %125(%"class.gpu::raster::RasterInterface"* %38, i32 1, i32* %122) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store i64 -6148914691236517206, i64* %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  %126 = load i64, i64* %6, align 8
  %127 = icmp sgt i64 %126, -1
  br i1 %127, label %129, label %128, !prof !2

128:                                              ; preds = %114
  call void @llvm.trap() #11
  unreachable

129:                                              ; preds = %114
  store i64 %126, i64* %54, align 8
  %130 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %131 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %130, i64 0, i32 5, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %8, i64 %132)
  store i64 %133, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  %134 = load atomic i64, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %135 = inttoptr i64 %134 to %"class.base::HistogramBase"*
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %137, label %145

137:                                              ; preds = %129
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i8* %109) #11
  %138 = call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i64 1, i64 100000, i32 100, i32 1) #11
  %139 = load i8, i8* %57, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %137, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  %144 = ptrtoint %"class.base::HistogramBase"* %138 to i64
  store atomic i64 %144, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %145

145:                                              ; preds = %129, %143
  %146 = phi %"class.base::HistogramBase"* [ %135, %129 ], [ %138, %143 ]
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %146, %"class.base::TimeDelta"* nonnull dereferenceable(8) %7) #11
  %147 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %148 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %147, i64 0, i32 6
  %149 = load i8, i8* %148, align 8, !range !4
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %165, label %151

151:                                              ; preds = %145
  %152 = load atomic i64, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %153 = inttoptr i64 %152 to %"class.base::HistogramBase"*
  %154 = icmp eq i64 %152, 0
  br i1 %154, label %155, label %163

155:                                              ; preds = %151
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i8* %109) #11
  %156 = call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i64 1, i64 100000, i32 100, i32 1) #11
  %157 = load i8, i8* %61, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %155
  %160 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %155, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #11
  %162 = ptrtoint %"class.base::HistogramBase"* %156 to i64
  store atomic i64 %162, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %163

163:                                              ; preds = %151, %161
  %164 = phi %"class.base::HistogramBase"* [ %153, %151 ], [ %156, %161 ]
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %164, %"class.base::TimeDelta"* nonnull dereferenceable(8) %7) #11
  br label %165

165:                                              ; preds = %145, %163
  %166 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %79, i64 %77) #11
  %167 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %166, i64 0, i32 7
  %168 = load i8, i8* %167, align 1, !range !4
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %184, label %170

170:                                              ; preds = %165
  %171 = load atomic i64, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %172 = inttoptr i64 %171 to %"class.base::HistogramBase"*
  %173 = icmp eq i64 %171, 0
  br i1 %173, label %174, label %182

174:                                              ; preds = %170
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %11, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.2, i64 0, i64 0), i8* %109) #11
  %175 = call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i64 1, i64 100000, i32 100, i32 1) #11
  %176 = load i8, i8* %65, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  %179 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %179) #12
  br label %180

180:                                              ; preds = %174, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  %181 = ptrtoint %"class.base::HistogramBase"* %175 to i64
  store atomic i64 %181, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %182

182:                                              ; preds = %170, %180
  %183 = phi %"class.base::HistogramBase"* [ %172, %170 ], [ %175, %180 ]
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %183, %"class.base::TimeDelta"* nonnull dereferenceable(8) %7) #11
  br label %184

184:                                              ; preds = %165, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %185

185:                                              ; preds = %88, %184
  %186 = load i8, i8* %67, align 8, !range !4
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %200, label %188

188:                                              ; preds = %185
  %189 = load atomic i64, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %190 = inttoptr i64 %189 to %"class.base::HistogramBase"*
  %191 = icmp eq i64 %189, 0
  br i1 %191, label %192, label %212

192:                                              ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), i8* %109) #11
  %193 = call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i64 1, i64 100000, i32 100, i32 1) #11
  %194 = load i8, i8* %70, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %192
  %197 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %197) #12
  br label %198

198:                                              ; preds = %192, %196
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  %199 = ptrtoint %"class.base::HistogramBase"* %193 to i64
  store atomic i64 %199, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %212

200:                                              ; preds = %185
  %201 = load atomic i64, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %202 = inttoptr i64 %201 to %"class.base::HistogramBase"*
  %203 = icmp eq i64 %201, 0
  br i1 %203, label %204, label %212

204:                                              ; preds = %200
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %13, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i8* %109) #11
  %205 = call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, i64 1, i64 100000, i32 100, i32 1) #11
  %206 = load i8, i8* %74, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  %209 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %204, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  %211 = ptrtoint %"class.base::HistogramBase"* %205 to i64
  store atomic i64 %211, i64* @_ZZN2cc16RasterQueryQueue26CheckRasterFinishedQueriesEvE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %212

212:                                              ; preds = %210, %200, %198, %188
  %213 = phi %"class.base::HistogramBase"* [ %190, %188 ], [ %193, %198 ], [ %202, %200 ], [ %205, %210 ]
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %213, %"class.base::TimeDelta"* nonnull dereferenceable(8) %5) #11
  %214 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %78, i64 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = icmp ult i64 %77, %215
  br i1 %216, label %221, label %217

217:                                              ; preds = %212
  %218 = sub i64 %77, %215
  %219 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %78, i64 0, i32 0, i32 1
  %220 = load i64, i64* %219, align 8
  br label %226

221:                                              ; preds = %212
  %222 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %78, i64 0, i32 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = sub i64 %77, %215
  %225 = add i64 %224, %223
  br label %226

226:                                              ; preds = %217, %221
  %227 = phi i64 [ %220, %217 ], [ %223, %221 ]
  %228 = phi i64 [ %218, %217 ], [ %225, %221 ]
  %229 = add i64 %215, 1
  %230 = add i64 %229, %228
  %231 = urem i64 %230, %227
  %232 = call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN2cc11RasterQueryEE5eraseENS_8internal29circular_deque_const_iteratorIS2_EES6_(%"class.base::circular_deque"* %21, %"class.base::circular_deque"* %78, i64 %77, %"class.base::circular_deque"* %78, i64 %231) #11
  %233 = extractvalue { %"class.base::circular_deque"*, i64 } %232, 0
  %234 = extractvalue { %"class.base::circular_deque"*, i64 } %232, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #11
  %235 = load i64, i64* %24, align 8
  %236 = icmp eq i64 %234, %235
  br i1 %236, label %239, label %76

237:                                              ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #11
  %238 = load i64, i64* %24, align 8
  br label %239

239:                                              ; preds = %226, %27, %237
  %240 = phi i64 [ %39, %27 ], [ %238, %237 ], [ %234, %226 ]
  %241 = load i64, i64* %22, align 8
  %242 = icmp ult i64 %240, %241
  br i1 %242, label %245, label %243

243:                                              ; preds = %239
  %244 = sub i64 %240, %241
  br label %250

245:                                              ; preds = %239
  %246 = getelementptr inbounds %"class.cc::RasterQueryQueue", %"class.cc::RasterQueryQueue"* %0, i64 0, i32 4, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = sub i64 %240, %241
  %249 = add i64 %248, %247
  br label %250

250:                                              ; preds = %243, %245
  %251 = phi i64 [ %244, %243 ], [ %249, %245 ]
  %252 = icmp ne i64 %251, 0
  call void @_ZN3viz21RasterContextProvider23ScopedRasterContextLockD1Ev(%"class.viz::RasterContextProvider::ScopedRasterContextLock"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br label %253

253:                                              ; preds = %20, %250
  %254 = phi i1 [ %252, %250 ], [ false, %20 ]
  %255 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %15) #11
  ret i1 %254
}

declare void @_ZN3viz21RasterContextProvider23ScopedRasterContextLockC1EPS0_PKc(%"class.viz::RasterContextProvider::ScopedRasterContextLock"*, %"class.viz::RasterContextProvider"*, i8*) unnamed_addr #5

declare i8* @_ZN2cc23GetClientNameForMetricsEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeDeltaESA_ji(%"class.std::__1::basic_string"* dereferenceable(24), i64, i64, i32, i32) local_unnamed_addr #5

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #5

declare void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN3viz21RasterContextProvider23ScopedRasterContextLockD1Ev(%"class.viz::RasterContextProvider::ScopedRasterContextLock"*) unnamed_addr #6

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #7

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN2cc11RasterQueryEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"* %7, %"struct.cc::RasterQuery"* %8, %"struct.cc::RasterQuery"* %12)
  %13 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"struct.cc::RasterQuery"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"* %7, %"struct.cc::RasterQuery"* %15, %"struct.cc::RasterQuery"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"*, %"struct.cc::RasterQuery"*, %"struct.cc::RasterQuery"*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"struct.cc::RasterQuery"*, align 8
  %6 = alloca %"struct.cc::RasterQuery"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"struct.cc::RasterQuery"* %1, %"struct.cc::RasterQuery"** %5, align 8
  store %"struct.cc::RasterQuery"* %2, %"struct.cc::RasterQuery"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"struct.cc::RasterQuery"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"struct.cc::RasterQuery"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN2cc11RasterQueryEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  %17 = bitcast %"struct.cc::RasterQuery"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN2cc11RasterQueryEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %26 = load %"struct.cc::RasterQuery"*, %"struct.cc::RasterQuery"** %5, align 8
  %27 = load %"struct.cc::RasterQuery"*, %"struct.cc::RasterQuery"** %6, align 8
  %28 = icmp eq %"struct.cc::RasterQuery"* %26, %27
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = ptrtoint %"struct.cc::RasterQuery"* %26 to i64
  %31 = getelementptr %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %27, i64 -1, i32 0
  %32 = ptrtoint i32* %31 to i64
  %33 = sub i64 %32, %30
  %34 = udiv i64 %33, 40
  %35 = add nuw nsw i64 %34, 1
  %36 = getelementptr %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %26, i64 %35
  store %"struct.cc::RasterQuery"* %36, %"struct.cc::RasterQuery"** %5, align 8
  br label %37

37:                                               ; preds = %29, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.cc::RasterQuery"*, %"struct.cc::RasterQuery"** %23, align 8
  %25 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %24, i64 %1
  ret %"struct.cc::RasterQuery"* %25
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN2cc11RasterQueryEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #9 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN2cc11RasterQueryEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 40) #11
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #11
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #11
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN2cc11RasterQueryEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #11
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #11
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN2cc11RasterQueryEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %48

13:                                               ; preds = %6
  %14 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"struct.cc::RasterQuery"*, %"struct.cc::RasterQuery"** %16, align 8
  %18 = ptrtoint %"struct.cc::RasterQuery"* %14 to i64
  %19 = icmp ult %"struct.cc::RasterQuery"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"struct.cc::RasterQuery"* %17 to i64
  %22 = ptrtoint %"struct.cc::RasterQuery"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #11
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #11
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"struct.cc::RasterQuery"* %14, %15
  br i1 %37, label %46, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"struct.cc::RasterQuery"* [ %44, %38 ], [ %17, %36 ]
  %40 = phi %"struct.cc::RasterQuery"* [ %43, %38 ], [ %14, %36 ]
  %41 = bitcast %"struct.cc::RasterQuery"* %39 to i8*
  %42 = bitcast %"struct.cc::RasterQuery"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 40, i1 false) #11
  %43 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %40, i64 1
  %44 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %39, i64 1
  %45 = icmp eq %"struct.cc::RasterQuery"* %43, %15
  br i1 %45, label %46, label %38

46:                                               ; preds = %38, %36
  %47 = sub i64 %2, %1
  br label %118

48:                                               ; preds = %6
  %49 = icmp ult i64 %2, %1
  br i1 %49, label %50, label %118

50:                                               ; preds = %48
  %51 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %52 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %53 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %54 = load %"struct.cc::RasterQuery"*, %"struct.cc::RasterQuery"** %53, align 8
  %55 = ptrtoint %"struct.cc::RasterQuery"* %51 to i64
  %56 = icmp ult %"struct.cc::RasterQuery"* %54, %52
  br i1 %56, label %57, label %73

57:                                               ; preds = %50
  %58 = ptrtoint %"struct.cc::RasterQuery"* %54 to i64
  %59 = ptrtoint %"struct.cc::RasterQuery"* %52 to i64
  %60 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %59, i64 %55) #11
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  %63 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %58, i64 %62) #11
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = or i1 %61, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %57
  tail call void @llvm.trap() #11
  unreachable

67:                                               ; preds = %57
  %68 = extractvalue { i64, i1 } %63, 0
  %69 = icmp ugt i64 %68, %55
  br i1 %69, label %70, label %73

70:                                               ; preds = %67
  %71 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0)) #11
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %73

73:                                               ; preds = %70, %67, %50
  %74 = icmp eq %"struct.cc::RasterQuery"* %51, %52
  br i1 %74, label %83, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"struct.cc::RasterQuery"* [ %81, %75 ], [ %54, %73 ]
  %77 = phi %"struct.cc::RasterQuery"* [ %80, %75 ], [ %51, %73 ]
  %78 = bitcast %"struct.cc::RasterQuery"* %76 to i8*
  %79 = bitcast %"struct.cc::RasterQuery"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 40, i1 false) #11
  %80 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %77, i64 1
  %81 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %76, i64 1
  %82 = icmp eq %"struct.cc::RasterQuery"* %80, %52
  br i1 %82, label %83, label %75

83:                                               ; preds = %75, %73
  %84 = sub i64 %11, %1
  %85 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %86 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %87 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %84)
  %88 = ptrtoint %"struct.cc::RasterQuery"* %85 to i64
  %89 = icmp ult %"struct.cc::RasterQuery"* %87, %86
  br i1 %89, label %90, label %106

90:                                               ; preds = %83
  %91 = ptrtoint %"struct.cc::RasterQuery"* %87 to i64
  %92 = ptrtoint %"struct.cc::RasterQuery"* %86 to i64
  %93 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %92, i64 %88) #11
  %94 = extractvalue { i64, i1 } %93, 1
  %95 = extractvalue { i64, i1 } %93, 0
  %96 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %91, i64 %95) #11
  %97 = extractvalue { i64, i1 } %96, 1
  %98 = or i1 %94, %97
  br i1 %98, label %99, label %100, !prof !3

99:                                               ; preds = %90
  call void @llvm.trap() #11
  unreachable

100:                                              ; preds = %90
  %101 = extractvalue { i64, i1 } %96, 0
  %102 = icmp ugt i64 %101, %88
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0)) #11
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  br label %106

106:                                              ; preds = %103, %100, %83
  %107 = icmp eq %"struct.cc::RasterQuery"* %85, %86
  br i1 %107, label %116, label %108

108:                                              ; preds = %106, %108
  %109 = phi %"struct.cc::RasterQuery"* [ %114, %108 ], [ %87, %106 ]
  %110 = phi %"struct.cc::RasterQuery"* [ %113, %108 ], [ %85, %106 ]
  %111 = bitcast %"struct.cc::RasterQuery"* %109 to i8*
  %112 = bitcast %"struct.cc::RasterQuery"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 40, i1 false) #11
  %113 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %110, i64 1
  %114 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %109, i64 1
  %115 = icmp eq %"struct.cc::RasterQuery"* %113, %86
  br i1 %115, label %116, label %108

116:                                              ; preds = %108, %106
  %117 = add i64 %84, %2
  br label %118

118:                                              ; preds = %48, %116, %46
  %119 = phi i64 [ %117, %116 ], [ %47, %46 ], [ 0, %48 ]
  store i64 %119, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.cc::RasterQuery"* @_ZNK4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.cc::RasterQuery"*, %"struct.cc::RasterQuery"** %23, align 8
  %25 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %24, i64 %1
  ret %"struct.cc::RasterQuery"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN2cc11RasterQueryEE5eraseENS_8internal29circular_deque_const_iteratorIS2_EES6_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #2 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i64 %2, %4
  br i1 %7, label %93, label %8

8:                                                ; preds = %5
  %9 = icmp ult i64 %2, %4
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %11 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %2)
  br i1 %9, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %14)
  tail call void @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"* %10, %"struct.cc::RasterQuery"* %11, %"struct.cc::RasterQuery"* %15)
  %16 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 0)
  br label %17

17:                                               ; preds = %8, %12
  %18 = phi %"struct.cc::RasterQuery"* [ %16, %12 ], [ %11, %8 ]
  %19 = tail call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %4)
  tail call void @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEE13DestructRangeIS3_Li0EEEvPS3_S6_(%"class.base::internal::VectorBuffer"* %10, %"struct.cc::RasterQuery"* %18, %"struct.cc::RasterQuery"* %19)
  %20 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, %2
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i64 %4, i64* %20, align 8
  br label %93

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %28 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %29

29:                                               ; preds = %84, %24
  %30 = phi i64 [ %21, %24 ], [ %91, %84 ]
  %31 = phi i64 [ %4, %24 ], [ %87, %84 ]
  %32 = phi i64 [ %2, %24 ], [ %90, %84 ]
  %33 = icmp ult i64 %31, %30
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = sub i64 %31, %30
  br label %40

36:                                               ; preds = %29
  %37 = load i64, i64* %27, align 8
  %38 = sub i64 %31, %30
  %39 = add i64 %38, %37
  br label %40

40:                                               ; preds = %36, %34
  %41 = phi i64 [ %35, %34 ], [ %39, %36 ]
  %42 = icmp ult i64 %26, %30
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = sub i64 %26, %30
  br label %49

45:                                               ; preds = %40
  %46 = load i64, i64* %27, align 8
  %47 = sub i64 %26, %30
  %48 = add i64 %47, %46
  br label %49

49:                                               ; preds = %43, %45
  %50 = phi i64 [ %44, %43 ], [ %48, %45 ]
  %51 = icmp ult i64 %41, %50
  br i1 %51, label %52, label %92

52:                                               ; preds = %49
  %53 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %31)
  %54 = add i64 %31, 1
  %55 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %54)
  %56 = call dereferenceable(40) %"struct.cc::RasterQuery"* @_ZN4base8internal12VectorBufferIN2cc11RasterQueryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %32)
  %57 = ptrtoint %"struct.cc::RasterQuery"* %53 to i64
  %58 = icmp ult %"struct.cc::RasterQuery"* %56, %55
  br i1 %58, label %59, label %74

59:                                               ; preds = %52
  %60 = ptrtoint %"struct.cc::RasterQuery"* %56 to i64
  %61 = ptrtoint %"struct.cc::RasterQuery"* %55 to i64
  %62 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %61, i64 %57) #11
  %63 = extractvalue { i64, i1 } %62, 1
  %64 = extractvalue { i64, i1 } %62, 0
  %65 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %60, i64 %64) #11
  %66 = extractvalue { i64, i1 } %65, 1
  %67 = or i1 %63, %66
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %59
  call void @llvm.trap() #11
  unreachable

69:                                               ; preds = %59
  %70 = extractvalue { i64, i1 } %65, 0
  %71 = icmp ugt i64 %70, %57
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0)) #11
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %74

74:                                               ; preds = %72, %69, %52
  %75 = icmp eq %"struct.cc::RasterQuery"* %53, %55
  br i1 %75, label %84, label %76

76:                                               ; preds = %74, %76
  %77 = phi %"struct.cc::RasterQuery"* [ %82, %76 ], [ %56, %74 ]
  %78 = phi %"struct.cc::RasterQuery"* [ %81, %76 ], [ %53, %74 ]
  %79 = bitcast %"struct.cc::RasterQuery"* %77 to i8*
  %80 = bitcast %"struct.cc::RasterQuery"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 40, i1 false) #11
  %81 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %78, i64 1
  %82 = getelementptr inbounds %"struct.cc::RasterQuery", %"struct.cc::RasterQuery"* %77, i64 1
  %83 = icmp eq %"struct.cc::RasterQuery"* %81, %55
  br i1 %83, label %84, label %76

84:                                               ; preds = %76, %74
  %85 = load i64, i64* %27, align 8
  %86 = icmp eq i64 %54, %85
  %87 = select i1 %86, i64 0, i64 %54
  %88 = add i64 %32, 1
  %89 = icmp eq i64 %88, %85
  %90 = select i1 %89, i64 0, i64 %88
  %91 = load i64, i64* %20, align 8
  br label %29

92:                                               ; preds = %49
  store i64 %32, i64* %25, align 8
  br label %93

93:                                               ; preds = %5, %92, %23
  %94 = phi i64 [ %4, %23 ], [ %2, %92 ], [ %2, %5 ]
  %95 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  %96 = insertvalue { %"class.base::circular_deque"*, i64 } %95, i64 %94, 1
  ret { %"class.base::circular_deque"*, i64 } %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
