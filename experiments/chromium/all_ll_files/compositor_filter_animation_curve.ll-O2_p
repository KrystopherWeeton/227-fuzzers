; ModuleID = '../../third_party/blink/renderer/platform/animation/compositor_filter_animation_curve.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/compositor_filter_animation_curve.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CompositorFilterAnimationCurve" = type { %"class.blink::CompositorAnimationCurve", %"class.std::__1::unique_ptr" }
%"class.blink::CompositorAnimationCurve" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::KeyframedFilterAnimationCurve"* }
%"class.cc::KeyframedFilterAnimationCurve" = type { %"class.cc::FilterAnimationCurve", %"class.std::__1::vector", %"class.std::__1::unique_ptr.3", double }
%"class.cc::FilterAnimationCurve" = type { %"class.gfx::AnimationCurve", %"class.cc::FilterAnimationCurve::Target"* }
%"class.gfx::AnimationCurve" = type { i32 (...)** }
%"class.cc::FilterAnimationCurve::Target" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.cc::FilterKeyframe"* }
%"class.cc::FilterKeyframe" = type { %"class.gfx::Keyframe", %"class.cc::FilterOperations" }
%"class.gfx::Keyframe" = type { i32 (...)**, %"class.base::TimeDelta", %"class.std::__1::unique_ptr.3" }
%"class.base::TimeDelta" = type { i64 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.7" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.16" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.11", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.10, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.10 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.13" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::unique_ptr.0"* }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gfx::TimingFunction"* }
%"class.gfx::TimingFunction" = type { i32 (...)** }
%"class.blink::CompositorFilterKeyframe" = type { %"class.blink::CompositorKeyframe", %"class.std::__1::unique_ptr.0" }
%"class.blink::CompositorKeyframe" = type { i32 (...)** }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }

@_ZTVN5blink30CompositorFilterAnimationCurveE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CompositorFilterAnimationCurve"*)* @_ZN5blink30CompositorFilterAnimationCurveD2Ev to i8*), i8* bitcast (void (%"class.blink::CompositorFilterAnimationCurve"*)* @_ZN5blink30CompositorFilterAnimationCurveD0Ev to i8*), i8* bitcast (%"class.gfx::AnimationCurve"* (%"class.blink::CompositorFilterAnimationCurve"*)* @_ZNK5blink30CompositorFilterAnimationCurve21CloneToAnimationCurveEv to i8*)] }, align 8

@_ZN5blink30CompositorFilterAnimationCurveC1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorFilterAnimationCurve"*), void (%"class.blink::CompositorFilterAnimationCurve"*)* @_ZN5blink30CompositorFilterAnimationCurveC2Ev
@_ZN5blink30CompositorFilterAnimationCurveD1Ev = hidden unnamed_addr alias void (%"class.blink::CompositorFilterAnimationCurve"*), void (%"class.blink::CompositorFilterAnimationCurve"*)* @_ZN5blink30CompositorFilterAnimationCurveD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CompositorFilterAnimationCurveC2Ev(%"class.blink::CompositorFilterAnimationCurve"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30CompositorFilterAnimationCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.cc::KeyframedFilterAnimationCurve"* @_ZN2cc29KeyframedFilterAnimationCurve6CreateEv() #4
  %4 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.cc::KeyframedFilterAnimationCurve"* %3, %"class.cc::KeyframedFilterAnimationCurve"** %4, align 8
  ret void
}

declare %"class.cc::KeyframedFilterAnimationCurve"* @_ZN2cc29KeyframedFilterAnimationCurve6CreateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CompositorFilterAnimationCurveD2Ev(%"class.blink::CompositorFilterAnimationCurve"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30CompositorFilterAnimationCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.cc::KeyframedFilterAnimationCurve"*, %"class.cc::KeyframedFilterAnimationCurve"** %3, align 8
  store %"class.cc::KeyframedFilterAnimationCurve"* null, %"class.cc::KeyframedFilterAnimationCurve"** %3, align 8
  %5 = icmp eq %"class.cc::KeyframedFilterAnimationCurve"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.cc::KeyframedFilterAnimationCurve"* %4 to void (%"class.cc::KeyframedFilterAnimationCurve"*)***
  %8 = load void (%"class.cc::KeyframedFilterAnimationCurve"*)**, void (%"class.cc::KeyframedFilterAnimationCurve"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.cc::KeyframedFilterAnimationCurve"*)*, void (%"class.cc::KeyframedFilterAnimationCurve"*)** %8, i64 1
  %10 = load void (%"class.cc::KeyframedFilterAnimationCurve"*)*, void (%"class.cc::KeyframedFilterAnimationCurve"*)** %9, align 8
  tail call void %10(%"class.cc::KeyframedFilterAnimationCurve"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CompositorFilterAnimationCurveD0Ev(%"class.blink::CompositorFilterAnimationCurve"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink30CompositorFilterAnimationCurveE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.cc::KeyframedFilterAnimationCurve"*, %"class.cc::KeyframedFilterAnimationCurve"** %3, align 8
  store %"class.cc::KeyframedFilterAnimationCurve"* null, %"class.cc::KeyframedFilterAnimationCurve"** %3, align 8
  %5 = icmp eq %"class.cc::KeyframedFilterAnimationCurve"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.cc::KeyframedFilterAnimationCurve"* %4 to void (%"class.cc::KeyframedFilterAnimationCurve"*)***
  %8 = load void (%"class.cc::KeyframedFilterAnimationCurve"*)**, void (%"class.cc::KeyframedFilterAnimationCurve"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.cc::KeyframedFilterAnimationCurve"*)*, void (%"class.cc::KeyframedFilterAnimationCurve"*)** %8, i64 1
  %10 = load void (%"class.cc::KeyframedFilterAnimationCurve"*)*, void (%"class.cc::KeyframedFilterAnimationCurve"*)** %9, align 8
  tail call void %10(%"class.cc::KeyframedFilterAnimationCurve"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::CompositorFilterAnimationCurve"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CompositorFilterAnimationCurve11AddKeyframeERKNS_24CompositorFilterKeyframeE(%"class.blink::CompositorFilterAnimationCurve"* nocapture readonly, %"class.blink::CompositorFilterKeyframe"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.cc::KeyframedFilterAnimationCurve"*, %"class.cc::KeyframedFilterAnimationCurve"** %3, align 8
  %5 = tail call %"class.cc::FilterKeyframe"* @_ZNK5blink24CompositorFilterKeyframe9CloneToCCEv(%"class.blink::CompositorFilterKeyframe"* %1) #4
  tail call void @_ZN2cc29KeyframedFilterAnimationCurve11AddKeyframeENSt3__110unique_ptrINS_14FilterKeyframeENS1_14default_deleteIS3_EEEE(%"class.cc::KeyframedFilterAnimationCurve"* %4, %"class.cc::FilterKeyframe"* %5) #4
  ret void
}

declare void @_ZN2cc29KeyframedFilterAnimationCurve11AddKeyframeENSt3__110unique_ptrINS_14FilterKeyframeENS1_14default_deleteIS3_EEEE(%"class.cc::KeyframedFilterAnimationCurve"*, %"class.cc::FilterKeyframe"*) local_unnamed_addr #1

declare %"class.cc::FilterKeyframe"* @_ZNK5blink24CompositorFilterKeyframe9CloneToCCEv(%"class.blink::CompositorFilterKeyframe"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CompositorFilterAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorFilterAnimationCurve"* nocapture readonly, %"class.blink::TimingFunction"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.cc::KeyframedFilterAnimationCurve"*, %"class.cc::KeyframedFilterAnimationCurve"** %3, align 8
  %5 = bitcast %"class.blink::TimingFunction"* %1 to %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)***
  %6 = load %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)**, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)** %6, i64 6
  %8 = load %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)*, %"class.gfx::TimingFunction"* (%"class.blink::TimingFunction"*)** %7, align 8
  %9 = tail call %"class.gfx::TimingFunction"* %8(%"class.blink::TimingFunction"* %1) #4
  %10 = ptrtoint %"class.gfx::TimingFunction"* %9 to i64
  %11 = getelementptr inbounds %"class.cc::KeyframedFilterAnimationCurve", %"class.cc::KeyframedFilterAnimationCurve"* %4, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.gfx::TimingFunction"*, %"class.gfx::TimingFunction"** %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr.3"* %11 to i64*
  store i64 %10, i64* %14, align 8
  %15 = icmp eq %"class.gfx::TimingFunction"* %13, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.gfx::TimingFunction"* %13 to void (%"class.gfx::TimingFunction"*)***
  %18 = load void (%"class.gfx::TimingFunction"*)**, void (%"class.gfx::TimingFunction"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gfx::TimingFunction"*)*, void (%"class.gfx::TimingFunction"*)** %18, i64 1
  %20 = load void (%"class.gfx::TimingFunction"*)*, void (%"class.gfx::TimingFunction"*)** %19, align 8
  tail call void %20(%"class.gfx::TimingFunction"* nonnull %13) #4
  br label %21

21:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink30CompositorFilterAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorFilterAnimationCurve"* nocapture readonly, double) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.cc::KeyframedFilterAnimationCurve"*, %"class.cc::KeyframedFilterAnimationCurve"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::KeyframedFilterAnimationCurve", %"class.cc::KeyframedFilterAnimationCurve"* %4, i64 0, i32 3
  store double %1, double* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::AnimationCurve"* @_ZNK5blink30CompositorFilterAnimationCurve21CloneToAnimationCurveEv(%"class.blink::CompositorFilterAnimationCurve"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CompositorFilterAnimationCurve", %"class.blink::CompositorFilterAnimationCurve"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.cc::KeyframedFilterAnimationCurve"*, %"class.cc::KeyframedFilterAnimationCurve"** %2, align 8
  %4 = bitcast %"class.cc::KeyframedFilterAnimationCurve"* %3 to %"class.gfx::AnimationCurve"* (%"class.cc::KeyframedFilterAnimationCurve"*)***
  %5 = load %"class.gfx::AnimationCurve"* (%"class.cc::KeyframedFilterAnimationCurve"*)**, %"class.gfx::AnimationCurve"* (%"class.cc::KeyframedFilterAnimationCurve"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.gfx::AnimationCurve"* (%"class.cc::KeyframedFilterAnimationCurve"*)*, %"class.gfx::AnimationCurve"* (%"class.cc::KeyframedFilterAnimationCurve"*)** %5, i64 5
  %7 = load %"class.gfx::AnimationCurve"* (%"class.cc::KeyframedFilterAnimationCurve"*)*, %"class.gfx::AnimationCurve"* (%"class.cc::KeyframedFilterAnimationCurve"*)** %6, align 8
  %8 = tail call %"class.gfx::AnimationCurve"* %7(%"class.cc::KeyframedFilterAnimationCurve"* %3) #4
  ret %"class.gfx::AnimationCurve"* %8
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
