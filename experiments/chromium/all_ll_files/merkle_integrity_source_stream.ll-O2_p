; ModuleID = '../../content/browser/loader/merkle_integrity_source_stream.cc'
source_filename = "../../content/browser/loader/merkle_integrity_source_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::MerkleIntegritySourceStream" = type <{ %"class.net::FilterSourceStream.base", [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, [32 x i8], i64, i8, i8, [6 x i8] }>
%"class.net::FilterSourceStream.base" = type <{ %"class.net::SourceStream.base", [4 x i8], %"class.std::__1::unique_ptr", i32, [4 x i8], %class.scoped_refptr, %class.scoped_refptr.2, %class.scoped_refptr, i32, [4 x i8], %"class.base::OnceCallback", i8 }>
%"class.net::SourceStream.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::SourceStream"* }
%class.scoped_refptr.2 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr, i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::SourceStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.net::FilterSourceStream" = type <{ %"class.net::SourceStream.base", [4 x i8], %"class.std::__1::unique_ptr", i32, [4 x i8], %class.scoped_refptr, %class.scoped_refptr.2, %class.scoped_refptr, i32, [4 x i8], %"class.base::OnceCallback", i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.base::span.8" = type { %"struct.base::internal::ExtentStorage", i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%struct.sha256_state_st = type { [8 x i32], i32, i32, [64 x i8], i32, i32 }

$_ZNK4base4spanIKcLm18446744073709551615EE7subspanEmm = comdat any

@_ZTVN7content27MerkleIntegritySourceStreamE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::MerkleIntegritySourceStream"*)* @_ZN7content27MerkleIntegritySourceStreamD2Ev to i8*), i8* bitcast (void (%"class.content::MerkleIntegritySourceStream"*)* @_ZN7content27MerkleIntegritySourceStreamD0Ev to i8*), i8* bitcast (i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net18FilterSourceStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream11DescriptionEv to i8*), i8* bitcast (i1 (%"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream16MayHaveMoreBytesEv to i8*), i8* bitcast (i32 (%"class.content::MerkleIntegritySourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)* @_ZN7content27MerkleIntegritySourceStream10FilterDataEPN3net8IOBufferEiS3_iPib to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.content::MerkleIntegritySourceStream"*)* @_ZNK7content27MerkleIntegritySourceStream15GetTypeAsStringEv to i8*), i8* bitcast (i1 (%"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream12NeedMoreDataEv to i8*)] }, align 8
@_ZN7content12_GLOBAL__N_115kMiSha256HeaderE = internal constant [14 x i8] c"mi-sha256-03=\00", align 1
@.str = private unnamed_addr constant [10 x i8] c"MI-SHA256\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"static_cast<size_t>(32) == hash.size()\00", align 1
@.str.2 = private unnamed_addr constant [63 x i8] c"../../content/browser/loader/merkle_integrity_source_stream.cc\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"count == dynamic_extent || count <= size() - offset\00", align 1

@_ZN7content27MerkleIntegritySourceStreamC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_10unique_ptrIN3net12SourceStreamENS3_14default_deleteIS9_EEEE = hidden unnamed_addr alias void (%"class.content::MerkleIntegritySourceStream"*, i8*, i64, %"class.net::SourceStream"*), void (%"class.content::MerkleIntegritySourceStream"*, i8*, i64, %"class.net::SourceStream"*)* @_ZN7content27MerkleIntegritySourceStreamC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_10unique_ptrIN3net12SourceStreamENS3_14default_deleteIS9_EEEE
@_ZN7content27MerkleIntegritySourceStreamD1Ev = hidden unnamed_addr alias void (%"class.content::MerkleIntegritySourceStream"*), void (%"class.content::MerkleIntegritySourceStream"*)* @_ZN7content27MerkleIntegritySourceStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content27MerkleIntegritySourceStreamC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_10unique_ptrIN3net12SourceStreamENS3_14default_deleteIS9_EEEE(%"class.content::MerkleIntegritySourceStream"*, i8*, i64, %"class.net::SourceStream"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %2, i64* %9, align 8
  %10 = bitcast %"class.content::MerkleIntegritySourceStream"* %0 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamC2ENS_12SourceStream10SourceTypeENSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.net::FilterSourceStream"* %10, i32 4, %"class.net::SourceStream"* %3) #7
  %11 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN7content27MerkleIntegritySourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 6
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 7
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 8
  store i8 0, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #7
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #7
  %20 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %1, i64 %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN7content12_GLOBAL__N_115kMiSha256HeaderE, i64 0, i64 0), i64 13, i32 0) #7
  %21 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7
  br i1 %20, label %22, label %42

22:                                               ; preds = %4
  %23 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %5, i64 13, i64 -1)
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %25 = extractvalue { i8*, i64 } %23, 0
  store i8* %25, i8** %24, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %27 = extractvalue { i8*, i64 } %23, 1
  store i64 %27, i64* %26, align 8
  %28 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, %"class.std::__1::basic_string"* nonnull %6) #7
  br i1 %28, label %29, label %38

29:                                               ; preds = %22
  %30 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %19, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp eq i64 %36, 32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  br i1 %37, label %45, label %43

38:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  %39 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  br label %43

42:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  br label %43

43:                                               ; preds = %29, %42, %38
  %44 = phi i8 [ %32, %29 ], [ 0, %42 ], [ %41, %38 ]
  store i8 1, i8* %14, align 8
  br label %49

45:                                               ; preds = %29
  %46 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 5, i64 0
  %47 = load i8*, i8** %18, align 8
  %48 = select i1 %33, i8* %47, i8* %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 1 %48, i64 32, i1 false)
  br label %49

49:                                               ; preds = %45, %43
  %50 = phi i8 [ %32, %45 ], [ %44, %43 ]
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %53) #8
  br label %54

54:                                               ; preds = %52, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #7
  ret void
}

declare void @_ZN3net18FilterSourceStreamC2ENS_12SourceStream10SourceTypeENSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.net::FilterSourceStream"*, i32, %"class.net::SourceStream"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content27MerkleIntegritySourceStreamD2Ev(%"class.content::MerkleIntegritySourceStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN7content27MerkleIntegritySourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.content::MerkleIntegritySourceStream"* %0 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"* %21) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content27MerkleIntegritySourceStreamD0Ev(%"class.content::MerkleIntegritySourceStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN7content27MerkleIntegritySourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.content::MerkleIntegritySourceStream"* %0 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"* %21) #7
  %22 = bitcast %"class.content::MerkleIntegritySourceStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content27MerkleIntegritySourceStream10FilterDataEPN3net8IOBufferEiS3_iPib(%"class.content::MerkleIntegritySourceStream"*, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.net::IOBuffer"* nocapture readonly, i32, i32* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::span", align 8
  %9 = alloca %"class.base::span.8", align 8
  %10 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 7
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %55

13:                                               ; preds = %7
  %14 = bitcast %"class.base::span"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  %16 = icmp sgt i32 %4, -1
  %17 = bitcast %"class.base::span"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  br i1 %16, label %19, label %18, !prof !3

18:                                               ; preds = %13
  tail call void @llvm.trap() #7
  unreachable

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  %21 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sext i32 %4 to i64
  store i64 %24, i64* %15, align 8
  %25 = bitcast i8** %20 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.base::span.8"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.base::span.8", %"class.base::span.8"* %9, i64 0, i32 0, i32 0
  %28 = icmp sgt i32 %2, -1
  %29 = bitcast %"class.base::span.8"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  br i1 %28, label %31, label %30, !prof !3

30:                                               ; preds = %19
  tail call void @llvm.trap() #7
  unreachable

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.base::span.8", %"class.base::span.8"* %9, i64 0, i32 1
  %33 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sext i32 %2 to i64
  store i64 %36, i64* %27, align 8
  %37 = bitcast i8** %32 to i64*
  store i64 %35, i64* %37, align 8
  %38 = call zeroext i1 @_ZN7content27MerkleIntegritySourceStream14FilterDataImplEPN4base4spanIcLm18446744073709551615EEEPNS2_IKcLm18446744073709551615EEEb(%"class.content::MerkleIntegritySourceStream"* %0, %"class.base::span.8"* nonnull %9, %"class.base::span"* nonnull %8, i1 zeroext %6)
  %39 = load i64, i64* %15, align 8
  %40 = icmp ult i64 %39, 2147483648
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %31
  call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %31
  %43 = trunc i64 %39 to i32
  %44 = sub nsw i32 %4, %43
  store i32 %44, i32* %5, align 4
  br i1 %38, label %46, label %45

45:                                               ; preds = %42
  store i8 1, i8* %10, align 8
  br label %53

46:                                               ; preds = %42
  %47 = load i64, i64* %27, align 8
  %48 = icmp ult i64 %47, 2147483648
  br i1 %48, label %50, label %49, !prof !3

49:                                               ; preds = %46
  call void @llvm.trap() #7
  unreachable

50:                                               ; preds = %46
  %51 = trunc i64 %47 to i32
  %52 = sub nsw i32 %2, %51
  br label %53

53:                                               ; preds = %50, %45
  %54 = phi i32 [ %52, %50 ], [ -330, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  br label %55

55:                                               ; preds = %7, %53
  %56 = phi i32 [ %54, %53 ], [ -330, %7 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content27MerkleIntegritySourceStream14FilterDataImplEPN4base4spanIcLm18446744073709551615EEEPNS2_IKcLm18446744073709551615EEEb(%"class.content::MerkleIntegritySourceStream"*, %"class.base::span.8"* nocapture, %"class.base::span"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #7
  %10 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 6
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %79

13:                                               ; preds = %4
  %14 = bitcast %"class.base::span"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #7
  %15 = call zeroext i1 @_ZN7content27MerkleIntegritySourceStream12ConsumeBytesEPN4base4spanIKcLm18446744073709551615EEEmS5_PNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.content::MerkleIntegritySourceStream"* %0, %"class.base::span"* %2, i64 8, %"class.base::span"* nonnull %6, %"class.std::__1::basic_string"* nonnull %5)
  br i1 %15, label %34, label %16

16:                                               ; preds = %13
  br i1 %3, label %17, label %76

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %28

26:                                               ; preds = %17
  %27 = zext i8 %21 to i64
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i64 [ %25, %23 ], [ %27, %26 ]
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %76

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 8
  store i8 1, i8* %32, align 1
  %33 = call zeroext i1 @_ZN7content27MerkleIntegritySourceStream13ProcessRecordEN4base4spanIKcLm18446744073709551615EEEbPNS2_IcLm18446744073709551615EEE(%"class.content::MerkleIntegritySourceStream"* %0, i64 0, i8* null, i1 zeroext true, %"class.base::span.8"* %1)
  br label %76

34:                                               ; preds = %13
  %35 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 8
  %40 = getelementptr inbounds i8, i8* %36, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = or i64 %39, %42
  %44 = shl nuw nsw i64 %43, 8
  %45 = getelementptr inbounds i8, i8* %36, i64 2
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = or i64 %44, %47
  %49 = shl nuw nsw i64 %48, 8
  %50 = getelementptr inbounds i8, i8* %36, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = or i64 %49, %52
  %54 = shl i64 %53, 8
  %55 = getelementptr inbounds i8, i8* %36, i64 4
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = or i64 %54, %57
  %59 = shl i64 %58, 8
  %60 = getelementptr inbounds i8, i8* %36, i64 5
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = or i64 %59, %62
  %64 = shl i64 %63, 8
  %65 = getelementptr inbounds i8, i8* %36, i64 6
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = or i64 %64, %67
  %69 = shl i64 %68, 8
  %70 = getelementptr inbounds i8, i8* %36, i64 7
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = or i64 %69, %72
  %74 = add i64 %73, -1
  %75 = icmp ugt i64 %74, 16383
  br i1 %75, label %76, label %78

76:                                               ; preds = %31, %16, %28, %34
  %77 = phi i1 [ false, %34 ], [ false, %28 ], [ true, %16 ], [ %33, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  br label %141

78:                                               ; preds = %34
  store i64 %73, i64* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  br label %79

79:                                               ; preds = %78, %4
  %80 = call zeroext i1 @_ZN7content27MerkleIntegritySourceStream17CopyPartialOutputEPN4base4spanIcLm18446744073709551615EEE(%"class.content::MerkleIntegritySourceStream"* %0, %"class.base::span.8"* %1)
  br i1 %80, label %81, label %141

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.base::span.8", %"class.base::span.8"* %1, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 8
  %84 = bitcast %"class.base::span"* %7 to i8*
  %85 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 1
  %87 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  br label %93

93:                                               ; preds = %81, %135
  %94 = load i64, i64* %82, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %141, label %96

96:                                               ; preds = %93
  %97 = load i8, i8* %83, align 1, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %141

99:                                               ; preds = %96
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #7
  %100 = load i64, i64* %10, align 8
  %101 = add i64 %100, 32
  %102 = call zeroext i1 @_ZN7content27MerkleIntegritySourceStream12ConsumeBytesEPN4base4spanIKcLm18446744073709551615EEEmS5_PNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.content::MerkleIntegritySourceStream"* %0, %"class.base::span"* %2, i64 %101, %"class.base::span"* nonnull %7, %"class.std::__1::basic_string"* nonnull %5)
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = load i64, i64* %85, align 8
  %105 = load i8*, i8** %86, align 8
  %106 = load i8, i8* %83, align 1, !range !2
  br label %135

107:                                              ; preds = %99
  br i1 %3, label %108, label %133

108:                                              ; preds = %107
  %109 = load i8, i8* %89, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = load i64, i64* %90, align 8
  br label %115

113:                                              ; preds = %108
  %114 = zext i8 %109 to i64
  br label %115

115:                                              ; preds = %111, %113
  %116 = phi i64 [ %112, %111 ], [ %114, %113 ]
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %133, label %118

118:                                              ; preds = %115
  br i1 %110, label %119, label %121

119:                                              ; preds = %118
  %120 = load i64, i64* %90, align 8
  br label %123

121:                                              ; preds = %118
  %122 = zext i8 %109 to i64
  br label %123

123:                                              ; preds = %119, %121
  %124 = phi i64 [ %120, %119 ], [ %122, %121 ]
  %125 = load i64, i64* %10, align 8
  %126 = icmp ugt i64 %124, %125
  br i1 %126, label %133, label %127

127:                                              ; preds = %123
  %128 = load i8*, i8** %91, align 8
  %129 = select i1 %110, i8* %128, i8* %92
  %130 = load i64, i64* %90, align 8
  %131 = zext i8 %109 to i64
  %132 = select i1 %110, i64 %130, i64 %131
  store i64 %132, i64* %85, align 8
  store i8* %129, i8** %86, align 8
  store i8 1, i8* %83, align 1
  br label %135

133:                                              ; preds = %107, %123, %115
  %134 = phi i1 [ false, %115 ], [ false, %123 ], [ true, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #7
  br label %141

135:                                              ; preds = %103, %127
  %136 = phi i8 [ %106, %103 ], [ 1, %127 ]
  %137 = phi i8* [ %105, %103 ], [ %129, %127 ]
  %138 = phi i64 [ %104, %103 ], [ %132, %127 ]
  %139 = icmp ne i8 %136, 0
  %140 = call zeroext i1 @_ZN7content27MerkleIntegritySourceStream13ProcessRecordEN4base4spanIKcLm18446744073709551615EEEbPNS2_IcLm18446744073709551615EEE(%"class.content::MerkleIntegritySourceStream"* %0, i64 %138, i8* %137, i1 zeroext %139, %"class.base::span.8"* %1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #7
  br i1 %140, label %93, label %141

141:                                              ; preds = %96, %93, %135, %133, %76, %79
  %142 = phi i1 [ true, %79 ], [ %77, %76 ], [ %134, %133 ], [ true, %96 ], [ true, %93 ], [ false, %135 ]
  %143 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %141
  %148 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %148) #8
  br label %149

149:                                              ; preds = %141, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret i1 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content27MerkleIntegritySourceStream15GetTypeAsStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.content::MerkleIntegritySourceStream"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 9, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i1 false) #7
  %6 = getelementptr inbounds i8, i8* %5, i64 9
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content27MerkleIntegritySourceStream12ConsumeBytesEPN4base4spanIKcLm18446744073709551615EEEmS5_PNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.content::MerkleIntegritySourceStream"*, %"class.base::span"*, i64, %"class.base::span"* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %18

16:                                               ; preds = %5
  %17 = zext i8 %11 to i64
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi i64 [ %15, %13 ], [ %17, %16 ]
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %43

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %2
  br i1 %24, label %43, label %25

25:                                               ; preds = %21
  %26 = tail call { i64, i8* } @_ZNK4base4spanIKcLm18446744073709551615EE7subspanEmm(%"class.base::span"* %1, i64 0, i64 %2) #7
  %27 = extractvalue { i64, i8* } %26, 0
  %28 = extractvalue { i64, i8* } %26, 1
  %29 = getelementptr inbounds %"class.base::span", %"class.base::span"* %3, i64 0, i32 0, i32 0
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.base::span", %"class.base::span"* %3, i64 0, i32 1
  store i8* %28, i8** %30, align 8
  %31 = load i64, i64* %22, align 8
  %32 = icmp ult i64 %31, %2
  br i1 %32, label %33, label %37

33:                                               ; preds = %25
  %34 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #7
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  %36 = load i64, i64* %22, align 8
  br label %37

37:                                               ; preds = %25, %33
  %38 = phi i64 [ %31, %25 ], [ %36, %33 ]
  %39 = sub i64 %38, %2
  %40 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %2
  store i64 %39, i64* %22, align 8
  store i8* %42, i8** %40, align 8
  br label %102

43:                                               ; preds = %21, %18
  br i1 %12, label %44, label %47

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %49

47:                                               ; preds = %43
  %48 = zext i8 %11 to i64
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i64 [ %46, %44 ], [ %48, %47 ]
  %51 = sub i64 %2, %50
  %52 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %51
  %55 = select i1 %54, i64 %53, i64 %51
  %56 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 1
  %57 = load i8*, i8** %56, align 8
  %58 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %8, i8* %57, i64 %55) #7
  %59 = load i64, i64* %52, align 8
  %60 = icmp ult i64 %59, %55
  br i1 %60, label %61, label %65

61:                                               ; preds = %49
  %62 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #7
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #7
  %64 = load i64, i64* %52, align 8
  br label %65

65:                                               ; preds = %49, %61
  %66 = phi i64 [ %59, %49 ], [ %64, %61 ]
  %67 = sub i64 %66, %55
  %68 = load i8*, i8** %56, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %55
  store i64 %67, i64* %52, align 8
  store i8* %69, i8** %56, align 8
  %70 = load i8, i8* %10, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  br label %77

75:                                               ; preds = %65
  %76 = zext i8 %70 to i64
  br label %77

77:                                               ; preds = %72, %75
  %78 = phi i64 [ %74, %72 ], [ %76, %75 ]
  %79 = icmp ult i64 %78, %2
  br i1 %79, label %102, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #8
  br label %88

88:                                               ; preds = %80, %85
  %89 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #7
  store i8 0, i8* %90, align 1
  store i8 0, i8* %10, align 1
  %91 = load i8, i8* %82, align 1
  %92 = icmp slt i8 %91, 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = select i1 %92, i8* %94, i8* %89
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %91 to i64
  %99 = select i1 %92, i64 %97, i64 %98
  %100 = getelementptr inbounds %"class.base::span", %"class.base::span"* %3, i64 0, i32 0, i32 0
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.base::span", %"class.base::span"* %3, i64 0, i32 1
  store i8* %95, i8** %101, align 8
  br label %102

102:                                              ; preds = %88, %77, %37
  %103 = phi i1 [ true, %37 ], [ true, %88 ], [ false, %77 ]
  ret i1 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content27MerkleIntegritySourceStream13ProcessRecordEN4base4spanIKcLm18446744073709551615EEEbPNS2_IcLm18446744073709551615EEE(%"class.content::MerkleIntegritySourceStream"*, i64, i8*, i1 zeroext, %"class.base::span.8"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.base::span", align 8
  %9 = alloca %struct.sha256_state_st, align 4
  %10 = alloca i8, align 1
  %11 = alloca [32 x i8], align 16
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  store i64 %1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  store i8* %2, i8** %15, align 8
  %16 = bitcast %struct.sha256_state_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -86, i64 112, i1 false)
  %17 = call i32 @SHA256_Init(%struct.sha256_state_st* nonnull %9) #7
  %18 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %9, i8* %2, i64 %1) #7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #7
  %19 = xor i1 %3, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %10, align 1
  %21 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %9, i8* nonnull %10, i64 1) #7
  %22 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 32, i1 false)
  %23 = call i32 @SHA256_Final(i8* nonnull %22, %struct.sha256_state_st* nonnull %9) #7
  %24 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 5, i64 0
  %25 = call i32 @bcmp(i8* nonnull %22, i8* %24, i64 32)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %68

27:                                               ; preds = %5
  br i1 %3, label %62, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 6
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #7
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %35 = load i64, i64* %14, align 8
  %36 = load i8*, i8** %15, align 8
  %37 = load i64, i64* %29, align 8
  br label %38

38:                                               ; preds = %28, %32
  %39 = phi i64 [ %30, %28 ], [ %37, %32 ]
  %40 = phi i8* [ %2, %28 ], [ %36, %32 ]
  %41 = phi i64 [ %1, %28 ], [ %35, %32 ]
  %42 = sub i64 %41, %30
  %43 = getelementptr inbounds i8, i8* %40, i64 %30
  %44 = call { i64, i8* } @_ZNK4base4spanIKcLm18446744073709551615EE7subspanEmm(%"class.base::span"* nonnull %8, i64 0, i64 %39) #7
  %45 = extractvalue { i64, i8* } %44, 0
  %46 = extractvalue { i64, i8* } %44, 1
  store i64 %45, i64* %14, align 8
  store i8* %46, i8** %15, align 8
  %47 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %48, align 8
  %49 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %50 = icmp eq i64 %42, 32
  br i1 %50, label %51, label %52

51:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  store i8* null, i8** %48, align 8
  br label %61

52:                                               ; preds = %38
  %53 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 32) #7
  %54 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %42) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i8* %53, i8* %54) #7
  %55 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  store i8* %56, i8** %48, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0), i32 228, %"class.logging::CheckOpResult"* nonnull %12) #7
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #7
  br label %61

61:                                               ; preds = %51, %52, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 %43, i64 32, i1 false)
  br label %62

62:                                               ; preds = %61, %27
  %63 = call fastcc i64 @_ZN7content12_GLOBAL__N_111CopyClampedEPN4base4spanIKcLm18446744073709551615EEEPNS2_IcLm18446744073709551615EEE(%"class.base::span"* nonnull %8, %"class.base::span.8"* %4)
  %64 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 3
  %65 = load i8*, i8** %15, align 8
  %66 = load i64, i64* %14, align 8
  %67 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %64, i8* %65, i64 %66) #7
  br label %68

68:                                               ; preds = %5, %62
  %69 = phi i1 [ true, %62 ], [ false, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #7
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content27MerkleIntegritySourceStream17CopyPartialOutputEPN4base4spanIcLm18446744073709551615EEE(%"class.content::MerkleIntegritySourceStream"*, %"class.base::span.8"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::span", align 8
  %5 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %17

15:                                               ; preds = %2
  %16 = zext i8 %10 to i64
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i64 [ %14, %12 ], [ %16, %15 ]
  %19 = icmp eq i64 %6, %18
  br i1 %19, label %61, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %26 = load i8*, i8** %24, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %28 = select i1 %11, i8* %26, i8* %27
  %29 = getelementptr inbounds %"class.content::MerkleIntegritySourceStream", %"class.content::MerkleIntegritySourceStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %10 to i64
  %32 = select i1 %11, i64 %30, i64 %31
  %33 = icmp ult i64 %32, %6
  br i1 %33, label %34, label %37

34:                                               ; preds = %20
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #7
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  br label %37

37:                                               ; preds = %20, %34
  %38 = sub i64 %32, %6
  %39 = getelementptr inbounds i8, i8* %28, i64 %6
  %40 = ptrtoint i8* %39 to i64
  store i64 %38, i64* %22, align 8
  %41 = bitcast i8** %23 to i64*
  store i64 %40, i64* %41, align 8
  %42 = call fastcc i64 @_ZN7content12_GLOBAL__N_111CopyClampedEPN4base4spanIKcLm18446744073709551615EEEPNS2_IcLm18446744073709551615EEE(%"class.base::span"* nonnull %4, %"class.base::span.8"* %1)
  %43 = load i64, i64* %5, align 8
  %44 = add i64 %43, %42
  store i64 %44, i64* %5, align 8
  %45 = load i8, i8* %9, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %37
  %48 = load i64, i64* %29, align 8
  br label %51

49:                                               ; preds = %37
  %50 = zext i8 %45 to i64
  br label %51

51:                                               ; preds = %47, %49
  %52 = phi i64 [ %48, %47 ], [ %50, %49 ]
  %53 = icmp ult i64 %44, %52
  br i1 %53, label %59, label %54

54:                                               ; preds = %51
  br i1 %46, label %55, label %57

55:                                               ; preds = %54
  %56 = load i8*, i8** %24, align 8
  store i8 0, i8* %56, align 1
  store i64 0, i64* %29, align 8
  br label %58

57:                                               ; preds = %54
  store i8 0, i8* %27, align 1
  store i8 0, i8* %9, align 1
  br label %58

58:                                               ; preds = %55, %57
  store i64 0, i64* %5, align 8
  br label %59

59:                                               ; preds = %51, %58
  %60 = phi i1 [ true, %58 ], [ false, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  br label %61

61:                                               ; preds = %17, %59
  %62 = phi i1 [ %60, %59 ], [ true, %17 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN7content12_GLOBAL__N_111CopyClampedEPN4base4spanIKcLm18446744073709551615EEEPNS2_IcLm18446744073709551615EEE(%"class.base::span"* nocapture, %"class.base::span.8"* nocapture) unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::span.8", %"class.base::span.8"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  %10 = select i1 %9, i64 %8, i64 %6
  %11 = getelementptr inbounds %"class.base::span.8", %"class.base::span.8"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %14, i64 %10, i1 false)
  %15 = load i64, i64* %5, align 8
  %16 = icmp ult i64 %15, %10
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #7
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %20 = load i64, i64* %5, align 8
  br label %21

21:                                               ; preds = %2, %17
  %22 = phi i64 [ %15, %2 ], [ %20, %17 ]
  %23 = sub i64 %22, %10
  %24 = load i8*, i8** %11, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %10
  store i64 %23, i64* %5, align 8
  store i8* %25, i8** %11, align 8
  %26 = load i64, i64* %7, align 8
  %27 = icmp ult i64 %26, %10
  br i1 %27, label %28, label %32

28:                                               ; preds = %21
  %29 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #7
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  %31 = load i64, i64* %7, align 8
  br label %32

32:                                               ; preds = %21, %28
  %33 = phi i64 [ %26, %21 ], [ %31, %28 ]
  %34 = sub i64 %33, %10
  %35 = load i8*, i8** %13, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %10
  store i64 %34, i64* %7, align 8
  store i8* %36, i8** %13, align 8
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8* } @_ZNK4base4spanIKcLm18446744073709551615EE7subspanEmm(%"class.base::span"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #7
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0)) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %1
  %27 = insertvalue { i64, i8* } undef, i64 %23, 0
  %28 = insertvalue { i64, i8* } %27, i8* %26, 1
  ret { i64, i8* } %28
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @SHA256_Init(%struct.sha256_state_st*) local_unnamed_addr #1

declare i32 @SHA256_Update(%struct.sha256_state_st*, i8*, i64) local_unnamed_addr #1

declare i32 @SHA256_Final(i8*, %struct.sha256_state_st*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i32 @_ZN3net18FilterSourceStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) unnamed_addr #1

declare void @_ZNK3net18FilterSourceStream11DescriptionEv(%"class.std::__1::basic_string"* sret, %"class.net::FilterSourceStream"*) unnamed_addr #1

declare zeroext i1 @_ZNK3net18FilterSourceStream16MayHaveMoreBytesEv(%"class.net::FilterSourceStream"*) unnamed_addr #1

declare zeroext i1 @_ZNK3net18FilterSourceStream12NeedMoreDataEv(%"class.net::FilterSourceStream"*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
