; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/forward_error_correction_internal.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/forward_error_correction_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::internal::PacketMaskTable" = type { i8*, [288 x i8] }

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_EEEvPKciS8_DpRKT_E1t = comdat any

@_ZN6webrtc18fec_private_tables20kPacketMaskBurstyTblE = external constant [0 x i8], align 1
@_ZN6webrtc18fec_private_tables20kPacketMaskRandomTblE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [86 x i8] c"../../third_party/webrtc/modules/rtp_rtcp/source/forward_error_correction_internal.cc\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"new_bit_index < 8 * new_mask_bytes\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_EEEvPKciS8_DpRKT_E1t = linkonce_odr hidden constant [4 x i8] c"\0D\01\01\00", comdat, align 1

@_ZN6webrtc8internal15PacketMaskTableC1ENS_11FecMaskTypeEi = hidden unnamed_addr alias void (%"class.webrtc::internal::PacketMaskTable"*, i32, i32), void (%"class.webrtc::internal::PacketMaskTable"*, i32, i32)* @_ZN6webrtc8internal15PacketMaskTableC2ENS_11FecMaskTypeEi
@_ZN6webrtc8internal15PacketMaskTableD1Ev = hidden unnamed_addr alias void (%"class.webrtc::internal::PacketMaskTable"*), void (%"class.webrtc::internal::PacketMaskTable"*)* @_ZN6webrtc8internal15PacketMaskTableD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc8internal15PacketMaskTableC2ENS_11FecMaskTypeEi(%"class.webrtc::internal::PacketMaskTable"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::internal::PacketMaskTable", %"class.webrtc::internal::PacketMaskTable"* %0, i64 0, i32 0
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6webrtc18fec_private_tables20kPacketMaskBurstyTblE, i64 0, i64 0), align 1
  %8 = zext i8 %7 to i32
  %9 = icmp slt i32 %8, %2
  br i1 %9, label %10, label %11

10:                                               ; preds = %6, %3
  br label %11

11:                                               ; preds = %6, %10
  %12 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6webrtc18fec_private_tables20kPacketMaskRandomTblE, i64 0, i64 0), %10 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6webrtc18fec_private_tables20kPacketMaskBurstyTblE, i64 0, i64 0), %6 ]
  store i8* %12, i8** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN6webrtc8internal15PacketMaskTable9PickTableENS_11FecMaskTypeEi(i32, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %0, 0
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6webrtc18fec_private_tables20kPacketMaskBurstyTblE, i64 0, i64 0), align 1
  %6 = zext i8 %5 to i32
  %7 = icmp slt i32 %6, %1
  br i1 %7, label %8, label %9

8:                                                ; preds = %4, %2
  br label %9

9:                                                ; preds = %4, %8
  %10 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6webrtc18fec_private_tables20kPacketMaskRandomTblE, i64 0, i64 0), %8 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6webrtc18fec_private_tables20kPacketMaskBurstyTblE, i64 0, i64 0), %4 ]
  ret i8* %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc8internal15PacketMaskTableD2Ev(%"class.webrtc::internal::PacketMaskTable"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN6webrtc8internal15PacketMaskTable6LookUpEii(%"class.webrtc::internal::PacketMaskTable"*, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp slt i32 %1, 13
  br i1 %4, label %5, label %121

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::internal::PacketMaskTable", %"class.webrtc::internal::PacketMaskTable"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = add nsw i32 %1, -1
  %9 = add nsw i32 %2, -1
  %10 = getelementptr inbounds i8, i8* %7, i64 1
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %28, label %14

12:                                               ; preds = %52
  %13 = zext i8 %33 to i32
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ 2, %5 ], [ %13, %12 ]
  %16 = phi i8* [ %10, %5 ], [ %53, %12 ]
  %17 = icmp eq i32 %8, 16
  %18 = getelementptr inbounds i8, i8* %16, i64 1
  %19 = icmp sgt i32 %9, 0
  %20 = select i1 %17, i32 6, i32 %15
  br i1 %19, label %21, label %118

21:                                               ; preds = %14
  %22 = zext i32 %9 to i64
  %23 = add nsw i64 %22, -1
  %24 = and i64 %22, 7
  %25 = icmp ult i64 %23, 7
  br i1 %25, label %102, label %26

26:                                               ; preds = %21
  %27 = sub nsw i64 %22, %24
  br label %56

28:                                               ; preds = %5, %52
  %29 = phi i8* [ %53, %52 ], [ %10, %5 ]
  %30 = phi i32 [ %54, %52 ], [ 0, %5 ]
  %31 = phi i8 [ %33, %52 ], [ 2, %5 ]
  %32 = icmp eq i32 %30, 16
  %33 = select i1 %32, i8 6, i8 %31
  %34 = load i8, i8* %29, align 1
  %35 = getelementptr i8, i8* %29, i64 1
  %36 = icmp eq i8 %34, 0
  br i1 %36, label %52, label %37

37:                                               ; preds = %28
  %38 = zext i8 %33 to i64
  %39 = zext i8 %34 to i64
  %40 = shl nuw nsw i64 %39, 1
  %41 = add nsw i64 %40, -1
  %42 = add nsw i64 %39, -1
  %43 = zext i64 %42 to i65
  %44 = add nsw i64 %39, -2
  %45 = zext i64 %44 to i65
  %46 = mul i65 %43, %45
  %47 = lshr i65 %46, 1
  %48 = trunc i65 %47 to i64
  %49 = add i64 %41, %48
  %50 = mul i64 %49, %38
  %51 = getelementptr i8, i8* %35, i64 %50
  br label %52

52:                                               ; preds = %37, %28
  %53 = phi i8* [ %35, %28 ], [ %51, %37 ]
  %54 = add nuw nsw i32 %30, 1
  %55 = icmp eq i32 %54, %8
  br i1 %55, label %12, label %28

56:                                               ; preds = %56, %26
  %57 = phi i64 [ 0, %26 ], [ %95, %56 ]
  %58 = phi i8* [ %18, %26 ], [ %99, %56 ]
  %59 = phi i64 [ %27, %26 ], [ %100, %56 ]
  %60 = trunc i64 %57 to i32
  %61 = or i32 %60, 1
  %62 = mul nsw i32 %20, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %58, i64 %63
  %65 = trunc i64 %57 to i32
  %66 = or i32 %65, 2
  %67 = mul nsw i32 %20, %66
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %64, i64 %68
  %70 = trunc i64 %57 to i32
  %71 = or i32 %70, 3
  %72 = mul nsw i32 %20, %71
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %69, i64 %73
  %75 = trunc i64 %57 to i32
  %76 = or i32 %75, 4
  %77 = mul nsw i32 %20, %76
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %74, i64 %78
  %80 = trunc i64 %57 to i32
  %81 = or i32 %80, 5
  %82 = mul nsw i32 %20, %81
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %79, i64 %83
  %85 = trunc i64 %57 to i32
  %86 = or i32 %85, 6
  %87 = mul nsw i32 %20, %86
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %84, i64 %88
  %90 = trunc i64 %57 to i32
  %91 = or i32 %90, 7
  %92 = mul nsw i32 %20, %91
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %89, i64 %93
  %95 = add nuw nsw i64 %57, 8
  %96 = trunc i64 %95 to i32
  %97 = mul nsw i32 %20, %96
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %94, i64 %98
  %100 = add i64 %59, -8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %56

102:                                              ; preds = %56, %21
  %103 = phi i8* [ undef, %21 ], [ %99, %56 ]
  %104 = phi i64 [ 0, %21 ], [ %95, %56 ]
  %105 = phi i8* [ %18, %21 ], [ %99, %56 ]
  %106 = icmp eq i64 %24, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %102, %107
  %108 = phi i64 [ %111, %107 ], [ %104, %102 ]
  %109 = phi i8* [ %115, %107 ], [ %105, %102 ]
  %110 = phi i64 [ %116, %107 ], [ %24, %102 ]
  %111 = add nuw nsw i64 %108, 1
  %112 = trunc i64 %111 to i32
  %113 = mul nsw i32 %20, %112
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %109, i64 %114
  %116 = add i64 %110, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %107, !llvm.loop !2

118:                                              ; preds = %102, %107, %14
  %119 = phi i8* [ %18, %14 ], [ %103, %102 ], [ %115, %107 ]
  %120 = mul nsw i32 %20, %2
  br label %217

121:                                              ; preds = %3
  %122 = icmp ugt i32 %1, 16
  %123 = select i1 %122, i32 6, i32 2
  %124 = icmp sgt i32 %2, 0
  br i1 %124, label %125, label %134

125:                                              ; preds = %121
  %126 = sext i32 %1 to i64
  %127 = zext i32 %2 to i64
  %128 = zext i32 %123 to i64
  br label %129

129:                                              ; preds = %137, %125
  %130 = phi i64 [ 0, %125 ], [ %138, %137 ]
  %131 = trunc i64 %130 to i32
  %132 = mul nsw i32 %123, %131
  %133 = zext i32 %132 to i64
  br label %140

134:                                              ; preds = %137, %121
  %135 = getelementptr inbounds %"class.webrtc::internal::PacketMaskTable", %"class.webrtc::internal::PacketMaskTable"* %0, i64 0, i32 1, i64 0
  %136 = mul nsw i32 %123, %2
  br label %217

137:                                              ; preds = %140
  %138 = add nuw nsw i64 %130, 1
  %139 = icmp eq i64 %138, %127
  br i1 %139, label %134, label %129

140:                                              ; preds = %140, %129
  %141 = phi i64 [ 0, %129 ], [ %215, %140 ]
  %142 = shl nsw i64 %141, 3
  %143 = trunc i64 %142 to i32
  %144 = srem i32 %143, %2
  %145 = zext i32 %144 to i64
  %146 = icmp eq i64 %130, %145
  %147 = icmp slt i64 %142, %126
  %148 = and i1 %147, %146
  %149 = select i1 %148, i8 -128, i8 0
  %150 = or i64 %142, 1
  %151 = trunc i64 %150 to i32
  %152 = srem i32 %151, %2
  %153 = zext i32 %152 to i64
  %154 = icmp eq i64 %130, %153
  %155 = icmp slt i64 %150, %126
  %156 = and i1 %155, %154
  %157 = select i1 %156, i8 64, i8 0
  %158 = or i8 %157, %149
  %159 = or i64 %142, 2
  %160 = trunc i64 %159 to i32
  %161 = srem i32 %160, %2
  %162 = zext i32 %161 to i64
  %163 = icmp eq i64 %130, %162
  %164 = icmp slt i64 %159, %126
  %165 = and i1 %164, %163
  %166 = select i1 %165, i8 32, i8 0
  %167 = or i8 %158, %166
  %168 = or i64 %142, 3
  %169 = trunc i64 %168 to i32
  %170 = srem i32 %169, %2
  %171 = zext i32 %170 to i64
  %172 = icmp eq i64 %130, %171
  %173 = icmp slt i64 %168, %126
  %174 = and i1 %173, %172
  %175 = select i1 %174, i8 16, i8 0
  %176 = or i8 %167, %175
  %177 = or i64 %142, 4
  %178 = trunc i64 %177 to i32
  %179 = srem i32 %178, %2
  %180 = zext i32 %179 to i64
  %181 = icmp eq i64 %130, %180
  %182 = icmp slt i64 %177, %126
  %183 = and i1 %182, %181
  %184 = select i1 %183, i8 8, i8 0
  %185 = or i8 %176, %184
  %186 = or i64 %142, 5
  %187 = trunc i64 %186 to i32
  %188 = srem i32 %187, %2
  %189 = zext i32 %188 to i64
  %190 = icmp eq i64 %130, %189
  %191 = icmp slt i64 %186, %126
  %192 = and i1 %191, %190
  %193 = select i1 %192, i8 4, i8 0
  %194 = or i8 %185, %193
  %195 = or i64 %142, 6
  %196 = trunc i64 %195 to i32
  %197 = srem i32 %196, %2
  %198 = zext i32 %197 to i64
  %199 = icmp eq i64 %130, %198
  %200 = icmp slt i64 %195, %126
  %201 = and i1 %200, %199
  %202 = select i1 %201, i8 2, i8 0
  %203 = or i8 %194, %202
  %204 = or i64 %142, 7
  %205 = trunc i64 %204 to i32
  %206 = srem i32 %205, %2
  %207 = zext i32 %206 to i64
  %208 = icmp eq i64 %130, %207
  %209 = icmp slt i64 %204, %126
  %210 = and i1 %209, %208
  %211 = zext i1 %210 to i8
  %212 = or i8 %203, %211
  %213 = add nuw nsw i64 %141, %133
  %214 = getelementptr inbounds %"class.webrtc::internal::PacketMaskTable", %"class.webrtc::internal::PacketMaskTable"* %0, i64 0, i32 1, i64 %213
  store i8 %212, i8* %214, align 1
  %215 = add nuw nsw i64 %141, 1
  %216 = icmp eq i64 %215, %128
  br i1 %216, label %137, label %140

217:                                              ; preds = %134, %118
  %218 = phi i32 [ %136, %134 ], [ %120, %118 ]
  %219 = phi i8* [ %135, %134 ], [ %119, %118 ]
  %220 = icmp eq i32 %218, 0
  %221 = select i1 %220, i8* null, i8* %219
  %222 = sext i32 %218 to i64
  %223 = insertvalue { i8*, i64 } undef, i8* %221, 0
  %224 = insertvalue { i8*, i64 } %223, i64 %222, 1
  ret { i8*, i64 } %224
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZN6webrtc8internal16LookUpInFecTableEPKhii(i8*, i32, i32) local_unnamed_addr #3 {
  %4 = getelementptr inbounds i8, i8* %0, i64 1
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %22, label %8

6:                                                ; preds = %46
  %7 = zext i8 %27 to i32
  br label %8

8:                                                ; preds = %6, %3
  %9 = phi i32 [ 2, %3 ], [ %7, %6 ]
  %10 = phi i8* [ %4, %3 ], [ %47, %6 ]
  %11 = icmp eq i32 %1, 16
  %12 = getelementptr inbounds i8, i8* %10, i64 1
  %13 = icmp sgt i32 %2, 0
  %14 = select i1 %11, i32 6, i32 %9
  br i1 %13, label %15, label %66

15:                                               ; preds = %8
  %16 = zext i32 %2 to i64
  %17 = add nsw i64 %16, -1
  %18 = and i64 %16, 7
  %19 = icmp ult i64 %17, 7
  br i1 %19, label %50, label %20

20:                                               ; preds = %15
  %21 = sub nsw i64 %16, %18
  br label %75

22:                                               ; preds = %3, %46
  %23 = phi i8* [ %47, %46 ], [ %4, %3 ]
  %24 = phi i32 [ %48, %46 ], [ 0, %3 ]
  %25 = phi i8 [ %27, %46 ], [ 2, %3 ]
  %26 = icmp eq i32 %24, 16
  %27 = select i1 %26, i8 6, i8 %25
  %28 = load i8, i8* %23, align 1
  %29 = getelementptr i8, i8* %23, i64 1
  %30 = icmp eq i8 %28, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %22
  %32 = zext i8 %27 to i64
  %33 = zext i8 %28 to i64
  %34 = shl nuw nsw i64 %33, 1
  %35 = add nsw i64 %34, -1
  %36 = add nsw i64 %33, -1
  %37 = zext i64 %36 to i65
  %38 = add nsw i64 %33, -2
  %39 = zext i64 %38 to i65
  %40 = mul i65 %37, %39
  %41 = lshr i65 %40, 1
  %42 = trunc i65 %41 to i64
  %43 = add i64 %35, %42
  %44 = mul i64 %43, %32
  %45 = getelementptr i8, i8* %29, i64 %44
  br label %46

46:                                               ; preds = %31, %22
  %47 = phi i8* [ %29, %22 ], [ %45, %31 ]
  %48 = add nuw nsw i32 %24, 1
  %49 = icmp eq i32 %48, %1
  br i1 %49, label %6, label %22

50:                                               ; preds = %75, %15
  %51 = phi i8* [ undef, %15 ], [ %118, %75 ]
  %52 = phi i64 [ 0, %15 ], [ %114, %75 ]
  %53 = phi i8* [ %12, %15 ], [ %118, %75 ]
  %54 = icmp eq i64 %18, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %50, %55
  %56 = phi i64 [ %59, %55 ], [ %52, %50 ]
  %57 = phi i8* [ %63, %55 ], [ %53, %50 ]
  %58 = phi i64 [ %64, %55 ], [ %18, %50 ]
  %59 = add nuw nsw i64 %56, 1
  %60 = trunc i64 %59 to i32
  %61 = mul nsw i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %57, i64 %62
  %64 = add i64 %58, -1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %55, !llvm.loop !4

66:                                               ; preds = %50, %55, %8
  %67 = phi i8* [ %12, %8 ], [ %51, %50 ], [ %63, %55 ]
  %68 = add nsw i32 %2, 1
  %69 = mul nsw i32 %14, %68
  %70 = sext i32 %69 to i64
  %71 = icmp eq i32 %69, 0
  %72 = select i1 %71, i8* null, i8* %67
  %73 = insertvalue { i8*, i64 } undef, i8* %72, 0
  %74 = insertvalue { i8*, i64 } %73, i64 %70, 1
  ret { i8*, i64 } %74

75:                                               ; preds = %75, %20
  %76 = phi i64 [ 0, %20 ], [ %114, %75 ]
  %77 = phi i8* [ %12, %20 ], [ %118, %75 ]
  %78 = phi i64 [ %21, %20 ], [ %119, %75 ]
  %79 = trunc i64 %76 to i32
  %80 = or i32 %79, 1
  %81 = mul nsw i32 %14, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %77, i64 %82
  %84 = trunc i64 %76 to i32
  %85 = or i32 %84, 2
  %86 = mul nsw i32 %14, %85
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %83, i64 %87
  %89 = trunc i64 %76 to i32
  %90 = or i32 %89, 3
  %91 = mul nsw i32 %14, %90
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %88, i64 %92
  %94 = trunc i64 %76 to i32
  %95 = or i32 %94, 4
  %96 = mul nsw i32 %14, %95
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %93, i64 %97
  %99 = trunc i64 %76 to i32
  %100 = or i32 %99, 5
  %101 = mul nsw i32 %14, %100
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %98, i64 %102
  %104 = trunc i64 %76 to i32
  %105 = or i32 %104, 6
  %106 = mul nsw i32 %14, %105
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %103, i64 %107
  %109 = trunc i64 %76 to i32
  %110 = or i32 %109, 7
  %111 = mul nsw i32 %14, %110
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %108, i64 %112
  %114 = add nuw nsw i64 %76, 8
  %115 = trunc i64 %114 to i32
  %116 = mul nsw i32 %14, %115
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %113, i64 %117
  %119 = add i64 %78, -8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %50, label %75
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN6webrtc8internal14PacketMaskSizeEm(i64) local_unnamed_addr #1 {
  %2 = icmp ugt i64 %0, 16
  %3 = select i1 %2, i64 6, i64 2
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc8internal25ImportantPacketProtectionEiiiPhPNS0_15PacketMaskTableE(i32, i32, i32, i8* nocapture, %"class.webrtc::internal::PacketMaskTable"*) local_unnamed_addr #4 {
  %6 = icmp ugt i32 %1, 16
  %7 = select i1 %6, i32 6, i32 2
  %8 = tail call { i8*, i64 } @_ZN6webrtc8internal15PacketMaskTable6LookUpEii(%"class.webrtc::internal::PacketMaskTable"* %4, i32 %1, i32 %0)
  %9 = extractvalue { i8*, i64 } %8, 0
  %10 = icmp eq i32 %7, %2
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = icmp sgt i32 %0, 0
  br i1 %12, label %16, label %35

13:                                               ; preds = %5
  %14 = mul nsw i32 %2, %0
  %15 = sext i32 %14 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %9, i64 %15, i1 false) #7
  br label %35

16:                                               ; preds = %11, %30
  %17 = phi i32 [ %33, %30 ], [ 0, %11 ]
  %18 = phi i32 [ %32, %30 ], [ 0, %11 ]
  %19 = phi i32 [ %31, %30 ], [ 0, %11 ]
  %20 = sext i32 %17 to i64
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %9, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds i8, i8* %3, i64 %20
  store i8 %23, i8* %24, align 1
  %25 = or i64 %21, 1
  %26 = add nsw i64 %20, 1
  %27 = getelementptr inbounds i8, i8* %9, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds i8, i8* %3, i64 %26
  store i8 %28, i8* %29, align 1
  br i1 %6, label %36, label %30

30:                                               ; preds = %16, %36
  %31 = add nuw nsw i32 %19, 1
  %32 = add i32 %18, %7
  %33 = add i32 %17, %2
  %34 = icmp eq i32 %31, %0
  br i1 %34, label %35, label %16

35:                                               ; preds = %30, %11, %13
  ret void

36:                                               ; preds = %16
  %37 = add nsw i64 %25, 1
  %38 = add nsw i64 %20, 2
  %39 = getelementptr inbounds i8, i8* %9, i64 %37
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %3, i64 %38
  store i8 %40, i8* %41, align 1
  %42 = add nsw i64 %25, 2
  %43 = add nsw i64 %20, 3
  %44 = getelementptr inbounds i8, i8* %9, i64 %42
  %45 = load i8, i8* %44, align 1
  %46 = getelementptr inbounds i8, i8* %3, i64 %43
  store i8 %45, i8* %46, align 1
  %47 = add nsw i64 %25, 3
  %48 = add nsw i64 %20, 4
  %49 = getelementptr inbounds i8, i8* %9, i64 %47
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds i8, i8* %3, i64 %48
  store i8 %50, i8* %51, align 1
  %52 = add nsw i64 %25, 4
  %53 = add nsw i64 %20, 5
  %54 = getelementptr inbounds i8, i8* %9, i64 %52
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %3, i64 %53
  store i8 %55, i8* %56, align 1
  br label %30
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc8internal23SetProtectionAllocationEiii(i32, i32, i32) local_unnamed_addr #1 {
  %4 = sitofp i32 %1 to float
  %5 = fmul float %4, 5.000000e-01
  %6 = fptosi float %5 to i32
  %7 = icmp sgt i32 %6, %2
  %8 = select i1 %7, i32 %2, i32 %6
  %9 = icmp eq i32 %1, 1
  %10 = shl nsw i32 %2, 1
  %11 = icmp slt i32 %10, %0
  %12 = and i1 %9, %11
  %13 = select i1 %12, i32 0, i32 %8
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc8internal21UnequalProtectionMaskEiiiiPhPNS0_15PacketMaskTableE(i32, i32, i32, i32, i8* nocapture, %"class.webrtc::internal::PacketMaskTable"*) local_unnamed_addr #4 {
  %7 = sitofp i32 %1 to float
  %8 = fmul float %7, 5.000000e-01
  %9 = fptosi float %8 to i32
  %10 = icmp sgt i32 %9, %2
  %11 = select i1 %10, i32 %2, i32 %9
  %12 = icmp eq i32 %1, 1
  %13 = shl nsw i32 %2, 1
  %14 = icmp slt i32 %13, %0
  %15 = and i1 %12, %14
  %16 = select i1 %15, i32 0, i32 %11
  %17 = sub nsw i32 %1, %16
  %18 = icmp sgt i32 %16, 0
  br i1 %18, label %19, label %47

19:                                               ; preds = %6
  %20 = icmp ugt i32 %2, 16
  %21 = select i1 %20, i32 6, i32 2
  %22 = tail call { i8*, i64 } @_ZN6webrtc8internal15PacketMaskTable6LookUpEii(%"class.webrtc::internal::PacketMaskTable"* %5, i32 %2, i32 %16) #7
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = icmp eq i32 %21, %3
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = mul nsw i32 %16, %3
  %27 = sext i32 %26 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %23, i64 %27, i1 false) #7
  br label %47

28:                                               ; preds = %19, %42
  %29 = phi i32 [ %45, %42 ], [ 0, %19 ]
  %30 = phi i32 [ %44, %42 ], [ 0, %19 ]
  %31 = phi i32 [ %43, %42 ], [ 0, %19 ]
  %32 = sext i32 %29 to i64
  %33 = sext i32 %30 to i64
  %34 = getelementptr inbounds i8, i8* %23, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds i8, i8* %4, i64 %32
  store i8 %35, i8* %36, align 1
  %37 = or i64 %33, 1
  %38 = add nsw i64 %32, 1
  %39 = getelementptr inbounds i8, i8* %23, i64 %37
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %4, i64 %38
  store i8 %40, i8* %41, align 1
  br i1 %20, label %58, label %42

42:                                               ; preds = %28, %58
  %43 = add nuw nsw i32 %31, 1
  %44 = add i32 %30, %21
  %45 = add i32 %29, %3
  %46 = icmp eq i32 %43, %16
  br i1 %46, label %47, label %28

47:                                               ; preds = %42, %25, %6
  %48 = icmp sgt i32 %17, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %47
  %50 = tail call { i8*, i64 } @_ZN6webrtc8internal15PacketMaskTable6LookUpEii(%"class.webrtc::internal::PacketMaskTable"* %5, i32 %0, i32 %17) #7
  %51 = extractvalue { i8*, i64 } %50, 0
  %52 = mul nsw i32 %16, %3
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %4, i64 %53
  %55 = mul nsw i32 %17, %3
  %56 = sext i32 %55 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %51, i64 %56, i1 false) #7
  br label %57

57:                                               ; preds = %49, %47
  ret void

58:                                               ; preds = %28
  %59 = add nsw i64 %37, 1
  %60 = add nsw i64 %32, 2
  %61 = getelementptr inbounds i8, i8* %23, i64 %59
  %62 = load i8, i8* %61, align 1
  %63 = getelementptr inbounds i8, i8* %4, i64 %60
  store i8 %62, i8* %63, align 1
  %64 = add nsw i64 %37, 2
  %65 = add nsw i64 %32, 3
  %66 = getelementptr inbounds i8, i8* %23, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = getelementptr inbounds i8, i8* %4, i64 %65
  store i8 %67, i8* %68, align 1
  %69 = add nsw i64 %37, 3
  %70 = add nsw i64 %32, 4
  %71 = getelementptr inbounds i8, i8* %23, i64 %69
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds i8, i8* %4, i64 %70
  store i8 %72, i8* %73, align 1
  %74 = add nsw i64 %37, 4
  %75 = add nsw i64 %32, 5
  %76 = getelementptr inbounds i8, i8* %23, i64 %74
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds i8, i8* %4, i64 %75
  store i8 %77, i8* %78, align 1
  br label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc8internal19GeneratePacketMasksEiiibPNS0_15PacketMaskTableEPh(i32, i32, i32, i1 zeroext, %"class.webrtc::internal::PacketMaskTable"*, i8* nocapture) local_unnamed_addr #4 {
  %7 = xor i1 %3, true
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call { i8*, i64 } @_ZN6webrtc8internal15PacketMaskTable6LookUpEii(%"class.webrtc::internal::PacketMaskTable"* %4, i32 %0, i32 %1)
  %12 = extractvalue { i8*, i64 } %11, 0
  %13 = extractvalue { i8*, i64 } %11, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %12, i64 %13, i1 false)
  br label %17

14:                                               ; preds = %6
  %15 = icmp ugt i32 %0, 16
  %16 = select i1 %15, i32 6, i32 2
  tail call void @_ZN6webrtc8internal21UnequalProtectionMaskEiiiiPhPNS0_15PacketMaskTableE(i32 %0, i32 %1, i32 %2, i32 %16, i8* %5, %"class.webrtc::internal::PacketMaskTable"* %4)
  br label %17

17:                                               ; preds = %14, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc8internal17InsertZeroColumnsEiPhiii(i32, i8* nocapture, i32, i32, i32) local_unnamed_addr #4 {
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %5
  %8 = sdiv i32 %4, 8
  %9 = srem i32 %4, 8
  %10 = sub nsw i32 7, %9
  %11 = icmp slt i32 %10, %0
  %12 = select i1 %11, i32 %10, i32 %0
  br label %14

13:                                               ; preds = %14, %5
  ret void

14:                                               ; preds = %7, %14
  %15 = phi i32 [ 0, %7 ], [ %26, %14 ]
  %16 = phi i16 [ 0, %7 ], [ %25, %14 ]
  %17 = mul nsw i32 %15, %2
  %18 = add nsw i32 %17, %8
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %1, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl i32 %22, %12
  %24 = trunc i32 %23 to i8
  store i8 %24, i8* %20, align 1
  %25 = add i16 %16, 1
  %26 = zext i16 %25 to i32
  %27 = icmp slt i32 %26, %3
  br i1 %27, label %14, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc8internal10CopyColumnEPhiS1_iiii(i8* nocapture, i32, i8* nocapture, i32, i32, i32, i32) local_unnamed_addr #4 {
  %8 = shl nsw i32 %1, 3
  %9 = icmp sgt i32 %8, %5
  br i1 %9, label %10, label %18

10:                                               ; preds = %7
  %11 = icmp sgt i32 %4, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %10
  %13 = sdiv i32 %5, 8
  %14 = sdiv i32 %6, 8
  %15 = srem i32 %5, 8
  %16 = icmp ne i32 %15, 7
  %17 = zext i1 %16 to i8
  br label %20

18:                                               ; preds = %7
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str, i64 0, i64 0), i32 503, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i32 %5, i32 %8) #8
  unreachable

19:                                               ; preds = %20, %10
  ret void

20:                                               ; preds = %12, %20
  %21 = phi i32 [ 0, %12 ], [ %39, %20 ]
  %22 = phi i16 [ 0, %12 ], [ %38, %20 ]
  %23 = mul nsw i32 %21, %1
  %24 = add nsw i32 %23, %13
  %25 = mul nsw i32 %21, %3
  %26 = add nsw i32 %25, %14
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %2, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = lshr i8 %29, 7
  %31 = sext i32 %24 to i64
  %32 = getelementptr inbounds i8, i8* %0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = or i8 %33, %30
  %35 = shl i8 %34, %17
  store i8 %35, i8* %32, align 1
  %36 = load i8, i8* %28, align 1
  %37 = shl i8 %36, 1
  store i8 %37, i8* %28, align 1
  %38 = add i16 %22, 1
  %39 = zext i16 %38 to i32
  %40 = icmp slt i32 %39, %4
  br i1 %40, label %20, label %19
}

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
