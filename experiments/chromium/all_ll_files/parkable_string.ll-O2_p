; ModuleID = '../../third_party/blink/renderer/platform/bindings/parkable_string.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/parkable_string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::PartitionRoot" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock", [4 x i8], [128 x %"struct.base::internal::PartitionBucket"], %"struct.base::internal::PartitionBucket", i8, [7 x i8], %"struct.std::__1::atomic.257", %"struct.std::__1::atomic.257", %"struct.std::__1::atomic.257", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionDirectMapExtent"*, [16 x %"struct.base::internal::SlotSpanMetadata"*], i16, [6 x i8], i64, %"struct.std::__1::atomic.35", [4 x i8] }>
%"class.base::internal::MaybeSpinLock" = type { %"class.base::internal::SpinningMutex" }
%"class.base::internal::SpinningMutex" = type { %"struct.std::__1::atomic.35" }
%"struct.base::internal::PartitionBucket" = type { %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::PartitionBucket"*, i16, i16, i8, i8 }>
%"class.base::internal::PartitionFreelistEntry" = type { %"struct.base::internal::EncodedPartitionFreelistEntry"*, i64 }
%"struct.base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8], [8 x i8] }
%"struct.std::__1::atomic.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl.260" }
%"struct.std::__1::__cxx_atomic_impl.260" = type { %"struct.std::__1::__cxx_atomic_base_impl.261" }
%"struct.std::__1::__cxx_atomic_base_impl.261" = type { i64 }
%"struct.base::internal::PartitionSuperPageExtentEntry" = type { %"struct.base::PartitionRoot"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"* }
%"struct.base::internal::PartitionDirectMapExtent" = type opaque
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i32 }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i8 }
%"class.base::internal::PCScan" = type <{ %"class.base::internal::PCScanScheduler", %"struct.std::__1::atomic.262", i8, [6 x i8] }>
%"class.base::internal::PCScanScheduler" = type { %"struct.base::internal::QuarantineData", %"class.base::internal::LimitBackend", %"class.base::internal::PCScanSchedulingBackend"* }
%"struct.base::internal::QuarantineData" = type { %"struct.std::__1::atomic.257", %"struct.std::__1::atomic.257", %"struct.std::__1::atomic.257", i64 }
%"class.base::internal::LimitBackend" = type { %"class.base::internal::PCScanSchedulingBackend" }
%"class.base::internal::PCScanSchedulingBackend" = type { i32 (...)**, %"class.base::internal::PCScanScheduler"* }
%"struct.std::__1::atomic.262" = type { %"struct.std::__1::__atomic_base.263" }
%"struct.std::__1::__atomic_base.263" = type { %"struct.std::__1::__cxx_atomic_impl.264" }
%"struct.std::__1::__cxx_atomic_impl.264" = type { %"struct.std::__1::__cxx_atomic_base_impl.265" }
%"struct.std::__1::__cxx_atomic_base_impl.265" = type { i8 }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.WTF::Vector.7", i8, i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.23" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"class.blink::ParkableString" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.blink::ParkableStringImpl"* }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase", [64 x i8] }
%"class.blink::ParkableStringManager" = type { i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.std::__1::unique_ptr.31" }
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::DiskDataAllocator"* }
%"class.blink::DiskDataAllocator" = type <{ %"class.blink::mojom::blink::DiskAllocator", %"class.mojo::Receiver", %"class.base::File", %"class.WTF::Mutex", %"class.std::__1::map.208", i64, i64, i8, [7 x i8] }>
%"class.blink::mojom::blink::DiskAllocator" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::DiskAllocatorStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.34, %"class.std::__1::unique_ptr.157", %"class.base::WeakPtrFactory.207" }
%class.scoped_refptr.34 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.40, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.120", %"class.absl::optional.125", %"class.absl::optional.81", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.148", i8, [7 x i8], %class.scoped_refptr.40, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.35" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.58", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.59" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.40, %"class.std::__1::unique_ptr.66", %"class.absl::optional", %"struct.std::__1::atomic.77", i8, i8, i8, i8, i32, i32, %"class.absl::optional.81", %"class.std::__1::unique_ptr.86", i8, i64, %class.scoped_refptr.116, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.119" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.64 }
%class.scoped_refptr.64 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.65", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.65" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.40, i8, %"class.mojo::ScopedHandleBase.69", %class.scoped_refptr.70, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.71" }
%"class.mojo::ScopedHandleBase.69" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.70 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.71" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.75 }
%union.anon.75 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.76", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.76" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.89", i8, i64, %class.scoped_refptr.90, %class.scoped_refptr.112 }
%"class.base::RepeatingCallback.89" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.90 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.91", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.101", i8, [7 x i8] }>
%"class.base::RefCounted.91" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64 }
%"class.std::__1::map.101" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%class.scoped_refptr.112 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.116 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.117 }
%class.scoped_refptr.117 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.222", [4 x i8], %"class.base::RepeatingCallback.160", %class.scoped_refptr.40, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.222" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.160" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.119" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, [7 x i8], %union.anon.129 }
%union.anon.129 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.134 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.134 = type { %"class.std::__1::map.136" }
%"class.std::__1::map.136" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.147"*, i64 }
%"class.std::__1::unique_ptr.147" = type opaque
%"class.std::__1::map.148" = type { %"class.std::__1::__tree.149" }
%"class.std::__1::__tree.149" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%class.scoped_refptr.40 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.41" }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.160", %"class.base::OnceCallback.161", %"class.absl::optional.162", %"class.absl::optional.167", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.174", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.182", %"class.std::__1::map.193", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.202", i8, %class.scoped_refptr.40, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.203" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.161" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.162" = type { %"class.absl::optional_internal::optional_data.163" }
%"class.absl::optional_internal::optional_data.163" = type { %"class.absl::optional_internal::optional_data_base.164" }
%"class.absl::optional_internal::optional_data_base.164" = type { %"class.absl::optional_internal::optional_data_dtor_base.165" }
%"class.absl::optional_internal::optional_data_dtor_base.165" = type { i8, %union.anon.166 }
%union.anon.166 = type { %"class.base::TimeDelta" }
%"class.absl::optional.167" = type { %"class.absl::optional_internal::optional_data.168" }
%"class.absl::optional_internal::optional_data.168" = type { %"class.absl::optional_internal::optional_data_base.169" }
%"class.absl::optional_internal::optional_data_base.169" = type { %"class.absl::optional_internal::optional_data_dtor_base.170" }
%"class.absl::optional_internal::optional_data_dtor_base.170" = type { i8, %union.anon.171 }
%union.anon.171 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.40, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.172" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.172" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.177", %class.scoped_refptr.178 }
%"class.base::RepeatingCallback.177" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.178 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.182" = type { %"class.std::__1::__tree.183" }
%"class.std::__1::__tree.183" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::map.193" = type { %"class.std::__1::__tree.194" }
%"class.std::__1::__tree.194" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.base::OnceCallback.202" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.203" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.207" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::DiskAllocatorStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::DiskAllocator"* }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.std::__1::map.208" = type { %"class.std::__1::__tree.209" }
%"class.std::__1::__tree.209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.210", %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::default_delete.27" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.41", [4 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.300", i64, i64 }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.311" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"struct.blink::BackgroundTaskParams" = type { %class.scoped_refptr.226, %class.scoped_refptr.22, i8*, i64 }
%class.scoped_refptr.226 = type { %"class.base::SingleThreadTaskRunner"* }
%"struct.base::internal::DeferredUnmap" = type { i8*, i64 }
%"class.base::ElapsedThreadTimer" = type { i8, %"class.base::ThreadTicks" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.230" }
%"class.base::time_internal::TimeBase.230" = type { i64 }
%"class.base::internal::ThreadCache" = type { [89 x %"struct.base::internal::ThreadCache::Bucket"], i64, %"struct.std::__1::atomic.77", %"struct.base::ThreadCacheStats", %"struct.base::PartitionRoot"*, %"class.base::internal::ThreadCache"*, %"class.base::internal::ThreadCache"* }
%"struct.base::internal::ThreadCache::Bucket" = type <{ %"class.base::internal::PartitionFreelistEntry"*, i8, %"struct.std::__1::atomic.59", i16, [4 x i8] }>
%"struct.base::ThreadCacheStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [129 x i64], [129 x i64] }
%"struct.base::internal::PartitionPage" = type { %union.anon.268, i8, i8 }
%union.anon.268 = type <{ %"struct.base::internal::SubsequentPageMetadata", [22 x i8] }>
%"struct.base::internal::SubsequentPageMetadata" = type { i64 }
%"class.base::internal::ObjectBitmap" = type { %"struct.std::__1::array.269" }
%"struct.std::__1::array.269" = type { [2048 x i64] }
%"class.blink::WebProcessMemoryDump" = type { %"class.std::__1::unique_ptr.235", %"class.base::trace_event::ProcessMemoryDump"*, i32, [4 x i8], %"class.WTF::HashMap.241", %"class.WTF::Vector.246" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.base::trace_event::ProcessMemoryDump"* }
%"class.base::trace_event::ProcessMemoryDump" = type opaque
%"class.WTF::HashMap.241" = type { %"class.WTF::HashTable.242" }
%"class.WTF::HashTable.242" = type <{ %"struct.WTF::KeyValuePair.245"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.245" = type opaque
%"class.WTF::Vector.246" = type { %"class.WTF::VectorBuffer.247" }
%"class.WTF::VectorBuffer.247" = type { %"class.WTF::VectorBufferBase.248" }
%"class.WTF::VectorBufferBase.248" = type { %"class.std::__1::unique_ptr.249"*, i32, i32 }
%"class.std::__1::unique_ptr.249" = type opaque
%"class.blink::WebMemoryAllocatorDump" = type { %"class.base::trace_event::MemoryAllocatorDump"*, i64 }
%"class.base::trace_event::MemoryAllocatorDump" = type opaque

$_ZN20trace_event_internal13AddTraceEventIjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIRKmEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_ = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEEJS9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS2_14default_deleteIS5_EEEEEJS8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEPNS5_17DiskDataAllocatorEEJS9_N3WTF28CrossThreadUnretainedWrapperISA_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS2_14default_deleteIS5_EEEEPNS4_17DiskDataAllocatorEEJS8_N3WTF28CrossThreadUnretainedWrapperIS9_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZNKSt3__114default_deleteIN5blink18ParkableStringImpl16ParkableMetadataEEclEPS3_ = comdat any

@.str = private unnamed_addr constant [29 x i8] c"metadata_->lock_depth_ != 0u\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/bindings/parkable_string.cc\00", align 1
@.str.2 = private unnamed_addr constant [67 x i8] c"metadata_->lock_depth_ != std::numeric_limits<unsigned int>::max()\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [27 x i8] c"ParkableStringImpl::Unpark\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.5 = private unnamed_addr constant [94 x i8] c"compression::GetUncompressedSize(compressed_string_piece) == uncompressed_string_piece.size()\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"PostBackgroundCompressionTask\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"ParkableStringImpl::CompressInBackground\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"CompressInBackground\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"PostBackgroundWritingTask\00", align 1
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"WriteToDiskInBackground\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@_ZN5blink21ParkableStringManager18kAllocatorDumpNameE = external local_unnamed_addr global i8*, align 8
@_ZN3WTF10Partitions24kAllocatedObjectPoolNameE = external local_unnamed_addr constant i8*, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.12 = private unnamed_addr constant [41 x i8] c"Memory.ParkableString.Compression.SizeKb\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"Memory.ParkableString.Compression.Latency\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"Memory.ParkableString.Compression.ThroughputMBps\00", align 1
@.str.15 = private unnamed_addr constant [43 x i8] c"Memory.ParkableString.Decompression.SizeKb\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"Memory.ParkableString.Decompression.Latency\00", align 1
@.str.17 = private unnamed_addr constant [51 x i8] c"Memory.ParkableString.Decompression.ThroughputMBps\00", align 1
@.str.18 = private unnamed_addr constant [35 x i8] c"Memory.ParkableString.Write.SizeKb\00", align 1
@.str.19 = private unnamed_addr constant [36 x i8] c"Memory.ParkableString.Write.Latency\00", align 1
@.str.20 = private unnamed_addr constant [43 x i8] c"Memory.ParkableString.Write.ThroughputMBps\00", align 1
@.str.21 = private unnamed_addr constant [34 x i8] c"Memory.ParkableString.Read.SizeKb\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"Memory.ParkableString.Read.Latency\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"Memory.ParkableString.Read.ThroughputMBps\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.25 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"NullableCharBuffer\00", align 1
@_ZN3WTF10Partitions12buffer_root_E = external local_unnamed_addr global %"struct.base::PartitionRoot"*, align 8
@_ZN4base19PartitionAllocHooks14hooks_enabled_E = external local_unnamed_addr global %"struct.std::__1::atomic.77", align 1
@_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup = internal unnamed_addr constant { [128 x i64], [521 x i16] } { [128 x i64] [i64 16, i64 18, i64 20, i64 22, i64 24, i64 26, i64 28, i64 30, i64 32, i64 36, i64 40, i64 44, i64 48, i64 52, i64 56, i64 60, i64 64, i64 72, i64 80, i64 88, i64 96, i64 104, i64 112, i64 120, i64 128, i64 144, i64 160, i64 176, i64 192, i64 208, i64 224, i64 240, i64 256, i64 288, i64 320, i64 352, i64 384, i64 416, i64 448, i64 480, i64 512, i64 576, i64 640, i64 704, i64 768, i64 832, i64 896, i64 960, i64 1024, i64 1152, i64 1280, i64 1408, i64 1536, i64 1664, i64 1792, i64 1920, i64 2048, i64 2304, i64 2560, i64 2816, i64 3072, i64 3328, i64 3584, i64 3840, i64 4096, i64 4608, i64 5120, i64 5632, i64 6144, i64 6656, i64 7168, i64 7680, i64 8192, i64 9216, i64 10240, i64 11264, i64 12288, i64 13312, i64 14336, i64 15360, i64 16384, i64 18432, i64 20480, i64 22528, i64 24576, i64 26624, i64 28672, i64 30720, i64 32768, i64 36864, i64 40960, i64 45056, i64 49152, i64 53248, i64 57344, i64 61440, i64 65536, i64 73728, i64 81920, i64 90112, i64 98304, i64 106496, i64 114688, i64 122880, i64 131072, i64 147456, i64 163840, i64 180224, i64 196608, i64 212992, i64 229376, i64 245760, i64 262144, i64 294912, i64 327680, i64 360448, i64 393216, i64 425984, i64 458752, i64 491520, i64 524288, i64 589824, i64 655360, i64 720896, i64 786432, i64 851968, i64 917504, i64 983040], [521 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 12, i16 12, i16 12, i16 12, i16 16, i16 16, i16 16, i16 16, i16 18, i16 18, i16 20, i16 20, i16 22, i16 22, i16 24, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128] }, align 8
@_ZN4base12_GLOBAL__N_116kOrderIndexShiftE = internal unnamed_addr constant [65 x i8] c"\00\00\00\00\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<", align 16
@_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE = internal unnamed_addr constant [65 x i64] [i64 0, i64 0, i64 0, i64 0, i64 0, i64 1, i64 3, i64 7, i64 15, i64 31, i64 63, i64 127, i64 255, i64 511, i64 1023, i64 2047, i64 4095, i64 8191, i64 16383, i64 32767, i64 65535, i64 131071, i64 262143, i64 524287, i64 1048575, i64 2097151, i64 4194303, i64 8388607, i64 16777215, i64 33554431, i64 67108863, i64 134217727, i64 268435455, i64 536870911, i64 1073741823, i64 2147483647, i64 4294967295, i64 8589934591, i64 17179869183, i64 34359738367, i64 68719476735, i64 137438953471, i64 274877906943, i64 549755813887, i64 1099511627775, i64 2199023255551, i64 4398046511103, i64 8796093022207, i64 17592186044415, i64 35184372088831, i64 70368744177663, i64 140737488355327, i64 281474976710655, i64 562949953421311, i64 1125899906842623, i64 2251799813685247, i64 4503599627370495, i64 9007199254740991, i64 18014398509481983, i64 36028797018963967, i64 72057594037927935, i64 144115188075855871, i64 288230376151711743, i64 576460752303423487, i64 1152921504606846975], align 16
@_ZN4base8internal6PCScan9instance_E = external global %"class.base::internal::PCScan", align 8
@_ZN4base8internal18g_thread_cache_keyE = external local_unnamed_addr global i32, align 4
@_ZN4base8internal11ThreadCache28largest_active_bucket_index_E = external local_unnamed_addr global i16, align 2
@.str.28 = private unnamed_addr constant [18 x i8] c"ZlibTemporaryData\00", align 1
@.str.29 = private unnamed_addr constant [105 x i8] c"../../base/allocator/partition_allocator/partition_page.h(549) Check failed: slot_start != freelist_head\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.31 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj32ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<unsigned char, 32, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<unsigned char, 0, WTF::PartitionAllocator>]\00", align 1
@.str.32 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1

@_ZN5blink18ParkableStringImpl16ParkableMetadataC1EN3WTF6StringENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS4_14default_deleteIS8_EEEE = hidden unnamed_addr alias void (%"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"class.WTF::StringImpl"*, %"class.WTF::Vector.7"*), void (%"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"class.WTF::StringImpl"*, %"class.WTF::Vector.7"*)* @_ZN5blink18ParkableStringImpl16ParkableMetadataC2EN3WTF6StringENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS4_14default_deleteIS8_EEEE
@_ZN5blink18ParkableStringImplC1EO13scoped_refptrIN3WTF10StringImplEENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS6_14default_deleteISA_EEEE = hidden unnamed_addr alias void (%"class.blink::ParkableStringImpl"*, %class.scoped_refptr*, %"class.WTF::Vector.7"*), void (%"class.blink::ParkableStringImpl"*, %class.scoped_refptr*, %"class.WTF::Vector.7"*)* @_ZN5blink18ParkableStringImplC2EO13scoped_refptrIN3WTF10StringImplEENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS6_14default_deleteISA_EEEE
@_ZN5blink18ParkableStringImplD1Ev = hidden unnamed_addr alias void (%"class.blink::ParkableStringImpl"*), void (%"class.blink::ParkableStringImpl"*)* @_ZN5blink18ParkableStringImplD2Ev
@_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE = hidden unnamed_addr alias void (%"class.blink::ParkableString"*, %class.scoped_refptr*), void (%"class.blink::ParkableString"*, %class.scoped_refptr*)* @_ZN5blink14ParkableStringC2EO13scoped_refptrIN3WTF10StringImplEE
@_ZN5blink14ParkableStringD1Ev = hidden unnamed_addr alias void (%"class.blink::ParkableString"*), void (%"class.blink::ParkableString"*)* @_ZN5blink14ParkableStringD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl16ParkableMetadataC2EN3WTF6StringENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS4_14default_deleteIS8_EEEE(%"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"class.WTF::StringImpl"*, %"class.WTF::Vector.7"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %4, i1 zeroext false) #17
  %5 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %2, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  %12 = load i32, i32* %10, align 8
  %13 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 6, i32 0, i32 1, i64 0
  %14 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %9, i64 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  %16 = icmp ugt i32 %12, 32
  br i1 %16, label %17, label %24

17:                                               ; preds = %3
  %18 = zext i32 %12 to i64
  %19 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %18) #17
  %20 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %19, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #17
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.WTF::Vector.7"* %9 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = trunc i64 %19 to i32
  store i32 %23, i32* %15, align 8
  br label %24

24:                                               ; preds = %17, %3
  %25 = phi i8* [ %13, %3 ], [ %20, %17 ]
  %26 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %2, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %2, i64 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %25, null
  %32 = icmp ne i8* %30, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %37, !prof !2

34:                                               ; preds = %24
  %35 = load i32, i32* %26, align 4
  %36 = zext i32 %35 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* nonnull align 1 %30, i64 %36, i1 false) #17
  br label %37

37:                                               ; preds = %24, %34
  %38 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 7
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, -8
  store i8 %40, i8* %38, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = trunc i32 %42 to i8
  %44 = shl i8 %43, 3
  %45 = and i8 %44, 8
  %46 = and i8 %39, -16
  %47 = or i8 %45, %46
  store i8 %47, i8* %38, align 8
  %48 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %0, i64 0, i32 8
  %49 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %37, %50
  %54 = phi i32 [ %52, %50 ], [ 0, %37 ]
  store i32 %54, i32* %48, align 4
  %55 = icmp eq %"class.WTF::Vector.7"* %2, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %53
  %57 = load i32, i32* %26, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %56
  store i32 0, i32* %26, align 4
  br label %60

60:                                               ; preds = %59, %56
  %61 = load i8*, i8** %29, align 8
  %62 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %2, i64 0, i32 0, i32 1, i64 0
  %63 = icmp eq i8* %62, %61
  br i1 %63, label %66, label %64, !prof !2

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %2, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.8"* %65, i8* %61) #17
  br label %66

66:                                               ; preds = %64, %60
  store i8* null, i8** %29, align 8
  %67 = bitcast %"class.WTF::Vector.7"* %2 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %67) #17
  br label %68

68:                                               ; preds = %53, %66
  br i1 %49, label %81, label %69

69:                                               ; preds = %68
  %70 = load atomic i32, i32* %41 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %69
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %69
  %78 = phi i32 [ %76, %75 ], [ %74, %69 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %81

81:                                               ; preds = %68, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.7"* @_ZN5blink18ParkableStringImpl10HashStringEPN3WTF10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.18", align 8
  %3 = bitcast %"class.WTF::Vector.18"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3) #17
  %4 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %2, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 64, i1 false)
  %5 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %2, i64 0, i32 0, i32 1, i64 0
  %6 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %2, i64 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %2, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %2, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i64 2, i64 1
  %19 = mul nuw nsw i64 %18, %13
  %20 = call zeroext i1 @_ZN5blink13ComputeDigestENS_13HashAlgorithmEPKcmRN3WTF6VectorIhLj64ENS3_18PartitionAllocatorEEE(i32 1, i8* %10, i64 %19, %"class.WTF::Vector.18"* nonnull dereferenceable(80) %2) #17
  br i1 %20, label %22, label %21

21:                                               ; preds = %1
  call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 96) #17
  br label %22

22:                                               ; preds = %21, %1
  %23 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 48, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj32ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  %24 = bitcast i8* %23 to %"class.WTF::Vector.7"*
  %25 = load i32, i32* %7, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %23 to i8**
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %23, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 32, i32* %29, align 8
  %30 = icmp ugt i32 %25, 32
  br i1 %30, label %31, label %38

31:                                               ; preds = %22
  %32 = zext i32 %25 to i64
  %33 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %32) #17
  %34 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #17
  %35 = ptrtoint i8* %34 to i64
  %36 = bitcast i8* %23 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = trunc i64 %33 to i32
  store i32 %37, i32* %29, align 8
  br label %38

38:                                               ; preds = %31, %22
  %39 = phi i8* [ %26, %22 ], [ %34, %31 ]
  %40 = load i32, i32* %8, align 4
  %41 = getelementptr inbounds i8, i8* %23, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 4
  %43 = load i8*, i8** %6, align 8
  %44 = icmp ne i8* %39, null
  %45 = icmp ne i8* %43, null
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %50, !prof !2

47:                                               ; preds = %38
  %48 = load i32, i32* %8, align 4
  %49 = zext i32 %48 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* nonnull align 1 %43, i64 %49, i1 false) #17
  br label %50

50:                                               ; preds = %38, %47
  %51 = load i32, i32* %8, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %50
  store i32 0, i32* %8, align 4
  br label %54

54:                                               ; preds = %53, %50
  %55 = load i8*, i8** %6, align 8
  %56 = icmp eq i8* %5, %55
  br i1 %56, label %59, label %57, !prof !2

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %2, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.19"* nonnull %58, i8* %55) #17
  br label %59

59:                                               ; preds = %54, %57
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3) #17
  ret %"class.WTF::Vector.7"* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink13ComputeDigestENS_13HashAlgorithmEPKcmRN3WTF6VectorIhLj64ENS3_18PartitionAllocatorEEE(i32, i8*, i64, %"class.WTF::Vector.18"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::ParkableStringImpl"* @_ZN5blink18ParkableStringImpl15MakeNonParkableEO13scoped_refptrIN3WTF10StringImplEE(%class.scoped_refptr* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 24) #17
  %3 = bitcast i8* %2 to %"class.blink::ParkableStringImpl"*
  %4 = bitcast i8* %2 to i32*
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %7 = bitcast %class.scoped_refptr* %0 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %9 = bitcast i8* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 16
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11, align 8
  ret %"class.blink::ParkableStringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::ParkableStringImpl"* @_ZN5blink18ParkableStringImpl12MakeParkableEO13scoped_refptrIN3WTF10StringImplEENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS6_14default_deleteISA_EEEE(%class.scoped_refptr* nocapture dereferenceable(8), %"class.WTF::Vector.7"*) local_unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @malloc(i64 24) #17
  %4 = bitcast i8* %3 to %"class.blink::ParkableStringImpl"*
  %5 = bitcast i8* %3 to i32*
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %8 = bitcast %class.scoped_refptr* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %10 = bitcast i8* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 16
  %12 = icmp eq %"class.WTF::Vector.7"* %1, null
  %13 = inttoptr i64 %9 to %"class.WTF::StringImpl"*
  br i1 %12, label %37, label %14

14:                                               ; preds = %2
  %15 = tail call i8* @_Znwm(i64 120) #18
  %16 = bitcast i8* %15 to %"struct.blink::ParkableStringImpl::ParkableMetadata"*
  %17 = icmp eq i64 %9, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #17
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %23
  tail call void @llvm.trap() #17
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %33, %18, %14
  tail call void @_ZN5blink18ParkableStringImpl16ParkableMetadataC2EN3WTF6StringENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS4_14default_deleteIS8_EEEE(%"struct.blink::ParkableStringImpl::ParkableMetadata"* nonnull %16, %"class.WTF::StringImpl"* %13, %"class.WTF::Vector.7"* nonnull %1) #17
  %36 = bitcast i8* %11 to i8**
  store i8* %15, i8** %36, align 8
  br label %39

37:                                               ; preds = %2
  %38 = bitcast i8* %11 to i64*
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %37, %35
  ret %"class.blink::ParkableStringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImplC2EO13scoped_refptrIN3WTF10StringImplEENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS6_14default_deleteISA_EEEE(%"class.blink::ParkableStringImpl"* nocapture, %class.scoped_refptr* nocapture dereferenceable(8), %"class.WTF::Vector.7"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %7 = bitcast %class.scoped_refptr* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %9 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2
  %11 = icmp eq %"class.WTF::Vector.7"* %2, null
  %12 = inttoptr i64 %8 to %"class.WTF::StringImpl"*
  br i1 %11, label %36, label %13

13:                                               ; preds = %3
  %14 = tail call i8* @_Znwm(i64 120) #18
  %15 = bitcast i8* %14 to %"struct.blink::ParkableStringImpl::ParkableMetadata"*
  %16 = icmp eq i64 %8, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #17
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  tail call void @llvm.trap() #17
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %13, %17, %32
  tail call void @_ZN5blink18ParkableStringImpl16ParkableMetadataC2EN3WTF6StringENSt3__110unique_ptrINS2_6VectorIhLj32ENS2_18PartitionAllocatorEEENS4_14default_deleteIS8_EEEE(%"struct.blink::ParkableStringImpl::ParkableMetadata"* nonnull %15, %"class.WTF::StringImpl"* %12, %"class.WTF::Vector.7"* nonnull %2) #17
  %35 = bitcast %"class.std::__1::unique_ptr.23"* %10 to i8**
  store i8* %14, i8** %35, align 8
  br label %38

36:                                               ; preds = %3
  %37 = bitcast %"class.std::__1::unique_ptr.23"* %10 to i64*
  store i64 0, i64* %37, align 8
  br label %38

38:                                               ; preds = %34, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"struct.blink::ParkableStringImpl::ParkableMetadata"* null, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  br label %34

7:                                                ; preds = %1
  %8 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager6RemoveEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %8, %"class.blink::ParkableStringImpl"* %0) #17
  %9 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %10 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %10, align 8
  %12 = icmp eq %"class.blink::DiskDataMetadata"* %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %8, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %14, align 8
  %16 = icmp eq %"class.blink::DiskDataAllocator"* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #17
  %19 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  br label %20

20:                                               ; preds = %13, %17
  %21 = phi %"struct.blink::ParkableStringImpl::ParkableMetadata"* [ %19, %17 ], [ %9, %13 ]
  %22 = phi %"class.blink::DiskDataAllocator"* [ %18, %17 ], [ %15, %13 ]
  %23 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %21, i64 0, i32 5, i32 0, i32 0, i32 0
  %24 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %23, align 8
  store %"class.blink::DiskDataMetadata"* null, %"class.blink::DiskDataMetadata"** %23, align 8
  tail call void @_ZN5blink17DiskDataAllocator7DiscardENSt3__110unique_ptrINS_16DiskDataMetadataENS1_14default_deleteIS3_EEEE(%"class.blink::DiskDataAllocator"* %22, %"class.blink::DiskDataMetadata"* %24) #17
  %25 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %25, align 8
  br label %27

27:                                               ; preds = %7, %20
  %28 = phi %"struct.blink::ParkableStringImpl::ParkableMetadata"* [ %9, %7 ], [ %26, %20 ]
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %29, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::ParkableStringImpl::ParkableMetadata"* null, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %30, align 8
  %31 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %28, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.std::__1::unique_ptr.23"* %29 to %"struct.std::__1::default_delete.27"*
  tail call void @_ZNKSt3__114default_deleteIN5blink18ParkableStringImpl16ParkableMetadataEEclEPS3_(%"struct.std::__1::default_delete.27"* %33, %"struct.blink::ParkableStringImpl::ParkableMetadata"* nonnull %28) #17
  br label %34

34:                                               ; preds = %5, %27, %32
  %35 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #17
  br label %51

51:                                               ; preds = %34, %47, %50
  ret void
}

declare dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() local_unnamed_addr #2

declare void @_ZN5blink21ParkableStringManager6RemoveEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink17DiskDataAllocator7DiscardENSt3__110unique_ptrINS_16DiskDataMetadataENS1_14default_deleteIS3_EEEE(%"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataMetadata"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl4LockEv(%"class.blink::ParkableStringImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %5, align 8
  %7 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %6, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %6, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #17
  %10 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %5, align 8
  %11 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %5, align 8
  %17 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp eq i32 %18, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %15, align 8
  br label %31

22:                                               ; preds = %8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %15, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 305, %"class.logging::CheckOpResult"* nonnull %3) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %32 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %5, align 8
  %33 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %32, i64 0, i32 7
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, -8
  store i8 %35, i8* %33, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #17
  br label %36

36:                                               ; preds = %1, %31
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl6UnlockEv(%"class.blink::ParkableStringImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %5, align 8
  %7 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %6, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #17
  %10 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %5, align 8
  %11 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %5, align 8
  %17 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp eq i32 %18, -1
  br i1 %20, label %22, label %21

21:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %15, align 8
  br label %31

22:                                               ; preds = %8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %15, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 317, %"class.logging::CheckOpResult"* nonnull %3) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #17
  br label %32

32:                                               ; preds = %1, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZN5blink18ParkableStringImpl8ToStringEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #17
  %7 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %8 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, i64 0, i32 7
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, -8
  store i8 %10, i8* %8, align 8
  tail call void @_ZN5blink18ParkableStringImpl6UnparkEv(%"class.blink::ParkableStringImpl"* %0)
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #17
  br label %11

11:                                               ; preds = %1, %5
  %12 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1
  ret %"class.WTF::String"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl6UnparkEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %4, i64 0, i32 2
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %73, label %8

8:                                                ; preds = %1
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %40, label %12, !prof !2

12:                                               ; preds = %8
  %13 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  %14 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %4, null
  br i1 %14, label %15, label %28

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %37, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i32 2, i32 1
  %27 = mul i32 %26, %21
  br label %37

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %4, i64 0, i32 8
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %4, i64 0, i32 7
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 8
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i32 2, i32 1
  %36 = mul i32 %35, %30
  br label %37

37:                                               ; preds = %15, %19, %28
  %38 = phi i32 [ %36, %28 ], [ %27, %19 ], [ 0, %15 ]
  store i32 %38, i32* %2, align 4
  %39 = call i64 @_ZN20trace_event_internal13AddTraceEventIjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  br label %40

40:                                               ; preds = %8, %37
  %41 = phi i64 [ -6148914691236517206, %8 ], [ %39, %37 ]
  %42 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %8 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), %37 ]
  %43 = phi i8* [ null, %8 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %37 ]
  %44 = call %"class.WTF::StringImpl"* @_ZN5blink18ParkableStringImpl14UnparkInternalEv(%"class.blink::ParkableStringImpl"* %0)
  %45 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  %46 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1
  %47 = bitcast %"class.WTF::String"* %46 to i64*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %45, i64* %47, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #17
  br label %64

64:                                               ; preds = %63, %60, %40
  %65 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %66 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %65, i64 0, i32 2
  store i8 0, i8* %66, align 4
  %67 = call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  call void @_ZN5blink21ParkableStringManager10OnUnparkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %67, %"class.blink::ParkableStringImpl"* %0) #17
  %68 = icmp eq i8* %43, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = load i8, i8* %43, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %43, i8* %42, i64 %41) #17
  br label %73

73:                                               ; preds = %72, %69, %64, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK5blink18ParkableStringImpl21CharactersSizeInBytesEv(%"class.blink::ParkableStringImpl"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, null
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 2, i32 1
  %17 = mul i32 %16, %11
  br label %27

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 8
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 7
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 8
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 2, i32 1
  %26 = mul i32 %25, %20
  br label %27

27:                                               ; preds = %9, %5, %18
  %28 = phi i32 [ %26, %18 ], [ %17, %9 ], [ 0, %5 ]
  ret i32 %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK5blink18ParkableStringImpl22MemoryFootprintForDumpEv(%"class.blink::ParkableStringImpl"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, null
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i64 2, i64 1
  %18 = mul nuw nsw i64 %17, %12
  %19 = add nuw nsw i64 %18, 24
  br label %49

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 2
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 1
  br i1 %23, label %39, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i64 2, i64 1
  %37 = mul nuw nsw i64 %36, %31
  %38 = add nuw nsw i64 %37, 144
  br label %39

39:                                               ; preds = %28, %24, %20
  %40 = phi i64 [ 144, %20 ], [ %38, %28 ], [ 144, %24 ]
  %41 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %41, align 8
  %43 = icmp eq %"class.WTF::Vector"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %42, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = add nuw nsw i64 %40, %47
  br label %49

49:                                               ; preds = %9, %5, %39, %44
  %50 = phi i64 [ %48, %44 ], [ %40, %39 ], [ %19, %9 ], [ 24, %5 ]
  ret i64 %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18ParkableStringImpl9is_parkedEv(%"class.blink::ParkableStringImpl"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 1
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18ParkableStringImpl20MaybeAgeOrParkStringEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %4) #17
  %5 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %6 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %5, i64 0, i32 3
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %89

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %5, i64 0, i32 2
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %26

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %5, i64 0, i32 7
  %15 = load i8, i8* %14, align 8
  %16 = and i8 %15, 7
  %17 = icmp eq i8 %16, 2
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = tail call zeroext i1 @_ZN5blink18ParkableStringImpl12ParkInternalENS0_11ParkingModeE(%"class.blink::ParkableStringImpl"* %0, i32 2)
  br i1 %19, label %25, label %89

20:                                               ; preds = %13
  %21 = icmp eq i8 %16, 0
  %22 = select i1 %21, i8 1, i8 2
  %23 = and i8 %15, -8
  %24 = or i8 %22, %23
  store i8 %24, i8* %14, align 8
  br label %25

25:                                               ; preds = %18, %20
  br label %89

26:                                               ; preds = %9
  %27 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %5, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %36, 1
  %38 = zext i1 %37 to i8
  br label %39

39:                                               ; preds = %26, %30, %34
  %40 = phi i8 [ 2, %26 ], [ 0, %30 ], [ %38, %34 ]
  %41 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %5, i64 0, i32 7
  %42 = load i8, i8* %41, align 8
  %43 = shl i8 %42, 5
  switch i8 %43, label %86 [
    i8 0, label %44
    i8 32, label %49
  ]

44:                                               ; preds = %39
  %45 = icmp eq i8 %40, 0
  br i1 %45, label %46, label %86

46:                                               ; preds = %44
  %47 = and i8 %42, -8
  %48 = or i8 %47, 1
  store i8 %48, i8* %41, align 8
  br label %86

49:                                               ; preds = %39
  br i1 %29, label %50, label %86

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %86

58:                                               ; preds = %50, %54
  %59 = and i8 %42, 7
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %86, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %62, align 8
  %64 = icmp eq %"class.WTF::Vector"* %63, null
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1
  %67 = bitcast %"class.WTF::String"* %66 to i64*
  store i64 0, i64* %67, align 8
  br i1 %53, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #17
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %83 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %82, i64 0, i32 2
  store i8 1, i8* %83, align 4
  %84 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager8OnParkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %84, %"class.blink::ParkableStringImpl"* %0) #17
  br label %89

85:                                               ; preds = %61
  tail call void @_ZN5blink18ParkableStringImpl29PostBackgroundCompressionTaskEv(%"class.blink::ParkableStringImpl"* %0) #17
  br label %89

86:                                               ; preds = %58, %49, %54, %39, %44, %46
  %87 = icmp eq i8 %40, 1
  %88 = zext i1 %87 to i32
  br label %89

89:                                               ; preds = %85, %81, %86, %1, %18, %25
  %90 = phi i32 [ 0, %25 ], [ 1, %18 ], [ 0, %1 ], [ %88, %86 ], [ 0, %81 ], [ 0, %85 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #17
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18ParkableStringImpl12ParkInternalENS0_11ParkingModeE(%"class.blink::ParkableStringImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %4, i64 0, i32 3
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %100

8:                                                ; preds = %2
  switch i32 %1, label %100 [
    i32 0, label %9
    i32 1, label %36
    i32 2, label %64
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %10, align 8
  %12 = icmp eq %"class.WTF::Vector"* %11, null
  br i1 %12, label %100, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1
  %15 = bitcast %"class.WTF::String"* %14 to i64*
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 0, i64* %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #17
  br label %32

32:                                               ; preds = %13, %28, %31
  %33 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %34 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %33, i64 0, i32 2
  store i8 1, i8* %34, align 4
  %35 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager8OnParkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %35, %"class.blink::ParkableStringImpl"* %0) #17
  br label %100

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %37, align 8
  %39 = icmp eq %"class.WTF::Vector"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1
  %42 = bitcast %"class.WTF::String"* %41 to i64*
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  store i64 0, i64* %42, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #17
  br label %59

59:                                               ; preds = %40, %55, %58
  %60 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %61 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %60, i64 0, i32 2
  store i8 1, i8* %61, align 4
  %62 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager8OnParkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %62, %"class.blink::ParkableStringImpl"* %0) #17
  br label %100

63:                                               ; preds = %36
  tail call void @_ZN5blink18ParkableStringImpl29PostBackgroundCompressionTaskEv(%"class.blink::ParkableStringImpl"* %0)
  br label %100

64:                                               ; preds = %8
  %65 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  %66 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %67 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %66, i64 0, i32 5, i32 0, i32 0, i32 0
  %68 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %67, align 8
  %69 = icmp eq %"class.blink::DiskDataMetadata"* %68, null
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %71, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %71, align 8
  %73 = icmp eq %"class.WTF::Vector"* %72, null
  br i1 %73, label %86, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %72, i64 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78, !prof !2

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %72, i64 0, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %83, label %82, !prof !3

82:                                               ; preds = %78
  store i32 0, i32* %79, align 4
  br label %83

83:                                               ; preds = %82, %78
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #17
  store i8* null, i8** %75, align 8
  br label %84

84:                                               ; preds = %83, %74
  %85 = bitcast %"class.WTF::Vector"* %72 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %85) #17
  br label %86

86:                                               ; preds = %70, %84
  %87 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %88 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %87, i64 0, i32 2
  store i8 2, i8* %88, align 4
  %89 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager15OnWrittenToDiskEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %89, %"class.blink::ParkableStringImpl"* %0) #17
  br label %100

90:                                               ; preds = %64
  %91 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %65, i64 0, i32 10, i32 0, i32 0, i32 0
  %92 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %91, align 8
  %93 = icmp eq %"class.blink::DiskDataAllocator"* %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = tail call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #17
  br label %96

96:                                               ; preds = %90, %94
  %97 = phi %"class.blink::DiskDataAllocator"* [ %95, %94 ], [ %92, %90 ]
  %98 = tail call zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"* %97) #17
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  tail call void @_ZN5blink18ParkableStringImpl25PostBackgroundWritingTaskEv(%"class.blink::ParkableStringImpl"* %0)
  br label %100

100:                                              ; preds = %9, %96, %8, %32, %63, %59, %86, %99, %2
  %101 = phi i1 [ true, %2 ], [ true, %99 ], [ true, %86 ], [ true, %59 ], [ true, %63 ], [ true, %9 ], [ true, %32 ], [ true, %8 ], [ false, %96 ]
  ret i1 %101
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink18ParkableStringImpl13CurrentStatusEv(%"class.blink::ParkableStringImpl"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 1
  %15 = zext i1 %14 to i8
  br label %16

16:                                               ; preds = %11, %7, %1
  %17 = phi i8 [ 2, %1 ], [ 0, %7 ], [ %15, %11 ]
  ret i8 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18ParkableStringImpl10CanParkNowEv(%"class.blink::ParkableStringImpl"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %20

15:                                               ; preds = %7, %11
  %16 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 7
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 7
  %19 = icmp ne i8 %18, 0
  br label %20

20:                                               ; preds = %1, %15, %11
  %21 = phi i1 [ false, %11 ], [ %19, %15 ], [ false, %1 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18ParkableStringImpl4ParkENS0_11ParkingModeE(%"class.blink::ParkableStringImpl"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %4, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %5) #17
  %6 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %7 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 1
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %6, i64 0, i32 7
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, -8
  %14 = or i8 %13, 1
  store i8 %14, i8* %11, align 8
  %15 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %3, align 8
  %16 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %34

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %19, %23
  %28 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %15, i64 0, i32 7
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, 7
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = tail call zeroext i1 @_ZN5blink18ParkableStringImpl12ParkInternalENS0_11ParkingModeE(%"class.blink::ParkableStringImpl"* %0, i32 %1)
  br label %34

34:                                               ; preds = %27, %10, %23, %2, %32
  %35 = phi i1 [ true, %32 ], [ true, %2 ], [ false, %27 ], [ false, %23 ], [ false, %10 ]
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %5) #17
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl23DiscardUncompressedDataEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1
  %3 = bitcast %"class.WTF::String"* %2 to i64*
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #17
  br label %20

20:                                               ; preds = %19, %16, %1
  %21 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %22, i64 0, i32 2
  store i8 1, i8* %23, align 4
  %24 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager8OnParkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %24, %"class.blink::ParkableStringImpl"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl29PostBackgroundCompressionTaskEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, i64 0, i32 3
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %13 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %14 = select i1 %11, i64 0, i64 %13
  br i1 %11, label %25, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = select i1 %22, i64 2, i64 1
  %24 = mul nuw nsw i64 %23, %18
  br label %25

25:                                               ; preds = %1, %15
  %26 = phi i64 [ %24, %15 ], [ 0, %1 ]
  %27 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #17
  %28 = bitcast %"class.blink::Thread"* %27 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %29 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %29, i64 3
  %31 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %30, align 8
  %32 = tail call %"class.base::SingleThreadTaskRunner"* %31(%"class.blink::Thread"* %27) #17
  %33 = tail call i8* @_Znwm(i64 32) #18
  %34 = icmp eq %"class.blink::ParkableStringImpl"* %0, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #17
  br label %37

37:                                               ; preds = %35, %25
  %38 = bitcast i8* %33 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %32, %"class.base::SingleThreadTaskRunner"** %38, align 8
  %39 = icmp eq %"class.base::SingleThreadTaskRunner"* %32, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  br label %43

43:                                               ; preds = %40, %37
  %44 = getelementptr inbounds i8, i8* %33, i64 8
  %45 = bitcast i8* %44 to %"class.blink::ParkableStringImpl"**
  store %"class.blink::ParkableStringImpl"* %0, %"class.blink::ParkableStringImpl"** %45, align 8
  br i1 %34, label %48, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %47) #17
  br label %48

48:                                               ; preds = %46, %43
  %49 = getelementptr inbounds i8, i8* %33, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %14, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 24
  %52 = bitcast i8* %51 to i64*
  store i64 %26, i64* %52, align 8
  br i1 %39, label %61, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %32, i64 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %54, i64 -2
  %60 = bitcast %"class.base::RefCountedThreadSafe.41"* %59 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %60) #17
  br label %61

61:                                               ; preds = %58, %53, %48
  br i1 %34, label %69, label %62

62:                                               ; preds = %61
  %63 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #17
  %64 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %0) #17
  %68 = bitcast %"class.blink::ParkableStringImpl"* %0 to i8*
  tail call void @free(i8* %68) #17
  br label %69

69:                                               ; preds = %61, %62, %67
  %70 = ptrtoint i8* %33 to i64
  %71 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 612) #17
  %72 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72)
  %73 = call i8* @_Znwm(i64 48) #18, !noalias !5
  %74 = bitcast i8* %73 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %74, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEEJS9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS2_14default_deleteIS5_EEEEEJS8_EE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !5
  %75 = getelementptr inbounds i8, i8* %73, i64 32
  %76 = bitcast i8* %75 to i64*
  store i64 ptrtoint (void (%"struct.blink::BackgroundTaskParams"*)* @_ZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEE to i64), i64* %76, align 8, !noalias !5
  %77 = getelementptr inbounds i8, i8* %73, i64 40
  %78 = bitcast i8* %77 to i64*
  store i64 %70, i64* %78, align 8, !noalias !5
  %79 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #17, !noalias !12
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = ptrtoint i8* %73 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %80, align 8, !noalias !13
  %82 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i64*
  store i64 %81, i64* %83, align 8, !alias.scope !13
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %82, align 8, !noalias !13
  %84 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %84) #17, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #17, !noalias !12
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #17, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72)
  call void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %4, %"class.WTF::CrossThreadOnceFunction"* nonnull %5) #17
  %86 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %86) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl21DiscardCompressedDataEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %4, align 8
  %6 = icmp eq %"class.WTF::Vector"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !3

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #17
  store i8* null, i8** %8, align 8
  br label %17

17:                                               ; preds = %16, %7
  %18 = bitcast %"class.WTF::Vector"* %5 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %18) #17
  br label %19

19:                                               ; preds = %1, %17
  %20 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %21 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %20, i64 0, i32 2
  store i8 2, i8* %21, align 4
  %22 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager15OnWrittenToDiskEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %22, %"class.blink::ParkableStringImpl"* %0) #17
  ret void
}

declare zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl25PostBackgroundWritingTaskEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  %7 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %6, i64 0, i32 10, i32 0, i32 0, i32 0
  %8 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %7, align 8
  %9 = icmp eq %"class.blink::DiskDataAllocator"* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = tail call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #17
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi %"class.blink::DiskDataAllocator"* [ %11, %10 ], [ %8, %1 ]
  %14 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  %17 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %16, align 8
  %18 = icmp eq %"class.blink::DiskDataMetadata"* %17, null
  br i1 %18, label %19, label %95

19:                                               ; preds = %12
  %20 = tail call zeroext i1 @_ZN5blink17DiskDataAllocator9may_writeEv(%"class.blink::DiskDataAllocator"* %13) #17
  br i1 %20, label %21, label %95

21:                                               ; preds = %19
  %22 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %23 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %22, i64 0, i32 3
  store i8 1, i8* %23, align 1
  %24 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %25 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %25, align 8
  %27 = bitcast %"class.WTF::Vector"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #17
  %32 = bitcast %"class.blink::Thread"* %31 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %33 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %33, i64 3
  %35 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %34, align 8
  %36 = tail call %"class.base::SingleThreadTaskRunner"* %35(%"class.blink::Thread"* %31) #17
  %37 = tail call i8* @_Znwm(i64 32) #18
  %38 = icmp eq %"class.blink::ParkableStringImpl"* %0, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %21
  %40 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #17
  br label %41

41:                                               ; preds = %39, %21
  %42 = zext i32 %30 to i64
  %43 = bitcast i8* %37 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %36, %"class.base::SingleThreadTaskRunner"** %43, align 8
  %44 = icmp eq %"class.base::SingleThreadTaskRunner"* %36, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 1 monotonic
  br label %48

48:                                               ; preds = %45, %41
  %49 = getelementptr inbounds i8, i8* %37, i64 8
  %50 = bitcast i8* %49 to %"class.blink::ParkableStringImpl"**
  store %"class.blink::ParkableStringImpl"* %0, %"class.blink::ParkableStringImpl"** %50, align 8
  br i1 %38, label %53, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #17
  br label %53

53:                                               ; preds = %51, %48
  %54 = getelementptr inbounds i8, i8* %37, i64 16
  %55 = bitcast i8* %54 to i64*
  store i64 %28, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %37, i64 24
  %57 = bitcast i8* %56 to i64*
  store i64 %42, i64* %57, align 8
  br i1 %44, label %66, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %36, i64 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw sub i32* %60, i32 1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %59, i64 -2
  %65 = bitcast %"class.base::RefCountedThreadSafe.41"* %64 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %65) #17
  br label %66

66:                                               ; preds = %63, %58, %53
  br i1 %38, label %74, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #17
  %69 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %0) #17
  %73 = bitcast %"class.blink::ParkableStringImpl"* %0 to i8*
  tail call void @free(i8* %73) #17
  br label %74

74:                                               ; preds = %66, %67, %72
  %75 = ptrtoint i8* %37 to i64
  %76 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 742) #17
  %77 = ptrtoint %"class.blink::DiskDataAllocator"* %13 to i64
  %78 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = call i8* @_Znwm(i64 56) #18, !noalias !16
  %80 = bitcast i8* %79 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %80, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEPNS5_17DiskDataAllocatorEEJS9_N3WTF28CrossThreadUnretainedWrapperISA_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS2_14default_deleteIS5_EEEEPNS4_17DiskDataAllocatorEEJS8_N3WTF28CrossThreadUnretainedWrapperIS9_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !16
  %81 = getelementptr inbounds i8, i8* %79, i64 32
  %82 = bitcast i8* %81 to i64*
  store i64 ptrtoint (void (%"struct.blink::BackgroundTaskParams"*, %"class.blink::DiskDataAllocator"*)* @_ZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEEPNS_17DiskDataAllocatorE to i64), i64* %82, align 8, !noalias !16
  %83 = getelementptr inbounds i8, i8* %79, i64 40
  %84 = bitcast i8* %83 to i64*
  store i64 %75, i64* %84, align 8, !noalias !16
  %85 = getelementptr inbounds i8, i8* %79, i64 48
  %86 = bitcast i8* %85 to i64*
  store i64 %77, i64* %86, align 8, !noalias !16
  %87 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #17, !noalias !23
  %88 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %89 = ptrtoint i8* %79 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %88, align 8, !noalias !24
  %90 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i64*
  store i64 %89, i64* %91, align 8, !alias.scope !24
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %90, align 8, !noalias !24
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #17, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #17, !noalias !23
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %93) #17, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  call void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationERKNS1_10TaskTraitsEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp, %"class.WTF::CrossThreadOnceFunction"* nonnull %5) #17
  %94 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %94) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #17
  br label %95

95:                                               ; preds = %12, %74, %19
  ret void
}

declare void @_ZN5blink21ParkableStringManager8OnParkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink21ParkableStringManager15OnWrittenToDiskEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18ParkableStringImpl10is_on_diskEv(%"class.blink::ParkableStringImpl"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 2
  ret i1 %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #17
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #17
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #17
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #17
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #17
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #17
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink18ParkableStringImpl14UnparkInternalEv(%"class.blink::ParkableStringImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::ElapsedTimer", align 8
  %6 = alloca %"class.base::ElapsedTimer", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = bitcast %"class.base::ElapsedTimer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %12, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %5) #17
  %13 = call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  %14 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %15, i64 0, i32 2
  %17 = load i8, i8* %16, align 4
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %19, label %157

19:                                               ; preds = %1
  %20 = bitcast %"class.base::ElapsedTimer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %21, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %6) #17
  %22 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #17
  %23 = ptrtoint i8* %22 to i64
  %24 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %25 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %24, i64 0, i32 4
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %23, i64* %28, align 8
  %29 = icmp eq %"class.WTF::Vector"* %27, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %27, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %40, label %34, !prof !2

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %27, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38, !prof !3

38:                                               ; preds = %34
  store i32 0, i32* %35, align 4
  br label %39

39:                                               ; preds = %38, %34
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #17
  store i8* null, i8** %31, align 8
  br label %40

40:                                               ; preds = %39, %30
  %41 = bitcast %"class.WTF::Vector"* %27 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %41) #17
  br label %42

42:                                               ; preds = %40, %19
  %43 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %44 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %43, i64 0, i32 5, i32 0, i32 0, i32 0
  %47 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::DiskDataMetadata", %"class.blink::DiskDataMetadata"* %47, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %45, i64 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp ult i32 %52, %50
  br i1 %53, label %54, label %88

54:                                               ; preds = %42
  %55 = lshr i32 %52, 2
  %56 = add nuw i32 %52, 1
  %57 = add i32 %56, %55
  %58 = icmp ugt i32 %57, 4
  %59 = select i1 %58, i32 %57, i32 4
  %60 = icmp ugt i32 %59, %50
  %61 = select i1 %60, i32 %59, i32 %50
  %62 = icmp ult i32 %52, %61
  br i1 %62, label %63, label %88, !prof !2

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %45, i64 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, null
  %67 = zext i32 %61 to i64
  %68 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %67) #17
  %69 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %68, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #17
  %70 = ptrtoint i8* %69 to i64
  br i1 %66, label %71, label %74

71:                                               ; preds = %63
  %72 = bitcast %"class.WTF::Vector"* %45 to i64*
  store atomic i64 %70, i64* %72 monotonic, align 8
  %73 = trunc i64 %68 to i32
  store i32 %73, i32* %51, align 8
  br label %88

74:                                               ; preds = %63
  %75 = load i8*, i8** %64, align 8
  %76 = icmp ne i8* %69, null
  %77 = icmp ne i8* %75, null
  %78 = and i1 %76, %77
  br i1 %78, label %79, label %84, !prof !2

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %45, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %69, i8* nonnull align 1 %75, i64 %82, i1 false) #17
  %83 = load i8*, i8** %64, align 8
  br label %84

84:                                               ; preds = %79, %74
  %85 = phi i8* [ %75, %74 ], [ %83, %79 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %85) #17
  %86 = bitcast %"class.WTF::Vector"* %45 to i64*
  store atomic i64 %70, i64* %86 monotonic, align 8
  %87 = trunc i64 %68 to i32
  store i32 %87, i32* %51, align 8
  br label %88

88:                                               ; preds = %84, %71, %54, %42
  %89 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %45, i64 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %45, i64 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %90, i64 %93
  %95 = and i64 %49, 4294967295
  %96 = getelementptr inbounds i8, i8* %90, i64 %95
  %97 = ptrtoint i8* %96 to i64
  %98 = ptrtoint i8* %94 to i64
  %99 = sub i64 %97, %98
  call void @llvm.memset.p0i8.i64(i8* align 1 %94, i8 0, i64 %99, i1 false) #17
  store i32 %50, i32* %91, align 4
  %100 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %13, i64 0, i32 10, i32 0, i32 0, i32 0
  %101 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %100, align 8
  %102 = icmp eq %"class.blink::DiskDataAllocator"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %88
  %104 = call dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() #17
  br label %105

105:                                              ; preds = %88, %103
  %106 = phi %"class.blink::DiskDataAllocator"* [ %104, %103 ], [ %101, %88 ]
  %107 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %108 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %107, i64 0, i32 5, i32 0, i32 0, i32 0
  %109 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %108, align 8
  %110 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %107, i64 0, i32 4, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %110, align 8
  %112 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZN5blink17DiskDataAllocator4ReadERKNS_16DiskDataMetadataEPv(%"class.blink::DiskDataAllocator"* %106, %"class.blink::DiskDataMetadata"* dereferenceable(16) %109, i8* %113) #17
  %114 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %6) #17
  %115 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %116 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %115, i64 0, i32 5, i32 0, i32 0, i32 0
  %117 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::DiskDataMetadata", %"class.blink::DiskDataMetadata"* %117, i64 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = uitofp i64 %119 to double
  %121 = add i64 %114, -9223372036854775807
  %122 = icmp ult i64 %121, 2
  br i1 %122, label %126, label %123

123:                                              ; preds = %105
  %124 = sitofp i64 %114 to double
  %125 = fdiv double %124, 1.000000e+06
  br label %129

126:                                              ; preds = %105
  %127 = icmp slt i64 %114, 0
  %128 = select i1 %127, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %129

129:                                              ; preds = %123, %126
  %130 = phi double [ %128, %126 ], [ %125, %123 ]
  %131 = fdiv double %120, %130
  %132 = fptoui double %131 to i64
  %133 = udiv i64 %132, 1000000
  %134 = udiv i64 %119, 1000
  %135 = trunc i64 %134 to i32
  call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* nonnull getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21, i64 0, i64 0), i32 %135) #17
  call void @_ZN4base35UmaHistogramCustomMicrosecondsTimesEPKcNS_9TimeDeltaES2_S2_i(i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i64 0, i64 0), i64 %114, i64 500, i64 1000000, i32 100) #17
  %136 = trunc i64 %133 to i32
  call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i32 %136) #17
  call void @_ZN5blink21ParkableStringManager14OnReadFromDiskEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %13, %"class.blink::ParkableStringImpl"* %0) #17
  %137 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %13, i64 0, i32 5, i32 0
  %138 = load i64, i64* %137, align 8
  br i1 %122, label %146, label %139

139:                                              ; preds = %129
  %140 = icmp slt i64 %114, 0
  %141 = select i1 %140, i64 -9223372036854775808, i64 9223372036854775807
  %142 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %138, i64 %114) #17
  %143 = extractvalue { i64, i1 } %142, 1
  %144 = extractvalue { i64, i1 } %142, 0
  %145 = select i1 %143, i64 %141, i64 %144, !prof !3
  br label %154

146:                                              ; preds = %129
  %147 = add i64 %138, -9223372036854775807
  %148 = icmp ugt i64 %147, 1
  %149 = icmp eq i64 %138, %114
  %150 = or i1 %149, %148
  br i1 %150, label %154, label %151

151:                                              ; preds = %146
  %152 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0)) #17
  %153 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #17
  br label %154

154:                                              ; preds = %139, %146, %151
  %155 = phi i64 [ %145, %139 ], [ %114, %146 ], [ %114, %151 ]
  store i64 %155, i64* %137, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  %156 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  br label %157

157:                                              ; preds = %154, %1
  %158 = phi %"struct.blink::ParkableStringImpl::ParkableMetadata"* [ %156, %154 ], [ %15, %1 ]
  %159 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %158, i64 0, i32 4, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %159, align 8
  %161 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %160, i64 0, i32 0, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i64
  %166 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %158, null
  br i1 %166, label %167, label %181

167:                                              ; preds = %157
  %168 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %191, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = select i1 %177, i32 2, i32 1
  %179 = mul i32 %178, %173
  %180 = zext i32 %179 to i64
  br label %191

181:                                              ; preds = %157
  %182 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %158, i64 0, i32 8
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %158, i64 0, i32 7
  %185 = load i8, i8* %184, align 8
  %186 = and i8 %185, 8
  %187 = icmp eq i8 %186, 0
  %188 = select i1 %187, i32 2, i32 1
  %189 = mul i32 %188, %183
  %190 = zext i32 %189 to i64
  br i1 %187, label %215, label %202

191:                                              ; preds = %171, %167
  %192 = phi i64 [ 0, %167 ], [ %180, %171 ]
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %210, label %197

197:                                              ; preds = %191
  %198 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  br i1 %170, label %204, label %199

199:                                              ; preds = %197
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 1
  %201 = load i32, i32* %200, align 4
  br label %204

202:                                              ; preds = %181
  %203 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  br label %204

204:                                              ; preds = %197, %199, %202
  %205 = phi i8* [ %203, %202 ], [ %198, %199 ], [ %198, %197 ]
  %206 = phi i64 [ %190, %202 ], [ %192, %199 ], [ %192, %197 ]
  %207 = phi i32 [ %183, %202 ], [ %201, %199 ], [ 0, %197 ]
  %208 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %207, i8** nonnull dereferenceable(8) %7) #17
  %209 = bitcast i8** %7 to i64*
  br label %223

210:                                              ; preds = %191
  %211 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  br i1 %170, label %217, label %212

212:                                              ; preds = %210
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  br label %217

215:                                              ; preds = %181
  %216 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  br label %217

217:                                              ; preds = %210, %212, %215
  %218 = phi i8* [ %216, %215 ], [ %211, %212 ], [ %211, %210 ]
  %219 = phi i64 [ %190, %215 ], [ %192, %212 ], [ %192, %210 ]
  %220 = phi i32 [ %183, %215 ], [ %214, %212 ], [ 0, %210 ]
  %221 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %220, i16** nonnull dereferenceable(8) %8) #17
  %222 = bitcast i16** %8 to i64*
  br label %223

223:                                              ; preds = %217, %204
  %224 = phi i64* [ %222, %217 ], [ %209, %204 ]
  %225 = phi i8* [ %218, %217 ], [ %205, %204 ]
  %226 = phi i64 [ %219, %217 ], [ %206, %204 ]
  %227 = phi %"class.WTF::StringImpl"* [ %221, %217 ], [ %208, %204 ]
  %228 = bitcast i64* %224 to i8**
  %229 = load i8*, i8** %228, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #17
  %230 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #17
  %231 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %231, align 8
  %232 = call i32 @_ZN11compression19GetUncompressedSizeEN4base4spanIKcLm18446744073709551615EEE(i64 %165, i8* %162) #17
  %233 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233)
  %234 = zext i32 %232 to i64
  %235 = icmp eq i64 %226, %234
  br i1 %235, label %236, label %237

236:                                              ; preds = %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233)
  store i8* null, i8** %231, align 8
  br label %246

237:                                              ; preds = %223
  %238 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %232) #17
  %239 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %226) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.5, i64 0, i64 0), i8* %238, i8* %239) #17
  %240 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %241 = load i8*, i8** %240, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233)
  store i8* %241, i8** %231, align 8
  %242 = icmp eq i8* %241, null
  br i1 %242, label %246, label %243

243:                                              ; preds = %237
  %244 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 580, %"class.logging::CheckOpResult"* nonnull %9) #17
  %245 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #17
  br label %246

246:                                              ; preds = %236, %237, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #17
  %247 = call zeroext i1 @_ZN11compression14GzipUncompressEN4base4spanIKcLm18446744073709551615EEES3_(i64 %165, i8* %162, i64 %226, i8* %229) #17
  br i1 %247, label %249, label %248

248:                                              ; preds = %246
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %226) #19
  unreachable

249:                                              ; preds = %246
  %250 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %5) #17
  %251 = add i64 %250, -9223372036854775807
  %252 = icmp ult i64 %251, 2
  %253 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %13, i64 0, i32 3, i32 0
  %254 = load i64, i64* %253, align 8
  br i1 %252, label %262, label %255

255:                                              ; preds = %249
  %256 = icmp slt i64 %250, 0
  %257 = select i1 %256, i64 -9223372036854775808, i64 9223372036854775807
  %258 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %254, i64 %250) #17
  %259 = extractvalue { i64, i1 } %258, 1
  %260 = extractvalue { i64, i1 } %258, 0
  %261 = select i1 %259, i64 %257, i64 %260, !prof !3
  br label %270

262:                                              ; preds = %249
  %263 = add i64 %254, -9223372036854775807
  %264 = icmp ugt i64 %263, 1
  %265 = icmp eq i64 %254, %250
  %266 = or i1 %265, %264
  br i1 %266, label %270, label %267

267:                                              ; preds = %262
  %268 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %268) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0)) #17
  %269 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %268) #17
  br label %270

270:                                              ; preds = %255, %262, %267
  %271 = phi i64 [ %261, %255 ], [ %250, %262 ], [ %250, %267 ]
  store i64 %271, i64* %253, align 8
  %272 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %14, align 8
  %273 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %272, null
  br i1 %273, label %274, label %287

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %296, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 1
  %284 = icmp eq i32 %283, 0
  %285 = select i1 %284, i32 2, i32 1
  %286 = mul i32 %285, %280
  br label %296

287:                                              ; preds = %270
  %288 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %272, i64 0, i32 8
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %272, i64 0, i32 7
  %291 = load i8, i8* %290, align 8
  %292 = and i8 %291, 8
  %293 = icmp eq i8 %292, 0
  %294 = select i1 %293, i32 2, i32 1
  %295 = mul i32 %294, %289
  br label %296

296:                                              ; preds = %274, %278, %287
  %297 = phi i32 [ %295, %287 ], [ %286, %278 ], [ 0, %274 ]
  %298 = uitofp i32 %297 to double
  br i1 %252, label %302, label %299

299:                                              ; preds = %296
  %300 = sitofp i64 %250 to double
  %301 = fdiv double %300, 1.000000e+06
  br label %305

302:                                              ; preds = %296
  %303 = icmp slt i64 %250, 0
  %304 = select i1 %303, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %305

305:                                              ; preds = %299, %302
  %306 = phi double [ %304, %302 ], [ %301, %299 ]
  %307 = fdiv double %298, %306
  %308 = fptoui double %307 to i64
  %309 = udiv i64 %308, 1000000
  %310 = udiv i32 %297, 1000
  call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* nonnull getelementptr inbounds ([43 x i8], [43 x i8]* @.str.15, i64 0, i64 0), i32 %310) #17
  call void @_ZN4base35UmaHistogramCustomMicrosecondsTimesEPKcNS_9TimeDeltaES2_S2_i(i8* nonnull getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i64 %250, i64 500, i64 1000000, i32 100) #17
  %311 = trunc i64 %309 to i32
  call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* nonnull getelementptr inbounds ([51 x i8], [51 x i8]* @.str.17, i64 0, i64 0), i32 %311) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  ret %"class.WTF::StringImpl"* %227
}

declare void @_ZN5blink21ParkableStringManager10OnUnparkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2

declare void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"*) unnamed_addr #2

declare void @_ZN5blink17DiskDataAllocator4ReadERKNS_16DiskDataMetadataEPv(%"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataMetadata"* dereferenceable(16), i8*) local_unnamed_addr #2

declare i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"*) local_unnamed_addr #2

declare void @_ZN5blink21ParkableStringManager14OnReadFromDiskEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"*, %"class.blink::ParkableStringImpl"*) local_unnamed_addr #2

declare i32 @_ZN11compression19GetUncompressedSizeEN4base4spanIKcLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN11compression14GzipUncompressEN4base4spanIKcLm18446744073709551615EEES3_(i64, i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #7 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #17
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #17
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !27
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !28
  unreachable
}

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #2

declare void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* dereferenceable(32), %"class.WTF::CrossThreadOnceFunction"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEE(%"struct.blink::BackgroundTaskParams"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.base::ElapsedTimer", align 8
  %11 = alloca %"class.base::ElapsedThreadTimer", align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.base::Location", align 8
  %14 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %15 = ptrtoint %"struct.blink::BackgroundTaskParams"* %0 to i64
  %16 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %17 = and i8 %16, 25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19, !prof !2

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %0, i64 0, i32 3
  %21 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRKmEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64* dereferenceable(8) %20)
  br label %22

22:                                               ; preds = %1, %19
  %23 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %19 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), %19 ]
  %25 = phi i64 [ -6148914691236517206, %1 ], [ %21, %19 ]
  %26 = bitcast %"class.base::ElapsedTimer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %10, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %27, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %10) #17
  %28 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %0, i64 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %0, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.base::ElapsedThreadTimer", %"class.base::ElapsedThreadTimer"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  call void @_ZN4base18ElapsedThreadTimerC1Ev(%"class.base::ElapsedThreadTimer"* nonnull %11) #17
  %33 = load i64, i64* %30, align 8
  %34 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** @_ZN3WTF10Partitions12buffer_root_E, align 8
  %35 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  store i8* null, i8** %9, align 8
  %36 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.77", %"struct.std::__1::atomic.77"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %37 = and i8 %36, 1
  %38 = icmp ne i8 %37, 0
  br i1 %38, label %39, label %43, !prof !3

39:                                               ; preds = %22
  %40 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %9, i32 1, i64 %33, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0)) #17
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = load i8*, i8** %9, align 8
  br label %295

43:                                               ; preds = %39, %22
  %44 = call i64 @llvm.ctlz.i64(i64 %33, i1 false) #17, !range !29
  %45 = sub nuw nsw i64 64, %44
  %46 = and i64 %45, 255
  %47 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = lshr i64 %33, %49
  %51 = and i64 %50, 7
  %52 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %46
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, %33
  %55 = shl nuw nsw i64 %46, 3
  %56 = or i64 %51, %55
  %57 = icmp ne i64 %54, 0
  %58 = zext i1 %57 to i64
  %59 = add nuw nsw i64 %56, %58
  %60 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %59
  %61 = load i16, i16* %60, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #17
  store i8 0, i8* %7, align 1
  %62 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #17
  store i64 -6148914691236517206, i64* %8, align 8
  %63 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %34, i64 0, i32 0
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 2
  br i1 %65, label %66, label %70

66:                                               ; preds = %43
  %67 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %68 = icmp eq i8 %67, 2
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %66
  call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %70

70:                                               ; preds = %69, %66, %43
  %71 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %34, i64 0, i32 2
  %72 = load i8, i8* %71, align 2, !range !4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %222, label %74, !prof !30

74:                                               ; preds = %70
  %75 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %76 = call i8* @pthread_getspecific(i32 %75) #17
  %77 = bitcast i8* %76 to %"class.base::internal::ThreadCache"*
  %78 = icmp ugt i8* %76, inttoptr (i64 1 to i8*)
  br i1 %78, label %79, label %149, !prof !2

79:                                               ; preds = %74
  %80 = zext i16 %61 to i64
  %81 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %77, i64 0, i32 3, i32 12, i64 %80
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  %84 = getelementptr inbounds i8, i8* %76, i64 1440
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  %88 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %89 = icmp ult i16 %88, %61
  br i1 %89, label %90, label %99, !prof !3

90:                                               ; preds = %79
  %91 = getelementptr inbounds i8, i8* %76, i64 1472
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %92, align 8
  %95 = getelementptr inbounds i8, i8* %76, i64 1456
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %96, align 8
  br label %156

99:                                               ; preds = %79
  %100 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %77, i64 0, i32 0, i64 %80, i32 0
  %101 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %100, align 8
  %102 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %101, null
  br i1 %102, label %108, label %103, !prof !3

103:                                              ; preds = %99
  %104 = getelementptr inbounds i8, i8* %76, i64 1448
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %105, align 8
  br label %116

108:                                              ; preds = %99
  %109 = getelementptr inbounds i8, i8* %76, i64 1456
  %110 = bitcast i8* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8
  %112 = add <2 x i64> %111, <i64 1, i64 1>
  %113 = bitcast i8* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %113, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %77, i64 %80) #17
  %114 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %100, align 8
  %115 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %114, null
  br i1 %115, label %156, label %116, !prof !3

116:                                              ; preds = %108, %103
  %117 = phi %"class.base::internal::PartitionFreelistEntry"* [ %114, %108 ], [ %101, %103 ]
  %118 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %117, i64 0, i32 0
  %119 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %118, align 8
  %120 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %119, null
  %121 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %119 to i64
  br i1 %120, label %122, label %124

122:                                              ; preds = %116
  %123 = call i64 @llvm.bswap.i64(i64 %121) #17
  br label %133

124:                                              ; preds = %116
  %125 = xor i64 %121, -1
  %126 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %117, i64 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, %125
  br i1 %128, label %130, label %129, !prof !2

129:                                              ; preds = %124
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #20
  unreachable

130:                                              ; preds = %124
  %131 = call i64 @llvm.bswap.i64(i64 %121) #17
  %132 = inttoptr i64 %131 to i8*
  call void @llvm.prefetch(i8* nonnull %132, i32 0, i32 3, i32 1) #17
  br label %133

133:                                              ; preds = %130, %122
  %134 = phi i64 [ %123, %122 ], [ %131, %130 ]
  %135 = inttoptr i64 %134 to %"class.base::internal::PartitionFreelistEntry"*
  %136 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %77, i64 0, i32 0, i64 %80, i32 1
  %137 = load i8, i8* %136, align 8
  %138 = add i8 %137, -1
  store i8 %138, i8* %136, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %135, %"class.base::internal::PartitionFreelistEntry"** %100, align 8
  %139 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %77, i64 0, i32 0, i64 %80, i32 3
  %140 = load i16, i16* %139, align 2
  %141 = zext i16 %140 to i64
  store i64 %141, i64* %8, align 8
  %142 = load i16, i16* %139, align 2
  %143 = zext i16 %142 to i64
  %144 = getelementptr inbounds i8, i8* %76, i64 1424
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %146, %143
  store i64 %147, i64* %145, align 8
  %148 = bitcast %"class.base::internal::PartitionFreelistEntry"* %117 to i8*
  br label %151

149:                                              ; preds = %74
  %150 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %34, i16 zeroext %61, i64* nonnull %8) #17
  br label %151

151:                                              ; preds = %149, %133
  %152 = phi i8* [ %150, %149 ], [ %148, %133 ]
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %291, !prof !3

154:                                              ; preds = %151
  %155 = zext i16 %61 to i64
  br label %156

156:                                              ; preds = %154, %108, %90
  %157 = phi i64 [ %155, %154 ], [ %80, %108 ], [ %80, %90 ]
  %158 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %34, i64 0, i32 10, i64 %157
  %159 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %34, i64 0, i32 8
  %160 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %159, i64 0, i32 0
  %161 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %162

162:                                              ; preds = %174, %156
  %163 = phi i32 [ 0, %156 ], [ %175, %174 ]
  %164 = phi i32 [ 1, %156 ], [ %178, %174 ]
  %165 = load atomic i32, i32* %161 monotonic, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %170, !prof !31

167:                                              ; preds = %162
  %168 = cmpxchg weak i32* %161, i32 0, i32 1 acquire monotonic
  %169 = extractvalue { i32, i1 } %168, 1
  br i1 %169, label %185, label %170, !prof !2

170:                                              ; preds = %167, %162
  %171 = icmp sgt i32 %164, 0
  br i1 %171, label %180, label %174

172:                                              ; preds = %180
  %173 = add i32 %164, %163
  br label %174

174:                                              ; preds = %172, %170
  %175 = phi i32 [ %163, %170 ], [ %173, %172 ]
  %176 = shl i32 %164, 1
  %177 = icmp slt i32 %176, 64
  %178 = select i1 %177, i32 %176, i32 64
  %179 = icmp slt i32 %175, 1000
  br i1 %179, label %162, label %184

180:                                              ; preds = %170, %180
  %181 = phi i32 [ %182, %180 ], [ 0, %170 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !32
  %182 = add nuw nsw i32 %181, 1
  %183 = icmp eq i32 %182, %164
  br i1 %183, label %172, label %180

184:                                              ; preds = %174
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %160) #17
  br label %185

185:                                              ; preds = %167, %184
  %186 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %158, i64 0, i32 0
  %187 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %186, align 8
  %188 = bitcast %"struct.base::internal::SlotSpanMetadata"* %187 to i8**
  %189 = load i8*, i8** %188, align 1
  %190 = icmp eq i8* %189, null
  br i1 %190, label %215, label %191, !prof !3

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %187, i64 0, i32 0
  store i8 0, i8* %7, align 1
  %193 = bitcast i8* %189 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %194 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %193, align 8
  %195 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %194, null
  %196 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %194 to i64
  br i1 %195, label %197, label %199

197:                                              ; preds = %191
  %198 = call i64 @llvm.bswap.i64(i64 %196) #17
  br label %209

199:                                              ; preds = %191
  %200 = xor i64 %196, -1
  %201 = getelementptr inbounds i8, i8* %189, i64 8
  %202 = bitcast i8* %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = icmp eq i64 %203, %200
  br i1 %204, label %206, label %205, !prof !2

205:                                              ; preds = %199
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #20
  unreachable

206:                                              ; preds = %199
  %207 = call i64 @llvm.bswap.i64(i64 %196) #17
  %208 = inttoptr i64 %207 to i8*
  call void @llvm.prefetch(i8* nonnull %208, i32 0, i32 3, i32 1) #17
  br label %209

209:                                              ; preds = %206, %197
  %210 = phi i64 [ %198, %197 ], [ %207, %206 ]
  %211 = inttoptr i64 %210 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %211, %"class.base::internal::PartitionFreelistEntry"** %192, align 1
  %212 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %187, i64 0, i32 3
  %213 = load i16, i16* %212, align 1
  %214 = add i16 %213, 1
  store i16 %214, i16* %212, align 1
  br label %217

215:                                              ; preds = %185
  %216 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %158, %"struct.base::PartitionRoot"* %34, i32 1, i64 %33, i64 16384, i8* nonnull %7) #17
  br label %217

217:                                              ; preds = %215, %209
  %218 = phi i8* [ %189, %209 ], [ %216, %215 ]
  %219 = atomicrmw xchg i32* %161, i32 0 release
  %220 = icmp eq i32 %219, 2
  br i1 %220, label %221, label %288, !prof !3

221:                                              ; preds = %217
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %160) #17
  br label %288

222:                                              ; preds = %70
  %223 = zext i16 %61 to i64
  %224 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %34, i64 0, i32 10, i64 %223
  %225 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %34, i64 0, i32 8
  %226 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %225, i64 0, i32 0
  %227 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %228

228:                                              ; preds = %240, %222
  %229 = phi i32 [ 0, %222 ], [ %241, %240 ]
  %230 = phi i32 [ 1, %222 ], [ %244, %240 ]
  %231 = load atomic i32, i32* %227 monotonic, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %236, !prof !31

233:                                              ; preds = %228
  %234 = cmpxchg weak i32* %227, i32 0, i32 1 acquire monotonic
  %235 = extractvalue { i32, i1 } %234, 1
  br i1 %235, label %251, label %236, !prof !2

236:                                              ; preds = %233, %228
  %237 = icmp sgt i32 %230, 0
  br i1 %237, label %246, label %240

238:                                              ; preds = %246
  %239 = add i32 %230, %229
  br label %240

240:                                              ; preds = %238, %236
  %241 = phi i32 [ %229, %236 ], [ %239, %238 ]
  %242 = shl i32 %230, 1
  %243 = icmp slt i32 %242, 64
  %244 = select i1 %243, i32 %242, i32 64
  %245 = icmp slt i32 %241, 1000
  br i1 %245, label %228, label %250

246:                                              ; preds = %236, %246
  %247 = phi i32 [ %248, %246 ], [ 0, %236 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !32
  %248 = add nuw nsw i32 %247, 1
  %249 = icmp eq i32 %248, %230
  br i1 %249, label %238, label %246

250:                                              ; preds = %240
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %226) #17
  br label %251

251:                                              ; preds = %233, %250
  %252 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %224, i64 0, i32 0
  %253 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %252, align 8
  %254 = bitcast %"struct.base::internal::SlotSpanMetadata"* %253 to i8**
  %255 = load i8*, i8** %254, align 1
  %256 = icmp eq i8* %255, null
  br i1 %256, label %281, label %257, !prof !3

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %253, i64 0, i32 0
  store i8 0, i8* %7, align 1
  %259 = bitcast i8* %255 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %260 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %259, align 8
  %261 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %260, null
  %262 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %260 to i64
  br i1 %261, label %263, label %265

263:                                              ; preds = %257
  %264 = call i64 @llvm.bswap.i64(i64 %262) #17
  br label %275

265:                                              ; preds = %257
  %266 = xor i64 %262, -1
  %267 = getelementptr inbounds i8, i8* %255, i64 8
  %268 = bitcast i8* %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = icmp eq i64 %269, %266
  br i1 %270, label %272, label %271, !prof !2

271:                                              ; preds = %265
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #20
  unreachable

272:                                              ; preds = %265
  %273 = call i64 @llvm.bswap.i64(i64 %262) #17
  %274 = inttoptr i64 %273 to i8*
  call void @llvm.prefetch(i8* nonnull %274, i32 0, i32 3, i32 1) #17
  br label %275

275:                                              ; preds = %272, %263
  %276 = phi i64 [ %264, %263 ], [ %273, %272 ]
  %277 = inttoptr i64 %276 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %277, %"class.base::internal::PartitionFreelistEntry"** %258, align 1
  %278 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %253, i64 0, i32 3
  %279 = load i16, i16* %278, align 1
  %280 = add i16 %279, 1
  store i16 %280, i16* %278, align 1
  br label %283

281:                                              ; preds = %251
  %282 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %224, %"struct.base::PartitionRoot"* %34, i32 1, i64 %33, i64 16384, i8* nonnull %7) #17
  br label %283

283:                                              ; preds = %281, %275
  %284 = phi i8* [ %255, %275 ], [ %282, %281 ]
  %285 = atomicrmw xchg i32* %227, i32 0 release
  %286 = icmp eq i32 %285, 2
  br i1 %286, label %287, label %288, !prof !3

287:                                              ; preds = %283
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %226) #17
  br label %288

288:                                              ; preds = %287, %283, %221, %217
  %289 = phi i8* [ %218, %217 ], [ %218, %221 ], [ %284, %283 ], [ %284, %287 ]
  %290 = icmp eq i8* %289, null
  br i1 %290, label %293, label %291, !prof !3

291:                                              ; preds = %288, %151
  %292 = phi i8* [ %289, %288 ], [ %152, %151 ]
  br label %293

293:                                              ; preds = %291, %288
  %294 = phi i8* [ null, %288 ], [ %292, %291 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #17
  store i8* %294, i8** %9, align 8
  br i1 %38, label %295, label %297

295:                                              ; preds = %293, %41
  %296 = phi i8* [ %42, %41 ], [ %294, %293 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %296, i64 %33, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0)) #17
  br label %297

297:                                              ; preds = %295, %293
  %298 = bitcast i8** %9 to i64*
  %299 = load i64, i64* %298, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  %300 = inttoptr i64 %299 to i8*
  %301 = icmp eq i64 %299, 0
  %302 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #17
  store i64 -6148914691236517206, i64* %12, align 8
  br i1 %301, label %311, label %303

303:                                              ; preds = %297
  %304 = call zeroext i1 @_ZN11compression12GzipCompressEN4base4spanIKcLm18446744073709551615EEEPcmPmPFPvmEPFvS6_E(i64 %31, i8* %29, i8* nonnull %300, i64 %33, i64* nonnull %12, i8* (i64)* nonnull @"_ZZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEEEN3$_28__invokeEm", void (i8*)* nonnull @_ZN3WTF10Partitions8FastFreeEPv) #17
  br i1 %304, label %305, label %312

305:                                              ; preds = %303
  %306 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #17
  %307 = bitcast i8* %306 to %"class.WTF::Vector"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %306, i8 0, i64 16, i1 false) #17
  %308 = ptrtoint i8* %306 to i64
  %309 = load i64, i64* %12, align 8
  %310 = trunc i64 %309 to i32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"* %307, i8* nonnull %300, i32 %310)
  br label %312

311:                                              ; preds = %297
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #17
  br label %550

312:                                              ; preds = %305, %303
  %313 = phi i64 [ 0, %303 ], [ %308, %305 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #17
  %314 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.77", %"struct.std::__1::atomic.77"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %315 = and i8 %314, 1
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %319, label %317

317:                                              ; preds = %312
  call void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %300) #17
  %318 = call zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %300) #17
  br i1 %318, label %550, label %319

319:                                              ; preds = %317, %312
  call void @llvm.prefetch(i8* nonnull %300, i32 0, i32 3, i32 1) #17
  %320 = and i64 %299, -2097152
  %321 = or i64 %320, 4096
  %322 = inttoptr i64 %321 to i8*
  %323 = lshr i64 %299, 9
  %324 = and i64 %323, 4064
  %325 = getelementptr inbounds i8, i8* %322, i64 %324
  %326 = bitcast i8* %325 to %"struct.base::internal::PartitionPage"*
  %327 = getelementptr inbounds i8, i8* %325, i64 30
  %328 = load i8, i8* %327, align 2
  %329 = zext i8 %328 to i64
  %330 = sub nsw i64 0, %329
  %331 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %326, i64 %330, i32 0
  %332 = bitcast %union.anon.268* %331 to %"struct.base::internal::SlotSpanMetadata"*
  %333 = bitcast %union.anon.268* %331 to i8*
  call void @llvm.prefetch(i8* %333, i32 0, i32 3, i32 1) #17
  %334 = ptrtoint %union.anon.268* %331 to i64
  %335 = and i64 %334, -4096
  %336 = inttoptr i64 %335 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %337 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %336, i64 0, i32 0
  %338 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %337, align 4096
  %339 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %338, i64 0, i32 0
  %340 = load i8, i8* %339, align 8
  %341 = icmp eq i8 %340, 2
  br i1 %341, label %342, label %411, !prof !3

342:                                              ; preds = %319
  %343 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %344 = icmp eq i8 %343, 2
  br i1 %344, label %345, label %346, !prof !3

345:                                              ; preds = %342
  call void @_ZN4base8internal6PCScan8JoinScanEv() #17
  br label %346

346:                                              ; preds = %345, %342
  %347 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %326, i64 %330, i32 0, i32 1, i64 8
  %348 = bitcast i8* %347 to %"struct.base::internal::PartitionBucket"**
  %349 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %348, align 1
  %350 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %338, i64 0, i32 10, i64 0
  %351 = icmp ugt %"struct.base::internal::PartitionBucket"* %350, %349
  %352 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %338, i64 0, i32 11
  %353 = icmp ult %"struct.base::internal::PartitionBucket"* %352, %349
  %354 = or i1 %351, %353
  br i1 %354, label %411, label %355, !prof !3

355:                                              ; preds = %346
  %356 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %326, i64 %330, i32 0, i32 1, i64 21
  %357 = load i8, i8* %356, align 1, !range !4
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %359, label %363, !prof !2

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %349, i64 0, i32 3
  %361 = load i32, i32* %360, align 8
  %362 = zext i32 %361 to i64
  br label %370

363:                                              ; preds = %355
  %364 = bitcast %union.anon.268* %331 to %"struct.base::internal::PartitionPage"*
  %365 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %364, i64 1, i32 0, i32 0, i32 0
  %366 = load i64, i64* %365, align 1
  %367 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %349, i64 0, i32 3
  %368 = load i32, i32* %367, align 8
  %369 = zext i32 %368 to i64
  br label %370

370:                                              ; preds = %363, %359
  %371 = phi i64 [ %362, %359 ], [ %369, %363 ]
  %372 = phi i64 [ %362, %359 ], [ %366, %363 ]
  %373 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %374 = inttoptr i64 %320 to i8*
  %375 = and i64 %373, 1
  %376 = icmp eq i64 %375, 0
  %377 = select i1 %376, i64 16384, i64 32768
  %378 = getelementptr inbounds i8, i8* %374, i64 %377
  %379 = bitcast i8* %378 to %"class.base::internal::ObjectBitmap"*
  %380 = lshr i64 %299, 4
  %381 = lshr i64 %299, 10
  %382 = and i64 %381, 2047
  %383 = and i64 %380, 63
  %384 = shl i64 1, %383
  %385 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %379, i64 0, i32 0, i32 0, i64 %382
  %386 = atomicrmw or i64* %385, i64 %384 monotonic
  %387 = and i64 %386, %384
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %390, label %389, !prof !2

389:                                              ; preds = %370
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #20
  unreachable

390:                                              ; preds = %370
  %391 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %371 monotonic
  %392 = add i64 %391, %371
  %393 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %394 = icmp ugt i64 %392, %393
  br i1 %394, label %395, label %401

395:                                              ; preds = %390
  %396 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %397 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %396 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %398 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %397, align 8
  %399 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %398, align 8
  %400 = call zeroext i1 %399(%"class.base::internal::PCScanSchedulingBackend"* %396) #17
  br label %401

401:                                              ; preds = %395, %390
  %402 = phi i1 [ false, %390 ], [ %400, %395 ]
  %403 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %404 = icmp eq i8 %403, 1
  br i1 %404, label %405, label %406

405:                                              ; preds = %401
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %300, i8 0, i64 %372, i1 false) #17
  br label %406

406:                                              ; preds = %405, %401
  br i1 %402, label %407, label %550, !prof !3

407:                                              ; preds = %406
  %408 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %410, label %550

410:                                              ; preds = %407
  call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #17
  br label %550

411:                                              ; preds = %346, %319
  %412 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %338, i64 0, i32 2
  %413 = load i8, i8* %412, align 2, !range !4
  %414 = icmp eq i8 %413, 0
  br i1 %414, label %483, label %415, !prof !3

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %326, i64 %330, i32 0, i32 1, i64 8
  %417 = bitcast i8* %416 to %"struct.base::internal::PartitionBucket"**
  %418 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %417, align 1
  %419 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %338, i64 0, i32 10, i64 0
  %420 = icmp ule %"struct.base::internal::PartitionBucket"* %419, %418
  %421 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %338, i64 0, i32 11
  %422 = icmp uge %"struct.base::internal::PartitionBucket"* %421, %418
  %423 = and i1 %422, %420
  %424 = ptrtoint %"struct.base::internal::PartitionBucket"* %418 to i64
  br i1 %423, label %425, label %483, !prof !2

425:                                              ; preds = %415
  %426 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %427 = call i8* @pthread_getspecific(i32 %426) #17
  %428 = bitcast i8* %427 to %"class.base::internal::ThreadCache"*
  %429 = icmp ugt i8* %427, inttoptr (i64 1 to i8*)
  br i1 %429, label %430, label %483, !prof !2

430:                                              ; preds = %425
  %431 = ptrtoint %"struct.base::internal::PartitionBucket"* %419 to i64
  %432 = sub i64 %424, %431
  %433 = sdiv exact i64 %432, 40
  %434 = getelementptr inbounds i8, i8* %427, i64 1480
  %435 = bitcast i8* %434 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = add i64 %436, 1
  store i64 %437, i64* %435, align 8
  %438 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %439 = zext i16 %438 to i64
  %440 = icmp ugt i64 %433, %439
  br i1 %440, label %441, label %446, !prof !3

441:                                              ; preds = %430
  %442 = getelementptr inbounds i8, i8* %427, i64 1496
  %443 = bitcast i8* %442 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = add i64 %444, 1
  store i64 %445, i64* %443, align 8
  br label %483

446:                                              ; preds = %430
  %447 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %428, i64 0, i32 0, i64 %433
  %448 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %447 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = call i64 @llvm.bswap.i64(i64 %449) #17
  %451 = inttoptr i64 %450 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %452 = inttoptr i64 %299 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %451, %"struct.base::internal::EncodedPartitionFreelistEntry"** %452, align 8
  %453 = xor i64 %450, -1
  %454 = getelementptr inbounds i8, i8* %300, i64 8
  %455 = bitcast i8* %454 to i64*
  store i64 %453, i64* %455, align 8
  %456 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %447 to i8**
  store i8* %300, i8** %456, align 8
  %457 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %428, i64 0, i32 0, i64 %433, i32 1
  %458 = load i8, i8* %457, align 8
  %459 = add i8 %458, 1
  store i8 %459, i8* %457, align 8
  %460 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %428, i64 0, i32 0, i64 %433, i32 3
  %461 = load i16, i16* %460, align 2
  %462 = zext i16 %461 to i64
  %463 = getelementptr inbounds i8, i8* %427, i64 1424
  %464 = bitcast i8* %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = add i64 %465, %462
  store i64 %466, i64* %464, align 8
  %467 = getelementptr inbounds i8, i8* %427, i64 1488
  %468 = bitcast i8* %467 to i64*
  %469 = load i64, i64* %468, align 8
  %470 = add i64 %469, 1
  store i64 %470, i64* %468, align 8
  %471 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %428, i64 0, i32 0, i64 %433, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = load atomic i8, i8* %471 monotonic, align 1
  %473 = icmp ugt i8 %459, %472
  br i1 %473, label %474, label %477, !prof !3

474:                                              ; preds = %446
  %475 = lshr i8 %472, 1
  %476 = zext i8 %475 to i64
  call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %428, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %447, i64 %476) #17
  br label %477

477:                                              ; preds = %474, %446
  %478 = getelementptr inbounds i8, i8* %427, i64 1432
  %479 = load atomic i8, i8* %478 monotonic, align 1
  %480 = and i8 %479, 1
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %550, label %482, !prof !2

482:                                              ; preds = %477
  call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %428) #17
  br label %550

483:                                              ; preds = %441, %425, %415, %411
  %484 = bitcast %"struct.base::internal::DeferredUnmap"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %484) #17
  %485 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %6, i64 0, i32 0
  %486 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %484, i8 0, i64 16, i1 false) #17
  %487 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %338, i64 0, i32 8
  %488 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %487, i64 0, i32 0
  %489 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %487, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %490

490:                                              ; preds = %502, %483
  %491 = phi i32 [ 0, %483 ], [ %503, %502 ]
  %492 = phi i32 [ 1, %483 ], [ %506, %502 ]
  %493 = load atomic i32, i32* %489 monotonic, align 4
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %498, !prof !31

495:                                              ; preds = %490
  %496 = cmpxchg weak i32* %489, i32 0, i32 1 acquire monotonic
  %497 = extractvalue { i32, i1 } %496, 1
  br i1 %497, label %513, label %498, !prof !2

498:                                              ; preds = %495, %490
  %499 = icmp sgt i32 %492, 0
  br i1 %499, label %508, label %502

500:                                              ; preds = %508
  %501 = add i32 %492, %491
  br label %502

502:                                              ; preds = %500, %498
  %503 = phi i32 [ %491, %498 ], [ %501, %500 ]
  %504 = shl i32 %492, 1
  %505 = icmp slt i32 %504, 64
  %506 = select i1 %505, i32 %504, i32 64
  %507 = icmp slt i32 %503, 1000
  br i1 %507, label %490, label %512

508:                                              ; preds = %498, %508
  %509 = phi i32 [ %510, %508 ], [ 0, %498 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !32
  %510 = add nuw nsw i32 %509, 1
  %511 = icmp eq i32 %510, %492
  br i1 %511, label %500, label %508

512:                                              ; preds = %502
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %488) #17
  br label %513

513:                                              ; preds = %495, %512
  %514 = bitcast %union.anon.268* %331 to i8**
  %515 = load i8*, i8** %514, align 1
  %516 = icmp eq i8* %515, %300
  br i1 %516, label %519, label %517, !prof !3

517:                                              ; preds = %513
  %518 = ptrtoint i8* %515 to i64
  br label %522

519:                                              ; preds = %513
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.29, i64 0, i64 0)) #17
  %520 = getelementptr inbounds %union.anon.268, %union.anon.268* %331, i64 0, i32 0, i32 0
  %521 = load i64, i64* %520, align 1
  br label %522

522:                                              ; preds = %519, %517
  %523 = phi i64 [ %518, %517 ], [ %521, %519 ]
  %524 = call i64 @llvm.bswap.i64(i64 %523) #17
  %525 = inttoptr i64 %524 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %526 = inttoptr i64 %299 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %525, %"struct.base::internal::EncodedPartitionFreelistEntry"** %526, align 8
  %527 = xor i64 %524, -1
  %528 = getelementptr inbounds i8, i8* %300, i64 8
  %529 = bitcast i8* %528 to i64*
  store i64 %527, i64* %529, align 8
  store i8* %300, i8** %514, align 1
  %530 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %326, i64 %330, i32 0, i32 1, i64 16
  %531 = bitcast i8* %530 to i16*
  %532 = load i16, i16* %531, align 1
  %533 = add i16 %532, -1
  store i16 %533, i16* %531, align 1
  %534 = icmp slt i16 %533, 1
  br i1 %534, label %535, label %539, !prof !3

535:                                              ; preds = %522
  %536 = call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %332) #17
  %537 = extractvalue { i8*, i64 } %536, 0
  %538 = extractvalue { i8*, i64 } %536, 1
  br label %539

539:                                              ; preds = %535, %522
  %540 = phi i8* [ %537, %535 ], [ null, %522 ]
  %541 = phi i64 [ %538, %535 ], [ 0, %522 ]
  store i8* %540, i8** %485, align 8
  store i64 %541, i64* %486, align 8
  %542 = atomicrmw xchg i32* %489, i32 0 release
  %543 = icmp eq i32 %542, 2
  br i1 %543, label %544, label %545, !prof !3

544:                                              ; preds = %539
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %488) #17
  br label %545

545:                                              ; preds = %544, %539
  %546 = load i8*, i8** %485, align 8
  %547 = icmp eq i8* %546, null
  br i1 %547, label %549, label %548, !prof !2

548:                                              ; preds = %545
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %6) #17
  br label %549

549:                                              ; preds = %548, %545
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %484) #17
  br label %550

550:                                              ; preds = %311, %317, %406, %407, %410, %477, %482, %549
  %551 = phi i64 [ 0, %311 ], [ %313, %317 ], [ %313, %406 ], [ %313, %407 ], [ %313, %410 ], [ %313, %477 ], [ %313, %482 ], [ %313, %549 ]
  %552 = call i64 @_ZNK4base18ElapsedThreadTimer7ElapsedEv(%"class.base::ElapsedThreadTimer"* nonnull %11) #17
  %553 = bitcast %"struct.blink::BackgroundTaskParams"* %0 to %"class.base::SequencedTaskRunner"**
  %554 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %553, align 8
  %555 = load i64, i64* %30, align 8
  %556 = bitcast %"class.base::Location"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %556) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 685) #17
  %557 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %557)
  %558 = call i8* @_Znwm(i64 64) #18, !noalias !33
  %559 = bitcast i8* %558 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %559, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS3_20BackgroundTaskParamsENS5_14default_deleteIS7_EEEEE3$_0JSA_NS6_IN3WTF6VectorIhLj0ENSC_18PartitionAllocatorEEENS8_ISF_EEEENS_9TimeDeltaEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS2_20BackgroundTaskParamsENS4_14default_deleteIS6_EEEEE3$_0JS9_NS5_IN3WTF6VectorIhLj0ENSB_18PartitionAllocatorEEENS7_ISE_EEEENS_9TimeDeltaEEE7DestroyEPKNS0_13BindStateBaseE") #17, !noalias !33
  %560 = getelementptr inbounds i8, i8* %558, i64 40
  %561 = bitcast i8* %560 to i64*
  store i64 %15, i64* %561, align 8, !noalias !33
  %562 = getelementptr inbounds i8, i8* %558, i64 48
  %563 = bitcast i8* %562 to i64*
  store i64 %551, i64* %563, align 8, !noalias !33
  %564 = getelementptr inbounds i8, i8* %558, i64 56
  %565 = bitcast i8* %564 to i64*
  store i64 %552, i64* %565, align 8, !noalias !33
  %566 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %566) #17, !noalias !40
  %567 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %568 = ptrtoint i8* %558 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %567, align 8, !noalias !41
  %569 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %569, align 8, !noalias !41
  %570 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %570) #17, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %566) #17, !noalias !40
  %571 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %571) #17, !noalias !40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %557)
  %572 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %572)
  %573 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %573)
  %574 = bitcast %"class.base::SequencedTaskRunner"* %554 to %"class.base::TaskRunner"*
  %575 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %575, align 8
  %576 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %577 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %568, i64* %577, align 8, !alias.scope !44
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %576, align 8, !noalias !44
  %578 = bitcast %"class.base::SequencedTaskRunner"* %554 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %579 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %578, align 8
  %580 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %579, align 8
  %581 = call zeroext i1 %580(%"class.base::TaskRunner"* %574, %"class.base::Location"* nonnull dereferenceable(32) %13, %"class.base::OnceCallback"* nonnull %2, i64 0) #17
  %582 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %582) #17
  %583 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %583) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %572)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %573)
  %584 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %14, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %584) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %556) #17
  %585 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %10) #17
  %586 = uitofp i64 %555 to double
  %587 = add i64 %585, -9223372036854775807
  %588 = icmp ult i64 %587, 2
  br i1 %588, label %592, label %589

589:                                              ; preds = %550
  %590 = sitofp i64 %585 to double
  %591 = fdiv double %590, 1.000000e+06
  br label %595

592:                                              ; preds = %550
  %593 = icmp slt i64 %585, 0
  %594 = select i1 %593, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %595

595:                                              ; preds = %592, %589
  %596 = phi double [ %594, %592 ], [ %591, %589 ]
  %597 = fdiv double %586, %596
  %598 = fptoui double %597 to i64
  %599 = udiv i64 %598, 1000000
  %600 = udiv i64 %555, 1000
  %601 = trunc i64 %600 to i32
  call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* nonnull getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i32 %601) #17
  call void @_ZN4base35UmaHistogramCustomMicrosecondsTimesEPKcNS_9TimeDeltaES2_S2_i(i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0), i64 %585, i64 500, i64 1000000, i32 100) #17
  %602 = trunc i64 %599 to i32
  call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* nonnull getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i32 %602) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #17
  %603 = icmp eq i8* %23, null
  br i1 %603, label %608, label %604

604:                                              ; preds = %595
  %605 = load i8, i8* %23, align 1
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %608, label %607

607:                                              ; preds = %604
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %24, i64 %25) #17
  br label %608

608:                                              ; preds = %607, %604, %595
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRKmEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #17
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #17
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #17
  %22 = load i8, i8* %16, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %58, label %24

24:                                               ; preds = %9, %53
  %25 = phi i64 [ %54, %53 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %31 = bitcast %"union.base::trace_event::TraceValue"* %30 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %32 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %31, align 8
  %33 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %32 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %36 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %36, i64 1
  %38 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, align 8
  call void %38(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %32) #17
  %39 = load i8, i8* %26, align 1
  br label %40

40:                                               ; preds = %34, %24
  %41 = phi i8 [ %27, %24 ], [ %39, %34 ]
  %42 = icmp eq i8 %41, 9
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.protozero::HeapBuffered"**
  %46 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %45, align 8
  %47 = icmp eq %"class.protozero::HeapBuffered"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %49) #17
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %50) #17
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %51) #17
  %52 = bitcast %"class.protozero::HeapBuffered"* %46 to i8*
  call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %48, %43, %40, %29
  %54 = add nuw nsw i64 %25, 1
  %55 = load i8, i8* %16, align 8
  %56 = zext i8 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %24, label %58

58:                                               ; preds = %53, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  ret i64 %21
}

declare void @_ZN4base18ElapsedThreadTimerC1Ev(%"class.base::ElapsedThreadTimer"*) unnamed_addr #2

declare zeroext i1 @_ZN11compression12GzipCompressEN4base4spanIKcLm18446744073709551615EEEPcmPmPFPvmEPFvS6_E(i64, i8*, i8*, i64, i64*, i8* (i64)*, void (i8*)*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !2

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %32) #17
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #17
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !2

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #17
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #17
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !2

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %66) #17
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %67, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #17
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !2

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #17
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #17
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0), i8* %96, i8* %97) #17
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.32, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #17
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #17
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #17
  %105 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !2

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #17
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

declare i64 @_ZNK4base18ElapsedThreadTimer7ElapsedEv(%"class.base::ElapsedThreadTimer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl29OnParkingCompleteOnMainThreadENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEENS2_IN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEENS4_ISA_EEEEN4base9TimeDeltaE(%"class.blink::ParkableStringImpl"*, %"struct.blink::BackgroundTaskParams"*, %"class.WTF::Vector"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = ptrtoint %"class.WTF::Vector"* %2 to i64
  %7 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %8, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #17
  %10 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %7, align 8
  %11 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %10, i64 0, i32 3
  store i8 0, i8* %11, align 1
  %12 = icmp eq %"class.WTF::Vector"* %2, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %4
  %14 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %7, align 8
  %15 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %14, i64 0, i32 4
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %6, i64* %18, align 8
  %19 = icmp eq %"class.WTF::Vector"* %17, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %30, label %24, !prof !2

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %24
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %24
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #17
  store i8* null, i8** %21, align 8
  br label %30

30:                                               ; preds = %29, %20
  %31 = bitcast %"class.WTF::Vector"* %17 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %31) #17
  br label %32

32:                                               ; preds = %4, %30, %13
  %33 = phi i64 [ %6, %4 ], [ 0, %13 ], [ 0, %30 ]
  %34 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %7, align 8
  %35 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %75

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %75

46:                                               ; preds = %38, %42
  %47 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %34, i64 0, i32 7
  %48 = load i8, i8* %47, align 8
  %49 = and i8 %48, 7
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %52, align 8
  %54 = icmp eq %"class.WTF::Vector"* %53, null
  br i1 %54, label %75, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  br i1 %41, label %71, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #17
  br label %71

71:                                               ; preds = %55, %67, %70
  %72 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %7, align 8
  %73 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %72, i64 0, i32 2
  store i8 1, i8* %73, align 4
  %74 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager8OnParkedEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %74, %"class.blink::ParkableStringImpl"* %0) #17
  br label %77

75:                                               ; preds = %51, %46, %32, %42
  %76 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %34, i64 0, i32 2
  store i8 0, i8* %76, align 4
  br label %77

77:                                               ; preds = %75, %71
  %78 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  %79 = add i64 %3, -9223372036854775807
  %80 = icmp ult i64 %79, 2
  %81 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %78, i64 0, i32 4, i32 0
  %82 = load i64, i64* %81, align 8
  br i1 %80, label %90, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %3, 0
  %85 = select i1 %84, i64 -9223372036854775808, i64 9223372036854775807
  %86 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %82, i64 %3) #17
  %87 = extractvalue { i64, i1 } %86, 1
  %88 = extractvalue { i64, i1 } %86, 0
  %89 = select i1 %87, i64 %85, i64 %88, !prof !3
  br label %98

90:                                               ; preds = %77
  %91 = add i64 %82, -9223372036854775807
  %92 = icmp ugt i64 %91, 1
  %93 = icmp eq i64 %82, %3
  %94 = or i1 %93, %92
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0)) #17
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #17
  br label %98

98:                                               ; preds = %83, %90, %95
  %99 = phi i64 [ %89, %83 ], [ %3, %90 ], [ %3, %95 ]
  store i64 %99, i64* %81, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #17
  %100 = inttoptr i64 %33 to %"class.WTF::Vector"*
  %101 = icmp eq i64 %33, 0
  br i1 %101, label %114, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %100, i64 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %112, label %106, !prof !2

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %100, i64 0, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110, !prof !3

110:                                              ; preds = %106
  store i32 0, i32* %107, align 4
  br label %111

111:                                              ; preds = %110, %106
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %104) #17
  store i8* null, i8** %103, align 8
  br label %112

112:                                              ; preds = %111, %102
  %113 = inttoptr i64 %33 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %113) #17
  br label %114

114:                                              ; preds = %98, %112
  %115 = icmp eq %"struct.blink::BackgroundTaskParams"* %1, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %1, i64 0, i32 1, i32 0
  %118 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %117, align 8
  %119 = icmp eq %"class.blink::ParkableStringImpl"* %118, null
  br i1 %119, label %127, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %118, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %121) #17
  %122 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %118, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %120
  call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %118) #17
  %126 = bitcast %"class.blink::ParkableStringImpl"* %118 to i8*
  call void @free(i8* %126) #17
  br label %127

127:                                              ; preds = %125, %120, %116
  %128 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %1, i64 0, i32 0, i32 0
  %129 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %128, align 8
  %130 = icmp eq %"class.base::SingleThreadTaskRunner"* %129, null
  br i1 %130, label %139, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %129, i64 0, i32 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw sub i32* %133, i32 1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %139

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %132, i64 -2
  %138 = bitcast %"class.base::RefCountedThreadSafe.41"* %137 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %138) #17
  br label %139

139:                                              ; preds = %136, %131, %127
  %140 = bitcast %"struct.blink::BackgroundTaskParams"* %1 to i8*
  call void @_ZdlPv(i8* %140) #18
  br label %141

141:                                              ; preds = %114, %139
  ret void
}

declare void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationERKNS1_10TaskTraitsEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.WTF::CrossThreadOnceFunction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEEPNS_17DiskDataAllocatorE(%"struct.blink::BackgroundTaskParams"*, %"class.blink::DiskDataAllocator"*) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::ElapsedTimer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = ptrtoint %"struct.blink::BackgroundTaskParams"* %0 to i64
  %11 = bitcast %"class.base::ElapsedTimer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %12, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %7) #17
  %13 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %0, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = call %"class.blink::DiskDataMetadata"* @_ZN5blink17DiskDataAllocator5WriteEPKvm(%"class.blink::DiskDataAllocator"* %1, i8* %14, i64 %16) #17
  %18 = ptrtoint %"class.blink::DiskDataMetadata"* %17 to i64
  %19 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %7) #17
  %20 = load i64, i64* %15, align 8
  %21 = uitofp i64 %20 to double
  %22 = add i64 %19, -9223372036854775807
  %23 = icmp ult i64 %22, 2
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = sitofp i64 %19 to double
  %26 = fdiv double %25, 1.000000e+06
  br label %30

27:                                               ; preds = %2
  %28 = icmp slt i64 %19, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %30

30:                                               ; preds = %24, %27
  %31 = phi double [ %29, %27 ], [ %26, %24 ]
  %32 = fdiv double %21, %31
  %33 = fptoui double %32 to i64
  %34 = udiv i64 %33, 1000000
  %35 = udiv i64 %20, 1000
  %36 = trunc i64 %35 to i32
  call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i32 %36) #17
  call void @_ZN4base35UmaHistogramCustomMicrosecondsTimesEPKcNS_9TimeDeltaES2_S2_i(i8* nonnull getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0), i64 %19, i64 500, i64 1000000, i32 100) #17
  %37 = trunc i64 %34 to i32
  call void @_ZN4base22UmaHistogramCounts1000EPKci(i8* nonnull getelementptr inbounds ([43 x i8], [43 x i8]* @.str.20, i64 0, i64 0), i32 %37) #17
  %38 = bitcast %"struct.blink::BackgroundTaskParams"* %0 to %"class.base::SequencedTaskRunner"**
  %39 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %38, align 8
  %40 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 760) #17
  %41 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = call i8* @_Znwm(i64 64) #18, !noalias !47
  %43 = bitcast i8* %42 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %43, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS3_20BackgroundTaskParamsENS5_14default_deleteIS7_EEEEPNS3_17DiskDataAllocatorEE3$_1JSA_NS6_INS3_16DiskDataMetadataENS8_ISE_EEEENS_9TimeDeltaEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS2_20BackgroundTaskParamsENS4_14default_deleteIS6_EEEEPNS2_17DiskDataAllocatorEE3$_1JS9_NS5_INS2_16DiskDataMetadataENS7_ISD_EEEENS_9TimeDeltaEEE7DestroyEPKNS0_13BindStateBaseE") #17, !noalias !47
  %44 = getelementptr inbounds i8, i8* %42, i64 40
  %45 = bitcast i8* %44 to i64*
  store i64 %10, i64* %45, align 8, !noalias !47
  %46 = getelementptr inbounds i8, i8* %42, i64 48
  %47 = bitcast i8* %46 to i64*
  store i64 %18, i64* %47, align 8, !noalias !47
  %48 = getelementptr inbounds i8, i8* %42, i64 56
  %49 = bitcast i8* %48 to i64*
  store i64 %19, i64* %49, align 8, !noalias !47
  %50 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #17, !noalias !54
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %52 = ptrtoint i8* %42 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %51, align 8, !noalias !55
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8, !noalias !55
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #17, !noalias !55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #17, !noalias !54
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #17, !noalias !54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %56 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56)
  %57 = bitcast %"class.WTF::CrossThreadOnceFunction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57)
  %58 = bitcast %"class.base::SequencedTaskRunner"* %39 to %"class.base::TaskRunner"*
  %59 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %52, i64* %61, align 8, !alias.scope !58
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %60, align 8, !noalias !58
  %62 = bitcast %"class.base::SequencedTaskRunner"* %39 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %63 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %62, align 8
  %64 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %63, align 8
  %65 = call zeroext i1 %64(%"class.base::TaskRunner"* %58, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback"* nonnull %3, i64 0) #17
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #17
  %67 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  %68 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %68) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  ret void
}

declare %"class.blink::DiskDataMetadata"* @_ZN5blink17DiskDataAllocator5WriteEPKvm(%"class.blink::DiskDataAllocator"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ParkableStringImpl29OnWritingCompleteOnMainThreadENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEENS2_INS_16DiskDataMetadataENS4_IS7_EEEEN4base9TimeDeltaE(%"class.blink::ParkableStringImpl"*, %"struct.blink::BackgroundTaskParams"*, %"class.blink::DiskDataMetadata"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, i64 0, i32 3
  store i8 0, i8* %8, align 1
  %9 = icmp eq %"class.blink::DiskDataMetadata"* %2, null
  br i1 %9, label %70, label %10

10:                                               ; preds = %4
  %11 = ptrtoint %"class.blink::DiskDataMetadata"* %2 to i64
  %12 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %13 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %12, i64 0, i32 5
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.1"* %13 to i64*
  store i64 %11, i64* %16, align 8
  %17 = icmp eq %"class.blink::DiskDataMetadata"* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::DiskDataMetadata"* %15 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %10, %18
  %21 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %22 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %47

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %21, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %26, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %26, align 8
  %28 = icmp eq %"class.WTF::Vector"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %39, label %33, !prof !2

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %27, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %33
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %33
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #17
  store i8* null, i8** %30, align 8
  br label %39

39:                                               ; preds = %38, %29
  %40 = bitcast %"class.WTF::Vector"* %27 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %40) #17
  br label %41

41:                                               ; preds = %25, %39
  %42 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %43 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %42, i64 0, i32 2
  store i8 2, i8* %43, align 4
  %44 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  tail call void @_ZN5blink21ParkableStringManager15OnWrittenToDiskEPNS_18ParkableStringImplE(%"class.blink::ParkableStringManager"* %44, %"class.blink::ParkableStringImpl"* %0) #17
  %45 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %46 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %45, i64 0, i32 2
  store i8 2, i8* %46, align 4
  br label %47

47:                                               ; preds = %41, %20
  %48 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  %49 = add i64 %3, -9223372036854775807
  %50 = icmp ult i64 %49, 2
  %51 = getelementptr inbounds %"class.blink::ParkableStringManager", %"class.blink::ParkableStringManager"* %48, i64 0, i32 6, i32 0
  %52 = load i64, i64* %51, align 8
  br i1 %50, label %60, label %53

53:                                               ; preds = %47
  %54 = icmp slt i64 %3, 0
  %55 = select i1 %54, i64 -9223372036854775808, i64 9223372036854775807
  %56 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %52, i64 %3) #17
  %57 = extractvalue { i64, i1 } %56, 1
  %58 = extractvalue { i64, i1 } %56, 0
  %59 = select i1 %57, i64 %55, i64 %58, !prof !3
  br label %68

60:                                               ; preds = %47
  %61 = add i64 %52, -9223372036854775807
  %62 = icmp ugt i64 %61, 1
  %63 = icmp eq i64 %52, %3
  %64 = or i1 %63, %62
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0)) #17
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #17
  br label %68

68:                                               ; preds = %65, %60, %53
  %69 = phi i64 [ %59, %53 ], [ %3, %60 ], [ %3, %65 ]
  store i64 %69, i64* %51, align 8
  br label %70

70:                                               ; preds = %4, %68
  %71 = icmp eq %"struct.blink::BackgroundTaskParams"* %1, null
  br i1 %71, label %97, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %1, i64 0, i32 1, i32 0
  %74 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %73, align 8
  %75 = icmp eq %"class.blink::ParkableStringImpl"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %74, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #17
  %78 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %74) #17
  %82 = bitcast %"class.blink::ParkableStringImpl"* %74 to i8*
  call void @free(i8* %82) #17
  br label %83

83:                                               ; preds = %81, %76, %72
  %84 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %1, i64 0, i32 0, i32 0
  %85 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %84, align 8
  %86 = icmp eq %"class.base::SingleThreadTaskRunner"* %85, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %85, i64 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %95

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %88, i64 -2
  %94 = bitcast %"class.base::RefCountedThreadSafe.41"* %93 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %94) #17
  br label %95

95:                                               ; preds = %92, %87, %83
  %96 = bitcast %"struct.blink::BackgroundTaskParams"* %1 to i8*
  call void @_ZdlPv(i8* %96) #18
  br label %97

97:                                               ; preds = %70, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ParkableStringC2EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nocapture, %class.scoped_refptr* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %0, i64 0, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %3, align 8
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::ParkableString"* %0 to i64*
  store i64 0, i64* %8, align 8
  br label %45

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN5blink21ParkableStringManager10ShouldParkERKN3WTF10StringImplE(%"class.WTF::StringImpl"* nonnull dereferenceable(12) %5) #17
  br i1 %10, label %11, label %25

11:                                               ; preds = %9
  %12 = tail call dereferenceable(120) %"class.blink::ParkableStringManager"* @_ZN5blink21ParkableStringManager8InstanceEv() #17
  %13 = tail call %"class.blink::ParkableStringImpl"* @_ZN5blink21ParkableStringManager3AddEO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableStringManager"* %12, %class.scoped_refptr* dereferenceable(8) %1) #17
  %14 = ptrtoint %"class.blink::ParkableStringImpl"* %13 to i64
  %15 = bitcast %"class.blink::ParkableString"* %0 to i64*
  %16 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %3, align 8
  store i64 %14, i64* %15, align 8
  %17 = icmp eq %"class.blink::ParkableStringImpl"* %16, null
  br i1 %17, label %45, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #17
  %20 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %45

23:                                               ; preds = %18
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %16) #17
  %24 = bitcast %"class.blink::ParkableStringImpl"* %16 to i8*
  tail call void @free(i8* %24) #17
  br label %45

25:                                               ; preds = %9
  %26 = tail call noalias i8* @malloc(i64 24) #17
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast %class.scoped_refptr* %1 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %31 = bitcast i8* %28 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %26, i64 16
  %33 = bitcast i8* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = ptrtoint i8* %26 to i64
  %35 = bitcast %"class.blink::ParkableString"* %0 to i64*
  %36 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %3, align 8
  store i64 %34, i64* %35, align 8
  %37 = icmp eq %"class.blink::ParkableStringImpl"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %36, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #17
  %40 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %36) #17
  %44 = bitcast %"class.blink::ParkableStringImpl"* %36 to i8*
  tail call void @free(i8* %44) #17
  br label %45

45:                                               ; preds = %43, %38, %25, %23, %18, %11, %7
  ret void
}

declare zeroext i1 @_ZN5blink21ParkableStringManager10ShouldParkERKN3WTF10StringImplE(%"class.WTF::StringImpl"* dereferenceable(12)) local_unnamed_addr #2

declare %"class.blink::ParkableStringImpl"* @_ZN5blink21ParkableStringManager3AddEO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableStringManager"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ParkableStringD2Ev(%"class.blink::ParkableString"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %2, align 8
  %4 = icmp eq %"class.blink::ParkableStringImpl"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #17
  %7 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %3) #17
  %11 = bitcast %"class.blink::ParkableStringImpl"* %3 to i8*
  tail call void @free(i8* %11) #17
  br label %12

12:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14ParkableString4LockEv(%"class.blink::ParkableString"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %2, align 8
  %4 = icmp eq %"class.blink::ParkableStringImpl"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink18ParkableStringImpl4LockEv(%"class.blink::ParkableStringImpl"* nonnull %3)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14ParkableString6UnlockEv(%"class.blink::ParkableString"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %2, align 8
  %4 = icmp eq %"class.blink::ParkableStringImpl"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink18ParkableStringImpl6UnlockEv(%"class.blink::ParkableStringImpl"* nonnull %3)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14ParkableString12OnMemoryDumpEPNS_20WebProcessMemoryDumpERKN3WTF6StringE(%"class.blink::ParkableString"* nocapture readonly, %"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %5, align 8
  %7 = icmp eq %"class.blink::ParkableStringImpl"* %6, null
  br i1 %7, label %97, label %8

8:                                                ; preds = %3
  %9 = tail call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %1, %"class.WTF::String"* dereferenceable(8) %2) #17
  %10 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %5, align 8
  %11 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %11, align 8
  %13 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %12, null
  br i1 %13, label %14, label %29

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %10, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %58, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i64 2, i64 1
  %27 = mul nuw nsw i64 %26, %21
  %28 = add nuw nsw i64 %27, 24
  br label %58

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %12, i64 0, i32 2
  %31 = load i8, i8* %30, align 4
  %32 = icmp eq i8 %31, 1
  br i1 %32, label %48, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %10, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, i64 2, i64 1
  %46 = mul nuw nsw i64 %45, %40
  %47 = add nuw nsw i64 %46, 144
  br label %48

48:                                               ; preds = %37, %33, %29
  %49 = phi i64 [ 144, %29 ], [ %47, %37 ], [ 144, %33 ]
  %50 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %50, align 8
  %52 = icmp eq %"class.WTF::Vector"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %51, i64 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = add nuw nsw i64 %49, %56
  br label %58

58:                                               ; preds = %14, %18, %48, %53
  %59 = phi i64 [ %57, %53 ], [ %49, %48 ], [ %28, %18 ], [ 24, %14 ]
  tail call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i64 %59) #17
  %60 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %5, align 8
  %61 = icmp eq %"class.blink::ParkableStringImpl"* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = load i8*, i8** @_ZN3WTF10Partitions24kAllocatedObjectPoolNameE, align 8
  br label %71

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0
  %66 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %65, align 8
  %67 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %66, null
  %68 = load i8*, i8** @_ZN5blink21ParkableStringManager18kAllocatorDumpNameE, align 8
  %69 = load i8*, i8** @_ZN3WTF10Partitions24kAllocatedObjectPoolNameE, align 8
  %70 = select i1 %67, i8* %69, i8* %68
  br label %71

71:                                               ; preds = %64, %62
  %72 = phi i8* [ %63, %62 ], [ %70, %64 ]
  %73 = tail call i64 @_ZNK5blink22WebMemoryAllocatorDump4GuidEv(%"class.blink::WebMemoryAllocatorDump"* %9) #17
  %74 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #17
  %75 = icmp eq i8* %72, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = tail call i64 @strlen(i8* nonnull %72) #21
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi i64 [ %77, %76 ], [ 0, %71 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %72, i64 %79) #17
  call void @_ZN5blink20WebProcessMemoryDump16AddSuballocationEmRKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %1, i64 %73, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #17
  br label %96

96:                                               ; preds = %78, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #17
  br label %97

97:                                               ; preds = %3, %96
  ret void
}

declare %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink20WebProcessMemoryDump16AddSuballocationEmRKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK5blink22WebMemoryAllocatorDump4GuidEv(%"class.blink::WebMemoryAllocatorDump"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14ParkableString6Is8BitEv(%"class.blink::ParkableString"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %4, align 8
  %6 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %3, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp ne i32 %12, 0
  br label %19

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %5, i64 0, i32 7
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, 8
  %18 = icmp ne i8 %17, 0
  br label %19

19:                                               ; preds = %7, %14
  %20 = phi i1 [ %18, %14 ], [ %13, %7 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %2, align 8
  %4 = icmp eq %"class.blink::ParkableStringImpl"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %8 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #17
  %11 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %12 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %11, i64 0, i32 7
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, -8
  store i8 %14, i8* %12, align 8
  tail call void @_ZN5blink18ParkableStringImpl6UnparkEv(%"class.blink::ParkableStringImpl"* nonnull %3) #17
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #17
  br label %15

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %3, i64 0, i32 1
  br label %19

17:                                               ; preds = %1
  %18 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi %"class.WTF::String"* [ %16, %15 ], [ %18, %17 ]
  ret %"class.WTF::String"* %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK5blink14ParkableString21CharactersSizeInBytesEv(%"class.blink::ParkableString"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %2, align 8
  %4 = icmp eq %"class.blink::ParkableStringImpl"* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %6, align 8
  %8 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, null
  br i1 %8, label %9, label %22

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %3, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, i32 2, i32 1
  %21 = mul i32 %20, %15
  br label %31

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, i64 0, i32 8
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %7, i64 0, i32 7
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 8
  %28 = icmp eq i8 %27, 0
  %29 = select i1 %28, i32 2, i32 1
  %30 = mul i32 %29, %24
  br label %31

31:                                               ; preds = %1, %22, %13, %9
  %32 = phi i32 [ 0, %1 ], [ %30, %22 ], [ %21, %13 ], [ 0, %9 ]
  ret i32 %32
}

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.19"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #17
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare dereferenceable(200) %"class.blink::DiskDataAllocator"* @_ZN5blink17DiskDataAllocator8InstanceEv() local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base22UmaHistogramCounts1000EPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base35UmaHistogramCustomMicrosecondsTimesEPKcNS_9TimeDeltaES2_S2_i(i8*, i64, i64, i64, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #9

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEEJS9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"struct.blink::BackgroundTaskParams"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (%"struct.blink::BackgroundTaskParams"*)*, void (%"struct.blink::BackgroundTaskParams"*)** %3, align 8
  %6 = bitcast void ()** %4 to %"struct.blink::BackgroundTaskParams"**
  %7 = load %"struct.blink::BackgroundTaskParams"*, %"struct.blink::BackgroundTaskParams"** %6, align 8
  store %"struct.blink::BackgroundTaskParams"* null, %"struct.blink::BackgroundTaskParams"** %6, align 8
  tail call void %5(%"struct.blink::BackgroundTaskParams"* %7) #17
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS2_14default_deleteIS5_EEEEEJS8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.blink::BackgroundTaskParams"**
  %6 = load %"struct.blink::BackgroundTaskParams"*, %"struct.blink::BackgroundTaskParams"** %5, align 8
  store %"struct.blink::BackgroundTaskParams"* null, %"struct.blink::BackgroundTaskParams"** %5, align 8
  %7 = icmp eq %"struct.blink::BackgroundTaskParams"* %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %6, i64 0, i32 1, i32 0
  %10 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %9, align 8
  %11 = icmp eq %"class.blink::ParkableStringImpl"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %10, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %13) #17
  %14 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %10) #17
  %18 = bitcast %"class.blink::ParkableStringImpl"* %10 to i8*
  tail call void @free(i8* %18) #17
  br label %19

19:                                               ; preds = %17, %12, %8
  %20 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %6, i64 0, i32 0, i32 0
  %21 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %20, align 8
  %22 = icmp eq %"class.base::SingleThreadTaskRunner"* %21, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %21, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe.41"* %29 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %30) #17
  br label %31

31:                                               ; preds = %28, %23, %19
  %32 = bitcast %"struct.blink::BackgroundTaskParams"* %6 to i8*
  tail call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %3, %31
  %34 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %33, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8**, i32, i64, i8*) local_unnamed_addr #2

declare void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8*, i64, i8*) local_unnamed_addr #2

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #2

declare i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"*, i16 zeroext, i64*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

declare void @_ZN4base8internal6PCScan8JoinScanEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @pthread_getspecific(i32) local_unnamed_addr #3

declare void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"*, i64) local_unnamed_addr #2

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() unnamed_addr #7 {
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !61
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !62
  unreachable
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #9

declare void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #2

declare i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"*, %"struct.base::PartitionRoot"*, i32, i64, i64, i8*) local_unnamed_addr #2

declare void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i8* @"_ZZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEEEN3$_28__invokeEm"(i64) #6 align 2 {
  %2 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #17
  ret i8* %2
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4base8internal17DoubleFreeAttemptEv() local_unnamed_addr #13

declare void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"*, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16), i64) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #2

declare void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS3_20BackgroundTaskParamsENS5_14default_deleteIS7_EEEEE3$_0JSA_NS6_IN3WTF6VectorIhLj0ENSC_18PartitionAllocatorEEENS8_ISF_EEEENS_9TimeDeltaEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"struct.blink::BackgroundTaskParams"**
  %4 = load %"struct.blink::BackgroundTaskParams"*, %"struct.blink::BackgroundTaskParams"** %3, align 8
  store %"struct.blink::BackgroundTaskParams"* null, %"struct.blink::BackgroundTaskParams"** %3, align 8
  %5 = getelementptr inbounds void ()*, void ()** %2, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::Vector"**
  %7 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %2, i64 2
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %4, i64 0, i32 1, i32 0
  %12 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %11, align 8
  tail call void @_ZN5blink18ParkableStringImpl29OnParkingCompleteOnMainThreadENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEENS2_IN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEENS4_ISA_EEEEN4base9TimeDeltaE(%"class.blink::ParkableStringImpl"* %12, %"struct.blink::BackgroundTaskParams"* %4, %"class.WTF::Vector"* %7, i64 %10) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS2_20BackgroundTaskParamsENS4_14default_deleteIS6_EEEEE3$_0JS9_NS5_IN3WTF6VectorIhLj0ENSB_18PartitionAllocatorEEENS7_ISE_EEEENS_9TimeDeltaEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %52, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.WTF::Vector"**
  %6 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %5, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %5, align 8
  %7 = icmp eq %"class.WTF::Vector"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %12
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %12
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #17
  store i8* null, i8** %9, align 8
  br label %18

18:                                               ; preds = %17, %8
  %19 = bitcast %"class.WTF::Vector"* %6 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %19) #17
  br label %20

20:                                               ; preds = %18, %3
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %22 = bitcast void ()** %21 to %"struct.blink::BackgroundTaskParams"**
  %23 = load %"struct.blink::BackgroundTaskParams"*, %"struct.blink::BackgroundTaskParams"** %22, align 8
  store %"struct.blink::BackgroundTaskParams"* null, %"struct.blink::BackgroundTaskParams"** %22, align 8
  %24 = icmp eq %"struct.blink::BackgroundTaskParams"* %23, null
  br i1 %24, label %50, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %23, i64 0, i32 1, i32 0
  %27 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %26, align 8
  %28 = icmp eq %"class.blink::ParkableStringImpl"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #17
  %31 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %27) #17
  %35 = bitcast %"class.blink::ParkableStringImpl"* %27 to i8*
  tail call void @free(i8* %35) #17
  br label %36

36:                                               ; preds = %34, %29, %25
  %37 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %23, i64 0, i32 0, i32 0
  %38 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %37, align 8
  %39 = icmp eq %"class.base::SingleThreadTaskRunner"* %38, null
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %38, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe.41"* %46 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %47) #17
  br label %48

48:                                               ; preds = %45, %40, %36
  %49 = bitcast %"struct.blink::BackgroundTaskParams"* %23 to i8*
  tail call void @_ZdlPv(i8* %49) #18
  br label %50

50:                                               ; preds = %20, %48
  %51 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %50, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEPNS5_17DiskDataAllocatorEEJS9_N3WTF28CrossThreadUnretainedWrapperISA_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"struct.blink::BackgroundTaskParams"*, %"class.blink::DiskDataAllocator"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %6 = bitcast void ()** %5 to %"class.blink::DiskDataAllocator"**
  %7 = load %"class.blink::DiskDataAllocator"*, %"class.blink::DiskDataAllocator"** %6, align 8
  %8 = load void (%"struct.blink::BackgroundTaskParams"*, %"class.blink::DiskDataAllocator"*)*, void (%"struct.blink::BackgroundTaskParams"*, %"class.blink::DiskDataAllocator"*)** %3, align 8
  %9 = bitcast void ()** %4 to %"struct.blink::BackgroundTaskParams"**
  %10 = load %"struct.blink::BackgroundTaskParams"*, %"struct.blink::BackgroundTaskParams"** %9, align 8
  store %"struct.blink::BackgroundTaskParams"* null, %"struct.blink::BackgroundTaskParams"** %9, align 8
  tail call void %8(%"struct.blink::BackgroundTaskParams"* %10, %"class.blink::DiskDataAllocator"* %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS2_14default_deleteIS5_EEEEPNS4_17DiskDataAllocatorEEJS8_N3WTF28CrossThreadUnretainedWrapperIS9_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.blink::BackgroundTaskParams"**
  %6 = load %"struct.blink::BackgroundTaskParams"*, %"struct.blink::BackgroundTaskParams"** %5, align 8
  store %"struct.blink::BackgroundTaskParams"* null, %"struct.blink::BackgroundTaskParams"** %5, align 8
  %7 = icmp eq %"struct.blink::BackgroundTaskParams"* %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %6, i64 0, i32 1, i32 0
  %10 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %9, align 8
  %11 = icmp eq %"class.blink::ParkableStringImpl"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %10, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %13) #17
  %14 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %10) #17
  %18 = bitcast %"class.blink::ParkableStringImpl"* %10 to i8*
  tail call void @free(i8* %18) #17
  br label %19

19:                                               ; preds = %17, %12, %8
  %20 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %6, i64 0, i32 0, i32 0
  %21 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %20, align 8
  %22 = icmp eq %"class.base::SingleThreadTaskRunner"* %21, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %21, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe.41"* %29 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %30) #17
  br label %31

31:                                               ; preds = %28, %23, %19
  %32 = bitcast %"struct.blink::BackgroundTaskParams"* %6 to i8*
  tail call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %3, %31
  %34 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %33, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS3_20BackgroundTaskParamsENS5_14default_deleteIS7_EEEEPNS3_17DiskDataAllocatorEE3$_1JSA_NS6_INS3_16DiskDataMetadataENS8_ISE_EEEENS_9TimeDeltaEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"struct.blink::BackgroundTaskParams"**
  %4 = load %"struct.blink::BackgroundTaskParams"*, %"struct.blink::BackgroundTaskParams"** %3, align 8
  store %"struct.blink::BackgroundTaskParams"* null, %"struct.blink::BackgroundTaskParams"** %3, align 8
  %5 = getelementptr inbounds void ()*, void ()** %2, i64 1
  %6 = bitcast void ()** %5 to %"class.blink::DiskDataMetadata"**
  %7 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %6, align 8
  store %"class.blink::DiskDataMetadata"* null, %"class.blink::DiskDataMetadata"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %2, i64 2
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %4, i64 0, i32 1, i32 0
  %12 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %11, align 8
  tail call void @_ZN5blink18ParkableStringImpl29OnWritingCompleteOnMainThreadENSt3__110unique_ptrINS_20BackgroundTaskParamsENS1_14default_deleteIS3_EEEENS2_INS_16DiskDataMetadataENS4_IS7_EEEEN4base9TimeDeltaE(%"class.blink::ParkableStringImpl"* %12, %"struct.blink::BackgroundTaskParams"* %4, %"class.blink::DiskDataMetadata"* %7, i64 %10) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS2_20BackgroundTaskParamsENS4_14default_deleteIS6_EEEEPNS2_17DiskDataAllocatorEE3$_1JS9_NS5_INS2_16DiskDataMetadataENS7_ISD_EEEENS_9TimeDeltaEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %42, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::DiskDataMetadata"**
  %6 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %5, align 8
  store %"class.blink::DiskDataMetadata"* null, %"class.blink::DiskDataMetadata"** %5, align 8
  %7 = icmp eq %"class.blink::DiskDataMetadata"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::DiskDataMetadata"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %8, %3
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to %"struct.blink::BackgroundTaskParams"**
  %13 = load %"struct.blink::BackgroundTaskParams"*, %"struct.blink::BackgroundTaskParams"** %12, align 8
  store %"struct.blink::BackgroundTaskParams"* null, %"struct.blink::BackgroundTaskParams"** %12, align 8
  %14 = icmp eq %"struct.blink::BackgroundTaskParams"* %13, null
  br i1 %14, label %40, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %13, i64 0, i32 1, i32 0
  %17 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %16, align 8
  %18 = icmp eq %"class.blink::ParkableStringImpl"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #17
  %21 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  tail call void @_ZN5blink18ParkableStringImplD2Ev(%"class.blink::ParkableStringImpl"* nonnull %17) #17
  %25 = bitcast %"class.blink::ParkableStringImpl"* %17 to i8*
  tail call void @free(i8* %25) #17
  br label %26

26:                                               ; preds = %24, %19, %15
  %27 = getelementptr inbounds %"struct.blink::BackgroundTaskParams", %"struct.blink::BackgroundTaskParams"* %13, i64 0, i32 0, i32 0
  %28 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %27, align 8
  %29 = icmp eq %"class.base::SingleThreadTaskRunner"* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %28, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %31, i64 -2
  %37 = bitcast %"class.base::RefCountedThreadSafe.41"* %36 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %37) #17
  br label %38

38:                                               ; preds = %35, %30, %26
  %39 = bitcast %"struct.blink::BackgroundTaskParams"* %13 to i8*
  tail call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %10, %38
  %41 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %41) #18
  br label %42

42:                                               ; preds = %40, %1
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.8"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.31, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #17
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink18ParkableStringImpl16ParkableMetadataEEclEPS3_(%"struct.std::__1::default_delete.27"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %1, null
  br i1 %3, label %42, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %1, i64 0, i32 6
  %6 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %4
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %9, %4
  %11 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %1, i64 0, i32 6, i32 0, i32 1, i64 0
  %14 = icmp eq i8* %13, %12
  br i1 %14, label %17, label %15, !prof !2

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.8"* %16, i8* %12) #17
  br label %17

17:                                               ; preds = %15, %10
  store i8* null, i8** %11, align 8
  %18 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %19 = load %"class.blink::DiskDataMetadata"*, %"class.blink::DiskDataMetadata"** %18, align 8
  store %"class.blink::DiskDataMetadata"* null, %"class.blink::DiskDataMetadata"** %18, align 8
  %20 = icmp eq %"class.blink::DiskDataMetadata"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::DiskDataMetadata"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %21, %17
  %24 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %24, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %24, align 8
  %26 = icmp eq %"class.WTF::Vector"* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %37, label %31, !prof !2

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %29) #17
  store i8* null, i8** %28, align 8
  br label %37

37:                                               ; preds = %36, %27
  %38 = bitcast %"class.WTF::Vector"* %25 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %38) #17
  br label %39

39:                                               ; preds = %23, %37
  %40 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %40) #17
  %41 = bitcast %"struct.blink::ParkableStringImpl::ParkableMetadata"* %1 to i8*
  tail call void @_ZdlPv(i8* %41) #18
  br label %42

42:                                               ; preds = %39, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inaccessiblemem_or_argmemonly nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { cold noreturn nounwind }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn }
attributes #20 = { noreturn nounwind }
attributes #21 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8, !10}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEEJS9_EEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEEJS9_EEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS1_14default_deleteIS4_EEEEEJS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS1_14default_deleteIS4_EEEEEJS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!10 = distinct !{!10, !11, !"_ZN3WTF19CrossThreadBindOnceIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS1_14default_deleteIS4_EEEEEJS7_EEEDaOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF19CrossThreadBindOnceIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS1_14default_deleteIS4_EEEEEJS7_EEEDaOT_DpOT0_"}
!12 = !{!10}
!13 = !{!14, !10}
!14 = distinct !{!14, !15, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!16 = !{!17, !19, !21}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEPNS5_17DiskDataAllocatorEEJS9_N3WTF28CrossThreadUnretainedWrapperISA_EEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS3_14default_deleteIS6_EEEEPNS5_17DiskDataAllocatorEEJS9_N3WTF28CrossThreadUnretainedWrapperISA_EEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS1_14default_deleteIS4_EEEEPNS3_17DiskDataAllocatorEEJS7_N3WTF28CrossThreadUnretainedWrapperIS8_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS1_14default_deleteIS4_EEEEPNS3_17DiskDataAllocatorEEJS7_N3WTF28CrossThreadUnretainedWrapperIS8_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!21 = distinct !{!21, !22, !"_ZN3WTF19CrossThreadBindOnceIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS1_14default_deleteIS4_EEEEPNS3_17DiskDataAllocatorEEJS7_NS_28CrossThreadUnretainedWrapperIS8_EEEEEDaOT_DpOT0_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF19CrossThreadBindOnceIPFvNSt3__110unique_ptrIN5blink20BackgroundTaskParamsENS1_14default_deleteIS4_EEEEPNS3_17DiskDataAllocatorEEJS7_NS_28CrossThreadUnretainedWrapperIS8_EEEEEDaOT_DpOT0_"}
!23 = !{!21}
!24 = !{!25, !21}
!25 = distinct !{!25, !26, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!27 = !{i32 -2138924556}
!28 = !{i32 -2138924535}
!29 = !{i64 0, i64 65}
!30 = !{!"branch_weights", i32 4001, i32 4000000}
!31 = !{!"branch_weights", i32 2146410443, i32 1073205}
!32 = !{i32 -2142325302}
!33 = !{!34, !36, !38}
!34 = distinct !{!34, !35, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS3_20BackgroundTaskParamsENS5_14default_deleteIS7_EEEEE3$_0JSA_NS6_IN3WTF6VectorIhLj0ENSC_18PartitionAllocatorEEENS8_ISF_EEEENS_9TimeDeltaEEEEDcOT0_DpOT1_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS3_20BackgroundTaskParamsENS5_14default_deleteIS7_EEEEE3$_0JSA_NS6_IN3WTF6VectorIhLj0ENSC_18PartitionAllocatorEEENS8_ISF_EEEENS_9TimeDeltaEEEEDcOT0_DpOT1_"}
!36 = distinct !{!36, !37, !"_ZN4base8BindOnceIZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS1_20BackgroundTaskParamsENS3_14default_deleteIS5_EEEEE3$_0JS8_NS4_IN3WTF6VectorIhLj0ENSA_18PartitionAllocatorEEENS6_ISD_EEEENS_9TimeDeltaEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8BindOnceIZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS1_20BackgroundTaskParamsENS3_14default_deleteIS5_EEEEE3$_0JS8_NS4_IN3WTF6VectorIhLj0ENSA_18PartitionAllocatorEEENS6_ISD_EEEENS_9TimeDeltaEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!38 = distinct !{!38, !39, !"_ZN3WTF19CrossThreadBindOnceIZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS1_20BackgroundTaskParamsENS3_14default_deleteIS5_EEEEE3$_0JS8_NS4_INS_6VectorIhLj0ENS_18PartitionAllocatorEEENS6_ISC_EEEERN4base9TimeDeltaEEEEDaOT_DpOT0_: argument 0"}
!39 = distinct !{!39, !"_ZN3WTF19CrossThreadBindOnceIZN5blink18ParkableStringImpl20CompressInBackgroundENSt3__110unique_ptrINS1_20BackgroundTaskParamsENS3_14default_deleteIS5_EEEEE3$_0JS8_NS4_INS_6VectorIhLj0ENS_18PartitionAllocatorEEENS6_ISC_EEEERN4base9TimeDeltaEEEEDaOT_DpOT0_"}
!40 = !{!38}
!41 = !{!42, !38}
!42 = distinct !{!42, !43, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!47 = !{!48, !50, !52}
!48 = distinct !{!48, !49, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS3_20BackgroundTaskParamsENS5_14default_deleteIS7_EEEEPNS3_17DiskDataAllocatorEE3$_1JSA_NS6_INS3_16DiskDataMetadataENS8_ISE_EEEENS_9TimeDeltaEEEEDcOT0_DpOT1_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS3_20BackgroundTaskParamsENS5_14default_deleteIS7_EEEEPNS3_17DiskDataAllocatorEE3$_1JSA_NS6_INS3_16DiskDataMetadataENS8_ISE_EEEENS_9TimeDeltaEEEEDcOT0_DpOT1_"}
!50 = distinct !{!50, !51, !"_ZN4base8BindOnceIZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS1_20BackgroundTaskParamsENS3_14default_deleteIS5_EEEEPNS1_17DiskDataAllocatorEE3$_1JS8_NS4_INS1_16DiskDataMetadataENS6_ISC_EEEENS_9TimeDeltaEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8BindOnceIZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS1_20BackgroundTaskParamsENS3_14default_deleteIS5_EEEEPNS1_17DiskDataAllocatorEE3$_1JS8_NS4_INS1_16DiskDataMetadataENS6_ISC_EEEENS_9TimeDeltaEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!52 = distinct !{!52, !53, !"_ZN3WTF19CrossThreadBindOnceIZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS1_20BackgroundTaskParamsENS3_14default_deleteIS5_EEEEPNS1_17DiskDataAllocatorEE3$_1JS8_NS4_INS1_16DiskDataMetadataENS6_ISC_EEEERN4base9TimeDeltaEEEEDaOT_DpOT0_: argument 0"}
!53 = distinct !{!53, !"_ZN3WTF19CrossThreadBindOnceIZN5blink18ParkableStringImpl23WriteToDiskInBackgroundENSt3__110unique_ptrINS1_20BackgroundTaskParamsENS3_14default_deleteIS5_EEEEPNS1_17DiskDataAllocatorEE3$_1JS8_NS4_INS1_16DiskDataMetadataENS6_ISC_EEEERN4base9TimeDeltaEEEEDaOT_DpOT0_"}
!54 = !{!52}
!55 = !{!56, !52}
!56 = distinct !{!56, !57, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!57 = distinct !{!57, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!60 = distinct !{!60, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!61 = !{i32 -2142363875}
!62 = !{i32 -2142363854}
