; ModuleID = '../../v8/src/compiler/scheduler.cc'
source_filename = "../../v8/src/compiler/scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::Scheduler" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::base::Flags.18", %"class.v8::internal::ZoneVector.19", %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneVector.41", %"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::ProfileDataFromFile"* }
%"class.v8::base::Flags.18" = type { i32 }
%"class.v8::internal::ZoneVector.19" = type { %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"**, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30", %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.v8::internal::ZoneVector.22"** }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.v8::internal::ZoneAllocator.32" }
%"class.v8::internal::ZoneAllocator.32" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.22" = type { %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.25" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::internal::ZoneAllocator.28" }
%"class.v8::internal::ZoneAllocator.28" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneQueue" = type { %"class.std::__1::queue" }
%"class.std::__1::queue" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.37" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.v8::internal::compiler::Node"*** }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.36", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.36" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.v8::internal::RecyclingZoneAllocator.40" }
%"class.v8::internal::RecyclingZoneAllocator.40" = type { %"class.v8::internal::ZoneAllocator.28", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneVector.41" = type { %"class.std::__1::vector.42" }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"class.std::__1::__compressed_pair.44" }
%"struct.v8::internal::compiler::Scheduler::SchedulerData" = type { %"class.v8::internal::compiler::BasicBlock"*, i32, i32 }
%"class.v8::internal::compiler::BasicBlock" = type { i32, i32, i8, i32, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, i32, i32, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::compiler::BasicBlock::Id" }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::compiler::BasicBlock"** }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::BasicBlock::Id" = type { i64 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.v8::internal::compiler::Scheduler::SchedulerData"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.v8::internal::ZoneAllocator.47" }
%"class.v8::internal::ZoneAllocator.47" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CFGBuilder" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::NodeMarker", %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneVector.22", %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::compiler::NodeMarker" = type { %"class.v8::internal::compiler::NodeMarkerBase" }
%"class.v8::internal::compiler::NodeMarkerBase" = type { i32, i32 }
%"class.v8::internal::compiler::SpecialRPONumberer" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::ZoneVector.48", %"class.v8::internal::ZoneVector.55", %"class.v8::internal::ZoneVector.62", i64, %"class.v8::internal::ZoneVector.11" }
%"class.v8::internal::ZoneVector.48" = type { %"class.std::__1::vector.49" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"class.std::__1::__compressed_pair.51" }
%"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo" = type { %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::ZoneVector.11"*, %"class.v8::internal::BitVector"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::BitVector" = type { i32, i32, %"union.v8::internal::BitVector::DataStorage" }
%"union.v8::internal::BitVector::DataStorage" = type { i64* }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.v8::internal::ZoneAllocator.54" }
%"class.v8::internal::ZoneAllocator.54" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.55" = type { %"class.std::__1::vector.56" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.58" }
%"struct.std::__1::pair" = type { %"class.v8::internal::compiler::BasicBlock"*, i64 }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59", %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.v8::internal::ZoneAllocator.61" }
%"class.v8::internal::ZoneAllocator.61" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.62" = type { %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"class.std::__1::__compressed_pair.65" }
%"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame" = type { %"class.v8::internal::compiler::BasicBlock"*, i64 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.v8::internal::ZoneAllocator.68" }
%"class.v8::internal::ZoneAllocator.68" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ControlEquivalence" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, i32, i32, %"class.v8::internal::ZoneVector.69" }
%"class.v8::internal::ZoneVector.69" = type { %"class.std::__1::vector.70" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::compiler::ControlEquivalence::NodeData" = type <{ i64, %"class.v8::internal::ZoneLinkedList", i8, [7 x i8] }>
%"class.v8::internal::ZoneLinkedList" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.72" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.v8::internal::ZoneAllocator.74" }
%"class.v8::internal::ZoneAllocator.74" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76", %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.v8::internal::ZoneAllocator.78" }
%"class.v8::internal::ZoneAllocator.78" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Schedule" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ProfileDataFromFile" = type { i32, %"class.std::__1::vector.79" }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { double*, double*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { double* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::ZoneAllocator.118" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::PrepareUsesVisitor" = type { %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::ZoneVector.84", %"class.v8::internal::ZoneStack" }
%"class.v8::internal::ZoneVector.84" = type { %"class.std::__1::vector.85" }
%"class.std::__1::vector.85" = type { i64*, i64, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.v8::internal::ZoneAllocator.88" }
%"class.v8::internal::ZoneAllocator.88" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneStack" = type { %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor" = type { %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::ZoneQueue" }
%"class.v8::internal::compiler::ScheduleLateNodeVisitor" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::ZoneVector.84", %"class.v8::internal::ZoneDeque.90" }
%"class.v8::internal::ZoneDeque.90" = type { %"class.std::__1::deque.91" }
%"class.std::__1::deque.91" = type { %"class.std::__1::__deque_base.92" }
%"class.std::__1::__deque_base.92" = type { %"struct.std::__1::__split_buffer.93", i64, %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::__split_buffer.93" = type { %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"***, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.v8::internal::compiler::BasicBlock"*** }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.v8::internal::RecyclingZoneAllocator.97" }
%"class.v8::internal::RecyclingZoneAllocator.97" = type { %"class.v8::internal::ZoneAllocator.98", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.98" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::RecyclingZoneAllocator.101" }
%"class.v8::internal::RecyclingZoneAllocator.101" = type { %"class.v8::internal::ZoneAllocator.17", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, i64 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.std::__1::__split_buffer.119" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.v8::internal::RecyclingZoneAllocator"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.v8::internal::ZoneAllocator.129" }
%"class.v8::internal::ZoneAllocator.129" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.149" }
%"struct.std::__1::pair.149" = type { %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"struct.std::__1::__split_buffer.137" = type { %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"***, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.v8::internal::RecyclingZoneAllocator.97"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.171 }
%union.anon.171 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal8compiler10CFGBuilder3RunEv = comdat any

$_ZN2v88internal8compiler18SpecialRPONumberer24SerializeRPOIntoScheduleEv = comdat any

$_ZN2v88internal8compiler18PrepareUsesVisitor3RunEv = comdat any

$_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor3RunEPNS0_10ZoneVectorIPNS1_4NodeEEE = comdat any

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8compiler10CFGBuilder3RunEPNS1_10BasicBlockEPNS1_4NodeE = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS5_EESE_SE_ = comdat any

$_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev = comdat any

$_ZN2v88internal8compiler10CFGBuilder5QueueEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder13ConnectBlocksEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder11BuildBlocksEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder24BuildBlocksForSuccessorsEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder12ConnectMergeEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder13ConnectBranchEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder13ConnectSwitchEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder17ConnectDeoptimizeEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder15ConnectTailCallEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder13ConnectReturnEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder12ConnectThrowEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder11ConnectCallEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler18SpecialRPONumberer26ComputeAndInsertSpecialRPOEPNS1_10BasicBlockES4_ = comdat any

$_ZN2v88internal8compiler18SpecialRPONumberer15ComputeLoopInfoEPNS0_10ZoneVectorINS2_20SpecialRPOStackFrameEEEmPNS3_INSt3__14pairIPNS1_10BasicBlockEmEEEE = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler18SpecialRPONumberer20SpecialRPOStackFrameENS2_13ZoneAllocatorIS5_EEE8__appendEm = comdat any

$_ZN2v88internal9BitVector6ResizeEiPNS0_4ZoneE = comdat any

$_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler18SpecialRPONumberer8LoopInfoENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_ = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_ = comdat any

$_ZN2v88internal8compiler18PrepareUsesVisitor19InitializePlacementEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler18PrepareUsesVisitor11VisitInputsEPNS1_4NodeE = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor9VisitNodeEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor30PropagateMinimumPositionToNodeEPNS1_10BasicBlockEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ProcessQueueEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler23ScheduleLateNodeVisitor9VisitNodeEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler23ScheduleLateNodeVisitor24GetCommonDominatorOfUsesEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler23ScheduleLateNodeVisitor9SplitNodeEPNS1_10BasicBlockEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler23ScheduleLateNodeVisitor14ScheduleRegionEPNS1_10BasicBlockEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ScheduleNodeEPNS1_10BasicBlockEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler23ScheduleLateNodeVisitor14GetBlockForUseENS1_4EdgeE = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb = comdat any

$_ZN2v88internal8compiler23ScheduleLateNodeVisitor9CloneNodeEPNS1_4NodeE = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_ = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler10BasicBlockEPNS4_4NodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler9Scheduler13SchedulerDataENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_ = comdat any

$_ZNSt3__16vectorIPN2v88internal10ZoneVectorIPNS2_8compiler4NodeEEENS2_13ZoneAllocatorIS8_EEE8__appendEm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal26FLAG_trace_turbo_schedulerE = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"  Use count of #%d:%s (used by #%d:%s)++ = %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"  Use count of #%d:%s (used by #%d:%s)-- = %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"    newly eligible #%d:%s\0A\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"--- CREATING CFG -------------------------------------------\0A\00", align 1
@.str.5 = private unnamed_addr constant [62 x i8] c"--- COMPUTING SPECIAL RPO ----------------------------------\0A\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"Block id:%d's idom is id:%d, depth = %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [62 x i8] c"--- IMMEDIATE BLOCK DOMINATORS -----------------------------\0A\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"--- PREPARE USES -------------------------------------------\0A\00", align 1
@.str.9 = private unnamed_addr constant [62 x i8] c"--- NO LOOPS SO SKIPPING SCHEDULE EARLY --------------------\0A\00", align 1
@.str.10 = private unnamed_addr constant [62 x i8] c"--- SCHEDULE EARLY -----------------------------------------\0A\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"roots: \00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"#%d:%s \00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.14 = private unnamed_addr constant [62 x i8] c"--- SCHEDULE LATE ------------------------------------------\0A\00", align 1
@.str.15 = private unnamed_addr constant [62 x i8] c"--- SEAL FINAL SCHEDULE ------------------------------------\0A\00", align 1
@.str.16 = private unnamed_addr constant [62 x i8] c"--- FUSE FLOATING CONTROL ----------------------------------\0A\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"Schedule before control flow fusion:\0A\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"propagation roots: \00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"Schedule after control flow fusion:\0A\00", align 1
@.str.20 = private unnamed_addr constant [40 x i8] c"Move planned nodes from id:%d to id:%d\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"Create block id:%d for #%d:%s\0A\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"Connect #%d:%s, id:%d -> end\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"Connect #%d:%s, id:%d -> id:%d\0A\00", align 1
@.str.27 = private unnamed_addr constant [54 x i8] c"Warning: profiling data overrode manual branch hint.\0A\00", align 1
@.str.28 = private unnamed_addr constant [54 x i8] c"kBlockUnvisited1 == schedule_->start()->loop_number()\00", align 1
@.str.29 = private unnamed_addr constant [53 x i8] c"kBlockUnvisited1 == schedule_->start()->rpo_number()\00", align 1
@.str.30 = private unnamed_addr constant [54 x i8] c"0 == static_cast<int>(schedule_->rpo_order()->size())\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"id:%d is a loop header, increment loop depth to %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [38 x i8] c"id:%d is not in a loop (depth == %d)\0A\00", align 1
@.str.33 = private unnamed_addr constant [44 x i8] c"id:%d has loop header id:%d, (depth == %d)\0A\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"Pre #%d:%s\0A\00", align 1
@.str.35 = private unnamed_addr constant [39 x i8] c"Scheduling fixed position node #%d:%s\0A\00", align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"PostEdge #%d:%s->#%d:%s\0A\00", align 1
@.str.37 = private unnamed_addr constant [59 x i8] c"Fixing #%d:%s minimum_block = id:%d, dominator_depth = %d\0A\00", align 1
@.str.38 = private unnamed_addr constant [64 x i8] c"Propagating #%d:%s minimum_block = id:%d, dominator_depth = %d\0A\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"Scheduling #%d:%s\0A\00", align 1
@.str.40 = private unnamed_addr constant [68 x i8] c"Schedule late of #%d:%s is id:%d at loop depth %d, minimum = id:%d\0A\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"  hoisting #%d:%s to block id:%d\0A\00", align 1
@.str.42 = private unnamed_addr constant [37 x i8] c"  inspecting uses of coupled #%d:%s\0A\00", align 1
@.str.43 = private unnamed_addr constant [36 x i8] c"  input@%d into a fixed phi #%d:%s\0A\00", align 1
@.str.44 = private unnamed_addr constant [38 x i8] c"  input@%d into a fixed merge #%d:%s\0A\00", align 1
@.str.45 = private unnamed_addr constant [37 x i8] c"  must dominate use #%d:%s in id:%d\0A\00", align 1
@.str.46 = private unnamed_addr constant [45 x i8] c"  not splitting #%d:%s, it is used in id:%d\0A\00", align 1
@.str.47 = private unnamed_addr constant [63 x i8] c"  not splitting #%d:%s, its common dominator id:%d is perfect\0A\00", align 1
@.str.48 = private unnamed_addr constant [32 x i8] c"  pushing #%d:%s down to id:%d\0A\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"  cloning #%d:%s for id:%d\0A\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"clone #%d:%s -> #%d\0A\00", align 1
@.str.51 = private unnamed_addr constant [48 x i8] c"IrOpcode::kFinishRegion == region_end->opcode()\00", align 1
@.str.52 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.53 = private unnamed_addr constant [22 x i8] c"Found SESE at #%d:%s\0A\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2v88internal8compiler9SchedulerC1EPNS0_4ZoneEPNS1_5GraphEPNS1_8ScheduleENS_4base5FlagsINS2_4FlagEiEEmPNS0_11TickCounterEPKNS0_19ProfileDataFromFileE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Schedule"*, i32, i64, %"class.v8::internal::TickCounter"*, %"class.v8::internal::ProfileDataFromFile"*), void (%"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Schedule"*, i32, i64, %"class.v8::internal::TickCounter"*, %"class.v8::internal::ProfileDataFromFile"*)* @_ZN2v88internal8compiler9SchedulerC2EPNS0_4ZoneEPNS1_5GraphEPNS1_8ScheduleENS_4base5FlagsINS2_4FlagEiEEmPNS0_11TickCounterEPKNS0_19ProfileDataFromFileE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9SchedulerC2EPNS0_4ZoneEPNS1_5GraphEPNS1_8ScheduleENS_4base5FlagsINS2_4FlagEiEEmPNS0_11TickCounterEPKNS0_19ProfileDataFromFileE(%"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Schedule"*, i32, i64, %"class.v8::internal::TickCounter"*, %"class.v8::internal::ProfileDataFromFile"*) unnamed_addr #0 align 2 {
  %9 = alloca %"class.v8::internal::ZoneDeque", align 8
  %10 = alloca %"struct.v8::internal::compiler::Scheduler::SchedulerData", align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 0
  store %"class.v8::internal::Zone"* %1, %"class.v8::internal::Zone"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::Graph"* %2, %"class.v8::internal::compiler::Graph"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::Schedule"* %3, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 3, i32 0
  store i32 %4, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4
  %16 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.31"* %17 to i64*
  %19 = bitcast %"class.v8::internal::ZoneVector.19"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10
  store i64 %16, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %22 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %21 to i64*
  %23 = bitcast %"class.v8::internal::ZoneVector.22"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #10
  store i64 %16, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6
  %25 = bitcast %"class.v8::internal::ZoneDeque"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 32, i1 false) #10
  %26 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %9, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %27 = bitcast %"struct.std::__1::__compressed_pair_elem.35"* %26 to i64*
  store i64 %16, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %9, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %29 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #10
  %30 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %9, i64 0, i32 0, i32 0, i32 2, i32 1
  %31 = bitcast %"struct.std::__1::__compressed_pair_elem.39"* %30 to i64*
  store i64 %16, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %9, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %34 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %9, i64 0, i32 0, i32 0, i32 0, i32 3
  %35 = bitcast %"class.std::__1::__compressed_pair.33"* %33 to i8*
  %36 = bitcast %"class.std::__1::__compressed_pair.33"* %34 to i8*
  %37 = bitcast %"class.v8::internal::ZoneQueue"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 32, i1 false) #10
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %9, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %9, i64 0, i32 0, i32 0, i32 2
  %42 = bitcast %"class.std::__1::__compressed_pair.37"* %40 to i8*
  %43 = bitcast %"class.std::__1::__compressed_pair.37"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  %44 = bitcast i64* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #10
  %45 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %9, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %45) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #10
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 1
  %48 = bitcast %"struct.std::__1::__compressed_pair_elem.46"* %47 to i64*
  %49 = bitcast %"class.v8::internal::ZoneVector.41"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #10
  store i64 %16, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 11
  store %"class.v8::internal::TickCounter"* %6, %"class.v8::internal::TickCounter"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 12
  store %"class.v8::internal::ProfileDataFromFile"* %7, %"class.v8::internal::ProfileDataFromFile"** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::ZoneVector.41", %"class.v8::internal::ZoneVector.41"* %46, i64 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %53 to i64*
  %55 = bitcast %"class.v8::internal::ZoneVector.41"* %46 to i64*
  %56 = icmp eq i64 %5, 0
  br i1 %56, label %129, label %57

57:                                               ; preds = %8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %59 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %58 to i64*
  %60 = shl i64 %5, 4
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %64, %62
  %66 = icmp ugt i64 %60, %65
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %57
  %68 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %60) #10
  br label %71

69:                                               ; preds = %57
  %70 = add i64 %62, %60
  store i64 %70, i64* %61, align 8
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ %68, %67 ], [ %62, %69 ]
  %73 = inttoptr i64 %72 to %"struct.v8::internal::compiler::Scheduler::SchedulerData"*
  %74 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %73, i64 %5
  %75 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %74 to i64
  %76 = getelementptr inbounds %"class.v8::internal::ZoneVector.41", %"class.v8::internal::ZoneVector.41"* %46, i64 0, i32 0, i32 0, i32 0
  %77 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %76, align 8
  %78 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %58, align 8
  %79 = icmp eq %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %78, %77
  br i1 %79, label %127, label %80

80:                                               ; preds = %71
  %81 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %77 to i64
  %82 = getelementptr %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %78, i64 -1, i32 0
  %83 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %82 to i64
  %84 = sub i64 %83, %81
  %85 = lshr i64 %84, 4
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %99, label %89

89:                                               ; preds = %80, %89
  %90 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %93, %89 ], [ %73, %80 ]
  %91 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %94, %89 ], [ %78, %80 ]
  %92 = phi i64 [ %97, %89 ], [ %87, %80 ]
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %90, i64 -1
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %91, i64 -1
  %95 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %93 to i8*
  %96 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #10
  %97 = add i64 %92, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %89, !llvm.loop !3

99:                                               ; preds = %89, %80
  %100 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ undef, %80 ], [ %93, %89 ]
  %101 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %73, %80 ], [ %93, %89 ]
  %102 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %78, %80 ], [ %94, %89 ]
  %103 = icmp ult i64 %84, 48
  br i1 %103, label %124, label %104

104:                                              ; preds = %99, %104
  %105 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %119, %104 ], [ %101, %99 ]
  %106 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %120, %104 ], [ %102, %99 ]
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %105, i64 -1
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %106, i64 -1
  %109 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %107 to i8*
  %110 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #10
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %105, i64 -2
  %112 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %106, i64 -2
  %113 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %111 to i8*
  %114 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #10
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %105, i64 -3
  %116 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %106, i64 -3
  %117 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %115 to i8*
  %118 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #10
  %119 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %105, i64 -4
  %120 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %106, i64 -4
  %121 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %119 to i8*
  %122 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 16, i1 false) #10
  %123 = icmp eq %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %120, %77
  br i1 %123, label %124, label %104

124:                                              ; preds = %104, %99
  %125 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %100, %99 ], [ %119, %104 ]
  %126 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %125 to i64
  br label %127

127:                                              ; preds = %124, %71
  %128 = phi i64 [ %126, %124 ], [ %72, %71 ]
  store i64 %128, i64* %55, align 8
  store i64 %72, i64* %59, align 8
  store i64 %75, i64* %54, align 8
  br label %129

129:                                              ; preds = %8, %127
  %130 = phi i64 [ %128, %127 ], [ 0, %8 ]
  %131 = phi i64 [ %72, %127 ], [ 0, %8 ]
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %2, i64 0, i32 4
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #10
  %136 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %13, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %136, i64 0, i32 4
  %138 = bitcast %"class.v8::internal::compiler::BasicBlock"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %10 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %10, i64 0, i32 1
  %142 = bitcast i32* %141 to i64*
  store i64 0, i64* %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %144 = sub i64 %131, %130
  %145 = ashr exact i64 %144, 4
  %146 = icmp ult i64 %145, %134
  %147 = inttoptr i64 %130 to %"struct.v8::internal::compiler::Scheduler::SchedulerData"*
  br i1 %146, label %148, label %150

148:                                              ; preds = %129
  %149 = sub nsw i64 %134, %145
  call void @_ZNSt3__16vectorIN2v88internal8compiler9Scheduler13SchedulerDataENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.42"* %52, i64 %149, %"struct.v8::internal::compiler::Scheduler::SchedulerData"* nonnull dereferenceable(16) %10) #10
  br label %154

150:                                              ; preds = %129
  %151 = icmp ugt i64 %145, %134
  br i1 %151, label %152, label %154

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %147, i64 %134
  store %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %153, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %143, align 8
  br label %154

154:                                              ; preds = %148, %150, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Schedule"* @_ZN2v88internal8compiler9Scheduler15ComputeScheduleEPNS0_4ZoneEPNS1_5GraphENS_4base5FlagsINS2_4FlagEiEEPNS0_11TickCounterEPKNS0_19ProfileDataFromFileE(%"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, i32, %"class.v8::internal::TickCounter"*, %"class.v8::internal::ProfileDataFromFile"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::compiler::Scheduler", align 8
  %7 = and i32 %2, 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %10, align 8
  br label %12

12:                                               ; preds = %5, %9
  %13 = phi %"class.v8::internal::Zone"* [ %11, %9 ], [ %0, %5 ]
  %14 = and i32 %2, 2
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, float 1.000000e+00, float 0x3FF19999A0000000
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %1, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = uitofp i32 %18 to float
  %20 = fmul float %16, %19
  %21 = fptoui float %20 to i64
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %13, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %13, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %23
  %27 = icmp ult i64 %26, 120
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %12
  %29 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %13, i64 120) #10
  br label %32

30:                                               ; preds = %12
  %31 = add i64 %23, 120
  store i64 %31, i64* %22, align 8
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi i64 [ %29, %28 ], [ %23, %30 ]
  %34 = inttoptr i64 %33 to %"class.v8::internal::compiler::Schedule"*
  tail call void @_ZN2v88internal8compiler8ScheduleC1EPNS0_4ZoneEm(%"class.v8::internal::compiler::Schedule"* %34, %"class.v8::internal::Zone"* %13, i64 %21) #10
  %35 = bitcast %"class.v8::internal::compiler::Scheduler"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %35) #10
  call void @_ZN2v88internal8compiler9SchedulerC2EPNS0_4ZoneEPNS1_5GraphEPNS1_8ScheduleENS_4base5FlagsINS2_4FlagEiEEmPNS0_11TickCounterEPKNS0_19ProfileDataFromFileE(%"class.v8::internal::compiler::Scheduler"* nonnull %6, %"class.v8::internal::Zone"* %0, %"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Schedule"* %34, i32 %2, i64 %21, %"class.v8::internal::TickCounter"* %3, %"class.v8::internal::ProfileDataFromFile"* %4)
  call void @_ZN2v88internal8compiler9Scheduler8BuildCFGEv(%"class.v8::internal::compiler::Scheduler"* nonnull %6)
  %36 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %39

39:                                               ; preds = %38, %32
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 0
  %41 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 2
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %44
  %48 = icmp ult i64 %47, 168
  br i1 %48, label %49, label %52, !prof !2

49:                                               ; preds = %39
  %50 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %41, i64 168) #10
  %51 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %40, align 8
  br label %54

52:                                               ; preds = %39
  %53 = add i64 %44, 168
  store i64 %53, i64* %43, align 8
  br label %54

54:                                               ; preds = %49, %52
  %55 = phi %"class.v8::internal::Zone"* [ %51, %49 ], [ %41, %52 ]
  %56 = phi i64 [ %50, %49 ], [ %44, %52 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::SpecialRPONumberer"*
  %58 = bitcast %"class.v8::internal::compiler::Schedule"** %42 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 0
  store %"class.v8::internal::Zone"* %55, %"class.v8::internal::Zone"** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 1
  %62 = bitcast %"class.v8::internal::compiler::Schedule"** %61 to i64*
  store i64 %59, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 2
  %64 = ptrtoint %"class.v8::internal::Zone"* %55 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %66 = bitcast %"struct.std::__1::__compressed_pair_elem.53"* %65 to i64*
  %67 = bitcast %"class.v8::internal::compiler::BasicBlock"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 40, i1 false) #10
  store i64 %64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 5
  %69 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %70 = bitcast %"struct.std::__1::__compressed_pair_elem.60"* %69 to i64*
  %71 = bitcast %"class.v8::internal::ZoneVector.55"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #10
  store i64 %64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 6
  %73 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1
  %74 = bitcast %"struct.std::__1::__compressed_pair_elem.67"* %73 to i64*
  %75 = bitcast %"class.v8::internal::ZoneVector.62"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #10
  store i64 %64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 7
  %77 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %57, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1
  %78 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %77 to i64*
  %79 = bitcast i64* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 32, i1 false) #10
  store i64 %64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 9
  store %"class.v8::internal::compiler::SpecialRPONumberer"* %57, %"class.v8::internal::compiler::SpecialRPONumberer"** %80, align 8
  %81 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %61, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %81, i64 0, i32 4
  %83 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %81, i64 0, i32 5
  %85 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %84, align 8
  call void @_ZN2v88internal8compiler18SpecialRPONumberer26ComputeAndInsertSpecialRPOEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::SpecialRPONumberer"* %57, %"class.v8::internal::compiler::BasicBlock"* %83, %"class.v8::internal::compiler::BasicBlock"* %85) #10
  call void @_ZN2v88internal8compiler9Scheduler21GenerateDominatorTreeEv(%"class.v8::internal::compiler::Scheduler"* nonnull %6)
  call void @_ZN2v88internal8compiler9Scheduler11PrepareUsesEv(%"class.v8::internal::compiler::Scheduler"* nonnull %6)
  call void @_ZN2v88internal8compiler9Scheduler13ScheduleEarlyEv(%"class.v8::internal::compiler::Scheduler"* nonnull %6)
  call void @_ZN2v88internal8compiler9Scheduler12ScheduleLateEv(%"class.v8::internal::compiler::Scheduler"* nonnull %6)
  %86 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %54
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0)) #10
  br label %89

89:                                               ; preds = %88, %54
  %90 = load %"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::compiler::SpecialRPONumberer"** %80, align 8
  call void @_ZN2v88internal8compiler18SpecialRPONumberer24SerializeRPOIntoScheduleEv(%"class.v8::internal::compiler::SpecialRPONumberer"* %90) #10
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 4, i32 0, i32 0, i32 1
  %94 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %93, align 8
  %95 = icmp eq %"class.v8::internal::ZoneVector.22"** %92, %94
  br i1 %95, label %119, label %96

96:                                               ; preds = %89, %116
  %97 = phi i64 [ %100, %116 ], [ 0, %89 ]
  %98 = phi %"class.v8::internal::ZoneVector.22"** [ %117, %116 ], [ %92, %89 ]
  %99 = load %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %98, align 8
  %100 = add nuw i64 %97, 1
  %101 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %42, align 8
  %102 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %101, i64 %97) #10
  %103 = icmp eq %"class.v8::internal::ZoneVector.22"* %99, null
  br i1 %103, label %116, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %99, i64 0, i32 0, i32 0, i32 1
  %106 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %105, align 8, !noalias !6
  %107 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %99, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, align 8, !noalias !6
  %109 = icmp eq %"class.v8::internal::compiler::Node"** %106, %108
  br i1 %109, label %116, label %110

110:                                              ; preds = %104, %110
  %111 = phi %"class.v8::internal::compiler::Node"** [ %112, %110 ], [ %106, %104 ]
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  %114 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %42, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %114, %"class.v8::internal::compiler::BasicBlock"* %102, %"class.v8::internal::compiler::Node"* %113) #10
  %115 = icmp eq %"class.v8::internal::compiler::Node"** %112, %108
  br i1 %115, label %116, label %110

116:                                              ; preds = %110, %104, %96
  %117 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %98, i64 1
  %118 = icmp eq %"class.v8::internal::ZoneVector.22"** %117, %94
  br i1 %118, label %119, label %96

119:                                              ; preds = %116, %89
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 7, i32 0, i32 0, i32 0
  %121 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %121, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %119
  %124 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %121 to i64
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 7, i32 0, i32 0, i32 1
  %126 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %125 to i64*
  store i64 %124, i64* %126, align 8
  br label %127

127:                                              ; preds = %123, %119
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* %128) #10
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %129, align 8
  %131 = icmp eq %"class.v8::internal::compiler::Node"** %130, null
  br i1 %131, label %136, label %132

132:                                              ; preds = %127
  %133 = ptrtoint %"class.v8::internal::compiler::Node"** %130 to i64
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 5, i32 0, i32 0, i32 1
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %133, i64* %135, align 8
  br label %136

136:                                              ; preds = %132, %127
  %137 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %91, align 8
  %138 = icmp eq %"class.v8::internal::ZoneVector.22"** %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %136
  %140 = ptrtoint %"class.v8::internal::ZoneVector.22"** %137 to i64
  %141 = bitcast %"class.v8::internal::ZoneVector.22"*** %93 to i64*
  store i64 %140, i64* %141, align 8
  br label %142

142:                                              ; preds = %136, %139
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %35) #10
  ret %"class.v8::internal::compiler::Schedule"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler8BuildCFGEv(%"class.v8::internal::compiler::Scheduler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::ZoneDeque", align 8
  %3 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  %15 = icmp ult i64 %14, 56
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %6
  %17 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8, i64 56) #10
  br label %20

18:                                               ; preds = %6
  %19 = add i64 %11, 56
  store i64 %19, i64* %10, align 8
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i64 [ %17, %16 ], [ %11, %18 ]
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::ControlEquivalence"*
  %23 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %24 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %9, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %22, i64 0, i32 0
  store %"class.v8::internal::Zone"* %23, %"class.v8::internal::Zone"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %22, i64 0, i32 1
  store %"class.v8::internal::compiler::Graph"* %24, %"class.v8::internal::compiler::Graph"** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %22, i64 0, i32 2
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %22, i64 0, i32 3
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %22, i64 0, i32 4
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %24, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = ptrtoint %"class.v8::internal::Zone"* %23 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %22, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %35 = bitcast %"struct.std::__1::__compressed_pair_elem.77"* %34 to i64*
  %36 = bitcast %"class.v8::internal::ZoneVector.69"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  store i64 %33, i64* %35, align 8
  %37 = icmp eq i32 %31, 0
  br i1 %37, label %64, label %38

38:                                               ; preds = %20
  %39 = icmp ugt i32 %31, 268435455
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::internal::ZoneVector.69"* %29 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #11
  unreachable

42:                                               ; preds = %38
  %43 = shl nuw nsw i64 %32, 3
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ugt i64 %43, %48
  br i1 %49, label %50, label %52, !prof !2

50:                                               ; preds = %42
  %51 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %23, i64 %43) #10
  br label %54

52:                                               ; preds = %42
  %53 = add i64 %45, %43
  store i64 %53, i64* %44, align 8
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %51, %50 ], [ %45, %52 ]
  %56 = inttoptr i64 %55 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  %57 = inttoptr i64 %55 to i8*
  %58 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %22, i64 0, i32 4, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.v8::internal::ZoneVector.69", %"class.v8::internal::ZoneVector.69"* %29, i64 0, i32 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %56, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %59, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %56, i64 %32
  %61 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %22, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %60, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %61, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 %43, i1 false) #10
  %62 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %58 to i64*
  %63 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %60 to i64
  store i64 %63, i64* %62, align 8
  br label %64

64:                                               ; preds = %20, %54
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 10
  store %"class.v8::internal::compiler::ControlEquivalence"* %22, %"class.v8::internal::compiler::ControlEquivalence"** %65, align 8
  %66 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %66, i64 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %66, i64 0, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %70, %68
  %72 = icmp ult i64 %71, 168
  br i1 %72, label %73, label %75, !prof !2

73:                                               ; preds = %64
  %74 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %66, i64 168) #10
  br label %77

75:                                               ; preds = %64
  %76 = add i64 %68, 168
  store i64 %76, i64* %67, align 8
  br label %77

77:                                               ; preds = %73, %75
  %78 = phi i64 [ %74, %73 ], [ %68, %75 ]
  %79 = inttoptr i64 %78 to %"class.v8::internal::compiler::CFGBuilder"*
  %80 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 0
  store %"class.v8::internal::Zone"* %80, %"class.v8::internal::Zone"** %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 1
  store %"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::Scheduler"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 2
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %85 = bitcast %"class.v8::internal::compiler::Schedule"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.v8::internal::compiler::Schedule"** %83 to i64*
  store i64 %86, i64* %87, align 8
  %88 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %9, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 3, i32 0
  tail call void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"* %89, %"class.v8::internal::compiler::Graph"* %88, i32 2) #10
  %90 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 4
  %91 = bitcast %"class.v8::internal::ZoneDeque"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %91) #10
  %92 = ptrtoint %"class.v8::internal::Zone"* %80 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 32, i1 false) #10
  %93 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %94 = bitcast %"struct.std::__1::__compressed_pair_elem.35"* %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %96 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #10
  %97 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2, i32 1
  %98 = bitcast %"struct.std::__1::__compressed_pair_elem.39"* %97 to i64*
  store i64 %92, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %101 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3
  %102 = bitcast %"class.std::__1::__compressed_pair.33"* %100 to i8*
  %103 = bitcast %"class.std::__1::__compressed_pair.33"* %101 to i8*
  %104 = bitcast %"class.v8::internal::ZoneQueue"* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 32, i1 false) #10
  %105 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2
  %109 = bitcast %"class.std::__1::__compressed_pair.37"* %107 to i8*
  %110 = bitcast %"class.std::__1::__compressed_pair.37"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 24, i1 false) #10
  %111 = bitcast i64* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #10
  %112 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %112) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %91) #10
  %113 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 5
  %114 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %115 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %114 to i64*
  %116 = bitcast %"class.v8::internal::ZoneVector.22"* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #10
  store i64 %92, i64* %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %79, i64 0, i32 6
  %118 = bitcast %"class.v8::internal::compiler::Node"** %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 24, i1 false) #10
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 8
  store %"class.v8::internal::compiler::CFGBuilder"* %79, %"class.v8::internal::compiler::CFGBuilder"** %119, align 8
  call void @_ZN2v88internal8compiler10CFGBuilder3RunEv(%"class.v8::internal::compiler::CFGBuilder"* %79)
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0
  %121 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %84, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %121, i64 0, i32 1, i32 0
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %121, i64 0, i32 1, i32 0, i32 0, i32 1
  %124 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.std::__1::vector.12"* %122 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %125, %127
  %129 = ashr exact i64 %128, 3
  %130 = uitofp i64 %129 to double
  %131 = fmul double %130, 1.100000e+00
  %132 = fptoui double %131 to i64
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %134 = bitcast %"class.v8::internal::ZoneVector.22"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.std::__1::vector.20"* %120 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %135, %137
  %139 = ashr exact i64 %138, 3
  %140 = icmp ult i64 %139, %132
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %142 = bitcast %"class.v8::internal::ZoneVector.22"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  br i1 %140, label %144, label %355

144:                                              ; preds = %77
  %145 = sub i64 %143, %137
  %146 = ashr exact i64 %145, 3
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %148 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %147, align 8
  %149 = shl i64 %132, 3
  %150 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %148, i64 0, i32 2
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %148, i64 0, i32 3
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %153, %151
  %155 = icmp ugt i64 %149, %154
  br i1 %155, label %156, label %158, !prof !2

156:                                              ; preds = %144
  %157 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %148, i64 %149) #10
  br label %160

158:                                              ; preds = %144
  %159 = add i64 %151, %149
  store i64 %159, i64* %150, align 8
  br label %160

160:                                              ; preds = %158, %156
  %161 = phi i64 [ %157, %156 ], [ %151, %158 ]
  %162 = inttoptr i64 %161 to %"class.v8::internal::ZoneVector.22"**
  %163 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %162, i64 %146
  %164 = ptrtoint %"class.v8::internal::ZoneVector.22"** %163 to i64
  %165 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %162, i64 %132
  %166 = ptrtoint %"class.v8::internal::ZoneVector.22"** %165 to i64
  %167 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %120, i64 0, i32 0, i32 0
  %168 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %167, align 8
  %169 = ptrtoint %"class.v8::internal::ZoneVector.22"** %168 to i64
  %170 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %141, align 8
  %171 = icmp eq %"class.v8::internal::ZoneVector.22"** %170, %168
  br i1 %171, label %344, label %172

172:                                              ; preds = %160
  %173 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %170, i64 -1
  %174 = ptrtoint %"class.v8::internal::ZoneVector.22"** %173 to i64
  %175 = sub i64 %174, %169
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = icmp ult i64 %177, 4
  br i1 %178, label %271, label %179

179:                                              ; preds = %172
  %180 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %170, i64 -1
  %181 = ptrtoint %"class.v8::internal::ZoneVector.22"** %180 to i64
  %182 = sub i64 %181, %169
  %183 = lshr i64 %182, 3
  %184 = xor i64 %183, -1
  %185 = add nsw i64 %146, %184
  %186 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %162, i64 %185
  %187 = xor i64 %183, -1
  %188 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %170, i64 %187
  %189 = icmp ult %"class.v8::internal::ZoneVector.22"** %186, %170
  %190 = icmp ult %"class.v8::internal::ZoneVector.22"** %188, %163
  %191 = and i1 %189, %190
  br i1 %191, label %271, label %192

192:                                              ; preds = %179
  %193 = and i64 %177, 4611686018427387900
  %194 = sub nsw i64 0, %193
  %195 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %163, i64 %194
  %196 = sub nsw i64 0, %193
  %197 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %170, i64 %196
  %198 = add nsw i64 %193, -4
  %199 = lshr exact i64 %198, 2
  %200 = add nuw nsw i64 %199, 1
  %201 = and i64 %200, 1
  %202 = icmp eq i64 %198, 0
  br i1 %202, label %249, label %203

203:                                              ; preds = %192
  %204 = sub nuw nsw i64 %200, %201
  %205 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %163, i64 -1
  %206 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %170, i64 -1
  %207 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %163, i64 -1
  %208 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %170, i64 -1
  br label %209

209:                                              ; preds = %209, %203
  %210 = phi i64 [ 0, %203 ], [ %244, %209 ]
  %211 = phi i64 [ %204, %203 ], [ %245, %209 ]
  %212 = sub i64 0, %210
  %213 = sub i64 0, %210
  %214 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %205, i64 %212
  %215 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 %213
  %216 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %215, i64 -1
  %217 = bitcast %"class.v8::internal::ZoneVector.22"** %216 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 8, !alias.scope !9
  %219 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %215, i64 -2
  %220 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %219, i64 -1
  %221 = bitcast %"class.v8::internal::ZoneVector.22"** %220 to <2 x i64>*
  %222 = load <2 x i64>, <2 x i64>* %221, align 8, !alias.scope !9
  %223 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %214, i64 -1
  %224 = bitcast %"class.v8::internal::ZoneVector.22"** %223 to <2 x i64>*
  store <2 x i64> %218, <2 x i64>* %224, align 8, !alias.scope !12, !noalias !9
  %225 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %214, i64 -2
  %226 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %225, i64 -1
  %227 = bitcast %"class.v8::internal::ZoneVector.22"** %226 to <2 x i64>*
  store <2 x i64> %222, <2 x i64>* %227, align 8, !alias.scope !12, !noalias !9
  %228 = sub nuw nsw i64 -4, %210
  %229 = sub nuw nsw i64 -4, %210
  %230 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 %228
  %231 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %208, i64 %229
  %232 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %231, i64 -1
  %233 = bitcast %"class.v8::internal::ZoneVector.22"** %232 to <2 x i64>*
  %234 = load <2 x i64>, <2 x i64>* %233, align 8, !alias.scope !9
  %235 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %231, i64 -2
  %236 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %235, i64 -1
  %237 = bitcast %"class.v8::internal::ZoneVector.22"** %236 to <2 x i64>*
  %238 = load <2 x i64>, <2 x i64>* %237, align 8, !alias.scope !9
  %239 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %230, i64 -1
  %240 = bitcast %"class.v8::internal::ZoneVector.22"** %239 to <2 x i64>*
  store <2 x i64> %234, <2 x i64>* %240, align 8, !alias.scope !12, !noalias !9
  %241 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %230, i64 -2
  %242 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %241, i64 -1
  %243 = bitcast %"class.v8::internal::ZoneVector.22"** %242 to <2 x i64>*
  store <2 x i64> %238, <2 x i64>* %243, align 8, !alias.scope !12, !noalias !9
  %244 = add i64 %210, 8
  %245 = add i64 %211, -2
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %209, !llvm.loop !14

247:                                              ; preds = %209
  %248 = sub nuw nsw i64 -8, %210
  br label %249

249:                                              ; preds = %247, %192
  %250 = phi i64 [ 0, %192 ], [ %248, %247 ]
  %251 = icmp eq i64 %201, 0
  br i1 %251, label %269, label %252

252:                                              ; preds = %249
  %253 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %163, i64 -1
  %254 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %170, i64 -1
  %255 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %253, i64 %250
  %256 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %254, i64 %250
  %257 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %256, i64 -1
  %258 = bitcast %"class.v8::internal::ZoneVector.22"** %257 to <2 x i64>*
  %259 = load <2 x i64>, <2 x i64>* %258, align 8, !alias.scope !9
  %260 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %256, i64 -2
  %261 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %260, i64 -1
  %262 = bitcast %"class.v8::internal::ZoneVector.22"** %261 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !9
  %264 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %255, i64 -1
  %265 = bitcast %"class.v8::internal::ZoneVector.22"** %264 to <2 x i64>*
  store <2 x i64> %259, <2 x i64>* %265, align 8, !alias.scope !12, !noalias !9
  %266 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %255, i64 -2
  %267 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %266, i64 -1
  %268 = bitcast %"class.v8::internal::ZoneVector.22"** %267 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %268, align 8, !alias.scope !12, !noalias !9
  br label %269

269:                                              ; preds = %249, %252
  %270 = icmp eq i64 %177, %193
  br i1 %270, label %341, label %271

271:                                              ; preds = %269, %179, %172
  %272 = phi %"class.v8::internal::ZoneVector.22"** [ %163, %179 ], [ %163, %172 ], [ %195, %269 ]
  %273 = phi %"class.v8::internal::ZoneVector.22"** [ %170, %179 ], [ %170, %172 ], [ %197, %269 ]
  %274 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %273, i64 -1
  %275 = ptrtoint %"class.v8::internal::ZoneVector.22"** %274 to i64
  %276 = sub i64 %275, %169
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 7
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %292, label %281

281:                                              ; preds = %271, %281
  %282 = phi %"class.v8::internal::ZoneVector.22"** [ %285, %281 ], [ %272, %271 ]
  %283 = phi %"class.v8::internal::ZoneVector.22"** [ %286, %281 ], [ %273, %271 ]
  %284 = phi i64 [ %290, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %282, i64 -1
  %286 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %283, i64 -1
  %287 = bitcast %"class.v8::internal::ZoneVector.22"** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %"class.v8::internal::ZoneVector.22"** %285 to i64*
  store i64 %288, i64* %289, align 8
  %290 = add i64 %284, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %281, !llvm.loop !16

292:                                              ; preds = %281, %271
  %293 = phi %"class.v8::internal::ZoneVector.22"** [ undef, %271 ], [ %285, %281 ]
  %294 = phi %"class.v8::internal::ZoneVector.22"** [ %272, %271 ], [ %285, %281 ]
  %295 = phi %"class.v8::internal::ZoneVector.22"** [ %273, %271 ], [ %286, %281 ]
  %296 = icmp ult i64 %276, 56
  br i1 %296, label %341, label %297

297:                                              ; preds = %292, %297
  %298 = phi %"class.v8::internal::ZoneVector.22"** [ %335, %297 ], [ %294, %292 ]
  %299 = phi %"class.v8::internal::ZoneVector.22"** [ %336, %297 ], [ %295, %292 ]
  %300 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %298, i64 -1
  %301 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %299, i64 -1
  %302 = bitcast %"class.v8::internal::ZoneVector.22"** %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %"class.v8::internal::ZoneVector.22"** %300 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %298, i64 -2
  %306 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %299, i64 -2
  %307 = bitcast %"class.v8::internal::ZoneVector.22"** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast %"class.v8::internal::ZoneVector.22"** %305 to i64*
  store i64 %308, i64* %309, align 8
  %310 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %298, i64 -3
  %311 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %299, i64 -3
  %312 = bitcast %"class.v8::internal::ZoneVector.22"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast %"class.v8::internal::ZoneVector.22"** %310 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %298, i64 -4
  %316 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %299, i64 -4
  %317 = bitcast %"class.v8::internal::ZoneVector.22"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.v8::internal::ZoneVector.22"** %315 to i64*
  store i64 %318, i64* %319, align 8
  %320 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %298, i64 -5
  %321 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %299, i64 -5
  %322 = bitcast %"class.v8::internal::ZoneVector.22"** %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = bitcast %"class.v8::internal::ZoneVector.22"** %320 to i64*
  store i64 %323, i64* %324, align 8
  %325 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %298, i64 -6
  %326 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %299, i64 -6
  %327 = bitcast %"class.v8::internal::ZoneVector.22"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.v8::internal::ZoneVector.22"** %325 to i64*
  store i64 %328, i64* %329, align 8
  %330 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %298, i64 -7
  %331 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %299, i64 -7
  %332 = bitcast %"class.v8::internal::ZoneVector.22"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = bitcast %"class.v8::internal::ZoneVector.22"** %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %298, i64 -8
  %336 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %299, i64 -8
  %337 = bitcast %"class.v8::internal::ZoneVector.22"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"class.v8::internal::ZoneVector.22"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = icmp eq %"class.v8::internal::ZoneVector.22"** %336, %168
  br i1 %340, label %341, label %297, !llvm.loop !17

341:                                              ; preds = %292, %297, %269
  %342 = phi %"class.v8::internal::ZoneVector.22"** [ %195, %269 ], [ %293, %292 ], [ %335, %297 ]
  %343 = ptrtoint %"class.v8::internal::ZoneVector.22"** %342 to i64
  br label %344

344:                                              ; preds = %341, %160
  %345 = phi i64 [ %343, %341 ], [ %164, %160 ]
  store i64 %345, i64* %136, align 8
  store i64 %164, i64* %142, align 8
  store i64 %166, i64* %134, align 8
  %346 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %84, align 8
  %347 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %346, i64 0, i32 1, i32 0, i32 0, i32 1
  %348 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %346, i64 0, i32 1, i32 0
  %351 = bitcast %"class.std::__1::vector.12"* %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = sub i64 %349, %352
  %354 = ashr exact i64 %353, 3
  br label %355

355:                                              ; preds = %77, %344
  %356 = phi i64 [ %354, %344 ], [ %129, %77 ]
  %357 = phi i64 [ %345, %344 ], [ %137, %77 ]
  %358 = phi i64 [ %164, %344 ], [ %143, %77 ]
  %359 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %360 = sub i64 %358, %357
  %361 = ashr exact i64 %360, 3
  %362 = icmp ugt i64 %356, %361
  %363 = inttoptr i64 %357 to %"class.v8::internal::ZoneVector.22"**
  br i1 %362, label %364, label %366

364:                                              ; preds = %355
  %365 = sub nsw i64 %356, %361
  call void @_ZNSt3__16vectorIPN2v88internal10ZoneVectorIPNS2_8compiler4NodeEEENS2_13ZoneAllocatorIS8_EEE8__appendEm(%"class.std::__1::vector.20"* %120, i64 %365) #10
  br label %370

366:                                              ; preds = %355
  %367 = icmp ult i64 %356, %361
  br i1 %367, label %368, label %370

368:                                              ; preds = %366
  %369 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %363, i64 %356
  store %"class.v8::internal::ZoneVector.22"** %369, %"class.v8::internal::ZoneVector.22"*** %359, align 8
  br label %370

370:                                              ; preds = %364, %366, %368
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler26ComputeSpecialRPONumberingEv(%"class.v8::internal::compiler::Scheduler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %5

5:                                                ; preds = %1, %4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  %14 = icmp ult i64 %13, 168
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %5
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 168) #10
  br label %19

17:                                               ; preds = %5
  %18 = add i64 %10, 168
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i64 [ %16, %15 ], [ %10, %17 ]
  %21 = inttoptr i64 %20 to %"class.v8::internal::compiler::SpecialRPONumberer"*
  %22 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %23 = bitcast %"class.v8::internal::compiler::Schedule"** %8 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 0
  store %"class.v8::internal::Zone"* %22, %"class.v8::internal::Zone"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::Schedule"** %26 to i64*
  store i64 %24, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 2
  %29 = ptrtoint %"class.v8::internal::Zone"* %22 to i64
  %30 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %31 = bitcast %"struct.std::__1::__compressed_pair_elem.53"* %30 to i64*
  %32 = bitcast %"class.v8::internal::compiler::BasicBlock"** %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 40, i1 false) #10
  store i64 %29, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 5
  %34 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %35 = bitcast %"struct.std::__1::__compressed_pair_elem.60"* %34 to i64*
  %36 = bitcast %"class.v8::internal::ZoneVector.55"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  store i64 %29, i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 6
  %38 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1
  %39 = bitcast %"struct.std::__1::__compressed_pair_elem.67"* %38 to i64*
  %40 = bitcast %"class.v8::internal::ZoneVector.62"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #10
  store i64 %29, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 7
  %42 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %21, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1
  %43 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %42 to i64*
  %44 = bitcast i64* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 32, i1 false) #10
  store i64 %29, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 9
  store %"class.v8::internal::compiler::SpecialRPONumberer"* %21, %"class.v8::internal::compiler::SpecialRPONumberer"** %45, align 8
  %46 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %26, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %46, i64 0, i32 4
  %48 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %46, i64 0, i32 5
  %50 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %49, align 8
  tail call void @_ZN2v88internal8compiler18SpecialRPONumberer26ComputeAndInsertSpecialRPOEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::SpecialRPONumberer"* %21, %"class.v8::internal::compiler::BasicBlock"* %48, %"class.v8::internal::compiler::BasicBlock"* %50) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler21GenerateDominatorTreeEv(%"class.v8::internal::compiler::Scheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0)) #10
  br label %5

5:                                                ; preds = %1, %4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %7, i64 0, i32 4
  %9 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %9, i64 0, i32 3
  store i32 0, i32* %10, align 4
  %11 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %11, i64 0, i32 5
  %13 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %12, align 8
  %14 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %13, null
  br i1 %14, label %70, label %15

15:                                               ; preds = %5, %66
  %16 = phi %"class.v8::internal::compiler::BasicBlock"* [ %68, %66 ], [ %13, %5 ]
  %17 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 13, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 13, i32 0, i32 0, i32 1
  %20 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %19, align 8
  %21 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %18, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !5
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %18, i64 1
  %25 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %24, %20
  br i1 %25, label %45, label %26

26:                                               ; preds = %15, %40
  %27 = phi %"class.v8::internal::compiler::BasicBlock"** [ %43, %40 ], [ %24, %15 ]
  %28 = phi i8 [ %42, %40 ], [ %23, %15 ]
  %29 = phi %"class.v8::internal::compiler::BasicBlock"* [ %41, %40 ], [ %21, %15 ]
  %30 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %27, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %26
  %35 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* %29, %"class.v8::internal::compiler::BasicBlock"* %30) #10
  %36 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %27, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %36, i64 0, i32 2
  %38 = load i8, i8* %37, align 8, !range !5
  %39 = and i8 %38, %28
  br label %40

40:                                               ; preds = %34, %26
  %41 = phi %"class.v8::internal::compiler::BasicBlock"* [ %29, %26 ], [ %35, %34 ]
  %42 = phi i8 [ %28, %26 ], [ %39, %34 ]
  %43 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %27, i64 1
  %44 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %43, %20
  br i1 %44, label %45, label %26

45:                                               ; preds = %40, %15
  %46 = phi %"class.v8::internal::compiler::BasicBlock"* [ %21, %15 ], [ %41, %40 ]
  %47 = phi i8 [ %23, %15 ], [ %42, %40 ]
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 4
  store %"class.v8::internal::compiler::BasicBlock"* %46, %"class.v8::internal::compiler::BasicBlock"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %46, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, 1
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 3
  store i32 %51, i32* %52, align 4
  %53 = and i8 %47, 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 2
  %55 = load i8, i8* %54, align 8, !range !5
  %56 = or i8 %55, %53
  store i8 %56, i8* %54, align 8
  %57 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %45
  %60 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 14, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %46, i64 0, i32 14, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 %62, i32 %65, i32 %51) #10
  br label %66

66:                                               ; preds = %59, %45
  %67 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 5
  %68 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, align 8
  %69 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %68, null
  br i1 %69, label %70, label %15

70:                                               ; preds = %66, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler11PrepareUsesEv(%"class.v8::internal::compiler::Scheduler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.v8::internal::ZoneAllocator.118", align 8
  %4 = alloca %"class.v8::internal::ZoneDeque", align 8
  %5 = alloca %"class.v8::internal::compiler::PrepareUsesVisitor", align 8
  %6 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i64 0, i64 0)) #10
  br label %9

9:                                                ; preds = %1, %8
  %10 = bitcast %"class.v8::internal::compiler::PrepareUsesVisitor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 0
  store %"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::Scheduler"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %18 = bitcast %"class.v8::internal::compiler::Schedule"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Schedule"** %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 2
  store %"class.v8::internal::compiler::Graph"* %12, %"class.v8::internal::compiler::Graph"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %12, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  store i8 0, i8* %2, align 1
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 3, i32 0
  %26 = bitcast %"class.v8::internal::ZoneAllocator.118"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.118", %"class.v8::internal::ZoneAllocator.118"* %3, i64 0, i32 0
  store %"class.v8::internal::Zone"* %14, %"class.v8::internal::Zone"** %27, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.85"* %25, i64 %24, i8* nonnull dereferenceable(1) %2, %"class.v8::internal::ZoneAllocator.118"* nonnull dereferenceable(8) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  %28 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 4
  %29 = bitcast %"class.v8::internal::ZoneDeque"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #10
  %30 = ptrtoint %"class.v8::internal::Zone"* %14 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 32, i1 false) #10
  %31 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.35"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %34 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10
  %35 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2, i32 1
  %36 = bitcast %"struct.std::__1::__compressed_pair_elem.39"* %35 to i64*
  store i64 %30, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %39 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3
  %40 = bitcast %"class.std::__1::__compressed_pair.33"* %38 to i8*
  %41 = bitcast %"class.std::__1::__compressed_pair.33"* %39 to i8*
  %42 = bitcast %"class.v8::internal::ZoneStack"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 32, i1 false) #10
  %43 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.std::__1::__compressed_pair.37"* %45 to i8*
  %48 = bitcast %"class.std::__1::__compressed_pair.37"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #10
  %49 = bitcast i64* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  %50 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %50) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #10
  call void @_ZN2v88internal8compiler18PrepareUsesVisitor3RunEv(%"class.v8::internal::compiler::PrepareUsesVisitor"* nonnull %5)
  %51 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* %51) #10
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler13ScheduleEarlyEv(%"class.v8::internal::compiler::Scheduler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::ZoneDeque", align 8
  %3 = alloca %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 9
  %5 = load %"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::compiler::SpecialRPONumberer"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %5, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %5, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.49"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  %13 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %14 = icmp ne i8 %13, 0
  br i1 %12, label %15, label %17

15:                                               ; preds = %1
  br i1 %14, label %16, label %81

16:                                               ; preds = %15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.9, i64 0, i64 0)) #10
  br label %81

17:                                               ; preds = %1
  br i1 %14, label %18, label %47

18:                                               ; preds = %17
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0)) #10
  %19 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0)) #10
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %25 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::Node"** %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %43, %21
  %28 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %47, label %46

30:                                               ; preds = %21, %43
  %31 = phi %"class.v8::internal::compiler::Node"** [ %44, %43 ], [ %23, %21 ]
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 16777215
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 0
  %40 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %40, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 %38, i8* %42) #10
  br label %43

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, i64 1
  %45 = icmp eq %"class.v8::internal::compiler::Node"** %44, %25
  br i1 %45, label %27, label %30

46:                                               ; preds = %27
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %47

47:                                               ; preds = %17, %27, %18, %46
  %48 = bitcast %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %48) #10
  %49 = bitcast %"class.v8::internal::compiler::Scheduler"* %0 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::Scheduler"** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %3, i64 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %54 = bitcast %"class.v8::internal::compiler::Schedule"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.v8::internal::compiler::Schedule"** %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %3, i64 0, i32 2
  %58 = bitcast %"class.v8::internal::ZoneDeque"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %58) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 32, i1 false) #10
  %59 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %60 = bitcast %"struct.std::__1::__compressed_pair_elem.35"* %59 to i64*
  store i64 %50, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %62 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #10
  %63 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2, i32 1
  %64 = bitcast %"struct.std::__1::__compressed_pair_elem.39"* %63 to i64*
  store i64 %50, i64* %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %67 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 0, i32 3
  %68 = bitcast %"class.std::__1::__compressed_pair.33"* %66 to i8*
  %69 = bitcast %"class.std::__1::__compressed_pair.33"* %67 to i8*
  %70 = bitcast %"class.v8::internal::ZoneQueue"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 32, i1 false) #10
  %71 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %74 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0, i32 2
  %75 = bitcast %"class.std::__1::__compressed_pair.37"* %73 to i8*
  %76 = bitcast %"class.std::__1::__compressed_pair.37"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false) #10
  %77 = bitcast i64* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #10
  %78 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %2, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %58) #10
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5
  call void @_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor3RunEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* nonnull %3, %"class.v8::internal::ZoneVector.22"* %79)
  %80 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* %80) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %48) #10
  br label %81

81:                                               ; preds = %16, %15, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler12ScheduleLateEv(%"class.v8::internal::compiler::Scheduler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::compiler::ScheduleLateNodeVisitor", align 8
  %3 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.14, i64 0, i64 0)) #10
  %6 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %5
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0)) #10
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::Node"** %10, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %30, %8
  %15 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %34, label %33

17:                                               ; preds = %8, %30
  %18 = phi %"class.v8::internal::compiler::Node"** [ %31, %30 ], [ %10, %8 ]
  %19 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, align 8
  %20 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16777215
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 0
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 %25, i8* %29) #10
  br label %30

30:                                               ; preds = %17, %22
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 1
  %32 = icmp eq %"class.v8::internal::compiler::Node"** %31, %12
  br i1 %32, label %14, label %17

33:                                               ; preds = %14
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %34

34:                                               ; preds = %1, %14, %5, %33
  %35 = bitcast %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %35) #10
  %36 = bitcast %"class.v8::internal::compiler::Scheduler"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 1
  store %"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::Scheduler"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 2
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %42 = bitcast %"class.v8::internal::compiler::Schedule"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.v8::internal::compiler::Schedule"** %40 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 3
  %46 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 3, i32 0, i32 2, i32 1
  %47 = bitcast %"struct.std::__1::__compressed_pair_elem.87"* %46 to i64*
  %48 = bitcast %"class.v8::internal::ZoneVector.84"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #10
  store i64 %37, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4
  %50 = bitcast %"class.v8::internal::ZoneDeque.90"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 32, i1 false) #10
  %51 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 3, i32 1
  %52 = bitcast %"struct.std::__1::__compressed_pair_elem.96"* %51 to i64*
  store i64 %37, i64* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #10
  %55 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %56 = bitcast %"struct.std::__1::__compressed_pair_elem.100"* %55 to i64*
  store i64 %37, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %59 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %61 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %60, align 8
  %62 = icmp eq %"class.v8::internal::compiler::Node"** %59, %61
  br i1 %62, label %75, label %63

63:                                               ; preds = %34, %63
  %64 = phi %"class.v8::internal::compiler::Node"** [ %66, %63 ], [ %59, %34 ]
  %65 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, align 8
  call void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ProcessQueueEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* nonnull %2, %"class.v8::internal::compiler::Node"* %65) #10
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, i64 1
  %67 = icmp eq %"class.v8::internal::compiler::Node"** %66, %61
  br i1 %67, label %68, label %63

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %70 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %74 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %73, align 8
  br label %75

75:                                               ; preds = %68, %34
  %76 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %74, %68 ], [ null, %34 ]
  %77 = phi i64 [ %72, %68 ], [ 0, %34 ]
  %78 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %70, %68 ], [ null, %34 ]
  %79 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 1
  %81 = lshr i64 %77, 9
  %82 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %78, i64 %81
  %83 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %84 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %76, %78
  %85 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %76 to i64
  %86 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %78 to i64
  br i1 %84, label %87, label %89

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %102

89:                                               ; preds = %75
  %90 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, align 8
  %91 = and i64 %77, 511
  %92 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %90, i64 %91
  %93 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, %77
  %96 = lshr i64 %95, 9
  %97 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %78, i64 %96
  %98 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %97, align 8
  %99 = and i64 %95, 511
  %100 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %98, i64 %99
  %101 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %100, %92
  br i1 %101, label %102, label %112

102:                                              ; preds = %125, %89, %87
  %103 = phi i64* [ %88, %87 ], [ %93, %89 ], [ %93, %125 ]
  store i64 0, i64* %103, align 8
  %104 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %83 to i64*
  %105 = sub i64 %85, %86
  %106 = ashr exact i64 %105, 3
  %107 = icmp ugt i64 %106, 2
  br i1 %107, label %108, label %160

108:                                              ; preds = %102
  %109 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %57 to i64*
  %110 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %57 to %"class.v8::internal::compiler::BasicBlock"***
  %111 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %57, align 8
  br label %130

112:                                              ; preds = %89, %125
  %113 = phi %"class.v8::internal::compiler::BasicBlock"** [ %128, %125 ], [ %92, %89 ]
  %114 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %126, %125 ], [ %82, %89 ]
  %115 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %113, i64 1
  %116 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %115 to i64
  %117 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %114 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %116, %118
  %120 = icmp eq i64 %119, 4096
  br i1 %120, label %121, label %125

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %114, i64 1
  %123 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  br label %125

125:                                              ; preds = %121, %112
  %126 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %122, %121 ], [ %114, %112 ]
  %127 = phi i64 [ %124, %121 ], [ %116, %112 ]
  %128 = inttoptr i64 %127 to %"class.v8::internal::compiler::BasicBlock"**
  %129 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %100, %128
  br i1 %129, label %102, label %112

130:                                              ; preds = %150, %108
  %131 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %76, %108 ], [ %151, %150 ]
  %132 = phi i64 [ %85, %108 ], [ %152, %150 ]
  %133 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %111, %108 ], [ %154, %150 ]
  %134 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %78, %108 ], [ %155, %150 ]
  %135 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %134, align 8
  %136 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %133, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %133, i64 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = icmp ugt i64 %139, 512
  br i1 %140, label %150, label %141

141:                                              ; preds = %137, %130
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %135, i64 1
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"** %142 to i64*
  store i64 512, i64* %143, align 8
  %144 = load i64, i64* %109, align 8
  %145 = bitcast %"class.v8::internal::compiler::BasicBlock"** %135 to i64*
  store i64 %144, i64* %145, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %135, %"class.v8::internal::compiler::BasicBlock"*** %110, align 8
  %146 = bitcast %"class.v8::internal::compiler::BasicBlock"** %135 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  %147 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %79, align 8
  %148 = load i64, i64* %104, align 8
  %149 = inttoptr i64 %148 to %"class.v8::internal::compiler::BasicBlock"***
  br label %150

150:                                              ; preds = %141, %137
  %151 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %131, %137 ], [ %149, %141 ]
  %152 = phi i64 [ %132, %137 ], [ %148, %141 ]
  %153 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %134, %137 ], [ %147, %141 ]
  %154 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %133, %137 ], [ %146, %141 ]
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %153, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %155, %"class.v8::internal::compiler::BasicBlock"**** %79, align 8
  %156 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %155 to i64
  %157 = sub i64 %152, %156
  %158 = ashr exact i64 %157, 3
  %159 = icmp ugt i64 %158, 2
  br i1 %159, label %130, label %160

160:                                              ; preds = %150, %102
  %161 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %76, %102 ], [ %151, %150 ]
  %162 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %78, %102 ], [ %155, %150 ]
  %163 = phi i64 [ %106, %102 ], [ %158, %150 ]
  %164 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %162 to i64
  switch i64 %163, label %168 [
    i64 1, label %166
    i64 2, label %165
  ]

165:                                              ; preds = %160
  br label %166

166:                                              ; preds = %160, %165
  %167 = phi i64 [ 512, %165 ], [ 256, %160 ]
  store i64 %167, i64* %80, align 8
  br label %168

168:                                              ; preds = %166, %160
  %169 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %162, %161
  br i1 %169, label %231, label %170

170:                                              ; preds = %168
  %171 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %57 to i64*
  %172 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %57 to %"class.v8::internal::compiler::BasicBlock"***
  %173 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %57, align 8
  %174 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %161, i64 -1
  %175 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %174 to i64
  %176 = sub i64 %175, %164
  %177 = and i64 %176, 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %195

179:                                              ; preds = %170
  %180 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %162, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %173, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %173, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, 512
  br i1 %185, label %192, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %180, i64 1
  %188 = bitcast %"class.v8::internal::compiler::BasicBlock"** %187 to i64*
  store i64 512, i64* %188, align 8
  %189 = load i64, i64* %171, align 8
  %190 = bitcast %"class.v8::internal::compiler::BasicBlock"** %180 to i64*
  store i64 %189, i64* %190, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %180, %"class.v8::internal::compiler::BasicBlock"*** %172, align 8
  %191 = bitcast %"class.v8::internal::compiler::BasicBlock"** %180 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  br label %192

192:                                              ; preds = %186, %182
  %193 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %173, %182 ], [ %191, %186 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %162, i64 1
  br label %195

195:                                              ; preds = %192, %170
  %196 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %173, %170 ], [ %193, %192 ]
  %197 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %162, %170 ], [ %194, %192 ]
  %198 = icmp ult i64 %176, 8
  br i1 %198, label %219, label %199

199:                                              ; preds = %195, %268
  %200 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %269, %268 ], [ %196, %195 ]
  %201 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %270, %268 ], [ %197, %195 ]
  %202 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %201, align 8
  %203 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %200, null
  br i1 %203, label %208, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %200, i64 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = icmp ugt i64 %206, 512
  br i1 %207, label %214, label %208

208:                                              ; preds = %204, %199
  %209 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %202, i64 1
  %210 = bitcast %"class.v8::internal::compiler::BasicBlock"** %209 to i64*
  store i64 512, i64* %210, align 8
  %211 = load i64, i64* %171, align 8
  %212 = bitcast %"class.v8::internal::compiler::BasicBlock"** %202 to i64*
  store i64 %211, i64* %212, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %202, %"class.v8::internal::compiler::BasicBlock"*** %172, align 8
  %213 = bitcast %"class.v8::internal::compiler::BasicBlock"** %202 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  br label %214

214:                                              ; preds = %208, %204
  %215 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %200, %204 ], [ %213, %208 ]
  %216 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %201, i64 1
  %217 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %216, align 8
  %218 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %215, null
  br i1 %218, label %262, label %258

219:                                              ; preds = %268, %195
  %220 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %79, align 8
  %221 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %83, align 8
  %222 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %221, %220
  br i1 %222, label %231, label %223

223:                                              ; preds = %219
  %224 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %220 to i64
  %225 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %221, i64 -1
  %226 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %225 to i64
  %227 = sub i64 %226, %224
  %228 = lshr i64 %227, 3
  %229 = xor i64 %228, -1
  %230 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %221, i64 %229
  store %"class.v8::internal::compiler::BasicBlock"*** %230, %"class.v8::internal::compiler::BasicBlock"**** %83, align 8
  br label %231

231:                                              ; preds = %223, %219, %168
  %232 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %233 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %232, align 8
  %234 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %233, null
  br i1 %234, label %257, label %235

235:                                              ; preds = %231
  %236 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %233 to i64
  %237 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %238 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = sub i64 %239, %236
  %241 = ashr exact i64 %240, 3
  %242 = icmp ult i64 %240, 16
  br i1 %242, label %257, label %243

243:                                              ; preds = %235
  %244 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %53, align 8
  %245 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %244, null
  br i1 %245, label %250, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %244, i64 0, i32 1
  %248 = load i64, i64* %247, align 8
  %249 = icmp ugt i64 %248, %241
  br i1 %249, label %257, label %250

250:                                              ; preds = %246, %243
  %251 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %233, i64 1
  %252 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %251 to i64*
  store i64 %241, i64* %252, align 8
  %253 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %53 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %233 to i64*
  store i64 %254, i64* %255, align 8
  %256 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %53 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %233, %"class.v8::internal::compiler::BasicBlock"**** %256, align 8
  br label %257

257:                                              ; preds = %231, %235, %246, %250
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %35) #10
  ret void

258:                                              ; preds = %214
  %259 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %215, i64 0, i32 1
  %260 = load i64, i64* %259, align 8
  %261 = icmp ugt i64 %260, 512
  br i1 %261, label %268, label %262

262:                                              ; preds = %258, %214
  %263 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %217, i64 1
  %264 = bitcast %"class.v8::internal::compiler::BasicBlock"** %263 to i64*
  store i64 512, i64* %264, align 8
  %265 = load i64, i64* %171, align 8
  %266 = bitcast %"class.v8::internal::compiler::BasicBlock"** %217 to i64*
  store i64 %265, i64* %266, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %217, %"class.v8::internal::compiler::BasicBlock"*** %172, align 8
  %267 = bitcast %"class.v8::internal::compiler::BasicBlock"** %217 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  br label %268

268:                                              ; preds = %262, %258
  %269 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %215, %258 ], [ %267, %262 ]
  %270 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %201, i64 2
  %271 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %270, %161
  br i1 %271, label %219, label %199
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler17SealFinalScheduleEv(%"class.v8::internal::compiler::Scheduler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0)) #10
  br label %5

5:                                                ; preds = %1, %4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 9
  %7 = load %"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::compiler::SpecialRPONumberer"** %6, align 8
  tail call void @_ZN2v88internal8compiler18SpecialRPONumberer24SerializeRPOIntoScheduleEv(%"class.v8::internal::compiler::SpecialRPONumberer"* %7)
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %10, align 8
  %12 = icmp eq %"class.v8::internal::ZoneVector.22"** %9, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  br label %16

15:                                               ; preds = %36, %5
  ret void

16:                                               ; preds = %13, %36
  %17 = phi i64 [ 0, %13 ], [ %20, %36 ]
  %18 = phi %"class.v8::internal::ZoneVector.22"** [ %9, %13 ], [ %37, %36 ]
  %19 = load %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %18, align 8
  %20 = add nuw i64 %17, 1
  %21 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %22 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %21, i64 %17) #10
  %23 = icmp eq %"class.v8::internal::ZoneVector.22"* %19, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %19, i64 0, i32 0, i32 0, i32 1
  %26 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8, !noalias !18
  %27 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %19, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %27, align 8, !noalias !18
  %29 = icmp eq %"class.v8::internal::compiler::Node"** %26, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %24, %30
  %31 = phi %"class.v8::internal::compiler::Node"** [ %32, %30 ], [ %26, %24 ]
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, i64 -1
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, align 8
  %34 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %34, %"class.v8::internal::compiler::BasicBlock"* %22, %"class.v8::internal::compiler::Node"* %33) #10
  %35 = icmp eq %"class.v8::internal::compiler::Node"** %32, %28
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %24, %16
  %37 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %18, i64 1
  %38 = icmp eq %"class.v8::internal::ZoneVector.22"** %37, %11
  br i1 %38, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler9Scheduler19InitializePlacementEPNS1_4NodeE(%"class.v8::internal::compiler::Scheduler"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %8, i64 %6, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %63, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %14, i64 0, i32 2
  %16 = load i16, i16* %15, align 8
  switch i16 %16, label %60 [
    i16 50, label %61
    i16 51, label %61
    i16 35, label %17
    i16 36, label %17
  ]

17:                                               ; preds = %12, %12
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %14, i64 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %22, label %21, !prof !21

21:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %14, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %14) #10
  %26 = zext i1 %25 to i32
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %13, align 8
  %28 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %27) #10
  %29 = zext i1 %28 to i32
  %30 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %13, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %30, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %24, %26
  %34 = add i32 %33, %29
  %35 = add i32 %34, %32
  %36 = load i32, i32* %3, align 4
  %37 = and i32 %36, 251658240
  %38 = icmp eq i32 %37, 251658240
  %39 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %40 = add i64 %39, 32
  br i1 %38, label %41, label %45

41:                                               ; preds = %22
  %42 = inttoptr i64 %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 16
  br label %45

45:                                               ; preds = %22, %41
  %46 = phi i64 [ %44, %41 ], [ %40, %22 ]
  %47 = inttoptr i64 %46 to %"class.v8::internal::compiler::Node"**
  %48 = sext i32 %35 to i64
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %47, i64 %48
  %50 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %50, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 16777215
  %54 = zext i32 %53 to i64
  %55 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %7, align 8
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %55, i64 %54, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 2
  %59 = select i1 %58, i32 2, i32 3
  br label %61

60:                                               ; preds = %12
  br label %61

61:                                               ; preds = %12, %12, %60, %45
  %62 = phi i32 [ %59, %45 ], [ 1, %60 ], [ 2, %12 ], [ 2, %12 ]
  store i32 %62, i32* %9, align 4
  br label %63

63:                                               ; preds = %61, %2
  %64 = phi i32 [ 2, %2 ], [ %62, %61 ]
  ret i32 %64
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal8compiler9Scheduler12GetPlacementEPNS1_4NodeE(%"class.v8::internal::compiler::Scheduler"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %8, i64 %6, i32 2
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler9Scheduler6IsLiveEPNS1_4NodeE(%"class.v8::internal::compiler::Scheduler"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %8, i64 %6, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %9, i64 %7, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %170, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 2
  %17 = load i16, i16* %16, align 8
  switch i16 %17, label %93 [
    i16 50, label %18
    i16 35, label %19
    i16 36, label %19
    i16 0, label %57
    i16 1, label %57
    i16 2, label %57
    i16 3, label %57
    i16 4, label %57
    i16 5, label %57
    i16 6, label %57
    i16 7, label %57
    i16 8, label %57
    i16 9, label %57
    i16 10, label %57
    i16 11, label %57
    i16 12, label %57
    i16 13, label %57
    i16 14, label %57
    i16 15, label %57
    i16 16, label %57
    i16 17, label %57
    i16 18, label %57
    i16 19, label %57
    i16 20, label %57
    i16 21, label %57
  ]

18:                                               ; preds = %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

19:                                               ; preds = %13, %13
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 7
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %24, label %23, !prof !21

23:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #10
  %28 = zext i1 %27 to i32
  %29 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %30 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %29) #10
  %31 = zext i1 %30 to i32
  %32 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %32, i64 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %26, %28
  %36 = add i32 %35, %31
  %37 = add i32 %36, %34
  %38 = load i32, i32* %4, align 4
  %39 = and i32 %38, 251658240
  %40 = icmp eq i32 %39, 251658240
  %41 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %42 = add i64 %41, 32
  br i1 %40, label %43, label %47

43:                                               ; preds = %24
  %44 = inttoptr i64 %42 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 16
  br label %47

47:                                               ; preds = %24, %43
  %48 = phi i64 [ %46, %43 ], [ %42, %24 ]
  %49 = inttoptr i64 %48 to %"class.v8::internal::compiler::Node"**
  %50 = sext i32 %37 to i64
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, i64 %50
  %52 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %54 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %53, align 8
  %55 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %54, %"class.v8::internal::compiler::Node"* %52) #10
  %56 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %53, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %56, %"class.v8::internal::compiler::BasicBlock"* %55, %"class.v8::internal::compiler::Node"* %1) #10
  br label %93

57:                                               ; preds = %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13, %13
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %59 = bitcast %"struct.v8::internal::compiler::Node::Use"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %93, label %62

62:                                               ; preds = %57, %89
  %63 = phi i64 [ %91, %89 ], [ %60, %57 ]
  %64 = inttoptr i64 %63 to %"struct.v8::internal::compiler::Node::Use"*
  %65 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %64, i64 1
  %66 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %64, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = lshr i32 %67, 1
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %65, i64 %69
  %71 = and i32 %67, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %62
  %74 = bitcast %"struct.v8::internal::compiler::Node::Use"* %70 to %"class.v8::internal::compiler::Node"*
  br label %78

75:                                               ; preds = %62
  %76 = bitcast %"struct.v8::internal::compiler::Node::Use"* %70 to %"class.v8::internal::compiler::Node"**
  %77 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, align 8
  br label %78

78:                                               ; preds = %73, %75
  %79 = phi %"class.v8::internal::compiler::Node"* [ %74, %73 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %79, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 16777215
  %83 = zext i32 %82 to i64
  %84 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %8, align 8
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %84, i64 %83, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 3
  br i1 %87, label %88, label %89

88:                                               ; preds = %78
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::Node"* %79, i32 %2)
  br label %89

89:                                               ; preds = %88, %78
  %90 = inttoptr i64 %63 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %62

93:                                               ; preds = %89, %57, %13, %47
  %94 = load i32, i32* %4, align 4
  %95 = and i32 %94, 16777215
  %96 = zext i32 %95 to i64
  %97 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %8, align 8
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %97, i64 %96, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 3
  br i1 %100, label %101, label %119

101:                                              ; preds = %93
  %102 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %102, i64 0, i32 5
  %104 = load i32, i32* %103, align 4
  %105 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %102) #10
  %106 = zext i1 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %109 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %108) #10
  %110 = zext i1 %109 to i32
  %111 = add nsw i32 %107, %110
  %112 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %112, i64 0, i32 6
  %114 = load i32, i32* %113, align 8
  %115 = add nsw i32 %111, %114
  %116 = and i32 %115, -256
  %117 = and i32 %115, 255
  %118 = load i32, i32* %4, align 4, !noalias !22
  br label %119

119:                                              ; preds = %93, %101
  %120 = phi i32 [ %118, %101 ], [ %94, %93 ]
  %121 = phi i32 [ %117, %101 ], [ 0, %93 ]
  %122 = phi i8 [ 1, %101 ], [ 0, %93 ]
  %123 = phi i32 [ %116, %101 ], [ 0, %93 ]
  %124 = or i32 %123, %121
  %125 = lshr i32 %120, 24
  %126 = and i32 %125, 15
  %127 = icmp eq i32 %126, 15
  %128 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %129 = add i64 %128, 32
  br i1 %127, label %133, label %130

130:                                              ; preds = %119
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 -1, i32 1
  %132 = bitcast %"class.v8::internal::compiler::Type"* %131 to %"struct.v8::internal::compiler::Node::Use"*
  br label %142

133:                                              ; preds = %119
  %134 = inttoptr i64 %129 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %135 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %134, align 8, !noalias !22
  %136 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %135 to i64
  %137 = add i64 %136, 16
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %135, i64 -2, i32 1
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %135, i64 0, i32 1
  %140 = load i32, i32* %139, align 8, !noalias !22
  %141 = bitcast i32* %138 to %"struct.v8::internal::compiler::Node::Use"*
  br label %142

142:                                              ; preds = %130, %133
  %143 = phi %"struct.v8::internal::compiler::Node::Use"* [ %141, %133 ], [ %132, %130 ]
  %144 = phi i64 [ %137, %133 ], [ %129, %130 ]
  %145 = phi i32 [ %140, %133 ], [ %126, %130 ]
  %146 = inttoptr i64 %144 to %"class.v8::internal::compiler::Node"**
  %147 = sext i32 %145 to i64
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 %147
  %149 = icmp eq i32 %145, 0
  br i1 %149, label %170, label %150

150:                                              ; preds = %142
  %151 = icmp eq i8 %122, 0
  br i1 %151, label %152, label %157

152:                                              ; preds = %150, %152
  %153 = phi %"class.v8::internal::compiler::Node"** [ %155, %152 ], [ %146, %150 ]
  %154 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler28DecrementUnscheduledUseCountEPNS1_4NodeES4_(%"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::Node"* %154, %"class.v8::internal::compiler::Node"* %1)
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 1
  %156 = icmp eq %"class.v8::internal::compiler::Node"** %155, %148
  br i1 %156, label %170, label %152

157:                                              ; preds = %150, %166
  %158 = phi %"class.v8::internal::compiler::Node"** [ %167, %166 ], [ %146, %150 ]
  %159 = phi %"struct.v8::internal::compiler::Node::Use"* [ %168, %166 ], [ %143, %150 ]
  %160 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %159, i64 0, i32 2
  %161 = load i32, i32* %160, align 8
  %162 = lshr i32 %161, 1
  %163 = icmp eq i32 %162, %124
  br i1 %163, label %166, label %164

164:                                              ; preds = %157
  %165 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %158, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler28DecrementUnscheduledUseCountEPNS1_4NodeES4_(%"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::Node"* %165, %"class.v8::internal::compiler::Node"* %1)
  br label %166

166:                                              ; preds = %157, %164
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %158, i64 1
  %168 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %159, i64 -1
  %169 = icmp eq %"class.v8::internal::compiler::Node"** %167, %148
  br i1 %169, label %170, label %157

170:                                              ; preds = %166, %152, %142, %3
  store i32 %2, i32* %10, align 4
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler28DecrementUnscheduledUseCountEPNS1_4NodeES4_(%"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %10, i64 %8, i32 2
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %50 [
    i32 2, label %140
    i32 3, label %13
  ]

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 7
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %20, label %19, !prof !21

19:                                               ; preds = %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %15, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %15) #10
  %24 = zext i1 %23 to i32
  %25 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %26 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %25) #10
  %27 = zext i1 %26 to i32
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %14, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %22, %24
  %32 = add i32 %31, %27
  %33 = add i32 %32, %30
  %34 = load i32, i32* %5, align 4
  %35 = and i32 %34, 251658240
  %36 = icmp eq i32 %35, 251658240
  %37 = add i64 %4, 32
  br i1 %36, label %38, label %42

38:                                               ; preds = %20
  %39 = inttoptr i64 %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 16
  br label %42

42:                                               ; preds = %20, %38
  %43 = phi i64 [ %41, %38 ], [ %37, %20 ]
  %44 = inttoptr i64 %43 to %"class.v8::internal::compiler::Node"**
  %45 = sext i32 %33 to i64
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, i64 %45
  %47 = bitcast %"class.v8::internal::compiler::Node"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %9, align 8
  br label %50

50:                                               ; preds = %3, %42
  %51 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %49, %42 ], [ %10, %3 ]
  %52 = phi i64 [ %48, %42 ], [ %4, %3 ]
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::Node"*
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777215
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %51, i64 %57, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, -1
  store i32 %60, i32* %58, align 8
  %61 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %81, label %63

63:                                               ; preds = %50
  %64 = load i32, i32* %54, align 4
  %65 = and i32 %64, 16777215
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 0
  %67 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %67, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 16777215
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %74 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %74, i64 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = zext i32 %65 to i64
  %78 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %9, align 8
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %78, i64 %77, i32 1
  %80 = load i32, i32* %79, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 %65, i8* %69, i32 %72, i8* %76, i32 %80) #10
  br label %81

81:                                               ; preds = %50, %63
  %82 = load i32, i32* %54, align 4
  %83 = and i32 %82, 16777215
  %84 = zext i32 %83 to i64
  %85 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %9, align 8
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %85, i64 %84, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %140

89:                                               ; preds = %81
  %90 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %53, i64 0, i32 0
  %94 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %94, i64 0, i32 1
  %96 = load i8*, i8** %95, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %83, i8* %96) #10
  br label %97

97:                                               ; preds = %89, %92
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %99 = bitcast %"class.v8::internal::compiler::Node"**** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.v8::internal::compiler::Node"**** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %100, %103
  %105 = icmp eq i64 %104, 0
  %106 = shl i64 %104, 6
  %107 = add i64 %106, -1
  %108 = select i1 %105, i64 0, i64 %107
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, %110
  %114 = icmp eq i64 %108, %113
  %115 = inttoptr i64 %103 to %"class.v8::internal::compiler::Node"***
  %116 = inttoptr i64 %100 to %"class.v8::internal::compiler::Node"***
  br i1 %114, label %117, label %124

117:                                              ; preds = %97
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %118) #10
  %119 = load i64, i64* %111, align 8
  %120 = load i64, i64* %109, align 8
  %121 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %101, align 8
  %122 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %98, align 8
  %123 = add i64 %120, %119
  br label %124

124:                                              ; preds = %117, %97
  %125 = phi i64 [ %123, %117 ], [ %113, %97 ]
  %126 = phi %"class.v8::internal::compiler::Node"*** [ %122, %117 ], [ %116, %97 ]
  %127 = phi %"class.v8::internal::compiler::Node"*** [ %121, %117 ], [ %115, %97 ]
  %128 = icmp eq %"class.v8::internal::compiler::Node"*** %126, %127
  br i1 %128, label %136, label %129

129:                                              ; preds = %124
  %130 = lshr i64 %125, 9
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %127, i64 %130
  %132 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %131, align 8
  %133 = and i64 %125, 511
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 %133
  %135 = bitcast %"class.v8::internal::compiler::Node"** %134 to i64*
  br label %136

136:                                              ; preds = %124, %129
  %137 = phi i64* [ %135, %129 ], [ null, %124 ]
  store i64 %52, i64* %137, align 8
  %138 = load i64, i64* %111, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %111, align 8
  br label %140

140:                                              ; preds = %3, %136, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler28IncrementUnscheduledUseCountEPNS1_4NodeES4_(%"class.v8::internal::compiler::Scheduler"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %9, i64 %7, i32 2
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %53 [
    i32 2, label %81
    i32 3, label %12
  ]

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %14, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %19, label %18, !prof !21

18:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %14, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %14) #10
  %23 = zext i1 %22 to i32
  %24 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %13, align 8
  %25 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %24) #10
  %26 = zext i1 %25 to i32
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %13, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %27, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %21, %23
  %31 = add i32 %30, %26
  %32 = add i32 %31, %29
  %33 = load i32, i32* %4, align 4
  %34 = and i32 %33, 251658240
  %35 = icmp eq i32 %34, 251658240
  %36 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %37 = add i64 %36, 32
  br i1 %35, label %38, label %42

38:                                               ; preds = %19
  %39 = inttoptr i64 %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 16
  br label %42

42:                                               ; preds = %19, %38
  %43 = phi i64 [ %41, %38 ], [ %37, %19 ]
  %44 = inttoptr i64 %43 to %"class.v8::internal::compiler::Node"**
  %45 = sext i32 %32 to i64
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, i64 %45
  %47 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %47, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %8, align 8
  %51 = and i32 %49, 16777215
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %3, %42
  %54 = phi i64 [ %7, %3 ], [ %52, %42 ]
  %55 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %9, %3 ], [ %50, %42 ]
  %56 = phi %"class.v8::internal::compiler::Node"* [ %1, %3 ], [ %47, %42 ]
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %55, i64 %54, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %57, align 8
  %60 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %56, i64 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 16777215
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %56, i64 0, i32 0
  %67 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %67, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 16777215
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %74 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %74, i64 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = zext i32 %65 to i64
  %78 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %8, align 8
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %78, i64 %77, i32 1
  %80 = load i32, i32* %79, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 %65, i8* %69, i32 %72, i8* %76, i32 %80) #10
  br label %81

81:                                               ; preds = %3, %53, %62
  ret void
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder3RunEv(%"class.v8::internal::compiler::CFGBuilder"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 5, i32 0
  %3 = bitcast %"class.std::__1::vector.23"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %8, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %10, i64 0, i32 2
  %12 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %11, align 8
  tail call void @_ZN2v88internal8compiler10CFGBuilder5QueueEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %12)
  %13 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %125, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %20 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %19 to i64*
  %21 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %19 to %"class.v8::internal::compiler::Node"***
  %22 = bitcast i64* %18 to <2 x i64>*
  %23 = bitcast i64* %18 to <2 x i64>*
  br label %27

24:                                               ; preds = %117, %63
  %25 = load i64, i64* %13, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %125, label %27

27:                                               ; preds = %16, %24
  %28 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %7, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %28, i64 0, i32 11
  %30 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %29, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %30) #10
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %17, align 8
  %32 = load <2 x i64>, <2 x i64>* %22, align 8
  %33 = extractelement <2 x i64> %32, i32 0
  %34 = lshr i64 %33, 9
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %31, i64 %34
  %36 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, align 8
  %37 = and i64 %33, 511
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 %37
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %40 = add <2 x i64> %32, <i64 1, i64 -1>
  store <2 x i64> %40, <2 x i64>* %23, align 8
  %41 = extractelement <2 x i64> %40, i32 0
  %42 = icmp ult i64 %41, 1024
  br i1 %42, label %63, label %43

43:                                               ; preds = %27
  %44 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %31, align 8
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %19, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %49, 512
  br i1 %50, label %58, label %51

51:                                               ; preds = %47, %43
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, i64 1
  %53 = bitcast %"class.v8::internal::compiler::Node"** %52 to i64*
  store i64 512, i64* %53, align 8
  %54 = load i64, i64* %20, align 8
  %55 = bitcast %"class.v8::internal::compiler::Node"** %44 to i64*
  store i64 %54, i64* %55, align 8
  store %"class.v8::internal::compiler::Node"** %44, %"class.v8::internal::compiler::Node"*** %21, align 8
  %56 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %17, align 8
  %57 = load i64, i64* %18, align 8
  br label %58

58:                                               ; preds = %51, %47
  %59 = phi i64 [ %41, %47 ], [ %57, %51 ]
  %60 = phi %"class.v8::internal::compiler::Node"*** [ %31, %47 ], [ %56, %51 ]
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %60, i64 1
  store %"class.v8::internal::compiler::Node"*** %61, %"class.v8::internal::compiler::Node"**** %17, align 8
  %62 = add i64 %59, -512
  store i64 %62, i64* %18, align 8
  br label %63

63:                                               ; preds = %27, %58
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 0
  %65 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %65, i64 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %65) #10
  %69 = zext i1 %68 to i32
  %70 = add nsw i32 %67, %69
  %71 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %64, align 8
  %72 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %71) #10
  %73 = zext i1 %72 to i32
  %74 = add nsw i32 %70, %73
  %75 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %64, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %75, i64 0, i32 6
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %74, %77
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %75, i64 0, i32 7
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %78, %80
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %75, i64 0, i32 5
  %83 = load i32, i32* %82, align 4
  %84 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %75) #10
  %85 = zext i1 %84 to i32
  %86 = add nsw i32 %83, %85
  %87 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %64, align 8
  %88 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %87) #10
  %89 = zext i1 %88 to i32
  %90 = add nsw i32 %86, %89
  %91 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %64, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %91, i64 0, i32 6
  %93 = load i32, i32* %92, align 8
  %94 = add nsw i32 %90, %93
  %95 = icmp slt i32 %94, %81
  br i1 %95, label %96, label %24

96:                                               ; preds = %63
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 3
  %98 = ptrtoint %"class.v8::internal::compiler::Node"* %39 to i64
  %99 = add i64 %98, 32
  %100 = inttoptr i64 %99 to i64*
  %101 = add i32 %83, %93
  %102 = add i32 %101, %85
  %103 = add i32 %102, %89
  %104 = sext i32 %103 to i64
  %105 = add i32 %67, %77
  %106 = add i32 %105, %80
  %107 = add i32 %106, %69
  %108 = add i32 %107, %73
  br label %109

109:                                              ; preds = %117, %96
  %110 = phi i64 [ %104, %96 ], [ %122, %117 ]
  %111 = load i32, i32* %97, align 4
  %112 = and i32 %111, 251658240
  %113 = icmp eq i32 %112, 251658240
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = load i64, i64* %100, align 8
  %116 = add i64 %115, 16
  br label %117

117:                                              ; preds = %109, %114
  %118 = phi i64 [ %116, %114 ], [ %99, %109 ]
  %119 = inttoptr i64 %118 to %"class.v8::internal::compiler::Node"**
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 %110
  %121 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, align 8
  tail call void @_ZN2v88internal8compiler10CFGBuilder5QueueEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %121)
  %122 = add nsw i64 %110, 1
  %123 = trunc i64 %122 to i32
  %124 = icmp eq i32 %108, %123
  br i1 %124, label %24, label %109

125:                                              ; preds = %24, %1
  %126 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %2, i64 0, i32 0, i32 0
  %127 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %126, align 8
  %128 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %5, align 8
  %129 = icmp eq %"class.v8::internal::compiler::Node"** %127, %128
  br i1 %129, label %130, label %131

130:                                              ; preds = %131, %125
  ret void

131:                                              ; preds = %125, %131
  %132 = phi %"class.v8::internal::compiler::Node"** [ %134, %131 ], [ %127, %125 ]
  %133 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, align 8
  tail call void @_ZN2v88internal8compiler10CFGBuilder13ConnectBlocksEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %133)
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 1
  %135 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %5, align 8
  %136 = icmp eq %"class.v8::internal::compiler::Node"** %134, %135
  br i1 %136, label %130, label %131
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ZoneVector.11"* @_ZN2v88internal8compiler9Scheduler17ComputeSpecialRPOEPNS0_4ZoneEPNS1_8ScheduleE(%"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Schedule"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::SpecialRPONumberer", align 8
  %4 = bitcast %"class.v8::internal::compiler::SpecialRPONumberer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 0
  store %"class.v8::internal::Zone"* %0, %"class.v8::internal::Zone"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 1
  store %"class.v8::internal::compiler::Schedule"* %1, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 2
  %8 = ptrtoint %"class.v8::internal::Zone"* %0 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.53"* %9 to i64*
  %11 = bitcast %"class.v8::internal::compiler::BasicBlock"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false) #10
  store i64 %8, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 5
  %13 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.60"* %13 to i64*
  %15 = bitcast %"class.v8::internal::ZoneVector.55"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10
  store i64 %8, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 6
  %17 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.67"* %17 to i64*
  %19 = bitcast %"class.v8::internal::ZoneVector.62"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #10
  store i64 %8, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 7
  %21 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1
  %22 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %21 to i64*
  %23 = bitcast i64* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #10
  store i64 %8, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %1, i64 0, i32 4
  %25 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %1, i64 0, i32 5
  %27 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %26, align 8
  call void @_ZN2v88internal8compiler18SpecialRPONumberer26ComputeAndInsertSpecialRPOEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::SpecialRPONumberer"* nonnull %3, %"class.v8::internal::compiler::BasicBlock"* %25, %"class.v8::internal::compiler::BasicBlock"* %27) #10
  call void @_ZN2v88internal8compiler18SpecialRPONumberer24SerializeRPOIntoScheduleEv(%"class.v8::internal::compiler::SpecialRPONumberer"* nonnull %3)
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %1, i64 0, i32 3
  %29 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 8, i32 0, i32 0, i32 0
  %30 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %29, align 8
  %31 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %2
  %33 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %30 to i64
  %34 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 8, i32 0, i32 0, i32 1
  %35 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %34 to i64*
  store i64 %33, i64* %35, align 8
  br label %36

36:                                               ; preds = %32, %2
  %37 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %37, align 8
  %39 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %38 to i64
  %42 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 6, i32 0, i32 0, i32 1
  %43 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %42 to i64*
  store i64 %41, i64* %43, align 8
  br label %44

44:                                               ; preds = %40, %36
  %45 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %45, align 8
  %47 = icmp eq %"struct.std::__1::pair"* %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"struct.std::__1::pair"* %46 to i64
  %50 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 5, i32 0, i32 0, i32 1
  %51 = bitcast %"struct.std::__1::pair"** %50 to i64*
  store i64 %49, i64* %51, align 8
  br label %52

52:                                               ; preds = %48, %44
  %53 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %53, align 8
  %55 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %54 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %3, i64 0, i32 4, i32 0, i32 0, i32 1
  %59 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %58 to i64*
  store i64 %57, i64* %59, align 8
  br label %60

60:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %4) #10
  ret %"class.v8::internal::ZoneVector.11"* %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler18SpecialRPONumberer24SerializeRPOIntoScheduleEv(%"class.v8::internal::compiler::SpecialRPONumberer"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 2
  %3 = bitcast %"class.v8::internal::compiler::BasicBlock"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 1
  br label %33

8:                                                ; preds = %277, %1
  %9 = phi i32 [ 0, %1 ], [ %37, %277 ]
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 3
  %11 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %11, null
  br i1 %12, label %13, label %31

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 1
  %15 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %15, i64 0, i32 0
  %17 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %19
  %23 = icmp ult i64 %22, 168
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %13
  %25 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17, i64 168) #10
  br label %28

26:                                               ; preds = %13
  %27 = add i64 %19, 168
  store i64 %27, i64* %18, align 8
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i64 [ %25, %24 ], [ %19, %26 ]
  %30 = inttoptr i64 %29 to %"class.v8::internal::compiler::BasicBlock"*
  tail call void @_ZN2v88internal8compiler10BasicBlockC1EPNS0_4ZoneENS2_2IdE(%"class.v8::internal::compiler::BasicBlock"* %30, %"class.v8::internal::Zone"* %17, i64 -1) #10
  store %"class.v8::internal::compiler::BasicBlock"* %30, %"class.v8::internal::compiler::BasicBlock"** %10, align 8
  br label %31

31:                                               ; preds = %8, %28
  %32 = phi %"class.v8::internal::compiler::BasicBlock"* [ %30, %28 ], [ %11, %8 ]
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* %32, i32 %9) #10
  ret void

33:                                               ; preds = %6, %277
  %34 = phi i64 [ %4, %6 ], [ %280, %277 ]
  %35 = phi i32 [ 0, %6 ], [ %37, %277 ]
  %36 = inttoptr i64 %34 to %"class.v8::internal::compiler::BasicBlock"*
  %37 = add nuw nsw i32 %35, 1
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* nonnull %36, i32 %35) #10
  %38 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %7, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %38, i64 0, i32 3, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %38, i64 0, i32 3, i32 0, i32 0, i32 1
  %41 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %38, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %42, align 8
  %44 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %41, %43
  %45 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %43 to i64
  br i1 %44, label %51, label %46

46:                                               ; preds = %33
  %47 = bitcast %"class.v8::internal::compiler::BasicBlock"** %41 to i64*
  store i64 %34, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %41, i64 1
  %49 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %48 to i64
  %50 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %40 to i64*
  store i64 %49, i64* %50, align 8
  br label %277

51:                                               ; preds = %33
  %52 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %41 to i64
  %53 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %40 to i64*
  %54 = bitcast %"class.std::__1::vector.12"* %39 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %52, %55
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = icmp ugt i64 %58, 268435455
  br i1 %59, label %60, label %62

60:                                               ; preds = %51
  %61 = bitcast %"class.std::__1::vector.12"* %39 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %61) #11
  unreachable

62:                                               ; preds = %51
  %63 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %42 to i64*
  %64 = sub i64 %45, %55
  %65 = ashr exact i64 %64, 3
  %66 = icmp ult i64 %65, 134217727
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = ashr exact i64 %64, 2
  %69 = icmp ult i64 %68, %58
  %70 = select i1 %69, i64 %58, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %90, label %72

72:                                               ; preds = %67, %62
  %73 = phi i64 [ %70, %67 ], [ 268435455, %62 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %38, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %75 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %74, align 8
  %76 = shl i64 %73, 3
  %77 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %75, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %75, i64 0, i32 3
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %80, %78
  %82 = icmp ugt i64 %76, %81
  br i1 %82, label %83, label %85, !prof !2

83:                                               ; preds = %72
  %84 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %75, i64 %76) #10
  br label %87

85:                                               ; preds = %72
  %86 = add i64 %78, %76
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %85, %83
  %88 = phi i64 [ %84, %83 ], [ %78, %85 ]
  %89 = inttoptr i64 %88 to %"class.v8::internal::compiler::BasicBlock"**
  br label %90

90:                                               ; preds = %87, %67
  %91 = phi i64 [ %73, %87 ], [ 0, %67 ]
  %92 = phi %"class.v8::internal::compiler::BasicBlock"** [ %89, %87 ], [ null, %67 ]
  %93 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %92, i64 %57
  %94 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %92, i64 %91
  %95 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %94 to i64
  %96 = bitcast %"class.v8::internal::compiler::BasicBlock"** %93 to i64*
  store i64 %34, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 1
  %98 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %97 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %39, i64 0, i32 0, i32 0
  %100 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %99, align 8
  %101 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %100 to i64
  %102 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %40, align 8
  %103 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %102, %100
  br i1 %103, label %274, label %104

104:                                              ; preds = %90
  %105 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %105 to i64
  %107 = sub i64 %106, %101
  %108 = lshr i64 %107, 3
  %109 = add nuw nsw i64 %108, 1
  %110 = icmp ult i64 %109, 4
  br i1 %110, label %204, label %111

111:                                              ; preds = %104
  %112 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %92, i64 -1
  %113 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %114 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %113 to i64
  %115 = sub i64 %114, %101
  %116 = lshr i64 %115, 3
  %117 = sub nsw i64 %57, %116
  %118 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %112, i64 %117
  %119 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %120 = sub nsw i64 0, %116
  %121 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %119, i64 %120
  %122 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %118, %102
  %123 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %121, %93
  %124 = and i1 %122, %123
  br i1 %124, label %204, label %125

125:                                              ; preds = %111
  %126 = and i64 %109, 4611686018427387900
  %127 = sub nsw i64 0, %126
  %128 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 %127
  %129 = sub nsw i64 0, %126
  %130 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 %129
  %131 = add nsw i64 %126, -4
  %132 = lshr exact i64 %131, 2
  %133 = add nuw nsw i64 %132, 1
  %134 = and i64 %133, 1
  %135 = icmp eq i64 %131, 0
  br i1 %135, label %180, label %136

136:                                              ; preds = %125
  %137 = sub nuw nsw i64 %133, %134
  %138 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 -1
  %139 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %140 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 -1
  %141 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  br label %142

142:                                              ; preds = %142, %136
  %143 = phi i64 [ 0, %136 ], [ %177, %142 ]
  %144 = phi i64 [ %137, %136 ], [ %178, %142 ]
  %145 = sub i64 0, %143
  %146 = sub i64 0, %143
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %138, i64 %145
  %148 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %139, i64 %146
  %149 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %148, i64 -1
  %150 = bitcast %"class.v8::internal::compiler::BasicBlock"** %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8, !alias.scope !25
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %148, i64 -2
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %152, i64 -1
  %154 = bitcast %"class.v8::internal::compiler::BasicBlock"** %153 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !alias.scope !25
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %147, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::BasicBlock"** %156 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %157, align 8, !alias.scope !28, !noalias !25
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %147, i64 -2
  %159 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %158, i64 -1
  %160 = bitcast %"class.v8::internal::compiler::BasicBlock"** %159 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %160, align 8, !alias.scope !28, !noalias !25
  %161 = sub nuw nsw i64 -4, %143
  %162 = sub nuw nsw i64 -4, %143
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %140, i64 %161
  %164 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %141, i64 %162
  %165 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::BasicBlock"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !25
  %168 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::BasicBlock"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !25
  %172 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::BasicBlock"** %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !28, !noalias !25
  %174 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %174, i64 -1
  %176 = bitcast %"class.v8::internal::compiler::BasicBlock"** %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !28, !noalias !25
  %177 = add i64 %143, 8
  %178 = add i64 %144, -2
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %142, !llvm.loop !30

180:                                              ; preds = %142, %125
  %181 = phi i64 [ 0, %125 ], [ %177, %142 ]
  %182 = icmp eq i64 %134, 0
  br i1 %182, label %202, label %183

183:                                              ; preds = %180
  %184 = sub i64 0, %181
  %185 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 -1
  %186 = sub i64 0, %181
  %187 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %188 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %185, i64 %184
  %189 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 %186
  %190 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %189, i64 -1
  %191 = bitcast %"class.v8::internal::compiler::BasicBlock"** %190 to <2 x i64>*
  %192 = load <2 x i64>, <2 x i64>* %191, align 8, !alias.scope !25
  %193 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %189, i64 -2
  %194 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::BasicBlock"** %194 to <2 x i64>*
  %196 = load <2 x i64>, <2 x i64>* %195, align 8, !alias.scope !25
  %197 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -1
  %198 = bitcast %"class.v8::internal::compiler::BasicBlock"** %197 to <2 x i64>*
  store <2 x i64> %192, <2 x i64>* %198, align 8, !alias.scope !28, !noalias !25
  %199 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -2
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %199, i64 -1
  %201 = bitcast %"class.v8::internal::compiler::BasicBlock"** %200 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %201, align 8, !alias.scope !28, !noalias !25
  br label %202

202:                                              ; preds = %180, %183
  %203 = icmp eq i64 %109, %126
  br i1 %203, label %274, label %204

204:                                              ; preds = %202, %111, %104
  %205 = phi %"class.v8::internal::compiler::BasicBlock"** [ %93, %111 ], [ %93, %104 ], [ %128, %202 ]
  %206 = phi %"class.v8::internal::compiler::BasicBlock"** [ %102, %111 ], [ %102, %104 ], [ %130, %202 ]
  %207 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -1
  %208 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %207 to i64
  %209 = sub i64 %208, %101
  %210 = lshr i64 %209, 3
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 7
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %225, label %214

214:                                              ; preds = %204, %214
  %215 = phi %"class.v8::internal::compiler::BasicBlock"** [ %218, %214 ], [ %205, %204 ]
  %216 = phi %"class.v8::internal::compiler::BasicBlock"** [ %219, %214 ], [ %206, %204 ]
  %217 = phi i64 [ %223, %214 ], [ %212, %204 ]
  %218 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -1
  %219 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %216, i64 -1
  %220 = bitcast %"class.v8::internal::compiler::BasicBlock"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.v8::internal::compiler::BasicBlock"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = add i64 %217, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %214, !llvm.loop !31

225:                                              ; preds = %214, %204
  %226 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %204 ], [ %218, %214 ]
  %227 = phi %"class.v8::internal::compiler::BasicBlock"** [ %205, %204 ], [ %218, %214 ]
  %228 = phi %"class.v8::internal::compiler::BasicBlock"** [ %206, %204 ], [ %219, %214 ]
  %229 = icmp ult i64 %209, 56
  br i1 %229, label %274, label %230

230:                                              ; preds = %225, %230
  %231 = phi %"class.v8::internal::compiler::BasicBlock"** [ %268, %230 ], [ %227, %225 ]
  %232 = phi %"class.v8::internal::compiler::BasicBlock"** [ %269, %230 ], [ %228, %225 ]
  %233 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -1
  %234 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %232, i64 -1
  %235 = bitcast %"class.v8::internal::compiler::BasicBlock"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::compiler::BasicBlock"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -2
  %239 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %232, i64 -2
  %240 = bitcast %"class.v8::internal::compiler::BasicBlock"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::compiler::BasicBlock"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -3
  %244 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %232, i64 -3
  %245 = bitcast %"class.v8::internal::compiler::BasicBlock"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.v8::internal::compiler::BasicBlock"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -4
  %249 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %232, i64 -4
  %250 = bitcast %"class.v8::internal::compiler::BasicBlock"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.v8::internal::compiler::BasicBlock"** %248 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -5
  %254 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %232, i64 -5
  %255 = bitcast %"class.v8::internal::compiler::BasicBlock"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.v8::internal::compiler::BasicBlock"** %253 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -6
  %259 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %232, i64 -6
  %260 = bitcast %"class.v8::internal::compiler::BasicBlock"** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.v8::internal::compiler::BasicBlock"** %258 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -7
  %264 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %232, i64 -7
  %265 = bitcast %"class.v8::internal::compiler::BasicBlock"** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.v8::internal::compiler::BasicBlock"** %263 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %232, i64 -8
  %270 = bitcast %"class.v8::internal::compiler::BasicBlock"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.v8::internal::compiler::BasicBlock"** %268 to i64*
  store i64 %271, i64* %272, align 8
  %273 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %269, %100
  br i1 %273, label %274, label %230, !llvm.loop !32

274:                                              ; preds = %225, %230, %202, %90
  %275 = phi %"class.v8::internal::compiler::BasicBlock"** [ %93, %90 ], [ %128, %202 ], [ %226, %225 ], [ %268, %230 ]
  %276 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %275 to i64
  store i64 %276, i64* %54, align 8
  store i64 %98, i64* %53, align 8
  store i64 %95, i64* %63, align 8
  br label %277

277:                                              ; preds = %46, %274
  %278 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %36, i64 0, i32 5
  %279 = bitcast %"class.v8::internal::compiler::BasicBlock"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %8, label %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler28PropagateImmediateDominatorsEPNS1_10BasicBlockE(%"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %0, null
  br i1 %2, label %58, label %3

3:                                                ; preds = %1, %54
  %4 = phi %"class.v8::internal::compiler::BasicBlock"* [ %56, %54 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %4, i64 0, i32 13, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %4, i64 0, i32 13, i32 0, i32 0, i32 1
  %8 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %7, align 8
  %9 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %6, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %9, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !5
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %6, i64 1
  %13 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %12, %8
  br i1 %13, label %33, label %14

14:                                               ; preds = %3, %28
  %15 = phi %"class.v8::internal::compiler::BasicBlock"** [ %31, %28 ], [ %12, %3 ]
  %16 = phi i8 [ %30, %28 ], [ %11, %3 ]
  %17 = phi %"class.v8::internal::compiler::BasicBlock"* [ %29, %28 ], [ %9, %3 ]
  %18 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %14
  %23 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* %17, %"class.v8::internal::compiler::BasicBlock"* %18) #10
  %24 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 2
  %26 = load i8, i8* %25, align 8, !range !5
  %27 = and i8 %26, %16
  br label %28

28:                                               ; preds = %14, %22
  %29 = phi %"class.v8::internal::compiler::BasicBlock"* [ %17, %14 ], [ %23, %22 ]
  %30 = phi i8 [ %16, %14 ], [ %27, %22 ]
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %15, i64 1
  %32 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %31, %8
  br i1 %32, label %33, label %14

33:                                               ; preds = %28, %3
  %34 = phi %"class.v8::internal::compiler::BasicBlock"* [ %9, %3 ], [ %29, %28 ]
  %35 = phi i8 [ %11, %3 ], [ %30, %28 ]
  %36 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %4, i64 0, i32 4
  store %"class.v8::internal::compiler::BasicBlock"* %34, %"class.v8::internal::compiler::BasicBlock"** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %34, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, 1
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %4, i64 0, i32 3
  store i32 %39, i32* %40, align 4
  %41 = and i8 %35, 1
  %42 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %4, i64 0, i32 2
  %43 = load i8, i8* %42, align 8, !range !5
  %44 = or i8 %43, %41
  store i8 %44, i8* %42, align 8
  %45 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %4, i64 0, i32 14, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %34, i64 0, i32 14, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 %50, i32 %53, i32 %39) #10
  br label %54

54:                                               ; preds = %33, %47
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %4, i64 0, i32 5
  %56 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %55, align 8
  %57 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %56, null
  br i1 %57, label %58, label %3

58:                                               ; preds = %54, %1
  ret void
}

declare %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler21GenerateDominatorTreeEPNS1_8ScheduleE(%"class.v8::internal::compiler::Schedule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %3, i64 0, i32 3
  store i32 0, i32* %4, align 4
  %5 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %2, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %5, i64 0, i32 5
  %7 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %7, null
  br i1 %8, label %64, label %9

9:                                                ; preds = %1, %60
  %10 = phi %"class.v8::internal::compiler::BasicBlock"* [ %62, %60 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %10, i64 0, i32 13, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %10, i64 0, i32 13, i32 0, i32 0, i32 1
  %14 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %13, align 8
  %15 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %12, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %15, i64 0, i32 2
  %17 = load i8, i8* %16, align 8, !range !5
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %12, i64 1
  %19 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %18, %14
  br i1 %19, label %39, label %20

20:                                               ; preds = %9, %34
  %21 = phi %"class.v8::internal::compiler::BasicBlock"** [ %37, %34 ], [ %18, %9 ]
  %22 = phi i8 [ %36, %34 ], [ %17, %9 ]
  %23 = phi %"class.v8::internal::compiler::BasicBlock"* [ %35, %34 ], [ %15, %9 ]
  %24 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %21, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  %29 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* %23, %"class.v8::internal::compiler::BasicBlock"* %24) #10
  %30 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %21, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 2
  %32 = load i8, i8* %31, align 8, !range !5
  %33 = and i8 %32, %22
  br label %34

34:                                               ; preds = %28, %20
  %35 = phi %"class.v8::internal::compiler::BasicBlock"* [ %23, %20 ], [ %29, %28 ]
  %36 = phi i8 [ %22, %20 ], [ %33, %28 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %21, i64 1
  %38 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %37, %14
  br i1 %38, label %39, label %20

39:                                               ; preds = %34, %9
  %40 = phi %"class.v8::internal::compiler::BasicBlock"* [ %15, %9 ], [ %35, %34 ]
  %41 = phi i8 [ %17, %9 ], [ %36, %34 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %10, i64 0, i32 4
  store %"class.v8::internal::compiler::BasicBlock"* %40, %"class.v8::internal::compiler::BasicBlock"** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %40, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, 1
  %46 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %10, i64 0, i32 3
  store i32 %45, i32* %46, align 4
  %47 = and i8 %41, 1
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %10, i64 0, i32 2
  %49 = load i8, i8* %48, align 8, !range !5
  %50 = or i8 %49, %47
  store i8 %50, i8* %48, align 8
  %51 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %39
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %10, i64 0, i32 14, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %40, i64 0, i32 14, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 %56, i32 %59, i32 %45) #10
  br label %60

60:                                               ; preds = %53, %39
  %61 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %10, i64 0, i32 5
  %62 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %61, align 8
  %63 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %62, null
  br i1 %63, label %64, label %9

64:                                               ; preds = %60, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler18PrepareUsesVisitor3RunEv(%"class.v8::internal::compiler::PrepareUsesVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  tail call void @_ZN2v88internal8compiler18PrepareUsesVisitor19InitializePlacementEPNS1_4NodeE(%"class.v8::internal::compiler::PrepareUsesVisitor"* %0, %"class.v8::internal::compiler::Node"* %5)
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %62, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %14 to i64*
  %16 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %14 to %"class.v8::internal::compiler::Node"***
  br label %17

17:                                               ; preds = %9, %59
  %18 = phi i64 [ %7, %9 ], [ %60, %59 ]
  %19 = load i64, i64* %10, align 8
  %20 = add i64 %18, -1
  %21 = add i64 %19, %20
  %22 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %23 = lshr i64 %21, 9
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %22, i64 %23
  %25 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, align 8
  %26 = and i64 %21, 511
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, i64 %26
  %28 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  store i64 %20, i64* %6, align 8
  %29 = load i64, i64* %13, align 8
  %30 = ptrtoint %"class.v8::internal::compiler::Node"*** %22 to i64
  %31 = sub i64 %29, %30
  %32 = icmp eq i64 %31, 0
  %33 = shl i64 %31, 6
  %34 = add i64 %33, -1
  %35 = select i1 %32, i64 0, i64 %34
  %36 = sub i64 1, %18
  %37 = sub i64 %36, %19
  %38 = add i64 %37, %35
  %39 = icmp ult i64 %38, 1024
  %40 = inttoptr i64 %29 to %"class.v8::internal::compiler::Node"***
  br i1 %39, label %59, label %41

41:                                               ; preds = %17
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %40, i64 -1
  %43 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %42, align 8
  %44 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %14, align 8
  %45 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %44, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ugt i64 %48, 512
  br i1 %49, label %56, label %50

50:                                               ; preds = %46, %41
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, i64 1
  %52 = bitcast %"class.v8::internal::compiler::Node"** %51 to i64*
  store i64 512, i64* %52, align 8
  %53 = load i64, i64* %15, align 8
  %54 = bitcast %"class.v8::internal::compiler::Node"** %43 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.v8::internal::compiler::Node"** %43, %"class.v8::internal::compiler::Node"*** %16, align 8
  %55 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %56

56:                                               ; preds = %50, %46
  %57 = phi %"class.v8::internal::compiler::Node"*** [ %40, %46 ], [ %55, %50 ]
  %58 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %57, i64 -1
  store %"class.v8::internal::compiler::Node"*** %58, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %59

59:                                               ; preds = %17, %56
  tail call void @_ZN2v88internal8compiler18PrepareUsesVisitor11VisitInputsEPNS1_4NodeE(%"class.v8::internal::compiler::PrepareUsesVisitor"* %0, %"class.v8::internal::compiler::Node"* %28)
  %60 = load i64, i64* %6, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %17

62:                                               ; preds = %59, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor3RunEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"*, %"class.v8::internal::ZoneVector.22"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"** %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  br label %20

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %14 to i64*
  %16 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load i64, i64* %17, align 8
  br label %33

20:                                               ; preds = %68, %8
  %21 = phi i64 [ %10, %8 ], [ %71, %68 ]
  %22 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %117, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %29 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %28 to i64*
  %30 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %28 to %"class.v8::internal::compiler::Node"***
  %31 = bitcast i64* %27 to <2 x i64>*
  %32 = bitcast i64* %27 to <2 x i64>*
  br label %74

33:                                               ; preds = %11, %68
  %34 = phi i64 [ %19, %11 ], [ %71, %68 ]
  %35 = phi %"class.v8::internal::compiler::Node"** [ %4, %11 ], [ %72, %68 ]
  %36 = bitcast %"class.v8::internal::compiler::Node"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %13, align 8
  %39 = load i64, i64* %15, align 8
  %40 = sub i64 %38, %39
  %41 = icmp eq i64 %40, 0
  %42 = shl i64 %40, 6
  %43 = add i64 %42, -1
  %44 = select i1 %41, i64 0, i64 %43
  %45 = load i64, i64* %16, align 8
  %46 = add i64 %34, %45
  %47 = icmp eq i64 %44, %46
  %48 = inttoptr i64 %39 to %"class.v8::internal::compiler::Node"***
  %49 = inttoptr i64 %38 to %"class.v8::internal::compiler::Node"***
  br i1 %47, label %50, label %56

50:                                               ; preds = %33
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %18) #10
  %51 = load i64, i64* %17, align 8
  %52 = load i64, i64* %16, align 8
  %53 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %54 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %55 = add i64 %52, %51
  br label %56

56:                                               ; preds = %50, %33
  %57 = phi i64 [ %55, %50 ], [ %46, %33 ]
  %58 = phi %"class.v8::internal::compiler::Node"*** [ %54, %50 ], [ %49, %33 ]
  %59 = phi %"class.v8::internal::compiler::Node"*** [ %53, %50 ], [ %48, %33 ]
  %60 = icmp eq %"class.v8::internal::compiler::Node"*** %58, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %56
  %62 = lshr i64 %57, 9
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %59, i64 %62
  %64 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %63, align 8
  %65 = and i64 %57, 511
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, i64 %65
  %67 = bitcast %"class.v8::internal::compiler::Node"** %66 to i64*
  br label %68

68:                                               ; preds = %56, %61
  %69 = phi i64* [ %67, %61 ], [ null, %56 ]
  store i64 %37, i64* %69, align 8
  %70 = load i64, i64* %17, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %17, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 1
  %73 = icmp eq %"class.v8::internal::compiler::Node"** %72, %6
  br i1 %73, label %20, label %33

74:                                               ; preds = %24, %114
  %75 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %25, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %75, i64 0, i32 11
  %77 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %76, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %77) #10
  %78 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %26, align 8
  %79 = load i64, i64* %27, align 8
  %80 = lshr i64 %79, 9
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %80
  %82 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %81, align 8
  %83 = and i64 %79, 511
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 %83
  %85 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, align 8
  tail call void @_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, %"class.v8::internal::compiler::Node"* %85)
  %86 = load <2 x i64>, <2 x i64>* %31, align 8
  %87 = add <2 x i64> %86, <i64 1, i64 -1>
  store <2 x i64> %87, <2 x i64>* %32, align 8
  %88 = extractelement <2 x i64> %87, i32 0
  %89 = icmp ult i64 %88, 1024
  %90 = extractelement <2 x i64> %87, i32 1
  br i1 %89, label %114, label %91

91:                                               ; preds = %74
  %92 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %26, align 8
  %93 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, align 8
  %94 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %28, align 8
  %95 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %94, i64 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp ugt i64 %98, 512
  br i1 %99, label %108, label %100

100:                                              ; preds = %96, %91
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %93, i64 1
  %102 = bitcast %"class.v8::internal::compiler::Node"** %101 to i64*
  store i64 512, i64* %102, align 8
  %103 = load i64, i64* %29, align 8
  %104 = bitcast %"class.v8::internal::compiler::Node"** %93 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.v8::internal::compiler::Node"** %93, %"class.v8::internal::compiler::Node"*** %30, align 8
  %105 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %26, align 8
  %106 = load i64, i64* %27, align 8
  %107 = load i64, i64* %22, align 8
  br label %108

108:                                              ; preds = %100, %96
  %109 = phi i64 [ %90, %96 ], [ %107, %100 ]
  %110 = phi i64 [ %88, %96 ], [ %106, %100 ]
  %111 = phi %"class.v8::internal::compiler::Node"*** [ %92, %96 ], [ %105, %100 ]
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %111, i64 1
  store %"class.v8::internal::compiler::Node"*** %112, %"class.v8::internal::compiler::Node"**** %26, align 8
  %113 = add i64 %110, -512
  store i64 %113, i64* %27, align 8
  br label %114

114:                                              ; preds = %74, %108
  %115 = phi i64 [ %90, %74 ], [ %109, %108 ]
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %74

117:                                              ; preds = %114, %20
  ret void
}

declare %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler19FuseFloatingControlEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::ZoneDeque", align 8
  %5 = alloca %"class.v8::internal::StdoutStream", align 8
  %6 = alloca %"class.v8::internal::ZoneVector.22", align 8
  %7 = alloca %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", align 8
  %8 = alloca %"class.v8::internal::StdoutStream", align 8
  %9 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %3
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.16, i64 0, i64 0)) #10
  %12 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %33, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.v8::internal::StdoutStream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = bitcast %"class.v8::internal::StdoutStream"* %5 to %"class.v8::internal::OFStream"*
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %18) #10
  %19 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %16, align 8
  %20 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %21 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %20, %"class.v8::base::RecursiveMutex"** %21, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %20) #10
  %22 = bitcast %"class.v8::internal::StdoutStream"* %5 to %"class.std::__1::basic_ostream"*
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %22, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0), i64 37) #10
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %25 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %24, align 8
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %22, %"class.v8::internal::compiler::Schedule"* dereferenceable(120) %25) #10
  %27 = bitcast %"class.v8::internal::StdoutStream"* %5 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 2
  %29 = bitcast %"class.std::__1::basic_ios.base"* %28 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %29, align 8
  %30 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %21, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %30) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %27, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %31) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %22, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %32 = bitcast %"class.std::__1::basic_ios.base"* %28 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %32) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %15) #10
  br label %33

33:                                               ; preds = %3, %11, %14
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 8
  %35 = load %"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::CFGBuilder"** %34, align 8
  call void @_ZN2v88internal8compiler10CFGBuilder3RunEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %35, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::Node"* %2)
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 9
  %37 = load %"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::compiler::SpecialRPONumberer"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  %39 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %38, align 8
  %40 = call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %39, %"class.v8::internal::compiler::Node"* %2) #10
  call void @_ZN2v88internal8compiler18SpecialRPONumberer26ComputeAndInsertSpecialRPOEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::SpecialRPONumberer"* %37, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %40) #10
  %41 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 5
  %42 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %42, null
  br i1 %43, label %102, label %248

44:                                               ; preds = %248
  %45 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %41, align 8
  %46 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %45, null
  br i1 %46, label %102, label %47

47:                                               ; preds = %44, %98
  %48 = phi %"class.v8::internal::compiler::BasicBlock"* [ %100, %98 ], [ %45, %44 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 13, i32 0, i32 0, i32 0
  %50 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 13, i32 0, i32 0, i32 1
  %52 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %51, align 8
  %53 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %50, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %53, i64 0, i32 2
  %55 = load i8, i8* %54, align 8, !range !5
  %56 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %50, i64 1
  %57 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %56, %52
  br i1 %57, label %77, label %58

58:                                               ; preds = %47, %72
  %59 = phi %"class.v8::internal::compiler::BasicBlock"** [ %75, %72 ], [ %56, %47 ]
  %60 = phi i8 [ %74, %72 ], [ %55, %47 ]
  %61 = phi %"class.v8::internal::compiler::BasicBlock"* [ %73, %72 ], [ %53, %47 ]
  %62 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %58
  %67 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* %61, %"class.v8::internal::compiler::BasicBlock"* %62) #10
  %68 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %68, i64 0, i32 2
  %70 = load i8, i8* %69, align 8, !range !5
  %71 = and i8 %70, %60
  br label %72

72:                                               ; preds = %66, %58
  %73 = phi %"class.v8::internal::compiler::BasicBlock"* [ %61, %58 ], [ %67, %66 ]
  %74 = phi i8 [ %60, %58 ], [ %71, %66 ]
  %75 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 1
  %76 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %75, %52
  br i1 %76, label %77, label %58

77:                                               ; preds = %72, %47
  %78 = phi %"class.v8::internal::compiler::BasicBlock"* [ %53, %47 ], [ %73, %72 ]
  %79 = phi i8 [ %55, %47 ], [ %74, %72 ]
  %80 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 4
  store %"class.v8::internal::compiler::BasicBlock"* %78, %"class.v8::internal::compiler::BasicBlock"** %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %78, i64 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = add nsw i32 %82, 1
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 3
  store i32 %83, i32* %84, align 4
  %85 = and i8 %79, 1
  %86 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 2
  %87 = load i8, i8* %86, align 8, !range !5
  %88 = or i8 %87, %85
  store i8 %88, i8* %86, align 8
  %89 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %77
  %92 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 14, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %78, i64 0, i32 14, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %96 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 %94, i32 %97, i32 %83) #10
  br label %98

98:                                               ; preds = %91, %77
  %99 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 5
  %100 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %99, align 8
  %101 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %100, null
  br i1 %101, label %102, label %47

102:                                              ; preds = %98, %33, %44
  %103 = bitcast %"class.v8::internal::ZoneVector.22"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #10
  %104 = load %"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::CFGBuilder"** %34, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %104, i64 0, i32 5
  %106 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %104, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %107 = bitcast %"class.v8::internal::Zone"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 2, i32 1
  %110 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %109 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 24, i1 false) #10
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %104, i64 0, i32 5, i32 0, i32 0, i32 1
  %112 = bitcast %"class.v8::internal::compiler::Node"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.v8::internal::ZoneVector.22"* %105 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %113, %115
  %117 = ashr exact i64 %116, 3
  %118 = icmp eq i64 %116, 0
  %119 = inttoptr i64 %108 to %"class.v8::internal::Zone"*
  %120 = inttoptr i64 %113 to %"class.v8::internal::compiler::Node"**
  br i1 %118, label %232, label %121

121:                                              ; preds = %102
  %122 = icmp ugt i64 %117, 268435455
  br i1 %122, label %123, label %125

123:                                              ; preds = %121
  %124 = bitcast %"class.v8::internal::ZoneVector.22"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %124) #11
  unreachable

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %119, i64 0, i32 2
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %119, i64 0, i32 3
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %129, %127
  %131 = icmp ugt i64 %116, %130
  br i1 %131, label %132, label %134, !prof !2

132:                                              ; preds = %125
  %133 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %119, i64 %116) #10
  br label %136

134:                                              ; preds = %125
  %135 = add i64 %127, %116
  store i64 %135, i64* %126, align 8
  br label %136

136:                                              ; preds = %134, %132
  %137 = phi i64 [ %133, %132 ], [ %127, %134 ]
  %138 = inttoptr i64 %137 to %"class.v8::internal::compiler::Node"**
  %139 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Node"** %138, %"class.v8::internal::compiler::Node"*** %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"** %138, %"class.v8::internal::compiler::Node"*** %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 %117
  %142 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"** %141, %"class.v8::internal::compiler::Node"*** %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %105, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %143, align 8
  %145 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %111, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  %147 = icmp eq %"class.v8::internal::compiler::Node"** %144, %145
  br i1 %147, label %226, label %148

148:                                              ; preds = %136
  %149 = ptrtoint %"class.v8::internal::compiler::Node"** %144 to i64
  %150 = inttoptr i64 %137 to i64*
  %151 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -1
  %152 = ptrtoint %"class.v8::internal::compiler::Node"** %151 to i64
  %153 = sub i64 %152, %149
  %154 = lshr i64 %153, 3
  %155 = add nuw nsw i64 %154, 1
  %156 = and i64 %155, 7
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %172, label %158

158:                                              ; preds = %148, %158
  %159 = phi %"class.v8::internal::compiler::Node"** [ %166, %158 ], [ %138, %148 ]
  %160 = phi i64* [ %167, %158 ], [ %150, %148 ]
  %161 = phi %"class.v8::internal::compiler::Node"** [ %165, %158 ], [ %144, %148 ]
  %162 = phi i64 [ %168, %158 ], [ %156, %148 ]
  %163 = bitcast %"class.v8::internal::compiler::Node"** %161 to i64*
  %164 = load i64, i64* %163, align 8
  store i64 %164, i64* %160, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 1
  %166 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %159, i64 1
  %167 = bitcast %"class.v8::internal::compiler::Node"** %166 to i64*
  %168 = add i64 %162, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %158, !llvm.loop !33

170:                                              ; preds = %158
  %171 = bitcast %"class.v8::internal::compiler::Node"** %166 to i64*
  br label %172

172:                                              ; preds = %148, %170
  %173 = phi %"class.v8::internal::compiler::Node"** [ undef, %148 ], [ %166, %170 ]
  %174 = phi %"class.v8::internal::compiler::Node"** [ %138, %148 ], [ %166, %170 ]
  %175 = phi i64* [ %150, %148 ], [ %171, %170 ]
  %176 = phi %"class.v8::internal::compiler::Node"** [ %144, %148 ], [ %165, %170 ]
  %177 = icmp ult i64 %153, 56
  br i1 %177, label %223, label %178

178:                                              ; preds = %172, %178
  %179 = phi %"class.v8::internal::compiler::Node"** [ %220, %178 ], [ %174, %172 ]
  %180 = phi i64* [ %222, %178 ], [ %175, %172 ]
  %181 = phi %"class.v8::internal::compiler::Node"** [ %219, %178 ], [ %176, %172 ]
  %182 = bitcast %"class.v8::internal::compiler::Node"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %180, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 1
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"** %185 to i64*
  %187 = bitcast %"class.v8::internal::compiler::Node"** %184 to i64*
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %186, align 8
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 2
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 2
  %191 = bitcast %"class.v8::internal::compiler::Node"** %190 to i64*
  %192 = bitcast %"class.v8::internal::compiler::Node"** %189 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 3
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 3
  %196 = bitcast %"class.v8::internal::compiler::Node"** %195 to i64*
  %197 = bitcast %"class.v8::internal::compiler::Node"** %194 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 4
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 4
  %201 = bitcast %"class.v8::internal::compiler::Node"** %200 to i64*
  %202 = bitcast %"class.v8::internal::compiler::Node"** %199 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 5
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 5
  %206 = bitcast %"class.v8::internal::compiler::Node"** %205 to i64*
  %207 = bitcast %"class.v8::internal::compiler::Node"** %204 to i64*
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %206, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 6
  %210 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 6
  %211 = bitcast %"class.v8::internal::compiler::Node"** %210 to i64*
  %212 = bitcast %"class.v8::internal::compiler::Node"** %209 to i64*
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %211, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 7
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 7
  %216 = bitcast %"class.v8::internal::compiler::Node"** %215 to i64*
  %217 = bitcast %"class.v8::internal::compiler::Node"** %214 to i64*
  %218 = load i64, i64* %217, align 8
  store i64 %218, i64* %216, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 8
  %221 = icmp eq %"class.v8::internal::compiler::Node"** %219, %145
  %222 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  br i1 %221, label %223, label %178

223:                                              ; preds = %178, %172
  %224 = phi %"class.v8::internal::compiler::Node"** [ %173, %172 ], [ %220, %178 ]
  %225 = ptrtoint %"class.v8::internal::compiler::Node"** %224 to i64
  br label %226

226:                                              ; preds = %223, %136
  %227 = phi %"class.v8::internal::compiler::Node"** [ %224, %223 ], [ %138, %136 ]
  %228 = phi i64 [ %225, %223 ], [ %137, %136 ]
  store i64 %228, i64* %146, align 8
  %229 = load %"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::CFGBuilder"** %34, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %229, i64 0, i32 5, i32 0, i32 0, i32 1
  %231 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %230, align 8
  br label %232

232:                                              ; preds = %102, %226
  %233 = phi %"class.v8::internal::compiler::Node"** [ null, %102 ], [ %227, %226 ]
  %234 = phi %"class.v8::internal::compiler::Node"** [ %120, %102 ], [ %231, %226 ]
  %235 = phi %"class.v8::internal::compiler::CFGBuilder"* [ %104, %102 ], [ %229, %226 ]
  %236 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %235, i64 0, i32 5, i32 0, i32 0, i32 0
  %237 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %236, align 8
  %238 = icmp eq %"class.v8::internal::compiler::Node"** %237, %234
  br i1 %238, label %255, label %239

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %241 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 1
  %242 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %243 = bitcast %"class.v8::internal::compiler::Node"*** %241 to i64*
  %244 = bitcast %"class.v8::internal::ZoneVector.22"* %6 to i64*
  %245 = bitcast %"class.v8::internal::compiler::Node"*** %242 to i64*
  %246 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %247 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 0
  br label %258

248:                                              ; preds = %33, %248
  %249 = phi %"class.v8::internal::compiler::BasicBlock"* [ %253, %248 ], [ %42, %33 ]
  %250 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %249, i64 0, i32 3
  store i32 -1, i32* %250, align 4
  %251 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %249, i64 0, i32 4
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %249, i64 0, i32 5
  %253 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %252, align 8
  %254 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %253, null
  br i1 %254, label %44, label %248

255:                                              ; preds = %266, %232
  %256 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %563, label %537

258:                                              ; preds = %239, %266
  %259 = phi %"class.v8::internal::compiler::Node"** [ %233, %239 ], [ %267, %266 ]
  %260 = phi %"class.v8::internal::compiler::Node"** [ %237, %239 ], [ %268, %266 ]
  %261 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %260, align 8
  %262 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %261, i64 0, i32 4
  %263 = bitcast %"struct.v8::internal::compiler::Node::Use"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %270

266:                                              ; preds = %532, %258
  %267 = phi %"class.v8::internal::compiler::Node"** [ %259, %258 ], [ %533, %532 ]
  %268 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %260, i64 1
  %269 = icmp eq %"class.v8::internal::compiler::Node"** %268, %234
  br i1 %269, label %255, label %258

270:                                              ; preds = %258, %532
  %271 = phi %"class.v8::internal::compiler::Node"** [ %533, %532 ], [ %259, %258 ]
  %272 = phi i64 [ %535, %532 ], [ %264, %258 ]
  %273 = inttoptr i64 %272 to %"struct.v8::internal::compiler::Node::Use"*
  %274 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %273, i64 1
  %275 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %273, i64 0, i32 2
  %276 = load i32, i32* %275, align 8
  %277 = lshr i32 %276, 1
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %274, i64 %278
  %280 = and i32 %276, 1
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %284, label %282

282:                                              ; preds = %270
  %283 = bitcast %"struct.v8::internal::compiler::Node::Use"* %279 to %"class.v8::internal::compiler::Node"*
  br label %287

284:                                              ; preds = %270
  %285 = bitcast %"struct.v8::internal::compiler::Node::Use"* %279 to %"class.v8::internal::compiler::Node"**
  %286 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %285, align 8
  br label %287

287:                                              ; preds = %282, %284
  %288 = phi %"class.v8::internal::compiler::Node"* [ %283, %282 ], [ %286, %284 ]
  %289 = ptrtoint %"class.v8::internal::compiler::Node"* %288 to i64
  %290 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %288, i64 0, i32 0
  %291 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %290, align 8
  %292 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %291, i64 0, i32 2
  %293 = load i16, i16* %292, align 8
  %294 = zext i16 %293 to i32
  %295 = add nsw i32 %294, -35
  %296 = icmp ult i32 %295, 2
  br i1 %296, label %297, label %532

297:                                              ; preds = %287
  %298 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %288, i64 0, i32 3
  %299 = load i32, i32* %298, align 4
  %300 = and i32 %299, 16777215
  %301 = zext i32 %300 to i64
  %302 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %240, align 8
  %303 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %302, i64 %301, i32 2
  %304 = load i32, i32* %303, align 4
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %532, label %306

306:                                              ; preds = %297
  %307 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %242, align 8
  %308 = icmp eq %"class.v8::internal::compiler::Node"** %271, %307
  br i1 %308, label %313, label %309

309:                                              ; preds = %306
  %310 = bitcast %"class.v8::internal::compiler::Node"** %271 to i64*
  store i64 %289, i64* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %271, i64 1
  %312 = ptrtoint %"class.v8::internal::compiler::Node"** %311 to i64
  store i64 %312, i64* %243, align 8
  br label %532

313:                                              ; preds = %306
  %314 = ptrtoint %"class.v8::internal::compiler::Node"** %307 to i64
  %315 = load i64, i64* %244, align 8
  %316 = sub i64 %314, %315
  %317 = ashr exact i64 %316, 3
  %318 = add nsw i64 %317, 1
  %319 = icmp ugt i64 %318, 268435455
  br i1 %319, label %320, label %322

320:                                              ; preds = %313
  %321 = bitcast %"class.v8::internal::ZoneVector.22"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %321) #11
  unreachable

322:                                              ; preds = %313
  %323 = icmp ult i64 %317, 134217727
  br i1 %323, label %324, label %329

324:                                              ; preds = %322
  %325 = ashr exact i64 %316, 2
  %326 = icmp ult i64 %325, %318
  %327 = select i1 %326, i64 %318, i64 %325
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %346, label %329

329:                                              ; preds = %324, %322
  %330 = phi i64 [ %327, %324 ], [ 268435455, %322 ]
  %331 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %246, align 8
  %332 = shl i64 %330, 3
  %333 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %331, i64 0, i32 2
  %334 = load i64, i64* %333, align 8
  %335 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %331, i64 0, i32 3
  %336 = load i64, i64* %335, align 8
  %337 = sub i64 %336, %334
  %338 = icmp ugt i64 %332, %337
  br i1 %338, label %339, label %341, !prof !2

339:                                              ; preds = %329
  %340 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %331, i64 %332) #10
  br label %343

341:                                              ; preds = %329
  %342 = add i64 %334, %332
  store i64 %342, i64* %333, align 8
  br label %343

343:                                              ; preds = %341, %339
  %344 = phi i64 [ %340, %339 ], [ %334, %341 ]
  %345 = inttoptr i64 %344 to %"class.v8::internal::compiler::Node"**
  br label %346

346:                                              ; preds = %343, %324
  %347 = phi i64 [ %330, %343 ], [ 0, %324 ]
  %348 = phi %"class.v8::internal::compiler::Node"** [ %345, %343 ], [ null, %324 ]
  %349 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %348, i64 %317
  %350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %348, i64 %347
  %351 = ptrtoint %"class.v8::internal::compiler::Node"** %350 to i64
  %352 = bitcast %"class.v8::internal::compiler::Node"** %349 to i64*
  store i64 %289, i64* %352, align 8
  %353 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, i64 1
  %354 = ptrtoint %"class.v8::internal::compiler::Node"** %353 to i64
  %355 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %247, align 8
  %356 = ptrtoint %"class.v8::internal::compiler::Node"** %355 to i64
  %357 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %241, align 8
  %358 = icmp eq %"class.v8::internal::compiler::Node"** %357, %355
  br i1 %358, label %529, label %359

359:                                              ; preds = %346
  %360 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 -1
  %361 = ptrtoint %"class.v8::internal::compiler::Node"** %360 to i64
  %362 = sub i64 %361, %356
  %363 = lshr i64 %362, 3
  %364 = add nuw nsw i64 %363, 1
  %365 = icmp ult i64 %364, 4
  br i1 %365, label %459, label %366

366:                                              ; preds = %359
  %367 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %348, i64 -1
  %368 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 -1
  %369 = ptrtoint %"class.v8::internal::compiler::Node"** %368 to i64
  %370 = sub i64 %369, %356
  %371 = lshr i64 %370, 3
  %372 = sub nsw i64 %317, %371
  %373 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %367, i64 %372
  %374 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 -1
  %375 = sub nsw i64 0, %371
  %376 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %374, i64 %375
  %377 = icmp ult %"class.v8::internal::compiler::Node"** %373, %357
  %378 = icmp ult %"class.v8::internal::compiler::Node"** %376, %349
  %379 = and i1 %377, %378
  br i1 %379, label %459, label %380

380:                                              ; preds = %366
  %381 = and i64 %364, 4611686018427387900
  %382 = sub nsw i64 0, %381
  %383 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, i64 %382
  %384 = sub nsw i64 0, %381
  %385 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 %384
  %386 = add nsw i64 %381, -4
  %387 = lshr exact i64 %386, 2
  %388 = add nuw nsw i64 %387, 1
  %389 = and i64 %388, 1
  %390 = icmp eq i64 %386, 0
  br i1 %390, label %435, label %391

391:                                              ; preds = %380
  %392 = sub nuw nsw i64 %388, %389
  %393 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, i64 -1
  %394 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 -1
  %395 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, i64 -1
  %396 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 -1
  br label %397

397:                                              ; preds = %397, %391
  %398 = phi i64 [ 0, %391 ], [ %432, %397 ]
  %399 = phi i64 [ %392, %391 ], [ %433, %397 ]
  %400 = sub i64 0, %398
  %401 = sub i64 0, %398
  %402 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %393, i64 %400
  %403 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %394, i64 %401
  %404 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %403, i64 -1
  %405 = bitcast %"class.v8::internal::compiler::Node"** %404 to <2 x i64>*
  %406 = load <2 x i64>, <2 x i64>* %405, align 8, !alias.scope !34
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %403, i64 -2
  %408 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %407, i64 -1
  %409 = bitcast %"class.v8::internal::compiler::Node"** %408 to <2 x i64>*
  %410 = load <2 x i64>, <2 x i64>* %409, align 8, !alias.scope !34
  %411 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %402, i64 -1
  %412 = bitcast %"class.v8::internal::compiler::Node"** %411 to <2 x i64>*
  store <2 x i64> %406, <2 x i64>* %412, align 8, !alias.scope !37, !noalias !34
  %413 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %402, i64 -2
  %414 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %413, i64 -1
  %415 = bitcast %"class.v8::internal::compiler::Node"** %414 to <2 x i64>*
  store <2 x i64> %410, <2 x i64>* %415, align 8, !alias.scope !37, !noalias !34
  %416 = sub nuw nsw i64 -4, %398
  %417 = sub nuw nsw i64 -4, %398
  %418 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %395, i64 %416
  %419 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %396, i64 %417
  %420 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %419, i64 -1
  %421 = bitcast %"class.v8::internal::compiler::Node"** %420 to <2 x i64>*
  %422 = load <2 x i64>, <2 x i64>* %421, align 8, !alias.scope !34
  %423 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %419, i64 -2
  %424 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %423, i64 -1
  %425 = bitcast %"class.v8::internal::compiler::Node"** %424 to <2 x i64>*
  %426 = load <2 x i64>, <2 x i64>* %425, align 8, !alias.scope !34
  %427 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %418, i64 -1
  %428 = bitcast %"class.v8::internal::compiler::Node"** %427 to <2 x i64>*
  store <2 x i64> %422, <2 x i64>* %428, align 8, !alias.scope !37, !noalias !34
  %429 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %418, i64 -2
  %430 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %429, i64 -1
  %431 = bitcast %"class.v8::internal::compiler::Node"** %430 to <2 x i64>*
  store <2 x i64> %426, <2 x i64>* %431, align 8, !alias.scope !37, !noalias !34
  %432 = add i64 %398, 8
  %433 = add i64 %399, -2
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %397, !llvm.loop !39

435:                                              ; preds = %397, %380
  %436 = phi i64 [ 0, %380 ], [ %432, %397 ]
  %437 = icmp eq i64 %389, 0
  br i1 %437, label %457, label %438

438:                                              ; preds = %435
  %439 = sub i64 0, %436
  %440 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, i64 -1
  %441 = sub i64 0, %436
  %442 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 -1
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %440, i64 %439
  %444 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %442, i64 %441
  %445 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %444, i64 -1
  %446 = bitcast %"class.v8::internal::compiler::Node"** %445 to <2 x i64>*
  %447 = load <2 x i64>, <2 x i64>* %446, align 8, !alias.scope !34
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %444, i64 -2
  %449 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %448, i64 -1
  %450 = bitcast %"class.v8::internal::compiler::Node"** %449 to <2 x i64>*
  %451 = load <2 x i64>, <2 x i64>* %450, align 8, !alias.scope !34
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %443, i64 -1
  %453 = bitcast %"class.v8::internal::compiler::Node"** %452 to <2 x i64>*
  store <2 x i64> %447, <2 x i64>* %453, align 8, !alias.scope !37, !noalias !34
  %454 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %443, i64 -2
  %455 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %454, i64 -1
  %456 = bitcast %"class.v8::internal::compiler::Node"** %455 to <2 x i64>*
  store <2 x i64> %451, <2 x i64>* %456, align 8, !alias.scope !37, !noalias !34
  br label %457

457:                                              ; preds = %435, %438
  %458 = icmp eq i64 %364, %381
  br i1 %458, label %529, label %459

459:                                              ; preds = %457, %366, %359
  %460 = phi %"class.v8::internal::compiler::Node"** [ %349, %366 ], [ %349, %359 ], [ %383, %457 ]
  %461 = phi %"class.v8::internal::compiler::Node"** [ %357, %366 ], [ %357, %359 ], [ %385, %457 ]
  %462 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %461, i64 -1
  %463 = ptrtoint %"class.v8::internal::compiler::Node"** %462 to i64
  %464 = sub i64 %463, %356
  %465 = lshr i64 %464, 3
  %466 = add nuw nsw i64 %465, 1
  %467 = and i64 %466, 7
  %468 = icmp eq i64 %467, 0
  br i1 %468, label %480, label %469

469:                                              ; preds = %459, %469
  %470 = phi %"class.v8::internal::compiler::Node"** [ %473, %469 ], [ %460, %459 ]
  %471 = phi %"class.v8::internal::compiler::Node"** [ %474, %469 ], [ %461, %459 ]
  %472 = phi i64 [ %478, %469 ], [ %467, %459 ]
  %473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %470, i64 -1
  %474 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %471, i64 -1
  %475 = bitcast %"class.v8::internal::compiler::Node"** %474 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = bitcast %"class.v8::internal::compiler::Node"** %473 to i64*
  store i64 %476, i64* %477, align 8
  %478 = add i64 %472, -1
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %480, label %469, !llvm.loop !40

480:                                              ; preds = %469, %459
  %481 = phi %"class.v8::internal::compiler::Node"** [ undef, %459 ], [ %473, %469 ]
  %482 = phi %"class.v8::internal::compiler::Node"** [ %460, %459 ], [ %473, %469 ]
  %483 = phi %"class.v8::internal::compiler::Node"** [ %461, %459 ], [ %474, %469 ]
  %484 = icmp ult i64 %464, 56
  br i1 %484, label %529, label %485

485:                                              ; preds = %480, %485
  %486 = phi %"class.v8::internal::compiler::Node"** [ %523, %485 ], [ %482, %480 ]
  %487 = phi %"class.v8::internal::compiler::Node"** [ %524, %485 ], [ %483, %480 ]
  %488 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 -1
  %489 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -1
  %490 = bitcast %"class.v8::internal::compiler::Node"** %489 to i64*
  %491 = load i64, i64* %490, align 8
  %492 = bitcast %"class.v8::internal::compiler::Node"** %488 to i64*
  store i64 %491, i64* %492, align 8
  %493 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 -2
  %494 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -2
  %495 = bitcast %"class.v8::internal::compiler::Node"** %494 to i64*
  %496 = load i64, i64* %495, align 8
  %497 = bitcast %"class.v8::internal::compiler::Node"** %493 to i64*
  store i64 %496, i64* %497, align 8
  %498 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 -3
  %499 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -3
  %500 = bitcast %"class.v8::internal::compiler::Node"** %499 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = bitcast %"class.v8::internal::compiler::Node"** %498 to i64*
  store i64 %501, i64* %502, align 8
  %503 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 -4
  %504 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -4
  %505 = bitcast %"class.v8::internal::compiler::Node"** %504 to i64*
  %506 = load i64, i64* %505, align 8
  %507 = bitcast %"class.v8::internal::compiler::Node"** %503 to i64*
  store i64 %506, i64* %507, align 8
  %508 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 -5
  %509 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -5
  %510 = bitcast %"class.v8::internal::compiler::Node"** %509 to i64*
  %511 = load i64, i64* %510, align 8
  %512 = bitcast %"class.v8::internal::compiler::Node"** %508 to i64*
  store i64 %511, i64* %512, align 8
  %513 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 -6
  %514 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -6
  %515 = bitcast %"class.v8::internal::compiler::Node"** %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.v8::internal::compiler::Node"** %513 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 -7
  %519 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -7
  %520 = bitcast %"class.v8::internal::compiler::Node"** %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = bitcast %"class.v8::internal::compiler::Node"** %518 to i64*
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, i64 -8
  %524 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -8
  %525 = bitcast %"class.v8::internal::compiler::Node"** %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = bitcast %"class.v8::internal::compiler::Node"** %523 to i64*
  store i64 %526, i64* %527, align 8
  %528 = icmp eq %"class.v8::internal::compiler::Node"** %524, %355
  br i1 %528, label %529, label %485, !llvm.loop !41

529:                                              ; preds = %480, %485, %457, %346
  %530 = phi %"class.v8::internal::compiler::Node"** [ %349, %346 ], [ %383, %457 ], [ %481, %480 ], [ %523, %485 ]
  %531 = ptrtoint %"class.v8::internal::compiler::Node"** %530 to i64
  store i64 %531, i64* %244, align 8
  store i64 %354, i64* %243, align 8
  store i64 %351, i64* %245, align 8
  br label %532

532:                                              ; preds = %297, %529, %309, %287
  %533 = phi %"class.v8::internal::compiler::Node"** [ %271, %297 ], [ %353, %529 ], [ %311, %309 ], [ %271, %287 ]
  %534 = inttoptr i64 %272 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %266, label %270

537:                                              ; preds = %255
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)) #10
  %538 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 0
  %539 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %538, align 8
  %540 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 1
  %541 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %540, align 8
  %542 = icmp eq %"class.v8::internal::compiler::Node"** %539, %541
  br i1 %542, label %543, label %546

543:                                              ; preds = %559, %537
  %544 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %545 = icmp eq i8 %544, 0
  br i1 %545, label %563, label %562

546:                                              ; preds = %537, %559
  %547 = phi %"class.v8::internal::compiler::Node"** [ %560, %559 ], [ %539, %537 ]
  %548 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %547, align 8
  %549 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %550 = icmp eq i8 %549, 0
  br i1 %550, label %559, label %551

551:                                              ; preds = %546
  %552 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %548, i64 0, i32 3
  %553 = load i32, i32* %552, align 4
  %554 = and i32 %553, 16777215
  %555 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %548, i64 0, i32 0
  %556 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %555, align 8
  %557 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %556, i64 0, i32 1
  %558 = load i8*, i8** %557, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i32 %554, i8* %558) #10
  br label %559

559:                                              ; preds = %546, %551
  %560 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %547, i64 1
  %561 = icmp eq %"class.v8::internal::compiler::Node"** %560, %541
  br i1 %561, label %543, label %546

562:                                              ; preds = %543
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %563

563:                                              ; preds = %543, %255, %562
  %564 = bitcast %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %564) #10
  %565 = bitcast %"class.v8::internal::compiler::Scheduler"* %0 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %7, i64 0, i32 0
  store %"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::Scheduler"** %567, align 8
  %568 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %7, i64 0, i32 1
  %569 = bitcast %"class.v8::internal::compiler::Schedule"** %38 to i64*
  %570 = load i64, i64* %569, align 8
  %571 = bitcast %"class.v8::internal::compiler::Schedule"** %568 to i64*
  store i64 %570, i64* %571, align 8
  %572 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %7, i64 0, i32 2
  %573 = bitcast %"class.v8::internal::ZoneDeque"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %573) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %573, i8 0, i64 32, i1 false) #10
  %574 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %575 = bitcast %"struct.std::__1::__compressed_pair_elem.35"* %574 to i64*
  store i64 %566, i64* %575, align 8
  %576 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %577 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %576 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %577, i8 0, i64 24, i1 false) #10
  %578 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2, i32 1
  %579 = bitcast %"struct.std::__1::__compressed_pair_elem.39"* %578 to i64*
  store i64 %566, i64* %579, align 8
  %580 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %580, align 8
  %581 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %582 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3
  %583 = bitcast %"class.std::__1::__compressed_pair.33"* %581 to i8*
  %584 = bitcast %"class.std::__1::__compressed_pair.33"* %582 to i8*
  %585 = bitcast %"class.v8::internal::ZoneQueue"* %572 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %585, i8 0, i64 24, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %583, i8* align 8 %584, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %573, i8 0, i64 32, i1 false) #10
  %586 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %587 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %586, align 8
  %588 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2
  %589 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2
  %590 = bitcast %"class.std::__1::__compressed_pair.37"* %588 to i8*
  %591 = bitcast %"class.std::__1::__compressed_pair.37"* %589 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %590, i8* align 8 %591, i64 24, i1 false) #10
  %592 = bitcast i64* %587 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %592, i8 0, i64 16, i1 false) #10
  %593 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %593) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %573) #10
  call void @_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor3RunEPNS0_10ZoneVectorIPNS1_4NodeEEE(%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* nonnull %7, %"class.v8::internal::ZoneVector.22"* nonnull %6)
  %594 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0
  %595 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %38, align 8
  %596 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %595, i64 0, i32 1, i32 0
  %597 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %595, i64 0, i32 1, i32 0, i32 0, i32 1
  %598 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %597 to i64*
  %599 = load i64, i64* %598, align 8
  %600 = bitcast %"class.std::__1::vector.12"* %596 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = sub i64 %599, %601
  %603 = ashr exact i64 %602, 3
  %604 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %605 = bitcast %"class.v8::internal::ZoneVector.22"*** %604 to i64*
  %606 = load i64, i64* %605, align 8
  %607 = bitcast %"class.std::__1::vector.20"* %594 to i64*
  %608 = load i64, i64* %607, align 8
  %609 = sub i64 %606, %608
  %610 = ashr exact i64 %609, 3
  %611 = icmp ugt i64 %603, %610
  %612 = inttoptr i64 %608 to %"class.v8::internal::ZoneVector.22"**
  br i1 %611, label %613, label %616

613:                                              ; preds = %563
  %614 = sub nsw i64 %603, %610
  call void @_ZNSt3__16vectorIPN2v88internal10ZoneVectorIPNS2_8compiler4NodeEEENS2_13ZoneAllocatorIS8_EEE8__appendEm(%"class.std::__1::vector.20"* %594, i64 %614) #10
  %615 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %38, align 8
  br label %620

616:                                              ; preds = %563
  %617 = icmp ult i64 %603, %610
  br i1 %617, label %618, label %620

618:                                              ; preds = %616
  %619 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %612, i64 %603
  store %"class.v8::internal::ZoneVector.22"** %619, %"class.v8::internal::ZoneVector.22"*** %604, align 8
  br label %620

620:                                              ; preds = %613, %616, %618
  %621 = phi %"class.v8::internal::compiler::Schedule"* [ %615, %613 ], [ %595, %616 ], [ %595, %618 ]
  %622 = call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %621, %"class.v8::internal::compiler::Node"* %2) #10
  call void @_ZN2v88internal8compiler9Scheduler16MovePlannedNodesEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Scheduler"* %0, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %622)
  %623 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %624 = icmp eq i8 %623, 0
  br i1 %624, label %643, label %625

625:                                              ; preds = %620
  %626 = bitcast %"class.v8::internal::StdoutStream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %626) #10
  %627 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %627, align 8
  %628 = bitcast %"class.v8::internal::StdoutStream"* %8 to %"class.v8::internal::OFStream"*
  %629 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %628, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %629) #10
  %630 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %630, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %627, align 8
  %631 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %632 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %631, %"class.v8::base::RecursiveMutex"** %632, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %631) #10
  %633 = bitcast %"class.v8::internal::StdoutStream"* %8 to %"class.std::__1::basic_ostream"*
  %634 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %633, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i64 36) #10
  %635 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %38, align 8
  %636 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %633, %"class.v8::internal::compiler::Schedule"* dereferenceable(120) %635) #10
  %637 = bitcast %"class.v8::internal::StdoutStream"* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %637, align 8
  %638 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 2
  %639 = bitcast %"class.std::__1::basic_ios.base"* %638 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %639, align 8
  %640 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %632, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %640) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %637, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %639, align 8
  %641 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %641) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %633, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %642 = bitcast %"class.std::__1::basic_ios.base"* %638 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %642) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %626) #10
  br label %643

643:                                              ; preds = %620, %625
  %644 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* %644) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %564) #10
  %645 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 0
  %646 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %645, align 8
  %647 = icmp eq %"class.v8::internal::compiler::Node"** %646, null
  br i1 %647, label %652, label %648

648:                                              ; preds = %643
  %649 = ptrtoint %"class.v8::internal::compiler::Node"** %646 to i64
  %650 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %6, i64 0, i32 0, i32 0, i32 1
  %651 = bitcast %"class.v8::internal::compiler::Node"*** %650 to i64*
  store i64 %649, i64* %651, align 8
  br label %652

652:                                              ; preds = %643, %648
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder3RunEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 5, i32 0
  %5 = bitcast %"class.std::__1::vector.23"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZN2v88internal8compiler10CFGBuilder5QueueEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %2)
  %9 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 6
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 7
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %11, align 8
  %13 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %12, %"class.v8::internal::compiler::Node"* %2) #10
  %14 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 8
  store %"class.v8::internal::compiler::BasicBlock"* %13, %"class.v8::internal::compiler::BasicBlock"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %16 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %16, i64 0, i32 10
  %18 = load %"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::ControlEquivalence"** %17, align 8
  tail call void @_ZN2v88internal8compiler18ControlEquivalence3RunEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"* %18, %"class.v8::internal::compiler::Node"* %2) #10
  %19 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %205, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %26 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %25 to i64*
  %27 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %25 to %"class.v8::internal::compiler::Node"***
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %29 = bitcast i64* %24 to <2 x i64>*
  %30 = bitcast i64* %24 to <2 x i64>*
  br label %31

31:                                               ; preds = %22, %202
  %32 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %15, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %32, i64 0, i32 11
  %34 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %33, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %34) #10
  %35 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %23, align 8
  %36 = load <2 x i64>, <2 x i64>* %29, align 8
  %37 = extractelement <2 x i64> %36, i32 0
  %38 = lshr i64 %37, 9
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %38
  %40 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %39, align 8
  %41 = and i64 %37, 511
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 %41
  %43 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, align 8
  %44 = add <2 x i64> %36, <i64 1, i64 -1>
  store <2 x i64> %44, <2 x i64>* %30, align 8
  %45 = extractelement <2 x i64> %44, i32 0
  %46 = icmp ult i64 %45, 1024
  br i1 %46, label %67, label %47

47:                                               ; preds = %31
  %48 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, align 8
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %25, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ugt i64 %53, 512
  br i1 %54, label %62, label %55

55:                                               ; preds = %51, %47
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, i64 1
  %57 = bitcast %"class.v8::internal::compiler::Node"** %56 to i64*
  store i64 512, i64* %57, align 8
  %58 = load i64, i64* %26, align 8
  %59 = bitcast %"class.v8::internal::compiler::Node"** %48 to i64*
  store i64 %58, i64* %59, align 8
  store %"class.v8::internal::compiler::Node"** %48, %"class.v8::internal::compiler::Node"*** %27, align 8
  %60 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %23, align 8
  %61 = load i64, i64* %24, align 8
  br label %62

62:                                               ; preds = %55, %51
  %63 = phi i64 [ %45, %51 ], [ %61, %55 ]
  %64 = phi %"class.v8::internal::compiler::Node"*** [ %35, %51 ], [ %60, %55 ]
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %64, i64 1
  store %"class.v8::internal::compiler::Node"*** %65, %"class.v8::internal::compiler::Node"**** %23, align 8
  %66 = add i64 %63, -512
  store i64 %66, i64* %24, align 8
  br label %67

67:                                               ; preds = %31, %62
  %68 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %15, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %68, i64 0, i32 10
  %70 = load %"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::ControlEquivalence"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %43, i64 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, 16777215
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %70, i64 0, i32 4, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %70, i64 0, i32 4, i32 0, i32 0, i32 1
  %77 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::vector.70"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = icmp ugt i64 %82, %74
  %84 = inttoptr i64 %80 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br i1 %83, label %102, label %85

85:                                               ; preds = %67
  %86 = add nuw nsw i64 %74, 1
  %87 = sub nsw i64 %86, %82
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.70"* %75, i64 %87) #10
  %88 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %75, i64 0, i32 0, i32 0
  %89 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %88, align 8
  %90 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %15, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %90, i64 0, i32 10
  %92 = load %"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::ControlEquivalence"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %92, i64 0, i32 4, i32 0, i32 0, i32 1
  %94 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %92, i64 0, i32 4, i32 0
  %97 = bitcast %"class.std::__1::vector.70"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %95, %98
  %100 = ashr exact i64 %99, 3
  %101 = inttoptr i64 %98 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br label %102

102:                                              ; preds = %85, %67
  %103 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %84, %67 ], [ %101, %85 ]
  %104 = phi i64 [ %82, %67 ], [ %100, %85 ]
  %105 = phi %"class.v8::internal::compiler::ControlEquivalence"* [ %70, %67 ], [ %92, %85 ]
  %106 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %84, %67 ], [ %89, %85 ]
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %106, i64 %74
  %108 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %107, align 8
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %108, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = load i32, i32* %28, align 4
  %112 = and i32 %111, 16777215
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.v8::internal::compiler::ControlEquivalence", %"class.v8::internal::compiler::ControlEquivalence"* %105, i64 0, i32 4, i32 0
  %115 = icmp ugt i64 %104, %113
  br i1 %115, label %121, label %116

116:                                              ; preds = %102
  %117 = sub nsw i64 1, %104
  %118 = add nsw i64 %117, %113
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.70"* %114, i64 %118) #10
  %119 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %114, i64 0, i32 0, i32 0
  %120 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %119, align 8
  br label %121

121:                                              ; preds = %102, %116
  %122 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %120, %116 ], [ %103, %102 ]
  %123 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %122, i64 %113
  %124 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %123, align 8
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData", %"struct.v8::internal::compiler::ControlEquivalence::NodeData"* %124, i64 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = icmp ne %"class.v8::internal::compiler::Node"* %43, %2
  %128 = icmp eq i64 %110, %126
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %141

130:                                              ; preds = %121
  %131 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %140, label %133

133:                                              ; preds = %130
  %134 = load i32, i32* %71, align 4
  %135 = and i32 %134, 16777215
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %43, i64 0, i32 0
  %137 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %137, i64 0, i32 1
  %139 = load i8*, i8** %138, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53, i64 0, i64 0), i32 %135, i8* %139) #10
  br label %140

140:                                              ; preds = %130, %133
  store %"class.v8::internal::compiler::Node"* %43, %"class.v8::internal::compiler::Node"** %9, align 8
  br label %202

141:                                              ; preds = %121
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %43, i64 0, i32 0
  %143 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %143, i64 0, i32 5
  %145 = load i32, i32* %144, align 4
  %146 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %143) #10
  %147 = zext i1 %146 to i32
  %148 = add nsw i32 %145, %147
  %149 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %142, align 8
  %150 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %149) #10
  %151 = zext i1 %150 to i32
  %152 = add nsw i32 %148, %151
  %153 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %142, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %153, i64 0, i32 6
  %155 = load i32, i32* %154, align 8
  %156 = add nsw i32 %152, %155
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %153, i64 0, i32 7
  %158 = load i32, i32* %157, align 4
  %159 = add nsw i32 %156, %158
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %153, i64 0, i32 5
  %161 = load i32, i32* %160, align 4
  %162 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %153) #10
  %163 = zext i1 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %142, align 8
  %166 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %165) #10
  %167 = zext i1 %166 to i32
  %168 = add nsw i32 %164, %167
  %169 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %142, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %169, i64 0, i32 6
  %171 = load i32, i32* %170, align 8
  %172 = add nsw i32 %168, %171
  %173 = icmp slt i32 %172, %159
  br i1 %173, label %174, label %202

174:                                              ; preds = %141
  %175 = ptrtoint %"class.v8::internal::compiler::Node"* %43 to i64
  %176 = add i64 %175, 32
  %177 = inttoptr i64 %176 to i64*
  %178 = add i32 %161, %171
  %179 = add i32 %178, %163
  %180 = add i32 %179, %167
  %181 = sext i32 %180 to i64
  %182 = add i32 %145, %155
  %183 = add i32 %182, %158
  %184 = add i32 %183, %147
  %185 = add i32 %184, %151
  br label %186

186:                                              ; preds = %194, %174
  %187 = phi i64 [ %181, %174 ], [ %199, %194 ]
  %188 = load i32, i32* %71, align 4
  %189 = and i32 %188, 251658240
  %190 = icmp eq i32 %189, 251658240
  br i1 %190, label %191, label %194

191:                                              ; preds = %186
  %192 = load i64, i64* %177, align 8
  %193 = add i64 %192, 16
  br label %194

194:                                              ; preds = %186, %191
  %195 = phi i64 [ %193, %191 ], [ %176, %186 ]
  %196 = inttoptr i64 %195 to %"class.v8::internal::compiler::Node"**
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 %187
  %198 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, align 8
  tail call void @_ZN2v88internal8compiler10CFGBuilder5QueueEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %198)
  %199 = add nsw i64 %187, 1
  %200 = trunc i64 %199 to i32
  %201 = icmp eq i32 %185, %200
  br i1 %201, label %202, label %186

202:                                              ; preds = %194, %141, %140
  %203 = load i64, i64* %19, align 8
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %31

205:                                              ; preds = %202, %3
  %206 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %4, i64 0, i32 0, i32 0
  %207 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %206, align 8
  %208 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %209 = icmp eq %"class.v8::internal::compiler::Node"** %207, %208
  br i1 %209, label %210, label %211

210:                                              ; preds = %211, %205
  ret void

211:                                              ; preds = %205, %211
  %212 = phi %"class.v8::internal::compiler::Node"** [ %214, %211 ], [ %207, %205 ]
  %213 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, align 8
  tail call void @_ZN2v88internal8compiler10CFGBuilder13ConnectBlocksEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %213)
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 1
  %215 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %216 = icmp eq %"class.v8::internal::compiler::Node"** %214, %215
  br i1 %216, label %210, label %211
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9Scheduler16MovePlannedNodesEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Scheduler"* nocapture readonly, %"class.v8::internal::compiler::BasicBlock"* nocapture readonly, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %4 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 14, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 14, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20, i64 0, i64 0), i32 %9, i32 %12) #10
  br label %13

13:                                               ; preds = %3, %6
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 14, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %17, i64 %15
  %19 = load %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 14, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %17, i64 %21
  %23 = load %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %22, align 8
  %24 = icmp eq %"class.v8::internal::ZoneVector.22"* %19, null
  br i1 %24, label %61, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %19, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %19, i64 0, i32 0, i32 0, i32 1
  %29 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %28, align 8
  %30 = icmp eq %"class.v8::internal::compiler::Node"** %27, %29
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %0, i64 0, i32 2
  br label %35

33:                                               ; preds = %35, %25
  %34 = icmp eq %"class.v8::internal::ZoneVector.22"* %23, null
  br i1 %34, label %51, label %41

35:                                               ; preds = %31, %35
  %36 = phi %"class.v8::internal::compiler::Node"** [ %27, %31 ], [ %39, %35 ]
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, align 8
  %38 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %32, align 8
  tail call void @_ZN2v88internal8compiler8Schedule15SetBlockForNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %38, %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::Node"* %37) #10
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 1
  %40 = icmp eq %"class.v8::internal::compiler::Node"** %39, %29
  br i1 %40, label %33, label %35

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %23, i64 0, i32 0
  %43 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %23, i64 0, i32 0, i32 0, i32 1
  %44 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %43, align 8
  %45 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %26, align 8
  %46 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %28, align 8
  %47 = tail call %"class.v8::internal::compiler::Node"** @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS5_EESE_SE_(%"class.std::__1::vector.23"* %42, %"class.v8::internal::compiler::Node"** %44, %"class.v8::internal::compiler::Node"** %45, %"class.v8::internal::compiler::Node"** %46)
  %48 = bitcast %"class.v8::internal::ZoneVector.22"* %19 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.v8::internal::compiler::Node"*** %28 to i64*
  store i64 %49, i64* %50, align 8
  br label %61

51:                                               ; preds = %33
  %52 = load i64, i64* %14, align 8
  %53 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %16, align 8
  %54 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %53, i64 %52
  %55 = load i64, i64* %20, align 8
  %56 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %53, i64 %55
  %57 = bitcast %"class.v8::internal::ZoneVector.22"** %54 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.v8::internal::ZoneVector.22"** %56 to i64*
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %57, align 8
  store i64 %58, i64* %59, align 8
  br label %61

61:                                               ; preds = %41, %51, %13
  ret void
}

declare void @_ZN2v88internal8compiler8Schedule15SetBlockForNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"** @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS5_EESE_SE_(%"class.std::__1::vector.23"*, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::compiler::Node"** %1 to i8*
  %6 = ptrtoint %"class.v8::internal::compiler::Node"** %1 to i64
  %7 = ptrtoint %"class.v8::internal::compiler::Node"** %2 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint %"class.v8::internal::compiler::Node"** %3 to i64
  %10 = sub i64 %9, %7
  %11 = ashr exact i64 %10, 3
  %12 = icmp sgt i64 %10, 0
  br i1 %12, label %13, label %846

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::compiler::Node"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, align 8
  %19 = ptrtoint %"class.v8::internal::compiler::Node"** %18 to i64
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp sgt i64 %11, %21
  %23 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  br i1 %22, label %359, label %24

24:                                               ; preds = %13
  %25 = sub i64 %19, %6
  %26 = ashr exact i64 %25, 3
  %27 = icmp sgt i64 %11, %26
  br i1 %27, label %28, label %213

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, i64 %26
  %30 = icmp eq %"class.v8::internal::compiler::Node"** %29, %3
  br i1 %30, label %208, label %31

31:                                               ; preds = %28
  %32 = xor i64 %26, -1
  %33 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 %32
  %34 = ptrtoint %"class.v8::internal::compiler::Node"** %33 to i64
  %35 = sub i64 %34, %7
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %134, label %39

39:                                               ; preds = %31
  %40 = xor i64 %26, -1
  %41 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 %40
  %42 = ptrtoint %"class.v8::internal::compiler::Node"** %41 to i64
  %43 = sub i64 %42, %7
  %44 = lshr i64 %43, 3
  %45 = add nuw nsw i64 %44, 1
  %46 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %45
  %47 = add nsw i64 %26, %44
  %48 = add nsw i64 %47, 1
  %49 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, i64 %48
  %50 = icmp ult %"class.v8::internal::compiler::Node"** %18, %49
  %51 = icmp ult %"class.v8::internal::compiler::Node"** %29, %46
  %52 = and i1 %50, %51
  br i1 %52, label %134, label %53

53:                                               ; preds = %39
  %54 = and i64 %37, 4611686018427387900
  %55 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %54
  %56 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %54
  %57 = add nsw i64 %54, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 12
  br i1 %61, label %113, label %62

62:                                               ; preds = %53
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %65
  %68 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %65
  %69 = bitcast %"class.v8::internal::compiler::Node"** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !42
  %71 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 2
  %72 = bitcast %"class.v8::internal::compiler::Node"** %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !42
  %74 = bitcast %"class.v8::internal::compiler::Node"** %67 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !45, !noalias !42
  %75 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 2
  %76 = bitcast %"class.v8::internal::compiler::Node"** %75 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 8, !alias.scope !45, !noalias !42
  %77 = or i64 %65, 4
  %78 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %77
  %79 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %77
  %80 = bitcast %"class.v8::internal::compiler::Node"** %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !42
  %82 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %79, i64 2
  %83 = bitcast %"class.v8::internal::compiler::Node"** %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !42
  %85 = bitcast %"class.v8::internal::compiler::Node"** %78 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !45, !noalias !42
  %86 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 2
  %87 = bitcast %"class.v8::internal::compiler::Node"** %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 8, !alias.scope !45, !noalias !42
  %88 = or i64 %65, 8
  %89 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %88
  %90 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %88
  %91 = bitcast %"class.v8::internal::compiler::Node"** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !42
  %93 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %90, i64 2
  %94 = bitcast %"class.v8::internal::compiler::Node"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !42
  %96 = bitcast %"class.v8::internal::compiler::Node"** %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !45, !noalias !42
  %97 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 2
  %98 = bitcast %"class.v8::internal::compiler::Node"** %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 8, !alias.scope !45, !noalias !42
  %99 = or i64 %65, 12
  %100 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %99
  %101 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %99
  %102 = bitcast %"class.v8::internal::compiler::Node"** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !42
  %104 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 2
  %105 = bitcast %"class.v8::internal::compiler::Node"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !42
  %107 = bitcast %"class.v8::internal::compiler::Node"** %100 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !45, !noalias !42
  %108 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, i64 2
  %109 = bitcast %"class.v8::internal::compiler::Node"** %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 8, !alias.scope !45, !noalias !42
  %110 = add i64 %65, 16
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !47

113:                                              ; preds = %64, %53
  %114 = phi i64 [ 0, %53 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %117
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %117
  %121 = bitcast %"class.v8::internal::compiler::Node"** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !42
  %123 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 2
  %124 = bitcast %"class.v8::internal::compiler::Node"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !42
  %126 = bitcast %"class.v8::internal::compiler::Node"** %119 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !45, !noalias !42
  %127 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 2
  %128 = bitcast %"class.v8::internal::compiler::Node"** %127 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %128, align 8, !alias.scope !45, !noalias !42
  %129 = add i64 %117, 4
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !48

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %37, %54
  br i1 %133, label %205, label %134

134:                                              ; preds = %132, %39, %31
  %135 = phi %"class.v8::internal::compiler::Node"** [ %18, %39 ], [ %18, %31 ], [ %55, %132 ]
  %136 = phi %"class.v8::internal::compiler::Node"** [ %29, %39 ], [ %29, %31 ], [ %56, %132 ]
  %137 = ptrtoint %"class.v8::internal::compiler::Node"** %136 to i64
  %138 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 -1
  %139 = ptrtoint %"class.v8::internal::compiler::Node"** %138 to i64
  %140 = sub i64 %139, %137
  %141 = lshr i64 %140, 3
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %134, %145
  %146 = phi %"class.v8::internal::compiler::Node"** [ %153, %145 ], [ %135, %134 ]
  %147 = phi %"class.v8::internal::compiler::Node"** [ %152, %145 ], [ %136, %134 ]
  %148 = phi i64 [ %154, %145 ], [ %143, %134 ]
  %149 = bitcast %"class.v8::internal::compiler::Node"** %146 to i64*
  %150 = bitcast %"class.v8::internal::compiler::Node"** %147 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, i64 1
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 1
  %154 = add i64 %148, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !49

156:                                              ; preds = %145, %134
  %157 = phi %"class.v8::internal::compiler::Node"** [ undef, %134 ], [ %153, %145 ]
  %158 = phi %"class.v8::internal::compiler::Node"** [ %135, %134 ], [ %153, %145 ]
  %159 = phi %"class.v8::internal::compiler::Node"** [ %136, %134 ], [ %152, %145 ]
  %160 = icmp ult i64 %140, 56
  br i1 %160, label %205, label %161

161:                                              ; preds = %156, %161
  %162 = phi %"class.v8::internal::compiler::Node"** [ %203, %161 ], [ %158, %156 ]
  %163 = phi %"class.v8::internal::compiler::Node"** [ %202, %161 ], [ %159, %156 ]
  %164 = bitcast %"class.v8::internal::compiler::Node"** %162 to i64*
  %165 = bitcast %"class.v8::internal::compiler::Node"** %163 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %164, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 1
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 1
  %169 = bitcast %"class.v8::internal::compiler::Node"** %168 to i64*
  %170 = bitcast %"class.v8::internal::compiler::Node"** %167 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %169, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 2
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 2
  %174 = bitcast %"class.v8::internal::compiler::Node"** %173 to i64*
  %175 = bitcast %"class.v8::internal::compiler::Node"** %172 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 3
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 3
  %179 = bitcast %"class.v8::internal::compiler::Node"** %178 to i64*
  %180 = bitcast %"class.v8::internal::compiler::Node"** %177 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %179, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 4
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 4
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to i64*
  %185 = bitcast %"class.v8::internal::compiler::Node"** %182 to i64*
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %184, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 5
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 5
  %189 = bitcast %"class.v8::internal::compiler::Node"** %188 to i64*
  %190 = bitcast %"class.v8::internal::compiler::Node"** %187 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 6
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 6
  %194 = bitcast %"class.v8::internal::compiler::Node"** %193 to i64*
  %195 = bitcast %"class.v8::internal::compiler::Node"** %192 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 7
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 7
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  %200 = bitcast %"class.v8::internal::compiler::Node"** %197 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 8
  %204 = icmp eq %"class.v8::internal::compiler::Node"** %202, %3
  br i1 %204, label %205, label %161, !llvm.loop !50

205:                                              ; preds = %156, %161, %132
  %206 = phi %"class.v8::internal::compiler::Node"** [ %55, %132 ], [ %157, %156 ], [ %203, %161 ]
  %207 = ptrtoint %"class.v8::internal::compiler::Node"** %206 to i64
  br label %208

208:                                              ; preds = %205, %28
  %209 = phi i64 [ %19, %28 ], [ %207, %205 ]
  store i64 %209, i64* %23, align 8
  %210 = icmp sgt i64 %25, 0
  br i1 %210, label %211, label %846

211:                                              ; preds = %208
  %212 = inttoptr i64 %209 to %"class.v8::internal::compiler::Node"**
  br label %213

213:                                              ; preds = %211, %24
  %214 = phi i64 [ %209, %211 ], [ %19, %24 ]
  %215 = phi %"class.v8::internal::compiler::Node"** [ %212, %211 ], [ %18, %24 ]
  %216 = phi %"class.v8::internal::compiler::Node"** [ %29, %211 ], [ %3, %24 ]
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %11
  %218 = ptrtoint %"class.v8::internal::compiler::Node"** %217 to i64
  %219 = sub i64 %214, %218
  %220 = ashr exact i64 %219, 3
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %220
  %222 = icmp ult %"class.v8::internal::compiler::Node"** %221, %18
  br i1 %222, label %223, label %336

223:                                              ; preds = %213
  %224 = sub nsw i64 0, %220
  %225 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %224
  %226 = bitcast %"class.v8::internal::compiler::Node"** %225 to i8*
  %227 = xor i64 %6, -1
  %228 = getelementptr i8, i8* %226, i64 %227
  %229 = ptrtoint i8* %228 to i64
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = icmp ult i64 %231, 4
  br i1 %232, label %233, label %236

233:                                              ; preds = %331, %236, %223
  %234 = phi %"class.v8::internal::compiler::Node"** [ %215, %236 ], [ %215, %223 ], [ %254, %331 ]
  %235 = phi %"class.v8::internal::compiler::Node"** [ %221, %236 ], [ %221, %223 ], [ %255, %331 ]
  br label %344

236:                                              ; preds = %223
  %237 = sub nsw i64 0, %220
  %238 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %237
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i8*
  %240 = xor i64 %6, -1
  %241 = getelementptr i8, i8* %239, i64 %240
  %242 = ptrtoint i8* %241 to i64
  %243 = lshr i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %244
  %246 = add nsw i64 %220, %243
  %247 = add nsw i64 %246, 1
  %248 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %247
  %249 = icmp ult %"class.v8::internal::compiler::Node"** %215, %248
  %250 = icmp ult %"class.v8::internal::compiler::Node"** %221, %245
  %251 = and i1 %249, %250
  br i1 %251, label %233, label %252

252:                                              ; preds = %236
  %253 = and i64 %231, 4611686018427387900
  %254 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %253
  %255 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %253
  %256 = add nsw i64 %253, -4
  %257 = lshr exact i64 %256, 2
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 12
  br i1 %260, label %312, label %261

261:                                              ; preds = %252
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %264
  %267 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %264
  %268 = bitcast %"class.v8::internal::compiler::Node"** %267 to <2 x i64>*
  %269 = load <2 x i64>, <2 x i64>* %268, align 8, !alias.scope !51
  %270 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, i64 2
  %271 = bitcast %"class.v8::internal::compiler::Node"** %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !51
  %273 = bitcast %"class.v8::internal::compiler::Node"** %266 to <2 x i64>*
  store <2 x i64> %269, <2 x i64>* %273, align 8, !alias.scope !54, !noalias !51
  %274 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %266, i64 2
  %275 = bitcast %"class.v8::internal::compiler::Node"** %274 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %275, align 8, !alias.scope !54, !noalias !51
  %276 = or i64 %264, 4
  %277 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %276
  %278 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %276
  %279 = bitcast %"class.v8::internal::compiler::Node"** %278 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8, !alias.scope !51
  %281 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 2
  %282 = bitcast %"class.v8::internal::compiler::Node"** %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !51
  %284 = bitcast %"class.v8::internal::compiler::Node"** %277 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %284, align 8, !alias.scope !54, !noalias !51
  %285 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %277, i64 2
  %286 = bitcast %"class.v8::internal::compiler::Node"** %285 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %286, align 8, !alias.scope !54, !noalias !51
  %287 = or i64 %264, 8
  %288 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %287
  %289 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %287
  %290 = bitcast %"class.v8::internal::compiler::Node"** %289 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8, !alias.scope !51
  %292 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %289, i64 2
  %293 = bitcast %"class.v8::internal::compiler::Node"** %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8, !alias.scope !51
  %295 = bitcast %"class.v8::internal::compiler::Node"** %288 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %295, align 8, !alias.scope !54, !noalias !51
  %296 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %288, i64 2
  %297 = bitcast %"class.v8::internal::compiler::Node"** %296 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %297, align 8, !alias.scope !54, !noalias !51
  %298 = or i64 %264, 12
  %299 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %298
  %300 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %298
  %301 = bitcast %"class.v8::internal::compiler::Node"** %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !51
  %303 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %300, i64 2
  %304 = bitcast %"class.v8::internal::compiler::Node"** %303 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !51
  %306 = bitcast %"class.v8::internal::compiler::Node"** %299 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %306, align 8, !alias.scope !54, !noalias !51
  %307 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %299, i64 2
  %308 = bitcast %"class.v8::internal::compiler::Node"** %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 8, !alias.scope !54, !noalias !51
  %309 = add i64 %264, 16
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !56

312:                                              ; preds = %263, %252
  %313 = phi i64 [ 0, %252 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %316
  %319 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %316
  %320 = bitcast %"class.v8::internal::compiler::Node"** %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !51
  %322 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %319, i64 2
  %323 = bitcast %"class.v8::internal::compiler::Node"** %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !51
  %325 = bitcast %"class.v8::internal::compiler::Node"** %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8, !alias.scope !54, !noalias !51
  %326 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 2
  %327 = bitcast %"class.v8::internal::compiler::Node"** %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 8, !alias.scope !54, !noalias !51
  %328 = add i64 %316, 4
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !57

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %231, %253
  br i1 %332, label %333, label %233

333:                                              ; preds = %344, %331
  %334 = phi %"class.v8::internal::compiler::Node"** [ %254, %331 ], [ %351, %344 ]
  %335 = ptrtoint %"class.v8::internal::compiler::Node"** %334 to i64
  br label %336

336:                                              ; preds = %333, %213
  %337 = phi i64 [ %335, %333 ], [ %214, %213 ]
  store i64 %337, i64* %23, align 8
  %338 = icmp eq i64 %219, 0
  br i1 %338, label %353, label %339

339:                                              ; preds = %336
  %340 = sub nsw i64 0, %220
  %341 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %340
  %342 = bitcast %"class.v8::internal::compiler::Node"** %341 to i8*
  %343 = bitcast %"class.v8::internal::compiler::Node"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %342, i8* align 8 %343, i64 %219, i1 false) #10
  br label %353

344:                                              ; preds = %233, %344
  %345 = phi %"class.v8::internal::compiler::Node"** [ %351, %344 ], [ %234, %233 ]
  %346 = phi %"class.v8::internal::compiler::Node"** [ %350, %344 ], [ %235, %233 ]
  %347 = bitcast %"class.v8::internal::compiler::Node"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.v8::internal::compiler::Node"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 1
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %345, i64 1
  %352 = icmp ult %"class.v8::internal::compiler::Node"** %350, %18
  br i1 %352, label %344, label %333, !llvm.loop !58

353:                                              ; preds = %336, %339
  %354 = ptrtoint %"class.v8::internal::compiler::Node"** %216 to i64
  %355 = sub i64 %354, %7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %846, label %357

357:                                              ; preds = %353
  %358 = bitcast %"class.v8::internal::compiler::Node"** %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %358, i64 %355, i1 false) #10
  br label %846

359:                                              ; preds = %13
  %360 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %19, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %11
  %365 = icmp ugt i64 %364, 268435455
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #11
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %16, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 134217727
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %6, %361
  %374 = ashr exact i64 %373, 3
  br label %382

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %6, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %401, label %382

382:                                              ; preds = %372, %375
  %383 = phi i64 [ %374, %372 ], [ %380, %375 ]
  %384 = phi i64 [ 268435455, %372 ], [ %378, %375 ]
  %385 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %386 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %385, align 8
  %387 = shl i64 %384, 3
  %388 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 2
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 3
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %391, %389
  %393 = icmp ugt i64 %387, %392
  br i1 %393, label %394, label %396, !prof !2

394:                                              ; preds = %382
  %395 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %386, i64 %387) #10
  br label %398

396:                                              ; preds = %382
  %397 = add i64 %389, %387
  store i64 %397, i64* %388, align 8
  br label %398

398:                                              ; preds = %396, %394
  %399 = phi i64 [ %395, %394 ], [ %389, %396 ]
  %400 = inttoptr i64 %399 to %"class.v8::internal::compiler::Node"**
  br label %401

401:                                              ; preds = %398, %375
  %402 = phi i64 [ %383, %398 ], [ %380, %375 ]
  %403 = phi i64 [ %384, %398 ], [ 0, %375 ]
  %404 = phi %"class.v8::internal::compiler::Node"** [ %400, %398 ], [ null, %375 ]
  %405 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %402
  %406 = ptrtoint %"class.v8::internal::compiler::Node"** %405 to i64
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %403
  %408 = ptrtoint %"class.v8::internal::compiler::Node"** %407 to i64
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 %11
  %410 = add i64 %10, -8
  %411 = lshr i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %430, label %415

415:                                              ; preds = %401, %415
  %416 = phi %"class.v8::internal::compiler::Node"** [ %423, %415 ], [ %405, %401 ]
  %417 = phi i64 [ %424, %415 ], [ %406, %401 ]
  %418 = phi %"class.v8::internal::compiler::Node"** [ %425, %415 ], [ %2, %401 ]
  %419 = phi i64 [ %426, %415 ], [ %413, %401 ]
  %420 = bitcast %"class.v8::internal::compiler::Node"** %418 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = inttoptr i64 %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %416, i64 1
  %424 = ptrtoint %"class.v8::internal::compiler::Node"** %423 to i64
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %418, i64 1
  %426 = add i64 %419, -1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %415, !llvm.loop !59

428:                                              ; preds = %415
  %429 = ptrtoint %"class.v8::internal::compiler::Node"** %423 to i64
  br label %430

430:                                              ; preds = %401, %428
  %431 = phi %"class.v8::internal::compiler::Node"** [ %405, %401 ], [ %423, %428 ]
  %432 = phi i64 [ %406, %401 ], [ %429, %428 ]
  %433 = phi %"class.v8::internal::compiler::Node"** [ %2, %401 ], [ %425, %428 ]
  %434 = icmp ult i64 %410, 56
  br i1 %434, label %481, label %435

435:                                              ; preds = %430, %435
  %436 = phi %"class.v8::internal::compiler::Node"** [ %477, %435 ], [ %431, %430 ]
  %437 = phi i64 [ %478, %435 ], [ %432, %430 ]
  %438 = phi %"class.v8::internal::compiler::Node"** [ %479, %435 ], [ %433, %430 ]
  %439 = bitcast %"class.v8::internal::compiler::Node"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = inttoptr i64 %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 1
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 1
  %444 = bitcast %"class.v8::internal::compiler::Node"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.v8::internal::compiler::Node"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 2
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 2
  %449 = bitcast %"class.v8::internal::compiler::Node"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.v8::internal::compiler::Node"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 3
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 3
  %454 = bitcast %"class.v8::internal::compiler::Node"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.v8::internal::compiler::Node"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 4
  %458 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 4
  %459 = bitcast %"class.v8::internal::compiler::Node"** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.v8::internal::compiler::Node"** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 5
  %463 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 5
  %464 = bitcast %"class.v8::internal::compiler::Node"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.v8::internal::compiler::Node"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 6
  %468 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 6
  %469 = bitcast %"class.v8::internal::compiler::Node"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.v8::internal::compiler::Node"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 7
  %473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 7
  %474 = bitcast %"class.v8::internal::compiler::Node"** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast %"class.v8::internal::compiler::Node"** %472 to i64*
  store i64 %475, i64* %476, align 8
  %477 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 8
  %478 = ptrtoint %"class.v8::internal::compiler::Node"** %477 to i64
  %479 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 8
  %480 = icmp eq %"class.v8::internal::compiler::Node"** %409, %477
  br i1 %480, label %481, label %435

481:                                              ; preds = %435, %430
  %482 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %8, align 8
  %483 = ptrtoint %"class.v8::internal::compiler::Node"** %482 to i64
  %484 = icmp eq %"class.v8::internal::compiler::Node"** %482, %1
  br i1 %484, label %657, label %485

485:                                              ; preds = %481
  %486 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %487 = ptrtoint %"class.v8::internal::compiler::Node"** %486 to i64
  %488 = sub i64 %487, %483
  %489 = lshr i64 %488, 3
  %490 = add nuw nsw i64 %489, 1
  %491 = icmp ult i64 %490, 4
  br i1 %491, label %584, label %492

492:                                              ; preds = %485
  %493 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %494 = ptrtoint %"class.v8::internal::compiler::Node"** %493 to i64
  %495 = sub i64 %494, %483
  %496 = lshr i64 %495, 3
  %497 = xor i64 %496, -1
  %498 = add nsw i64 %402, %497
  %499 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %498
  %500 = xor i64 %496, -1
  %501 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %500
  %502 = icmp ult %"class.v8::internal::compiler::Node"** %499, %1
  %503 = icmp ult %"class.v8::internal::compiler::Node"** %501, %405
  %504 = and i1 %502, %503
  br i1 %504, label %584, label %505

505:                                              ; preds = %492
  %506 = and i64 %490, 4611686018427387900
  %507 = sub nsw i64 0, %506
  %508 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 %507
  %509 = sub nsw i64 0, %506
  %510 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %509
  %511 = add nsw i64 %506, -4
  %512 = lshr exact i64 %511, 2
  %513 = add nuw nsw i64 %512, 1
  %514 = and i64 %513, 1
  %515 = icmp eq i64 %511, 0
  br i1 %515, label %560, label %516

516:                                              ; preds = %505
  %517 = sub nuw nsw i64 %513, %514
  %518 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %519 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %520 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %521 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  br label %522

522:                                              ; preds = %522, %516
  %523 = phi i64 [ 0, %516 ], [ %557, %522 ]
  %524 = phi i64 [ %517, %516 ], [ %558, %522 ]
  %525 = sub i64 0, %523
  %526 = sub i64 0, %523
  %527 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %518, i64 %525
  %528 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %519, i64 %526
  %529 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -1
  %530 = bitcast %"class.v8::internal::compiler::Node"** %529 to <2 x i64>*
  %531 = load <2 x i64>, <2 x i64>* %530, align 8, !alias.scope !60
  %532 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -2
  %533 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %532, i64 -1
  %534 = bitcast %"class.v8::internal::compiler::Node"** %533 to <2 x i64>*
  %535 = load <2 x i64>, <2 x i64>* %534, align 8, !alias.scope !60
  %536 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -1
  %537 = bitcast %"class.v8::internal::compiler::Node"** %536 to <2 x i64>*
  store <2 x i64> %531, <2 x i64>* %537, align 8, !alias.scope !63, !noalias !60
  %538 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -2
  %539 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %538, i64 -1
  %540 = bitcast %"class.v8::internal::compiler::Node"** %539 to <2 x i64>*
  store <2 x i64> %535, <2 x i64>* %540, align 8, !alias.scope !63, !noalias !60
  %541 = sub nuw nsw i64 -4, %523
  %542 = sub nuw nsw i64 -4, %523
  %543 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %520, i64 %541
  %544 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %521, i64 %542
  %545 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %544, i64 -1
  %546 = bitcast %"class.v8::internal::compiler::Node"** %545 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8, !alias.scope !60
  %548 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %544, i64 -2
  %549 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %548, i64 -1
  %550 = bitcast %"class.v8::internal::compiler::Node"** %549 to <2 x i64>*
  %551 = load <2 x i64>, <2 x i64>* %550, align 8, !alias.scope !60
  %552 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %543, i64 -1
  %553 = bitcast %"class.v8::internal::compiler::Node"** %552 to <2 x i64>*
  store <2 x i64> %547, <2 x i64>* %553, align 8, !alias.scope !63, !noalias !60
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %543, i64 -2
  %555 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %554, i64 -1
  %556 = bitcast %"class.v8::internal::compiler::Node"** %555 to <2 x i64>*
  store <2 x i64> %551, <2 x i64>* %556, align 8, !alias.scope !63, !noalias !60
  %557 = add i64 %523, 8
  %558 = add i64 %524, -2
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %522, !llvm.loop !65

560:                                              ; preds = %522, %505
  %561 = phi i64 [ 0, %505 ], [ %557, %522 ]
  %562 = icmp eq i64 %514, 0
  br i1 %562, label %582, label %563

563:                                              ; preds = %560
  %564 = sub i64 0, %561
  %565 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %566 = sub i64 0, %561
  %567 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %568 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %565, i64 %564
  %569 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %567, i64 %566
  %570 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %569, i64 -1
  %571 = bitcast %"class.v8::internal::compiler::Node"** %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !60
  %573 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %569, i64 -2
  %574 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %573, i64 -1
  %575 = bitcast %"class.v8::internal::compiler::Node"** %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !60
  %577 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %568, i64 -1
  %578 = bitcast %"class.v8::internal::compiler::Node"** %577 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %578, align 8, !alias.scope !63, !noalias !60
  %579 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %568, i64 -2
  %580 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %579, i64 -1
  %581 = bitcast %"class.v8::internal::compiler::Node"** %580 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %581, align 8, !alias.scope !63, !noalias !60
  br label %582

582:                                              ; preds = %560, %563
  %583 = icmp eq i64 %490, %506
  br i1 %583, label %654, label %584

584:                                              ; preds = %582, %492, %485
  %585 = phi %"class.v8::internal::compiler::Node"** [ %405, %492 ], [ %405, %485 ], [ %508, %582 ]
  %586 = phi %"class.v8::internal::compiler::Node"** [ %1, %492 ], [ %1, %485 ], [ %510, %582 ]
  %587 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %586, i64 -1
  %588 = ptrtoint %"class.v8::internal::compiler::Node"** %587 to i64
  %589 = sub i64 %588, %483
  %590 = lshr i64 %589, 3
  %591 = add nuw nsw i64 %590, 1
  %592 = and i64 %591, 7
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %605, label %594

594:                                              ; preds = %584, %594
  %595 = phi %"class.v8::internal::compiler::Node"** [ %598, %594 ], [ %585, %584 ]
  %596 = phi %"class.v8::internal::compiler::Node"** [ %599, %594 ], [ %586, %584 ]
  %597 = phi i64 [ %603, %594 ], [ %592, %584 ]
  %598 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -1
  %599 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %596, i64 -1
  %600 = bitcast %"class.v8::internal::compiler::Node"** %599 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = bitcast %"class.v8::internal::compiler::Node"** %598 to i64*
  store i64 %601, i64* %602, align 8
  %603 = add i64 %597, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %594, !llvm.loop !66

605:                                              ; preds = %594, %584
  %606 = phi %"class.v8::internal::compiler::Node"** [ undef, %584 ], [ %598, %594 ]
  %607 = phi %"class.v8::internal::compiler::Node"** [ %585, %584 ], [ %598, %594 ]
  %608 = phi %"class.v8::internal::compiler::Node"** [ %586, %584 ], [ %599, %594 ]
  %609 = icmp ult i64 %589, 56
  br i1 %609, label %654, label %610

610:                                              ; preds = %605, %610
  %611 = phi %"class.v8::internal::compiler::Node"** [ %648, %610 ], [ %607, %605 ]
  %612 = phi %"class.v8::internal::compiler::Node"** [ %649, %610 ], [ %608, %605 ]
  %613 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -1
  %614 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -1
  %615 = bitcast %"class.v8::internal::compiler::Node"** %614 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = bitcast %"class.v8::internal::compiler::Node"** %613 to i64*
  store i64 %616, i64* %617, align 8
  %618 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -2
  %619 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -2
  %620 = bitcast %"class.v8::internal::compiler::Node"** %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = bitcast %"class.v8::internal::compiler::Node"** %618 to i64*
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -3
  %624 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -3
  %625 = bitcast %"class.v8::internal::compiler::Node"** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = bitcast %"class.v8::internal::compiler::Node"** %623 to i64*
  store i64 %626, i64* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -4
  %629 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -4
  %630 = bitcast %"class.v8::internal::compiler::Node"** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = bitcast %"class.v8::internal::compiler::Node"** %628 to i64*
  store i64 %631, i64* %632, align 8
  %633 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -5
  %634 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -5
  %635 = bitcast %"class.v8::internal::compiler::Node"** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = bitcast %"class.v8::internal::compiler::Node"** %633 to i64*
  store i64 %636, i64* %637, align 8
  %638 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -6
  %639 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -6
  %640 = bitcast %"class.v8::internal::compiler::Node"** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = bitcast %"class.v8::internal::compiler::Node"** %638 to i64*
  store i64 %641, i64* %642, align 8
  %643 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -7
  %644 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -7
  %645 = bitcast %"class.v8::internal::compiler::Node"** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"class.v8::internal::compiler::Node"** %643 to i64*
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -8
  %649 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -8
  %650 = bitcast %"class.v8::internal::compiler::Node"** %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = bitcast %"class.v8::internal::compiler::Node"** %648 to i64*
  store i64 %651, i64* %652, align 8
  %653 = icmp eq %"class.v8::internal::compiler::Node"** %649, %482
  br i1 %653, label %654, label %610, !llvm.loop !67

654:                                              ; preds = %605, %610, %582
  %655 = phi %"class.v8::internal::compiler::Node"** [ %508, %582 ], [ %606, %605 ], [ %648, %610 ]
  %656 = ptrtoint %"class.v8::internal::compiler::Node"** %655 to i64
  br label %657

657:                                              ; preds = %654, %481
  %658 = phi i64 [ %406, %481 ], [ %656, %654 ]
  %659 = phi %"class.v8::internal::compiler::Node"** [ %405, %481 ], [ %655, %654 ]
  %660 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, align 8
  %661 = icmp eq %"class.v8::internal::compiler::Node"** %660, %1
  br i1 %661, label %662, label %664

662:                                              ; preds = %657
  %663 = ptrtoint %"class.v8::internal::compiler::Node"** %659 to i64
  br label %842

664:                                              ; preds = %657
  %665 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %666 = ptrtoint %"class.v8::internal::compiler::Node"** %665 to i64
  %667 = sub i64 %666, %6
  %668 = lshr i64 %667, 3
  %669 = add nuw nsw i64 %668, 1
  %670 = icmp ult i64 %669, 4
  br i1 %670, label %767, label %671

671:                                              ; preds = %664
  %672 = add nsw i64 %402, %11
  %673 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %674 = ptrtoint %"class.v8::internal::compiler::Node"** %673 to i64
  %675 = sub i64 %674, %6
  %676 = lshr i64 %675, 3
  %677 = add nsw i64 %672, %676
  %678 = add nsw i64 %677, 1
  %679 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %678
  %680 = add nuw nsw i64 %676, 1
  %681 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %680
  %682 = icmp ult %"class.v8::internal::compiler::Node"** %409, %681
  %683 = icmp ugt %"class.v8::internal::compiler::Node"** %679, %1
  %684 = and i1 %682, %683
  br i1 %684, label %767, label %685

685:                                              ; preds = %671
  %686 = and i64 %669, 4611686018427387900
  %687 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %686
  %688 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %686
  %689 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %686
  %690 = add nsw i64 %686, -4
  %691 = lshr exact i64 %690, 2
  %692 = add nuw nsw i64 %691, 1
  %693 = and i64 %692, 3
  %694 = icmp ult i64 %690, 12
  br i1 %694, label %746, label %695

695:                                              ; preds = %685
  %696 = sub nsw i64 %692, %693
  br label %697

697:                                              ; preds = %697, %695
  %698 = phi i64 [ 0, %695 ], [ %743, %697 ]
  %699 = phi i64 [ %696, %695 ], [ %744, %697 ]
  %700 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %698
  %701 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %698
  %702 = bitcast %"class.v8::internal::compiler::Node"** %701 to <2 x i64>*
  %703 = load <2 x i64>, <2 x i64>* %702, align 8, !alias.scope !68
  %704 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %701, i64 2
  %705 = bitcast %"class.v8::internal::compiler::Node"** %704 to <2 x i64>*
  %706 = load <2 x i64>, <2 x i64>* %705, align 8, !alias.scope !68
  %707 = bitcast %"class.v8::internal::compiler::Node"** %700 to <2 x i64>*
  store <2 x i64> %703, <2 x i64>* %707, align 8, !alias.scope !71, !noalias !68
  %708 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %700, i64 2
  %709 = bitcast %"class.v8::internal::compiler::Node"** %708 to <2 x i64>*
  store <2 x i64> %706, <2 x i64>* %709, align 8, !alias.scope !71, !noalias !68
  %710 = or i64 %698, 4
  %711 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %710
  %712 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %710
  %713 = bitcast %"class.v8::internal::compiler::Node"** %712 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !68
  %715 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %712, i64 2
  %716 = bitcast %"class.v8::internal::compiler::Node"** %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !68
  %718 = bitcast %"class.v8::internal::compiler::Node"** %711 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %718, align 8, !alias.scope !71, !noalias !68
  %719 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %711, i64 2
  %720 = bitcast %"class.v8::internal::compiler::Node"** %719 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %720, align 8, !alias.scope !71, !noalias !68
  %721 = or i64 %698, 8
  %722 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %721
  %723 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %721
  %724 = bitcast %"class.v8::internal::compiler::Node"** %723 to <2 x i64>*
  %725 = load <2 x i64>, <2 x i64>* %724, align 8, !alias.scope !68
  %726 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %723, i64 2
  %727 = bitcast %"class.v8::internal::compiler::Node"** %726 to <2 x i64>*
  %728 = load <2 x i64>, <2 x i64>* %727, align 8, !alias.scope !68
  %729 = bitcast %"class.v8::internal::compiler::Node"** %722 to <2 x i64>*
  store <2 x i64> %725, <2 x i64>* %729, align 8, !alias.scope !71, !noalias !68
  %730 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %722, i64 2
  %731 = bitcast %"class.v8::internal::compiler::Node"** %730 to <2 x i64>*
  store <2 x i64> %728, <2 x i64>* %731, align 8, !alias.scope !71, !noalias !68
  %732 = or i64 %698, 12
  %733 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %732
  %734 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %732
  %735 = bitcast %"class.v8::internal::compiler::Node"** %734 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !68
  %737 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %734, i64 2
  %738 = bitcast %"class.v8::internal::compiler::Node"** %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !68
  %740 = bitcast %"class.v8::internal::compiler::Node"** %733 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %740, align 8, !alias.scope !71, !noalias !68
  %741 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %733, i64 2
  %742 = bitcast %"class.v8::internal::compiler::Node"** %741 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %742, align 8, !alias.scope !71, !noalias !68
  %743 = add i64 %698, 16
  %744 = add i64 %699, -4
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %697, !llvm.loop !73

746:                                              ; preds = %697, %685
  %747 = phi i64 [ 0, %685 ], [ %743, %697 ]
  %748 = icmp eq i64 %693, 0
  br i1 %748, label %765, label %749

749:                                              ; preds = %746, %749
  %750 = phi i64 [ %762, %749 ], [ %747, %746 ]
  %751 = phi i64 [ %763, %749 ], [ %693, %746 ]
  %752 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %750
  %753 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %750
  %754 = bitcast %"class.v8::internal::compiler::Node"** %753 to <2 x i64>*
  %755 = load <2 x i64>, <2 x i64>* %754, align 8, !alias.scope !68
  %756 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %753, i64 2
  %757 = bitcast %"class.v8::internal::compiler::Node"** %756 to <2 x i64>*
  %758 = load <2 x i64>, <2 x i64>* %757, align 8, !alias.scope !68
  %759 = bitcast %"class.v8::internal::compiler::Node"** %752 to <2 x i64>*
  store <2 x i64> %755, <2 x i64>* %759, align 8, !alias.scope !71, !noalias !68
  %760 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %752, i64 2
  %761 = bitcast %"class.v8::internal::compiler::Node"** %760 to <2 x i64>*
  store <2 x i64> %758, <2 x i64>* %761, align 8, !alias.scope !71, !noalias !68
  %762 = add i64 %750, 4
  %763 = add i64 %751, -1
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %765, label %749, !llvm.loop !74

765:                                              ; preds = %749, %746
  %766 = icmp eq i64 %669, %686
  br i1 %766, label %842, label %767

767:                                              ; preds = %765, %671, %664
  %768 = phi %"class.v8::internal::compiler::Node"** [ %409, %671 ], [ %409, %664 ], [ %687, %765 ]
  %769 = phi %"class.v8::internal::compiler::Node"** [ %409, %671 ], [ %409, %664 ], [ %688, %765 ]
  %770 = phi %"class.v8::internal::compiler::Node"** [ %1, %671 ], [ %1, %664 ], [ %689, %765 ]
  %771 = ptrtoint %"class.v8::internal::compiler::Node"** %770 to i64
  %772 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %773 = ptrtoint %"class.v8::internal::compiler::Node"** %772 to i64
  %774 = sub i64 %773, %771
  %775 = lshr i64 %774, 3
  %776 = add nuw nsw i64 %775, 1
  %777 = and i64 %776, 7
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %791, label %779

779:                                              ; preds = %767, %779
  %780 = phi %"class.v8::internal::compiler::Node"** [ %788, %779 ], [ %768, %767 ]
  %781 = phi %"class.v8::internal::compiler::Node"** [ %788, %779 ], [ %769, %767 ]
  %782 = phi %"class.v8::internal::compiler::Node"** [ %787, %779 ], [ %770, %767 ]
  %783 = phi i64 [ %789, %779 ], [ %777, %767 ]
  %784 = bitcast %"class.v8::internal::compiler::Node"** %781 to i64*
  %785 = bitcast %"class.v8::internal::compiler::Node"** %782 to i64*
  %786 = load i64, i64* %785, align 8
  store i64 %786, i64* %784, align 8
  %787 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %782, i64 1
  %788 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %780, i64 1
  %789 = add i64 %783, -1
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %791, label %779, !llvm.loop !75

791:                                              ; preds = %779, %767
  %792 = phi %"class.v8::internal::compiler::Node"** [ undef, %767 ], [ %788, %779 ]
  %793 = phi %"class.v8::internal::compiler::Node"** [ %768, %767 ], [ %788, %779 ]
  %794 = phi %"class.v8::internal::compiler::Node"** [ %769, %767 ], [ %788, %779 ]
  %795 = phi %"class.v8::internal::compiler::Node"** [ %770, %767 ], [ %787, %779 ]
  %796 = icmp ult i64 %774, 56
  br i1 %796, label %842, label %797

797:                                              ; preds = %791, %797
  %798 = phi %"class.v8::internal::compiler::Node"** [ %840, %797 ], [ %793, %791 ]
  %799 = phi %"class.v8::internal::compiler::Node"** [ %840, %797 ], [ %794, %791 ]
  %800 = phi %"class.v8::internal::compiler::Node"** [ %839, %797 ], [ %795, %791 ]
  %801 = bitcast %"class.v8::internal::compiler::Node"** %799 to i64*
  %802 = bitcast %"class.v8::internal::compiler::Node"** %800 to i64*
  %803 = load i64, i64* %802, align 8
  store i64 %803, i64* %801, align 8
  %804 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 1
  %805 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 1
  %806 = bitcast %"class.v8::internal::compiler::Node"** %805 to i64*
  %807 = bitcast %"class.v8::internal::compiler::Node"** %804 to i64*
  %808 = load i64, i64* %807, align 8
  store i64 %808, i64* %806, align 8
  %809 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 2
  %810 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 2
  %811 = bitcast %"class.v8::internal::compiler::Node"** %810 to i64*
  %812 = bitcast %"class.v8::internal::compiler::Node"** %809 to i64*
  %813 = load i64, i64* %812, align 8
  store i64 %813, i64* %811, align 8
  %814 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 3
  %815 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 3
  %816 = bitcast %"class.v8::internal::compiler::Node"** %815 to i64*
  %817 = bitcast %"class.v8::internal::compiler::Node"** %814 to i64*
  %818 = load i64, i64* %817, align 8
  store i64 %818, i64* %816, align 8
  %819 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 4
  %820 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 4
  %821 = bitcast %"class.v8::internal::compiler::Node"** %820 to i64*
  %822 = bitcast %"class.v8::internal::compiler::Node"** %819 to i64*
  %823 = load i64, i64* %822, align 8
  store i64 %823, i64* %821, align 8
  %824 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 5
  %825 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 5
  %826 = bitcast %"class.v8::internal::compiler::Node"** %825 to i64*
  %827 = bitcast %"class.v8::internal::compiler::Node"** %824 to i64*
  %828 = load i64, i64* %827, align 8
  store i64 %828, i64* %826, align 8
  %829 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 6
  %830 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 6
  %831 = bitcast %"class.v8::internal::compiler::Node"** %830 to i64*
  %832 = bitcast %"class.v8::internal::compiler::Node"** %829 to i64*
  %833 = load i64, i64* %832, align 8
  store i64 %833, i64* %831, align 8
  %834 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 7
  %835 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 7
  %836 = bitcast %"class.v8::internal::compiler::Node"** %835 to i64*
  %837 = bitcast %"class.v8::internal::compiler::Node"** %834 to i64*
  %838 = load i64, i64* %837, align 8
  store i64 %838, i64* %836, align 8
  %839 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 8
  %840 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 8
  %841 = icmp eq %"class.v8::internal::compiler::Node"** %839, %660
  br i1 %841, label %842, label %797, !llvm.loop !76

842:                                              ; preds = %791, %797, %765, %662
  %843 = phi %"class.v8::internal::compiler::Node"** [ %409, %662 ], [ %687, %765 ], [ %792, %791 ], [ %840, %797 ]
  %844 = phi i64 [ %663, %662 ], [ %658, %765 ], [ %658, %797 ], [ %658, %791 ]
  %845 = ptrtoint %"class.v8::internal::compiler::Node"** %843 to i64
  store i64 %844, i64* %360, align 8
  store i64 %845, i64* %23, align 8
  store i64 %408, i64* %15, align 8
  ret %"class.v8::internal::compiler::Node"** %405

846:                                              ; preds = %208, %353, %357, %4
  ret %"class.v8::internal::compiler::Node"** %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::Node"*** %9, %3
  %11 = ptrtoint %"class.v8::internal::compiler::Node"*** %9 to i64
  %12 = ptrtoint %"class.v8::internal::compiler::Node"*** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, i64 %22
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::compiler::Node"**** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35 to %"class.v8::internal::compiler::Node"***
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::compiler::Node"** [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 1
  %43 = ptrtoint %"class.v8::internal::compiler::Node"** %42 to i64
  %44 = bitcast %"class.v8::internal::compiler::Node"*** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %41, i64 1
  %50 = bitcast %"class.v8::internal::compiler::Node"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::compiler::Node"*** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::Node"**
  %56 = icmp eq %"class.v8::internal::compiler::Node"** %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::compiler::Node"*** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::compiler::Node"*** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 512
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, i64 1
  %71 = bitcast %"class.v8::internal::compiler::Node"** %70 to i64*
  store i64 512, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::compiler::Node"** %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::compiler::Node"** %63, %"class.v8::internal::compiler::Node"*** %37, align 8
  %74 = bitcast %"class.v8::internal::compiler::Node"** %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"***
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::compiler::Node"*** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::compiler::Node"*** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 1
  store %"class.v8::internal::compiler::Node"*** %84, %"class.v8::internal::compiler::Node"**** %2, align 8
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::compiler::Node"*** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::compiler::Node"*** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 512, %95 ], [ 256, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101 to %"class.v8::internal::compiler::Node"***
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 512
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 1
  %119 = bitcast %"class.v8::internal::compiler::Node"** %118 to i64*
  store i64 512, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::compiler::Node"** %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::Node"** %111, %"class.v8::internal::compiler::Node"*** %103, align 8
  %122 = bitcast %"class.v8::internal::compiler::Node"** %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::compiler::Node"*** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::compiler::Node"*** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 512
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to i64*
  store i64 512, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"** %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::compiler::Node"** %133, %"class.v8::internal::compiler::Node"*** %103, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"** %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 1
  %148 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %2, align 8
  %152 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::compiler::Node"*** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::compiler::Node"*** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::compiler::Node"*** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::Node"*** %155 to i64
  %159 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %154, i64 %163
  store %"class.v8::internal::compiler::Node"*** %164, %"class.v8::internal::compiler::Node"**** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::Node"*** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::compiler::Node"*** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::Node"**** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %167, i64 1
  %187 = bitcast %"class.v8::internal::compiler::Node"*** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::Node"*** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %178 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %167, %"class.v8::internal::compiler::Node"**** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 512
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  store i64 512, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::compiler::Node"** %148, %"class.v8::internal::compiler::Node"*** %103, align 8
  %202 = bitcast %"class.v8::internal::compiler::Node"** %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, i64 2
  %206 = icmp eq %"class.v8::internal::compiler::Node"*** %205, %91
  br i1 %206, label %150, label %130
}

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder5QueueEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %5, i32 %7) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %292

10:                                               ; preds = %2
  tail call void @_ZN2v88internal8compiler10CFGBuilder11BuildBlocksEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  %11 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %13, %16
  %18 = icmp eq i64 %17, 0
  %19 = shl i64 %17, 6
  %20 = add i64 %19, -1
  %21 = select i1 %18, i64 0, i64 %20
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %23
  %27 = icmp eq i64 %21, %26
  %28 = inttoptr i64 %16 to %"class.v8::internal::compiler::Node"***
  %29 = inttoptr i64 %13 to %"class.v8::internal::compiler::Node"***
  br i1 %27, label %30, label %37

30:                                               ; preds = %10
  %31 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %31) #10
  %32 = load i64, i64* %24, align 8
  %33 = load i64, i64* %22, align 8
  %34 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %35 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = add i64 %33, %32
  br label %37

37:                                               ; preds = %30, %10
  %38 = phi i64 [ %36, %30 ], [ %26, %10 ]
  %39 = phi %"class.v8::internal::compiler::Node"*** [ %35, %30 ], [ %29, %10 ]
  %40 = phi %"class.v8::internal::compiler::Node"*** [ %34, %30 ], [ %28, %10 ]
  %41 = icmp eq %"class.v8::internal::compiler::Node"*** %39, %40
  br i1 %41, label %49, label %42

42:                                               ; preds = %37
  %43 = lshr i64 %38, 9
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %40, i64 %43
  %45 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %44, align 8
  %46 = and i64 %38, 511
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, i64 %46
  %48 = bitcast %"class.v8::internal::compiler::Node"** %47 to i64*
  br label %49

49:                                               ; preds = %37, %42
  %50 = phi i64* [ %48, %42 ], [ null, %37 ]
  store i64 %3, i64* %50, align 8
  %51 = load i64, i64* %24, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %24, align 8
  %53 = load i32, i32* %6, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %4, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 5, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %57 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %58, align 8
  %60 = icmp eq %"class.v8::internal::compiler::Node"** %57, %59
  %61 = ptrtoint %"class.v8::internal::compiler::Node"** %59 to i64
  br i1 %60, label %67, label %62

62:                                               ; preds = %49
  %63 = bitcast %"class.v8::internal::compiler::Node"** %57 to i64*
  store i64 %3, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 1
  %65 = ptrtoint %"class.v8::internal::compiler::Node"** %64 to i64
  %66 = bitcast %"class.v8::internal::compiler::Node"*** %56 to i64*
  store i64 %65, i64* %66, align 8
  br label %292

67:                                               ; preds = %49
  %68 = ptrtoint %"class.v8::internal::compiler::Node"** %57 to i64
  %69 = bitcast %"class.v8::internal::compiler::Node"*** %56 to i64*
  %70 = bitcast %"class.std::__1::vector.23"* %55 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %68, %71
  %73 = ashr exact i64 %72, 3
  %74 = add nsw i64 %73, 1
  %75 = icmp ugt i64 %74, 268435455
  br i1 %75, label %76, label %78

76:                                               ; preds = %67
  %77 = bitcast %"class.std::__1::vector.23"* %55 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %77) #11
  unreachable

78:                                               ; preds = %67
  %79 = bitcast %"class.v8::internal::compiler::Node"*** %58 to i64*
  %80 = sub i64 %61, %71
  %81 = ashr exact i64 %80, 3
  %82 = icmp ult i64 %81, 134217727
  br i1 %82, label %83, label %88

83:                                               ; preds = %78
  %84 = ashr exact i64 %80, 2
  %85 = icmp ult i64 %84, %74
  %86 = select i1 %85, i64 %74, i64 %84
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %106, label %88

88:                                               ; preds = %83, %78
  %89 = phi i64 [ %86, %83 ], [ 268435455, %78 ]
  %90 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %91 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %90, align 8
  %92 = shl i64 %89, 3
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %91, i64 0, i32 2
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %91, i64 0, i32 3
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %96, %94
  %98 = icmp ugt i64 %92, %97
  br i1 %98, label %99, label %101, !prof !2

99:                                               ; preds = %88
  %100 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %91, i64 %92) #10
  br label %103

101:                                              ; preds = %88
  %102 = add i64 %94, %92
  store i64 %102, i64* %93, align 8
  br label %103

103:                                              ; preds = %101, %99
  %104 = phi i64 [ %100, %99 ], [ %94, %101 ]
  %105 = inttoptr i64 %104 to %"class.v8::internal::compiler::Node"**
  br label %106

106:                                              ; preds = %103, %83
  %107 = phi i64 [ %89, %103 ], [ 0, %83 ]
  %108 = phi %"class.v8::internal::compiler::Node"** [ %105, %103 ], [ null, %83 ]
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %73
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %107
  %111 = ptrtoint %"class.v8::internal::compiler::Node"** %110 to i64
  %112 = bitcast %"class.v8::internal::compiler::Node"** %109 to i64*
  store i64 %3, i64* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %109, i64 1
  %114 = ptrtoint %"class.v8::internal::compiler::Node"** %113 to i64
  %115 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %55, i64 0, i32 0, i32 0
  %116 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %115, align 8
  %117 = ptrtoint %"class.v8::internal::compiler::Node"** %116 to i64
  %118 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %56, align 8
  %119 = icmp eq %"class.v8::internal::compiler::Node"** %118, %116
  br i1 %119, label %289, label %120

120:                                              ; preds = %106
  %121 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %122 = ptrtoint %"class.v8::internal::compiler::Node"** %121 to i64
  %123 = sub i64 %122, %117
  %124 = lshr i64 %123, 3
  %125 = add nuw nsw i64 %124, 1
  %126 = icmp ult i64 %125, 4
  br i1 %126, label %219, label %127

127:                                              ; preds = %120
  %128 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %129 = ptrtoint %"class.v8::internal::compiler::Node"** %128 to i64
  %130 = sub i64 %129, %117
  %131 = lshr i64 %130, 3
  %132 = xor i64 %131, -1
  %133 = add nsw i64 %73, %132
  %134 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %133
  %135 = xor i64 %131, -1
  %136 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %135
  %137 = icmp ult %"class.v8::internal::compiler::Node"** %134, %118
  %138 = icmp ult %"class.v8::internal::compiler::Node"** %136, %109
  %139 = and i1 %137, %138
  br i1 %139, label %219, label %140

140:                                              ; preds = %127
  %141 = and i64 %125, 4611686018427387900
  %142 = sub nsw i64 0, %141
  %143 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %109, i64 %142
  %144 = sub nsw i64 0, %141
  %145 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %144
  %146 = add nsw i64 %141, -4
  %147 = lshr exact i64 %146, 2
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 1
  %150 = icmp eq i64 %146, 0
  br i1 %150, label %197, label %151

151:                                              ; preds = %140
  %152 = sub nuw nsw i64 %148, %149
  %153 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %109, i64 -1
  %154 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %155 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %109, i64 -1
  %156 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  br label %157

157:                                              ; preds = %157, %151
  %158 = phi i64 [ 0, %151 ], [ %192, %157 ]
  %159 = phi i64 [ %152, %151 ], [ %193, %157 ]
  %160 = sub i64 0, %158
  %161 = sub i64 0, %158
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 %160
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, i64 %161
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::Node"** %164 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8, !alias.scope !77
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -2
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 -1
  %169 = bitcast %"class.v8::internal::compiler::Node"** %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8, !alias.scope !77
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 -1
  %172 = bitcast %"class.v8::internal::compiler::Node"** %171 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %172, align 8, !alias.scope !80, !noalias !77
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 -2
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %173, i64 -1
  %175 = bitcast %"class.v8::internal::compiler::Node"** %174 to <2 x i64>*
  store <2 x i64> %170, <2 x i64>* %175, align 8, !alias.scope !80, !noalias !77
  %176 = sub nuw nsw i64 -4, %158
  %177 = sub nuw nsw i64 -4, %158
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, i64 %176
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 %177
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 -1
  %181 = bitcast %"class.v8::internal::compiler::Node"** %180 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8, !alias.scope !77
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 -2
  %184 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %183, i64 -1
  %185 = bitcast %"class.v8::internal::compiler::Node"** %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !77
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, i64 -1
  %188 = bitcast %"class.v8::internal::compiler::Node"** %187 to <2 x i64>*
  store <2 x i64> %182, <2 x i64>* %188, align 8, !alias.scope !80, !noalias !77
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, i64 -2
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -1
  %191 = bitcast %"class.v8::internal::compiler::Node"** %190 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %191, align 8, !alias.scope !80, !noalias !77
  %192 = add i64 %158, 8
  %193 = add i64 %159, -2
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %157, !llvm.loop !82

195:                                              ; preds = %157
  %196 = sub nuw nsw i64 -8, %158
  br label %197

197:                                              ; preds = %195, %140
  %198 = phi i64 [ 0, %140 ], [ %196, %195 ]
  %199 = icmp eq i64 %149, 0
  br i1 %199, label %217, label %200

200:                                              ; preds = %197
  %201 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %109, i64 -1
  %202 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %201, i64 %198
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %202, i64 %198
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %204, i64 -1
  %206 = bitcast %"class.v8::internal::compiler::Node"** %205 to <2 x i64>*
  %207 = load <2 x i64>, <2 x i64>* %206, align 8, !alias.scope !77
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %204, i64 -2
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %208, i64 -1
  %210 = bitcast %"class.v8::internal::compiler::Node"** %209 to <2 x i64>*
  %211 = load <2 x i64>, <2 x i64>* %210, align 8, !alias.scope !77
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %203, i64 -1
  %213 = bitcast %"class.v8::internal::compiler::Node"** %212 to <2 x i64>*
  store <2 x i64> %207, <2 x i64>* %213, align 8, !alias.scope !80, !noalias !77
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %203, i64 -2
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -1
  %216 = bitcast %"class.v8::internal::compiler::Node"** %215 to <2 x i64>*
  store <2 x i64> %211, <2 x i64>* %216, align 8, !alias.scope !80, !noalias !77
  br label %217

217:                                              ; preds = %197, %200
  %218 = icmp eq i64 %125, %141
  br i1 %218, label %289, label %219

219:                                              ; preds = %217, %127, %120
  %220 = phi %"class.v8::internal::compiler::Node"** [ %109, %127 ], [ %109, %120 ], [ %143, %217 ]
  %221 = phi %"class.v8::internal::compiler::Node"** [ %118, %127 ], [ %118, %120 ], [ %145, %217 ]
  %222 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -1
  %223 = ptrtoint %"class.v8::internal::compiler::Node"** %222 to i64
  %224 = sub i64 %223, %117
  %225 = lshr i64 %224, 3
  %226 = add nuw nsw i64 %225, 1
  %227 = and i64 %226, 7
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %240, label %229

229:                                              ; preds = %219, %229
  %230 = phi %"class.v8::internal::compiler::Node"** [ %233, %229 ], [ %220, %219 ]
  %231 = phi %"class.v8::internal::compiler::Node"** [ %234, %229 ], [ %221, %219 ]
  %232 = phi i64 [ %238, %229 ], [ %227, %219 ]
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %230, i64 -1
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %231, i64 -1
  %235 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = add i64 %232, -1
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %229, !llvm.loop !83

240:                                              ; preds = %229, %219
  %241 = phi %"class.v8::internal::compiler::Node"** [ undef, %219 ], [ %233, %229 ]
  %242 = phi %"class.v8::internal::compiler::Node"** [ %220, %219 ], [ %233, %229 ]
  %243 = phi %"class.v8::internal::compiler::Node"** [ %221, %219 ], [ %234, %229 ]
  %244 = icmp ult i64 %224, 56
  br i1 %244, label %289, label %245

245:                                              ; preds = %240, %245
  %246 = phi %"class.v8::internal::compiler::Node"** [ %283, %245 ], [ %242, %240 ]
  %247 = phi %"class.v8::internal::compiler::Node"** [ %284, %245 ], [ %243, %240 ]
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -1
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -1
  %250 = bitcast %"class.v8::internal::compiler::Node"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.v8::internal::compiler::Node"** %248 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -2
  %254 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -2
  %255 = bitcast %"class.v8::internal::compiler::Node"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.v8::internal::compiler::Node"** %253 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -3
  %259 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -3
  %260 = bitcast %"class.v8::internal::compiler::Node"** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.v8::internal::compiler::Node"** %258 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -4
  %264 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -4
  %265 = bitcast %"class.v8::internal::compiler::Node"** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.v8::internal::compiler::Node"** %263 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -5
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -5
  %270 = bitcast %"class.v8::internal::compiler::Node"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.v8::internal::compiler::Node"** %268 to i64*
  store i64 %271, i64* %272, align 8
  %273 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -6
  %274 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -6
  %275 = bitcast %"class.v8::internal::compiler::Node"** %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.v8::internal::compiler::Node"** %273 to i64*
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -7
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -7
  %280 = bitcast %"class.v8::internal::compiler::Node"** %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = bitcast %"class.v8::internal::compiler::Node"** %278 to i64*
  store i64 %281, i64* %282, align 8
  %283 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %246, i64 -8
  %284 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -8
  %285 = bitcast %"class.v8::internal::compiler::Node"** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast %"class.v8::internal::compiler::Node"** %283 to i64*
  store i64 %286, i64* %287, align 8
  %288 = icmp eq %"class.v8::internal::compiler::Node"** %284, %116
  br i1 %288, label %289, label %245, !llvm.loop !84

289:                                              ; preds = %240, %245, %217, %106
  %290 = phi %"class.v8::internal::compiler::Node"** [ %109, %106 ], [ %143, %217 ], [ %241, %240 ], [ %283, %245 ]
  %291 = ptrtoint %"class.v8::internal::compiler::Node"** %290 to i64
  store i64 %291, i64* %70, align 8
  store i64 %114, i64* %69, align 8
  store i64 %111, i64* %79, align 8
  br label %292

292:                                              ; preds = %2, %289, %62
  ret void
}

declare void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder13ConnectBlocksEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  switch i16 %6, label %31 [
    i16 1, label %7
    i16 10, label %7
    i16 2, label %8
    i16 3, label %11
    i16 11, label %14
    i16 18, label %17
    i16 17, label %20
    i16 20, label %23
    i16 744, label %26
    i16 745, label %26
    i16 746, label %26
    i16 747, label %26
    i16 748, label %26
    i16 749, label %26
    i16 750, label %26
    i16 751, label %26
    i16 752, label %26
    i16 753, label %26
    i16 754, label %26
    i16 755, label %26
    i16 756, label %26
    i16 757, label %26
    i16 758, label %26
    i16 759, label %26
    i16 760, label %26
    i16 761, label %26
    i16 762, label %26
    i16 763, label %26
    i16 764, label %26
    i16 765, label %26
    i16 766, label %26
    i16 767, label %26
    i16 768, label %26
    i16 769, label %26
    i16 770, label %26
    i16 771, label %26
    i16 772, label %26
    i16 773, label %26
    i16 774, label %26
    i16 775, label %26
    i16 776, label %26
    i16 777, label %26
    i16 778, label %26
    i16 779, label %26
    i16 780, label %26
    i16 781, label %26
    i16 782, label %26
    i16 783, label %26
    i16 784, label %26
    i16 785, label %26
    i16 786, label %26
    i16 787, label %26
    i16 788, label %26
    i16 789, label %26
    i16 790, label %26
    i16 791, label %26
    i16 792, label %26
    i16 793, label %26
    i16 794, label %26
    i16 795, label %26
    i16 796, label %26
    i16 797, label %26
    i16 798, label %26
    i16 799, label %26
    i16 800, label %26
    i16 801, label %26
    i16 802, label %26
    i16 803, label %26
    i16 804, label %26
    i16 805, label %26
    i16 806, label %26
    i16 807, label %26
    i16 808, label %26
    i16 809, label %26
    i16 810, label %26
    i16 811, label %26
    i16 812, label %26
    i16 813, label %26
    i16 814, label %26
    i16 815, label %26
    i16 816, label %26
    i16 817, label %26
    i16 818, label %26
    i16 819, label %26
    i16 820, label %26
    i16 821, label %26
    i16 822, label %26
    i16 823, label %26
    i16 824, label %26
    i16 825, label %26
    i16 826, label %26
    i16 827, label %26
    i16 828, label %26
    i16 829, label %26
    i16 830, label %26
    i16 831, label %26
    i16 832, label %26
    i16 833, label %26
    i16 834, label %26
    i16 835, label %26
    i16 836, label %26
    i16 837, label %26
    i16 838, label %26
    i16 839, label %26
    i16 840, label %26
    i16 841, label %26
    i16 842, label %26
    i16 843, label %26
    i16 844, label %26
    i16 845, label %26
    i16 846, label %26
    i16 847, label %26
    i16 848, label %26
    i16 849, label %26
    i16 850, label %26
    i16 851, label %26
    i16 852, label %26
    i16 853, label %26
    i16 854, label %26
    i16 855, label %26
    i16 49, label %26
  ]

7:                                                ; preds = %2, %2
  tail call void @_ZN2v88internal8compiler10CFGBuilder12ConnectMergeEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %31

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %9, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %10, %"class.v8::internal::compiler::Node"* %1, i32 2)
  tail call void @_ZN2v88internal8compiler10CFGBuilder13ConnectBranchEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %31

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %12, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %13, %"class.v8::internal::compiler::Node"* %1, i32 2)
  tail call void @_ZN2v88internal8compiler10CFGBuilder13ConnectSwitchEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %31

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %16 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %15, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %16, %"class.v8::internal::compiler::Node"* %1, i32 2)
  tail call void @_ZN2v88internal8compiler10CFGBuilder17ConnectDeoptimizeEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %31

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %19 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %18, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %19, %"class.v8::internal::compiler::Node"* %1, i32 2)
  tail call void @_ZN2v88internal8compiler10CFGBuilder15ConnectTailCallEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %31

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %22 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %21, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %22, %"class.v8::internal::compiler::Node"* %1, i32 2)
  tail call void @_ZN2v88internal8compiler10CFGBuilder13ConnectReturnEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %31

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %25 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %24, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %25, %"class.v8::internal::compiler::Node"* %1, i32 2)
  tail call void @_ZN2v88internal8compiler10CFGBuilder12ConnectThrowEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %31

26:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %27 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** null) #10
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %30 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %29, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %30, %"class.v8::internal::compiler::Node"* %1, i32 2)
  tail call void @_ZN2v88internal8compiler10CFGBuilder11ConnectCallEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %31

31:                                               ; preds = %2, %26, %28, %23, %20, %17, %14, %11, %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder11BuildBlocksEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  switch i16 %6, label %113 [
    i16 21, label %7
    i16 0, label %14
    i16 1, label %21
    i16 10, label %21
    i16 19, label %45
    i16 2, label %109
    i16 3, label %109
    i16 744, label %110
    i16 745, label %110
    i16 746, label %110
    i16 747, label %110
    i16 748, label %110
    i16 749, label %110
    i16 750, label %110
    i16 751, label %110
    i16 752, label %110
    i16 753, label %110
    i16 754, label %110
    i16 755, label %110
    i16 756, label %110
    i16 757, label %110
    i16 758, label %110
    i16 759, label %110
    i16 760, label %110
    i16 761, label %110
    i16 762, label %110
    i16 763, label %110
    i16 764, label %110
    i16 765, label %110
    i16 766, label %110
    i16 767, label %110
    i16 768, label %110
    i16 769, label %110
    i16 770, label %110
    i16 771, label %110
    i16 772, label %110
    i16 773, label %110
    i16 774, label %110
    i16 775, label %110
    i16 776, label %110
    i16 777, label %110
    i16 778, label %110
    i16 779, label %110
    i16 780, label %110
    i16 781, label %110
    i16 782, label %110
    i16 783, label %110
    i16 784, label %110
    i16 785, label %110
    i16 786, label %110
    i16 787, label %110
    i16 788, label %110
    i16 789, label %110
    i16 790, label %110
    i16 791, label %110
    i16 792, label %110
    i16 793, label %110
    i16 794, label %110
    i16 795, label %110
    i16 796, label %110
    i16 797, label %110
    i16 798, label %110
    i16 799, label %110
    i16 800, label %110
    i16 801, label %110
    i16 802, label %110
    i16 803, label %110
    i16 804, label %110
    i16 805, label %110
    i16 806, label %110
    i16 807, label %110
    i16 808, label %110
    i16 809, label %110
    i16 810, label %110
    i16 811, label %110
    i16 812, label %110
    i16 813, label %110
    i16 814, label %110
    i16 815, label %110
    i16 816, label %110
    i16 817, label %110
    i16 818, label %110
    i16 819, label %110
    i16 820, label %110
    i16 821, label %110
    i16 822, label %110
    i16 823, label %110
    i16 824, label %110
    i16 825, label %110
    i16 826, label %110
    i16 827, label %110
    i16 828, label %110
    i16 829, label %110
    i16 830, label %110
    i16 831, label %110
    i16 832, label %110
    i16 833, label %110
    i16 834, label %110
    i16 835, label %110
    i16 836, label %110
    i16 837, label %110
    i16 838, label %110
    i16 839, label %110
    i16 840, label %110
    i16 841, label %110
    i16 842, label %110
    i16 843, label %110
    i16 844, label %110
    i16 845, label %110
    i16 846, label %110
    i16 847, label %110
    i16 848, label %110
    i16 849, label %110
    i16 850, label %110
    i16 851, label %110
    i16 852, label %110
    i16 853, label %110
    i16 854, label %110
    i16 855, label %110
    i16 49, label %110
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %9 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %9, i64 0, i32 5
  %11 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %10, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %9, %"class.v8::internal::compiler::BasicBlock"* %11, %"class.v8::internal::compiler::Node"* %1) #10
  %12 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %12, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %13, %"class.v8::internal::compiler::Node"* %1, i32 2) #10
  br label %113

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %16 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %16, i64 0, i32 4
  %18 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %17, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %16, %"class.v8::internal::compiler::BasicBlock"* %18, %"class.v8::internal::compiler::Node"* %1) #10
  %19 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %20 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %19, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %20, %"class.v8::internal::compiler::Node"* %1, i32 2) #10
  br label %113

21:                                               ; preds = %2, %2
  %22 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %23 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %22, align 8
  %24 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %23, %"class.v8::internal::compiler::Node"* %1) #10
  %25 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %24, null
  br i1 %25, label %26, label %113

26:                                               ; preds = %21
  %27 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %22, align 8
  %28 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %27) #10
  %29 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %28, i64 0, i32 14, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 16777215
  %38 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %38, i64 0, i32 1
  %40 = load i8*, i8** %39, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0), i32 %34, i32 %37, i8* %40) #10
  br label %41

41:                                               ; preds = %31, %26
  %42 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %22, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %42, %"class.v8::internal::compiler::BasicBlock"* %28, %"class.v8::internal::compiler::Node"* %1) #10
  %43 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %44 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %43, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %44, %"class.v8::internal::compiler::Node"* %1, i32 2) #10
  br label %113

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 7
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %50, label %49, !prof !21

49:                                               ; preds = %45
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 5
  %52 = load i32, i32* %51, align 4
  %53 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  %54 = zext i1 %53 to i32
  %55 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %56 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %55) #10
  %57 = zext i1 %56 to i32
  %58 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %58, i64 0, i32 6
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %52, %54
  %62 = add i32 %61, %57
  %63 = add i32 %62, %60
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 251658240
  %67 = icmp eq i32 %66, 251658240
  %68 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %69 = add i64 %68, 32
  br i1 %67, label %70, label %74

70:                                               ; preds = %50
  %71 = inttoptr i64 %69 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 16
  br label %74

74:                                               ; preds = %50, %70
  %75 = phi i64 [ %73, %70 ], [ %69, %50 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"**
  %77 = sext i32 %63 to i64
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 %77
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %81 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %80, align 8
  %82 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %81, %"class.v8::internal::compiler::Node"* %79) #10
  %83 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %82, null
  br i1 %83, label %84, label %104

84:                                               ; preds = %74
  %85 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %80, align 8
  %86 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %85) #10
  %87 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %86, i64 0, i32 14, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i32
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %79, i64 0, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 16777215
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %79, i64 0, i32 0
  %97 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %97, i64 0, i32 1
  %99 = load i8*, i8** %98, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0), i32 %92, i32 %95, i8* %99) #10
  br label %100

100:                                              ; preds = %89, %84
  %101 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %80, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %101, %"class.v8::internal::compiler::BasicBlock"* %86, %"class.v8::internal::compiler::Node"* %79) #10
  %102 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %103 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %102, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %103, %"class.v8::internal::compiler::Node"* %79, i32 2) #10
  br label %104

104:                                              ; preds = %74, %100
  %105 = phi %"class.v8::internal::compiler::BasicBlock"* [ %86, %100 ], [ %82, %74 ]
  %106 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %80, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %106, %"class.v8::internal::compiler::BasicBlock"* %105, %"class.v8::internal::compiler::Node"* %1) #10
  %107 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %108 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %107, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %108, %"class.v8::internal::compiler::Node"* %1, i32 2) #10
  br label %113

109:                                              ; preds = %2, %2
  tail call void @_ZN2v88internal8compiler10CFGBuilder24BuildBlocksForSuccessorsEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %113

110:                                              ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %111 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** null) #10
  br i1 %111, label %112, label %113

112:                                              ; preds = %110
  tail call void @_ZN2v88internal8compiler10CFGBuilder24BuildBlocksForSuccessorsEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %113

113:                                              ; preds = %41, %21, %2, %110, %112, %109, %104, %14, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder24BuildBlocksForSuccessorsEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %10 = shl nsw i64 %7, 3
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %12
  %16 = icmp ugt i64 %10, %15
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %2
  %18 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9, i64 %10) #10
  br label %21

19:                                               ; preds = %2
  %20 = add i64 %12, %10
  store i64 %20, i64* %11, align 8
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi i64 [ %18, %17 ], [ %12, %19 ]
  %23 = inttoptr i64 %22 to %"class.v8::internal::compiler::Node"**
  tail call void @_ZN2v88internal8compiler14NodeProperties25CollectControlProjectionsEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %23, i64 %7) #10
  %24 = icmp eq i32 %6, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  br label %29

28:                                               ; preds = %55, %21
  ret void

29:                                               ; preds = %25, %55
  %30 = phi i64 [ 0, %25 ], [ %56, %55 ]
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, i64 %30
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %26, align 8
  %34 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %33, %"class.v8::internal::compiler::Node"* %32) #10
  %35 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %34, null
  br i1 %35, label %36, label %55

36:                                               ; preds = %29
  %37 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %26, align 8
  %38 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %37) #10
  %39 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %38, i64 0, i32 14, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 16777215
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 0
  %49 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %49, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0), i32 %44, i32 %47, i8* %51) #10
  br label %52

52:                                               ; preds = %41, %36
  %53 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %26, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %53, %"class.v8::internal::compiler::BasicBlock"* %38, %"class.v8::internal::compiler::Node"* %32) #10
  %54 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %27, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %54, %"class.v8::internal::compiler::Node"* %32, i32 2) #10
  br label %55

55:                                               ; preds = %29, %52
  %56 = add nuw i64 %30, 1
  %57 = icmp ult i64 %56, %7
  br i1 %57, label %29, label %28
}

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #4

declare %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler14NodeProperties25CollectControlProjectionsEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"**, i64) local_unnamed_addr #4

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder12ConnectMergeEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 10
  br i1 %7, label %8, label %30

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %10, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %12, i64 0, i32 2
  %14 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %14, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 251658240
  %18 = icmp eq i32 %17, 251658240
  %19 = ptrtoint %"class.v8::internal::compiler::Node"* %14 to i64
  %20 = add i64 %19, 32
  br i1 %18, label %21, label %25

21:                                               ; preds = %8
  %22 = inttoptr i64 %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 16
  br label %25

25:                                               ; preds = %8, %21
  %26 = phi i64 [ %24, %21 ], [ %20, %8 ]
  %27 = inttoptr i64 %26 to %"class.v8::internal::compiler::Node"**
  %28 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  %29 = icmp eq %"class.v8::internal::compiler::Node"* %28, %1
  br i1 %29, label %98, label %30

30:                                               ; preds = %2, %25
  %31 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %32 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %31, align 8
  %33 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %32, %"class.v8::internal::compiler::Node"* %1) #10
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = lshr i32 %35, 24
  %37 = and i32 %36, 15
  %38 = icmp eq i32 %37, 15
  %39 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %40 = add i64 %39, 32
  br i1 %38, label %41, label %48

41:                                               ; preds = %30
  %42 = inttoptr i64 %40 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %43 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %42, align 8
  %44 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %43 to i64
  %45 = add i64 %44, 16
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  br label %48

48:                                               ; preds = %30, %41
  %49 = phi i32 [ %47, %41 ], [ %37, %30 ]
  %50 = phi i64 [ %45, %41 ], [ %40, %30 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::Node"**
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, i64 %52
  %54 = icmp eq i32 %49, 0
  br i1 %54, label %98, label %55

55:                                               ; preds = %48
  %56 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %33, null
  %57 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %33, i64 0, i32 14, i32 0
  br i1 %56, label %58, label %77

58:                                               ; preds = %55, %73
  %59 = phi %"class.v8::internal::compiler::Node"** [ %75, %73 ], [ %51, %55 ]
  %60 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  %61 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %60)
  %62 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %58
  %65 = load i32, i32* %34, align 4
  %66 = and i32 %65, 16777215
  %67 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %67, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %61, i64 0, i32 14, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %66, i8* %69, i32 %72) #10
  br label %73

73:                                               ; preds = %58, %64
  %74 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %31, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %74, %"class.v8::internal::compiler::BasicBlock"* %61, %"class.v8::internal::compiler::BasicBlock"* null) #10
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 1
  %76 = icmp eq %"class.v8::internal::compiler::Node"** %75, %53
  br i1 %76, label %98, label %58

77:                                               ; preds = %55, %94
  %78 = phi %"class.v8::internal::compiler::Node"** [ %96, %94 ], [ %51, %55 ]
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %80 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %79)
  %81 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %94, label %83

83:                                               ; preds = %77
  %84 = load i32, i32* %34, align 4
  %85 = and i32 %84, 16777215
  %86 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %86, i64 0, i32 1
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %80, i64 0, i32 14, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = trunc i64 %90 to i32
  %92 = load i64, i64* %57, align 8
  %93 = trunc i64 %92 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %85, i8* %88, i32 %91, i32 %93) #10
  br label %94

94:                                               ; preds = %77, %83
  %95 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %31, align 8
  tail call void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* %95, %"class.v8::internal::compiler::BasicBlock"* %80, %"class.v8::internal::compiler::BasicBlock"* nonnull %33) #10
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 1
  %97 = icmp eq %"class.v8::internal::compiler::Node"** %96, %53
  br i1 %97, label %98, label %77

98:                                               ; preds = %94, %73, %48, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder13ConnectBranchEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [2 x %"class.v8::internal::compiler::BasicBlock"*], align 16
  %4 = bitcast [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = bitcast [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3 to %"class.v8::internal::compiler::Node"**
  call void @_ZN2v88internal8compiler14NodeProperties25CollectControlProjectionsEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** nonnull %5, i64 2) #10
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %8 = getelementptr inbounds [2 x %"class.v8::internal::compiler::BasicBlock"*], [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3, i64 0, i64 0
  %9 = bitcast [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3 to %"class.v8::internal::compiler::Node"**
  %10 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %9, align 16
  %11 = call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %7, %"class.v8::internal::compiler::Node"* %10) #10
  store %"class.v8::internal::compiler::BasicBlock"* %11, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %12 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %13 = getelementptr inbounds [2 x %"class.v8::internal::compiler::BasicBlock"*], [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3, i64 0, i64 1
  %14 = bitcast %"class.v8::internal::compiler::BasicBlock"** %13 to %"class.v8::internal::compiler::Node"**
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  %16 = call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %12, %"class.v8::internal::compiler::Node"* %15) #10
  store %"class.v8::internal::compiler::BasicBlock"* %16, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 1
  %18 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %18, i64 0, i32 12
  %20 = load %"class.v8::internal::ProfileDataFromFile"*, %"class.v8::internal::ProfileDataFromFile"** %19, align 8
  %21 = icmp eq %"class.v8::internal::ProfileDataFromFile"* %20, null
  br i1 %21, label %59, label %22

22:                                               ; preds = %2
  %23 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %23, i64 0, i32 14, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ProfileDataFromFile", %"class.v8::internal::ProfileDataFromFile"* %20, i64 0, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::ProfileDataFromFile", %"class.v8::internal::ProfileDataFromFile"* %20, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast double** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.79"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, %25
  br i1 %34, label %35, label %39

35:                                               ; preds = %22
  %36 = inttoptr i64 %31 to double*
  %37 = getelementptr inbounds double, double* %36, i64 %25
  %38 = load double, double* %37, align 8
  br label %39

39:                                               ; preds = %22, %35
  %40 = phi double [ %38, %35 ], [ 0.000000e+00, %22 ]
  %41 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 14, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %33, %42
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = inttoptr i64 %31 to double*
  %46 = getelementptr inbounds double, double* %45, i64 %42
  %47 = load double, double* %46, align 8
  br label %48

48:                                               ; preds = %39, %44
  %49 = phi double [ %47, %44 ], [ 0.000000e+00, %39 ]
  %50 = fcmp ogt double %40, 1.000000e+05
  %51 = fdiv double %40, 4.000000e+03
  %52 = fcmp ogt double %51, %49
  %53 = and i1 %50, %52
  br i1 %53, label %69, label %54

54:                                               ; preds = %48
  %55 = fcmp ogt double %49, 1.000000e+05
  %56 = fdiv double %49, 4.000000e+03
  %57 = fcmp ogt double %56, %40
  %58 = and i1 %55, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %2, %54
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %61 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %60, align 8
  %62 = call zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %61) #10
  switch i8 %62, label %82 [
    i8 2, label %66
    i8 1, label %63
  ]

63:                                               ; preds = %59
  %64 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %64, i64 0, i32 2
  store i8 1, i8* %65, align 8
  br label %82

66:                                               ; preds = %59
  %67 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %68 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %67, i64 0, i32 2
  store i8 1, i8* %68, align 8
  br label %82

69:                                               ; preds = %54, %48
  %70 = phi %"class.v8::internal::compiler::BasicBlock"* [ %16, %48 ], [ %23, %54 ]
  %71 = phi i8 [ 1, %48 ], [ 2, %54 ]
  %72 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %70, i64 0, i32 2
  store i8 1, i8* %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %74 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %75 = call zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %74) #10
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %69
  %78 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %79 = call zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %78) #10
  %80 = icmp eq i8 %71, %79
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.27, i64 0, i64 0)) #10
  br label %82

82:                                               ; preds = %59, %66, %63, %77, %69, %81
  %83 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 6
  %84 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, align 8
  %85 = icmp eq %"class.v8::internal::compiler::Node"* %84, %1
  br i1 %85, label %86, label %163

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 7
  %88 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %87, align 8
  %89 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %90 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %89, null
  %91 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %92 = icmp ne i8 %91, 0
  br i1 %90, label %93, label %105

93:                                               ; preds = %86
  br i1 %92, label %94, label %124

94:                                               ; preds = %93
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = and i32 %96, 16777215
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %99 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %99, i64 0, i32 1
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %88, i64 0, i32 14, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = trunc i64 %103 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %97, i8* %101, i32 %104) #10
  br label %120

105:                                              ; preds = %86
  br i1 %92, label %106, label %124

106:                                              ; preds = %105
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, 16777215
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %111 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %111, i64 0, i32 1
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %88, i64 0, i32 14, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = trunc i64 %115 to i32
  %117 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %89, i64 0, i32 14, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = trunc i64 %118 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %109, i8* %113, i32 %116, i32 %119) #10
  br label %120

120:                                              ; preds = %106, %94
  %121 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1
  %122 = icmp ne i8 %121, 0
  %123 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %87, align 8
  br label %124

124:                                              ; preds = %120, %93, %105
  %125 = phi %"class.v8::internal::compiler::BasicBlock"* [ %123, %120 ], [ %88, %93 ], [ %88, %105 ]
  %126 = phi i1 [ %122, %120 ], [ false, %93 ], [ false, %105 ]
  %127 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %128 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %127, null
  br i1 %128, label %129, label %141

129:                                              ; preds = %124
  br i1 %126, label %130, label %156

130:                                              ; preds = %129
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 16777215
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %135 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %135, i64 0, i32 1
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %125, i64 0, i32 14, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %139 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %133, i8* %137, i32 %140) #10
  br label %156

141:                                              ; preds = %124
  br i1 %126, label %142, label %156

142:                                              ; preds = %141
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 16777215
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %147 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %147, i64 0, i32 1
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %125, i64 0, i32 14, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = trunc i64 %151 to i32
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %127, i64 0, i32 14, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = trunc i64 %154 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %145, i8* %149, i32 %152, i32 %155) #10
  br label %156

156:                                              ; preds = %129, %130, %141, %142
  %157 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %158 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %87, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 8
  %160 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %159, align 8
  %161 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %162 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  call void @_ZN2v88internal8compiler8Schedule12InsertBranchEPNS1_10BasicBlockES4_PNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"* %157, %"class.v8::internal::compiler::BasicBlock"* %158, %"class.v8::internal::compiler::BasicBlock"* %160, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BasicBlock"* %161, %"class.v8::internal::compiler::BasicBlock"* %162) #10
  br label %262

163:                                              ; preds = %82
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %165 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %165, i64 0, i32 7
  %167 = load i32, i32* %166, align 4
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %170, label %169, !prof !21

169:                                              ; preds = %163
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %165, i64 0, i32 5
  %172 = load i32, i32* %171, align 4
  %173 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %165) #10
  %174 = zext i1 %173 to i32
  %175 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %164, align 8
  %176 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %175) #10
  %177 = zext i1 %176 to i32
  %178 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %164, align 8
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %178, i64 0, i32 6
  %180 = load i32, i32* %179, align 8
  %181 = add i32 %172, %174
  %182 = add i32 %181, %177
  %183 = add i32 %182, %180
  %184 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = and i32 %185, 251658240
  %187 = icmp eq i32 %186, 251658240
  %188 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %189 = add i64 %188, 32
  br i1 %187, label %190, label %194

190:                                              ; preds = %170
  %191 = inttoptr i64 %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = add i64 %192, 16
  br label %194

194:                                              ; preds = %170, %190
  %195 = phi i64 [ %193, %190 ], [ %189, %170 ]
  %196 = inttoptr i64 %195 to %"class.v8::internal::compiler::Node"**
  %197 = sext i32 %183 to i64
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 %197
  %199 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, align 8
  %200 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %199)
  %201 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %202 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %201, null
  %203 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %204 = icmp ne i8 %203, 0
  br i1 %202, label %205, label %215

205:                                              ; preds = %194
  br i1 %204, label %206, label %231

206:                                              ; preds = %205
  %207 = load i32, i32* %184, align 4
  %208 = and i32 %207, 16777215
  %209 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %164, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %209, i64 0, i32 1
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %200, i64 0, i32 14, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = trunc i64 %213 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %208, i8* %211, i32 %214) #10
  br label %228

215:                                              ; preds = %194
  br i1 %204, label %216, label %231

216:                                              ; preds = %215
  %217 = load i32, i32* %184, align 4
  %218 = and i32 %217, 16777215
  %219 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %164, align 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %219, i64 0, i32 1
  %221 = load i8*, i8** %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %200, i64 0, i32 14, i32 0
  %223 = load i64, i64* %222, align 8
  %224 = trunc i64 %223 to i32
  %225 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %201, i64 0, i32 14, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = trunc i64 %226 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %218, i8* %221, i32 %224, i32 %227) #10
  br label %228

228:                                              ; preds = %216, %206
  %229 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1
  %230 = icmp ne i8 %229, 0
  br label %231

231:                                              ; preds = %228, %205, %215
  %232 = phi i1 [ %230, %228 ], [ false, %205 ], [ false, %215 ]
  %233 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %234 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %233, null
  br i1 %234, label %235, label %245

235:                                              ; preds = %231
  br i1 %232, label %236, label %258

236:                                              ; preds = %235
  %237 = load i32, i32* %184, align 4
  %238 = and i32 %237, 16777215
  %239 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %164, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %239, i64 0, i32 1
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %200, i64 0, i32 14, i32 0
  %243 = load i64, i64* %242, align 8
  %244 = trunc i64 %243 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %238, i8* %241, i32 %244) #10
  br label %258

245:                                              ; preds = %231
  br i1 %232, label %246, label %258

246:                                              ; preds = %245
  %247 = load i32, i32* %184, align 4
  %248 = and i32 %247, 16777215
  %249 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %164, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %249, i64 0, i32 1
  %251 = load i8*, i8** %250, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %200, i64 0, i32 14, i32 0
  %253 = load i64, i64* %252, align 8
  %254 = trunc i64 %253 to i32
  %255 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %233, i64 0, i32 14, i32 0
  %256 = load i64, i64* %255, align 8
  %257 = trunc i64 %256 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %248, i8* %251, i32 %254, i32 %257) #10
  br label %258

258:                                              ; preds = %235, %236, %245, %246
  %259 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %260 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %261 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  call void @_ZN2v88internal8compiler8Schedule9AddBranchEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"* %259, %"class.v8::internal::compiler::BasicBlock"* %200, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BasicBlock"* %260, %"class.v8::internal::compiler::BasicBlock"* %261) #10
  br label %262

262:                                              ; preds = %258, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder13ConnectSwitchEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, align 8
  %10 = shl nsw i64 %7, 3
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %9, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %12
  %16 = icmp ugt i64 %10, %15
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %2
  %18 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %9, i64 %10) #10
  br label %21

19:                                               ; preds = %2
  %20 = add i64 %12, %10
  store i64 %20, i64* %11, align 8
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi i64 [ %18, %17 ], [ %12, %19 ]
  %23 = inttoptr i64 %22 to %"class.v8::internal::compiler::BasicBlock"**
  %24 = inttoptr i64 %22 to %"class.v8::internal::compiler::Node"**
  tail call void @_ZN2v88internal8compiler14NodeProperties25CollectControlProjectionsEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %24, i64 %7) #10
  %25 = icmp eq i32 %6, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i64 [ 0, %26 ], [ %35, %28 ]
  %30 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %27, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %23, i64 %29
  %32 = bitcast %"class.v8::internal::compiler::BasicBlock"** %31 to %"class.v8::internal::compiler::Node"**
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, align 8
  %34 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %30, %"class.v8::internal::compiler::Node"* %33) #10
  store %"class.v8::internal::compiler::BasicBlock"* %34, %"class.v8::internal::compiler::BasicBlock"** %31, align 8
  %35 = add nuw i64 %29, 1
  %36 = icmp eq i64 %35, %7
  br i1 %36, label %37, label %28

37:                                               ; preds = %28, %21
  %38 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 6
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %40 = icmp eq %"class.v8::internal::compiler::Node"* %39, %1
  br i1 %40, label %41, label %86

41:                                               ; preds = %37
  br i1 %25, label %45, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 7
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  br label %52

45:                                               ; preds = %83, %41
  %46 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %47 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 7
  %49 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 8
  %51 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %50, align 8
  tail call void @_ZN2v88internal8compiler8Schedule12InsertSwitchEPNS1_10BasicBlockES4_PNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Schedule"* %47, %"class.v8::internal::compiler::BasicBlock"* %49, %"class.v8::internal::compiler::BasicBlock"* %51, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BasicBlock"** %23, i64 %7) #10
  br label %159

52:                                               ; preds = %42, %83
  %53 = phi i64 [ 0, %42 ], [ %84, %83 ]
  %54 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %43, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %23, i64 %53
  %56 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %55, align 8
  %57 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %56, null
  %58 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %59 = icmp ne i8 %58, 0
  br i1 %57, label %60, label %70

60:                                               ; preds = %52
  br i1 %59, label %61, label %83

61:                                               ; preds = %60
  %62 = load i32, i32* %44, align 4
  %63 = and i32 %62, 16777215
  %64 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %64, i64 0, i32 1
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %54, i64 0, i32 14, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %63, i8* %66, i32 %69) #10
  br label %83

70:                                               ; preds = %52
  br i1 %59, label %71, label %83

71:                                               ; preds = %70
  %72 = load i32, i32* %44, align 4
  %73 = and i32 %72, 16777215
  %74 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %74, i64 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %54, i64 0, i32 14, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %78 to i32
  %80 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %56, i64 0, i32 14, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %73, i8* %76, i32 %79, i32 %82) #10
  br label %83

83:                                               ; preds = %60, %61, %70, %71
  %84 = add nuw i64 %53, 1
  %85 = icmp ult i64 %84, %7
  br i1 %85, label %52, label %45

86:                                               ; preds = %37
  %87 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %87, i64 0, i32 7
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %92, label %91, !prof !21

91:                                               ; preds = %86
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %87, i64 0, i32 5
  %94 = load i32, i32* %93, align 4
  %95 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %87) #10
  %96 = zext i1 %95 to i32
  %97 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %98 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %97) #10
  %99 = zext i1 %98 to i32
  %100 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %100, i64 0, i32 6
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %94, %96
  %104 = add i32 %103, %99
  %105 = add i32 %104, %102
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 251658240
  %109 = icmp eq i32 %108, 251658240
  %110 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %111 = add i64 %110, 32
  br i1 %109, label %112, label %116

112:                                              ; preds = %92
  %113 = inttoptr i64 %111 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, 16
  br label %116

116:                                              ; preds = %92, %112
  %117 = phi i64 [ %115, %112 ], [ %111, %92 ]
  %118 = inttoptr i64 %117 to %"class.v8::internal::compiler::Node"**
  %119 = sext i32 %105 to i64
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %119
  %121 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, align 8
  %122 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %121)
  br i1 %25, label %125, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %122, i64 0, i32 14, i32 0
  br label %128

125:                                              ; preds = %156, %116
  %126 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %127 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %126, align 8
  tail call void @_ZN2v88internal8compiler8Schedule9AddSwitchEPNS1_10BasicBlockEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Schedule"* %127, %"class.v8::internal::compiler::BasicBlock"* %122, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BasicBlock"** %23, i64 %7) #10
  br label %159

128:                                              ; preds = %123, %156
  %129 = phi i64 [ 0, %123 ], [ %157, %156 ]
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %23, i64 %129
  %131 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %130, align 8
  %132 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %131, null
  %133 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %134 = icmp ne i8 %133, 0
  br i1 %132, label %135, label %144

135:                                              ; preds = %128
  br i1 %134, label %136, label %156

136:                                              ; preds = %135
  %137 = load i32, i32* %106, align 4
  %138 = and i32 %137, 16777215
  %139 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %139, i64 0, i32 1
  %141 = load i8*, i8** %140, align 8
  %142 = load i64, i64* %124, align 8
  %143 = trunc i64 %142 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %138, i8* %141, i32 %143) #10
  br label %156

144:                                              ; preds = %128
  br i1 %134, label %145, label %156

145:                                              ; preds = %144
  %146 = load i32, i32* %106, align 4
  %147 = and i32 %146, 16777215
  %148 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %148, i64 0, i32 1
  %150 = load i8*, i8** %149, align 8
  %151 = load i64, i64* %124, align 8
  %152 = trunc i64 %151 to i32
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %131, i64 0, i32 14, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = trunc i64 %154 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %147, i8* %150, i32 %152, i32 %155) #10
  br label %156

156:                                              ; preds = %135, %136, %144, %145
  %157 = add nuw i64 %129, 1
  %158 = icmp ult i64 %157, %7
  br i1 %158, label %128, label %125

159:                                              ; preds = %125, %45
  br i1 %25, label %160, label %161

160:                                              ; preds = %175, %159
  ret void

161:                                              ; preds = %159, %175
  %162 = phi i64 [ %176, %175 ], [ 0, %159 ]
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %23, i64 %162
  %164 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %164, i64 0, i32 11, i32 0, i32 0, i32 0
  %166 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %165, align 8
  %167 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %167, i64 0, i32 0
  %169 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %168, align 8
  %170 = tail call zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %169) #10
  %171 = icmp eq i8 %170, 2
  br i1 %171, label %172, label %175

172:                                              ; preds = %161
  %173 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %173, i64 0, i32 2
  store i8 1, i8* %174, align 8
  br label %175

175:                                              ; preds = %161, %172
  %176 = add nuw i64 %162, 1
  %177 = icmp ult i64 %176, %7
  br i1 %177, label %161, label %160
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder17ConnectDeoptimizeEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8, !prof !21

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  %13 = zext i1 %12 to i32
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %15 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %14) #10
  %16 = zext i1 %15 to i32
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %11, %13
  %21 = add i32 %20, %16
  %22 = add i32 %21, %19
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 251658240
  %26 = icmp eq i32 %25, 251658240
  %27 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %28 = add i64 %27, 32
  br i1 %26, label %29, label %33

29:                                               ; preds = %9
  %30 = inttoptr i64 %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %9, %29
  %34 = phi i64 [ %32, %29 ], [ %28, %9 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = sext i32 %22 to i64
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 %36
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %38)
  %40 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %33
  %43 = load i32, i32* %23, align 4
  %44 = and i32 %43, 16777215
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %45, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %39, i64 0, i32 14, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %44, i8* %47, i32 %50) #10
  br label %51

51:                                               ; preds = %33, %42
  %52 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %53 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %52, align 8
  tail call void @_ZN2v88internal8compiler8Schedule13AddDeoptimizeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %53, %"class.v8::internal::compiler::BasicBlock"* %39, %"class.v8::internal::compiler::Node"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder15ConnectTailCallEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8, !prof !21

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  %13 = zext i1 %12 to i32
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %15 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %14) #10
  %16 = zext i1 %15 to i32
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %11, %13
  %21 = add i32 %20, %16
  %22 = add i32 %21, %19
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 251658240
  %26 = icmp eq i32 %25, 251658240
  %27 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %28 = add i64 %27, 32
  br i1 %26, label %29, label %33

29:                                               ; preds = %9
  %30 = inttoptr i64 %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %9, %29
  %34 = phi i64 [ %32, %29 ], [ %28, %9 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = sext i32 %22 to i64
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 %36
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %38)
  %40 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %33
  %43 = load i32, i32* %23, align 4
  %44 = and i32 %43, 16777215
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %45, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %39, i64 0, i32 14, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %44, i8* %47, i32 %50) #10
  br label %51

51:                                               ; preds = %33, %42
  %52 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %53 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %52, align 8
  tail call void @_ZN2v88internal8compiler8Schedule11AddTailCallEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %53, %"class.v8::internal::compiler::BasicBlock"* %39, %"class.v8::internal::compiler::Node"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder13ConnectReturnEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8, !prof !21

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  %13 = zext i1 %12 to i32
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %15 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %14) #10
  %16 = zext i1 %15 to i32
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %11, %13
  %21 = add i32 %20, %16
  %22 = add i32 %21, %19
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 251658240
  %26 = icmp eq i32 %25, 251658240
  %27 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %28 = add i64 %27, 32
  br i1 %26, label %29, label %33

29:                                               ; preds = %9
  %30 = inttoptr i64 %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %9, %29
  %34 = phi i64 [ %32, %29 ], [ %28, %9 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = sext i32 %22 to i64
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 %36
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %38)
  %40 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %33
  %43 = load i32, i32* %23, align 4
  %44 = and i32 %43, 16777215
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %45, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %39, i64 0, i32 14, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %44, i8* %47, i32 %50) #10
  br label %51

51:                                               ; preds = %33, %42
  %52 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %53 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %52, align 8
  tail call void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %53, %"class.v8::internal::compiler::BasicBlock"* %39, %"class.v8::internal::compiler::Node"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder12ConnectThrowEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8, !prof !21

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  %13 = zext i1 %12 to i32
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %15 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %14) #10
  %16 = zext i1 %15 to i32
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %11, %13
  %21 = add i32 %20, %16
  %22 = add i32 %21, %19
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 251658240
  %26 = icmp eq i32 %25, 251658240
  %27 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %28 = add i64 %27, 32
  br i1 %26, label %29, label %33

29:                                               ; preds = %9
  %30 = inttoptr i64 %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %9, %29
  %34 = phi i64 [ %32, %29 ], [ %28, %9 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = sext i32 %22 to i64
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, i64 %36
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %38)
  %40 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %33
  %43 = load i32, i32* %23, align 4
  %44 = and i32 %43, 16777215
  %45 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %45, i64 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %39, i64 0, i32 14, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %44, i8* %47, i32 %50) #10
  br label %51

51:                                               ; preds = %33, %42
  %52 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %53 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %52, align 8
  tail call void @_ZN2v88internal8compiler8Schedule8AddThrowEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %53, %"class.v8::internal::compiler::BasicBlock"* %39, %"class.v8::internal::compiler::Node"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10CFGBuilder11ConnectCallEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [2 x %"class.v8::internal::compiler::BasicBlock"*], align 16
  %4 = bitcast [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = bitcast [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3 to %"class.v8::internal::compiler::Node"**
  call void @_ZN2v88internal8compiler14NodeProperties25CollectControlProjectionsEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** nonnull %5, i64 2) #10
  %6 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %8 = getelementptr inbounds [2 x %"class.v8::internal::compiler::BasicBlock"*], [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3, i64 0, i64 0
  %9 = bitcast [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3 to %"class.v8::internal::compiler::Node"**
  %10 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %9, align 16
  %11 = call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %7, %"class.v8::internal::compiler::Node"* %10) #10
  store %"class.v8::internal::compiler::BasicBlock"* %11, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %12 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %13 = getelementptr inbounds [2 x %"class.v8::internal::compiler::BasicBlock"*], [2 x %"class.v8::internal::compiler::BasicBlock"*]* %3, i64 0, i64 1
  %14 = bitcast %"class.v8::internal::compiler::BasicBlock"** %13 to %"class.v8::internal::compiler::Node"**
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  %16 = call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %12, %"class.v8::internal::compiler::Node"* %15) #10
  store %"class.v8::internal::compiler::BasicBlock"* %16, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %16, i64 0, i32 2
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 7
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %24, label %23, !prof !21

23:                                               ; preds = %2
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %19) #10
  %28 = zext i1 %27 to i32
  %29 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %30 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %29) #10
  %31 = zext i1 %30 to i32
  %32 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %32, i64 0, i32 6
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %26, %28
  %36 = add i32 %35, %31
  %37 = add i32 %36, %34
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 251658240
  %41 = icmp eq i32 %40, 251658240
  %42 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %43 = add i64 %42, 32
  br i1 %41, label %44, label %48

44:                                               ; preds = %24
  %45 = inttoptr i64 %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 16
  br label %48

48:                                               ; preds = %24, %44
  %49 = phi i64 [ %47, %44 ], [ %43, %24 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::Node"**
  %51 = sext i32 %37 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, i64 %51
  %53 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %52, align 8
  %54 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %0, %"class.v8::internal::compiler::Node"* %53)
  %55 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %56 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %55, null
  %57 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %58 = icmp ne i8 %57, 0
  br i1 %56, label %59, label %69

59:                                               ; preds = %48
  br i1 %58, label %60, label %85

60:                                               ; preds = %59
  %61 = load i32, i32* %38, align 4
  %62 = and i32 %61, 16777215
  %63 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %63, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %54, i64 0, i32 14, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = trunc i64 %67 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %62, i8* %65, i32 %68) #10
  br label %82

69:                                               ; preds = %48
  br i1 %58, label %70, label %85

70:                                               ; preds = %69
  %71 = load i32, i32* %38, align 4
  %72 = and i32 %71, 16777215
  %73 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %73, i64 0, i32 1
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %54, i64 0, i32 14, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %55, i64 0, i32 14, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %80 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %72, i8* %75, i32 %78, i32 %81) #10
  br label %82

82:                                               ; preds = %70, %60
  %83 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1
  %84 = icmp ne i8 %83, 0
  br label %85

85:                                               ; preds = %82, %59, %69
  %86 = phi i1 [ %84, %82 ], [ false, %59 ], [ false, %69 ]
  %87 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %88 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %87, null
  br i1 %88, label %89, label %99

89:                                               ; preds = %85
  br i1 %86, label %90, label %112

90:                                               ; preds = %89
  %91 = load i32, i32* %38, align 4
  %92 = and i32 %91, 16777215
  %93 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %93, i64 0, i32 1
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %54, i64 0, i32 14, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = trunc i64 %97 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i32 %92, i8* %95, i32 %98) #10
  br label %112

99:                                               ; preds = %85
  br i1 %86, label %100, label %112

100:                                              ; preds = %99
  %101 = load i32, i32* %38, align 4
  %102 = and i32 %101, 16777215
  %103 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %103, i64 0, i32 1
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %54, i64 0, i32 14, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %87, i64 0, i32 14, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = trunc i64 %110 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %102, i8* %105, i32 %108, i32 %111) #10
  br label %112

112:                                              ; preds = %89, %90, %99, %100
  %113 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %6, align 8
  %114 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %8, align 16
  %115 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  call void @_ZN2v88internal8compiler8Schedule7AddCallEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"* %113, %"class.v8::internal::compiler::BasicBlock"* %54, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::BasicBlock"* %114, %"class.v8::internal::compiler::BasicBlock"* %115) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::CFGBuilder", %"class.v8::internal::compiler::CFGBuilder"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %3, align 8
  %5 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %4, %"class.v8::internal::compiler::Node"* %1) #10
  %6 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %5, null
  br i1 %6, label %7, label %48

7:                                                ; preds = %2, %39
  %8 = phi %"class.v8::internal::compiler::Node"* [ %44, %39 ], [ %1, %2 ]
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %8, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %10, i64 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %15, label %14, !prof !21

14:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %10, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %10) #10
  %19 = zext i1 %18 to i32
  %20 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %21 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %20) #10
  %22 = zext i1 %21 to i32
  %23 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %23, i64 0, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %17, %19
  %27 = add i32 %26, %22
  %28 = add i32 %27, %25
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %8, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 251658240
  %32 = icmp eq i32 %31, 251658240
  %33 = ptrtoint %"class.v8::internal::compiler::Node"* %8 to i64
  %34 = add i64 %33, 32
  br i1 %32, label %35, label %39

35:                                               ; preds = %15
  %36 = inttoptr i64 %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 16
  br label %39

39:                                               ; preds = %15, %35
  %40 = phi i64 [ %38, %35 ], [ %34, %15 ]
  %41 = inttoptr i64 %40 to %"class.v8::internal::compiler::Node"**
  %42 = sext i32 %28 to i64
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 %42
  %44 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, align 8
  %45 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %3, align 8
  %46 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %45, %"class.v8::internal::compiler::Node"* %44) #10
  %47 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %46, null
  br i1 %47, label %7, label %48

48:                                               ; preds = %39, %2
  %49 = phi %"class.v8::internal::compiler::BasicBlock"* [ %5, %2 ], [ %46, %39 ]
  ret %"class.v8::internal::compiler::BasicBlock"* %49
}

declare void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #4

declare zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule12InsertBranchEPNS1_10BasicBlockES4_PNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule9AddBranchEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule12InsertSwitchEPNS1_10BasicBlockES4_PNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"**, i64) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule9AddSwitchEPNS1_10BasicBlockEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"**, i64) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule13AddDeoptimizeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule11AddTailCallEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule8AddThrowEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler8Schedule7AddCallEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler18SpecialRPONumberer26ComputeAndInsertSpecialRPOEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %5, i64 0, i32 4
  %7 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %12, label %11, !prof !21

11:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28, i64 0, i64 0)) #11
  unreachable

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %7, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %17, label %16, !prof !21

16:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.29, i64 0, i64 0)) #11
  unreachable

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %5, i64 0, i32 3, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %5, i64 0, i32 3, i32 0, i32 0, i32 1
  %20 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.12"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = and i64 %24, 34359738360
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %28, label %27, !prof !21

27:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.30, i64 0, i64 0)) #11
  unreachable

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 5
  %30 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 6
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %5, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %34 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.12"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 7
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %44 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.v8::internal::ZoneVector.62"* %31 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 4
  %50 = icmp ugt i64 %42, %49
  %51 = inttoptr i64 %47 to %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*
  br i1 %50, label %52, label %56

52:                                               ; preds = %28
  %53 = getelementptr inbounds %"class.v8::internal::ZoneVector.62", %"class.v8::internal::ZoneVector.62"* %31, i64 0, i32 0
  %54 = sub i64 %42, %49
  tail call void @_ZNSt3__16vectorIN2v88internal8compiler18SpecialRPONumberer20SpecialRPOStackFrameENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.63"* %53, i64 %54) #10
  %55 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %4, align 8
  br label %60

56:                                               ; preds = %28
  %57 = icmp ult i64 %42, %49
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %51, i64 %42
  store %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %59, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %43, align 8
  br label %60

60:                                               ; preds = %52, %56, %58
  %61 = phi %"class.v8::internal::compiler::Schedule"* [ %55, %52 ], [ %5, %56 ], [ %5, %58 ]
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %61, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %61, i64 0, i32 1, i32 0, i32 0, i32 1
  %64 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::vector.12"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %65, %67
  %69 = ashr exact i64 %68, 3
  store i64 %69, i64* %40, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %79

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %75 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %75, i64 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %76, align 8
  %77 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %74, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %77, i64 0, i32 1
  store i64 0, i64* %78, align 8
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* %1, i32 -2) #10
  br label %79

79:                                               ; preds = %60, %73
  %80 = phi i1 [ false, %73 ], [ true, %60 ]
  %81 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 4, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %83 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %82 to i64*
  %84 = bitcast %"class.std::__1::vector.49"* %81 to i64*
  br i1 %80, label %716, label %85

85:                                               ; preds = %79
  %86 = load i64, i64* %83, align 8
  %87 = load i64, i64* %84, align 8
  %88 = sub i64 %86, %87
  %89 = sdiv exact i64 %88, 48
  %90 = trunc i64 %89 to i32
  %91 = getelementptr inbounds %"class.v8::internal::ZoneVector.62", %"class.v8::internal::ZoneVector.62"* %31, i64 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 5, i32 0
  %93 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast %"struct.std::__1::pair"** %93 to i64*
  %96 = bitcast %"class.std::__1::vector.56"* %92 to i64*
  %97 = bitcast %"struct.std::__1::pair"** %94 to i64*
  %98 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %92, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %101

101:                                              ; preds = %85, %253
  %102 = phi %"class.v8::internal::compiler::BasicBlock"* [ %30, %85 ], [ %256, %253 ]
  %103 = phi i32 [ 1, %85 ], [ %255, %253 ]
  %104 = phi i32 [ %90, %85 ], [ %254, %253 ]
  %105 = add nsw i32 %103, -1
  %106 = sext i32 %105 to i64
  %107 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %91, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %107, i64 %106, i32 0
  %109 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %108, align 8
  %110 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %109, %2
  %111 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %109 to i64
  br i1 %110, label %250, label %112

112:                                              ; preds = %101
  %113 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %107, i64 %106, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %109, i64 0, i32 12, i32 0
  %116 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %109, i64 0, i32 12, i32 0, i32 0, i32 1
  %117 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::vector.12"* %115 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %118, %120
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %114, %122
  br i1 %123, label %124, label %250

124:                                              ; preds = %112
  %125 = add nuw i64 %114, 1
  store i64 %125, i64* %113, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %109, i64 0, i32 12, i32 0, i32 0, i32 0
  %127 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %127, i64 %114
  %129 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %129, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  switch i32 %131, label %253 [
    i32 -1, label %243
    i32 -2, label %132
  ]

132:                                              ; preds = %124
  %133 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %93, align 8
  %134 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %94, align 8
  %135 = icmp ult %"struct.std::__1::pair"* %133, %134
  %136 = ptrtoint %"struct.std::__1::pair"* %134 to i64
  br i1 %135, label %137, label %142

137:                                              ; preds = %132
  %138 = bitcast %"struct.std::__1::pair"* %133 to i64*
  store i64 %111, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %133, i64 0, i32 1
  store i64 %114, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %133, i64 1
  %141 = ptrtoint %"struct.std::__1::pair"* %140 to i64
  store i64 %141, i64* %95, align 8
  br label %237

142:                                              ; preds = %132
  %143 = ptrtoint %"struct.std::__1::pair"* %133 to i64
  %144 = load i64, i64* %96, align 8
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 4
  %147 = add nsw i64 %146, 1
  %148 = icmp ugt i64 %147, 134217727
  br i1 %148, label %149, label %151

149:                                              ; preds = %142
  %150 = bitcast %"class.std::__1::vector.56"* %92 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %150) #11
  unreachable

151:                                              ; preds = %142
  %152 = sub i64 %136, %144
  %153 = ashr exact i64 %152, 4
  %154 = icmp ult i64 %153, 67108863
  br i1 %154, label %155, label %160

155:                                              ; preds = %151
  %156 = ashr exact i64 %152, 3
  %157 = icmp ult i64 %156, %147
  %158 = select i1 %157, i64 %147, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %155, %151
  %161 = phi i64 [ %158, %155 ], [ 134217727, %151 ]
  %162 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %98, align 8
  %163 = shl i64 %161, 4
  %164 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %162, i64 0, i32 2
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %162, i64 0, i32 3
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %167, %165
  %169 = icmp ugt i64 %163, %168
  br i1 %169, label %170, label %172, !prof !2

170:                                              ; preds = %160
  %171 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %162, i64 %163) #10
  br label %174

172:                                              ; preds = %160
  %173 = add i64 %165, %163
  store i64 %173, i64* %164, align 8
  br label %174

174:                                              ; preds = %172, %170
  %175 = phi i64 [ %171, %170 ], [ %165, %172 ]
  %176 = inttoptr i64 %175 to %"struct.std::__1::pair"*
  br label %177

177:                                              ; preds = %174, %155
  %178 = phi i64 [ %161, %174 ], [ 0, %155 ]
  %179 = phi %"struct.std::__1::pair"* [ %176, %174 ], [ null, %155 ]
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %179, i64 %146
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %179, i64 %178
  %182 = ptrtoint %"struct.std::__1::pair"* %181 to i64
  %183 = bitcast %"struct.std::__1::pair"* %180 to i64*
  store i64 %111, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %179, i64 %146, i32 1
  store i64 %114, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %180, i64 1
  %186 = ptrtoint %"struct.std::__1::pair"* %185 to i64
  %187 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %99, align 8
  %188 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %93, align 8
  %189 = icmp eq %"struct.std::__1::pair"* %188, %187
  br i1 %189, label %234, label %190

190:                                              ; preds = %177
  %191 = ptrtoint %"struct.std::__1::pair"* %187 to i64
  %192 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 -1
  %193 = ptrtoint %"struct.std::__1::pair"* %192 to i64
  %194 = sub i64 %193, %191
  %195 = lshr i64 %194, 4
  %196 = add nuw nsw i64 %195, 1
  %197 = and i64 %196, 3
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %209, label %199

199:                                              ; preds = %190, %199
  %200 = phi %"struct.std::__1::pair"* [ %203, %199 ], [ %180, %190 ]
  %201 = phi %"struct.std::__1::pair"* [ %204, %199 ], [ %188, %190 ]
  %202 = phi i64 [ %207, %199 ], [ %197, %190 ]
  %203 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %200, i64 -1
  %204 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %201, i64 -1
  %205 = bitcast %"struct.std::__1::pair"* %203 to i8*
  %206 = bitcast %"struct.std::__1::pair"* %204 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %206, i64 16, i1 false) #10
  %207 = add i64 %202, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %199, !llvm.loop !85

209:                                              ; preds = %199, %190
  %210 = phi %"struct.std::__1::pair"* [ undef, %190 ], [ %203, %199 ]
  %211 = phi %"struct.std::__1::pair"* [ %180, %190 ], [ %203, %199 ]
  %212 = phi %"struct.std::__1::pair"* [ %188, %190 ], [ %204, %199 ]
  %213 = icmp ult i64 %194, 48
  br i1 %213, label %234, label %214

214:                                              ; preds = %209, %214
  %215 = phi %"struct.std::__1::pair"* [ %229, %214 ], [ %211, %209 ]
  %216 = phi %"struct.std::__1::pair"* [ %230, %214 ], [ %212, %209 ]
  %217 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %215, i64 -1
  %218 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 -1
  %219 = bitcast %"struct.std::__1::pair"* %217 to i8*
  %220 = bitcast %"struct.std::__1::pair"* %218 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 16, i1 false) #10
  %221 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %215, i64 -2
  %222 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 -2
  %223 = bitcast %"struct.std::__1::pair"* %221 to i8*
  %224 = bitcast %"struct.std::__1::pair"* %222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 16, i1 false) #10
  %225 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %215, i64 -3
  %226 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 -3
  %227 = bitcast %"struct.std::__1::pair"* %225 to i8*
  %228 = bitcast %"struct.std::__1::pair"* %226 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 16, i1 false) #10
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %215, i64 -4
  %230 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %216, i64 -4
  %231 = bitcast %"struct.std::__1::pair"* %229 to i8*
  %232 = bitcast %"struct.std::__1::pair"* %230 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %231, i8* align 8 %232, i64 16, i1 false) #10
  %233 = icmp eq %"struct.std::__1::pair"* %230, %187
  br i1 %233, label %234, label %214

234:                                              ; preds = %209, %214, %177
  %235 = phi %"struct.std::__1::pair"* [ %180, %177 ], [ %210, %209 ], [ %229, %214 ]
  %236 = ptrtoint %"struct.std::__1::pair"* %235 to i64
  store i64 %236, i64* %96, align 8
  store i64 %186, i64* %95, align 8
  store i64 %182, i64* %97, align 8
  br label %237

237:                                              ; preds = %137, %234
  %238 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %129, i64 0, i32 0
  %239 = load i32, i32* %238, align 8
  %240 = icmp sgt i32 %239, -1
  br i1 %240, label %253, label %241

241:                                              ; preds = %237
  %242 = add nsw i32 %104, 1
  store i32 %104, i32* %238, align 8
  br label %253

243:                                              ; preds = %124
  %244 = sext i32 %103 to i64
  %245 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %100, align 8
  %246 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %245, i64 %244, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %129, %"class.v8::internal::compiler::BasicBlock"** %246, align 8
  %247 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %100, align 8
  %248 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %247, i64 %244, i32 1
  store i64 0, i64* %248, align 8
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* %129, i32 -2) #10
  %249 = add nuw nsw i32 %103, 1
  br label %253

250:                                              ; preds = %101, %112
  %251 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %109, i64 0, i32 5
  store %"class.v8::internal::compiler::BasicBlock"* %102, %"class.v8::internal::compiler::BasicBlock"** %251, align 8
  %252 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %108, align 8
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* %252, i32 -3) #10
  br label %253

253:                                              ; preds = %124, %243, %237, %241, %250
  %254 = phi i32 [ %104, %250 ], [ %104, %237 ], [ %242, %241 ], [ %104, %243 ], [ %104, %124 ]
  %255 = phi i32 [ %105, %250 ], [ %103, %237 ], [ %103, %241 ], [ %249, %243 ], [ %103, %124 ]
  %256 = phi %"class.v8::internal::compiler::BasicBlock"* [ %109, %250 ], [ %102, %237 ], [ %102, %241 ], [ %102, %243 ], [ %102, %124 ]
  %257 = icmp sgt i32 %255, 0
  br i1 %257, label %101, label %258

258:                                              ; preds = %253
  %259 = load i64, i64* %83, align 8
  %260 = load i64, i64* %84, align 8
  %261 = sub i64 %259, %260
  %262 = sdiv exact i64 %261, 48
  %263 = trunc i64 %262 to i32
  %264 = icmp sgt i32 %254, %263
  br i1 %264, label %265, label %716

265:                                              ; preds = %258
  %266 = sext i32 %254 to i64
  %267 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 5
  tail call void @_ZN2v88internal8compiler18SpecialRPONumberer15ComputeLoopInfoEPNS0_10ZoneVectorINS2_20SpecialRPOStackFrameEEEmPNS3_INSt3__14pairIPNS1_10BasicBlockEmEEEE(%"class.v8::internal::compiler::SpecialRPONumberer"* %0, %"class.v8::internal::ZoneVector.62"* %31, i64 %266, %"class.v8::internal::ZoneVector.55"* %267)
  %268 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 0
  %269 = load i32, i32* %268, align 8
  %270 = icmp sgt i32 %269, -1
  br i1 %270, label %271, label %276

271:                                              ; preds = %265
  %272 = sext i32 %269 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %81, i64 0, i32 0, i32 0
  %274 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %273, align 8
  %275 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %274, i64 %272
  br label %276

276:                                              ; preds = %265, %271
  %277 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %275, %271 ], [ null, %265 ]
  %278 = load i32, i32* %70, align 4
  %279 = icmp eq i32 %278, -3
  br i1 %279, label %280, label %716

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %282 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %281, align 8
  %283 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %282, i64 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %283, align 8
  %284 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %281, align 8
  %285 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %284, i64 0, i32 1
  store i64 0, i64* %285, align 8
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* %1, i32 -2) #10
  %286 = getelementptr inbounds %"class.v8::internal::ZoneVector.62", %"class.v8::internal::ZoneVector.62"* %31, i64 0, i32 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %81, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 0
  %289 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %290

290:                                              ; preds = %280, %711
  %291 = phi %"class.v8::internal::compiler::BasicBlock"* [ %30, %280 ], [ %714, %711 ]
  %292 = phi i32 [ 1, %280 ], [ %713, %711 ]
  %293 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %277, %280 ], [ %712, %711 ]
  %294 = add nsw i32 %292, -1
  %295 = sext i32 %294 to i64
  %296 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %286, align 8
  %297 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %296, i64 %295, i32 0
  %298 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %297, align 8
  %299 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %298, %2
  br i1 %299, label %318, label %300

300:                                              ; preds = %290
  %301 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %296, i64 %295, i32 1
  %302 = load i64, i64* %301, align 8
  %303 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 12, i32 0
  %304 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 12, i32 0, i32 0, i32 1
  %305 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.std::__1::vector.12"* %303 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = sub i64 %306, %308
  %310 = ashr exact i64 %309, 3
  %311 = icmp ult i64 %302, %310
  br i1 %311, label %312, label %318

312:                                              ; preds = %300
  %313 = add nuw i64 %302, 1
  store i64 %313, i64* %301, align 8
  %314 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 12, i32 0, i32 0, i32 0
  %315 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %315, i64 %302
  %317 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %316, align 8
  br label %369

318:                                              ; preds = %290, %300
  %319 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 0
  %320 = load i32, i32* %319, align 8
  %321 = icmp sgt i32 %320, -1
  br i1 %321, label %322, label %688

322:                                              ; preds = %318
  %323 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = icmp eq i32 %324, -2
  br i1 %325, label %326, label %333

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 5
  store %"class.v8::internal::compiler::BasicBlock"* %291, %"class.v8::internal::compiler::BasicBlock"** %327, align 8
  %328 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %293, i64 0, i32 5
  store %"class.v8::internal::compiler::BasicBlock"* %298, %"class.v8::internal::compiler::BasicBlock"** %328, align 8
  %329 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %293, i64 0, i32 4
  %330 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %329, align 8
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* %298, i32 -4) #10
  %331 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %293, i64 0, i32 3
  %332 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %331, align 8
  br label %333

333:                                              ; preds = %326, %322
  %334 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %332, %326 ], [ %293, %322 ]
  %335 = phi %"class.v8::internal::compiler::BasicBlock"* [ %330, %326 ], [ %291, %322 ]
  %336 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %296, i64 %295, i32 1
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 12, i32 0
  %339 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 12, i32 0, i32 0, i32 1
  %340 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %339 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = bitcast %"class.std::__1::vector.12"* %338 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = sub i64 %341, %343
  %345 = ashr exact i64 %344, 3
  %346 = sub i64 %337, %345
  %347 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %298, %1
  br i1 %347, label %688, label %348

348:                                              ; preds = %333
  %349 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %287, align 8
  %350 = load i32, i32* %319, align 8
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %349, i64 %351, i32 1
  %353 = load %"class.v8::internal::ZoneVector.11"*, %"class.v8::internal::ZoneVector.11"** %352, align 8
  %354 = icmp eq %"class.v8::internal::ZoneVector.11"* %353, null
  br i1 %354, label %688, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %353, i64 0, i32 0, i32 0, i32 1
  %357 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.v8::internal::ZoneVector.11"* %353 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = sub i64 %358, %360
  %362 = ashr exact i64 %361, 3
  %363 = icmp ult i64 %346, %362
  br i1 %363, label %364, label %688

364:                                              ; preds = %355
  %365 = inttoptr i64 %360 to %"class.v8::internal::compiler::BasicBlock"**
  %366 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %365, i64 %346
  %367 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %366, align 8
  %368 = add i64 %337, 1
  store i64 %368, i64* %336, align 8
  br label %369

369:                                              ; preds = %364, %312
  %370 = phi %"class.v8::internal::compiler::BasicBlock"* [ %317, %312 ], [ %367, %364 ]
  %371 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %293, %312 ], [ %334, %364 ]
  %372 = phi %"class.v8::internal::compiler::BasicBlock"* [ %291, %312 ], [ %335, %364 ]
  %373 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %370, null
  br i1 %373, label %688, label %374

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %370, i64 0, i32 1
  %376 = load i32, i32* %375, align 4
  switch i32 %376, label %377 [
    i32 -2, label %711
    i32 -4, label %711
  ]

377:                                              ; preds = %374
  %378 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %371, null
  br i1 %378, label %668, label %379

379:                                              ; preds = %377
  %380 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %371, i64 0, i32 2
  %381 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %380, align 8
  %382 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %370, i64 0, i32 14, i32 0
  %383 = load i64, i64* %382, align 8
  %384 = trunc i64 %383 to i32
  %385 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %381, i64 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = icmp eq i32 %386, 1
  %388 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %381, i64 0, i32 2
  br i1 %387, label %389, label %391

389:                                              ; preds = %379
  %390 = bitcast %"union.v8::internal::BitVector::DataStorage"* %388 to i64*
  br label %397

391:                                              ; preds = %379
  %392 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %388, i64 0, i32 0
  %393 = load i64*, i64** %392, align 8
  %394 = sdiv i32 %384, 64
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds i64, i64* %393, i64 %395
  br label %397

397:                                              ; preds = %389, %391
  %398 = phi i64* [ %390, %389 ], [ %396, %391 ]
  %399 = load i64, i64* %398, align 8
  %400 = srem i32 %384, 64
  %401 = zext i32 %400 to i64
  %402 = shl i64 1, %401
  %403 = and i64 %399, %402
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %668

405:                                              ; preds = %397
  %406 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %288, align 8
  %407 = ptrtoint %"class.v8::internal::Zone"* %406 to i64
  %408 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %370 to i64
  %409 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %371, i64 0, i32 1
  %410 = load %"class.v8::internal::ZoneVector.11"*, %"class.v8::internal::ZoneVector.11"** %409, align 8
  %411 = icmp eq %"class.v8::internal::ZoneVector.11"* %410, null
  br i1 %411, label %412, label %429

412:                                              ; preds = %405
  %413 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %406, i64 0, i32 2
  %414 = load i64, i64* %413, align 8
  %415 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %406, i64 0, i32 3
  %416 = load i64, i64* %415, align 8
  %417 = sub i64 %416, %414
  %418 = icmp ult i64 %417, 32
  br i1 %418, label %419, label %421, !prof !2

419:                                              ; preds = %412
  %420 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %406, i64 32) #10
  br label %423

421:                                              ; preds = %412
  %422 = add i64 %414, 32
  store i64 %422, i64* %413, align 8
  br label %423

423:                                              ; preds = %421, %419
  %424 = phi i64 [ %420, %419 ], [ %414, %421 ]
  %425 = inttoptr i64 %424 to i8*
  %426 = inttoptr i64 %424 to %"class.v8::internal::ZoneVector.11"*
  %427 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %426, i64 0, i32 0, i32 0, i32 2, i32 1
  %428 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %427 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %425, i8 0, i64 24, i1 false) #10
  store i64 %407, i64* %428, align 8
  store %"class.v8::internal::ZoneVector.11"* %426, %"class.v8::internal::ZoneVector.11"** %409, align 8
  br label %429

429:                                              ; preds = %405, %423
  %430 = phi %"class.v8::internal::ZoneVector.11"* [ %426, %423 ], [ %410, %405 ]
  %431 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %430, i64 0, i32 0, i32 0, i32 1
  %432 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %431, align 8
  %433 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %430, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %434 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %433, align 8
  %435 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %432, %434
  %436 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %434 to i64
  br i1 %435, label %442, label %437

437:                                              ; preds = %429
  %438 = bitcast %"class.v8::internal::compiler::BasicBlock"** %432 to i64*
  store i64 %408, i64* %438, align 8
  %439 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %432, i64 1
  %440 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %439 to i64
  %441 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %431 to i64*
  store i64 %440, i64* %441, align 8
  br label %711

442:                                              ; preds = %429
  %443 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %432 to i64
  %444 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %431 to i64*
  %445 = bitcast %"class.v8::internal::ZoneVector.11"* %430 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = sub i64 %443, %446
  %448 = ashr exact i64 %447, 3
  %449 = add nsw i64 %448, 1
  %450 = icmp ugt i64 %449, 268435455
  br i1 %450, label %451, label %453

451:                                              ; preds = %442
  %452 = bitcast %"class.v8::internal::ZoneVector.11"* %430 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %452) #11
  unreachable

453:                                              ; preds = %442
  %454 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %433 to i64*
  %455 = sub i64 %436, %446
  %456 = ashr exact i64 %455, 3
  %457 = icmp ult i64 %456, 134217727
  br i1 %457, label %458, label %463

458:                                              ; preds = %453
  %459 = ashr exact i64 %455, 2
  %460 = icmp ult i64 %459, %449
  %461 = select i1 %460, i64 %449, i64 %459
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %481, label %463

463:                                              ; preds = %458, %453
  %464 = phi i64 [ %461, %458 ], [ 268435455, %453 ]
  %465 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %430, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %466 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %465, align 8
  %467 = shl i64 %464, 3
  %468 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %466, i64 0, i32 2
  %469 = load i64, i64* %468, align 8
  %470 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %466, i64 0, i32 3
  %471 = load i64, i64* %470, align 8
  %472 = sub i64 %471, %469
  %473 = icmp ugt i64 %467, %472
  br i1 %473, label %474, label %476, !prof !2

474:                                              ; preds = %463
  %475 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %466, i64 %467) #10
  br label %478

476:                                              ; preds = %463
  %477 = add i64 %469, %467
  store i64 %477, i64* %468, align 8
  br label %478

478:                                              ; preds = %476, %474
  %479 = phi i64 [ %475, %474 ], [ %469, %476 ]
  %480 = inttoptr i64 %479 to %"class.v8::internal::compiler::BasicBlock"**
  br label %481

481:                                              ; preds = %478, %458
  %482 = phi i64 [ %464, %478 ], [ 0, %458 ]
  %483 = phi %"class.v8::internal::compiler::BasicBlock"** [ %480, %478 ], [ null, %458 ]
  %484 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %483, i64 %448
  %485 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %483, i64 %482
  %486 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %485 to i64
  %487 = bitcast %"class.v8::internal::compiler::BasicBlock"** %484 to i64*
  store i64 %408, i64* %487, align 8
  %488 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %484, i64 1
  %489 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %488 to i64
  %490 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %430, i64 0, i32 0, i32 0, i32 0
  %491 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %490, align 8
  %492 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %491 to i64
  %493 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %431, align 8
  %494 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %493, %491
  br i1 %494, label %665, label %495

495:                                              ; preds = %481
  %496 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %493, i64 -1
  %497 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %496 to i64
  %498 = sub i64 %497, %492
  %499 = lshr i64 %498, 3
  %500 = add nuw nsw i64 %499, 1
  %501 = icmp ult i64 %500, 4
  br i1 %501, label %595, label %502

502:                                              ; preds = %495
  %503 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %483, i64 -1
  %504 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %493, i64 -1
  %505 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %504 to i64
  %506 = sub i64 %505, %492
  %507 = lshr i64 %506, 3
  %508 = sub nsw i64 %448, %507
  %509 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %503, i64 %508
  %510 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %493, i64 -1
  %511 = sub nsw i64 0, %507
  %512 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %510, i64 %511
  %513 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %509, %493
  %514 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %512, %484
  %515 = and i1 %513, %514
  br i1 %515, label %595, label %516

516:                                              ; preds = %502
  %517 = and i64 %500, 4611686018427387900
  %518 = sub nsw i64 0, %517
  %519 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %484, i64 %518
  %520 = sub nsw i64 0, %517
  %521 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %493, i64 %520
  %522 = add nsw i64 %517, -4
  %523 = lshr exact i64 %522, 2
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %571, label %527

527:                                              ; preds = %516
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %484, i64 -1
  %530 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %493, i64 -1
  %531 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %484, i64 -1
  %532 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %493, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %529, i64 %536
  %539 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %530, i64 %537
  %540 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %539, i64 -1
  %541 = bitcast %"class.v8::internal::compiler::BasicBlock"** %540 to <2 x i64>*
  %542 = load <2 x i64>, <2 x i64>* %541, align 8, !alias.scope !86
  %543 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %539, i64 -2
  %544 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %543, i64 -1
  %545 = bitcast %"class.v8::internal::compiler::BasicBlock"** %544 to <2 x i64>*
  %546 = load <2 x i64>, <2 x i64>* %545, align 8, !alias.scope !86
  %547 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %538, i64 -1
  %548 = bitcast %"class.v8::internal::compiler::BasicBlock"** %547 to <2 x i64>*
  store <2 x i64> %542, <2 x i64>* %548, align 8, !alias.scope !89, !noalias !86
  %549 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %538, i64 -2
  %550 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %549, i64 -1
  %551 = bitcast %"class.v8::internal::compiler::BasicBlock"** %550 to <2 x i64>*
  store <2 x i64> %546, <2 x i64>* %551, align 8, !alias.scope !89, !noalias !86
  %552 = sub nuw nsw i64 -4, %534
  %553 = sub nuw nsw i64 -4, %534
  %554 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %531, i64 %552
  %555 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %532, i64 %553
  %556 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %555, i64 -1
  %557 = bitcast %"class.v8::internal::compiler::BasicBlock"** %556 to <2 x i64>*
  %558 = load <2 x i64>, <2 x i64>* %557, align 8, !alias.scope !86
  %559 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %555, i64 -2
  %560 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %559, i64 -1
  %561 = bitcast %"class.v8::internal::compiler::BasicBlock"** %560 to <2 x i64>*
  %562 = load <2 x i64>, <2 x i64>* %561, align 8, !alias.scope !86
  %563 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %554, i64 -1
  %564 = bitcast %"class.v8::internal::compiler::BasicBlock"** %563 to <2 x i64>*
  store <2 x i64> %558, <2 x i64>* %564, align 8, !alias.scope !89, !noalias !86
  %565 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %554, i64 -2
  %566 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %565, i64 -1
  %567 = bitcast %"class.v8::internal::compiler::BasicBlock"** %566 to <2 x i64>*
  store <2 x i64> %562, <2 x i64>* %567, align 8, !alias.scope !89, !noalias !86
  %568 = add i64 %534, 8
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !91

571:                                              ; preds = %533, %516
  %572 = phi i64 [ 0, %516 ], [ %568, %533 ]
  %573 = icmp eq i64 %525, 0
  br i1 %573, label %593, label %574

574:                                              ; preds = %571
  %575 = sub i64 0, %572
  %576 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %484, i64 -1
  %577 = sub i64 0, %572
  %578 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %493, i64 -1
  %579 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %576, i64 %575
  %580 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %578, i64 %577
  %581 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %580, i64 -1
  %582 = bitcast %"class.v8::internal::compiler::BasicBlock"** %581 to <2 x i64>*
  %583 = load <2 x i64>, <2 x i64>* %582, align 8, !alias.scope !86
  %584 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %580, i64 -2
  %585 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %584, i64 -1
  %586 = bitcast %"class.v8::internal::compiler::BasicBlock"** %585 to <2 x i64>*
  %587 = load <2 x i64>, <2 x i64>* %586, align 8, !alias.scope !86
  %588 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %579, i64 -1
  %589 = bitcast %"class.v8::internal::compiler::BasicBlock"** %588 to <2 x i64>*
  store <2 x i64> %583, <2 x i64>* %589, align 8, !alias.scope !89, !noalias !86
  %590 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %579, i64 -2
  %591 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %590, i64 -1
  %592 = bitcast %"class.v8::internal::compiler::BasicBlock"** %591 to <2 x i64>*
  store <2 x i64> %587, <2 x i64>* %592, align 8, !alias.scope !89, !noalias !86
  br label %593

593:                                              ; preds = %571, %574
  %594 = icmp eq i64 %500, %517
  br i1 %594, label %665, label %595

595:                                              ; preds = %593, %502, %495
  %596 = phi %"class.v8::internal::compiler::BasicBlock"** [ %484, %502 ], [ %484, %495 ], [ %519, %593 ]
  %597 = phi %"class.v8::internal::compiler::BasicBlock"** [ %493, %502 ], [ %493, %495 ], [ %521, %593 ]
  %598 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %597, i64 -1
  %599 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %598 to i64
  %600 = sub i64 %599, %492
  %601 = lshr i64 %600, 3
  %602 = add nuw nsw i64 %601, 1
  %603 = and i64 %602, 7
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %616, label %605

605:                                              ; preds = %595, %605
  %606 = phi %"class.v8::internal::compiler::BasicBlock"** [ %609, %605 ], [ %596, %595 ]
  %607 = phi %"class.v8::internal::compiler::BasicBlock"** [ %610, %605 ], [ %597, %595 ]
  %608 = phi i64 [ %614, %605 ], [ %603, %595 ]
  %609 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %606, i64 -1
  %610 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %607, i64 -1
  %611 = bitcast %"class.v8::internal::compiler::BasicBlock"** %610 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = bitcast %"class.v8::internal::compiler::BasicBlock"** %609 to i64*
  store i64 %612, i64* %613, align 8
  %614 = add i64 %608, -1
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %616, label %605, !llvm.loop !92

616:                                              ; preds = %605, %595
  %617 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %595 ], [ %609, %605 ]
  %618 = phi %"class.v8::internal::compiler::BasicBlock"** [ %596, %595 ], [ %609, %605 ]
  %619 = phi %"class.v8::internal::compiler::BasicBlock"** [ %597, %595 ], [ %610, %605 ]
  %620 = icmp ult i64 %600, 56
  br i1 %620, label %665, label %621

621:                                              ; preds = %616, %621
  %622 = phi %"class.v8::internal::compiler::BasicBlock"** [ %659, %621 ], [ %618, %616 ]
  %623 = phi %"class.v8::internal::compiler::BasicBlock"** [ %660, %621 ], [ %619, %616 ]
  %624 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %622, i64 -1
  %625 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %623, i64 -1
  %626 = bitcast %"class.v8::internal::compiler::BasicBlock"** %625 to i64*
  %627 = load i64, i64* %626, align 8
  %628 = bitcast %"class.v8::internal::compiler::BasicBlock"** %624 to i64*
  store i64 %627, i64* %628, align 8
  %629 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %622, i64 -2
  %630 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %623, i64 -2
  %631 = bitcast %"class.v8::internal::compiler::BasicBlock"** %630 to i64*
  %632 = load i64, i64* %631, align 8
  %633 = bitcast %"class.v8::internal::compiler::BasicBlock"** %629 to i64*
  store i64 %632, i64* %633, align 8
  %634 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %622, i64 -3
  %635 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %623, i64 -3
  %636 = bitcast %"class.v8::internal::compiler::BasicBlock"** %635 to i64*
  %637 = load i64, i64* %636, align 8
  %638 = bitcast %"class.v8::internal::compiler::BasicBlock"** %634 to i64*
  store i64 %637, i64* %638, align 8
  %639 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %622, i64 -4
  %640 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %623, i64 -4
  %641 = bitcast %"class.v8::internal::compiler::BasicBlock"** %640 to i64*
  %642 = load i64, i64* %641, align 8
  %643 = bitcast %"class.v8::internal::compiler::BasicBlock"** %639 to i64*
  store i64 %642, i64* %643, align 8
  %644 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %622, i64 -5
  %645 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %623, i64 -5
  %646 = bitcast %"class.v8::internal::compiler::BasicBlock"** %645 to i64*
  %647 = load i64, i64* %646, align 8
  %648 = bitcast %"class.v8::internal::compiler::BasicBlock"** %644 to i64*
  store i64 %647, i64* %648, align 8
  %649 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %622, i64 -6
  %650 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %623, i64 -6
  %651 = bitcast %"class.v8::internal::compiler::BasicBlock"** %650 to i64*
  %652 = load i64, i64* %651, align 8
  %653 = bitcast %"class.v8::internal::compiler::BasicBlock"** %649 to i64*
  store i64 %652, i64* %653, align 8
  %654 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %622, i64 -7
  %655 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %623, i64 -7
  %656 = bitcast %"class.v8::internal::compiler::BasicBlock"** %655 to i64*
  %657 = load i64, i64* %656, align 8
  %658 = bitcast %"class.v8::internal::compiler::BasicBlock"** %654 to i64*
  store i64 %657, i64* %658, align 8
  %659 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %622, i64 -8
  %660 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %623, i64 -8
  %661 = bitcast %"class.v8::internal::compiler::BasicBlock"** %660 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = bitcast %"class.v8::internal::compiler::BasicBlock"** %659 to i64*
  store i64 %662, i64* %663, align 8
  %664 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %660, %491
  br i1 %664, label %665, label %621, !llvm.loop !93

665:                                              ; preds = %616, %621, %593, %481
  %666 = phi %"class.v8::internal::compiler::BasicBlock"** [ %484, %481 ], [ %519, %593 ], [ %617, %616 ], [ %659, %621 ]
  %667 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %666 to i64
  store i64 %667, i64* %445, align 8
  store i64 %489, i64* %444, align 8
  store i64 %486, i64* %454, align 8
  br label %711

668:                                              ; preds = %397, %377
  %669 = icmp eq i32 %376, -3
  br i1 %669, label %670, label %677

670:                                              ; preds = %668
  %671 = sext i32 %292 to i64
  %672 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %289, align 8
  %673 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %672, i64 %671, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %370, %"class.v8::internal::compiler::BasicBlock"** %673, align 8
  %674 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %289, align 8
  %675 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %674, i64 %671, i32 1
  store i64 0, i64* %675, align 8
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* nonnull %370, i32 -2) #10
  %676 = add nuw nsw i32 %292, 1
  br label %677

677:                                              ; preds = %668, %670
  %678 = phi i32 [ %676, %670 ], [ %292, %668 ]
  %679 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %370, i64 0, i32 0
  %680 = load i32, i32* %679, align 8
  %681 = icmp sgt i32 %680, -1
  br i1 %681, label %682, label %711

682:                                              ; preds = %677
  %683 = sext i32 %680 to i64
  %684 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %287, align 8
  %685 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %684, i64 %683
  %686 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %684, i64 %683, i32 4
  store %"class.v8::internal::compiler::BasicBlock"* %372, %"class.v8::internal::compiler::BasicBlock"** %686, align 8
  %687 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %684, i64 %683, i32 3
  store %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %371, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %687, align 8
  br label %711

688:                                              ; preds = %333, %348, %355, %318, %369
  %689 = phi %"class.v8::internal::compiler::BasicBlock"* [ %372, %369 ], [ %335, %355 ], [ %335, %333 ], [ %335, %348 ], [ %291, %318 ]
  %690 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %371, %369 ], [ %334, %355 ], [ %334, %333 ], [ %334, %348 ], [ %293, %318 ]
  %691 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 0
  %692 = load i32, i32* %691, align 8
  %693 = icmp sgt i32 %692, -1
  br i1 %693, label %694, label %709

694:                                              ; preds = %688
  %695 = sext i32 %692 to i64
  %696 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %287, align 8
  %697 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %696, i64 %695, i32 5
  %698 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %697, align 8
  %699 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %696, i64 %695, i32 4
  %700 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %699, align 8
  br label %701

701:                                              ; preds = %701, %694
  %702 = phi %"class.v8::internal::compiler::BasicBlock"* [ %698, %694 ], [ %704, %701 ]
  %703 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %702, i64 0, i32 5
  %704 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %703, align 8
  %705 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %704, %700
  br i1 %705, label %706, label %701

706:                                              ; preds = %701
  %707 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %702, i64 0, i32 5
  store %"class.v8::internal::compiler::BasicBlock"* %689, %"class.v8::internal::compiler::BasicBlock"** %707, align 8
  store %"class.v8::internal::compiler::BasicBlock"* %689, %"class.v8::internal::compiler::BasicBlock"** %699, align 8
  %708 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %697, align 8
  br label %711

709:                                              ; preds = %688
  %710 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %298, i64 0, i32 5
  store %"class.v8::internal::compiler::BasicBlock"* %689, %"class.v8::internal::compiler::BasicBlock"** %710, align 8
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* %298, i32 -4) #10
  br label %711

711:                                              ; preds = %374, %374, %706, %709, %665, %437, %677, %682
  %712 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %371, %374 ], [ %685, %682 ], [ %371, %677 ], [ %371, %437 ], [ %371, %665 ], [ %690, %709 ], [ %690, %706 ], [ %371, %374 ]
  %713 = phi i32 [ %292, %374 ], [ %678, %682 ], [ %678, %677 ], [ %292, %437 ], [ %292, %665 ], [ %294, %709 ], [ %294, %706 ], [ %292, %374 ]
  %714 = phi %"class.v8::internal::compiler::BasicBlock"* [ %372, %374 ], [ %372, %682 ], [ %372, %677 ], [ %372, %437 ], [ %372, %665 ], [ %298, %709 ], [ %708, %706 ], [ %372, %374 ]
  %715 = icmp sgt i32 %713, 0
  br i1 %715, label %290, label %716

716:                                              ; preds = %711, %276, %79, %258
  %717 = phi %"class.v8::internal::compiler::BasicBlock"* [ %256, %258 ], [ %30, %79 ], [ %30, %276 ], [ %714, %711 ]
  %718 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 2
  %719 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %718, align 8
  %720 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %719, null
  br i1 %720, label %721, label %722

721:                                              ; preds = %716
  store %"class.v8::internal::compiler::BasicBlock"* %717, %"class.v8::internal::compiler::BasicBlock"** %718, align 8
  br label %722

722:                                              ; preds = %721, %716
  %723 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %717, %30
  br i1 %723, label %736, label %724

724:                                              ; preds = %722
  %725 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 8
  %726 = load i32, i32* %725, align 8
  %727 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 7
  %728 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %727, align 8
  %729 = icmp ne %"class.v8::internal::compiler::BasicBlock"* %728, null
  %730 = zext i1 %729 to i32
  %731 = sub i32 %726, %730
  %732 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 6
  %733 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %732, align 8
  %734 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %81, i64 0, i32 0, i32 0
  %735 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 3
  br label %737

736:                                              ; preds = %832, %722
  ret void

737:                                              ; preds = %724, %832
  %738 = phi %"class.v8::internal::compiler::BasicBlock"* [ %717, %724 ], [ %834, %832 ]
  %739 = phi i32 [ %731, %724 ], [ %809, %832 ]
  %740 = phi %"class.v8::internal::compiler::BasicBlock"* [ %733, %724 ], [ %808, %832 ]
  %741 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ null, %724 ], [ %807, %832 ]
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* %738, i32 -1) #10
  %742 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %740, null
  br i1 %742, label %761, label %743

743:                                              ; preds = %737, %756
  %744 = phi i32 [ %759, %756 ], [ %739, %737 ]
  %745 = phi %"class.v8::internal::compiler::BasicBlock"* [ %758, %756 ], [ %740, %737 ]
  %746 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %752, %756 ], [ %741, %737 ]
  %747 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %745, i64 0, i32 7
  %748 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %747, align 8
  %749 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %738, %748
  br i1 %749, label %750, label %761

750:                                              ; preds = %743
  %751 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %746, i64 0, i32 3
  %752 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %751, align 8
  %753 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %752, null
  br i1 %753, label %754, label %756

754:                                              ; preds = %750
  %755 = add nsw i32 %744, -1
  br label %761

756:                                              ; preds = %750
  %757 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %752, i64 0, i32 0
  %758 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %757, align 8
  %759 = add nsw i32 %744, -1
  %760 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %758, null
  br i1 %760, label %761, label %743

761:                                              ; preds = %743, %756, %754, %737
  %762 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %741, %737 ], [ null, %754 ], [ %752, %756 ], [ %746, %743 ]
  %763 = phi %"class.v8::internal::compiler::BasicBlock"* [ null, %737 ], [ null, %754 ], [ null, %756 ], [ %745, %743 ]
  %764 = phi i32 [ %739, %737 ], [ %755, %754 ], [ %759, %756 ], [ %744, %743 ]
  tail call void @_ZN2v88internal8compiler10BasicBlock15set_loop_headerEPS2_(%"class.v8::internal::compiler::BasicBlock"* %738, %"class.v8::internal::compiler::BasicBlock"* %763) #10
  %765 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %738, i64 0, i32 0
  %766 = load i32, i32* %765, align 8
  %767 = icmp sgt i32 %766, -1
  br i1 %767, label %768, label %806

768:                                              ; preds = %761
  %769 = add nsw i32 %764, 1
  %770 = sext i32 %766 to i64
  %771 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %734, align 8
  %772 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %771, i64 %770
  %773 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %771, i64 %770, i32 4
  %774 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %773, align 8
  %775 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %774, null
  br i1 %775, label %776, label %796

776:                                              ; preds = %768
  %777 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %735, align 8
  %778 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %777, null
  br i1 %778, label %779, label %796

779:                                              ; preds = %776
  %780 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %4, align 8
  %781 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %780, i64 0, i32 0
  %782 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %781, align 8
  %783 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %782, i64 0, i32 2
  %784 = load i64, i64* %783, align 8
  %785 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %782, i64 0, i32 3
  %786 = load i64, i64* %785, align 8
  %787 = sub i64 %786, %784
  %788 = icmp ult i64 %787, 168
  br i1 %788, label %789, label %791, !prof !2

789:                                              ; preds = %779
  %790 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %782, i64 168) #10
  br label %793

791:                                              ; preds = %779
  %792 = add i64 %784, 168
  store i64 %792, i64* %783, align 8
  br label %793

793:                                              ; preds = %791, %789
  %794 = phi i64 [ %790, %789 ], [ %784, %791 ]
  %795 = inttoptr i64 %794 to %"class.v8::internal::compiler::BasicBlock"*
  tail call void @_ZN2v88internal8compiler10BasicBlockC1EPNS0_4ZoneENS2_2IdE(%"class.v8::internal::compiler::BasicBlock"* %795, %"class.v8::internal::Zone"* %782, i64 -1) #10
  store %"class.v8::internal::compiler::BasicBlock"* %795, %"class.v8::internal::compiler::BasicBlock"** %735, align 8
  br label %796

796:                                              ; preds = %793, %776, %768
  %797 = phi %"class.v8::internal::compiler::BasicBlock"* [ %774, %768 ], [ %795, %793 ], [ %777, %776 ]
  tail call void @_ZN2v88internal8compiler10BasicBlock12set_loop_endEPS2_(%"class.v8::internal::compiler::BasicBlock"* %738, %"class.v8::internal::compiler::BasicBlock"* %797) #10
  %798 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %772, i64 0, i32 0
  %799 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %798, align 8
  %800 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %801 = icmp eq i8 %800, 0
  br i1 %801, label %806, label %802

802:                                              ; preds = %796
  %803 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %738, i64 0, i32 14, i32 0
  %804 = load i64, i64* %803, align 8
  %805 = trunc i64 %804 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i64 0, i64 0), i32 %805, i32 %769) #10
  br label %806

806:                                              ; preds = %802, %796, %761
  %807 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %762, %761 ], [ %772, %796 ], [ %772, %802 ]
  %808 = phi %"class.v8::internal::compiler::BasicBlock"* [ %763, %761 ], [ %799, %796 ], [ %799, %802 ]
  %809 = phi i32 [ %764, %761 ], [ %769, %796 ], [ %769, %802 ]
  tail call void @_ZN2v88internal8compiler10BasicBlock14set_loop_depthEi(%"class.v8::internal::compiler::BasicBlock"* %738, i32 %809) #10
  %810 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %738, i64 0, i32 6
  %811 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %810, align 8
  %812 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %811, null
  %813 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %814 = icmp ne i8 %813, 0
  br i1 %812, label %815, label %822

815:                                              ; preds = %806
  br i1 %814, label %816, label %832

816:                                              ; preds = %815
  %817 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %738, i64 0, i32 14, i32 0
  %818 = load i64, i64* %817, align 8
  %819 = trunc i64 %818 to i32
  %820 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %738, i64 0, i32 8
  %821 = load i32, i32* %820, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.32, i64 0, i64 0), i32 %819, i32 %821) #10
  br label %832

822:                                              ; preds = %806
  br i1 %814, label %823, label %832

823:                                              ; preds = %822
  %824 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %738, i64 0, i32 14, i32 0
  %825 = load i64, i64* %824, align 8
  %826 = trunc i64 %825 to i32
  %827 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %811, i64 0, i32 14, i32 0
  %828 = load i64, i64* %827, align 8
  %829 = trunc i64 %828 to i32
  %830 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %738, i64 0, i32 8
  %831 = load i32, i32* %830, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33, i64 0, i64 0), i32 %826, i32 %829, i32 %831) #10
  br label %832

832:                                              ; preds = %822, %823, %815, %816
  %833 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %738, i64 0, i32 5
  %834 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %833, align 8
  %835 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %834, %30
  br i1 %835, label %736, label %737
}

declare void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler18SpecialRPONumberer15ComputeLoopInfoEPNS0_10ZoneVectorINS2_20SpecialRPOStackFrameEEEmPNS3_INSt3__14pairIPNS1_10BasicBlockEmEEEE(%"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::ZoneVector.62"*, i64, %"class.v8::internal::ZoneVector.55"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 4, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %7, i64 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %10, align 8
  %12 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %9 to i64
  %15 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %11 to i64
  br label %24

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 0
  br label %50

19:                                               ; preds = %50
  %20 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.49"* %7 to i64*
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %23, %19 ], [ %14, %13 ]
  %26 = phi i64 [ %21, %19 ], [ %15, %13 ]
  %27 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 48, i1 false)
  %28 = sub i64 %26, %25
  %29 = sdiv exact i64 %28, 48
  %30 = icmp ult i64 %29, %2
  %31 = inttoptr i64 %25 to %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*
  br i1 %30, label %32, label %34

32:                                               ; preds = %24
  %33 = sub i64 %2, %29
  call void @_ZNSt3__16vectorIN2v88internal8compiler18SpecialRPONumberer8LoopInfoENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.49"* %7, i64 %33, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* nonnull dereferenceable(48) %5) #10
  br label %38

34:                                               ; preds = %24
  %35 = icmp ugt i64 %29, %2
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %31, i64 %2
  store %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %37, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %10, align 8
  br label %38

38:                                               ; preds = %32, %34, %36
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #10
  %39 = getelementptr inbounds %"class.v8::internal::ZoneVector.55", %"class.v8::internal::ZoneVector.55"* %3, i64 0, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::pair"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.v8::internal::ZoneVector.55"* %3 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %41, %43
  br i1 %44, label %67, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 0
  %47 = bitcast i32* %6 to i8*
  %48 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"class.v8::internal::ZoneVector.62", %"class.v8::internal::ZoneVector.62"* %1, i64 0, i32 0, i32 0, i32 0
  br label %68

50:                                               ; preds = %16, %50
  %51 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %9, %16 ], [ %65, %50 ]
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %51, i64 0, i32 2
  %53 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %52, align 8
  %54 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %17, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %54, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %54, i64 0, i32 1, i32 0, i32 0, i32 1
  %57 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.12"* %55 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = lshr exact i64 %61, 3
  %63 = trunc i64 %62 to i32
  %64 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  tail call void @_ZN2v88internal9BitVector6ResizeEiPNS0_4ZoneE(%"class.v8::internal::BitVector"* %53, i32 %63, %"class.v8::internal::Zone"* %64)
  %65 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %51, i64 1
  %66 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %65, %11
  br i1 %66, label %19, label %50

67:                                               ; preds = %233, %38
  ret void

68:                                               ; preds = %45, %233
  %69 = phi i64 [ %43, %45 ], [ %236, %233 ]
  %70 = phi i64 [ 0, %45 ], [ %234, %233 ]
  %71 = inttoptr i64 %69 to %"struct.std::__1::pair"*
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 %70, i32 0
  %73 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 %70, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %73, i64 0, i32 12, i32 0, i32 0, i32 0
  %77 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %77, i64 %75
  %79 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = sext i32 %81 to i64
  %83 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %8, align 8
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %83, i64 %82, i32 0
  %85 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %85, null
  br i1 %86, label %87, label %102

87:                                               ; preds = %68
  store %"class.v8::internal::compiler::BasicBlock"* %79, %"class.v8::internal::compiler::BasicBlock"** %84, align 8
  %88 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #10
  %89 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %48, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %89, i64 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %89, i64 0, i32 1, i32 0, i32 0, i32 1
  %92 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.12"* %90 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = lshr exact i64 %96, 3
  %98 = trunc i64 %97 to i32
  store i32 %98, i32* %6, align 4
  %99 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %88, i32* nonnull dereferenceable(4) %6, %"class.v8::internal::Zone"** dereferenceable(8) %46)
  %100 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %8, align 8
  %101 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %100, i64 %82, i32 2
  store %"class.v8::internal::BitVector"* %99, %"class.v8::internal::BitVector"** %101, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #10
  br label %102

102:                                              ; preds = %87, %68
  %103 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %73, %79
  br i1 %103, label %233, label %104

104:                                              ; preds = %102
  %105 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %8, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %105, i64 %82, i32 2
  %107 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %73, i64 0, i32 14, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = trunc i64 %109 to i32
  %111 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %107, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 1
  %114 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %107, i64 0, i32 2
  br i1 %113, label %115, label %117

115:                                              ; preds = %104
  %116 = bitcast %"union.v8::internal::BitVector::DataStorage"* %114 to i64*
  br label %123

117:                                              ; preds = %104
  %118 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %114, i64 0, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = sdiv i32 %110, 64
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i64, i64* %119, i64 %121
  br label %123

123:                                              ; preds = %115, %117
  %124 = phi i64* [ %116, %115 ], [ %122, %117 ]
  %125 = load i64, i64* %124, align 8
  %126 = srem i32 %110, 64
  %127 = sdiv i32 %110, 64
  %128 = zext i32 %126 to i64
  %129 = shl i64 1, %128
  %130 = and i64 %125, %129
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %147

132:                                              ; preds = %123
  br i1 %113, label %133, label %137

133:                                              ; preds = %132
  %134 = and i64 %109, 4294967295
  %135 = shl i64 1, %134
  %136 = bitcast %"union.v8::internal::BitVector::DataStorage"* %114 to i64*
  br label %142

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %107, i64 0, i32 2, i32 0
  %139 = load i64*, i64** %138, align 8
  %140 = sext i32 %127 to i64
  %141 = getelementptr inbounds i64, i64* %139, i64 %140
  br label %142

142:                                              ; preds = %133, %137
  %143 = phi i64* [ %141, %137 ], [ %136, %133 ]
  %144 = phi i64 [ %129, %137 ], [ %135, %133 ]
  %145 = load i64, i64* %143, align 8
  %146 = or i64 %145, %144
  store i64 %146, i64* %143, align 8
  br label %147

147:                                              ; preds = %142, %123
  %148 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %49, align 8
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %148, i64 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %73, %"class.v8::internal::compiler::BasicBlock"** %149, align 8
  br label %153

150:                                              ; preds = %225, %153
  %151 = phi i32 [ %155, %153 ], [ %228, %225 ]
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %153, label %233

153:                                              ; preds = %147, %150
  %154 = phi i32 [ %151, %150 ], [ 1, %147 ]
  %155 = add nsw i32 %154, -1
  %156 = sext i32 %155 to i64
  %157 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %49, align 8
  %158 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %157, i64 %156, i32 0
  %159 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %159, i64 0, i32 13, i32 0
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %159, i64 0, i32 13, i32 0, i32 0, i32 1
  %162 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.std::__1::vector.12"* %160 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = icmp eq i64 %163, %165
  br i1 %166, label %150, label %167

167:                                              ; preds = %153, %225
  %168 = phi i64 [ %226, %225 ], [ %165, %153 ]
  %169 = phi i64 [ %227, %225 ], [ %163, %153 ]
  %170 = phi i64 [ %229, %225 ], [ 0, %153 ]
  %171 = phi i32 [ %228, %225 ], [ %155, %153 ]
  %172 = inttoptr i64 %168 to %"class.v8::internal::compiler::BasicBlock"**
  %173 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %172, i64 %170
  %174 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %173, align 8
  %175 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %174, %79
  br i1 %175, label %225, label %176

176:                                              ; preds = %167
  %177 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %8, align 8
  %178 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %177, i64 %82, i32 2
  %179 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %174, i64 0, i32 14, i32 0
  %181 = load i64, i64* %180, align 8
  %182 = trunc i64 %181 to i32
  %183 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %179, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 1
  %186 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %179, i64 0, i32 2
  br i1 %185, label %187, label %189

187:                                              ; preds = %176
  %188 = bitcast %"union.v8::internal::BitVector::DataStorage"* %186 to i64*
  br label %195

189:                                              ; preds = %176
  %190 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %186, i64 0, i32 0
  %191 = load i64*, i64** %190, align 8
  %192 = sdiv i32 %182, 64
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i64, i64* %191, i64 %193
  br label %195

195:                                              ; preds = %187, %189
  %196 = phi i64* [ %188, %187 ], [ %194, %189 ]
  %197 = load i64, i64* %196, align 8
  %198 = srem i32 %182, 64
  %199 = sdiv i32 %182, 64
  %200 = zext i32 %198 to i64
  %201 = shl i64 1, %200
  %202 = and i64 %197, %201
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %225

204:                                              ; preds = %195
  br i1 %185, label %205, label %209

205:                                              ; preds = %204
  %206 = and i64 %181, 4294967295
  %207 = shl i64 1, %206
  %208 = bitcast %"union.v8::internal::BitVector::DataStorage"* %186 to i64*
  br label %214

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %179, i64 0, i32 2, i32 0
  %211 = load i64*, i64** %210, align 8
  %212 = sext i32 %199 to i64
  %213 = getelementptr inbounds i64, i64* %211, i64 %212
  br label %214

214:                                              ; preds = %205, %209
  %215 = phi i64* [ %208, %205 ], [ %213, %209 ]
  %216 = phi i64 [ %207, %205 ], [ %201, %209 ]
  %217 = load i64, i64* %215, align 8
  %218 = or i64 %217, %216
  store i64 %218, i64* %215, align 8
  %219 = add nsw i32 %171, 1
  %220 = sext i32 %171 to i64
  %221 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %49, align 8
  %222 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %221, i64 %220, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %174, %"class.v8::internal::compiler::BasicBlock"** %222, align 8
  %223 = load i64, i64* %162, align 8
  %224 = load i64, i64* %164, align 8
  br label %225

225:                                              ; preds = %195, %167, %214
  %226 = phi i64 [ %224, %214 ], [ %168, %195 ], [ %168, %167 ]
  %227 = phi i64 [ %223, %214 ], [ %169, %195 ], [ %169, %167 ]
  %228 = phi i32 [ %219, %214 ], [ %171, %195 ], [ %171, %167 ]
  %229 = add nuw i64 %170, 1
  %230 = sub i64 %227, %226
  %231 = ashr exact i64 %230, 3
  %232 = icmp ult i64 %229, %231
  br i1 %232, label %167, label %150

233:                                              ; preds = %150, %102
  %234 = add nuw i64 %70, 1
  %235 = load i64, i64* %40, align 8
  %236 = load i64, i64* %42, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 4
  %239 = icmp ult i64 %234, %238
  br i1 %239, label %68, label %67
}

declare void @_ZN2v88internal8compiler10BasicBlock15set_loop_headerEPS2_(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler10BasicBlock12set_loop_endEPS2_(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler10BasicBlock14set_loop_depthEi(%"class.v8::internal::compiler::BasicBlock"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler18SpecialRPONumberer20SpecialRPOStackFrameENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.63"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %13, i64 %18, i32 0
  %20 = bitcast %"class.v8::internal::compiler::BasicBlock"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.63"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 134217727
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.63"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 67108863
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 134217727, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = shl i64 %48, 4
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ugt i64 %51, %56
  br i1 %57, label %58, label %60, !prof !2

58:                                               ; preds = %47
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 %51) #10
  br label %62

60:                                               ; preds = %47
  %61 = add i64 %53, %51
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*
  br label %65

65:                                               ; preds = %42, %62
  %66 = phi i64 [ %48, %62 ], [ 0, %42 ]
  %67 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %64, %62 ], [ null, %42 ]
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %67, i64 %33
  %69 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %68 to i64
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %67, i64 %66
  %71 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %68, i64 %1
  %72 = shl nsw i64 %1, 4
  %73 = add i64 %72, -16
  %74 = lshr exact i64 %73, 4
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %89, label %78

78:                                               ; preds = %65, %78
  %79 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %83, %78 ], [ %68, %65 ]
  %80 = phi i64 [ %84, %78 ], [ %69, %65 ]
  %81 = phi i64 [ %85, %78 ], [ %76, %65 ]
  %82 = inttoptr i64 %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #10
  %83 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %79, i64 1
  %84 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %83 to i64
  %85 = add i64 %81, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %78, !llvm.loop !94

87:                                               ; preds = %78
  %88 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %83 to i64
  br label %89

89:                                               ; preds = %65, %87
  %90 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %68, %65 ], [ %83, %87 ]
  %91 = phi i64 [ %69, %65 ], [ %88, %87 ]
  %92 = icmp ult i64 %73, 112
  br i1 %92, label %114, label %93

93:                                               ; preds = %89, %93
  %94 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %111, %93 ], [ %90, %89 ]
  %95 = phi i64 [ %112, %93 ], [ %91, %89 ]
  %96 = inttoptr i64 %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #10
  %97 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %94, i64 1
  %98 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #10
  %99 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %94, i64 2
  %100 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #10
  %101 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %94, i64 3
  %102 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #10
  %103 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %94, i64 4
  %104 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #10
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %94, i64 5
  %106 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %105 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false) #10
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %94, i64 6
  %108 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false) #10
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %94, i64 7
  %110 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #10
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %94, i64 8
  %112 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %111 to i64
  %113 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %71, %111
  br i1 %113, label %114, label %93

114:                                              ; preds = %93, %89
  %115 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %70 to i64
  %116 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %71 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 0
  %118 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %117, align 8
  %119 = load %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"*, %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"** %6, align 8
  %120 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %119, %118
  br i1 %120, label %168, label %121

121:                                              ; preds = %114
  %122 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %118 to i64
  %123 = getelementptr %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %119, i64 -1, i32 0
  %124 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %123 to i64
  %125 = sub i64 %124, %122
  %126 = lshr i64 %125, 4
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %140, label %130

130:                                              ; preds = %121, %130
  %131 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %134, %130 ], [ %68, %121 ]
  %132 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %135, %130 ], [ %119, %121 ]
  %133 = phi i64 [ %138, %130 ], [ %128, %121 ]
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %131, i64 -1
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %132, i64 -1
  %136 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %134 to i8*
  %137 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #10
  %138 = add i64 %133, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %130, !llvm.loop !95

140:                                              ; preds = %130, %121
  %141 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ undef, %121 ], [ %134, %130 ]
  %142 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %68, %121 ], [ %134, %130 ]
  %143 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %119, %121 ], [ %135, %130 ]
  %144 = icmp ult i64 %125, 48
  br i1 %144, label %165, label %145

145:                                              ; preds = %140, %145
  %146 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %160, %145 ], [ %142, %140 ]
  %147 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %161, %145 ], [ %143, %140 ]
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %146, i64 -1
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %147, i64 -1
  %150 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %148 to i8*
  %151 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 16, i1 false) #10
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %146, i64 -2
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %147, i64 -2
  %154 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %152 to i8*
  %155 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 16, i1 false) #10
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %146, i64 -3
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %147, i64 -3
  %158 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %156 to i8*
  %159 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %157 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 16, i1 false) #10
  %160 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %146, i64 -4
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame", %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %147, i64 -4
  %162 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %160 to i8*
  %163 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 %163, i64 16, i1 false) #10
  %164 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %161, %118
  br i1 %164, label %165, label %145

165:                                              ; preds = %145, %140
  %166 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* [ %141, %140 ], [ %160, %145 ]
  %167 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::SpecialRPOStackFrame"* %166 to i64
  br label %168

168:                                              ; preds = %114, %165
  %169 = phi i64 [ %167, %165 ], [ %69, %114 ]
  store i64 %169, i64* %30, align 8
  store i64 %116, i64* %7, align 8
  store i64 %115, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9BitVector6ResizeEiPNS0_4ZoneE(%"class.v8::internal::BitVector"*, i32, %"class.v8::internal::Zone"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp slt i32 %1, 65
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = add nsw i32 %1, -1
  %7 = sdiv i32 %6, 64
  %8 = add nuw nsw i32 %7, 1
  br label %9

9:                                                ; preds = %3, %5
  %10 = phi i32 [ %8, %5 ], [ 1, %3 ]
  %11 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %10, %12
  br i1 %13, label %14, label %116

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %0, i64 0, i32 2, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = sext i32 %10 to i64
  %18 = shl nsw i64 %17, 3
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %20
  %24 = icmp ugt i64 %18, %23
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %14
  %26 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %18) #10
  br label %29

27:                                               ; preds = %14
  %28 = add i64 %20, %18
  store i64 %28, i64* %19, align 8
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi i64 [ %26, %25 ], [ %20, %27 ]
  %31 = inttoptr i64 %30 to i64*
  store i64* %31, i64** %15, align 8
  store i32 %10, i32* %11, align 4
  %32 = ptrtoint i64* %16 to i64
  %33 = icmp eq i32 %10, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %0, i64 0, i32 2
  %36 = bitcast %"union.v8::internal::BitVector::DataStorage"* %35 to i64*
  store i64 %32, i64* %36, align 8
  br label %116

37:                                               ; preds = %29
  %38 = icmp eq i32 %12, 1
  br i1 %38, label %52, label %39

39:                                               ; preds = %37
  %40 = icmp sgt i32 %12, 0
  br i1 %40, label %41, label %78

41:                                               ; preds = %39
  %42 = zext i32 %12 to i64
  %43 = load i64, i64* %16, align 8
  store i64 %43, i64* %31, align 8
  %44 = icmp eq i32 %12, 1
  br i1 %44, label %76, label %45

45:                                               ; preds = %41
  %46 = add nsw i64 %42, -1
  %47 = add nsw i64 %42, -2
  %48 = and i64 %46, 3
  %49 = icmp ult i64 %47, 3
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = sub nsw i64 %46, %48
  br label %83

52:                                               ; preds = %37
  store i64 %32, i64* %31, align 8
  %53 = load i32, i32* %11, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %55, label %116

55:                                               ; preds = %52, %55
  %56 = phi i64 [ %59, %55 ], [ 1, %52 ]
  %57 = load i64*, i64** %15, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 %56
  store i64 0, i64* %58, align 8
  %59 = add nuw nsw i64 %56, 1
  %60 = load i32, i32* %11, align 4
  %61 = sext i32 %60 to i64
  %62 = icmp slt i64 %59, %61
  br i1 %62, label %55, label %116

63:                                               ; preds = %83, %45
  %64 = phi i64 [ 1, %45 ], [ %105, %83 ]
  %65 = icmp eq i64 %48, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %63, %66
  %67 = phi i64 [ %73, %66 ], [ %64, %63 ]
  %68 = phi i64 [ %74, %66 ], [ %48, %63 ]
  %69 = load i64*, i64** %15, align 8
  %70 = getelementptr inbounds i64, i64* %16, i64 %67
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds i64, i64* %69, i64 %67
  store i64 %71, i64* %72, align 8
  %73 = add nuw nsw i64 %67, 1
  %74 = add i64 %68, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %66, !llvm.loop !96

76:                                               ; preds = %63, %66, %41
  %77 = load i32, i32* %11, align 4
  br label %78

78:                                               ; preds = %76, %39
  %79 = phi i32 [ %77, %76 ], [ %10, %39 ]
  %80 = icmp sgt i32 %79, %12
  br i1 %80, label %81, label %116

81:                                               ; preds = %78
  %82 = sext i32 %12 to i64
  br label %108

83:                                               ; preds = %83, %50
  %84 = phi i64 [ 1, %50 ], [ %105, %83 ]
  %85 = phi i64 [ %51, %50 ], [ %106, %83 ]
  %86 = load i64*, i64** %15, align 8
  %87 = getelementptr inbounds i64, i64* %16, i64 %84
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds i64, i64* %86, i64 %84
  store i64 %88, i64* %89, align 8
  %90 = add nuw nsw i64 %84, 1
  %91 = load i64*, i64** %15, align 8
  %92 = getelementptr inbounds i64, i64* %16, i64 %90
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds i64, i64* %91, i64 %90
  store i64 %93, i64* %94, align 8
  %95 = add nuw nsw i64 %84, 2
  %96 = load i64*, i64** %15, align 8
  %97 = getelementptr inbounds i64, i64* %16, i64 %95
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds i64, i64* %96, i64 %95
  store i64 %98, i64* %99, align 8
  %100 = add nuw nsw i64 %84, 3
  %101 = load i64*, i64** %15, align 8
  %102 = getelementptr inbounds i64, i64* %16, i64 %100
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds i64, i64* %101, i64 %100
  store i64 %103, i64* %104, align 8
  %105 = add nuw nsw i64 %84, 4
  %106 = add i64 %85, -4
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %63, label %83

108:                                              ; preds = %108, %81
  %109 = phi i64 [ %82, %81 ], [ %112, %108 ]
  %110 = load i64*, i64** %15, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 %109
  store i64 0, i64* %111, align 8
  %112 = add nsw i64 %109, 1
  %113 = load i32, i32* %11, align 4
  %114 = sext i32 %113 to i64
  %115 = icmp slt i64 %112, %114
  br i1 %115, label %108, label %116

116:                                              ; preds = %108, %55, %78, %52, %34, %9
  %117 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %0, i64 0, i32 0
  store i32 %1, i32* %117, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, i32* dereferenceable(4), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #10
  br label %14

12:                                               ; preds = %3
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::BitVector"*
  %17 = load i32, i32* %1, align 4
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 1
  %21 = icmp slt i32 %17, 65
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  store i32 1, i32* %20, align 4
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %24 = bitcast %"union.v8::internal::BitVector::DataStorage"* %23 to i64*
  store i64 0, i64* %24, align 8
  br label %64

25:                                               ; preds = %14
  %26 = add nsw i32 %17, -1
  %27 = sdiv i32 %26, 64
  %28 = add nuw nsw i32 %27, 1
  store i32 %28, i32* %20, align 4
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %30 = bitcast %"union.v8::internal::BitVector::DataStorage"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = sext i32 %28 to i64
  %32 = shl nsw i64 %31, 3
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %25
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %32) #10
  br label %43

41:                                               ; preds = %25
  %42 = add i64 %34, %32
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i64*
  %46 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %29, i64 0, i32 0
  store i64* %45, i64** %46, align 8
  %47 = load i32, i32* %20, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %55, label %49

49:                                               ; preds = %43
  %50 = icmp sgt i32 %47, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2, i32 0
  store i64 0, i64* %45, align 8
  %53 = load i32, i32* %20, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %64

55:                                               ; preds = %43
  store i64 0, i64* %30, align 8
  br label %64

56:                                               ; preds = %51, %56
  %57 = phi i64 [ %60, %56 ], [ 1, %51 ]
  %58 = load i64*, i64** %52, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %57
  store i64 0, i64* %59, align 8
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %20, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %51, %22, %49, %55
  ret %"class.v8::internal::BitVector"* %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler18SpecialRPONumberer8LoopInfoENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.49"*, i64, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 48
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %2 to i8*
  br label %21

19:                                               ; preds = %21
  %20 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %15 to i64
  br label %26

21:                                               ; preds = %21, %17
  %22 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %14, %17 ], [ %24, %21 ]
  %23 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %18, i64 48, i1 false) #10
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %22, i64 1
  %25 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %24, %15
  br i1 %25, label %19, label %21

26:                                               ; preds = %13, %19
  %27 = phi i64 [ %20, %19 ], [ %9, %13 ]
  store i64 %27, i64* %8, align 8
  ret void

28:                                               ; preds = %3
  %29 = bitcast %"class.std::__1::vector.49"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %9, %30
  %32 = sdiv exact i64 %31, 48
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 44739242
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.49"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #11
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %6, %30
  %39 = sdiv exact i64 %38, 48
  %40 = icmp ult i64 %39, 22369621
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %37, %41
  %47 = phi i64 [ %44, %41 ], [ 44739242, %37 ]
  %48 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %49 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %48, align 8
  %50 = mul i64 %47, 48
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %54, %52
  %56 = icmp ugt i64 %50, %55
  br i1 %56, label %57, label %59, !prof !2

57:                                               ; preds = %46
  %58 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %49, i64 %50) #10
  br label %61

59:                                               ; preds = %46
  %60 = add i64 %52, %50
  store i64 %60, i64* %51, align 8
  br label %61

61:                                               ; preds = %59, %57
  %62 = phi i64 [ %58, %57 ], [ %52, %59 ]
  %63 = inttoptr i64 %62 to %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*
  br label %64

64:                                               ; preds = %61, %41
  %65 = phi i64 [ %47, %61 ], [ 0, %41 ]
  %66 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %63, %61 ], [ null, %41 ]
  %67 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %66, i64 %32
  %68 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %67 to i64
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %66, i64 %65
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %67, i64 %1
  %71 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %2 to i8*
  br label %72

72:                                               ; preds = %72, %64
  %73 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %67, %64 ], [ %76, %72 ]
  %74 = phi i64 [ %68, %64 ], [ %77, %72 ]
  %75 = inttoptr i64 %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %71, i64 48, i1 false) #10
  %76 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %73, i64 1
  %77 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %76 to i64
  %78 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %70, %76
  br i1 %78, label %79, label %72

79:                                               ; preds = %72
  %80 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %69 to i64
  %81 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %70 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 0
  %83 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %82, align 8
  %84 = load %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*, %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %7, align 8
  %85 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %84, %83
  br i1 %85, label %96, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %89, %86 ], [ %67, %79 ]
  %88 = phi %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* [ %90, %86 ], [ %84, %79 ]
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %87, i64 -1
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %88, i64 -1
  %91 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %89 to i8*
  %92 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 48, i1 false) #10
  %93 = icmp eq %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %90, %83
  br i1 %93, label %94, label %86

94:                                               ; preds = %86
  %95 = ptrtoint %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %89 to i64
  br label %96

96:                                               ; preds = %79, %94
  %97 = phi i64 [ %95, %94 ], [ %68, %79 ]
  store i64 %97, i64* %29, align 8
  store i64 %81, i64* %8, align 8
  store i64 %80, i64* %5, align 8
  ret void
}

declare void @_ZN2v88internal8compiler10BasicBlockC1EPNS0_4ZoneENS2_2IdE(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::Zone"*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.85"*, i64, i8* dereferenceable(1), %"class.v8::internal::ZoneAllocator.118"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneAllocator.118"* %3 to i64*
  %8 = bitcast %"class.std::__1::vector.85"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.87"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq i64 %1, 0
  %14 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %13, label %68, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %1, 17179869120
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.85"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #11
  unreachable

19:                                               ; preds = %15
  %20 = add nsw i64 %1, -1
  %21 = lshr i64 %20, 6
  %22 = add nuw nsw i64 %21, 1
  %23 = shl nuw nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %19
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %23) #10
  br label %34

32:                                               ; preds = %19
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %5, align 8
  store i64 0, i64* %6, align 8
  store i64 %22, i64* %10, align 8
  %37 = load i8, i8* %2, align 1, !range !5
  %38 = icmp eq i8 %37, 0
  store i64 %1, i64* %6, align 8
  %39 = icmp ult i64 %1, 65
  %40 = getelementptr inbounds i64, i64* %36, i64 %21
  %41 = select i1 %39, i64* %36, i64* %40
  store i64 0, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.85"* %0 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !97
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %1, 6
  %46 = shl nuw nsw i64 %45, 3
  br i1 %38, label %57, label %47

47:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 %46, i1 false) #10
  %48 = and i64 %1, 63
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %43 to i64*
  %52 = getelementptr inbounds i64, i64* %51, i64 %45
  %53 = sub nuw nsw i64 64, %48
  %54 = lshr i64 -1, %53
  %55 = load i64, i64* %52, align 8
  %56 = or i64 %55, %54
  store i64 %56, i64* %52, align 8
  br label %68

57:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %46, i1 false) #10
  %58 = and i64 %1, 63
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %43 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %45
  %63 = sub nuw nsw i64 64, %58
  %64 = lshr i64 -1, %63
  %65 = xor i64 %64, -1
  %66 = load i64, i64* %62, align 8
  %67 = and i64 %66, %65
  store i64 %67, i64* %62, align 8
  br label %68

68:                                               ; preds = %60, %57, %50, %47, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler18PrepareUsesVisitor19InitializePlacementEPNS1_4NodeE(%"class.v8::internal::compiler::PrepareUsesVisitor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %4 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777215
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0), i32 %9, i8* %13) #10
  br label %14

14:                                               ; preds = %2, %6
  %15 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %15, align 8
  %17 = tail call i32 @_ZN2v88internal8compiler9Scheduler19InitializePlacementEPNS1_4NodeE(%"class.v8::internal::compiler::Scheduler"* %16, %"class.v8::internal::compiler::Node"* %1)
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %19, label %322

19:                                               ; preds = %14
  %20 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %15, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %20, i64 0, i32 5, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %20, i64 0, i32 5, i32 0, i32 0, i32 1
  %23 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %20, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::Node"** %23, %25
  %27 = ptrtoint %"class.v8::internal::compiler::Node"** %25 to i64
  br i1 %26, label %33, label %28

28:                                               ; preds = %19
  %29 = bitcast %"class.v8::internal::compiler::Node"** %23 to i64*
  store i64 %3, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, i64 1
  %31 = ptrtoint %"class.v8::internal::compiler::Node"** %30 to i64
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %22 to i64*
  store i64 %31, i64* %32, align 8
  br label %258

33:                                               ; preds = %19
  %34 = ptrtoint %"class.v8::internal::compiler::Node"** %23 to i64
  %35 = bitcast %"class.v8::internal::compiler::Node"*** %22 to i64*
  %36 = bitcast %"class.std::__1::vector.23"* %21 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = ashr exact i64 %38, 3
  %40 = add nsw i64 %39, 1
  %41 = icmp ugt i64 %40, 268435455
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::vector.23"* %21 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #11
  unreachable

44:                                               ; preds = %33
  %45 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i64*
  %46 = sub i64 %27, %37
  %47 = ashr exact i64 %46, 3
  %48 = icmp ult i64 %47, 134217727
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = ashr exact i64 %46, 2
  %51 = icmp ult i64 %50, %40
  %52 = select i1 %51, i64 %40, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %72, label %54

54:                                               ; preds = %49, %44
  %55 = phi i64 [ %52, %49 ], [ 268435455, %44 ]
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %20, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %57 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %56, align 8
  %58 = shl i64 %55, 3
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ugt i64 %58, %63
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %54
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %57, i64 %58) #10
  br label %69

67:                                               ; preds = %54
  %68 = add i64 %60, %58
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %69, %49
  %73 = phi i64 [ %55, %69 ], [ 0, %49 ]
  %74 = phi %"class.v8::internal::compiler::Node"** [ %71, %69 ], [ null, %49 ]
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %39
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %73
  %77 = ptrtoint %"class.v8::internal::compiler::Node"** %76 to i64
  %78 = bitcast %"class.v8::internal::compiler::Node"** %75 to i64*
  store i64 %3, i64* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 1
  %80 = ptrtoint %"class.v8::internal::compiler::Node"** %79 to i64
  %81 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %21, i64 0, i32 0, i32 0
  %82 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %81, align 8
  %83 = ptrtoint %"class.v8::internal::compiler::Node"** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %22, align 8
  %85 = icmp eq %"class.v8::internal::compiler::Node"** %84, %82
  br i1 %85, label %255, label %86

86:                                               ; preds = %72
  %87 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %88 = ptrtoint %"class.v8::internal::compiler::Node"** %87 to i64
  %89 = sub i64 %88, %83
  %90 = lshr i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %91, 4
  br i1 %92, label %185, label %93

93:                                               ; preds = %86
  %94 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %95 = ptrtoint %"class.v8::internal::compiler::Node"** %94 to i64
  %96 = sub i64 %95, %83
  %97 = lshr i64 %96, 3
  %98 = xor i64 %97, -1
  %99 = add nsw i64 %39, %98
  %100 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %99
  %101 = xor i64 %97, -1
  %102 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 %101
  %103 = icmp ult %"class.v8::internal::compiler::Node"** %100, %84
  %104 = icmp ult %"class.v8::internal::compiler::Node"** %102, %75
  %105 = and i1 %103, %104
  br i1 %105, label %185, label %106

106:                                              ; preds = %93
  %107 = and i64 %91, 4611686018427387900
  %108 = sub nsw i64 0, %107
  %109 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %108
  %110 = sub nsw i64 0, %107
  %111 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 %110
  %112 = add nsw i64 %107, -4
  %113 = lshr exact i64 %112, 2
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %112, 0
  br i1 %116, label %163, label %117

117:                                              ; preds = %106
  %118 = sub nuw nsw i64 %114, %115
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 -1
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %121 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 -1
  %122 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  br label %123

123:                                              ; preds = %123, %117
  %124 = phi i64 [ 0, %117 ], [ %158, %123 ]
  %125 = phi i64 [ %118, %117 ], [ %159, %123 ]
  %126 = sub i64 0, %124
  %127 = sub i64 0, %124
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 %127
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 -1
  %131 = bitcast %"class.v8::internal::compiler::Node"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !100
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 -2
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::Node"** %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8, !alias.scope !100
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -1
  %138 = bitcast %"class.v8::internal::compiler::Node"** %137 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %138, align 8, !alias.scope !103, !noalias !100
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -2
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %141, align 8, !alias.scope !103, !noalias !100
  %142 = sub nuw nsw i64 -4, %124
  %143 = sub nuw nsw i64 -4, %124
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, i64 %142
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 %143
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -1
  %147 = bitcast %"class.v8::internal::compiler::Node"** %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !100
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::Node"** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !100
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 -1
  %154 = bitcast %"class.v8::internal::compiler::Node"** %153 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %154, align 8, !alias.scope !103, !noalias !100
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 -2
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::Node"** %156 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %157, align 8, !alias.scope !103, !noalias !100
  %158 = add i64 %124, 8
  %159 = add i64 %125, -2
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %123, !llvm.loop !105

161:                                              ; preds = %123
  %162 = sub nuw nsw i64 -8, %124
  br label %163

163:                                              ; preds = %161, %106
  %164 = phi i64 [ 0, %106 ], [ %162, %161 ]
  %165 = icmp eq i64 %115, 0
  br i1 %165, label %183, label %166

166:                                              ; preds = %163
  %167 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 -1
  %168 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 %164
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 %164
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -1
  %172 = bitcast %"class.v8::internal::compiler::Node"** %171 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 8, !alias.scope !100
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 -1
  %176 = bitcast %"class.v8::internal::compiler::Node"** %175 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8, !alias.scope !100
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -1
  %179 = bitcast %"class.v8::internal::compiler::Node"** %178 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %179, align 8, !alias.scope !103, !noalias !100
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -2
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %182 = bitcast %"class.v8::internal::compiler::Node"** %181 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %182, align 8, !alias.scope !103, !noalias !100
  br label %183

183:                                              ; preds = %163, %166
  %184 = icmp eq i64 %91, %107
  br i1 %184, label %255, label %185

185:                                              ; preds = %183, %93, %86
  %186 = phi %"class.v8::internal::compiler::Node"** [ %75, %93 ], [ %75, %86 ], [ %109, %183 ]
  %187 = phi %"class.v8::internal::compiler::Node"** [ %84, %93 ], [ %84, %86 ], [ %111, %183 ]
  %188 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %187, i64 -1
  %189 = ptrtoint %"class.v8::internal::compiler::Node"** %188 to i64
  %190 = sub i64 %189, %83
  %191 = lshr i64 %190, 3
  %192 = add nuw nsw i64 %191, 1
  %193 = and i64 %192, 7
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %206, label %195

195:                                              ; preds = %185, %195
  %196 = phi %"class.v8::internal::compiler::Node"** [ %199, %195 ], [ %186, %185 ]
  %197 = phi %"class.v8::internal::compiler::Node"** [ %200, %195 ], [ %187, %185 ]
  %198 = phi i64 [ %204, %195 ], [ %193, %185 ]
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -1
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %201 = bitcast %"class.v8::internal::compiler::Node"** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"** %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = add i64 %198, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %195, !llvm.loop !106

206:                                              ; preds = %195, %185
  %207 = phi %"class.v8::internal::compiler::Node"** [ undef, %185 ], [ %199, %195 ]
  %208 = phi %"class.v8::internal::compiler::Node"** [ %186, %185 ], [ %199, %195 ]
  %209 = phi %"class.v8::internal::compiler::Node"** [ %187, %185 ], [ %200, %195 ]
  %210 = icmp ult i64 %190, 56
  br i1 %210, label %255, label %211

211:                                              ; preds = %206, %211
  %212 = phi %"class.v8::internal::compiler::Node"** [ %249, %211 ], [ %208, %206 ]
  %213 = phi %"class.v8::internal::compiler::Node"** [ %250, %211 ], [ %209, %206 ]
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -1
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -1
  %216 = bitcast %"class.v8::internal::compiler::Node"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::internal::compiler::Node"** %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -2
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -2
  %221 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.v8::internal::compiler::Node"** %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -3
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -3
  %226 = bitcast %"class.v8::internal::compiler::Node"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.v8::internal::compiler::Node"** %224 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -4
  %230 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -4
  %231 = bitcast %"class.v8::internal::compiler::Node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.v8::internal::compiler::Node"** %229 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -5
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -5
  %236 = bitcast %"class.v8::internal::compiler::Node"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -6
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -6
  %241 = bitcast %"class.v8::internal::compiler::Node"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.v8::internal::compiler::Node"** %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -7
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -7
  %246 = bitcast %"class.v8::internal::compiler::Node"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.v8::internal::compiler::Node"** %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -8
  %251 = bitcast %"class.v8::internal::compiler::Node"** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.v8::internal::compiler::Node"** %249 to i64*
  store i64 %252, i64* %253, align 8
  %254 = icmp eq %"class.v8::internal::compiler::Node"** %250, %82
  br i1 %254, label %255, label %211, !llvm.loop !107

255:                                              ; preds = %206, %211, %183, %72
  %256 = phi %"class.v8::internal::compiler::Node"** [ %75, %72 ], [ %109, %183 ], [ %207, %206 ], [ %249, %211 ]
  %257 = ptrtoint %"class.v8::internal::compiler::Node"** %256 to i64
  store i64 %257, i64* %36, align 8
  store i64 %80, i64* %35, align 8
  store i64 %77, i64* %45, align 8
  br label %258

258:                                              ; preds = %28, %255
  %259 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 1
  %260 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %259, align 8
  %261 = tail call zeroext i1 @_ZN2v88internal8compiler8Schedule11IsScheduledEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %260, %"class.v8::internal::compiler::Node"* %1) #10
  br i1 %261, label %322, label %262

262:                                              ; preds = %258
  %263 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %273, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %267 = load i32, i32* %266, align 4
  %268 = and i32 %267, 16777215
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %270 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %269, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %270, i64 0, i32 1
  %272 = load i8*, i8** %271, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.35, i64 0, i64 0), i32 %268, i8* %272) #10
  br label %273

273:                                              ; preds = %262, %265
  %274 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %275 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %275, i64 0, i32 2
  %277 = load i16, i16* %276, align 8
  %278 = icmp eq i16 %277, 50
  %279 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %259, align 8
  br i1 %278, label %280, label %283

280:                                              ; preds = %273
  %281 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %279, i64 0, i32 4
  %282 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %281, align 8
  br label %319

283:                                              ; preds = %273
  %284 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %275, i64 0, i32 7
  %285 = load i32, i32* %284, align 4
  %286 = icmp sgt i32 %285, 0
  br i1 %286, label %288, label %287, !prof !21

287:                                              ; preds = %283
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %275, i64 0, i32 5
  %290 = load i32, i32* %289, align 4
  %291 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %275) #10
  %292 = zext i1 %291 to i32
  %293 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %274, align 8
  %294 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %293) #10
  %295 = zext i1 %294 to i32
  %296 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %274, align 8
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %296, i64 0, i32 6
  %298 = load i32, i32* %297, align 8
  %299 = add i32 %290, %292
  %300 = add i32 %299, %295
  %301 = add i32 %300, %298
  %302 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %303 = load i32, i32* %302, align 4
  %304 = and i32 %303, 251658240
  %305 = icmp eq i32 %304, 251658240
  %306 = add i64 %3, 32
  br i1 %305, label %307, label %311

307:                                              ; preds = %288
  %308 = inttoptr i64 %306 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = add i64 %309, 16
  br label %311

311:                                              ; preds = %288, %307
  %312 = phi i64 [ %310, %307 ], [ %306, %288 ]
  %313 = inttoptr i64 %312 to %"class.v8::internal::compiler::Node"**
  %314 = sext i32 %301 to i64
  %315 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %313, i64 %314
  %316 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %315, align 8
  %317 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %279, %"class.v8::internal::compiler::Node"* %316) #10
  %318 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %259, align 8
  br label %319

319:                                              ; preds = %311, %280
  %320 = phi %"class.v8::internal::compiler::Schedule"* [ %279, %280 ], [ %318, %311 ]
  %321 = phi %"class.v8::internal::compiler::BasicBlock"* [ %282, %280 ], [ %317, %311 ]
  tail call void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %320, %"class.v8::internal::compiler::BasicBlock"* %321, %"class.v8::internal::compiler::Node"* %1) #10
  br label %322

322:                                              ; preds = %258, %319, %14
  %323 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %324 = bitcast %"class.v8::internal::compiler::Node"**** %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %327 = bitcast %"class.v8::internal::compiler::Node"**** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = sub i64 %325, %328
  %330 = icmp eq i64 %329, 0
  %331 = shl i64 %329, 6
  %332 = add i64 %331, -1
  %333 = select i1 %330, i64 0, i64 %332
  %334 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %335 = load i64, i64* %334, align 8
  %336 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %337 = load i64, i64* %336, align 8
  %338 = add i64 %337, %335
  %339 = icmp eq i64 %333, %338
  %340 = inttoptr i64 %328 to %"class.v8::internal::compiler::Node"***
  %341 = inttoptr i64 %325 to %"class.v8::internal::compiler::Node"***
  br i1 %339, label %342, label %349

342:                                              ; preds = %322
  %343 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %343) #10
  %344 = load i64, i64* %336, align 8
  %345 = load i64, i64* %334, align 8
  %346 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %326, align 8
  %347 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %323, align 8
  %348 = add i64 %345, %344
  br label %349

349:                                              ; preds = %342, %322
  %350 = phi i64 [ %348, %342 ], [ %338, %322 ]
  %351 = phi %"class.v8::internal::compiler::Node"*** [ %347, %342 ], [ %341, %322 ]
  %352 = phi %"class.v8::internal::compiler::Node"*** [ %346, %342 ], [ %340, %322 ]
  %353 = icmp eq %"class.v8::internal::compiler::Node"*** %351, %352
  br i1 %353, label %361, label %354

354:                                              ; preds = %349
  %355 = lshr i64 %350, 9
  %356 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %352, i64 %355
  %357 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %356, align 8
  %358 = and i64 %350, 511
  %359 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 %358
  %360 = bitcast %"class.v8::internal::compiler::Node"** %359 to i64*
  br label %361

361:                                              ; preds = %349, %354
  %362 = phi i64* [ %360, %354 ], [ null, %349 ]
  store i64 %3, i64* %362, align 8
  %363 = load i64, i64* %336, align 8
  %364 = add i64 %363, 1
  store i64 %364, i64* %336, align 8
  %365 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %366 = load i32, i32* %365, align 4
  %367 = and i32 %366, 16777215
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 3, i32 0, i32 0
  %370 = load i64*, i64** %369, align 8
  %371 = lshr i64 %368, 6
  %372 = getelementptr inbounds i64, i64* %370, i64 %371
  %373 = and i64 %368, 63
  %374 = shl i64 1, %373
  %375 = load i64, i64* %372, align 8
  %376 = or i64 %374, %375
  store i64 %376, i64* %372, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler18PrepareUsesVisitor11VisitInputsEPNS1_4NodeE(%"class.v8::internal::compiler::PrepareUsesVisitor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2v88internal8compiler8Schedule11IsScheduledEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %4, %"class.v8::internal::compiler::Node"* %1) #10
  %6 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 16777215
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %7, i64 0, i32 7, i32 0, i32 0, i32 0
  %13 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %12, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %13, i64 %11, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %36

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %19) #10
  %23 = zext i1 %22 to i32
  %24 = add nsw i32 %21, %23
  %25 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %26 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %25) #10
  %27 = zext i1 %26 to i32
  %28 = add nsw i32 %24, %27
  %29 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %29, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %28, %31
  %33 = and i32 %32, -256
  %34 = and i32 %32, 255
  %35 = load i32, i32* %8, align 4, !noalias !108
  br label %36

36:                                               ; preds = %2, %17
  %37 = phi i32 [ %35, %17 ], [ %9, %2 ]
  %38 = phi i32 [ %34, %17 ], [ 0, %2 ]
  %39 = phi i8 [ 1, %17 ], [ 0, %2 ]
  %40 = phi i32 [ %33, %17 ], [ 0, %2 ]
  %41 = or i32 %40, %38
  %42 = lshr i32 %37, 24
  %43 = and i32 %42, 15
  %44 = icmp eq i32 %43, 15
  %45 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %46 = add i64 %45, 32
  br i1 %44, label %50, label %47

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 -1, i32 1
  %49 = bitcast %"class.v8::internal::compiler::Type"* %48 to %"struct.v8::internal::compiler::Node::Use"*
  br label %59

50:                                               ; preds = %36
  %51 = inttoptr i64 %46 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %52 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %51, align 8, !noalias !108
  %53 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %52 to i64
  %54 = add i64 %53, 16
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %52, i64 -2, i32 1
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %52, i64 0, i32 1
  %57 = load i32, i32* %56, align 8, !noalias !108
  %58 = bitcast i32* %55 to %"struct.v8::internal::compiler::Node::Use"*
  br label %59

59:                                               ; preds = %47, %50
  %60 = phi %"struct.v8::internal::compiler::Node::Use"* [ %58, %50 ], [ %49, %47 ]
  %61 = phi i64 [ %54, %50 ], [ %46, %47 ]
  %62 = phi i32 [ %57, %50 ], [ %43, %47 ]
  %63 = inttoptr i64 %61 to %"class.v8::internal::compiler::Node"**
  %64 = sext i32 %62 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, i64 %64
  %66 = icmp eq i32 %62, 0
  br i1 %66, label %141, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.v8::internal::compiler::PrepareUsesVisitor", %"class.v8::internal::compiler::PrepareUsesVisitor"* %0, i64 0, i32 3, i32 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  br i1 %5, label %70, label %104

70:                                               ; preds = %67, %101
  %71 = phi %"class.v8::internal::compiler::Node"** [ %102, %101 ], [ %63, %67 ]
  %72 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %72, i64 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 16777215
  %76 = zext i32 %75 to i64
  %77 = load i64*, i64** %68, align 8
  %78 = lshr i64 %76, 6
  %79 = getelementptr inbounds i64, i64* %77, i64 %78
  %80 = and i64 %76, 63
  %81 = shl i64 1, %80
  %82 = load i64, i64* %79, align 8
  %83 = and i64 %81, %82
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %70
  tail call void @_ZN2v88internal8compiler18PrepareUsesVisitor19InitializePlacementEPNS1_4NodeE(%"class.v8::internal::compiler::PrepareUsesVisitor"* %0, %"class.v8::internal::compiler::Node"* %72)
  br label %86

86:                                               ; preds = %85, %70
  %87 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %101, label %89

89:                                               ; preds = %86
  %90 = load i32, i32* %8, align 4
  %91 = and i32 %90, 16777215
  %92 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %69, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %92, i64 0, i32 1
  %94 = load i8*, i8** %93, align 8
  %95 = load i32, i32* %73, align 4
  %96 = and i32 %95, 16777215
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %72, i64 0, i32 0
  %98 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %98, i64 0, i32 1
  %100 = load i8*, i8** %99, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %91, i8* %94, i32 %96, i8* %100) #10
  br label %101

101:                                              ; preds = %86, %89
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, i64 1
  %103 = icmp eq %"class.v8::internal::compiler::Node"** %102, %65
  br i1 %103, label %141, label %70

104:                                              ; preds = %67
  %105 = icmp eq i8 %39, 0
  br i1 %105, label %106, label %142

106:                                              ; preds = %104, %137
  %107 = phi %"class.v8::internal::compiler::Node"** [ %139, %137 ], [ %63, %104 ]
  %108 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %108, i64 0, i32 3
  %110 = load i32, i32* %109, align 4
  %111 = and i32 %110, 16777215
  %112 = zext i32 %111 to i64
  %113 = load i64*, i64** %68, align 8
  %114 = lshr i64 %112, 6
  %115 = getelementptr inbounds i64, i64* %113, i64 %114
  %116 = and i64 %112, 63
  %117 = shl i64 1, %116
  %118 = load i64, i64* %115, align 8
  %119 = and i64 %117, %118
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %106
  tail call void @_ZN2v88internal8compiler18PrepareUsesVisitor19InitializePlacementEPNS1_4NodeE(%"class.v8::internal::compiler::PrepareUsesVisitor"* %0, %"class.v8::internal::compiler::Node"* %108)
  br label %122

122:                                              ; preds = %121, %106
  %123 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %137, label %125

125:                                              ; preds = %122
  %126 = load i32, i32* %8, align 4
  %127 = and i32 %126, 16777215
  %128 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %69, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %128, i64 0, i32 1
  %130 = load i8*, i8** %129, align 8
  %131 = load i32, i32* %109, align 4
  %132 = and i32 %131, 16777215
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %108, i64 0, i32 0
  %134 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %134, i64 0, i32 1
  %136 = load i8*, i8** %135, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %127, i8* %130, i32 %132, i8* %136) #10
  br label %137

137:                                              ; preds = %125, %122
  %138 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %6, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler28IncrementUnscheduledUseCountEPNS1_4NodeES4_(%"class.v8::internal::compiler::Scheduler"* %138, %"class.v8::internal::compiler::Node"* %108, %"class.v8::internal::compiler::Node"* %1)
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 1
  %140 = icmp eq %"class.v8::internal::compiler::Node"** %139, %65
  br i1 %140, label %141, label %106

141:                                              ; preds = %181, %137, %101, %59
  ret void

142:                                              ; preds = %104, %181
  %143 = phi %"class.v8::internal::compiler::Node"** [ %182, %181 ], [ %63, %104 ]
  %144 = phi %"struct.v8::internal::compiler::Node::Use"* [ %183, %181 ], [ %60, %104 ]
  %145 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %145, i64 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = and i32 %147, 16777215
  %149 = zext i32 %148 to i64
  %150 = load i64*, i64** %68, align 8
  %151 = lshr i64 %149, 6
  %152 = getelementptr inbounds i64, i64* %150, i64 %151
  %153 = and i64 %149, 63
  %154 = shl i64 1, %153
  %155 = load i64, i64* %152, align 8
  %156 = and i64 %154, %155
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %142
  tail call void @_ZN2v88internal8compiler18PrepareUsesVisitor19InitializePlacementEPNS1_4NodeE(%"class.v8::internal::compiler::PrepareUsesVisitor"* %0, %"class.v8::internal::compiler::Node"* %145)
  br label %159

159:                                              ; preds = %142, %158
  %160 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %174, label %162

162:                                              ; preds = %159
  %163 = load i32, i32* %8, align 4
  %164 = and i32 %163, 16777215
  %165 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %69, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %165, i64 0, i32 1
  %167 = load i8*, i8** %166, align 8
  %168 = load i32, i32* %146, align 4
  %169 = and i32 %168, 16777215
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %145, i64 0, i32 0
  %171 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %171, i64 0, i32 1
  %173 = load i8*, i8** %172, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i32 %164, i8* %167, i32 %169, i8* %173) #10
  br label %174

174:                                              ; preds = %162, %159
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %144, i64 0, i32 2
  %176 = load i32, i32* %175, align 8
  %177 = lshr i32 %176, 1
  %178 = icmp eq i32 %177, %41
  br i1 %178, label %181, label %179

179:                                              ; preds = %174
  %180 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %6, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler28IncrementUnscheduledUseCountEPNS1_4NodeES4_(%"class.v8::internal::compiler::Scheduler"* %180, %"class.v8::internal::compiler::Node"* %145, %"class.v8::internal::compiler::Node"* %1)
  br label %181

181:                                              ; preds = %174, %179
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, i64 1
  %183 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %144, i64 -1
  %184 = icmp eq %"class.v8::internal::compiler::Node"** %182, %65
  br i1 %184, label %141, label %142
}

declare zeroext i1 @_ZN2v88internal8compiler8Schedule11IsScheduledEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %5 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.119", align 16
  %7 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, i64 1
  store %"class.v8::internal::compiler::Node"*** %21, %"class.v8::internal::compiler::Node"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %15, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Node"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to %"class.v8::internal::compiler::Node"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.40", %"class.v8::internal::RecyclingZoneAllocator.40"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #10
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::Node"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::Node"** %73, %"class.v8::internal::compiler::Node"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to %"class.v8::internal::compiler::Node"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.40", %"class.v8::internal::RecyclingZoneAllocator.40"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #10
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::Node"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::Node"** %105, %"class.v8::internal::compiler::Node"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  %106 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #10
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::Node"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, i64 1
  store %"class.v8::internal::compiler::Node"*** %111, %"class.v8::internal::compiler::Node"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #10
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.119"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #10
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"*** null, %"class.v8::internal::compiler::Node"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to %"class.v8::internal::compiler::Node"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #10
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::Node"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"*** %150, %"class.v8::internal::compiler::Node"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %116
  store %"class.v8::internal::compiler::Node"*** %155, %"class.v8::internal::compiler::Node"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to %"class.v8::internal::compiler::Node"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.40", %"class.v8::internal::RecyclingZoneAllocator.40"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #10
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::Node"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::Node"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #10
  store %"class.v8::internal::compiler::Node"** %185, %"class.v8::internal::compiler::Node"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.119"* nonnull %6, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #10
  %187 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::Node"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::Node"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::Node"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.119"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::Node"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.119"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::Node"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::Node"***
  %210 = icmp eq %"class.v8::internal::compiler::Node"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::Node"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::Node"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 %217
  store %"class.v8::internal::compiler::Node"*** %218, %"class.v8::internal::compiler::Node"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::Node"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %211, %"class.v8::internal::compiler::Node"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #10
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::Node"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.119"* nonnull %6, %"class.v8::internal::compiler::Node"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::Node"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #10
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !111

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #10
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !112

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to %"class.v8::internal::compiler::Node"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #10
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  %76 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::Node"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::Node"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !113

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::Node"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %173, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, i64 -1
  store %"class.v8::internal::compiler::Node"*** %201, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.119"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::Node"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %22
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.119"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to %"class.v8::internal::compiler::Node"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #10
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::Node"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::Node"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::Node"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !114

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::Node"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::Node"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %170, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.119"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.119"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.119", %"struct.std::__1::__split_buffer.119"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to %"class.v8::internal::compiler::Node"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #10
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::Node"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::Node"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::Node"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !115

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::Node"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::Node"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::Node"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::Node"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %171, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::Node"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %198, i64 -1
  store %"class.v8::internal::compiler::Node"*** %199, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16777215
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %4, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %10, i64 %8
  %12 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %10, i64 %8, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %34

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 1
  %17 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %16, align 8
  %18 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %17, %"class.v8::internal::compiler::Node"* %1) #10
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %11, i64 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"* %18, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  %20 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %15
  %23 = load i32, i32* %5, align 4
  %24 = and i32 %23, 16777215
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %18, i64 0, i32 14, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %18, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i64 0, i64 0), i32 %24, i8* %28, i32 %31, i32 %33) #10
  br label %34

34:                                               ; preds = %15, %22, %2
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %11, i64 0, i32 0
  %36 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 1
  %38 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %38, i64 0, i32 4
  %40 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %39, align 8
  %41 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %36, %40
  br i1 %41, label %81, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %44 = bitcast %"struct.v8::internal::compiler::Node::Use"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %81, label %47

47:                                               ; preds = %42, %77
  %48 = phi i64 [ %79, %77 ], [ %45, %42 ]
  %49 = inttoptr i64 %48 to %"struct.v8::internal::compiler::Node::Use"*
  %50 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %49, i64 1
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %49, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = lshr i32 %52, 1
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %50, i64 %54
  %56 = and i32 %52, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %47
  %59 = bitcast %"struct.v8::internal::compiler::Node::Use"* %55 to %"class.v8::internal::compiler::Node"*
  br label %63

60:                                               ; preds = %47
  %61 = bitcast %"struct.v8::internal::compiler::Node::Use"* %55 to %"class.v8::internal::compiler::Node"**
  %62 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, align 8
  br label %63

63:                                               ; preds = %58, %60
  %64 = phi %"class.v8::internal::compiler::Node"* [ %59, %58 ], [ %62, %60 ]
  %65 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %3, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %64, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 16777215
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %65, i64 0, i32 7, i32 0, i32 0, i32 0
  %71 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %70, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %71, i64 %69, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %63
  %76 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %35, align 8
  tail call void @_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor30PropagateMinimumPositionToNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, %"class.v8::internal::compiler::BasicBlock"* %76, %"class.v8::internal::compiler::Node"* %64)
  br label %77

77:                                               ; preds = %63, %75
  %78 = inttoptr i64 %48 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %47

81:                                               ; preds = %77, %42, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor30PropagateMinimumPositionToNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777215
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %6, i64 0, i32 7, i32 0, i32 0, i32 0
  %12 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %11, align 8
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %12, i64 %10, i32 2
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %50 [
    i32 2, label %116
    i32 3, label %15
  ]

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %22, label %21, !prof !21

21:                                               ; preds = %15
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %17) #10
  %26 = zext i1 %25 to i32
  %27 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %28 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %27) #10
  %29 = zext i1 %28 to i32
  %30 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %30, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %24, %26
  %34 = add i32 %33, %29
  %35 = add i32 %34, %32
  %36 = load i32, i32* %7, align 4
  %37 = and i32 %36, 251658240
  %38 = icmp eq i32 %37, 251658240
  %39 = add i64 %4, 32
  br i1 %38, label %40, label %44

40:                                               ; preds = %22
  %41 = inttoptr i64 %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 16
  br label %44

44:                                               ; preds = %22, %40
  %45 = phi i64 [ %43, %40 ], [ %39, %22 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::compiler::Node"**
  %47 = sext i32 %35 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, i64 %47
  %49 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  tail call void @_ZN2v88internal8compiler24ScheduleEarlyNodeVisitor30PropagateMinimumPositionToNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::Node"* %49)
  br label %50

50:                                               ; preds = %3, %44
  %51 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %12, i64 %10, i32 0
  %54 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %54, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %52, %56
  br i1 %57, label %58, label %116

58:                                               ; preds = %50
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %53, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = bitcast %"class.v8::internal::compiler::Node"**** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.v8::internal::compiler::Node"**** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = icmp eq i64 %65, 0
  %67 = shl i64 %65, 6
  %68 = add i64 %67, -1
  %69 = select i1 %66, i64 0, i64 %68
  %70 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, %71
  %75 = icmp eq i64 %69, %74
  %76 = inttoptr i64 %64 to %"class.v8::internal::compiler::Node"***
  %77 = inttoptr i64 %61 to %"class.v8::internal::compiler::Node"***
  br i1 %75, label %78, label %85

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor", %"class.v8::internal::compiler::ScheduleEarlyNodeVisitor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %79) #10
  %80 = load i64, i64* %72, align 8
  %81 = load i64, i64* %70, align 8
  %82 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %62, align 8
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %59, align 8
  %84 = add i64 %81, %80
  br label %85

85:                                               ; preds = %78, %58
  %86 = phi i64 [ %84, %78 ], [ %74, %58 ]
  %87 = phi %"class.v8::internal::compiler::Node"*** [ %83, %78 ], [ %77, %58 ]
  %88 = phi %"class.v8::internal::compiler::Node"*** [ %82, %78 ], [ %76, %58 ]
  %89 = icmp eq %"class.v8::internal::compiler::Node"*** %87, %88
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = lshr i64 %86, 9
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %88, i64 %91
  %93 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %92, align 8
  %94 = and i64 %86, 511
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %93, i64 %94
  %96 = bitcast %"class.v8::internal::compiler::Node"** %95 to i64*
  br label %97

97:                                               ; preds = %85, %90
  %98 = phi i64* [ %96, %90 ], [ null, %85 ]
  store i64 %4, i64* %98, align 8
  %99 = load i64, i64* %72, align 8
  %100 = add i64 %99, 1
  store i64 %100, i64* %72, align 8
  %101 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %116, label %103

103:                                              ; preds = %97
  %104 = load i32, i32* %7, align 4
  %105 = and i32 %104, 16777215
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %107 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %107, i64 0, i32 1
  %109 = load i8*, i8** %108, align 8
  %110 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %53, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %110, i64 0, i32 14, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = trunc i64 %112 to i32
  %114 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %110, i64 0, i32 3
  %115 = load i32, i32* %114, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.38, i64 0, i64 0), i32 %105, i8* %109, i32 %113, i32 %115) #10
  br label %116

116:                                              ; preds = %3, %50, %103, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ProcessQueueEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 24
  %8 = and i32 %7, 15
  %9 = icmp eq i32 %8, 15
  %10 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %11 = add i64 %10, 32
  br i1 %9, label %12, label %19

12:                                               ; preds = %2
  %13 = inttoptr i64 %11 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %14 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %13, align 8
  %15 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %14 to i64
  %16 = add i64 %15, 16
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  br label %19

19:                                               ; preds = %2, %12
  %20 = phi i32 [ %18, %12 ], [ %8, %2 ]
  %21 = phi i64 [ %16, %12 ], [ %11, %2 ]
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::Node"**
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, i64 %23
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %39, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::compiler::Node"**** %29 to i64*
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %35 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %34 to i64*
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %34 to %"class.v8::internal::compiler::Node"***
  %37 = bitcast i64* %31 to <2 x i64>*
  %38 = bitcast i64* %31 to <2 x i64>*
  br label %40

39:                                               ; preds = %179, %19
  ret void

40:                                               ; preds = %182, %26
  %41 = phi %"class.v8::internal::compiler::Scheduler"* [ %4, %26 ], [ %183, %182 ]
  %42 = phi %"class.v8::internal::compiler::Node"** [ %22, %26 ], [ %180, %182 ]
  %43 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, align 8
  %44 = ptrtoint %"class.v8::internal::compiler::Node"* %43 to i64
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %43, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 16777215
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %41, i64 0, i32 7, i32 0, i32 0, i32 0
  %50 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %49, align 8
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %50, i64 %48, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 3
  br i1 %53, label %54, label %93

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %43, i64 0, i32 0
  %56 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %56, i64 0, i32 7
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %61, label %60, !prof !21

60:                                               ; preds = %54
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %56, i64 0, i32 5
  %63 = load i32, i32* %62, align 4
  %64 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %56) #10
  %65 = zext i1 %64 to i32
  %66 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %55, align 8
  %67 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %66) #10
  %68 = zext i1 %67 to i32
  %69 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %55, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %69, i64 0, i32 6
  %71 = load i32, i32* %70, align 8
  %72 = add i32 %63, %65
  %73 = add i32 %72, %68
  %74 = add i32 %73, %71
  %75 = load i32, i32* %45, align 4
  %76 = and i32 %75, 251658240
  %77 = icmp eq i32 %76, 251658240
  %78 = add i64 %44, 32
  br i1 %77, label %79, label %83

79:                                               ; preds = %61
  %80 = inttoptr i64 %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 16
  br label %83

83:                                               ; preds = %61, %79
  %84 = phi i64 [ %82, %79 ], [ %78, %61 ]
  %85 = inttoptr i64 %84 to %"class.v8::internal::compiler::Node"**
  %86 = sext i32 %74 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 %86
  %88 = bitcast %"class.v8::internal::compiler::Node"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %3, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %90, i64 0, i32 7, i32 0, i32 0, i32 0
  %92 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %91, align 8
  br label %93

93:                                               ; preds = %83, %40
  %94 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %92, %83 ], [ %50, %40 ]
  %95 = phi i64 [ %89, %83 ], [ %44, %40 ]
  %96 = inttoptr i64 %95 to %"class.v8::internal::compiler::Node"*
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %96, i64 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 16777215
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %94, i64 %100, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %179

104:                                              ; preds = %93
  %105 = load i64, i64* %28, align 8
  %106 = load i64, i64* %30, align 8
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  %109 = shl i64 %107, 6
  %110 = add i64 %109, -1
  %111 = select i1 %108, i64 0, i64 %110
  %112 = load i64, i64* %31, align 8
  %113 = load i64, i64* %32, align 8
  %114 = add i64 %113, %112
  %115 = icmp eq i64 %111, %114
  %116 = inttoptr i64 %106 to %"class.v8::internal::compiler::Node"***
  %117 = inttoptr i64 %105 to %"class.v8::internal::compiler::Node"***
  br i1 %115, label %118, label %124

118:                                              ; preds = %104
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %33) #10
  %119 = load i64, i64* %32, align 8
  %120 = load i64, i64* %31, align 8
  %121 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %29, align 8
  %122 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %123 = add i64 %120, %119
  br label %124

124:                                              ; preds = %118, %104
  %125 = phi i64 [ %123, %118 ], [ %114, %104 ]
  %126 = phi %"class.v8::internal::compiler::Node"*** [ %122, %118 ], [ %117, %104 ]
  %127 = phi %"class.v8::internal::compiler::Node"*** [ %121, %118 ], [ %116, %104 ]
  %128 = icmp eq %"class.v8::internal::compiler::Node"*** %126, %127
  br i1 %128, label %136, label %129

129:                                              ; preds = %124
  %130 = lshr i64 %125, 9
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %127, i64 %130
  %132 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %131, align 8
  %133 = and i64 %125, 511
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 %133
  %135 = bitcast %"class.v8::internal::compiler::Node"** %134 to i64*
  br label %136

136:                                              ; preds = %124, %129
  %137 = phi i64* [ %135, %129 ], [ null, %124 ]
  store i64 %95, i64* %137, align 8
  %138 = load i64, i64* %32, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %32, align 8
  br label %140

140:                                              ; preds = %176, %136
  %141 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %3, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %141, i64 0, i32 11
  %143 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %142, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %143) #10
  %144 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %29, align 8
  %145 = load <2 x i64>, <2 x i64>* %37, align 8
  %146 = extractelement <2 x i64> %145, i32 0
  %147 = lshr i64 %146, 9
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %144, i64 %147
  %149 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %148, align 8
  %150 = and i64 %146, 511
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 %150
  %152 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, align 8
  %153 = add <2 x i64> %145, <i64 1, i64 -1>
  store <2 x i64> %153, <2 x i64>* %38, align 8
  %154 = extractelement <2 x i64> %153, i32 0
  %155 = icmp ult i64 %154, 1024
  br i1 %155, label %176, label %156

156:                                              ; preds = %140
  %157 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %144, align 8
  %158 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %34, align 8
  %159 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %158, null
  br i1 %159, label %164, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %158, i64 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = icmp ugt i64 %162, 512
  br i1 %163, label %171, label %164

164:                                              ; preds = %160, %156
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %157, i64 1
  %166 = bitcast %"class.v8::internal::compiler::Node"** %165 to i64*
  store i64 512, i64* %166, align 8
  %167 = load i64, i64* %35, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"** %157 to i64*
  store i64 %167, i64* %168, align 8
  store %"class.v8::internal::compiler::Node"** %157, %"class.v8::internal::compiler::Node"*** %36, align 8
  %169 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %29, align 8
  %170 = load i64, i64* %31, align 8
  br label %171

171:                                              ; preds = %164, %160
  %172 = phi i64 [ %154, %160 ], [ %170, %164 ]
  %173 = phi %"class.v8::internal::compiler::Node"*** [ %144, %160 ], [ %169, %164 ]
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  store %"class.v8::internal::compiler::Node"*** %174, %"class.v8::internal::compiler::Node"**** %29, align 8
  %175 = add i64 %172, -512
  store i64 %175, i64* %31, align 8
  br label %176

176:                                              ; preds = %140, %171
  tail call void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::Node"* %152)
  %177 = load i64, i64* %32, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %140

179:                                              ; preds = %176, %93
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, i64 1
  %181 = icmp eq %"class.v8::internal::compiler::Node"** %180, %24
  br i1 %181, label %39, label %182

182:                                              ; preds = %179
  %183 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %3, align 8
  br label %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2v88internal8compiler8Schedule11IsScheduledEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %4, %"class.v8::internal::compiler::Node"* %1) #10
  br i1 %5, label %242, label %6

6:                                                ; preds = %2
  %7 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 16777215
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %14, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0), i32 %12, i8* %16) #10
  br label %17

17:                                               ; preds = %6, %9
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %19 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %18, align 8
  %20 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %19, null
  br i1 %20, label %68, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  br label %23

23:                                               ; preds = %65, %21
  %24 = phi %"class.v8::internal::compiler::BasicBlock"* [ null, %21 ], [ %66, %65 ]
  %25 = phi %"struct.v8::internal::compiler::Node::Use"* [ %19, %21 ], [ %27, %65 ]
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %25, i64 0, i32 0
  %27 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %25, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = lshr i32 %29, 1
  %31 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %25, i64 1
  %32 = zext i32 %30 to i64
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %31, i64 %32
  %34 = and i32 %29, 1
  %35 = icmp eq i32 %34, 0
  %36 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %33 to i64
  %37 = select i1 %35, i64 16, i64 32
  %38 = add i64 %37, %36
  %39 = inttoptr i64 %38 to %"class.v8::internal::compiler::Node"**
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, i64 %32
  %41 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %22, align 8
  br i1 %35, label %44, label %42

42:                                               ; preds = %23
  %43 = bitcast %"struct.v8::internal::compiler::Node::Use"* %33 to %"class.v8::internal::compiler::Node"*
  br label %47

44:                                               ; preds = %23
  %45 = bitcast %"struct.v8::internal::compiler::Node::Use"* %33 to %"class.v8::internal::compiler::Node"**
  %46 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %45, align 8
  br label %47

47:                                               ; preds = %44, %42
  %48 = phi %"class.v8::internal::compiler::Node"* [ %43, %42 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 16777215
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %41, i64 0, i32 7, i32 0, i32 0, i32 0
  %54 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %53, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %54, i64 %52, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %47
  %59 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor14GetBlockForUseENS1_4EdgeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"struct.v8::internal::compiler::Node::Use"* nonnull %25, %"class.v8::internal::compiler::Node"** %40) #10
  %60 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %24, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %58
  %62 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %59, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* nonnull %24, %"class.v8::internal::compiler::BasicBlock"* nonnull %59) #10
  br label %65

65:                                               ; preds = %63, %61, %58, %47
  %66 = phi %"class.v8::internal::compiler::BasicBlock"* [ %24, %47 ], [ %59, %58 ], [ %64, %63 ], [ %24, %61 ]
  %67 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %27, null
  br i1 %67, label %68, label %23

68:                                               ; preds = %65, %17
  %69 = phi %"class.v8::internal::compiler::BasicBlock"* [ null, %17 ], [ %66, %65 ]
  %70 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  %71 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 16777215
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %71, i64 0, i32 7, i32 0, i32 0, i32 0
  %77 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %76, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %77, i64 %75, i32 0
  %79 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, align 8
  %80 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %96, label %82

82:                                               ; preds = %68
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %84 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %84, i64 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %69, i64 0, i32 14, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %69, i64 0, i32 8
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %79, i64 0, i32 14, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = trunc i64 %93 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.40, i64 0, i64 0), i32 %74, i8* %86, i32 %89, i32 %91, i32 %94) #10
  %95 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %70, align 8
  br label %96

96:                                               ; preds = %68, %82
  %97 = phi %"class.v8::internal::compiler::Scheduler"* [ %71, %68 ], [ %95, %82 ]
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %97, i64 0, i32 9
  %99 = load %"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::compiler::SpecialRPONumberer"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %99, i64 0, i32 4, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %99, i64 0, i32 4, i32 0, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::vector.49"* %100 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %103, %105
  %107 = inttoptr i64 %105 to %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*
  br i1 %106, label %224, label %108

108:                                              ; preds = %96
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %69, i64 0, i32 7
  %110 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %109, align 8
  %111 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %110, null
  br i1 %111, label %112, label %142

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %69, i64 0, i32 6
  %114 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %113, align 8
  %115 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %114, null
  br i1 %115, label %224, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %114, i64 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = icmp sgt i32 %118, -1
  br i1 %119, label %120, label %125

120:                                              ; preds = %116
  %121 = sext i32 %118 to i64
  %122 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %107, i64 %121, i32 1
  %123 = load %"class.v8::internal::ZoneVector.11"*, %"class.v8::internal::ZoneVector.11"** %122, align 8
  %124 = icmp eq %"class.v8::internal::ZoneVector.11"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %120, %116
  %126 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %99, i64 0, i32 8
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi %"class.v8::internal::ZoneVector.11"* [ %126, %125 ], [ %123, %120 ]
  %129 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %128, i64 0, i32 0, i32 0, i32 1
  %132 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %131, align 8
  %133 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %130, %132
  br i1 %133, label %142, label %136

134:                                              ; preds = %136
  %135 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %141, %132
  br i1 %135, label %142, label %136

136:                                              ; preds = %127, %134
  %137 = phi %"class.v8::internal::compiler::BasicBlock"** [ %141, %134 ], [ %130, %127 ]
  %138 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %137, align 8
  %139 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* %69, %"class.v8::internal::compiler::BasicBlock"* %138) #10
  %140 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %139, %69
  %141 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %137, i64 1
  br i1 %140, label %134, label %224

142:                                              ; preds = %134, %127, %108
  %143 = phi %"class.v8::internal::compiler::BasicBlock"* [ %69, %108 ], [ %114, %127 ], [ %114, %134 ]
  %144 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %143, i64 0, i32 4
  %145 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %144, align 8
  %146 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %145, null
  br i1 %146, label %224, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %145, i64 0, i32 3
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %79, i64 0, i32 3
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %224, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  br label %155

155:                                              ; preds = %153, %219
  %156 = phi %"class.v8::internal::compiler::BasicBlock"* [ %217, %219 ], [ %145, %153 ]
  %157 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %168, label %159

159:                                              ; preds = %155
  %160 = load i32, i32* %72, align 4
  %161 = and i32 %160, 16777215
  %162 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %154, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %162, i64 0, i32 1
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %156, i64 0, i32 14, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = trunc i64 %166 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i32 %161, i8* %164, i32 %167) #10
  br label %168

168:                                              ; preds = %155, %159
  %169 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %70, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %169, i64 0, i32 9
  %171 = load %"class.v8::internal::compiler::SpecialRPONumberer"*, %"class.v8::internal::compiler::SpecialRPONumberer"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %171, i64 0, i32 4, i32 0
  %173 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %171, i64 0, i32 4, i32 0, i32 0, i32 1
  %174 = bitcast %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.std::__1::vector.49"* %172 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %175, %177
  %179 = inttoptr i64 %177 to %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"*
  br i1 %178, label %232, label %180

180:                                              ; preds = %168
  %181 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %156, i64 0, i32 7
  %182 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %181, align 8
  %183 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %182, null
  br i1 %183, label %184, label %214

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %156, i64 0, i32 6
  %186 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %185, align 8
  %187 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %186, null
  br i1 %187, label %232, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %186, i64 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = icmp sgt i32 %190, -1
  br i1 %191, label %192, label %197

192:                                              ; preds = %188
  %193 = sext i32 %190 to i64
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo", %"struct.v8::internal::compiler::SpecialRPONumberer::LoopInfo"* %179, i64 %193, i32 1
  %195 = load %"class.v8::internal::ZoneVector.11"*, %"class.v8::internal::ZoneVector.11"** %194, align 8
  %196 = icmp eq %"class.v8::internal::ZoneVector.11"* %195, null
  br i1 %196, label %197, label %199

197:                                              ; preds = %192, %188
  %198 = getelementptr inbounds %"class.v8::internal::compiler::SpecialRPONumberer", %"class.v8::internal::compiler::SpecialRPONumberer"* %171, i64 0, i32 8
  br label %199

199:                                              ; preds = %197, %192
  %200 = phi %"class.v8::internal::ZoneVector.11"* [ %198, %197 ], [ %195, %192 ]
  %201 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %200, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %200, i64 0, i32 0, i32 0, i32 1
  %204 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %203, align 8
  %205 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %202, %204
  br i1 %205, label %214, label %208

206:                                              ; preds = %208
  %207 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %213, %204
  br i1 %207, label %214, label %208

208:                                              ; preds = %199, %206
  %209 = phi %"class.v8::internal::compiler::BasicBlock"** [ %213, %206 ], [ %202, %199 ]
  %210 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %209, align 8
  %211 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* %156, %"class.v8::internal::compiler::BasicBlock"* %210) #10
  %212 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %211, %156
  %213 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %209, i64 1
  br i1 %212, label %206, label %232

214:                                              ; preds = %206, %199, %180
  %215 = phi %"class.v8::internal::compiler::BasicBlock"* [ %156, %180 ], [ %186, %199 ], [ %186, %206 ]
  %216 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %215, i64 0, i32 4
  %217 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %216, align 8
  %218 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %217, i64 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = load i32, i32* %150, align 4
  %223 = icmp slt i32 %221, %222
  br i1 %223, label %232, label %155

224:                                              ; preds = %136, %96, %112, %147, %142
  %225 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %70, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %225, i64 0, i32 3, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %224
  %231 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor9SplitNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::BasicBlock"* %69, %"class.v8::internal::compiler::Node"* %1)
  br label %232

232:                                              ; preds = %168, %184, %219, %214, %208, %224, %230
  %233 = phi %"class.v8::internal::compiler::BasicBlock"* [ %231, %230 ], [ %69, %224 ], [ %156, %208 ], [ %156, %214 ], [ %156, %219 ], [ %156, %184 ], [ %156, %168 ]
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %235 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %235, i64 0, i32 2
  %237 = load i16, i16* %236, align 8
  switch i16 %237, label %241 [
    i16 10, label %238
    i16 1, label %238
    i16 40, label %240
  ]

238:                                              ; preds = %232, %232
  %239 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %70, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler19FuseFloatingControlEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Scheduler"* %239, %"class.v8::internal::compiler::BasicBlock"* %233, %"class.v8::internal::compiler::Node"* %1) #10
  br label %242

240:                                              ; preds = %232
  tail call void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor14ScheduleRegionEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::BasicBlock"* %233, %"class.v8::internal::compiler::Node"* %1)
  br label %242

241:                                              ; preds = %232
  tail call void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ScheduleNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::BasicBlock"* %233, %"class.v8::internal::compiler::Node"* %1)
  br label %242

242:                                              ; preds = %238, %241, %240, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor24GetCommonDominatorOfUsesEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %4 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  br label %10

8:                                                ; preds = %52, %2
  %9 = phi %"class.v8::internal::compiler::BasicBlock"* [ null, %2 ], [ %53, %52 ]
  ret %"class.v8::internal::compiler::BasicBlock"* %9

10:                                               ; preds = %52, %6
  %11 = phi %"class.v8::internal::compiler::BasicBlock"* [ null, %6 ], [ %53, %52 ]
  %12 = phi %"struct.v8::internal::compiler::Node::Use"* [ %4, %6 ], [ %14, %52 ]
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %12, i64 0, i32 0
  %14 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = lshr i32 %16, 1
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %12, i64 1
  %19 = zext i32 %17 to i64
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 %19
  %21 = and i32 %16, 1
  %22 = icmp eq i32 %21, 0
  %23 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %20 to i64
  %24 = select i1 %22, i64 16, i64 32
  %25 = add i64 %24, %23
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, i64 %19
  %28 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %7, align 8
  br i1 %22, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"struct.v8::internal::compiler::Node::Use"* %20 to %"class.v8::internal::compiler::Node"*
  br label %34

31:                                               ; preds = %10
  %32 = bitcast %"struct.v8::internal::compiler::Node::Use"* %20 to %"class.v8::internal::compiler::Node"**
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, align 8
  br label %34

34:                                               ; preds = %29, %31
  %35 = phi %"class.v8::internal::compiler::Node"* [ %30, %29 ], [ %33, %31 ]
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %35, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 16777215
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %28, i64 0, i32 7, i32 0, i32 0, i32 0
  %41 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %41, i64 %39, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %34
  %46 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor14GetBlockForUseENS1_4EdgeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"struct.v8::internal::compiler::Node::Use"* nonnull %12, %"class.v8::internal::compiler::Node"** %27)
  %47 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %11, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %46, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* nonnull %11, %"class.v8::internal::compiler::BasicBlock"* nonnull %46) #10
  br label %52

52:                                               ; preds = %34, %45, %48, %50
  %53 = phi %"class.v8::internal::compiler::BasicBlock"* [ %11, %34 ], [ %46, %45 ], [ %51, %50 ], [ %11, %48 ]
  %54 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %14, null
  br i1 %54, label %8, label %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor9SplitNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::ZoneMap", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 3, i32 0
  %8 = load i8, i8* %7, align 2
  %9 = and i8 %8, 124
  %10 = icmp eq i8 %9, 124
  br i1 %10, label %11, label %702

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 2
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 55
  br i1 %14, label %702, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.12"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ult i64 %23, 2
  br i1 %24, label %702, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 3, i32 0
  %27 = bitcast %"class.std::__1::vector.85"* %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !116
  %29 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 3, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !117
  %31 = inttoptr i64 %28 to i64*
  %32 = lshr i64 %30, 6
  %33 = getelementptr inbounds i64, i64* %31, i64 %32
  %34 = and i64 %30, 63
  %35 = ptrtoint i64* %33 to i64
  %36 = sub i64 %35, %28
  %37 = shl i64 %36, 3
  %38 = add i64 %37, %34
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %25
  %41 = inttoptr i64 %28 to i8*
  %42 = lshr i64 %38, 6
  %43 = shl nuw nsw i64 %42, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 %43, i1 false) #10
  %44 = and i64 %38, 63
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds i64, i64* %31, i64 %42
  %48 = sub nuw nsw i64 64, %44
  %49 = lshr i64 -1, %48
  %50 = xor i64 %49, -1
  %51 = load i64, i64* %47, align 8
  %52 = and i64 %51, %50
  store i64 %52, i64* %47, align 8
  br label %53

53:                                               ; preds = %25, %40, %46
  %54 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 2
  %55 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %55, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %55, i64 0, i32 1, i32 0, i32 0, i32 1
  %58 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::vector.12"* %56 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = ashr exact i64 %62, 3
  %64 = add nsw i64 %63, 1
  tail call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.85"* %26, i64 %64, i1 zeroext false)
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 4
  %66 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %65, align 8
  %67 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %53
  %69 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  %70 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 3, i32 0, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %72 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %71 to i64*
  %73 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %73 to i64*
  %75 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %77 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0
  br label %91

78:                                               ; preds = %293, %53
  %79 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0
  %80 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %83 to i64*
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %83 to %"class.v8::internal::compiler::BasicBlock"***
  %86 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %88 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %87 to i64*
  %89 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %80 to i64*
  %90 = load i64, i64* %82, align 8
  br label %295

91:                                               ; preds = %293, %68
  %92 = phi %"struct.v8::internal::compiler::Node::Use"* [ %66, %68 ], [ %94, %293 ]
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %92, i64 0, i32 0
  %94 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %93, align 8
  %95 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %92, i64 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = lshr i32 %96, 1
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %92, i64 1
  %99 = zext i32 %97 to i64
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %98, i64 %99
  %101 = and i32 %96, 1
  %102 = icmp eq i32 %101, 0
  %103 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %100 to i64
  %104 = select i1 %102, i64 16, i64 32
  %105 = add i64 %104, %103
  %106 = inttoptr i64 %105 to %"class.v8::internal::compiler::Node"**
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, i64 %99
  %108 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %69, align 8
  br i1 %102, label %111, label %109

109:                                              ; preds = %91
  %110 = bitcast %"struct.v8::internal::compiler::Node::Use"* %100 to %"class.v8::internal::compiler::Node"*
  br label %114

111:                                              ; preds = %91
  %112 = bitcast %"struct.v8::internal::compiler::Node::Use"* %100 to %"class.v8::internal::compiler::Node"**
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  br label %114

114:                                              ; preds = %109, %111
  %115 = phi %"class.v8::internal::compiler::Node"* [ %110, %109 ], [ %113, %111 ]
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %115, i64 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = and i32 %117, 16777215
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %108, i64 0, i32 7, i32 0, i32 0, i32 0
  %121 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %120, align 8
  %122 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %121, i64 %119, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %293, label %125

125:                                              ; preds = %114
  %126 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor14GetBlockForUseENS1_4EdgeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"struct.v8::internal::compiler::Node::Use"* nonnull %92, %"class.v8::internal::compiler::Node"** %107)
  %127 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %126, null
  br i1 %127, label %293, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %126, i64 0, i32 14, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = load i64*, i64** %70, align 8
  %132 = lshr i64 %130, 6
  %133 = getelementptr inbounds i64, i64* %131, i64 %132
  %134 = and i64 %130, 63
  %135 = shl i64 1, %134
  %136 = load i64, i64* %133, align 8
  %137 = and i64 %135, %136
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %293

139:                                              ; preds = %128
  %140 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %126, %1
  br i1 %140, label %141, label %233

141:                                              ; preds = %139
  %142 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %154, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = and i32 %146, 16777215
  %148 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %148, i64 0, i32 1
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 14, i32 0
  %152 = load i64, i64* %151, align 8
  %153 = trunc i64 %152 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.46, i64 0, i64 0), i32 %147, i8* %150, i32 %153) #10
  br label %154

154:                                              ; preds = %141, %144
  %155 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %73, align 8
  %156 = load i64, i64* %75, align 8
  %157 = lshr i64 %156, 9
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %155, i64 %157
  %159 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %71, align 8
  %160 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %159, %155
  %161 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %159 to i64
  %162 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %155 to i64
  br i1 %160, label %175, label %163

163:                                              ; preds = %154
  %164 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %158, align 8
  %165 = and i64 %156, 511
  %166 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, i64 %165
  %167 = load i64, i64* %76, align 8
  %168 = add i64 %167, %156
  %169 = lshr i64 %168, 9
  %170 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %155, i64 %169
  %171 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %170, align 8
  %172 = and i64 %168, 511
  %173 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %171, i64 %172
  %174 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %173, %166
  br i1 %174, label %175, label %184

175:                                              ; preds = %197, %154, %163
  store i64 0, i64* %76, align 8
  %176 = sub i64 %161, %162
  %177 = ashr exact i64 %176, 3
  %178 = icmp ugt i64 %177, 2
  br i1 %178, label %179, label %229

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %181 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %180 to i64*
  %182 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %180 to %"class.v8::internal::compiler::BasicBlock"***
  %183 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %180, align 8
  br label %202

184:                                              ; preds = %163, %197
  %185 = phi %"class.v8::internal::compiler::BasicBlock"** [ %200, %197 ], [ %166, %163 ]
  %186 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %198, %197 ], [ %158, %163 ]
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %185, i64 1
  %188 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %187 to i64
  %189 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %186 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %188, %190
  %192 = icmp eq i64 %191, 4096
  br i1 %192, label %193, label %197

193:                                              ; preds = %184
  %194 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %186, i64 1
  %195 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %194 to i64*
  %196 = load i64, i64* %195, align 8
  br label %197

197:                                              ; preds = %193, %184
  %198 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %194, %193 ], [ %186, %184 ]
  %199 = phi i64 [ %196, %193 ], [ %188, %184 ]
  %200 = inttoptr i64 %199 to %"class.v8::internal::compiler::BasicBlock"**
  %201 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %173, %200
  br i1 %201, label %175, label %184

202:                                              ; preds = %220, %179
  %203 = phi i64 [ %161, %179 ], [ %221, %220 ]
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %183, %179 ], [ %223, %220 ]
  %205 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %155, %179 ], [ %224, %220 ]
  %206 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %205, align 8
  %207 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %204, null
  br i1 %207, label %212, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %204, i64 0, i32 1
  %210 = load i64, i64* %209, align 8
  %211 = icmp ugt i64 %210, 512
  br i1 %211, label %220, label %212

212:                                              ; preds = %208, %202
  %213 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 1
  %214 = bitcast %"class.v8::internal::compiler::BasicBlock"** %213 to i64*
  store i64 512, i64* %214, align 8
  %215 = load i64, i64* %181, align 8
  %216 = bitcast %"class.v8::internal::compiler::BasicBlock"** %206 to i64*
  store i64 %215, i64* %216, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %206, %"class.v8::internal::compiler::BasicBlock"*** %182, align 8
  %217 = bitcast %"class.v8::internal::compiler::BasicBlock"** %206 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  %218 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %73, align 8
  %219 = load i64, i64* %72, align 8
  br label %220

220:                                              ; preds = %212, %208
  %221 = phi i64 [ %203, %208 ], [ %219, %212 ]
  %222 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %205, %208 ], [ %218, %212 ]
  %223 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %204, %208 ], [ %217, %212 ]
  %224 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %222, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %224, %"class.v8::internal::compiler::BasicBlock"**** %73, align 8
  %225 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %224 to i64
  %226 = sub i64 %221, %225
  %227 = ashr exact i64 %226, 3
  %228 = icmp ugt i64 %227, 2
  br i1 %228, label %202, label %229

229:                                              ; preds = %220, %175
  %230 = phi i64 [ %177, %175 ], [ %227, %220 ]
  switch i64 %230, label %702 [
    i64 1, label %231
    i64 2, label %232
  ]

231:                                              ; preds = %229
  store i64 256, i64* %75, align 8
  br label %702

232:                                              ; preds = %229
  store i64 512, i64* %75, align 8
  br label %702

233:                                              ; preds = %139
  %234 = or i64 %136, %135
  store i64 %234, i64* %133, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %126, i64 0, i32 13, i32 0, i32 0, i32 0
  %236 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %235, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %126, i64 0, i32 13, i32 0, i32 0, i32 1
  %238 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %237, align 8
  %239 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %236, %238
  br i1 %239, label %293, label %240

240:                                              ; preds = %233, %290
  %241 = phi %"class.v8::internal::compiler::BasicBlock"** [ %291, %290 ], [ %236, %233 ]
  %242 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %241, align 8
  %243 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %242 to i64
  %244 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %242, i64 0, i32 14, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = load i64*, i64** %70, align 8
  %247 = lshr i64 %245, 6
  %248 = getelementptr inbounds i64, i64* %246, i64 %247
  %249 = and i64 %245, 63
  %250 = shl i64 1, %249
  %251 = load i64, i64* %248, align 8
  %252 = and i64 %250, %251
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %290

254:                                              ; preds = %240
  %255 = load i64, i64* %72, align 8
  %256 = load i64, i64* %74, align 8
  %257 = sub i64 %255, %256
  %258 = icmp eq i64 %257, 0
  %259 = shl i64 %257, 6
  %260 = add i64 %259, -1
  %261 = select i1 %258, i64 0, i64 %260
  %262 = load i64, i64* %75, align 8
  %263 = load i64, i64* %76, align 8
  %264 = add i64 %263, %262
  %265 = icmp eq i64 %261, %264
  %266 = inttoptr i64 %256 to %"class.v8::internal::compiler::BasicBlock"***
  %267 = inttoptr i64 %255 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %265, label %268, label %274

268:                                              ; preds = %254
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.91"* %77) #10
  %269 = load i64, i64* %76, align 8
  %270 = load i64, i64* %75, align 8
  %271 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %73, align 8
  %272 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %71, align 8
  %273 = add i64 %270, %269
  br label %274

274:                                              ; preds = %268, %254
  %275 = phi i64 [ %273, %268 ], [ %264, %254 ]
  %276 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %272, %268 ], [ %267, %254 ]
  %277 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %271, %268 ], [ %266, %254 ]
  %278 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %276, %277
  br i1 %278, label %286, label %279

279:                                              ; preds = %274
  %280 = lshr i64 %275, 9
  %281 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %277, i64 %280
  %282 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %281, align 8
  %283 = and i64 %275, 511
  %284 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %282, i64 %283
  %285 = bitcast %"class.v8::internal::compiler::BasicBlock"** %284 to i64*
  br label %286

286:                                              ; preds = %279, %274
  %287 = phi i64* [ %285, %279 ], [ null, %274 ]
  store i64 %243, i64* %287, align 8
  %288 = load i64, i64* %76, align 8
  %289 = add i64 %288, 1
  store i64 %289, i64* %76, align 8
  br label %290

290:                                              ; preds = %286, %240
  %291 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %241, i64 1
  %292 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %291, %238
  br i1 %292, label %293, label %240

293:                                              ; preds = %290, %128, %114, %233, %125
  %294 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %94, null
  br i1 %294, label %78, label %91

295:                                              ; preds = %78, %426
  %296 = phi i64 [ %90, %78 ], [ %427, %426 ]
  %297 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %80, align 8
  %298 = load i64, i64* %81, align 8
  %299 = lshr i64 %298, 9
  %300 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %297, i64 %299
  %301 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %300, align 8
  %302 = and i64 %298, 511
  %303 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %301, i64 %302
  %304 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %303, align 8
  %305 = add i64 %296, -1
  store i64 %305, i64* %82, align 8
  %306 = add i64 %298, 1
  store i64 %306, i64* %81, align 8
  %307 = icmp ult i64 %306, 1024
  br i1 %307, label %328, label %308

308:                                              ; preds = %295
  %309 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %297, align 8
  %310 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %83, align 8
  %311 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %310, null
  br i1 %311, label %316, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %310, i64 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ugt i64 %314, 512
  br i1 %315, label %323, label %316

316:                                              ; preds = %312, %308
  %317 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %309, i64 1
  %318 = bitcast %"class.v8::internal::compiler::BasicBlock"** %317 to i64*
  store i64 512, i64* %318, align 8
  %319 = load i64, i64* %84, align 8
  %320 = bitcast %"class.v8::internal::compiler::BasicBlock"** %309 to i64*
  store i64 %319, i64* %320, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %309, %"class.v8::internal::compiler::BasicBlock"*** %85, align 8
  %321 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %80, align 8
  %322 = load i64, i64* %81, align 8
  br label %323

323:                                              ; preds = %316, %312
  %324 = phi i64 [ %306, %312 ], [ %322, %316 ]
  %325 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %297, %312 ], [ %321, %316 ]
  %326 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %325, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %326, %"class.v8::internal::compiler::BasicBlock"**** %80, align 8
  %327 = add i64 %324, -512
  store i64 %327, i64* %81, align 8
  br label %328

328:                                              ; preds = %295, %323
  %329 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %304, i64 0, i32 14, i32 0
  %330 = load i64, i64* %329, align 8
  %331 = load i64*, i64** %86, align 8
  %332 = lshr i64 %330, 6
  %333 = getelementptr inbounds i64, i64* %331, i64 %332
  %334 = and i64 %330, 63
  %335 = shl i64 1, %334
  %336 = load i64, i64* %333, align 8
  %337 = and i64 %335, %336
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %426

339:                                              ; preds = %328
  %340 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %304, i64 0, i32 12, i32 0, i32 0, i32 0
  %341 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %340, align 8
  %342 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %304, i64 0, i32 12, i32 0, i32 0, i32 1
  %343 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %342, align 8
  %344 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %341, %343
  br i1 %344, label %366, label %345

345:                                              ; preds = %339, %345
  %346 = phi i8 [ %358, %345 ], [ 1, %339 ]
  %347 = phi %"class.v8::internal::compiler::BasicBlock"** [ %359, %345 ], [ %341, %339 ]
  %348 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %347, align 8
  %349 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %348, i64 0, i32 14, i32 0
  %350 = load i64, i64* %349, align 8
  %351 = lshr i64 %350, 6
  %352 = getelementptr inbounds i64, i64* %331, i64 %351
  %353 = and i64 %350, 63
  %354 = shl i64 1, %353
  %355 = load i64, i64* %352, align 8
  %356 = and i64 %354, %355
  %357 = icmp ne i64 %356, 0
  %358 = select i1 %357, i8 %346, i8 0
  %359 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %347, i64 1
  %360 = xor i1 %357, true
  %361 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %359, %343
  %362 = or i1 %361, %360
  br i1 %362, label %363, label %345

363:                                              ; preds = %345
  %364 = and i8 %358, 1
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %426, label %366

366:                                              ; preds = %339, %363
  %367 = or i64 %336, %335
  store i64 %367, i64* %333, align 8
  %368 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %304, i64 0, i32 13, i32 0, i32 0, i32 0
  %369 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %368, align 8
  %370 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %304, i64 0, i32 13, i32 0, i32 0, i32 1
  %371 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %370, align 8
  %372 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %369, %371
  br i1 %372, label %426, label %373

373:                                              ; preds = %366, %423
  %374 = phi %"class.v8::internal::compiler::BasicBlock"** [ %424, %423 ], [ %369, %366 ]
  %375 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %374, align 8
  %376 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %375 to i64
  %377 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %375, i64 0, i32 14, i32 0
  %378 = load i64, i64* %377, align 8
  %379 = load i64*, i64** %86, align 8
  %380 = lshr i64 %378, 6
  %381 = getelementptr inbounds i64, i64* %379, i64 %380
  %382 = and i64 %378, 63
  %383 = shl i64 1, %382
  %384 = load i64, i64* %381, align 8
  %385 = and i64 %383, %384
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %387, label %423

387:                                              ; preds = %373
  %388 = load i64, i64* %88, align 8
  %389 = load i64, i64* %89, align 8
  %390 = sub i64 %388, %389
  %391 = icmp eq i64 %390, 0
  %392 = shl i64 %390, 6
  %393 = add i64 %392, -1
  %394 = select i1 %391, i64 0, i64 %393
  %395 = load i64, i64* %81, align 8
  %396 = load i64, i64* %82, align 8
  %397 = add i64 %396, %395
  %398 = icmp eq i64 %394, %397
  %399 = inttoptr i64 %389 to %"class.v8::internal::compiler::BasicBlock"***
  %400 = inttoptr i64 %388 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %398, label %401, label %407

401:                                              ; preds = %387
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.91"* %79) #10
  %402 = load i64, i64* %82, align 8
  %403 = load i64, i64* %81, align 8
  %404 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %80, align 8
  %405 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %87, align 8
  %406 = add i64 %403, %402
  br label %407

407:                                              ; preds = %401, %387
  %408 = phi i64 [ %406, %401 ], [ %397, %387 ]
  %409 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %405, %401 ], [ %400, %387 ]
  %410 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %404, %401 ], [ %399, %387 ]
  %411 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %409, %410
  br i1 %411, label %419, label %412

412:                                              ; preds = %407
  %413 = lshr i64 %408, 9
  %414 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %410, i64 %413
  %415 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %414, align 8
  %416 = and i64 %408, 511
  %417 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %415, i64 %416
  %418 = bitcast %"class.v8::internal::compiler::BasicBlock"** %417 to i64*
  br label %419

419:                                              ; preds = %412, %407
  %420 = phi i64* [ %418, %412 ], [ null, %407 ]
  store i64 %376, i64* %420, align 8
  %421 = load i64, i64* %82, align 8
  %422 = add i64 %421, 1
  store i64 %422, i64* %82, align 8
  br label %423

423:                                              ; preds = %419, %373
  %424 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %374, i64 1
  %425 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %424, %371
  br i1 %425, label %426, label %373

426:                                              ; preds = %423, %328, %366, %363
  %427 = load i64, i64* %82, align 8
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %429, label %295

429:                                              ; preds = %426
  %430 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 14, i32 0
  %431 = load i64, i64* %430, align 8
  %432 = load i64*, i64** %86, align 8
  %433 = lshr i64 %431, 6
  %434 = getelementptr inbounds i64, i64* %432, i64 %433
  %435 = and i64 %431, 63
  %436 = shl i64 1, %435
  %437 = load i64, i64* %434, align 8
  %438 = and i64 %436, %437
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %429
  %441 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %702, label %443

443:                                              ; preds = %440
  %444 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %445 = load i32, i32* %444, align 4
  %446 = and i32 %445, 16777215
  %447 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %447, i64 0, i32 1
  %449 = load i8*, i8** %448, align 8
  %450 = trunc i64 %431 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.47, i64 0, i64 0), i32 %446, i8* %449, i32 %450) #10
  br label %702

451:                                              ; preds = %429
  %452 = bitcast %"class.v8::internal::ZoneMap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %452) #10
  %453 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  %454 = bitcast %"class.v8::internal::compiler::Scheduler"** %453 to i64**
  %455 = load i64*, i64** %454, align 8
  %456 = load i64, i64* %455, align 8
  %457 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %4, i64 0, i32 0, i32 0, i32 0
  %458 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %4, i64 0, i32 0, i32 0, i32 1, i32 1
  %459 = bitcast %"struct.std::__1::__compressed_pair_elem.128"* %458 to i64*
  %460 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %4, i64 0, i32 0, i32 0, i32 1
  %461 = bitcast %"class.std::__1::__compressed_pair.126"* %460 to i64*
  store i64 0, i64* %461, align 8
  store i64 %456, i64* %459, align 8
  %462 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %462, align 8
  %463 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %463, %"class.std::__1::__tree_end_node"** %457, align 8
  %464 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %65, align 8
  %465 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %464, null
  br i1 %465, label %476, label %466

466:                                              ; preds = %451
  %467 = bitcast i64* %455 to %"class.v8::internal::compiler::Scheduler"*
  %468 = bitcast %"class.std::__1::__tree_end_node"* %463 to %"class.std::__1::__tree_node"**
  %469 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %470 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %463, i64 0, i32 0
  %471 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %4, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %472 = bitcast %"class.v8::internal::ZoneMap"* %4 to i64*
  %473 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  br label %480

474:                                              ; preds = %697
  %475 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %468, align 8
  br label %476

476:                                              ; preds = %451, %474
  %477 = phi %"class.std::__1::__tree_node"* [ %475, %474 ], [ null, %451 ]
  %478 = phi %"class.v8::internal::compiler::BasicBlock"* [ %698, %474 ], [ %1, %451 ]
  %479 = getelementptr inbounds %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap"* %4, i64 0, i32 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler10BasicBlockEPNS4_4NodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* nonnull %479, %"class.std::__1::__tree_node"* %477) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %452) #10
  br label %702

480:                                              ; preds = %700, %466
  %481 = phi %"class.v8::internal::compiler::Scheduler"* [ %467, %466 ], [ %701, %700 ]
  %482 = phi %"class.v8::internal::compiler::BasicBlock"* [ %1, %466 ], [ %698, %700 ]
  %483 = phi %"struct.v8::internal::compiler::Node::Use"* [ %464, %466 ], [ %485, %700 ]
  %484 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %483, i64 0, i32 0
  %485 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %484, align 8
  %486 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %483, i64 0, i32 2
  %487 = load i32, i32* %486, align 8
  %488 = lshr i32 %487, 1
  %489 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %483, i64 1
  %490 = zext i32 %488 to i64
  %491 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %489, i64 %490
  %492 = and i32 %487, 1
  %493 = icmp eq i32 %492, 0
  %494 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %491 to i64
  %495 = select i1 %493, i64 16, i64 32
  %496 = add i64 %495, %494
  %497 = inttoptr i64 %496 to %"class.v8::internal::compiler::Node"**
  %498 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %497, i64 %490
  br i1 %493, label %501, label %499

499:                                              ; preds = %480
  %500 = bitcast %"struct.v8::internal::compiler::Node::Use"* %491 to %"class.v8::internal::compiler::Node"*
  br label %504

501:                                              ; preds = %480
  %502 = bitcast %"struct.v8::internal::compiler::Node::Use"* %491 to %"class.v8::internal::compiler::Node"**
  %503 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %502, align 8
  br label %504

504:                                              ; preds = %499, %501
  %505 = phi %"class.v8::internal::compiler::Node"* [ %500, %499 ], [ %503, %501 ]
  %506 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %505, i64 0, i32 3
  %507 = load i32, i32* %506, align 4
  %508 = and i32 %507, 16777215
  %509 = zext i32 %508 to i64
  %510 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %481, i64 0, i32 7, i32 0, i32 0, i32 0
  %511 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %510, align 8
  %512 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %511, i64 %509, i32 2
  %513 = load i32, i32* %512, align 4
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %697, label %515

515:                                              ; preds = %504
  %516 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor14GetBlockForUseENS1_4EdgeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"struct.v8::internal::compiler::Node::Use"* nonnull %483, %"class.v8::internal::compiler::Node"** %498)
  %517 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %516, null
  br i1 %517, label %697, label %518

518:                                              ; preds = %515
  %519 = load i64*, i64** %86, align 8
  br label %520

520:                                              ; preds = %518, %520
  %521 = phi %"class.v8::internal::compiler::BasicBlock"* [ %523, %520 ], [ %516, %518 ]
  %522 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %521, i64 0, i32 4
  %523 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %522, align 8
  %524 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %523, i64 0, i32 14, i32 0
  %525 = load i64, i64* %524, align 8
  %526 = lshr i64 %525, 6
  %527 = getelementptr inbounds i64, i64* %519, i64 %526
  %528 = and i64 %525, 63
  %529 = shl i64 1, %528
  %530 = load i64, i64* %527, align 8
  %531 = and i64 %529, %530
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %533, label %520

533:                                              ; preds = %520
  %534 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %521 to i64
  %535 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %468, align 8
  %536 = icmp eq %"class.std::__1::__tree_node"* %535, null
  br i1 %536, label %563, label %537

537:                                              ; preds = %533, %559
  %538 = phi %"class.std::__1::__tree_node"* [ %562, %559 ], [ %535, %533 ]
  %539 = phi %"class.std::__1::__tree_node_base"** [ %561, %559 ], [ %469, %533 ]
  %540 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 1, i32 0, i32 0
  %541 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %540, align 8
  %542 = icmp ult %"class.v8::internal::compiler::BasicBlock"* %521, %541
  br i1 %542, label %543, label %549

543:                                              ; preds = %537
  %544 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 0, i32 0
  %545 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %544, align 8
  %546 = icmp eq %"class.std::__1::__tree_node_base"* %545, null
  br i1 %546, label %547, label %559

547:                                              ; preds = %543
  %548 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 0
  br label %563

549:                                              ; preds = %537
  %550 = icmp ult %"class.v8::internal::compiler::BasicBlock"* %541, %521
  br i1 %550, label %551, label %557

551:                                              ; preds = %549
  %552 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 1
  %553 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %552, align 8
  %554 = icmp eq %"class.std::__1::__tree_node_base"* %553, null
  br i1 %554, label %555, label %559

555:                                              ; preds = %551
  %556 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 0
  br label %563

557:                                              ; preds = %549
  %558 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %538, i64 0, i32 0, i32 0
  br label %563

559:                                              ; preds = %551, %543
  %560 = phi %"class.std::__1::__tree_node_base"* [ %545, %543 ], [ %553, %551 ]
  %561 = phi %"class.std::__1::__tree_node_base"** [ %544, %543 ], [ %552, %551 ]
  %562 = bitcast %"class.std::__1::__tree_node_base"* %560 to %"class.std::__1::__tree_node"*
  br label %537

563:                                              ; preds = %533, %557, %555, %547
  %564 = phi %"class.std::__1::__tree_end_node"* [ %548, %547 ], [ %556, %555 ], [ %558, %557 ], [ %463, %533 ]
  %565 = phi %"class.std::__1::__tree_node_base"** [ %544, %547 ], [ %552, %555 ], [ %539, %557 ], [ %470, %533 ]
  %566 = bitcast %"class.std::__1::__tree_node_base"** %565 to %"class.std::__1::__tree_node"**
  %567 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %566, align 8
  %568 = icmp eq %"class.std::__1::__tree_node"* %567, null
  br i1 %568, label %569, label %602

569:                                              ; preds = %563
  %570 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %471, align 8, !noalias !120
  %571 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %570, i64 0, i32 2
  %572 = load i64, i64* %571, align 8, !noalias !120
  %573 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %570, i64 0, i32 3
  %574 = load i64, i64* %573, align 8, !noalias !120
  %575 = sub i64 %574, %572
  %576 = icmp ult i64 %575, 48
  br i1 %576, label %577, label %579, !prof !2

577:                                              ; preds = %569
  %578 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %570, i64 48) #10, !noalias !120
  br label %581

579:                                              ; preds = %569
  %580 = add i64 %572, 48
  store i64 %580, i64* %571, align 8, !noalias !120
  br label %581

581:                                              ; preds = %579, %577
  %582 = phi i64 [ %578, %577 ], [ %572, %579 ]
  %583 = inttoptr i64 %582 to %"class.std::__1::__tree_node"*
  %584 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %583, i64 0, i32 1, i32 0
  %585 = bitcast %"struct.std::__1::pair.149"* %584 to i64*
  store i64 %534, i64* %585, align 8, !noalias !120
  %586 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %583, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %586, align 8, !noalias !120
  %587 = inttoptr i64 %582 to %"class.std::__1::__tree_node_base"*
  %588 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %587, i64 0, i32 2
  %589 = inttoptr i64 %582 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %589, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %564, %"class.std::__1::__tree_end_node"** %588, align 8
  store %"class.std::__1::__tree_node_base"* %587, %"class.std::__1::__tree_node_base"** %565, align 8
  %590 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %457, align 8
  %591 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %590, i64 0, i32 0
  %592 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %591, align 8
  %593 = icmp eq %"class.std::__1::__tree_node_base"* %592, null
  br i1 %593, label %597, label %594

594:                                              ; preds = %581
  %595 = ptrtoint %"class.std::__1::__tree_node_base"* %592 to i64
  store i64 %595, i64* %472, align 8
  %596 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %565, align 8
  br label %597

597:                                              ; preds = %594, %581
  %598 = phi %"class.std::__1::__tree_node_base"* [ %587, %581 ], [ %596, %594 ]
  %599 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %469, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %599, %"class.std::__1::__tree_node_base"* %598) #10
  %600 = load i64, i64* %462, align 8
  %601 = add i64 %600, 1
  store i64 %601, i64* %462, align 8
  br label %602

602:                                              ; preds = %563, %597
  %603 = phi %"class.std::__1::__tree_node"* [ %583, %597 ], [ %567, %563 ]
  %604 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %603, i64 0, i32 1, i32 0, i32 1
  %605 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %604, align 8
  %606 = icmp eq %"class.v8::internal::compiler::Node"* %605, null
  br i1 %606, label %607, label %686

607:                                              ; preds = %602
  %608 = load i64, i64* %462, align 8
  %609 = icmp eq i64 %608, 1
  br i1 %609, label %610, label %622

610:                                              ; preds = %607
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %604, align 8
  %611 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %612 = icmp eq i8 %611, 0
  br i1 %612, label %686, label %613

613:                                              ; preds = %610
  %614 = load i32, i32* %473, align 4
  %615 = and i32 %614, 16777215
  %616 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %617 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %616, i64 0, i32 1
  %618 = load i8*, i8** %617, align 8
  %619 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %521, i64 0, i32 14, i32 0
  %620 = load i64, i64* %619, align 8
  %621 = trunc i64 %620 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i32 %615, i8* %618, i32 %621) #10
  br label %683

622:                                              ; preds = %607
  %623 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor9CloneNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::Node"* %2)
  store %"class.v8::internal::compiler::Node"* %623, %"class.v8::internal::compiler::Node"** %604, align 8
  %624 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %625 = icmp eq i8 %624, 0
  br i1 %625, label %637, label %626

626:                                              ; preds = %622
  %627 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %623, i64 0, i32 3
  %628 = load i32, i32* %627, align 4
  %629 = and i32 %628, 16777215
  %630 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %623, i64 0, i32 0
  %631 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %630, align 8
  %632 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %631, i64 0, i32 1
  %633 = load i8*, i8** %632, align 8
  %634 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %521, i64 0, i32 14, i32 0
  %635 = load i64, i64* %634, align 8
  %636 = trunc i64 %635 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 %629, i8* %633, i32 %636) #10
  br label %637

637:                                              ; preds = %622, %626
  %638 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %453, align 8
  %639 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %638, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %640 = bitcast %"class.v8::internal::compiler::Node"**** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %638, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %643 = bitcast %"class.v8::internal::compiler::Node"**** %642 to i64*
  %644 = load i64, i64* %643, align 8
  %645 = sub i64 %641, %644
  %646 = icmp eq i64 %645, 0
  %647 = shl i64 %645, 6
  %648 = add i64 %647, -1
  %649 = select i1 %646, i64 0, i64 %648
  %650 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %638, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 1
  %651 = load i64, i64* %650, align 8
  %652 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %638, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %653 = load i64, i64* %652, align 8
  %654 = add i64 %653, %651
  %655 = icmp eq i64 %649, %654
  %656 = inttoptr i64 %644 to %"class.v8::internal::compiler::Node"***
  %657 = inttoptr i64 %641 to %"class.v8::internal::compiler::Node"***
  br i1 %655, label %658, label %665

658:                                              ; preds = %637
  %659 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %638, i64 0, i32 6, i32 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %659) #10
  %660 = load i64, i64* %652, align 8
  %661 = load i64, i64* %650, align 8
  %662 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %642, align 8
  %663 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %639, align 8
  %664 = add i64 %661, %660
  br label %665

665:                                              ; preds = %658, %637
  %666 = phi i64 [ %664, %658 ], [ %654, %637 ]
  %667 = phi %"class.v8::internal::compiler::Node"*** [ %663, %658 ], [ %657, %637 ]
  %668 = phi %"class.v8::internal::compiler::Node"*** [ %662, %658 ], [ %656, %637 ]
  %669 = icmp eq %"class.v8::internal::compiler::Node"*** %667, %668
  br i1 %669, label %677, label %670

670:                                              ; preds = %665
  %671 = lshr i64 %666, 9
  %672 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %668, i64 %671
  %673 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %672, align 8
  %674 = and i64 %666, 511
  %675 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %673, i64 %674
  %676 = bitcast %"class.v8::internal::compiler::Node"** %675 to i64*
  br label %677

677:                                              ; preds = %665, %670
  %678 = phi i64* [ %676, %670 ], [ null, %665 ]
  %679 = bitcast %"class.v8::internal::compiler::Node"** %604 to i64*
  %680 = load i64, i64* %679, align 8
  store i64 %680, i64* %678, align 8
  %681 = load i64, i64* %652, align 8
  %682 = add i64 %681, 1
  store i64 %682, i64* %652, align 8
  br label %683

683:                                              ; preds = %613, %677
  %684 = phi %"class.v8::internal::compiler::BasicBlock"* [ %482, %677 ], [ %521, %613 ]
  %685 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %604, align 8
  br label %686

686:                                              ; preds = %683, %610, %602
  %687 = phi %"class.v8::internal::compiler::Node"* [ %685, %683 ], [ %2, %610 ], [ %605, %602 ]
  %688 = phi %"class.v8::internal::compiler::BasicBlock"* [ %684, %683 ], [ %521, %610 ], [ %482, %602 ]
  %689 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %498, align 8
  %690 = icmp eq %"class.v8::internal::compiler::Node"* %689, %687
  br i1 %690, label %697, label %691

691:                                              ; preds = %686
  %692 = icmp eq %"class.v8::internal::compiler::Node"* %689, null
  br i1 %692, label %694, label %693

693:                                              ; preds = %691
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %689, %"struct.v8::internal::compiler::Node::Use"* nonnull %483) #10
  br label %694

694:                                              ; preds = %693, %691
  store %"class.v8::internal::compiler::Node"* %687, %"class.v8::internal::compiler::Node"** %498, align 8
  %695 = icmp eq %"class.v8::internal::compiler::Node"* %687, null
  br i1 %695, label %697, label %696

696:                                              ; preds = %694
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %687, %"struct.v8::internal::compiler::Node::Use"* nonnull %483) #10
  br label %697

697:                                              ; preds = %504, %515, %686, %694, %696
  %698 = phi %"class.v8::internal::compiler::BasicBlock"* [ %482, %504 ], [ %482, %515 ], [ %688, %686 ], [ %688, %694 ], [ %688, %696 ]
  %699 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %485, null
  br i1 %699, label %474, label %700

700:                                              ; preds = %697
  %701 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %453, align 8
  br label %480

702:                                              ; preds = %229, %231, %232, %443, %440, %15, %11, %3, %476
  %703 = phi %"class.v8::internal::compiler::BasicBlock"* [ %478, %476 ], [ %1, %3 ], [ %1, %11 ], [ %1, %15 ], [ %1, %440 ], [ %1, %443 ], [ %1, %232 ], [ %1, %231 ], [ %1, %229 ]
  ret %"class.v8::internal::compiler::BasicBlock"* %703
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor14ScheduleRegionEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %5, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = icmp eq i16 %7, 40
  br i1 %8, label %10, label %9, !prof !21

9:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.51, i64 0, i64 0)) #11
  unreachable

10:                                               ; preds = %3
  tail call void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ScheduleNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::Node"* %2)
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %16, label %15, !prof !21

15:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.52, i64 0, i64 0)) #11
  unreachable

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %11) #10
  %20 = zext i1 %19 to i32
  %21 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %4, align 8
  %22 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %21) #10
  %23 = zext i1 %22 to i32
  %24 = add i32 %18, %20
  %25 = add i32 %24, %23
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 251658240
  %29 = icmp eq i32 %28, 251658240
  %30 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %31 = add i64 %30, 32
  br i1 %29, label %32, label %36

32:                                               ; preds = %16
  %33 = inttoptr i64 %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %16, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %16 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = sext i32 %25 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, i64 %39
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 0
  %43 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %43, i64 0, i32 2
  %45 = load i16, i16* %44, align 8
  %46 = icmp eq i16 %45, 39
  tail call void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ScheduleNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::Node"* %41)
  br i1 %46, label %86, label %47

47:                                               ; preds = %36, %75
  %48 = phi %"class.v8::internal::compiler::Operator"** [ %81, %75 ], [ %42, %36 ]
  %49 = phi %"class.v8::internal::compiler::Node"* [ %80, %75 ], [ %41, %36 ]
  %50 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %50, i64 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %55, label %54, !prof !21

54:                                               ; preds = %47
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.52, i64 0, i64 0)) #11
  unreachable

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %50, i64 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %50) #10
  %59 = zext i1 %58 to i32
  %60 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %48, align 8
  %61 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %60) #10
  %62 = zext i1 %61 to i32
  %63 = add i32 %57, %59
  %64 = add i32 %63, %62
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %49, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 251658240
  %68 = icmp eq i32 %67, 251658240
  %69 = ptrtoint %"class.v8::internal::compiler::Node"* %49 to i64
  %70 = add i64 %69, 32
  br i1 %68, label %71, label %75

71:                                               ; preds = %55
  %72 = inttoptr i64 %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 16
  br label %75

75:                                               ; preds = %55, %71
  %76 = phi i64 [ %74, %71 ], [ %70, %55 ]
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"**
  %78 = sext i32 %64 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, i64 %78
  %80 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %80, i64 0, i32 0
  %82 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %82, i64 0, i32 2
  %84 = load i16, i16* %83, align 8
  %85 = icmp eq i16 %84, 39
  tail call void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ScheduleNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::Node"* %80)
  br i1 %85, label %86, label %47

86:                                               ; preds = %75, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler23ScheduleLateNodeVisitor12ScheduleNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 2
  %6 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %5, align 8
  tail call void @_ZN2v88internal8compiler8Schedule8PlanNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %6, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::Node"* %2) #10
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 14, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %12, i64 %8
  %14 = load %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %13, align 8
  %15 = icmp eq %"class.v8::internal::ZoneVector.22"* %14, null
  br i1 %15, label %16, label %44

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %20
  %24 = icmp ult i64 %23, 32
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %16
  %26 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 32) #10
  br label %29

27:                                               ; preds = %16
  %28 = add i64 %20, 32
  store i64 %28, i64* %19, align 8
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi i64 [ %26, %25 ], [ %20, %27 ]
  %31 = inttoptr i64 %30 to i8*
  %32 = inttoptr i64 %30 to %"class.v8::internal::ZoneVector.22"*
  %33 = bitcast %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::ZoneVector.22", %"class.v8::internal::ZoneVector.22"* %32, i64 0, i32 0, i32 0, i32 2, i32 1
  %36 = bitcast %"struct.std::__1::__compressed_pair_elem.27"* %35 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #10
  store i64 %34, i64* %36, align 8
  %37 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %9, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %39, i64 %8
  store %"class.v8::internal::ZoneVector.22"* %32, %"class.v8::internal::ZoneVector.22"** %40, align 8
  %41 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %9, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %42, align 8
  br label %44

44:                                               ; preds = %3, %29
  %45 = phi %"class.v8::internal::ZoneVector.22"** [ %12, %3 ], [ %43, %29 ]
  %46 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %45, i64 %8
  %47 = bitcast %"class.v8::internal::ZoneVector.22"** %46 to %"class.std::__1::vector.23"**
  %48 = load %"class.std::__1::vector.23"*, %"class.std::__1::vector.23"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %48, i64 0, i32 0, i32 1
  %50 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %48, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %51, align 8
  %53 = icmp eq %"class.v8::internal::compiler::Node"** %50, %52
  %54 = ptrtoint %"class.v8::internal::compiler::Node"** %52 to i64
  br i1 %53, label %60, label %55

55:                                               ; preds = %44
  %56 = bitcast %"class.v8::internal::compiler::Node"** %50 to i64*
  store i64 %4, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, i64 1
  %58 = ptrtoint %"class.v8::internal::compiler::Node"** %57 to i64
  %59 = bitcast %"class.v8::internal::compiler::Node"*** %49 to i64*
  store i64 %58, i64* %59, align 8
  br label %285

60:                                               ; preds = %44
  %61 = ptrtoint %"class.v8::internal::compiler::Node"** %50 to i64
  %62 = bitcast %"class.v8::internal::compiler::Node"*** %49 to i64*
  %63 = bitcast %"class.std::__1::vector.23"* %48 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = ashr exact i64 %65, 3
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 268435455
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = bitcast %"class.std::__1::vector.23"* %48 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %60
  %72 = bitcast %"class.v8::internal::compiler::Node"*** %51 to i64*
  %73 = sub i64 %54, %64
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %74, 134217727
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = ashr exact i64 %73, 2
  %78 = icmp ult i64 %77, %67
  %79 = select i1 %78, i64 %67, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %99, label %81

81:                                               ; preds = %76, %71
  %82 = phi i64 [ %79, %76 ], [ 268435455, %71 ]
  %83 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %48, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %84 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %83, align 8
  %85 = shl i64 %82, 3
  %86 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %84, i64 0, i32 2
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %84, i64 0, i32 3
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %89, %87
  %91 = icmp ugt i64 %85, %90
  br i1 %91, label %92, label %94, !prof !2

92:                                               ; preds = %81
  %93 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %84, i64 %85) #10
  br label %96

94:                                               ; preds = %81
  %95 = add i64 %87, %85
  store i64 %95, i64* %86, align 8
  br label %96

96:                                               ; preds = %94, %92
  %97 = phi i64 [ %93, %92 ], [ %87, %94 ]
  %98 = inttoptr i64 %97 to %"class.v8::internal::compiler::Node"**
  br label %99

99:                                               ; preds = %96, %76
  %100 = phi i64 [ %82, %96 ], [ 0, %76 ]
  %101 = phi %"class.v8::internal::compiler::Node"** [ %98, %96 ], [ null, %76 ]
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 %66
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 %100
  %104 = ptrtoint %"class.v8::internal::compiler::Node"** %103 to i64
  %105 = bitcast %"class.v8::internal::compiler::Node"** %102 to i64*
  store i64 %4, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"** %106 to i64
  %108 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %48, i64 0, i32 0, i32 0
  %109 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %108, align 8
  %110 = ptrtoint %"class.v8::internal::compiler::Node"** %109 to i64
  %111 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %49, align 8
  %112 = icmp eq %"class.v8::internal::compiler::Node"** %111, %109
  br i1 %112, label %282, label %113

113:                                              ; preds = %99
  %114 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  %115 = ptrtoint %"class.v8::internal::compiler::Node"** %114 to i64
  %116 = sub i64 %115, %110
  %117 = lshr i64 %116, 3
  %118 = add nuw nsw i64 %117, 1
  %119 = icmp ult i64 %118, 4
  br i1 %119, label %212, label %120

120:                                              ; preds = %113
  %121 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  %122 = ptrtoint %"class.v8::internal::compiler::Node"** %121 to i64
  %123 = sub i64 %122, %110
  %124 = lshr i64 %123, 3
  %125 = xor i64 %124, -1
  %126 = add nsw i64 %66, %125
  %127 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 %126
  %128 = xor i64 %124, -1
  %129 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 %128
  %130 = icmp ult %"class.v8::internal::compiler::Node"** %127, %111
  %131 = icmp ult %"class.v8::internal::compiler::Node"** %129, %102
  %132 = and i1 %130, %131
  br i1 %132, label %212, label %133

133:                                              ; preds = %120
  %134 = and i64 %118, 4611686018427387900
  %135 = sub nsw i64 0, %134
  %136 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, i64 %135
  %137 = sub nsw i64 0, %134
  %138 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 %137
  %139 = add nsw i64 %134, -4
  %140 = lshr exact i64 %139, 2
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 1
  %143 = icmp eq i64 %139, 0
  br i1 %143, label %190, label %144

144:                                              ; preds = %133
  %145 = sub nuw nsw i64 %141, %142
  %146 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, i64 -1
  %147 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  %148 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, i64 -1
  %149 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  br label %150

150:                                              ; preds = %150, %144
  %151 = phi i64 [ 0, %144 ], [ %185, %150 ]
  %152 = phi i64 [ %145, %144 ], [ %186, %150 ]
  %153 = sub i64 0, %151
  %154 = sub i64 0, %151
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 %153
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, i64 %154
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 -1
  %158 = bitcast %"class.v8::internal::compiler::Node"** %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8, !alias.scope !123
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 -2
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %160, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::Node"** %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !123
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::Node"** %164 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %165, align 8, !alias.scope !126, !noalias !123
  %166 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, i64 -2
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %166, i64 -1
  %168 = bitcast %"class.v8::internal::compiler::Node"** %167 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %168, align 8, !alias.scope !126, !noalias !123
  %169 = sub nuw nsw i64 -4, %151
  %170 = sub nuw nsw i64 -4, %151
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 %169
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 %170
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, i64 -1
  %174 = bitcast %"class.v8::internal::compiler::Node"** %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !123
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, i64 -2
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, i64 -1
  %178 = bitcast %"class.v8::internal::compiler::Node"** %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8, !alias.scope !123
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 -1
  %181 = bitcast %"class.v8::internal::compiler::Node"** %180 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %181, align 8, !alias.scope !126, !noalias !123
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 -2
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %182, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %184, align 8, !alias.scope !126, !noalias !123
  %185 = add i64 %151, 8
  %186 = add i64 %152, -2
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %150, !llvm.loop !128

188:                                              ; preds = %150
  %189 = sub nuw nsw i64 -8, %151
  br label %190

190:                                              ; preds = %188, %133
  %191 = phi i64 [ 0, %133 ], [ %189, %188 ]
  %192 = icmp eq i64 %142, 0
  br i1 %192, label %210, label %193

193:                                              ; preds = %190
  %194 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, i64 -1
  %195 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %194, i64 %191
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 %191
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 8, !alias.scope !123
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -2
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %201, i64 -1
  %203 = bitcast %"class.v8::internal::compiler::Node"** %202 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8, !alias.scope !123
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -1
  %206 = bitcast %"class.v8::internal::compiler::Node"** %205 to <2 x i64>*
  store <2 x i64> %200, <2 x i64>* %206, align 8, !alias.scope !126, !noalias !123
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -2
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -1
  %209 = bitcast %"class.v8::internal::compiler::Node"** %208 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %209, align 8, !alias.scope !126, !noalias !123
  br label %210

210:                                              ; preds = %190, %193
  %211 = icmp eq i64 %118, %134
  br i1 %211, label %282, label %212

212:                                              ; preds = %210, %120, %113
  %213 = phi %"class.v8::internal::compiler::Node"** [ %102, %120 ], [ %102, %113 ], [ %136, %210 ]
  %214 = phi %"class.v8::internal::compiler::Node"** [ %111, %120 ], [ %111, %113 ], [ %138, %210 ]
  %215 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -1
  %216 = ptrtoint %"class.v8::internal::compiler::Node"** %215 to i64
  %217 = sub i64 %216, %110
  %218 = lshr i64 %217, 3
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 7
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %233, label %222

222:                                              ; preds = %212, %222
  %223 = phi %"class.v8::internal::compiler::Node"** [ %226, %222 ], [ %213, %212 ]
  %224 = phi %"class.v8::internal::compiler::Node"** [ %227, %222 ], [ %214, %212 ]
  %225 = phi i64 [ %231, %222 ], [ %220, %212 ]
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %223, i64 -1
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, i64 -1
  %228 = bitcast %"class.v8::internal::compiler::Node"** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.v8::internal::compiler::Node"** %226 to i64*
  store i64 %229, i64* %230, align 8
  %231 = add i64 %225, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %222, !llvm.loop !129

233:                                              ; preds = %222, %212
  %234 = phi %"class.v8::internal::compiler::Node"** [ undef, %212 ], [ %226, %222 ]
  %235 = phi %"class.v8::internal::compiler::Node"** [ %213, %212 ], [ %226, %222 ]
  %236 = phi %"class.v8::internal::compiler::Node"** [ %214, %212 ], [ %227, %222 ]
  %237 = icmp ult i64 %217, 56
  br i1 %237, label %282, label %238

238:                                              ; preds = %233, %238
  %239 = phi %"class.v8::internal::compiler::Node"** [ %276, %238 ], [ %235, %233 ]
  %240 = phi %"class.v8::internal::compiler::Node"** [ %277, %238 ], [ %236, %233 ]
  %241 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -1
  %242 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -1
  %243 = bitcast %"class.v8::internal::compiler::Node"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.v8::internal::compiler::Node"** %241 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -2
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -2
  %248 = bitcast %"class.v8::internal::compiler::Node"** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.v8::internal::compiler::Node"** %246 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -3
  %252 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -3
  %253 = bitcast %"class.v8::internal::compiler::Node"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.v8::internal::compiler::Node"** %251 to i64*
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -4
  %257 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -4
  %258 = bitcast %"class.v8::internal::compiler::Node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.v8::internal::compiler::Node"** %256 to i64*
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -5
  %262 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -5
  %263 = bitcast %"class.v8::internal::compiler::Node"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"class.v8::internal::compiler::Node"** %261 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -6
  %267 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -6
  %268 = bitcast %"class.v8::internal::compiler::Node"** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast %"class.v8::internal::compiler::Node"** %266 to i64*
  store i64 %269, i64* %270, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -7
  %272 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -7
  %273 = bitcast %"class.v8::internal::compiler::Node"** %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"class.v8::internal::compiler::Node"** %271 to i64*
  store i64 %274, i64* %275, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -8
  %277 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %240, i64 -8
  %278 = bitcast %"class.v8::internal::compiler::Node"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast %"class.v8::internal::compiler::Node"** %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = icmp eq %"class.v8::internal::compiler::Node"** %277, %109
  br i1 %281, label %282, label %238, !llvm.loop !130

282:                                              ; preds = %233, %238, %210, %99
  %283 = phi %"class.v8::internal::compiler::Node"** [ %102, %99 ], [ %136, %210 ], [ %234, %233 ], [ %276, %238 ]
  %284 = ptrtoint %"class.v8::internal::compiler::Node"** %283 to i64
  store i64 %284, i64* %63, align 8
  store i64 %107, i64* %62, align 8
  store i64 %104, i64* %72, align 8
  br label %285

285:                                              ; preds = %55, %282
  %286 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %9, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler15UpdatePlacementEPNS1_4NodeENS2_9PlacementE(%"class.v8::internal::compiler::Scheduler"* %286, %"class.v8::internal::compiler::Node"* %2, i32 4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor14GetBlockForUseENS1_4EdgeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"*, %"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1, i64 1
  %5 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = lshr i32 %6, 1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %4, i64 %8
  %10 = and i32 %6, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = bitcast %"struct.v8::internal::compiler::Node::Use"* %9 to %"class.v8::internal::compiler::Node"*
  br label %17

14:                                               ; preds = %3
  %15 = bitcast %"struct.v8::internal::compiler::Node::Use"* %9 to %"class.v8::internal::compiler::Node"**
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  br label %17

17:                                               ; preds = %12, %14
  %18 = phi %"class.v8::internal::compiler::Node"* [ %13, %12 ], [ %16, %14 ]
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 0
  %20 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 8
  %23 = zext i16 %22 to i32
  %24 = add nsw i32 %23, -35
  %25 = icmp ult i32 %24, 2
  br i1 %25, label %26, label %130

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  %28 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 16777215
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %28, i64 0, i32 7, i32 0, i32 0, i32 0
  %34 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %33, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %34, i64 %32, i32 2
  %36 = load i32, i32* %35, align 4
  switch i32 %36, label %156 [
    i32 3, label %37
    i32 2, label %45
  ]

37:                                               ; preds = %26
  %38 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.42, i64 0, i64 0), i32 %31, i8* %42) #10
  br label %43

43:                                               ; preds = %37, %40
  %44 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor24GetCommonDominatorOfUsesEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, %"class.v8::internal::compiler::Node"* %18)
  br label %174

45:                                               ; preds = %26
  %46 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 1
  %50 = load i8*, i8** %49, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.43, i64 0, i64 0), i32 %7, i32 %31, i8* %50) #10
  %51 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  br label %52

52:                                               ; preds = %45, %48
  %53 = phi %"class.v8::internal::compiler::Operator"* [ %20, %45 ], [ %51, %48 ]
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %53, i64 0, i32 7
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %58, label %57, !prof !21

57:                                               ; preds = %52
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %53, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %53) #10
  %62 = zext i1 %61 to i32
  %63 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %64 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %63) #10
  %65 = zext i1 %64 to i32
  %66 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %66, i64 0, i32 6
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %60, %62
  %70 = add i32 %69, %65
  %71 = add i32 %70, %68
  %72 = load i32, i32* %29, align 4
  %73 = and i32 %72, 251658240
  %74 = icmp eq i32 %73, 251658240
  %75 = ptrtoint %"class.v8::internal::compiler::Node"* %18 to i64
  %76 = add i64 %75, 32
  br i1 %74, label %77, label %81

77:                                               ; preds = %58
  %78 = inttoptr i64 %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 16
  br label %81

81:                                               ; preds = %58, %77
  %82 = phi i64 [ %80, %77 ], [ %76, %58 ]
  %83 = inttoptr i64 %82 to %"class.v8::internal::compiler::Node"**
  %84 = sext i32 %71 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 %84
  %86 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, align 8
  %87 = load i32, i32* %5, align 8
  %88 = lshr i32 %87, 1
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %86, i64 0, i32 0
  %90 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %90, i64 0, i32 7
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, %88
  br i1 %93, label %95, label %94, !prof !21

94:                                               ; preds = %81
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0)) #11
  unreachable

95:                                               ; preds = %81
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %90, i64 0, i32 5
  %97 = load i32, i32* %96, align 4
  %98 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %90) #10
  %99 = zext i1 %98 to i32
  %100 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %89, align 8
  %101 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %100) #10
  %102 = zext i1 %101 to i32
  %103 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %89, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %103, i64 0, i32 6
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %97, %88
  %107 = add i32 %106, %99
  %108 = add i32 %107, %102
  %109 = add i32 %108, %105
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %86, i64 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, 251658240
  %113 = icmp eq i32 %112, 251658240
  %114 = ptrtoint %"class.v8::internal::compiler::Node"* %86 to i64
  %115 = add i64 %114, 32
  br i1 %113, label %116, label %120

116:                                              ; preds = %95
  %117 = inttoptr i64 %115 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 16
  br label %120

120:                                              ; preds = %95, %116
  %121 = phi i64 [ %119, %116 ], [ %115, %95 ]
  %122 = inttoptr i64 %121 to %"class.v8::internal::compiler::Node"**
  %123 = sext i32 %109 to i64
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 %123
  %125 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %124, align 8
  %126 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %27, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %126, i64 0, i32 8
  %128 = load %"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::CFGBuilder"** %127, align 8
  %129 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %128, %"class.v8::internal::compiler::Node"* %125) #10
  br label %174

130:                                              ; preds = %17
  switch i16 %22, label %156 [
    i16 10, label %131
    i16 1, label %131
  ]

131:                                              ; preds = %130, %130
  %132 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  %133 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 16777215
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %133, i64 0, i32 7, i32 0, i32 0, i32 0
  %139 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %138, align 8
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %139, i64 %137, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 2
  br i1 %142, label %143, label %156

143:                                              ; preds = %131
  %144 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 1
  %148 = load i8*, i8** %147, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.44, i64 0, i64 0), i32 %7, i32 %136, i8* %148) #10
  %149 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %132, align 8
  br label %150

150:                                              ; preds = %143, %146
  %151 = phi %"class.v8::internal::compiler::Scheduler"* [ %133, %143 ], [ %149, %146 ]
  %152 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %151, i64 0, i32 8
  %154 = load %"class.v8::internal::compiler::CFGBuilder"*, %"class.v8::internal::compiler::CFGBuilder"** %153, align 8
  %155 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10CFGBuilder20FindPredecessorBlockEPNS1_4NodeE(%"class.v8::internal::compiler::CFGBuilder"* %154, %"class.v8::internal::compiler::Node"* %152) #10
  br label %174

156:                                              ; preds = %130, %26, %131
  %157 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 2
  %158 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %157, align 8
  %159 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %158, %"class.v8::internal::compiler::Node"* %18) #10
  %160 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %156
  %162 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %174, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %166, 16777215
  %168 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %168, i64 0, i32 1
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %159, i64 0, i32 14, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = trunc i64 %172 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.45, i64 0, i64 0), i32 %167, i8* %170, i32 %173) #10
  br label %174

174:                                              ; preds = %156, %161, %164, %150, %120, %43
  %175 = phi %"class.v8::internal::compiler::BasicBlock"* [ %44, %43 ], [ %129, %120 ], [ %155, %150 ], [ null, %156 ], [ %159, %161 ], [ %159, %164 ]
  ret %"class.v8::internal::compiler::BasicBlock"* %175
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE6resizeEmb(%"class.std::__1::vector.85"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.85", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !131
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.85"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 2, i32 1, i32 0
  %28 = bitcast %"class.v8::internal::ZoneAllocator.88"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %4, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %4, i64 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.87"* %31 to i64*
  %33 = bitcast %"class.std::__1::vector.85"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false)
  store i64 %29, i64* %32, align 8
  %34 = icmp ugt i64 %1, 17179869120
  br i1 %34, label %35, label %37

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::vector.85"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #11
  unreachable

37:                                               ; preds = %25
  %38 = icmp ult i64 %11, 8589934560
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = shl i64 %10, 7
  %41 = add nuw nsw i64 %1, 63
  %42 = and i64 %41, -64
  %43 = icmp ult i64 %40, %42
  %44 = select i1 %43, i64 %42, i64 %40
  br label %45

45:                                               ; preds = %39, %37
  %46 = phi i64 [ %44, %39 ], [ 17179869120, %37 ]
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.85"* nonnull %4, i64 %46)
  %47 = load i64, i64* %5, align 8
  %48 = add i64 %47, %12
  %49 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %4, i64 0, i32 1
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = bitcast %"class.std::__1::vector.85"* %4 to i64*
  %53 = load i64, i64* %52, align 16, !noalias !136
  %54 = icmp sgt i64 %47, 0
  br i1 %54, label %55, label %76

55:                                               ; preds = %45
  %56 = inttoptr i64 %53 to i8*
  %57 = lshr i64 %47, 6
  %58 = bitcast i64* %51 to i8*
  %59 = shl nuw nsw i64 %57, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 %59, i1 false) #10, !noalias !141
  %60 = and i64 %47, 63
  %61 = inttoptr i64 %53 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %57
  %63 = ptrtoint i64* %62 to i64
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds i64, i64* %51, i64 %57
  %67 = sub nuw nsw i64 64, %60
  %68 = lshr i64 -1, %67
  %69 = load i64, i64* %66, align 8, !noalias !144
  %70 = and i64 %69, %68
  %71 = xor i64 %68, -1
  %72 = load i64, i64* %62, align 8, !noalias !141
  %73 = and i64 %72, %71
  %74 = or i64 %73, %70
  store i64 %74, i64* %62, align 8, !noalias !141
  %75 = trunc i64 %60 to i32
  br label %76

76:                                               ; preds = %55, %45, %65
  %77 = phi i32 [ %75, %65 ], [ 0, %55 ], [ 0, %45 ]
  %78 = phi i64 [ %63, %65 ], [ %63, %55 ], [ %53, %45 ]
  %79 = bitcast %"class.std::__1::vector.85"* %4 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 16
  %81 = bitcast %"class.std::__1::vector.85"* %0 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = bitcast %"class.std::__1::vector.85"* %0 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8
  %84 = bitcast %"class.std::__1::vector.85"* %4 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %84, align 16
  %85 = load i64, i64* %30, align 16
  store i64 %85, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  br label %86

86:                                               ; preds = %76, %17
  %87 = phi i64 [ %78, %76 ], [ %24, %17 ]
  %88 = phi i32 [ %77, %76 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #10
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #10
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler23ScheduleLateNodeVisitor9CloneNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ScheduleLateNodeVisitor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.v8::internal::compiler::Scheduler::SchedulerData", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 251658240
  %7 = icmp eq i32 %6, 251658240
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = lshr i32 %5, 24
  %10 = and i32 %9, 15
  br label %18

11:                                               ; preds = %2
  %12 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %13 = add i64 %12, 32
  %14 = inttoptr i64 %13 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %15 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %8, %11
  %19 = phi i32 [ %10, %8 ], [ %17, %11 ]
  %20 = getelementptr inbounds %"class.v8::internal::compiler::ScheduleLateNodeVisitor", %"class.v8::internal::compiler::ScheduleLateNodeVisitor"* %0, i64 0, i32 1
  %21 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %20, align 8
  %22 = and i32 %5, 16777215
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %21, i64 0, i32 7, i32 0, i32 0, i32 0
  %25 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %25, i64 %23, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %29, label %47

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %31 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %31, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %31) #10
  %35 = zext i1 %34 to i32
  %36 = add nsw i32 %33, %35
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %30, align 8
  %38 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #10
  %39 = zext i1 %38 to i32
  %40 = add nsw i32 %36, %39
  %41 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %30, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %41, i64 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %40, %43
  %45 = and i32 %44, -256
  %46 = and i32 %44, 255
  br label %47

47:                                               ; preds = %18, %29
  %48 = phi i32 [ %46, %29 ], [ 0, %18 ]
  %49 = phi i8 [ 1, %29 ], [ 0, %18 ]
  %50 = phi i32 [ %45, %29 ], [ 0, %18 ]
  %51 = or i32 %50, %48
  %52 = icmp sgt i32 %19, 0
  br i1 %52, label %53, label %80

53:                                               ; preds = %47
  %54 = icmp eq i8 %49, 0
  %55 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %56 = add i64 %55, 32
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::Node"**
  %58 = inttoptr i64 %56 to i64*
  br i1 %54, label %62, label %59

59:                                               ; preds = %53
  %60 = zext i32 %51 to i64
  %61 = zext i32 %19 to i64
  br label %87

62:                                               ; preds = %53
  %63 = zext i32 %19 to i64
  br label %64

64:                                               ; preds = %73, %62
  %65 = phi i64 [ 0, %62 ], [ %78, %73 ]
  %66 = load i32, i32* %4, align 4
  %67 = and i32 %66, 251658240
  %68 = icmp eq i32 %67, 251658240
  br i1 %68, label %69, label %73

69:                                               ; preds = %64
  %70 = load i64, i64* %58, align 8
  %71 = add i64 %70, 16
  %72 = inttoptr i64 %71 to %"class.v8::internal::compiler::Node"**
  br label %73

73:                                               ; preds = %64, %69
  %74 = phi %"class.v8::internal::compiler::Node"** [ %72, %69 ], [ %57, %64 ]
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %65
  %76 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, align 8
  %77 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %20, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler28IncrementUnscheduledUseCountEPNS1_4NodeES4_(%"class.v8::internal::compiler::Scheduler"* %77, %"class.v8::internal::compiler::Node"* %76, %"class.v8::internal::compiler::Node"* %1)
  %78 = add nuw nsw i64 %65, 1
  %79 = icmp eq i64 %78, %63
  br i1 %79, label %80, label %64

80:                                               ; preds = %103, %73, %47
  %81 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %20, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %81, i64 0, i32 1
  %83 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %82, align 8
  %84 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph9CloneNodeEPKNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %83, %"class.v8::internal::compiler::Node"* %1) #10
  %85 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !5
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %116, label %106

87:                                               ; preds = %103, %59
  %88 = phi i64 [ 0, %59 ], [ %104, %103 ]
  %89 = icmp eq i64 %88, %60
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = load i32, i32* %4, align 4
  %92 = and i32 %91, 251658240
  %93 = icmp eq i32 %92, 251658240
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = load i64, i64* %58, align 8
  %96 = add i64 %95, 16
  %97 = inttoptr i64 %96 to %"class.v8::internal::compiler::Node"**
  br label %98

98:                                               ; preds = %90, %94
  %99 = phi %"class.v8::internal::compiler::Node"** [ %97, %94 ], [ %57, %90 ]
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, i64 %88
  %101 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, align 8
  %102 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %20, align 8
  tail call void @_ZN2v88internal8compiler9Scheduler28IncrementUnscheduledUseCountEPNS1_4NodeES4_(%"class.v8::internal::compiler::Scheduler"* %102, %"class.v8::internal::compiler::Node"* %101, %"class.v8::internal::compiler::Node"* %1)
  br label %103

103:                                              ; preds = %87, %98
  %104 = add nuw nsw i64 %88, 1
  %105 = icmp eq i64 %104, %61
  br i1 %105, label %80, label %87

106:                                              ; preds = %80
  %107 = load i32, i32* %4, align 4
  %108 = and i32 %107, 16777215
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %110 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %110, i64 0, i32 1
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %84, i64 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i64 0, i64 0), i32 %108, i8* %112, i32 %115) #10
  br label %116

116:                                              ; preds = %80, %106
  %117 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %20, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %117, i64 0, i32 7, i32 0
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %84, i64 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 16777215
  %122 = add nuw nsw i32 %121, 1
  %123 = zext i32 %122 to i64
  %124 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #10
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %117, i64 0, i32 2
  %126 = load %"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Schedule"** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %126, i64 0, i32 4
  %128 = bitcast %"class.v8::internal::compiler::BasicBlock"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %3 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %3, i64 0, i32 1
  %132 = bitcast i32* %131 to i64*
  store i64 0, i64* %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %117, i64 0, i32 7, i32 0, i32 0, i32 1
  %134 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.std::__1::vector.42"* %118 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %135, %137
  %139 = ashr exact i64 %138, 4
  %140 = icmp ult i64 %139, %123
  %141 = inttoptr i64 %137 to %"struct.v8::internal::compiler::Scheduler::SchedulerData"*
  br i1 %140, label %142, label %144

142:                                              ; preds = %116
  %143 = sub nsw i64 %123, %139
  call void @_ZNSt3__16vectorIN2v88internal8compiler9Scheduler13SchedulerDataENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.42"* %118, i64 %143, %"struct.v8::internal::compiler::Scheduler::SchedulerData"* nonnull dereferenceable(16) %3) #10
  br label %148

144:                                              ; preds = %116
  %145 = icmp ugt i64 %139, %123
  br i1 %145, label %146, label %148

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %141, i64 %123
  store %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %147, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %133, align 8
  br label %148

148:                                              ; preds = %142, %144, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #10
  %149 = load %"class.v8::internal::compiler::Scheduler"*, %"class.v8::internal::compiler::Scheduler"** %20, align 8
  %150 = load i32, i32* %4, align 4
  %151 = and i32 %150, 16777215
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Scheduler", %"class.v8::internal::compiler::Scheduler"* %149, i64 0, i32 7, i32 0, i32 0, i32 0
  %154 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %153, align 8
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %154, i64 %152
  %156 = load i32, i32* %119, align 4
  %157 = and i32 %156, 16777215
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %154, i64 %158
  %160 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %159 to i8*
  %161 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 16, i1 false)
  ret %"class.v8::internal::compiler::Node"* %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE7reserveEm(%"class.std::__1::vector.85"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.85", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %63

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.85"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 2, i32 1, i32 0
  %13 = bitcast %"class.v8::internal::ZoneAllocator.88"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %3, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %3, i64 0, i32 2, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.87"* %16 to i64*
  %18 = bitcast %"class.std::__1::vector.85"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 24, i1 false)
  store i64 %14, i64* %17, align 8
  %19 = icmp ugt i64 %1, 17179869120
  %20 = inttoptr i64 %14 to %"class.v8::internal::Zone"*
  br i1 %19, label %21, label %23

21:                                               ; preds = %10
  %22 = bitcast %"class.std::__1::vector.85"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #11
  unreachable

23:                                               ; preds = %10
  %24 = add nsw i64 %1, -1
  %25 = lshr i64 %24, 6
  %26 = add nuw nsw i64 %25, 1
  %27 = shl nuw nsw i64 %26, 3
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ugt i64 %27, %32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %23
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %20, i64 %27) #10
  br label %38

36:                                               ; preds = %23
  %37 = add i64 %29, %27
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %3, i64 0, i32 0
  store i64* %40, i64** %41, align 16
  %42 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %3, i64 0, i32 1
  store i64 0, i64* %42, align 8
  store i64 %26, i64* %15, align 16
  %43 = bitcast %"class.std::__1::vector.85"* %0 to i64*
  %44 = load i64, i64* %43, align 8, !noalias !147
  %45 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %44, i64* %45, align 8, !alias.scope !147
  %46 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %46, align 8, !alias.scope !147
  %47 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !152
  %49 = inttoptr i64 %44 to i64*
  %50 = lshr i64 %48, 6
  %51 = getelementptr inbounds i64, i64* %49, i64 %50
  %52 = trunc i64 %48 to i32
  %53 = and i32 %52, 63
  %54 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %51, i64** %54, align 8, !alias.scope !155
  %55 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %53, i32* %55, align 8, !alias.scope !155
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.85"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %56 = load i64, i64* %43, align 8
  %57 = bitcast %"class.std::__1::vector.85"* %3 to i64*
  %58 = bitcast %"class.std::__1::vector.85"* %3 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16
  store i64 %56, i64* %57, align 16
  %60 = load i64, i64* %47, align 8
  %61 = bitcast %"class.std::__1::vector.85"* %0 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %61, align 8
  store i64 %60, i64* %42, align 8
  %62 = load i64, i64* %15, align 16
  store i64 %62, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  br label %63

63:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS5_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESA_SA_(%"class.std::__1::vector.85"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !158
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #10
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !161
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !161
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !161
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #10, !noalias !161
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !161
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !161
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !161
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !164
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !164
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !167
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !167
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !167
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !167
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !167
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !167
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #10
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque.91"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %3 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %4 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %5 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.137", align 16
  %7 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %17, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %21, %"class.v8::internal::compiler::BasicBlock"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.93"* %15, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.91"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %45 to %"class.v8::internal::compiler::BasicBlock"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.101", %"class.v8::internal::RecyclingZoneAllocator.101"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #10
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::BasicBlock"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::BasicBlock"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::BasicBlock"** %73, %"class.v8::internal::compiler::BasicBlock"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.93"* %23, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %77 to %"class.v8::internal::compiler::BasicBlock"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.101", %"class.v8::internal::RecyclingZoneAllocator.101"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #10
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::BasicBlock"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::BasicBlock"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::BasicBlock"** %105, %"class.v8::internal::compiler::BasicBlock"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.93"* %23, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #10
  %106 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #10
  %107 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %107, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %111, %"class.v8::internal::compiler::BasicBlock"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.93"* %23, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #10
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.137"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #10
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"*** null, %"class.v8::internal::compiler::BasicBlock"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator.97"* %117, %"class.v8::internal::RecyclingZoneAllocator.97"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %121 to %"class.v8::internal::compiler::BasicBlock"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.97", %"class.v8::internal::RecyclingZoneAllocator.97"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #10
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::BasicBlock"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"*** %150, %"class.v8::internal::compiler::BasicBlock"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::BasicBlock"*** %152, %"class.v8::internal::compiler::BasicBlock"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::BasicBlock"*** %152, %"class.v8::internal::compiler::BasicBlock"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %150, i64 %116
  store %"class.v8::internal::compiler::BasicBlock"*** %155, %"class.v8::internal::compiler::BasicBlock"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.91", %"class.std::__1::deque.91"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %157 to %"class.v8::internal::compiler::BasicBlock"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.101", %"class.v8::internal::RecyclingZoneAllocator.101"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #10
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::BasicBlock"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::BasicBlock"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #10
  store %"class.v8::internal::compiler::BasicBlock"** %185, %"class.v8::internal::compiler::BasicBlock"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.137"* nonnull %6, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #10
  %187 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.137"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.137"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.91"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::BasicBlock"***
  %210 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %209, i64 %217
  store %"class.v8::internal::compiler::BasicBlock"*** %218, %"class.v8::internal::compiler::BasicBlock"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator.97"*, %"class.v8::internal::RecyclingZoneAllocator.97"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.97", %"class.v8::internal::RecyclingZoneAllocator.97"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %227 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %211, %"class.v8::internal::compiler::BasicBlock"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #10
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.137"* nonnull %6, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer.93"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::BasicBlock"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %24, i64 %26
  store %"class.v8::internal::compiler::BasicBlock"*** %34, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, i64 %23
  store %"class.v8::internal::compiler::BasicBlock"*** %35, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.93"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46 to %"class.v8::internal::compiler::BasicBlock"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #10
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::BasicBlock"***
  %75 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !168

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::BasicBlock"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %172, %"class.v8::internal::compiler::BasicBlock"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %199, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %200, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.93"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::BasicBlock"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %24, i64 %26
  store %"class.v8::internal::compiler::BasicBlock"*** %34, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, i64 %23
  store %"class.v8::internal::compiler::BasicBlock"*** %35, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.93"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46 to %"class.v8::internal::compiler::BasicBlock"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #10
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::BasicBlock"***
  %75 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !169

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::BasicBlock"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %172, %"class.v8::internal::compiler::BasicBlock"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %199, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %200, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer.93"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::BasicBlock"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::BasicBlock"*** %36, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %35, i64 %22
  store %"class.v8::internal::compiler::BasicBlock"*** %37, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.93"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %47 to %"class.v8::internal::compiler::BasicBlock"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #10
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::BasicBlock"***
  %76 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !170

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::BasicBlock"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %173, %"class.v8::internal::compiler::BasicBlock"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %200, i64 -1
  store %"class.v8::internal::compiler::BasicBlock"*** %201, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.137"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::BasicBlock"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %23, i64 %26
  store %"class.v8::internal::compiler::BasicBlock"*** %34, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, i64 %22
  store %"class.v8::internal::compiler::BasicBlock"*** %35, %"class.v8::internal::compiler::BasicBlock"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.137"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator.97"*, %"class.v8::internal::RecyclingZoneAllocator.97"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.97", %"class.v8::internal::RecyclingZoneAllocator.97"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %48 to %"class.v8::internal::compiler::BasicBlock"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.97", %"class.v8::internal::RecyclingZoneAllocator.97"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #10
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::BasicBlock"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !171

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::BasicBlock"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %170, %"class.v8::internal::compiler::BasicBlock"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %197, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %198, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.137"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::BasicBlock"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::BasicBlock"*** %36, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %35, i64 %22
  store %"class.v8::internal::compiler::BasicBlock"*** %37, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.137"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.137", %"struct.std::__1::__split_buffer.137"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator.97"*, %"class.v8::internal::RecyclingZoneAllocator.97"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.97", %"class.v8::internal::RecyclingZoneAllocator.97"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %49 to %"class.v8::internal::compiler::BasicBlock"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.97", %"class.v8::internal::RecyclingZoneAllocator.97"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #10
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::BasicBlock"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !172

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::BasicBlock"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %171, %"class.v8::internal::compiler::BasicBlock"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %198, i64 -1
  store %"class.v8::internal::compiler::BasicBlock"*** %199, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph9CloneNodeEPKNS1_4NodeE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler10BasicBlockEPNS4_4NodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler10BasicBlockEPNS4_4NodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %7) #10
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

declare void @_ZN2v88internal8compiler8Schedule8PlanNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #4

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler18ControlEquivalence3RunEPNS1_4NodeE(%"class.v8::internal::compiler::ControlEquivalence"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal8compiler18ControlEquivalence8NodeDataENS2_13ZoneAllocatorIS6_EEE8__appendEm(%"class.std::__1::vector.70"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %13, i64 %18
  %20 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.70"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.70"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 134217727
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 268435455, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = shl i64 %48, 3
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ugt i64 %51, %56
  br i1 %57, label %58, label %60, !prof !2

58:                                               ; preds = %47
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 %51) #10
  br label %62

60:                                               ; preds = %47
  %61 = add i64 %53, %51
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**
  br label %65

65:                                               ; preds = %62, %42
  %66 = phi i64 [ %48, %62 ], [ 0, %42 ]
  %67 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %64, %62 ], [ null, %42 ]
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %67, i64 %33
  %69 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68 to i8*
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %67, i64 %66
  %71 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 %1
  %72 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 %72, i1 false) #10
  %73 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %70 to i64
  %74 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 0
  %76 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %75, align 8
  %77 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %76 to i64
  %78 = load %"struct.v8::internal::compiler::ControlEquivalence::NodeData"**, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*** %6, align 8
  %79 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, %76
  br i1 %79, label %249, label %80

80:                                               ; preds = %65
  %81 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  %82 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 4
  br i1 %86, label %179, label %87

87:                                               ; preds = %80
  %88 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  %89 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %88 to i64
  %90 = sub i64 %89, %77
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add nsw i64 %33, %92
  %94 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %67, i64 %93
  %95 = xor i64 %91, -1
  %96 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 %95
  %97 = icmp ult %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %94, %78
  %98 = icmp ult %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %96, %68
  %99 = and i1 %97, %98
  br i1 %99, label %179, label %100

100:                                              ; preds = %87
  %101 = and i64 %85, 4611686018427387900
  %102 = sub nsw i64 0, %101
  %103 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 %102
  %104 = sub nsw i64 0, %101
  %105 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 %104
  %106 = add nsw i64 %101, -4
  %107 = lshr exact i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %106, 0
  br i1 %110, label %157, label %111

111:                                              ; preds = %100
  %112 = sub nuw nsw i64 %108, %109
  %113 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 -1
  %114 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  %115 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 -1
  %116 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  br label %117

117:                                              ; preds = %117, %111
  %118 = phi i64 [ 0, %111 ], [ %152, %117 ]
  %119 = phi i64 [ %112, %111 ], [ %153, %117 ]
  %120 = sub i64 0, %118
  %121 = sub i64 0, %118
  %122 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %113, i64 %120
  %123 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %114, i64 %121
  %124 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %123, i64 -1
  %125 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !173
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %123, i64 -2
  %128 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %127, i64 -1
  %129 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !173
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %122, i64 -1
  %132 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %131 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %132, align 8, !alias.scope !176, !noalias !173
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %122, i64 -2
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %133, i64 -1
  %135 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %134 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %135, align 8, !alias.scope !176, !noalias !173
  %136 = sub nuw nsw i64 -4, %118
  %137 = sub nuw nsw i64 -4, %118
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %115, i64 %136
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %116, i64 %137
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %139, i64 -1
  %141 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !173
  %143 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %139, i64 -2
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %143, i64 -1
  %145 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !173
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %138, i64 -1
  %148 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %147 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %148, align 8, !alias.scope !176, !noalias !173
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %138, i64 -2
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %149, i64 -1
  %151 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %150 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %151, align 8, !alias.scope !176, !noalias !173
  %152 = add i64 %118, 8
  %153 = add i64 %119, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %117, !llvm.loop !178

155:                                              ; preds = %117
  %156 = sub nuw nsw i64 -8, %118
  br label %157

157:                                              ; preds = %155, %100
  %158 = phi i64 [ 0, %100 ], [ %156, %155 ]
  %159 = icmp eq i64 %109, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %157
  %161 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %68, i64 -1
  %162 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %78, i64 -1
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %161, i64 %158
  %164 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %162, i64 %158
  %165 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %164, i64 -1
  %166 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !173
  %168 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %164, i64 -2
  %169 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %168, i64 -1
  %170 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !173
  %172 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %163, i64 -1
  %173 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !176, !noalias !173
  %174 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %163, i64 -2
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %174, i64 -1
  %176 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !176, !noalias !173
  br label %177

177:                                              ; preds = %157, %160
  %178 = icmp eq i64 %85, %101
  br i1 %178, label %249, label %179

179:                                              ; preds = %177, %87, %80
  %180 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %68, %87 ], [ %68, %80 ], [ %103, %177 ]
  %181 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %78, %87 ], [ %78, %80 ], [ %105, %177 ]
  %182 = getelementptr %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %181, i64 -1
  %183 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %182 to i64
  %184 = sub i64 %183, %77
  %185 = lshr i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %179, %189
  %190 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %193, %189 ], [ %180, %179 ]
  %191 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %194, %189 ], [ %181, %179 ]
  %192 = phi i64 [ %198, %189 ], [ %187, %179 ]
  %193 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %190, i64 -1
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %191, i64 -1
  %195 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = add i64 %192, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %189, !llvm.loop !179

200:                                              ; preds = %189, %179
  %201 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ undef, %179 ], [ %193, %189 ]
  %202 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %180, %179 ], [ %193, %189 ]
  %203 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %181, %179 ], [ %194, %189 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %249, label %205

205:                                              ; preds = %200, %205
  %206 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %243, %205 ], [ %202, %200 ]
  %207 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %244, %205 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -1
  %209 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -1
  %210 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -2
  %214 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -2
  %215 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -3
  %219 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -3
  %220 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -4
  %224 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -4
  %225 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -5
  %229 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -5
  %230 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -6
  %234 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -6
  %235 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -7
  %239 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -7
  %240 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %206, i64 -8
  %244 = getelementptr inbounds %"struct.v8::internal::compiler::ControlEquivalence::NodeData"*, %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %207, i64 -8
  %245 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = icmp eq %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %244, %76
  br i1 %248, label %249, label %205, !llvm.loop !180

249:                                              ; preds = %200, %205, %177, %65
  %250 = phi %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** [ %68, %65 ], [ %103, %177 ], [ %201, %200 ], [ %243, %205 ]
  %251 = ptrtoint %"struct.v8::internal::compiler::ControlEquivalence::NodeData"** %250 to i64
  store i64 %251, i64* %30, align 8
  store i64 %74, i64* %7, align 8
  store i64 %73, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler9Scheduler13SchedulerDataENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector.42"*, i64, %"struct.v8::internal::compiler::Scheduler::SchedulerData"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 4
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %50, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"struct.v8::internal::compiler::Scheduler::SchedulerData"*
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %2 to i8*
  %19 = shl nsw i64 %1, 4
  %20 = add i64 %19, -16
  %21 = lshr exact i64 %20, 4
  %22 = add nuw nsw i64 %21, 1
  %23 = and i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %29, %25 ], [ %14, %17 ]
  %27 = phi i64 [ %30, %25 ], [ %23, %17 ]
  %28 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %18, i64 16, i1 false) #10
  %29 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %26, i64 1
  %30 = add i64 %27, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %25, !llvm.loop !181

32:                                               ; preds = %25, %17
  %33 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %14, %17 ], [ %29, %25 ]
  %34 = icmp ult i64 %20, 48
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %15 to i64
  br label %48

37:                                               ; preds = %32, %37
  %38 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %46, %37 ], [ %33, %32 ]
  %39 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %18, i64 16, i1 false) #10
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %38, i64 1
  %41 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %18, i64 16, i1 false) #10
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %38, i64 2
  %43 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %18, i64 16, i1 false) #10
  %44 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %38, i64 3
  %45 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %18, i64 16, i1 false) #10
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %38, i64 4
  %47 = icmp eq %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %46, %15
  br i1 %47, label %35, label %37

48:                                               ; preds = %13, %35
  %49 = phi i64 [ %36, %35 ], [ %9, %13 ]
  store i64 %49, i64* %8, align 8
  ret void

50:                                               ; preds = %3
  %51 = bitcast %"class.std::__1::vector.42"* %0 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %9, %52
  %54 = ashr exact i64 %53, 4
  %55 = add i64 %54, %1
  %56 = icmp ugt i64 %55, 134217727
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::vector.42"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #11
  unreachable

59:                                               ; preds = %50
  %60 = sub i64 %6, %52
  %61 = ashr exact i64 %60, 4
  %62 = icmp ult i64 %61, 67108863
  br i1 %62, label %63, label %68

63:                                               ; preds = %59
  %64 = ashr exact i64 %60, 3
  %65 = icmp ult i64 %64, %55
  %66 = select i1 %65, i64 %55, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %86, label %68

68:                                               ; preds = %59, %63
  %69 = phi i64 [ %66, %63 ], [ 134217727, %59 ]
  %70 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %71 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %70, align 8
  %72 = shl i64 %69, 4
  %73 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %71, i64 0, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %71, i64 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %76, %74
  %78 = icmp ugt i64 %72, %77
  br i1 %78, label %79, label %81, !prof !2

79:                                               ; preds = %68
  %80 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %71, i64 %72) #10
  br label %83

81:                                               ; preds = %68
  %82 = add i64 %74, %72
  store i64 %82, i64* %73, align 8
  br label %83

83:                                               ; preds = %81, %79
  %84 = phi i64 [ %80, %79 ], [ %74, %81 ]
  %85 = inttoptr i64 %84 to %"struct.v8::internal::compiler::Scheduler::SchedulerData"*
  br label %86

86:                                               ; preds = %83, %63
  %87 = phi i64 [ %69, %83 ], [ 0, %63 ]
  %88 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %85, %83 ], [ null, %63 ]
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %88, i64 %54
  %90 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %89 to i64
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %88, i64 %87
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %89, i64 %1
  %93 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %2 to i8*
  %94 = shl nsw i64 %1, 4
  %95 = add i64 %94, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %86, %100
  %101 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %105, %100 ], [ %89, %86 ]
  %102 = phi i64 [ %106, %100 ], [ %90, %86 ]
  %103 = phi i64 [ %107, %100 ], [ %98, %86 ]
  %104 = inttoptr i64 %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %93, i64 16, i1 false) #10
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %101, i64 1
  %106 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %105 to i64
  %107 = add i64 %103, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %100, !llvm.loop !182

109:                                              ; preds = %100
  %110 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %105 to i64
  br label %111

111:                                              ; preds = %86, %109
  %112 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %89, %86 ], [ %105, %109 ]
  %113 = phi i64 [ %90, %86 ], [ %110, %109 ]
  %114 = icmp ult i64 %95, 48
  br i1 %114, label %128, label %115

115:                                              ; preds = %111, %115
  %116 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %125, %115 ], [ %112, %111 ]
  %117 = phi i64 [ %126, %115 ], [ %113, %111 ]
  %118 = inttoptr i64 %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %93, i64 16, i1 false) #10
  %119 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %116, i64 1
  %120 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %93, i64 16, i1 false) #10
  %121 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %116, i64 2
  %122 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %93, i64 16, i1 false) #10
  %123 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %116, i64 3
  %124 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %93, i64 16, i1 false) #10
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %116, i64 4
  %126 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %125 to i64
  %127 = icmp eq %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %92, %125
  br i1 %127, label %128, label %115

128:                                              ; preds = %115, %111
  %129 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %91 to i64
  %130 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %92 to i64
  %131 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 0
  %132 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %131, align 8
  %133 = load %"struct.v8::internal::compiler::Scheduler::SchedulerData"*, %"struct.v8::internal::compiler::Scheduler::SchedulerData"** %7, align 8
  %134 = icmp eq %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %133, %132
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %132 to i64
  %137 = getelementptr %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %133, i64 -1, i32 0
  %138 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %137 to i64
  %139 = sub i64 %138, %136
  %140 = lshr i64 %139, 4
  %141 = add nuw nsw i64 %140, 1
  %142 = and i64 %141, 3
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %154, label %144

144:                                              ; preds = %135, %144
  %145 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %148, %144 ], [ %89, %135 ]
  %146 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %149, %144 ], [ %133, %135 ]
  %147 = phi i64 [ %152, %144 ], [ %142, %135 ]
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %145, i64 -1
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %146, i64 -1
  %150 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %148 to i8*
  %151 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 16, i1 false) #10
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %144, !llvm.loop !183

154:                                              ; preds = %144, %135
  %155 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ undef, %135 ], [ %148, %144 ]
  %156 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %89, %135 ], [ %148, %144 ]
  %157 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %133, %135 ], [ %149, %144 ]
  %158 = icmp ult i64 %139, 48
  br i1 %158, label %179, label %159

159:                                              ; preds = %154, %159
  %160 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %174, %159 ], [ %156, %154 ]
  %161 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %175, %159 ], [ %157, %154 ]
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %160, i64 -1
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %161, i64 -1
  %164 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %162 to i8*
  %165 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 16, i1 false) #10
  %166 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %160, i64 -2
  %167 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %161, i64 -2
  %168 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %166 to i8*
  %169 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #10
  %170 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %160, i64 -3
  %171 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %161, i64 -3
  %172 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %170 to i8*
  %173 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 16, i1 false) #10
  %174 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %160, i64 -4
  %175 = getelementptr inbounds %"struct.v8::internal::compiler::Scheduler::SchedulerData", %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %161, i64 -4
  %176 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %174 to i8*
  %177 = bitcast %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %175 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 16, i1 false) #10
  %178 = icmp eq %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %175, %132
  br i1 %178, label %179, label %159

179:                                              ; preds = %159, %154
  %180 = phi %"struct.v8::internal::compiler::Scheduler::SchedulerData"* [ %155, %154 ], [ %174, %159 ]
  %181 = ptrtoint %"struct.v8::internal::compiler::Scheduler::SchedulerData"* %180 to i64
  br label %182

182:                                              ; preds = %128, %179
  %183 = phi i64 [ %181, %179 ], [ %90, %128 ]
  store i64 %183, i64* %51, align 8
  store i64 %130, i64* %8, align 8
  store i64 %129, i64* %5, align 8
  ret void
}

declare void @_ZN2v88internal8compiler8ScheduleC1EPNS0_4ZoneEm(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::Zone"*, i64) unnamed_addr #4

declare void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"*, %"class.v8::internal::compiler::Graph"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal10ZoneVectorIPNS2_8compiler4NodeEEENS2_13ZoneAllocatorIS8_EEE8__appendEm(%"class.std::__1::vector.20"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::ZoneVector.22"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneVector.22"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.v8::internal::ZoneVector.22"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %13, i64 %18
  %20 = bitcast %"class.v8::internal::ZoneVector.22"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint %"class.v8::internal::ZoneVector.22"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 134217727
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 268435455, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = shl i64 %48, 3
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ugt i64 %51, %56
  br i1 %57, label %58, label %60, !prof !2

58:                                               ; preds = %47
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 %51) #10
  br label %62

60:                                               ; preds = %47
  %61 = add i64 %53, %51
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"class.v8::internal::ZoneVector.22"**
  br label %65

65:                                               ; preds = %62, %42
  %66 = phi i64 [ %48, %62 ], [ 0, %42 ]
  %67 = phi %"class.v8::internal::ZoneVector.22"** [ %64, %62 ], [ null, %42 ]
  %68 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %67, i64 %33
  %69 = bitcast %"class.v8::internal::ZoneVector.22"** %68 to i8*
  %70 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %67, i64 %66
  %71 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %68, i64 %1
  %72 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 %72, i1 false) #10
  %73 = ptrtoint %"class.v8::internal::ZoneVector.22"** %70 to i64
  %74 = ptrtoint %"class.v8::internal::ZoneVector.22"** %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %76 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %75, align 8
  %77 = ptrtoint %"class.v8::internal::ZoneVector.22"** %76 to i64
  %78 = load %"class.v8::internal::ZoneVector.22"**, %"class.v8::internal::ZoneVector.22"*** %6, align 8
  %79 = icmp eq %"class.v8::internal::ZoneVector.22"** %78, %76
  br i1 %79, label %249, label %80

80:                                               ; preds = %65
  %81 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %78, i64 -1
  %82 = ptrtoint %"class.v8::internal::ZoneVector.22"** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 4
  br i1 %86, label %179, label %87

87:                                               ; preds = %80
  %88 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %78, i64 -1
  %89 = ptrtoint %"class.v8::internal::ZoneVector.22"** %88 to i64
  %90 = sub i64 %89, %77
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add nsw i64 %33, %92
  %94 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %67, i64 %93
  %95 = xor i64 %91, -1
  %96 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %78, i64 %95
  %97 = icmp ult %"class.v8::internal::ZoneVector.22"** %94, %78
  %98 = icmp ult %"class.v8::internal::ZoneVector.22"** %96, %68
  %99 = and i1 %97, %98
  br i1 %99, label %179, label %100

100:                                              ; preds = %87
  %101 = and i64 %85, 4611686018427387900
  %102 = sub nsw i64 0, %101
  %103 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %68, i64 %102
  %104 = sub nsw i64 0, %101
  %105 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %78, i64 %104
  %106 = add nsw i64 %101, -4
  %107 = lshr exact i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %106, 0
  br i1 %110, label %157, label %111

111:                                              ; preds = %100
  %112 = sub nuw nsw i64 %108, %109
  %113 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %68, i64 -1
  %114 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %78, i64 -1
  %115 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %68, i64 -1
  %116 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %78, i64 -1
  br label %117

117:                                              ; preds = %117, %111
  %118 = phi i64 [ 0, %111 ], [ %152, %117 ]
  %119 = phi i64 [ %112, %111 ], [ %153, %117 ]
  %120 = sub i64 0, %118
  %121 = sub i64 0, %118
  %122 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %113, i64 %120
  %123 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %114, i64 %121
  %124 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %123, i64 -1
  %125 = bitcast %"class.v8::internal::ZoneVector.22"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !184
  %127 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %123, i64 -2
  %128 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %127, i64 -1
  %129 = bitcast %"class.v8::internal::ZoneVector.22"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !184
  %131 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %122, i64 -1
  %132 = bitcast %"class.v8::internal::ZoneVector.22"** %131 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %132, align 8, !alias.scope !187, !noalias !184
  %133 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %122, i64 -2
  %134 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::ZoneVector.22"** %134 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %135, align 8, !alias.scope !187, !noalias !184
  %136 = sub nuw nsw i64 -4, %118
  %137 = sub nuw nsw i64 -4, %118
  %138 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %115, i64 %136
  %139 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %116, i64 %137
  %140 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::ZoneVector.22"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !184
  %143 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %139, i64 -2
  %144 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %143, i64 -1
  %145 = bitcast %"class.v8::internal::ZoneVector.22"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !184
  %147 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %138, i64 -1
  %148 = bitcast %"class.v8::internal::ZoneVector.22"** %147 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %148, align 8, !alias.scope !187, !noalias !184
  %149 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %138, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::ZoneVector.22"** %150 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %151, align 8, !alias.scope !187, !noalias !184
  %152 = add i64 %118, 8
  %153 = add i64 %119, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %117, !llvm.loop !189

155:                                              ; preds = %117
  %156 = sub nuw nsw i64 -8, %118
  br label %157

157:                                              ; preds = %155, %100
  %158 = phi i64 [ 0, %100 ], [ %156, %155 ]
  %159 = icmp eq i64 %109, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %157
  %161 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %68, i64 -1
  %162 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %78, i64 -1
  %163 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %161, i64 %158
  %164 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %162, i64 %158
  %165 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %164, i64 -1
  %166 = bitcast %"class.v8::internal::ZoneVector.22"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !184
  %168 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %164, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::ZoneVector.22"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !184
  %172 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %163, i64 -1
  %173 = bitcast %"class.v8::internal::ZoneVector.22"** %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !187, !noalias !184
  %174 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %163, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %174, i64 -1
  %176 = bitcast %"class.v8::internal::ZoneVector.22"** %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !187, !noalias !184
  br label %177

177:                                              ; preds = %157, %160
  %178 = icmp eq i64 %85, %101
  br i1 %178, label %249, label %179

179:                                              ; preds = %177, %87, %80
  %180 = phi %"class.v8::internal::ZoneVector.22"** [ %68, %87 ], [ %68, %80 ], [ %103, %177 ]
  %181 = phi %"class.v8::internal::ZoneVector.22"** [ %78, %87 ], [ %78, %80 ], [ %105, %177 ]
  %182 = getelementptr %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %181, i64 -1
  %183 = ptrtoint %"class.v8::internal::ZoneVector.22"** %182 to i64
  %184 = sub i64 %183, %77
  %185 = lshr i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %179, %189
  %190 = phi %"class.v8::internal::ZoneVector.22"** [ %193, %189 ], [ %180, %179 ]
  %191 = phi %"class.v8::internal::ZoneVector.22"** [ %194, %189 ], [ %181, %179 ]
  %192 = phi i64 [ %198, %189 ], [ %187, %179 ]
  %193 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %190, i64 -1
  %194 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %191, i64 -1
  %195 = bitcast %"class.v8::internal::ZoneVector.22"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::ZoneVector.22"** %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = add i64 %192, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %189, !llvm.loop !190

200:                                              ; preds = %189, %179
  %201 = phi %"class.v8::internal::ZoneVector.22"** [ undef, %179 ], [ %193, %189 ]
  %202 = phi %"class.v8::internal::ZoneVector.22"** [ %180, %179 ], [ %193, %189 ]
  %203 = phi %"class.v8::internal::ZoneVector.22"** [ %181, %179 ], [ %194, %189 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %249, label %205

205:                                              ; preds = %200, %205
  %206 = phi %"class.v8::internal::ZoneVector.22"** [ %243, %205 ], [ %202, %200 ]
  %207 = phi %"class.v8::internal::ZoneVector.22"** [ %244, %205 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 -1
  %209 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 -1
  %210 = bitcast %"class.v8::internal::ZoneVector.22"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.v8::internal::ZoneVector.22"** %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 -2
  %214 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 -2
  %215 = bitcast %"class.v8::internal::ZoneVector.22"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.v8::internal::ZoneVector.22"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 -3
  %219 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 -3
  %220 = bitcast %"class.v8::internal::ZoneVector.22"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.v8::internal::ZoneVector.22"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 -4
  %224 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 -4
  %225 = bitcast %"class.v8::internal::ZoneVector.22"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::ZoneVector.22"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 -5
  %229 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 -5
  %230 = bitcast %"class.v8::internal::ZoneVector.22"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.v8::internal::ZoneVector.22"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 -6
  %234 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 -6
  %235 = bitcast %"class.v8::internal::ZoneVector.22"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::ZoneVector.22"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 -7
  %239 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 -7
  %240 = bitcast %"class.v8::internal::ZoneVector.22"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::ZoneVector.22"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %206, i64 -8
  %244 = getelementptr inbounds %"class.v8::internal::ZoneVector.22"*, %"class.v8::internal::ZoneVector.22"** %207, i64 -8
  %245 = bitcast %"class.v8::internal::ZoneVector.22"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.v8::internal::ZoneVector.22"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = icmp eq %"class.v8::internal::ZoneVector.22"** %244, %76
  br i1 %248, label %249, label %205, !llvm.loop !191

249:                                              ; preds = %200, %205, %177, %65
  %250 = phi %"class.v8::internal::ZoneVector.22"** [ %68, %65 ], [ %103, %177 ], [ %201, %200 ], [ %243, %205 ]
  %251 = ptrtoint %"class.v8::internal::ZoneVector.22"** %250 to i64
  store i64 %251, i64* %30, align 8
  store i64 %74, i64* %7, align 8
  store i64 %73, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::Schedule"* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler4NodeEEEEEDaRT_: argument 0"}
!8 = distinct !{!8, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler4NodeEEEEEDaRT_"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !4}
!17 = distinct !{!17, !15}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler4NodeEEEEEDaRT_: argument 0"}
!20 = distinct !{!20, !"_ZN2v84base8ReversedINS_8internal10ZoneVectorIPNS2_8compiler4NodeEEEEEDaRT_"}
!21 = !{!"branch_weights", i32 2000, i32 1}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN2v88internal8compiler4Node11input_edgesEv: argument 0"}
!24 = distinct !{!24, !"_ZN2v88internal8compiler4Node11input_edgesEv"}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !15}
!31 = distinct !{!31, !4}
!32 = distinct !{!32, !15}
!33 = distinct !{!33, !4}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !15}
!40 = distinct !{!40, !4}
!41 = distinct !{!41, !15}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !15}
!48 = distinct !{!48, !4}
!49 = distinct !{!49, !4}
!50 = distinct !{!50, !15}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !15}
!57 = distinct !{!57, !4}
!58 = distinct !{!58, !15}
!59 = distinct !{!59, !4}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !15}
!66 = distinct !{!66, !4}
!67 = distinct !{!67, !15}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !15}
!74 = distinct !{!74, !4}
!75 = distinct !{!75, !4}
!76 = distinct !{!76, !15}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !15}
!83 = distinct !{!83, !4}
!84 = distinct !{!84, !15}
!85 = distinct !{!85, !4}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !15}
!92 = distinct !{!92, !4}
!93 = distinct !{!93, !15}
!94 = distinct !{!94, !4}
!95 = distinct !{!95, !4}
!96 = distinct !{!96, !4}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !15}
!106 = distinct !{!106, !4}
!107 = distinct !{!107, !15}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZN2v88internal8compiler4Node11input_edgesEv: argument 0"}
!110 = distinct !{!110, !"_ZN2v88internal8compiler4Node11input_edgesEv"}
!111 = distinct !{!111, !4}
!112 = distinct !{!112, !4}
!113 = distinct !{!113, !4}
!114 = distinct !{!114, !4}
!115 = distinct !{!115, !4}
!116 = !{}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!119 = distinct !{!119, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler10BasicBlockEPNS4_4NodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_IST_EEEEEEDpOT_: argument 0"}
!122 = distinct !{!122, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler10BasicBlockEPNS4_4NodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_IST_EEEEEEDpOT_"}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !15}
!129 = distinct !{!129, !4}
!130 = distinct !{!130, !15}
!131 = !{!132, !134}
!132 = distinct !{!132, !133, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!133 = distinct !{!133, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!134 = distinct !{!134, !135, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!135 = distinct !{!135, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!136 = !{!137, !139}
!137 = distinct !{!137, !138, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!138 = distinct !{!138, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!139 = distinct !{!139, !140, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!140 = distinct !{!140, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!143 = distinct !{!143, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!144 = !{!142, !145}
!145 = distinct !{!145, !146, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!146 = distinct !{!146, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!147 = !{!148, !150}
!148 = distinct !{!148, !149, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!149 = distinct !{!149, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!150 = distinct !{!150, !151, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv: argument 0"}
!151 = distinct !{!151, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE5beginEv"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv: argument 0"}
!154 = distinct !{!154, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE3endEv"}
!155 = !{!156, !153}
!156 = distinct !{!156, !157, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!157 = distinct !{!157, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!160 = distinct !{!160, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!163 = distinct !{!163, !"_ZNSt3__114__copy_alignedINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!164 = !{!162, !165}
!165 = distinct !{!165, !166, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_: argument 0"}
!166 = distinct !{!166, !"_ZNSt3__14copyINS_6vectorIbN2v88internal13ZoneAllocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS7_IS8_XT0_EXLi0EEEESA_S9_"}
!167 = !{!165}
!168 = distinct !{!168, !4}
!169 = distinct !{!169, !4}
!170 = distinct !{!170, !4}
!171 = distinct !{!171, !4}
!172 = distinct !{!172, !4}
!173 = !{!174}
!174 = distinct !{!174, !175}
!175 = distinct !{!175, !"LVerDomain"}
!176 = !{!177}
!177 = distinct !{!177, !175}
!178 = distinct !{!178, !15}
!179 = distinct !{!179, !4}
!180 = distinct !{!180, !15}
!181 = distinct !{!181, !4}
!182 = distinct !{!182, !4}
!183 = distinct !{!183, !4}
!184 = !{!185}
!185 = distinct !{!185, !186}
!186 = distinct !{!186, !"LVerDomain"}
!187 = !{!188}
!188 = distinct !{!188, !186}
!189 = distinct !{!189, !15}
!190 = distinct !{!190, !4}
!191 = distinct !{!191, !15}
