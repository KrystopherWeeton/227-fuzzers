; ModuleID = '../../third_party/blink/renderer/core/page/print_context.cc'
source_filename = "../../third_party/blink/renderer/core/page/print_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1738", i64 }
%"class.std::__1::vector.1738" = type { %"class.std::__1::__vector_base.1739" }
%"class.std::__1::__vector_base.1739" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1740" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::PrintContext" = type <{ i32 (...)**, %"class.blink::Member.1857", %"class.WTF::Vector.1959", i8, i8, [6 x i8], %"class.blink::HeapHashMap.2846", i8, [7 x i8] }>
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::LocalFrame"* }
%"class.WTF::Vector.1959" = type { %"class.WTF::VectorBuffer.1960" }
%"class.WTF::VectorBuffer.1960" = type { %"class.WTF::VectorBufferBase.1961" }
%"class.WTF::VectorBufferBase.1961" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::HeapHashMap.2846" = type { %"class.WTF::HashMap.2849" }
%"class.WTF::HashMap.2849" = type { %"class.WTF::HashTable.2850" }
%"class.WTF::HashTable.2850" = type <{ %"struct.WTF::KeyValuePair.2852"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2852" = type { %"class.WTF::String", %"class.blink::Member.318" }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1589", i32, i8, [3 x i8], %"class.blink::HeapVector.1591", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1599", %"class.blink::Member.1601", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1610", %"class.blink::Member.1733", %"class.blink::Member.1735", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.3003" }
%"class.blink::Member.3003" = type { %"class.blink::MemberBase.3004" }
%"class.blink::MemberBase.3004" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3005" }
%"class.blink::Member.3005" = type { %"class.blink::MemberBase.3006" }
%"class.blink::MemberBase.3006" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1579", %"class.std::__1::unique_ptr.1579", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1585", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1547", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1549", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1554 }
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1554 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1566", %"class.std::__1::map.1575"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1549" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1558", %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1566" = type { %"class.std::__1::__tree.1567" }
%"class.std::__1::__tree.1567" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1568", %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1575" = type opaque
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1591" = type { %"class.WTF::Vector.1594" }
%"class.WTF::Vector.1594" = type { %"class.WTF::VectorBuffer.1595" }
%"class.WTF::VectorBuffer.1595" = type { %"class.WTF::VectorBufferBase.1596" }
%"class.WTF::VectorBufferBase.1596" = type { %"class.blink::Member.1597"*, i32, i32 }
%"class.blink::Member.1597" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1603", i32, i32 }
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1613" }
%"class.std::__1::unique_ptr.1613" = type { %"class.std::__1::__compressed_pair.1614" }
%"class.std::__1::__compressed_pair.1614" = type { %"struct.std::__1::__compressed_pair_elem.1615" }
%"struct.std::__1::__compressed_pair_elem.1615" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1616" }
%"class.WTF::Vector.1616" = type { %"class.WTF::VectorBuffer.1617" }
%"class.WTF::VectorBuffer.1617" = type { %"class.WTF::VectorBufferBase.1618" }
%"class.WTF::VectorBufferBase.1618" = type { %"class.mojo::StructPtr.1619"*, i32, i32 }
%"class.mojo::StructPtr.1619" = type { %"class.std::__1::unique_ptr.1620" }
%"class.std::__1::unique_ptr.1620" = type { %"class.std::__1::__compressed_pair.1621" }
%"class.std::__1::__compressed_pair.1621" = type { %"struct.std::__1::__compressed_pair_elem.1622" }
%"struct.std::__1::__compressed_pair_elem.1622" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1623", %"class.WTF::HashMap.1630", %"class.WTF::HashMap.1635", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1640", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1623" = type { %"class.std::__1::unique_ptr.1624" }
%"class.std::__1::unique_ptr.1624" = type { %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1626" }
%"struct.std::__1::__compressed_pair_elem.1626" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"struct.WTF::KeyValuePair.1634"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1634" = type opaque
%"class.WTF::HashMap.1635" = type { %"class.WTF::HashTable.1636" }
%"class.WTF::HashTable.1636" = type <{ %"struct.WTF::KeyValuePair.1639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1639" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1640" = type { %"class.std::__1::unique_ptr.1641" }
%"class.std::__1::unique_ptr.1641" = type { %"class.std::__1::__compressed_pair.1642" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"struct.std::__1::__compressed_pair_elem.1643" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1724" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1655", i32 }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1658", %"class.absl::optional.1659", %"class.absl::optional.1664", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1677", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1699", %"class.std::__1::map.1710", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1719", i8, %class.scoped_refptr.1669, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1720" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1658" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1659" = type { %"class.absl::optional_internal::optional_data.1660" }
%"class.absl::optional_internal::optional_data.1660" = type { %"class.absl::optional_internal::optional_data_base.1661" }
%"class.absl::optional_internal::optional_data_base.1661" = type { %"class.absl::optional_internal::optional_data_dtor_base.1662" }
%"class.absl::optional_internal::optional_data_dtor_base.1662" = type { i8, %union.anon.1663 }
%union.anon.1663 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1664" = type { %"class.absl::optional_internal::optional_data.1665" }
%"class.absl::optional_internal::optional_data.1665" = type { %"class.absl::optional_internal::optional_data_base.1666" }
%"class.absl::optional_internal::optional_data_base.1666" = type { %"class.absl::optional_internal::optional_data_dtor_base.1667" }
%"class.absl::optional_internal::optional_data_dtor_base.1667" = type { i8, %union.anon.1668 }
%union.anon.1668 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1669, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1670" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1670" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1675 }
%class.scoped_refptr.1675 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1737", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1669, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1737" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1676 }
%class.scoped_refptr.1676 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1680", %class.scoped_refptr.1681 }
%"class.base::RepeatingCallback.1680" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1681 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1682" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1686", %"class.std::__1::unique_ptr.1692", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1698" }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1698" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1699" = type { %"class.std::__1::__tree.1700" }
%"class.std::__1::__tree.1700" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1701", %"class.std::__1::__compressed_pair.1705" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1710" = type { %"class.std::__1::__tree.1711" }
%"class.std::__1::__tree.1711" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1712", %"class.std::__1::__compressed_pair.1716" }
%"class.std::__1::__compressed_pair.1712" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1719" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1669 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1720" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1745", [4 x i8] }>
%"class.WTF::RefCounted.1745" = type { %"class.base::RefCounted.1746" }
%"class.base::RefCounted.1746" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3070" }
%"class.WTF::Vector.3070" = type { %"class.WTF::VectorBuffer.3071" }
%"class.WTF::VectorBuffer.3071" = type { %"class.WTF::VectorBufferBase.3072" }
%"class.WTF::VectorBufferBase.3072" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3075", %"class.absl::optional.3075", %"class.absl::optional.3075" }
%"class.absl::optional.3075" = type { %"class.absl::optional_internal::optional_data.3076" }
%"class.absl::optional_internal::optional_data.3076" = type { %"class.absl::optional_internal::optional_data_base.3077" }
%"class.absl::optional_internal::optional_data_base.3077" = type { %"class.absl::optional_internal::optional_data_dtor_base.3078" }
%"class.absl::optional_internal::optional_data_dtor_base.3078" = type { i8, %union.anon.3079 }
%union.anon.3079 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3080 }
%class.scoped_refptr.3080 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3081", %"class.WTF::Vector.630", %"class.WTF::Vector.3083", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3081" = type { %"class.base::RefCounted.3082" }
%"class.base::RefCounted.3082" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3083" = type { %"class.WTF::VectorBuffer.3084" }
%"class.WTF::VectorBuffer.3084" = type { %"class.WTF::VectorBufferBase.3085" }
%"class.WTF::VectorBufferBase.3085" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3086 }
%union.anon.3086 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3090" }
%"class.WTF::VectorBuffer.3090" = type { %"class.WTF::VectorBufferBase.3091", [32 x i8] }
%"class.WTF::VectorBufferBase.3091" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3094 }
%class.scoped_refptr.3094 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3104" }
%"class.blink::Member.3104" = type { %"class.blink::MemberBase.3105" }
%"class.blink::MemberBase.3105" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3100" }
%"class.blink::MemberBase.3100" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3101" }
%"class.blink::MemberBase.3101" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3102" }
%"class.blink::MemberBase.3102" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3103" }
%"class.blink::MemberBase.3103" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3095", %"class.WTF::Vector.3095" }
%"class.WTF::Vector.3095" = type { %"class.WTF::VectorBuffer.3096" }
%"class.WTF::VectorBuffer.3096" = type { %"class.WTF::VectorBufferBase.3097" }
%"class.WTF::VectorBufferBase.3097" = type { %class.scoped_refptr.3094*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1848", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2068", %"class.std::__1::unique_ptr.2074", %"class.std::__1::unique_ptr.2080", %class.scoped_refptr.1844, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2086", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1807", %"class.std::__1::unique_ptr.1817" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1763, %"class.WTF::Vector.1764", %"class.std::__1::unique_ptr.1769", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1790, %"class.blink::Persistent.1791" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1763 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766", [8 x i8] }
%"class.WTF::VectorBufferBase.1766" = type { %class.scoped_refptr.1763*, i32, i32 }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1772", %"class.absl::optional.1777", %"class.absl::optional.1782" }
%"class.absl::optional.1772" = type { %"class.absl::optional_internal::optional_data.1773" }
%"class.absl::optional_internal::optional_data.1773" = type { %"class.absl::optional_internal::optional_data_base.1774" }
%"class.absl::optional_internal::optional_data_base.1774" = type { %"class.absl::optional_internal::optional_data_dtor_base.1775" }
%"class.absl::optional_internal::optional_data_dtor_base.1775" = type { i8, %union.anon.1776 }
%union.anon.1776 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1777" = type { %"class.absl::optional_internal::optional_data.1778" }
%"class.absl::optional_internal::optional_data.1778" = type { %"class.absl::optional_internal::optional_data_base.1779" }
%"class.absl::optional_internal::optional_data_base.1779" = type { %"class.absl::optional_internal::optional_data_dtor_base.1780" }
%"class.absl::optional_internal::optional_data_dtor_base.1780" = type { i8, [3 x i8], %union.anon.1781 }
%union.anon.1781 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1782" = type { %"class.absl::optional_internal::optional_data.1783" }
%"class.absl::optional_internal::optional_data.1783" = type { %"class.absl::optional_internal::optional_data_base.1784" }
%"class.absl::optional_internal::optional_data_base.1784" = type { %"class.absl::optional_internal::optional_data_dtor_base.1785" }
%"class.absl::optional_internal::optional_data_dtor_base.1785" = type { i8, %union.anon.1786 }
%union.anon.1786 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1790 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1747" = type { %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1749" }
%"struct.std::__1::__compressed_pair_elem.1749" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1750", %"class.absl::optional.1755" }
%"class.absl::optional.1750" = type { %"class.absl::optional_internal::optional_data.1751" }
%"class.absl::optional_internal::optional_data.1751" = type { %"class.absl::optional_internal::optional_data_base.1752" }
%"class.absl::optional_internal::optional_data_base.1752" = type { %"class.absl::optional_internal::optional_data_dtor_base.1753" }
%"class.absl::optional_internal::optional_data_dtor_base.1753" = type { i8, %union.anon.1754 }
%union.anon.1754 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1755" = type { %"class.absl::optional_internal::optional_data.1756" }
%"class.absl::optional_internal::optional_data.1756" = type { %"class.absl::optional_internal::optional_data_base.1757" }
%"class.absl::optional_internal::optional_data_base.1757" = type { %"class.absl::optional_internal::optional_data_dtor_base.1758" }
%"class.absl::optional_internal::optional_data_dtor_base.1758" = type { i8, %union.anon.1759 }
%union.anon.1759 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1791" = type { %"class.blink::PersistentBase.1792" }
%"class.blink::PersistentBase.1792" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1795", %"struct.blink::PhysicalRect", %"class.blink::Member.1805" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.WTF::HashSet.1798"* }
%"class.WTF::HashSet.1798" = type { %"class.WTF::HashTable.1799" }
%"class.WTF::HashTable.1799" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1807" = type { %"class.blink::PersistentBase.1808" }
%"class.blink::PersistentBase.1808" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1811", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1817" = type { %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1819" }
%"struct.std::__1::__compressed_pair_elem.1819" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1820", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1820" = type { %"class.WTF::HashTable.1823", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1823" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1826", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1829, %"class.std::__1::unique_ptr.1830", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1829 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2726", i16, %class.scoped_refptr.1829 }
%"class.WTF::ThreadSafeRefCounted.2726" = type { %"class.base::RefCountedThreadSafe.2727" }
%"class.base::RefCountedThreadSafe.2727" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"class.WTF::Vector.1833"* }
%"class.WTF::Vector.1833" = type { %"class.WTF::VectorBuffer.1834" }
%"class.WTF::VectorBuffer.1834" = type { %"class.WTF::VectorBufferBase.1835" }
%"class.WTF::VectorBufferBase.1835" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1844, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1852", %"class.blink::Member.1857", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1859", i8, i32, %"class.blink::Color", %"class.absl::optional.1862", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1867", %"class.blink::Member.1869", %"class.blink::Member.1869", %"class.std::__1::unique_ptr.1872", i32, [4 x i8], %"class.WTF::HashSet.1875", %"class.blink::Member.1882", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1884", %"class.blink::HeapHashSet.1891", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1899", i8, %"class.blink::Member.1905", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1917", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1931", i8, %"class.std::__1::unique_ptr.1937", %"class.std::__1::unique_ptr.2018", %"class.WTF::Vector.2024", i32, %class.scoped_refptr.2029, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2030", %"class.blink::Member.2032", %"class.blink::Member.2034", %"class.blink::HeapHashSet.2036", %"class.blink::HeapHashSet.2043", %"class.std::__1::unique_ptr.2050", %"class.std::__1::unique_ptr.2057", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1852" = type { %"class.WTF::HashTable.1853" }
%"class.WTF::HashTable.1853" = type <{ %class.scoped_refptr.1856*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1856 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1859" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1860", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1860" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1862" = type { %"class.absl::optional_internal::optional_data.1863" }
%"class.absl::optional_internal::optional_data.1863" = type { %"class.absl::optional_internal::optional_data_base.1864" }
%"class.absl::optional_internal::optional_data_base.1864" = type { %"class.absl::optional_internal::optional_data_dtor_base.1865" }
%"class.absl::optional_internal::optional_data_dtor_base.1865" = type { i8, %union.anon.1866 }
%union.anon.1866 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::HeapHashSet.1871"* }
%"class.blink::HeapHashSet.1871" = type opaque
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.WTF::HashSet.1875"* }
%"class.WTF::HashSet.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1884" = type { %"class.WTF::HashSet.1887" }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::Member.1890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1890" = type opaque
%"class.blink::HeapHashSet.1891" = type { %"class.WTF::HashSet.1894" }
%"class.WTF::HashSet.1894" = type { %"class.WTF::HashTable.1895" }
%"class.WTF::HashTable.1895" = type <{ %"class.blink::Member.1897"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1897" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2103", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2113", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2103" = type { %"class.blink::MemberBase.2104" }
%"class.blink::MemberBase.2104" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2105", %"class.blink::Member.2107", %"class.blink::Member.2109", %"class.blink::Member.2111", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2105" = type { %"class.blink::MemberBase.2106" }
%"class.blink::MemberBase.2106" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2113" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2114", { i64, i64 } }
%"class.blink::WeakMember.2114" = type { %"class.blink::MemberBase.1898" }
%"class.std::__1::unique_ptr.1899" = type { %"class.std::__1::__compressed_pair.1900" }
%"class.std::__1::__compressed_pair.1900" = type { %"struct.std::__1::__compressed_pair_elem.1901" }
%"struct.std::__1::__compressed_pair_elem.1901" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1909", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1909" = type { %"class.WTF::HashTable.1910" }
%"class.WTF::HashTable.1910" = type <{ %"struct.WTF::KeyValuePair.1912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1912" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1913", i32, i32 }
%"class.WTF::Vector.1913" = type { %"class.WTF::VectorBuffer.1914" }
%"class.WTF::VectorBuffer.1914" = type { %"class.WTF::VectorBufferBase.1915" }
%"class.WTF::VectorBufferBase.1915" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1917" = type { %"class.WTF::LinkedHashSet.1920" }
%"class.WTF::LinkedHashSet.1920" = type { %"class.WTF::HashMap.1921", %"class.WTF::VectorBackedLinkedList.1925" }
%"class.WTF::HashMap.1921" = type { %"class.WTF::HashTable.1922" }
%"class.WTF::HashTable.1922" = type <{ %"struct.WTF::KeyValuePair.1924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1924" = type opaque
%"class.WTF::VectorBackedLinkedList.1925" = type { %"class.WTF::Vector.1926", i32, i32 }
%"class.WTF::Vector.1926" = type { %"class.WTF::VectorBuffer.1927" }
%"class.WTF::VectorBuffer.1927" = type { %"class.WTF::VectorBufferBase.1928" }
%"class.WTF::VectorBufferBase.1928" = type { %"class.WTF::VectorBackedLinkedListNode.1929"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1929" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1937" = type { %"class.std::__1::__compressed_pair.1938" }
%"class.std::__1::__compressed_pair.1938" = type { %"struct.std::__1::__compressed_pair_elem.1939" }
%"struct.std::__1::__compressed_pair_elem.1939" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1940, %class.scoped_refptr.1940, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1995", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2000", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1940 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1941", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1948" }
%"class.WTF::RefCounted.1941" = type { %"class.base::RefCounted.1942" }
%"class.base::RefCounted.1942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1943", i32, [4 x i8] }>
%"class.WTF::Vector.1943" = type { %"class.WTF::VectorBuffer.1944" }
%"class.WTF::VectorBuffer.1944" = type { %"class.WTF::VectorBufferBase.1945" }
%"class.WTF::VectorBufferBase.1945" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1948" = type { %"class.WTF::VectorBuffer.1949" }
%"class.WTF::VectorBuffer.1949" = type { %"class.WTF::VectorBufferBase.1950" }
%"class.WTF::VectorBufferBase.1950" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1951", %"class.std::__1::unique_ptr.1967", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1954", %"class.WTF::Vector.1959", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1967" = type { %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1970", %"class.absl::optional.1970" }
%"class.absl::optional.1970" = type { %"class.absl::optional_internal::optional_data.1971" }
%"class.absl::optional_internal::optional_data.1971" = type { %"class.absl::optional_internal::optional_data_base.1972" }
%"class.absl::optional_internal::optional_data_base.1972" = type { %"class.absl::optional_internal::optional_data_dtor_base.1973" }
%"class.absl::optional_internal::optional_data_dtor_base.1973" = type { i8, [3 x i8], %union.anon.1974 }
%union.anon.1974 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1948"*, %"class.absl::optional.1980", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1980" = type { %"class.absl::optional_internal::optional_data.1981" }
%"class.absl::optional_internal::optional_data.1981" = type { %"class.absl::optional_internal::optional_data_base.1982" }
%"class.absl::optional_internal::optional_data_base.1982" = type { %"class.absl::optional_internal::optional_data_dtor_base.1983" }
%"class.absl::optional_internal::optional_data_dtor_base.1983" = type { i8, %union.anon.1984 }
%union.anon.1984 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1985", %"class.WTF::Vector.1990" }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987", [128 x i8] }
%"class.WTF::VectorBufferBase.1987" = type { i32*, i32, i32 }
%"class.WTF::Vector.1990" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.1992", [128 x i8] }
%"class.WTF::VectorBufferBase.1992" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1995" = type { %"class.WTF::VectorBuffer.1996" }
%"class.WTF::VectorBuffer.1996" = type { %"class.WTF::VectorBufferBase.1997" }
%"class.WTF::VectorBufferBase.1997" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2005", %"class.WTF::Vector.2010" }
%"class.WTF::HashMap.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"struct.WTF::KeyValuePair.2009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2009" = type opaque
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012" }
%"class.WTF::VectorBufferBase.2012" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2018" = type { %"class.std::__1::__compressed_pair.2019" }
%"class.std::__1::__compressed_pair.2019" = type { %"struct.std::__1::__compressed_pair_elem.2020" }
%"struct.std::__1::__compressed_pair_elem.2020" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2024" = type { %"class.WTF::VectorBuffer.2025" }
%"class.WTF::VectorBuffer.2025" = type { %"class.WTF::VectorBufferBase.2026" }
%"class.WTF::VectorBufferBase.2026" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2029 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2030" = type { %"class.blink::MemberBase.2031" }
%"class.blink::MemberBase.2031" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2036" = type { %"class.WTF::HashSet.2039" }
%"class.WTF::HashSet.2039" = type { %"class.WTF::HashTable.2040" }
%"class.WTF::HashTable.2040" = type <{ %"class.blink::WeakMember.2042"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2042" = type opaque
%"class.blink::HeapHashSet.2043" = type { %"class.WTF::HashSet.2046" }
%"class.WTF::HashSet.2046" = type { %"class.WTF::HashTable.2047" }
%"class.WTF::HashTable.2047" = type <{ %"class.blink::WeakMember.2049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2049" = type opaque
%"class.std::__1::unique_ptr.2050" = type { %"class.std::__1::__compressed_pair.2051" }
%"class.std::__1::__compressed_pair.2051" = type { %"struct.std::__1::__compressed_pair_elem.2052" }
%"struct.std::__1::__compressed_pair_elem.2052" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2053" }
%"class.base::time_internal::TimeBase.2053" = type { i64 }
%"class.std::__1::unique_ptr.2057" = type { %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.2059" }
%"struct.std::__1::__compressed_pair_elem.2059" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2060", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2060" = type { %"class.absl::optional_internal::optional_data.2061" }
%"class.absl::optional_internal::optional_data.2061" = type { %"class.absl::optional_internal::optional_data_base.2062" }
%"class.absl::optional_internal::optional_data_base.2062" = type { %"class.absl::optional_internal::optional_data_dtor_base.2063" }
%"class.absl::optional_internal::optional_data_dtor_base.2063" = type { i8, %union.anon.2064 }
%union.anon.2064 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2068" = type { %"class.std::__1::__compressed_pair.2069" }
%"class.std::__1::__compressed_pair.2069" = type { %"struct.std::__1::__compressed_pair_elem.2070" }
%"struct.std::__1::__compressed_pair_elem.2070" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2074" = type { %"class.std::__1::__compressed_pair.2075" }
%"class.std::__1::__compressed_pair.2075" = type { %"struct.std::__1::__compressed_pair_elem.2076" }
%"struct.std::__1::__compressed_pair_elem.2076" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2080" = type { %"class.std::__1::__compressed_pair.2081" }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.2082" }
%"struct.std::__1::__compressed_pair_elem.2082" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1844 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2086" = type { %"class.blink::PersistentBase.2087" }
%"class.blink::PersistentBase.2087" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2090", i64 }
%"class.blink::HeapVector.2090" = type { %"class.WTF::Vector.2093" }
%"class.WTF::Vector.2093" = type { %"class.WTF::VectorBuffer.2094" }
%"class.WTF::VectorBuffer.2094" = type { %"class.WTF::VectorBufferBase.2095", [368 x i8] }
%"class.WTF::VectorBufferBase.2095" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1897", i8, %"class.blink::Member.2096", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::HeapLinkedHashSet.2098"* }
%"class.blink::HeapLinkedHashSet.2098" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2286", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2294", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2308", %"class.blink::FrameLoader", %"class.blink::Member.2329", %"class.blink::Member.343", %"class.blink::Member.2330", %"class.blink::Member.2332", %"class.blink::Member.2348", %"class.blink::Member.2350", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2352", %class.scoped_refptr.2576, %"class.blink::Member.2577", %"class.blink::Member.2579", %"class.blink::Member.2581", %"class.blink::Member.2583", %"class.blink::Member.2585", %"class.blink::Member.2589", %"class.blink::Member.2591", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2595", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2601", %"class.std::__1::unique_ptr.2602", %"class.absl::optional.2274", i32, [4 x i8], %"class.std::__1::unique_ptr.2608", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2616", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2621", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2626", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2629", %"class.blink::Member.2631", %"class.blink::Member.2633", %"class.blink::Member.2635", %"class.mojo::StructPtr.2638", %"class.blink::Member.2647", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2649", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::Member.2123", i8, i32, i8, i32, %"class.blink::Member.2256", %"class.blink::Member.2146", %"class.blink::FrameLifecycle", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.2117", %"class.blink::Member.1857", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2267", i8, %"class.base::UnguessableToken", %"class.absl::optional.2269", %"class.absl::optional.2274", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2117", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2730", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2117", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2744", %"class.blink::Member.2748", %"class.blink::Member.2750", %"class.blink::Member.2752", %"class.blink::Member.2754", %"class.blink::Member.2756", %"class.blink::Member.2758", %"class.blink::Member.2760", %"class.blink::HeapObserverSet.2764", %"class.blink::Member.2772", %"class.blink::Member.2774", %"class.blink::Member.2776", %"class.blink::Member.2778", %"class.blink::Member.2780", %"class.blink::Member.2782", %"class.blink::Member.2784", %"class.blink::Member.2786", %"class.blink::Member.2788", %"class.blink::Member.2790", %"class.blink::Member.2792", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2817", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2824", %"class.blink::Member.2119", %"class.blink::Member.2119", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2832", %"class.std::__1::unique_ptr.2838", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2730" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2731" }
%"class.blink::HeapHashMap.2731" = type { %"class.WTF::HashMap.2734" }
%"class.WTF::HashMap.2734" = type { %"class.WTF::HashTable.2735" }
%"class.WTF::HashTable.2735" = type <{ %"struct.WTF::KeyValuePair.2737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2737" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2738" }
%"class.std::__1::unique_ptr.2738" = type { %"class.std::__1::__compressed_pair.2739" }
%"class.std::__1::__compressed_pair.2739" = type { %"struct.std::__1::__compressed_pair_elem.2740" }
%"struct.std::__1::__compressed_pair_elem.2740" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2744" = type { %"class.blink::MemberBase.2745" }
%"class.blink::MemberBase.2745" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2119", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2748" = type { %"class.blink::MemberBase.2749" }
%"class.blink::MemberBase.2749" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2750" = type { %"class.blink::MemberBase.2751" }
%"class.blink::MemberBase.2751" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.2752" = type { %"class.blink::MemberBase.2753" }
%"class.blink::MemberBase.2753" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2754" = type { %"class.blink::MemberBase.2755" }
%"class.blink::MemberBase.2755" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2756" = type { %"class.blink::MemberBase.2757" }
%"class.blink::MemberBase.2757" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2758" = type { %"class.blink::MemberBase.2759" }
%"class.blink::MemberBase.2759" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2760" = type { %"class.blink::MemberBase.2761" }
%"class.blink::MemberBase.2761" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type <{ %"struct.blink::PageScaleConstraints", %"struct.blink::PageScaleConstraints", %"struct.blink::PageScaleConstraints", %"struct.blink::PageScaleConstraints", %"struct.blink::PageScaleConstraints", [4 x i8], %"class.blink::Member.2119", i32, i32, %"class.blink::IntSize", i8, i8, [6 x i8] }>
%"struct.blink::PageScaleConstraints" = type { %"class.blink::FloatSize", float, float, float }
%"class.blink::HeapObserverSet.2764" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2765" }
%"class.blink::HeapHashSet.2765" = type { %"class.WTF::HashSet.2768" }
%"class.WTF::HashSet.2768" = type { %"class.WTF::HashTable.2769" }
%"class.WTF::HashTable.2769" = type <{ %"class.blink::WeakMember.2771"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2771" = type opaque
%"class.blink::Member.2772" = type { %"class.blink::MemberBase.2773" }
%"class.blink::MemberBase.2773" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2774" = type { %"class.blink::MemberBase.2775" }
%"class.blink::MemberBase.2775" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2776" = type { %"class.blink::MemberBase.2777" }
%"class.blink::MemberBase.2777" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2778" = type { %"class.blink::MemberBase.2779" }
%"class.blink::MemberBase.2779" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2780" = type { %"class.blink::MemberBase.2781" }
%"class.blink::MemberBase.2781" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2782" = type { %"class.blink::MemberBase.2783" }
%"class.blink::MemberBase.2783" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2784" = type { %"class.blink::MemberBase.2785" }
%"class.blink::MemberBase.2785" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2786" = type { %"class.blink::MemberBase.2787" }
%"class.blink::MemberBase.2787" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2788" = type { %"class.blink::MemberBase.2789" }
%"class.blink::MemberBase.2789" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2790" = type { %"class.blink::MemberBase.2791" }
%"class.blink::MemberBase.2791" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2793" }
%"class.blink::MemberBase.2793" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2794" }
%"class.WTF::Deque.2794" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2797" }
%"class.WTF::VectorBuffer.2797" = type { %"class.WTF::VectorBufferBase.2798" }
%"class.WTF::VectorBufferBase.2798" = type { %"class.std::__1::unique_ptr.2799"*, i32, i32 }
%"class.std::__1::unique_ptr.2799" = type { %"class.std::__1::__compressed_pair.2800" }
%"class.std::__1::__compressed_pair.2800" = type { %"struct.std::__1::__compressed_pair_elem.2801" }
%"struct.std::__1::__compressed_pair_elem.2801" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2805", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2805" = type { %"class.std::__1::__bitset.2806" }
%"class.std::__1::__bitset.2806" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2807" }
%"class.absl::optional.2807" = type { %"class.absl::optional_internal::optional_data.2808" }
%"class.absl::optional_internal::optional_data.2808" = type { %"class.absl::optional_internal::optional_data_base.2809" }
%"class.absl::optional_internal::optional_data_base.2809" = type { %"class.absl::optional_internal::optional_data_dtor_base.2810" }
%"class.absl::optional_internal::optional_data_dtor_base.2810" = type { i8, %union.anon.2811 }
%union.anon.2811 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2812", i64, %"class.absl::optional.1659", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2812" = type { %"class.absl::optional_internal::optional_data.2813" }
%"class.absl::optional_internal::optional_data.2813" = type { %"class.absl::optional_internal::optional_data_base.2814" }
%"class.absl::optional_internal::optional_data_base.2814" = type { %"class.absl::optional_internal::optional_data_dtor_base.2815" }
%"class.absl::optional_internal::optional_data_dtor_base.2815" = type { i8, %union.anon.2816 }
%union.anon.2816 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2817" = type { %"class.std::__1::unique_ptr.2818" }
%"class.std::__1::unique_ptr.2818" = type { %"class.std::__1::__compressed_pair.2819" }
%"class.std::__1::__compressed_pair.2819" = type { %"struct.std::__1::__compressed_pair_elem.2820" }
%"struct.std::__1::__compressed_pair_elem.2820" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2824" = type { %"class.WTF::HashSet.2827" }
%"class.WTF::HashSet.2827" = type { %"class.WTF::HashTable.2828" }
%"class.WTF::HashTable.2828" = type <{ %"class.blink::WeakMember.2830"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2830" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2831" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2831" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2832" = type { %"class.std::__1::__compressed_pair.2833" }
%"class.std::__1::__compressed_pair.2833" = type { %"struct.std::__1::__compressed_pair_elem.2834" }
%"struct.std::__1::__compressed_pair_elem.2834" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2838" = type { %"class.std::__1::__compressed_pair.2839" }
%"class.std::__1::__compressed_pair.2839" = type { %"struct.std::__1::__compressed_pair_elem.2840" }
%"struct.std::__1::__compressed_pair_elem.2840" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2117", %"class.blink::Member.2146", %"class.blink::Member.2148", %"class.blink::Member.2150", i8, %"class.WTF::Vector.2152" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2139" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2127" }
%"class.blink::HeapVector.2127" = type { %"class.WTF::Vector.2130" }
%"class.WTF::Vector.2130" = type { %"class.WTF::VectorBuffer.2131" }
%"class.WTF::VectorBuffer.2131" = type { %"class.WTF::VectorBufferBase.2132", [32 x i8] }
%"class.WTF::VectorBufferBase.2132" = type { %"struct.std::__1::pair.2133"*, i32, i32 }
%"struct.std::__1::pair.2133" = type { %"class.WTF::AtomicString", %"class.blink::Member.2134" }
%"class.blink::Member.2134" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::HeapVector.2136"* }
%"class.blink::HeapVector.2136" = type opaque
%"class.std::__1::unique_ptr.2139" = type { %"class.std::__1::__compressed_pair.2140" }
%"class.std::__1::__compressed_pair.2140" = type { %"struct.std::__1::__compressed_pair_elem.2141" }
%"struct.std::__1::__compressed_pair_elem.2141" = type { %"class.WTF::Vector.2142"* }
%"class.WTF::Vector.2142" = type opaque
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2152" = type { %"class.WTF::VectorBuffer.2153" }
%"class.WTF::VectorBuffer.2153" = type { %"class.WTF::VectorBufferBase.2154" }
%"class.WTF::VectorBufferBase.2154" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2248" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2155, %"class.std::__1::unique_ptr.1655", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1669, i32 }>
%class.scoped_refptr.2155 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1669, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2214", %"class.absl::optional.2219", %"class.absl::optional.2172", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2239", i8, [7 x i8], %class.scoped_refptr.1669, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1669, %"class.std::__1::unique_ptr.2156", %"class.absl::optional.2166", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2172", %"class.std::__1::unique_ptr.2177", i8, i64, %class.scoped_refptr.2211, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2212", %"class.base::WeakPtrFactory.2213" }
%"class.std::__1::unique_ptr.2156" = type { %"class.std::__1::__compressed_pair.2157" }
%"class.std::__1::__compressed_pair.2157" = type { %"struct.std::__1::__compressed_pair_elem.2158" }
%"struct.std::__1::__compressed_pair_elem.2158" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1669, i8, %"class.mojo::ScopedHandleBase.2159", %class.scoped_refptr.2160, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2161", i8*, %"class.base::WeakPtrFactory.2162" }
%"class.mojo::ScopedHandleBase.2159" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2160 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2161" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2162" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2166" = type { %"class.absl::optional_internal::optional_data.2167" }
%"class.absl::optional_internal::optional_data.2167" = type { %"class.absl::optional_internal::optional_data_base.2168" }
%"class.absl::optional_internal::optional_data_base.2168" = type { %"class.absl::optional_internal::optional_data_dtor_base.2169" }
%"class.absl::optional_internal::optional_data_dtor_base.2169" = type { i8, %union.anon.2170 }
%union.anon.2170 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2171", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2171" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2177" = type { %"class.std::__1::__compressed_pair.2178" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.2179" }
%"struct.std::__1::__compressed_pair_elem.2179" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2180", i8, i64, %class.scoped_refptr.2181, %class.scoped_refptr.2206 }
%"class.base::RepeatingCallback.2180" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2181 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2182", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2184", %"class.std::__1::map.2195", i8, [7 x i8] }>
%"class.base::RefCounted.2182" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2183 }
%class.scoped_refptr.2183 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2184" = type { %"class.std::__1::__tree.2185" }
%"class.std::__1::__tree.2185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2186", %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2195" = type { %"class.std::__1::__tree.2196" }
%"class.std::__1::__tree.2196" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2197", %"class.std::__1::__compressed_pair.2201" }
%"class.std::__1::__compressed_pair.2197" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2206 = type { %"class.base::RefCountedData.2207"* }
%"class.base::RefCountedData.2207" = type opaque
%class.scoped_refptr.2211 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2212" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2213" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2214" = type { %"class.absl::optional_internal::optional_data.2215" }
%"class.absl::optional_internal::optional_data.2215" = type { %"class.absl::optional_internal::optional_data_base.2216" }
%"class.absl::optional_internal::optional_data_base.2216" = type { %"class.absl::optional_internal::optional_data_dtor_base.2217" }
%"class.absl::optional_internal::optional_data_dtor_base.2217" = type { i8, %union.anon.2218 }
%union.anon.2218 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2219" = type { %"class.absl::optional_internal::optional_data.2220" }
%"class.absl::optional_internal::optional_data.2220" = type { %"class.absl::optional_internal::optional_data_base.2221" }
%"class.absl::optional_internal::optional_data_base.2221" = type { %"class.absl::optional_internal::optional_data_dtor_base.2222" }
%"class.absl::optional_internal::optional_data_dtor_base.2222" = type { i8, [7 x i8], %union.anon.2223 }
%union.anon.2223 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2172" = type { %"class.absl::optional_internal::optional_data.2173" }
%"class.absl::optional_internal::optional_data.2173" = type { %"class.absl::optional_internal::optional_data_base.2174" }
%"class.absl::optional_internal::optional_data_base.2174" = type { %"class.absl::optional_internal::optional_data_dtor_base.2175" }
%"class.absl::optional_internal::optional_data_dtor_base.2175" = type { i8, %union.anon.2176 }
%union.anon.2176 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2224 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2224 = type { %"class.std::__1::map.2227" }
%"class.std::__1::map.2227" = type { %"class.std::__1::__tree.2228" }
%"class.std::__1::__tree.2228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2229", %"class.std::__1::__compressed_pair.2233" }
%"class.std::__1::__compressed_pair.2229" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2233" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2238"*, i64 }
%"class.std::__1::unique_ptr.2238" = type opaque
%"class.std::__1::map.2239" = type { %"class.std::__1::__tree.2240" }
%"class.std::__1::__tree.2240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2241", %"class.std::__1::__compressed_pair.2245" }
%"class.std::__1::__compressed_pair.2241" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2245" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2256" = type { %"class.blink::MemberBase.2257" }
%"class.blink::MemberBase.2257" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2117", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2258" }
%"class.base::internal::flat_tree.2258" = type { %"class.std::__1::vector.2259" }
%"class.std::__1::vector.2259" = type { %"class.std::__1::__vector_base.2260" }
%"class.std::__1::__vector_base.2260" = type { %"struct.std::__1::pair.2261"*, %"struct.std::__1::pair.2261"*, %"class.std::__1::__compressed_pair.2262" }
%"struct.std::__1::pair.2261" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.2263" }
%"struct.std::__1::__compressed_pair_elem.2263" = type { %"struct.std::__1::pair.2261"* }
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2269" = type { %"class.absl::optional_internal::optional_data.2270" }
%"class.absl::optional_internal::optional_data.2270" = type { %"class.absl::optional_internal::optional_data_base.2271" }
%"class.absl::optional_internal::optional_data_base.2271" = type { %"class.absl::optional_internal::optional_data_dtor_base.2272" }
%"class.absl::optional_internal::optional_data_dtor_base.2272" = type { i8, %union.anon.2273 }
%union.anon.2273 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2279" }
%"class.blink::HeapHashSet.2279" = type { %"class.WTF::HashSet.2282" }
%"class.WTF::HashSet.2282" = type { %"class.WTF::HashTable.2283" }
%"class.WTF::HashTable.2283" = type <{ %"class.blink::WeakMember.2285"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2285" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2286" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2287" }
%"class.blink::HeapHashMap.2287" = type { %"class.WTF::HashMap.2290" }
%"class.WTF::HashMap.2290" = type { %"class.WTF::HashTable.2291" }
%"class.WTF::HashTable.2291" = type <{ %"struct.WTF::KeyValuePair.2293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2293" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2294" = type { %"class.std::__1::__compressed_pair.2295" }
%"class.std::__1::__compressed_pair.2295" = type { %"struct.std::__1::__compressed_pair_elem.2296" }
%"struct.std::__1::__compressed_pair_elem.2296" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2297", %"class.base::WeakPtrFactory.2302" }
%"class.WTF::HashMap.2297" = type { %"class.WTF::HashTable.2298" }
%"class.WTF::HashTable.2298" = type <{ %"struct.WTF::KeyValuePair.2301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2301" = type opaque
%"class.base::WeakPtrFactory.2302" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2306" }
%"class.blink::Member.2306" = type { %"class.blink::MemberBase.2307" }
%"class.blink::MemberBase.2307" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3009" }
%"class.blink::WeakMember.3009" = type { %"class.blink::MemberBase.3010" }
%"class.blink::MemberBase.3010" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3011", i64, %"class.std::__1::map.3012", i8*, i64, %"class.base::WeakPtrFactory.3021" }
%"class.base::RepeatingCallback.3011" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3012" = type { %"class.std::__1::__tree.3013" }
%"class.std::__1::__tree.3013" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3014", %"class.std::__1::__compressed_pair.3018" }
%"class.std::__1::__compressed_pair.3014" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.3018" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3021" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2308" = type { %"class.WTF::HashSet.2311" }
%"class.WTF::HashSet.2311" = type { %"class.WTF::HashTable.2312" }
%"class.WTF::HashTable.2312" = type <{ %"class.blink::WeakMember.2314"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2314" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1857", %"class.blink::Member.2315", %"class.blink::Member.2317", %"class.std::__1::unique_ptr.2319", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2325" }
%"class.blink::Member.2315" = type { %"class.blink::MemberBase.2316" }
%"class.blink::MemberBase.2316" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2317" = type { %"class.blink::MemberBase.2318" }
%"class.blink::MemberBase.2318" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2319" = type { %"class.std::__1::__compressed_pair.2320" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.2321" }
%"struct.std::__1::__compressed_pair_elem.2321" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2325" = type { %"class.WTF::HashTable.2326" }
%"class.WTF::HashTable.2326" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2329" = type { %"class.blink::MemberBase.1861" }
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2332" = type { %"class.blink::MemberBase.2333" }
%"class.blink::MemberBase.2333" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1857", %"class.blink::Member.2336", %"class.blink::Member.2338", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2340", %"class.blink::Member.2346" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2340" = type { %"class.std::__1::__compressed_pair.2341" }
%"class.std::__1::__compressed_pair.2341" = type { %"struct.std::__1::__compressed_pair_elem.2342" }
%"struct.std::__1::__compressed_pair_elem.2342" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2346" = type { %"class.blink::MemberBase.2347" }
%"class.blink::MemberBase.2347" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2356", %"class.blink::HeapListHashSet.2367", %"class.blink::HeapListHashSet.2378", %"class.blink::HeapListHashSet.2389", %"class.blink::HeapListHashSet.2400", %"class.blink::HeapListHashSet.2411", %"class.blink::HeapListHashSet.2422", %"class.blink::HeapListHashSet.2433", %"class.blink::HeapListHashSet.2444", %"class.blink::HeapListHashSet.2455", %"class.blink::HeapListHashSet.2466", %"class.blink::HeapListHashSet.2477", %"class.blink::HeapListHashSet.2488", %"class.blink::HeapListHashSet.2499", %"class.blink::HeapListHashSet.2510", %"class.blink::HeapListHashSet.2521", %"class.blink::HeapListHashSet.2532", %"class.blink::HeapListHashSet.2543", %"class.blink::HeapListHashSet.2554", %"class.blink::HeapListHashSet.2565" }
%"class.blink::HeapListHashSet.2356" = type { %"class.WTF::ListHashSet.base.2366", [7 x i8] }
%"class.WTF::ListHashSet.base.2366" = type <{ %"class.WTF::HashTable.2361", %"class.blink::Member.2363", %"class.blink::Member.2363", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2361" = type <{ %"class.blink::Member.2363"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2363" = type { %"class.blink::MemberBase.2364" }
%"class.blink::MemberBase.2364" = type { %"class.blink::HeapListHashSetNode.2365"* }
%"class.blink::HeapListHashSetNode.2365" = type { %"class.blink::Member.2579", %"class.blink::Member.2363", %"class.blink::Member.2363" }
%"class.blink::HeapListHashSet.2367" = type { %"class.WTF::ListHashSet.base.2377", [7 x i8] }
%"class.WTF::ListHashSet.base.2377" = type <{ %"class.WTF::HashTable.2372", %"class.blink::Member.2374", %"class.blink::Member.2374", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2372" = type <{ %"class.blink::Member.2374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::HeapListHashSetNode.2376"* }
%"class.blink::HeapListHashSetNode.2376" = type { %"class.blink::Member.2722", %"class.blink::Member.2374", %"class.blink::Member.2374" }
%"class.blink::Member.2722" = type { %"class.blink::MemberBase.2723" }
%"class.blink::MemberBase.2723" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2378" = type { %"class.WTF::ListHashSet.base.2388", [7 x i8] }
%"class.WTF::ListHashSet.base.2388" = type <{ %"class.WTF::HashTable.2383", %"class.blink::Member.2385", %"class.blink::Member.2385", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2383" = type <{ %"class.blink::Member.2385"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::HeapListHashSetNode.2387"* }
%"class.blink::HeapListHashSetNode.2387" = type { %"class.blink::Member.2718", %"class.blink::Member.2385", %"class.blink::Member.2385" }
%"class.blink::Member.2718" = type { %"class.blink::MemberBase.2719" }
%"class.blink::MemberBase.2719" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2389" = type { %"class.WTF::ListHashSet.base.2399", [7 x i8] }
%"class.WTF::ListHashSet.base.2399" = type <{ %"class.WTF::HashTable.2394", %"class.blink::Member.2396", %"class.blink::Member.2396", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2394" = type <{ %"class.blink::Member.2396"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2396" = type { %"class.blink::MemberBase.2397" }
%"class.blink::MemberBase.2397" = type { %"class.blink::HeapListHashSetNode.2398"* }
%"class.blink::HeapListHashSetNode.2398" = type { %"class.blink::Member.2714", %"class.blink::Member.2396", %"class.blink::Member.2396" }
%"class.blink::Member.2714" = type { %"class.blink::MemberBase.2715" }
%"class.blink::MemberBase.2715" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2400" = type { %"class.WTF::ListHashSet.base.2410", [7 x i8] }
%"class.WTF::ListHashSet.base.2410" = type <{ %"class.WTF::HashTable.2405", %"class.blink::Member.2407", %"class.blink::Member.2407", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2405" = type <{ %"class.blink::Member.2407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::HeapListHashSetNode.2409"* }
%"class.blink::HeapListHashSetNode.2409" = type { %"class.blink::Member.2710", %"class.blink::Member.2407", %"class.blink::Member.2407" }
%"class.blink::Member.2710" = type { %"class.blink::MemberBase.2711" }
%"class.blink::MemberBase.2711" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2411" = type { %"class.WTF::ListHashSet.base.2421", [7 x i8] }
%"class.WTF::ListHashSet.base.2421" = type <{ %"class.WTF::HashTable.2416", %"class.blink::Member.2418", %"class.blink::Member.2418", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2416" = type <{ %"class.blink::Member.2418"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::HeapListHashSetNode.2420"* }
%"class.blink::HeapListHashSetNode.2420" = type { %"class.blink::Member.2706", %"class.blink::Member.2418", %"class.blink::Member.2418" }
%"class.blink::Member.2706" = type { %"class.blink::MemberBase.2707" }
%"class.blink::MemberBase.2707" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2422" = type { %"class.WTF::ListHashSet.base.2432", [7 x i8] }
%"class.WTF::ListHashSet.base.2432" = type <{ %"class.WTF::HashTable.2427", %"class.blink::Member.2429", %"class.blink::Member.2429", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2427" = type <{ %"class.blink::Member.2429"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::HeapListHashSetNode.2431"* }
%"class.blink::HeapListHashSetNode.2431" = type { %"class.blink::Member.2702", %"class.blink::Member.2429", %"class.blink::Member.2429" }
%"class.blink::Member.2702" = type { %"class.blink::MemberBase.2703" }
%"class.blink::MemberBase.2703" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2433" = type { %"class.WTF::ListHashSet.base.2443", [7 x i8] }
%"class.WTF::ListHashSet.base.2443" = type <{ %"class.WTF::HashTable.2438", %"class.blink::Member.2440", %"class.blink::Member.2440", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2438" = type <{ %"class.blink::Member.2440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2440" = type { %"class.blink::MemberBase.2441" }
%"class.blink::MemberBase.2441" = type { %"class.blink::HeapListHashSetNode.2442"* }
%"class.blink::HeapListHashSetNode.2442" = type { %"class.blink::Member.2698", %"class.blink::Member.2440", %"class.blink::Member.2440" }
%"class.blink::Member.2698" = type { %"class.blink::MemberBase.2699" }
%"class.blink::MemberBase.2699" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2444" = type { %"class.WTF::ListHashSet.base.2454", [7 x i8] }
%"class.WTF::ListHashSet.base.2454" = type <{ %"class.WTF::HashTable.2449", %"class.blink::Member.2451", %"class.blink::Member.2451", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2449" = type <{ %"class.blink::Member.2451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2451" = type { %"class.blink::MemberBase.2452" }
%"class.blink::MemberBase.2452" = type { %"class.blink::HeapListHashSetNode.2453"* }
%"class.blink::HeapListHashSetNode.2453" = type { %"class.blink::Member.2694", %"class.blink::Member.2451", %"class.blink::Member.2451" }
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2455" = type { %"class.WTF::ListHashSet.base.2465", [7 x i8] }
%"class.WTF::ListHashSet.base.2465" = type <{ %"class.WTF::HashTable.2460", %"class.blink::Member.2462", %"class.blink::Member.2462", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2460" = type <{ %"class.blink::Member.2462"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2462" = type { %"class.blink::MemberBase.2463" }
%"class.blink::MemberBase.2463" = type { %"class.blink::HeapListHashSetNode.2464"* }
%"class.blink::HeapListHashSetNode.2464" = type { %"class.blink::Member.2690", %"class.blink::Member.2462", %"class.blink::Member.2462" }
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2466" = type { %"class.WTF::ListHashSet.base.2476", [7 x i8] }
%"class.WTF::ListHashSet.base.2476" = type <{ %"class.WTF::HashTable.2471", %"class.blink::Member.2473", %"class.blink::Member.2473", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2471" = type <{ %"class.blink::Member.2473"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::HeapListHashSetNode.2475"* }
%"class.blink::HeapListHashSetNode.2475" = type { %"class.blink::Member.2583", %"class.blink::Member.2473", %"class.blink::Member.2473" }
%"class.blink::HeapListHashSet.2477" = type { %"class.WTF::ListHashSet.base.2487", [7 x i8] }
%"class.WTF::ListHashSet.base.2487" = type <{ %"class.WTF::HashTable.2482", %"class.blink::Member.2484", %"class.blink::Member.2484", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2482" = type <{ %"class.blink::Member.2484"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2484" = type { %"class.blink::MemberBase.2485" }
%"class.blink::MemberBase.2485" = type { %"class.blink::HeapListHashSetNode.2486"* }
%"class.blink::HeapListHashSetNode.2486" = type { %"class.blink::Member.2684", %"class.blink::Member.2484", %"class.blink::Member.2484" }
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2488" = type { %"class.WTF::ListHashSet.base.2498", [7 x i8] }
%"class.WTF::ListHashSet.base.2498" = type <{ %"class.WTF::HashTable.2493", %"class.blink::Member.2495", %"class.blink::Member.2495", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2493" = type <{ %"class.blink::Member.2495"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2495" = type { %"class.blink::MemberBase.2496" }
%"class.blink::MemberBase.2496" = type { %"class.blink::HeapListHashSetNode.2497"* }
%"class.blink::HeapListHashSetNode.2497" = type { %"class.blink::Member.2680", %"class.blink::Member.2495", %"class.blink::Member.2495" }
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2499" = type { %"class.WTF::ListHashSet.base.2509", [7 x i8] }
%"class.WTF::ListHashSet.base.2509" = type <{ %"class.WTF::HashTable.2504", %"class.blink::Member.2506", %"class.blink::Member.2506", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2504" = type <{ %"class.blink::Member.2506"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2506" = type { %"class.blink::MemberBase.2507" }
%"class.blink::MemberBase.2507" = type { %"class.blink::HeapListHashSetNode.2508"* }
%"class.blink::HeapListHashSetNode.2508" = type { %"class.blink::Member.2676", %"class.blink::Member.2506", %"class.blink::Member.2506" }
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2510" = type { %"class.WTF::ListHashSet.base.2520", [7 x i8] }
%"class.WTF::ListHashSet.base.2520" = type <{ %"class.WTF::HashTable.2515", %"class.blink::Member.2517", %"class.blink::Member.2517", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2515" = type <{ %"class.blink::Member.2517"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::HeapListHashSetNode.2519"* }
%"class.blink::HeapListHashSetNode.2519" = type { %"class.blink::Member.2672", %"class.blink::Member.2517", %"class.blink::Member.2517" }
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2521" = type { %"class.WTF::ListHashSet.base.2531", [7 x i8] }
%"class.WTF::ListHashSet.base.2531" = type <{ %"class.WTF::HashTable.2526", %"class.blink::Member.2528", %"class.blink::Member.2528", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2526" = type <{ %"class.blink::Member.2528"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2528" = type { %"class.blink::MemberBase.2529" }
%"class.blink::MemberBase.2529" = type { %"class.blink::HeapListHashSetNode.2530"* }
%"class.blink::HeapListHashSetNode.2530" = type { %"class.blink::Member.2668", %"class.blink::Member.2528", %"class.blink::Member.2528" }
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2532" = type { %"class.WTF::ListHashSet.base.2542", [7 x i8] }
%"class.WTF::ListHashSet.base.2542" = type <{ %"class.WTF::HashTable.2537", %"class.blink::Member.2539", %"class.blink::Member.2539", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2537" = type <{ %"class.blink::Member.2539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2539" = type { %"class.blink::MemberBase.2540" }
%"class.blink::MemberBase.2540" = type { %"class.blink::HeapListHashSetNode.2541"* }
%"class.blink::HeapListHashSetNode.2541" = type { %"class.blink::Member.2664", %"class.blink::Member.2539", %"class.blink::Member.2539" }
%"class.blink::Member.2664" = type { %"class.blink::MemberBase.2665" }
%"class.blink::MemberBase.2665" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2543" = type { %"class.WTF::ListHashSet.base.2553", [7 x i8] }
%"class.WTF::ListHashSet.base.2553" = type <{ %"class.WTF::HashTable.2548", %"class.blink::Member.2550", %"class.blink::Member.2550", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2548" = type <{ %"class.blink::Member.2550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2550" = type { %"class.blink::MemberBase.2551" }
%"class.blink::MemberBase.2551" = type { %"class.blink::HeapListHashSetNode.2552"* }
%"class.blink::HeapListHashSetNode.2552" = type { %"class.blink::Member.2660", %"class.blink::Member.2550", %"class.blink::Member.2550" }
%"class.blink::Member.2660" = type { %"class.blink::MemberBase.2661" }
%"class.blink::MemberBase.2661" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2554" = type { %"class.WTF::ListHashSet.base.2564", [7 x i8] }
%"class.WTF::ListHashSet.base.2564" = type <{ %"class.WTF::HashTable.2559", %"class.blink::Member.2561", %"class.blink::Member.2561", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2559" = type <{ %"class.blink::Member.2561"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2561" = type { %"class.blink::MemberBase.2562" }
%"class.blink::MemberBase.2562" = type { %"class.blink::HeapListHashSetNode.2563"* }
%"class.blink::HeapListHashSetNode.2563" = type { %"class.blink::Member.2585", %"class.blink::Member.2561", %"class.blink::Member.2561" }
%"class.blink::HeapListHashSet.2565" = type { %"class.WTF::ListHashSet.base.2575", [7 x i8] }
%"class.WTF::ListHashSet.base.2575" = type <{ %"class.WTF::HashTable.2570", %"class.blink::Member.2572", %"class.blink::Member.2572", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2570" = type <{ %"class.blink::Member.2572"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2572" = type { %"class.blink::MemberBase.2573" }
%"class.blink::MemberBase.2573" = type { %"class.blink::HeapListHashSetNode.2574"* }
%"class.blink::HeapListHashSetNode.2574" = type { %"class.blink::Member.2577", %"class.blink::Member.2572", %"class.blink::Member.2572" }
%class.scoped_refptr.2576 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2577" = type { %"class.blink::MemberBase.2578" }
%"class.blink::MemberBase.2578" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2579" = type { %"class.blink::MemberBase.2580" }
%"class.blink::MemberBase.2580" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2581" = type { %"class.blink::MemberBase.2582" }
%"class.blink::MemberBase.2582" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2583" = type { %"class.blink::MemberBase.2584" }
%"class.blink::MemberBase.2584" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2585" = type { %"class.blink::MemberBase.2586" }
%"class.blink::MemberBase.2586" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2589" = type { %"class.blink::MemberBase.2590" }
%"class.blink::MemberBase.2590" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2591" = type { %"class.blink::MemberBase.2592" }
%"class.blink::MemberBase.2592" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2593" }
%"class.blink::Member.2593" = type { %"class.blink::MemberBase.2594" }
%"class.blink::MemberBase.2594" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3024" }
%"class.mojo::Remote.3024" = type { %"class.mojo::internal::InterfacePtrState.3025" }
%"class.mojo::internal::InterfacePtrState.3025" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3026" }
%"class.std::__1::unique_ptr.3026" = type { %"class.std::__1::__compressed_pair.3027" }
%"class.std::__1::__compressed_pair.3027" = type { %"struct.std::__1::__compressed_pair_elem.3028" }
%"struct.std::__1::__compressed_pair_elem.3028" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2595" = type { %"class.std::__1::__compressed_pair.2596" }
%"class.std::__1::__compressed_pair.2596" = type { %"struct.std::__1::__compressed_pair_elem.2597" }
%"struct.std::__1::__compressed_pair_elem.2597" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2601" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2602" = type { %"class.std::__1::__compressed_pair.2603" }
%"class.std::__1::__compressed_pair.2603" = type { %"struct.std::__1::__compressed_pair_elem.2604" }
%"struct.std::__1::__compressed_pair_elem.2604" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2274" = type { %"class.absl::optional_internal::optional_data.2275" }
%"class.absl::optional_internal::optional_data.2275" = type { %"class.absl::optional_internal::optional_data_base.2276" }
%"class.absl::optional_internal::optional_data_base.2276" = type { %"class.absl::optional_internal::optional_data_dtor_base.2277" }
%"class.absl::optional_internal::optional_data_dtor_base.2277" = type { i8, %union.anon.2278 }
%union.anon.2278 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2608" = type { %"class.std::__1::__compressed_pair.2609" }
%"class.std::__1::__compressed_pair.2609" = type { %"struct.std::__1::__compressed_pair_elem.2610" }
%"struct.std::__1::__compressed_pair_elem.2610" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2614" }
%"class.blink::Member.2614" = type { %"class.blink::MemberBase.2615" }
%"class.blink::MemberBase.2615" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3034" }
%"class.mojo::AssociatedRemote.3034" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3035" }
%"class.mojo::internal::AssociatedInterfacePtrState.3035" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3036" }
%"class.std::__1::unique_ptr.3036" = type { %"class.std::__1::__compressed_pair.3037" }
%"class.std::__1::__compressed_pair.3037" = type { %"struct.std::__1::__compressed_pair_elem.3038" }
%"struct.std::__1::__compressed_pair_elem.3038" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2616" = type { %"class.blink::Member.2617" }
%"class.blink::Member.2617" = type { %"class.blink::MemberBase.2618" }
%"class.blink::MemberBase.2618" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3044" }
%"class.mojo::AssociatedRemote.3044" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3045" }
%"class.mojo::internal::AssociatedInterfacePtrState.3045" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3046" }
%"class.std::__1::unique_ptr.3046" = type { %"class.std::__1::__compressed_pair.3047" }
%"class.std::__1::__compressed_pair.3047" = type { %"struct.std::__1::__compressed_pair_elem.3048" }
%"struct.std::__1::__compressed_pair_elem.3048" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2619" }
%"class.blink::Member.2619" = type { %"class.blink::MemberBase.2620" }
%"class.blink::MemberBase.2620" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3054", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3054" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3055" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1655" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3055" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2621" = type { %"class.blink::Member.2622" }
%"class.blink::Member.2622" = type { %"class.blink::MemberBase.2623" }
%"class.blink::MemberBase.2623" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3058", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3059" }
%"class.blink::ThreadState::PrefinalizerRegistration.3058" = type { i8 }
%"class.mojo::AssociatedReceiver.3059" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3060" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3060" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2624" }
%"class.blink::Member.2624" = type { %"class.blink::MemberBase.2625" }
%"class.blink::MemberBase.2625" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3063", %"class.blink::Member.1857", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3063" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2155, %"class.std::__1::unique_ptr.1655", %"class.base::WeakPtrFactory.3064" }
%"class.base::WeakPtrFactory.3064" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2626" = type { %"class.blink::Member.2627" }
%"class.blink::Member.2627" = type { %"class.blink::MemberBase.2628" }
%"class.blink::MemberBase.2628" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3067", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3068" }
%"class.blink::ThreadState::PrefinalizerRegistration.3067" = type { i8 }
%"class.mojo::AssociatedReceiver.3068" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3069" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3069" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2631" = type { %"class.blink::MemberBase.2632" }
%"class.blink::MemberBase.2632" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::HeapHashMap.2637"* }
%"class.blink::HeapHashMap.2637" = type opaque
%"class.mojo::StructPtr.2638" = type { %"class.std::__1::unique_ptr.2639" }
%"class.std::__1::unique_ptr.2639" = type { %"class.std::__1::__compressed_pair.2640" }
%"class.std::__1::__compressed_pair.2640" = type { %"struct.std::__1::__compressed_pair_elem.2641" }
%"struct.std::__1::__compressed_pair_elem.2641" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2642", %"class.mojo::InlinedStructPtr.2643" }
%"class.mojo::InlinedStructPtr.2642" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2643" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2649" = type { %"class.absl::optional_internal::optional_data.2650" }
%"class.absl::optional_internal::optional_data.2650" = type { %"class.absl::optional_internal::optional_data_base.2651" }
%"class.absl::optional_internal::optional_data_base.2651" = type { %"class.absl::optional_internal::optional_data_dtor_base.2652" }
%"class.absl::optional_internal::optional_data_dtor_base.2652" = type { i8, %union.anon.2653 }
%union.anon.2653 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::ScopedPrintContext" = type { %"class.blink::PrintContext"* }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.2857", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2870" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.2855", %"class.blink::Member.1897", %"class.blink::Member.1897", i8, [7 x i8] }>
%"class.blink::Member.2855" = type { %"class.blink::MemberBase.2856" }
%"class.blink::MemberBase.2856" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2103", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.2857" = type { %"class.std::__1::__compressed_pair.2858" }
%"class.std::__1::__compressed_pair.2858" = type { %"struct.std::__1::__compressed_pair_elem.2859" }
%"struct.std::__1::__compressed_pair_elem.2859" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2860", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1959" }
%"class.WTF::HashMap.2860" = type { %"class.WTF::HashTable.2861" }
%"class.WTF::HashTable.2861" = type <{ %"struct.WTF::KeyValuePair.2864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2864" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2868" }
%"class.blink::Member.2868" = type { %"class.blink::MemberBase.2869" }
%"class.blink::MemberBase.2869" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2868" }
%"class.absl::optional.2870" = type { %"class.absl::optional_internal::optional_data.2871" }
%"class.absl::optional_internal::optional_data.2871" = type { %"class.absl::optional_internal::optional_data_base.2872" }
%"class.absl::optional_internal::optional_data_base.2872" = type { %"class.absl::optional_internal::optional_data_dtor_base.2873" }
%"class.absl::optional_internal::optional_data_dtor_base.2873" = type { i8, %union.anon.2874 }
%union.anon.2874 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3106", %"class.blink::Member.3108", %"class.blink::Member.3110", %"class.blink::Member.3129", %"class.blink::Member.3131" }
%"class.blink::Member.3106" = type { %"class.blink::MemberBase.3107" }
%"class.blink::MemberBase.3107" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3108" = type { %"class.blink::MemberBase.3109" }
%"class.blink::MemberBase.3109" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3110" = type { %"class.blink::MemberBase.3111" }
%"class.blink::MemberBase.3111" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3114", %"class.blink::HeapHashSet.3123" }
%"class.blink::HeapVector.3114" = type { %"class.WTF::Vector.3117" }
%"class.WTF::Vector.3117" = type { %"class.WTF::VectorBuffer.3118" }
%"class.WTF::VectorBuffer.3118" = type { %"class.WTF::VectorBufferBase.3119" }
%"class.WTF::VectorBufferBase.3119" = type { %"class.blink::Member.3120"*, i32, i32 }
%"class.blink::Member.3120" = type { %"class.blink::MemberBase.3121" }
%"class.blink::MemberBase.3121" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3123" = type { %"class.WTF::HashSet.3126" }
%"class.WTF::HashSet.3126" = type { %"class.WTF::HashTable.3127" }
%"class.WTF::HashTable.3127" = type <{ %"class.blink::Member.3120"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3129" = type { %"class.blink::MemberBase.3130" }
%"class.blink::MemberBase.3130" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3131" = type { %"class.blink::MemberBase.3132" }
%"class.blink::MemberBase.3132" = type { %"class.blink::HeapHashSet.3133"* }
%"class.blink::HeapHashSet.3133" = type opaque
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.2875", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.2955", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.WTF::Vector.2875" = type { %"class.WTF::VectorBuffer.2876" }
%"class.WTF::VectorBuffer.2876" = type { %"class.WTF::VectorBufferBase.2877" }
%"class.WTF::VectorBufferBase.2877" = type { %"class.std::__1::unique_ptr.2878"*, i32, i32 }
%"class.std::__1::unique_ptr.2878" = type { %"class.std::__1::__compressed_pair.2879" }
%"class.std::__1::__compressed_pair.2879" = type { %"struct.std::__1::__compressed_pair_elem.2880" }
%"struct.std::__1::__compressed_pair_elem.2880" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.2881, %class.sk_sp.2882, %class.sk_sp.2920, %class.sk_sp.2921, %class.sk_sp.2922, %class.sk_sp.817, i32, float, float, i32, %union.anon.2923, [4 x i8] }>
%class.sk_sp.2881 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2882 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.2883", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.2891, i32, %"class.absl::optional.2907", %"class.std::__1::vector.842", %"class.std::__1::vector.2912", %class.sk_sp.2919, %class.sk_sp.2888, i32, [4 x i8] }>
%"class.absl::optional.2883" = type { %"class.absl::optional_internal::optional_data.2884" }
%"class.absl::optional_internal::optional_data.2884" = type { %"class.absl::optional_internal::optional_data_base.2885" }
%"class.absl::optional_internal::optional_data_base.2885" = type { %"class.absl::optional_internal::optional_data_dtor_base.2886" }
%"class.absl::optional_internal::optional_data_dtor_base.2886" = type { i8, %union.anon.2887 }
%union.anon.2887 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.2888, %class.sk_sp.2891, %"class.gfx::Rect", i32, %class.sk_sp.2896, %class.sk_sp.2904, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2888, %class.scoped_refptr.2905 }
%class.sk_sp.2896 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.2897" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2889, i32, i32 }
%class.sk_sp.2889 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2890, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2890 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.2897" = type { %"class.std::__1::__vector_base.2898" }
%"class.std::__1::__vector_base.2898" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.2899" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.2899" = type { %"struct.std::__1::__compressed_pair_elem.2900" }
%"struct.std::__1::__compressed_pair_elem.2900" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.2904 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.2905 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2906", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2906" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.2891 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.2892", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2892" = type { %"class.std::__1::__compressed_pair.2893" }
%"class.std::__1::__compressed_pair.2893" = type { %"struct.std::__1::__compressed_pair_elem.2894" }
%"struct.std::__1::__compressed_pair_elem.2894" = type { i8* }
%"class.absl::optional.2907" = type { %"class.absl::optional_internal::optional_data.2908" }
%"class.absl::optional_internal::optional_data.2908" = type { %"class.absl::optional_internal::optional_data_base.2909" }
%"class.absl::optional_internal::optional_data_base.2909" = type { %"class.absl::optional_internal::optional_data_dtor_base.2910" }
%"class.absl::optional_internal::optional_data_dtor_base.2910" = type { i8, %union.anon.2911 }
%union.anon.2911 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.2912" = type { %"class.std::__1::__vector_base.2913" }
%"class.std::__1::__vector_base.2913" = type { float*, float*, %"class.std::__1::__compressed_pair.2914" }
%"class.std::__1::__compressed_pair.2914" = type { %"struct.std::__1::__compressed_pair_elem.2915" }
%"struct.std::__1::__compressed_pair_elem.2915" = type { float* }
%class.sk_sp.2919 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%class.sk_sp.2888 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.2920 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2921 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2922 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.2923 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.2881 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.2929, %"class.std::__1::unique_ptr.2930" }
%class.scoped_refptr.2929 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.2930" = type { %"class.std::__1::__compressed_pair.2931" }
%"class.std::__1::__compressed_pair.2931" = type { %"struct.std::__1::__compressed_pair_elem.2932" }
%"struct.std::__1::__compressed_pair_elem.2932" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.2933", %struct.SkRect }
%"class.absl::optional.2933" = type { %"class.absl::optional_internal::optional_data.2934" }
%"class.absl::optional_internal::optional_data.2934" = type { %"class.absl::optional_internal::optional_data_base.2935" }
%"class.absl::optional_internal::optional_data_base.2935" = type { %"class.absl::optional_internal::optional_data_dtor_base.2936" }
%"class.absl::optional_internal::optional_data_dtor_base.2936" = type { i8, %union.anon.2937 }
%union.anon.2937 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.2938, [384 x i64], %class.sk_sp.2939, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.2940", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.2946" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.2938 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.2939 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.2940" = type { %"class.std::__1::__compressed_pair.2941" }
%"class.std::__1::__compressed_pair.2941" = type { %"struct.std::__1::__compressed_pair_elem.2942" }
%"struct.std::__1::__compressed_pair_elem.2942" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.2946" = type { %"class.std::__1::__compressed_pair.2947" }
%"class.std::__1::__compressed_pair.2947" = type { %"struct.std::__1::__compressed_pair_elem.2948" }
%"struct.std::__1::__compressed_pair_elem.2948" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.2955" = type { %"class.std::__1::__compressed_pair.2956" }
%"class.std::__1::__compressed_pair.2956" = type { %"struct.std::__1::__compressed_pair_elem.2957" }
%"struct.std::__1::__compressed_pair_elem.2957" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.2976", %"class.std::__1::unique_ptr.2981" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.2958", %"class.std::__1::unique_ptr.2958", %"class.std::__1::unique_ptr.2964", %"class.std::__1::unique_ptr.2970", %class.sk_sp.2921 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2958" = type { %"class.std::__1::__compressed_pair.2959" }
%"class.std::__1::__compressed_pair.2959" = type { %"struct.std::__1::__compressed_pair_elem.2960" }
%"struct.std::__1::__compressed_pair_elem.2960" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.2964" = type { %"class.std::__1::__compressed_pair.2965" }
%"class.std::__1::__compressed_pair.2965" = type { %"struct.std::__1::__compressed_pair_elem.2966" }
%"struct.std::__1::__compressed_pair_elem.2966" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.2970" = type { %"class.std::__1::__compressed_pair.2971" }
%"class.std::__1::__compressed_pair.2971" = type { %"struct.std::__1::__compressed_pair_elem.2972" }
%"struct.std::__1::__compressed_pair_elem.2972" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.2976" = type { %"class.absl::optional_internal::optional_data.2977" }
%"class.absl::optional_internal::optional_data.2977" = type { %"class.absl::optional_internal::optional_data_base.2978" }
%"class.absl::optional_internal::optional_data_base.2978" = type { %"class.absl::optional_internal::optional_data_dtor_base.2979" }
%"class.absl::optional_internal::optional_data_dtor_base.2979" = type { i8, %union.anon.2980 }
%union.anon.2980 = type { i32 }
%"class.std::__1::unique_ptr.2981" = type { %"class.std::__1::__compressed_pair.2982" }
%"class.std::__1::__compressed_pair.2982" = type { %"struct.std::__1::__compressed_pair_elem.2983" }
%"struct.std::__1::__compressed_pair_elem.2983" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2990", %"class.WTF::String" }
%"class.WTF::StringAppend.2990" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.WTF::StringAppend.2991" = type { %"class.WTF::String", i8* }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.WTF::StringTypeAdapter.3174" = type { %"class.WTF::StringTypeAdapter.3175" }
%"class.WTF::StringTypeAdapter.3175" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.3177" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.2994" = type { %"class.WTF::StringAppend.2995", %"class.WTF::String" }
%"class.WTF::StringAppend.2995" = type <{ %"class.WTF::StringAppend.2996", i8, [7 x i8] }>
%"class.WTF::StringAppend.2996" = type { %"class.WTF::StringAppend.2997", %"class.WTF::String" }
%"class.WTF::StringAppend.2997" = type <{ %"class.WTF::StringAppend.2998", i8, [7 x i8] }>
%"class.WTF::StringAppend.2998" = type { %"class.WTF::StringAppend.2999", %"class.WTF::String" }
%"class.WTF::StringAppend.2999" = type { %"class.WTF::StringAppend.3000", i8* }
%"class.WTF::StringAppend.3000" = type { %"class.WTF::StringAppend.3001", %"class.WTF::String" }
%"class.WTF::StringAppend.3001" = type { %"class.WTF::StringAppend.3002", i8* }
%"class.WTF::StringAppend.3002" = type { i8*, %"class.WTF::String" }
%"struct.blink::WebPrintPageDescription" = type <{ %"class.blink::WebDoubleSize", i32, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::WebDoubleSize" = type { double, double }
%"class.WTF::StringAppend.2992" = type { %"class.WTF::StringAppend.2993", %"class.WTF::String" }
%"class.WTF::StringAppend.2993" = type <{ %"class.WTF::StringAppend.2994", i8, [7 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTFplINS_6StringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_EEcEES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSG_SH_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSE_SF_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSC_SD_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_cEENS1_INS1_IT_T0_EET1_EERKSB_SC_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_ = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_EcvS3_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev = comdat any

$_ZNK3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm = comdat any

$_ZN3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_4NodeEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_4NodeEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEcEES1_EC2ES2_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEC2ES8_c = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EC2ES9_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EC2ERKSA_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_EC2ESD_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6Is8BitEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12PrintContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12PrintContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_12PrintContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_12PrintContextEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12PrintContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12PrintContextEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink12PrintContextE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PrintContext"*)* @_ZN5blink12PrintContextD2Ev to i8*), i8* bitcast (void (%"class.blink::PrintContext"*)* @_ZN5blink12PrintContextD0Ev to i8*), i8* bitcast (void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)* @_ZN5blink12PrintContext16ComputePageRectsERKNS_9FloatSizeE to i8*), i8* bitcast (void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)* @_ZN5blink12PrintContext28ComputePageRectsWithPageSizeERKNS_9FloatSizeE to i8*), i8* bitcast (void (%"class.blink::PrintContext"*, float, float)* @_ZN5blink12PrintContext14BeginPrintModeEff to i8*), i8* bitcast (void (%"class.blink::PrintContext"*)* @_ZN5blink12PrintContext12EndPrintModeEv to i8*), i8* bitcast (void (%"class.blink::PrintContext"*, %"class.blink::Visitor"*)* @_ZNK5blink12PrintContext5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink10html_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [12 x i8] c"margin-left\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"line-height\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"font-size\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"font-family\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"pageProperty() unimplemented for: \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IntRect]\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.17 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.18 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_4NodeEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.21 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [368 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::Node> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::Node> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.23 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PrintContextEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PrintContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12PrintContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12PrintContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12PrintContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12PrintContextEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12PrintContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink12PrintContextC1EPNS_10LocalFrameEb = hidden unnamed_addr alias void (%"class.blink::PrintContext"*, %"class.blink::LocalFrame"*, i1), void (%"class.blink::PrintContext"*, %"class.blink::LocalFrame"*, i1)* @_ZN5blink12PrintContextC2EPNS_10LocalFrameEb
@_ZN5blink12PrintContextD1Ev = hidden unnamed_addr alias void (%"class.blink::PrintContext"*), void (%"class.blink::PrintContext"*)* @_ZN5blink12PrintContextD2Ev
@_ZN5blink18ScopedPrintContextC1EPNS_10LocalFrameE = hidden unnamed_addr alias void (%"class.blink::ScopedPrintContext"*, %"class.blink::LocalFrame"*), void (%"class.blink::ScopedPrintContext"*, %"class.blink::LocalFrame"*)* @_ZN5blink18ScopedPrintContextC2EPNS_10LocalFrameE
@_ZN5blink18ScopedPrintContextD1Ev = hidden unnamed_addr alias void (%"class.blink::ScopedPrintContext"*), void (%"class.blink::ScopedPrintContext"*)* @_ZN5blink18ScopedPrintContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContextC2EPNS_10LocalFrameEb(%"class.blink::PrintContext"* nocapture, %"class.blink::LocalFrame"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12PrintContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::LocalFrame"* %1, %"class.blink::LocalFrame"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 4
  %9 = bitcast %"class.WTF::Vector.1959"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 17, i1 false)
  store i8 %4, i8* %8, align 1
  %10 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6
  %11 = bitcast %"class.blink::HeapHashMap.2846"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #12
  %12 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 7
  store i8 0, i8* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContextD2Ev(%"class.blink::PrintContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12PrintContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %3, align 8
  %5 = icmp eq %"class.blink::IntRect"* %4, null
  %6 = bitcast %"class.blink::IntRect"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #12
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContextD0Ev(%"class.blink::PrintContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12PrintContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %3, align 8
  %5 = icmp eq %"class.blink::IntRect"* %4, null
  %6 = bitcast %"class.blink::IntRect"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #12
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContext16ComputePageRectsERKNS_9FloatSizeE(%"class.blink::PrintContext"*, %"class.blink::FloatSize"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::IntRect", align 4
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.blink::FloatSize"*
  %6 = alloca %"class.blink::FloatSize", align 4
  %7 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  %17 = bitcast %"class.WTF::Vector.1959"* %7 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.WTF::Vector.1959"* %7 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store i32 0, i32* %8, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %18) #12
  br label %20

20:                                               ; preds = %2, %16
  %21 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %22, i64 0, i32 11, i32 0, i32 0
  %24 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %23, align 8
  %25 = icmp eq %"class.blink::LocalFrameView"* %24, null
  br i1 %25, label %85, label %26

26:                                               ; preds = %20
  %27 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %22) #12
  %28 = icmp eq %"class.blink::Document"* %27, null
  br i1 %28, label %85, label %29

29:                                               ; preds = %26
  %30 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %21, align 8
  %31 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %30) #12
  %32 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 113
  %33 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutView"* %33, null
  br i1 %34, label %85, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %65

39:                                               ; preds = %35
  %40 = bitcast %"class.blink::IntRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = fptosi float %46 to i32
  %48 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %49 = load float, float* %48, align 4
  %50 = fptosi float %49 to i32
  store i32 0, i32* %41, align 4
  store i32 0, i32* %42, align 4
  store i32 %47, i32* %43, align 4
  store i32 %50, i32* %44, align 4
  %51 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* %8, align 8
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %63, label %55, !prof !3

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"class.WTF::Vector.1959", %"class.WTF::Vector.1959"* %7, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %56, align 8
  %58 = zext i32 %52 to i64
  %59 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %57, i64 %58
  %60 = bitcast %"class.blink::IntRect"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* nonnull align 4 %40, i64 16, i1 false) #12
  %61 = load i32, i32* %51, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %51, align 4
  br label %64

63:                                               ; preds = %39
  call void @_ZN3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1959"* %7, %"class.blink::IntRect"* nonnull dereferenceable(16) %3) #12
  br label %64

64:                                               ; preds = %55, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #12
  br label %85

65:                                               ; preds = %35
  %66 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %21, align 8
  %67 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %66) #12
  %68 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %67, i64 0, i32 113
  %69 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %68, align 8
  %70 = tail call { i64, i64 } @_ZNK5blink10LayoutView12DocumentRectEv(%"class.blink::LayoutView"* %69) #12
  %71 = extractvalue { i64, i64 } %70, 1
  %72 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #12
  %73 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %21, align 8
  %74 = bitcast %"class.blink::FloatSize"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #12
  %75 = trunc i64 %71 to i32
  %76 = sitofp i32 %75 to float
  %77 = fmul float %76, 1.562500e-02
  %78 = lshr i64 %71, 32
  %79 = trunc i64 %78 to i32
  %80 = sitofp i32 %79 to float
  %81 = fmul float %80, 1.562500e-02
  %82 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %6, i64 0, i32 0
  store float %77, float* %82, align 4
  %83 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %6, i64 0, i32 1
  store float %81, float* %83, align 4
  %84 = call <2 x float> @_ZNK5blink10LocalFrame27ResizePageRectsKeepingRatioERKNS_9FloatSizeES3_(%"class.blink::LocalFrame"* %73, %"class.blink::FloatSize"* dereferenceable(8) %1, %"class.blink::FloatSize"* nonnull dereferenceable(8) %6) #12
  store <2 x float> %84, <2 x float>* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #12
  call void @_ZN5blink12PrintContext36ComputePageRectsWithPageSizeInternalERKNS_9FloatSizeE(%"class.blink::PrintContext"* %0, %"class.blink::FloatSize"* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #12
  br label %85

85:                                               ; preds = %29, %20, %26, %65, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12PrintContext12IsFrameValidEv(%"class.blink::PrintContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %3, i64 0, i32 11, i32 0, i32 0
  %5 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %4, align 8
  %6 = icmp eq %"class.blink::LocalFrameView"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %3) #12
  %9 = icmp eq %"class.blink::Document"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %2, align 8
  %12 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %11) #12
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 113
  %14 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %13, align 8
  %15 = icmp ne %"class.blink::LayoutView"* %14, null
  br label %16

16:                                               ; preds = %7, %1, %10
  %17 = phi i1 [ false, %7 ], [ false, %1 ], [ %15, %10 ]
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5blink10LayoutView12DocumentRectEv(%"class.blink::LayoutView"*) local_unnamed_addr #3

declare <2 x float> @_ZNK5blink10LocalFrame27ResizePageRectsKeepingRatioERKNS_9FloatSizeES3_(%"class.blink::LocalFrame"*, %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContext36ComputePageRectsWithPageSizeInternalERKNS_9FloatSizeE(%"class.blink::PrintContext"*, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::IntRect", align 8
  %4 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %5, i64 0, i32 11, i32 0, i32 0
  %7 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %6, align 8
  %8 = icmp eq %"class.blink::LocalFrameView"* %7, null
  br i1 %8, label %184, label %9

9:                                                ; preds = %2
  %10 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %5) #12
  %11 = icmp eq %"class.blink::Document"* %10, null
  br i1 %11, label %184, label %12

12:                                               ; preds = %9
  %13 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %14 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %13) #12
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 113
  %16 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutView"* %16, null
  br i1 %17, label %184, label %18

18:                                               ; preds = %12
  %19 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %20 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %19) #12
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 113
  %22 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %21, align 8
  %23 = tail call { i64, i64 } @_ZNK5blink10LayoutView12DocumentRectEv(%"class.blink::LayoutView"* %22) #12
  %24 = extractvalue { i64, i64 } %23, 0
  %25 = trunc i64 %24 to i32
  %26 = lshr i64 %24, 32
  %27 = trunc i64 %26 to i32
  %28 = extractvalue { i64, i64 } %23, 1
  %29 = sdiv i32 %25, 64
  %30 = srem i32 %25, 64
  %31 = add nsw i32 %30, 32
  %32 = ashr i32 %31, 6
  %33 = add nsw i32 %32, %29
  %34 = sdiv i32 %27, 64
  %35 = srem i32 %27, 64
  %36 = add nsw i32 %35, 32
  %37 = ashr i32 %36, 6
  %38 = add nsw i32 %37, %34
  %39 = trunc i64 %28 to i32
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %39) #12
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !3
  %46 = sdiv i32 %45, 64
  %47 = srem i32 %45, 64
  %48 = add nsw i32 %47, 32
  %49 = ashr i32 %48, 6
  %50 = sub nsw i32 %46, %32
  %51 = add nsw i32 %49, %50
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %18
  %54 = add i32 %39, 4
  %55 = icmp ugt i32 %54, 8
  br i1 %55, label %56, label %59, !prof !5

56:                                               ; preds = %53
  %57 = icmp sgt i32 %39, 0
  %58 = select i1 %57, i32 1, i32 -1
  br label %59

59:                                               ; preds = %56, %53, %18
  %60 = phi i32 [ %58, %56 ], [ %51, %18 ], [ 0, %53 ]
  %61 = lshr i64 %28, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %62) #12
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !3
  %69 = sdiv i32 %68, 64
  %70 = srem i32 %68, 64
  %71 = add nsw i32 %70, 32
  %72 = ashr i32 %71, 6
  %73 = sub nsw i32 %69, %37
  %74 = add nsw i32 %72, %73
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %59
  %77 = add i32 %62, 4
  %78 = icmp ugt i32 %77, 8
  br i1 %78, label %79, label %82, !prof !5

79:                                               ; preds = %76
  %80 = icmp sgt i32 %62, 0
  %81 = select i1 %80, i32 1, i32 -1
  br label %82

82:                                               ; preds = %59, %76, %79
  %83 = phi i32 [ %81, %79 ], [ %74, %59 ], [ 0, %76 ]
  %84 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = fptosi float %85 to i32
  %87 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = fadd float %88, 1.562500e-02
  %90 = fptosi float %89 to i32
  %91 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %92 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %92, i64 0, i32 0, i32 9
  %94 = bitcast [20 x i8]* %93 to i160*
  %95 = load i160, i160* %94, align 8
  %96 = and i160 %95, 15211807202738752817960438464512
  %97 = icmp eq i160 %96, 0
  %98 = add nsw i32 %60, %33
  %99 = add nsw i32 %83, %38
  %100 = select i1 %97, i32 %86, i32 %90
  %101 = select i1 %97, i32 %90, i32 %86
  %102 = select i1 %97, i32 %83, i32 %60
  %103 = select i1 %97, i32 %33, i32 %38
  %104 = select i1 %97, i32 %98, i32 %99
  %105 = select i1 %97, i32 %38, i32 %33
  %106 = select i1 %97, i32 %99, i32 %98
  %107 = and i160 %95, 41538374868278621028243970633760768
  %108 = icmp eq i160 %107, 0
  %109 = select i1 %108, i32 %103, i32 %104
  %110 = icmp eq i160 %96, 5070602400912917605986812821504
  %111 = select i1 %110, i32 %106, i32 %105
  %112 = sitofp i32 %102 to float
  %113 = sitofp i32 %101 to float
  %114 = fdiv float %112, %113
  %115 = tail call float @llvm.ceil.f32(float %114)
  %116 = fptoui float %115 to i32
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %184, label %118

118:                                              ; preds = %82
  %119 = select i1 %110, i32 %105, i32 %106
  %120 = select i1 %108, i32 %104, i32 %103
  %121 = icmp sgt i32 %119, %111
  %122 = icmp sgt i32 %120, %109
  %123 = select i1 %122, i32 0, i32 %100
  %124 = sub nsw i32 %109, %123
  %125 = bitcast %"class.blink::IntRect"* %3 to i8*
  %126 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1, i32 0
  %129 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1, i32 1
  %130 = zext i32 %124 to i64
  %131 = shl nuw i64 %130, 32
  %132 = zext i32 %100 to i64
  %133 = shl nuw i64 %132, 32
  %134 = zext i32 %101 to i64
  %135 = or i64 %133, %134
  %136 = bitcast %"class.blink::IntRect"* %3 to i64*
  %137 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1
  %138 = bitcast %"class.blink::IntSize"* %137 to i64*
  %139 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2
  %140 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %141 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %142 = getelementptr inbounds %"class.WTF::Vector.1959", %"class.WTF::Vector.1959"* %139, i64 0, i32 0, i32 0, i32 0
  br label %143

143:                                              ; preds = %181, %118
  %144 = phi i32 [ 0, %118 ], [ %182, %181 ]
  br i1 %121, label %145, label %148

145:                                              ; preds = %143
  %146 = mul i32 %144, %101
  %147 = add i32 %146, %111
  br label %152

148:                                              ; preds = %143
  %149 = add nuw i32 %144, 1
  %150 = mul i32 %149, %101
  %151 = sub i32 %111, %150
  br label %152

152:                                              ; preds = %148, %145
  %153 = phi i32 [ %147, %145 ], [ %151, %148 ]
  %154 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %155 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %154, i64 0, i32 11, i32 0, i32 0
  %156 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %155, align 8
  %157 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* %156) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #12
  store i32 %124, i32* %126, align 8
  store i32 %153, i32* %127, align 4
  store i32 %100, i32* %128, align 8
  store i32 %101, i32* %129, align 4
  br i1 %97, label %161, label %158

158:                                              ; preds = %152
  %159 = zext i32 %153 to i64
  %160 = or i64 %131, %159
  store i64 %160, i64* %136, align 8
  store i64 %135, i64* %138, align 8
  br label %161

161:                                              ; preds = %158, %152
  %162 = call i64 @_ZNK5blink24PaintLayerScrollableArea15ScrollOffsetIntEv(%"class.blink::PaintLayerScrollableArea"* %157) #12
  %163 = trunc i64 %162 to i32
  %164 = lshr i64 %162, 32
  %165 = trunc i64 %164 to i32
  %166 = load i32, i32* %126, align 8
  %167 = sub i32 %166, %163
  store i32 %167, i32* %126, align 8
  %168 = load i32, i32* %127, align 4
  %169 = sub i32 %168, %165
  store i32 %169, i32* %127, align 4
  %170 = load i32, i32* %140, align 4
  %171 = load i32, i32* %141, align 8
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %180, label %173, !prof !3

173:                                              ; preds = %161
  %174 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %142, align 8
  %175 = zext i32 %170 to i64
  %176 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %174, i64 %175
  %177 = bitcast %"class.blink::IntRect"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* nonnull align 8 %125, i64 16, i1 false) #12
  %178 = load i32, i32* %140, align 4
  %179 = add i32 %178, 1
  store i32 %179, i32* %140, align 4
  br label %181

180:                                              ; preds = %161
  call void @_ZN3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1959"* %139, %"class.blink::IntRect"* nonnull dereferenceable(16) %3) #12
  br label %181

181:                                              ; preds = %173, %180
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #12
  %182 = add nuw i32 %144, 1
  %183 = icmp eq i32 %182, %116
  br i1 %183, label %184, label %143

184:                                              ; preds = %181, %82, %12, %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContext28ComputePageRectsWithPageSizeERKNS_9FloatSizeE(%"class.blink::PrintContext"*, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  %13 = bitcast %"class.WTF::Vector.1959"* %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.WTF::Vector.1959"* %3 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store i32 0, i32* %4, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %14) #12
  br label %16

16:                                               ; preds = %2, %12
  tail call void @_ZN5blink12PrintContext36ComputePageRectsWithPageSizeInternalERKNS_9FloatSizeE(%"class.blink::PrintContext"* %0, %"class.blink::FloatSize"* dereferenceable(8) %1)
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZNK5blink24PaintLayerScrollableArea15ScrollOffsetIntEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContext14BeginPrintModeEff(%"class.blink::PrintContext"* nocapture, float, float) unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::FloatSize", align 4
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.blink::FloatSize"*
  %7 = alloca %"class.blink::FloatSize", align 4
  %8 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 3
  store i8 1, i8* %8, align 8
  %9 = bitcast %"class.blink::FloatSize"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 1
  store float %1, float* %10, align 4
  store float %2, float* %11, align 4
  %12 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %13, align 8
  %15 = bitcast %"class.blink::FloatSize"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = fmul float %1, 0x3FF5555560000000
  %17 = fmul float %2, 0x3FF5555560000000
  %18 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %7, i64 0, i32 0
  store float %16, float* %18, align 4
  %19 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %7, i64 0, i32 1
  store float %17, float* %19, align 4
  %20 = call <2 x float> @_ZNK5blink10LocalFrame27ResizePageRectsKeepingRatioERKNS_9FloatSizeES3_(%"class.blink::LocalFrame"* %14, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4, %"class.blink::FloatSize"* nonnull dereferenceable(8) %7) #12
  store <2 x float> %20, <2 x float>* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %21 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %13, align 8
  call void @_ZN5blink10LocalFrame13StartPrintingERKNS_9FloatSizeES3_f(%"class.blink::LocalFrame"* %21, %"class.blink::FloatSize"* nonnull dereferenceable(8) %6, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4, float 1.500000e+00) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

declare void @_ZN5blink10LocalFrame13StartPrintingERKNS_9FloatSizeES3_f(%"class.blink::LocalFrame"*, %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContext12EndPrintModeEv(%"class.blink::PrintContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 3
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %4, i64 0, i32 11, i32 0, i32 0
  %6 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %5, align 8
  %7 = icmp eq %"class.blink::LocalFrameView"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %4) #12
  %10 = icmp eq %"class.blink::Document"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %8
  %12 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %3, align 8
  %13 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %12) #12
  %14 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %13, i64 0, i32 113
  %15 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutView"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %3, align 8
  tail call void @_ZN5blink10LocalFrame11EndPrintingEv(%"class.blink::LocalFrame"* %18) #12
  %19 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %19, i64 0, i32 0
  %21 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %20) #12
  %22 = tail call dereferenceable(136) %"class.blink::PageScaleConstraintsSet"* @_ZN5blink4Page26GetPageScaleConstraintsSetEv(%"class.blink::Page"* %21) #12
  tail call void @_ZN5blink23PageScaleConstraintsSet13SetNeedsResetEb(%"class.blink::PageScaleConstraintsSet"* %22, i1 zeroext true) #12
  br label %23

23:                                               ; preds = %11, %1, %8, %17
  %24 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6, i32 0
  %25 = getelementptr inbounds %"class.WTF::HashMap.2849", %"class.WTF::HashMap.2849"* %24, i64 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair.2852"* %26, null
  br i1 %27, label %64, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %57, %32
  %35 = phi i64 [ 0, %32 ], [ %58, %57 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %26, i64 %35
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = ptrtoint %"class.WTF::StringImpl"* %38 to i64
  switch i64 %39, label %40 [
    i64 -1, label %57
    i64 0, label %57
  ]

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %52, %49
  %54 = bitcast %"struct.WTF::KeyValuePair.2852"* %36 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %26, i64 %35, i32 1
  %56 = bitcast %"class.blink::Member.318"* %55 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  br label %57

57:                                               ; preds = %53, %34, %34
  %58 = add nuw nsw i64 %35, 1
  %59 = icmp eq i64 %58, %33
  br i1 %59, label %60, label %34

60:                                               ; preds = %57, %28
  %61 = bitcast %"struct.WTF::KeyValuePair.2852"* %26 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %61) #12
  %62 = bitcast %"class.WTF::HashMap.2849"* %24 to i64*
  store atomic i64 0, i64* %62 monotonic, align 8
  store i32 0, i32* %29, align 8
  %63 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  store i32 0, i32* %63, align 4
  br label %64

64:                                               ; preds = %23, %60
  %65 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 7
  store i8 0, i8* %65, align 8
  ret void
}

declare void @_ZN5blink10LocalFrame11EndPrintingEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare dereferenceable(136) %"class.blink::PageScaleConstraintsSet"* @_ZN5blink4Page26GetPageScaleConstraintsSetEv(%"class.blink::Page"*) local_unnamed_addr #3

declare void @_ZN5blink23PageScaleConstraintsSet13SetNeedsResetEb(%"class.blink::PageScaleConstraintsSet"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12PrintContext20PageNumberForElementEPNS_7ElementERKNS_9FloatSizeE(%"class.blink::Element"* nocapture readonly, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::FloatSize"*
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %8, i32 19) #12
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %11) #12
  %13 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = ptrtoint %"class.blink::LocalFrame"* %12 to i64
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12PrintContextEEEPhm(i64 72) #12
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12PrintContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %17, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %18, i64 16
  %23 = getelementptr inbounds i8, i8* %18, i64 33
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 17, i1 false) #12
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #12
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = bitcast i8* %18 to %"class.blink::PrintContext"*
  %31 = bitcast i8* %18 to void (%"class.blink::PrintContext"*, float, float)***
  %32 = load void (%"class.blink::PrintContext"*, float, float)**, void (%"class.blink::PrintContext"*, float, float)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::PrintContext"*, float, float)*, void (%"class.blink::PrintContext"*, float, float)** %32, i64 4
  %34 = load void (%"class.blink::PrintContext"*, float, float)*, void (%"class.blink::PrintContext"*, float, float)** %33, align 8
  tail call void %34(%"class.blink::PrintContext"* %30, float %14, float %16) #12
  %35 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %38, label %44, label %40

40:                                               ; preds = %2
  %41 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRareData"**
  %42 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %42, i64 0, i32 1, i32 0, i32 0
  br label %46

44:                                               ; preds = %2
  %45 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRenderingData"**
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi %"class.blink::NodeRenderingData"** [ %43, %40 ], [ %45, %44 ]
  %48 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %48, i64 0, i32 1
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = icmp eq %"class.blink::LayoutObject"* %50, null
  br i1 %51, label %141, label %52

52:                                               ; preds = %46, %59
  %53 = phi %"class.blink::LayoutObject"* [ %61, %59 ], [ %50, %46 ]
  %54 = bitcast %"class.blink::LayoutObject"* %53 to i1 (%"class.blink::LayoutObject"*)***
  %55 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, i64 20
  %57 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* nonnull %53) #12
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 0, i32 7
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp eq %"class.blink::LayoutObject"* %61, null
  br i1 %62, label %141, label %52

63:                                               ; preds = %52
  %64 = bitcast %"class.blink::LayoutObject"* %53 to %"class.blink::LayoutBoxModelObject"*
  %65 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12
  %66 = bitcast i64* %3 to float*
  %67 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 1
  %68 = bitcast %"class.blink::FloatSize"* %1 to i64*
  %69 = load i64, i64* %68, align 4
  %70 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %12, i64 0, i32 11, i32 0, i32 0
  %71 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %70, align 8
  %72 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* %71) #12
  %73 = tail call i64 @_ZNK5blink24PaintLayerScrollableArea12ContentsSizeEv(%"class.blink::PaintLayerScrollableArea"* %72) #12
  %74 = trunc i64 %73 to i32
  %75 = sitofp i32 %74 to float
  %76 = fdiv float %75, %14
  %77 = trunc i64 %69 to i32
  %78 = bitcast i32 %77 to float
  %79 = fmul float %76, %78
  store float %79, float* %66, align 8
  %80 = lshr i64 %69, 32
  %81 = trunc i64 %80 to i32
  %82 = bitcast i32 %81 to float
  %83 = fmul float %76, %82
  store float %83, float* %67, align 4
  %84 = bitcast i8* %18 to void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)***
  %85 = load void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)**, void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)*, void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)** %85, i64 3
  %87 = load void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)*, void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)** %86, align 8
  call void %87(%"class.blink::PrintContext"* %30, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4) #12
  %88 = call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* nonnull %53, %"class.blink::Element"* null) #12
  %89 = bitcast %"class.blink::LayoutObject"* %53 to i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)***
  %90 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)**, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*** %89, align 8
  %91 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %90, i64 109
  %92 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %91, align 8
  %93 = call i32 %92(%"class.blink::LayoutBoxModelObject"* nonnull %64, %"class.blink::Element"* %88) #12
  %94 = sdiv i32 %93, 64
  %95 = srem i32 %93, 64
  %96 = add nsw i32 %95, 32
  %97 = ashr i32 %96, 6
  %98 = add nsw i32 %97, %94
  %99 = call %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"* nonnull %53, %"class.blink::Element"* null) #12
  %100 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)**, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*** %89, align 8
  %101 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %100, i64 108
  %102 = load i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)*, i32 (%"class.blink::LayoutBoxModelObject"*, %"class.blink::Element"*)** %101, align 8
  %103 = call i32 %102(%"class.blink::LayoutBoxModelObject"* nonnull %64, %"class.blink::Element"* %99) #12
  %104 = sdiv i32 %103, 64
  %105 = srem i32 %103, 64
  %106 = add nsw i32 %105, 32
  %107 = ashr i32 %106, 6
  %108 = add nsw i32 %107, %104
  %109 = getelementptr inbounds i8, i8* %18, i64 28
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %139, label %113

113:                                              ; preds = %63
  %114 = bitcast i8* %22 to %"class.WTF::Vector.1959"*
  br label %115

115:                                              ; preds = %113, %135
  %116 = phi i32 [ 0, %113 ], [ %136, %135 ]
  %117 = call dereferenceable(16) %"class.blink::IntRect"* @_ZNK3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1959"* %114, i32 %116) #12
  %118 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %117, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, %108
  br i1 %120, label %135, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %117, i64 0, i32 1, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = add nsw i32 %123, %119
  %125 = icmp sgt i32 %124, %108
  br i1 %125, label %126, label %135

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %117, i64 0, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp sgt i32 %128, %98
  br i1 %129, label %135, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %117, i64 0, i32 1, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = add nsw i32 %132, %128
  %134 = icmp sgt i32 %133, %98
  br i1 %134, label %139, label %135

135:                                              ; preds = %115, %121, %126, %130
  %136 = add nuw i32 %116, 1
  %137 = load i32, i32* %110, align 4
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %115, label %139

139:                                              ; preds = %130, %135, %63
  %140 = phi i32 [ -1, %63 ], [ -1, %135 ], [ %116, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12
  br label %141

141:                                              ; preds = %59, %46, %139
  %142 = phi i32 [ %140, %139 ], [ -1, %46 ], [ -1, %59 ]
  %143 = bitcast i8* %18 to void (%"class.blink::PrintContext"*)***
  %144 = load void (%"class.blink::PrintContext"*)**, void (%"class.blink::PrintContext"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %144, i64 5
  %146 = load void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %145, align 8
  call void %146(%"class.blink::PrintContext"* %30) #12
  ret i32 %142
}

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #3

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare i64 @_ZNK5blink24PaintLayerScrollableArea12ContentsSizeEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #3

declare %"class.blink::Element"* @_ZNK5blink12LayoutObject12OffsetParentEPKNS_7ElementE(%"class.blink::LayoutObject"*, %"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContext25CollectLinkedDestinationsEPNS_4NodeE(%"class.blink::PrintContext"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = icmp eq %"class.blink::Node"* %1, null
  br i1 %6, label %97, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %14 = bitcast %"class.blink::Node"* %13 to %"class.blink::Node"**
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %18, label %23

17:                                               ; preds = %23
  br i1 %6, label %97, label %18

18:                                               ; preds = %7, %12, %17
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 76
  %22 = icmp eq i32 %21, 64
  br i1 %22, label %28, label %97

23:                                               ; preds = %12, %23
  %24 = phi %"class.blink::Node"* [ %26, %23 ], [ %15, %12 ]
  tail call void @_ZN5blink12PrintContext25CollectLinkedDestinationsEPNS_4NodeE(%"class.blink::PrintContext"* %0, %"class.blink::Node"* nonnull %24)
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %17, label %23

28:                                               ; preds = %18
  %29 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %31 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %29, %"class.blink::QualifiedName"* dereferenceable(8) %30) #12
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %97, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %36) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 112, i1 false)
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %3, %"class.blink::Document"* %40, %"class.WTF::String"* dereferenceable(8) %41) #12
  %42 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %3) #12
  br i1 %42, label %43, label %96

43:                                               ; preds = %35
  %44 = call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* nonnull %3) #12
  br i1 %44, label %45, label %96

45:                                               ; preds = %43
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %47 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::Document"*, %"class.blink::Document"** %47, align 8
  %49 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %48) #12
  %50 = call zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* nonnull dereferenceable(112) %3, %"class.blink::KURL"* dereferenceable(112) %49) #12
  br i1 %50, label %51, label %96

51:                                               ; preds = %45
  %52 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %54 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"* nonnull %3) #12
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %53, align 8
  %55 = bitcast %"class.blink::Node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %57 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::Document"*, %"class.blink::Document"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %58, i64 0, i32 1
  %60 = call %"class.blink::Node"* @_ZN5blink9TreeScope10FindAnchorERKN3WTF6StringE(%"class.blink::TreeScope"* %59, %"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  store %"class.blink::Node"* %60, %"class.blink::Node"** %5, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6, i32 0, i32 0
  %64 = call { %"struct.WTF::KeyValuePair.2852"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.2850"* %63, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::Node"** nonnull dereferenceable(8) %5) #12
  %65 = extractvalue { %"struct.WTF::KeyValuePair.2852"*, i8 } %64, 1
  %66 = and i8 %65, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %79

68:                                               ; preds = %62
  %69 = extractvalue { %"struct.WTF::KeyValuePair.2852"*, i8 } %64, 0
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %69, i64 0, i32 1
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %72 = ptrtoint %"class.blink::Node"* %71 to i64
  %73 = bitcast %"class.blink::Member.318"* %70 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %68
  %77 = bitcast %"class.blink::Node"* %71 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #12
  br label %79

79:                                               ; preds = %76, %68, %62, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #12
  br label %95

95:                                               ; preds = %79, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %96

96:                                               ; preds = %43, %45, %95, %35
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %36) #12
  br label %97

97:                                               ; preds = %2, %17, %96, %28, %18
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink9TreeScope10FindAnchorERKN3WTF6StringE(%"class.blink::TreeScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PrintContext24OutputLinkedDestinationsERNS_15GraphicsContextERKNS_7IntRectE(%"class.blink::PrintContext"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::IntRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::IntPoint"*
  %6 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %10, align 8
  %12 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %11) #12
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12PrintContext25CollectLinkedDestinationsEPNS_4NodeE(%"class.blink::PrintContext"* %0, %"class.blink::Node"* %13)
  store i8 1, i8* %6, align 8
  br label %14

14:                                               ; preds = %3, %9
  %15 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %19, i64 %22
  br i1 %17, label %44, label %24

24:                                               ; preds = %14
  %25 = icmp eq i32 %21, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %24, %30
  %27 = phi %"struct.WTF::KeyValuePair.2852"* [ %31, %30 ], [ %19, %24 ]
  %28 = bitcast %"struct.WTF::KeyValuePair.2852"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %33 [
    i64 -1, label %30
    i64 0, label %30
  ]

30:                                               ; preds = %26, %26
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %27, i64 1
  %32 = icmp eq %"struct.WTF::KeyValuePair.2852"* %31, %23
  br i1 %32, label %44, label %26

33:                                               ; preds = %26, %24
  %34 = phi %"struct.WTF::KeyValuePair.2852"* [ %19, %24 ], [ %27, %26 ]
  %35 = icmp eq %"struct.WTF::KeyValuePair.2852"* %34, %23
  br i1 %35, label %44, label %36

36:                                               ; preds = %33
  %37 = bitcast i64* %4 to i8*
  %38 = bitcast i64* %4 to i32*
  %39 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %5, i64 0, i32 1
  %40 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1, i32 1
  br label %45

44:                                               ; preds = %30, %107, %117, %114, %14, %33
  ret void

45:                                               ; preds = %36, %117
  %46 = phi %"struct.WTF::KeyValuePair.2852"* [ %34, %36 ], [ %111, %117 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %46, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 6, i32 0, i32 0
  br i1 %52, label %58, label %54

54:                                               ; preds = %45
  %55 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRareData"**
  %56 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %56, i64 0, i32 1, i32 0, i32 0
  br label %60

58:                                               ; preds = %45
  %59 = bitcast %"class.blink::NodeData"** %53 to %"class.blink::NodeRenderingData"**
  br label %60

60:                                               ; preds = %54, %58
  %61 = phi %"class.blink::NodeRenderingData"** [ %57, %54 ], [ %59, %58 ]
  %62 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %62, i64 0, i32 1
  %64 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %65 = icmp eq %"class.blink::LayoutObject"* %64, null
  br i1 %65, label %107, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %64, i64 0, i32 6, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %66, %70
  %71 = phi %"class.blink::LayoutObject"* [ %73, %70 ], [ %64, %66 ]
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 7
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 6, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %70, label %77

77:                                               ; preds = %70, %66
  %78 = phi %"class.blink::Node"* [ %68, %66 ], [ %75, %70 ]
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %78, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::Document"*, %"class.blink::Document"** %81, align 8
  %83 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %82) #12
  %84 = icmp eq %"class.blink::LocalFrameView"* %83, null
  br i1 %84, label %107, label %85

85:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  store i32 -1431655766, i32* %38, align 8
  store i32 -1431655766, i32* %39, align 4
  %86 = call { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"* nonnull %64, i32 0) #12
  %87 = extractvalue { i64, i64 } %86, 0
  store i64 %87, i64* %4, align 8
  %88 = trunc i64 %87 to i32
  %89 = lshr i64 %87, 32
  %90 = trunc i64 %89 to i32
  %91 = load i32, i32* %40, align 4
  %92 = icmp sgt i32 %91, %88
  br i1 %92, label %106, label %93

93:                                               ; preds = %85
  %94 = load i32, i32* %41, align 4
  %95 = add nsw i32 %94, %91
  %96 = icmp sgt i32 %95, %88
  br i1 %96, label %97, label %106

97:                                               ; preds = %93
  %98 = load i32, i32* %42, align 4
  %99 = icmp sgt i32 %98, %90
  br i1 %99, label %106, label %100

100:                                              ; preds = %97
  %101 = load i32, i32* %43, align 4
  %102 = add nsw i32 %101, %98
  %103 = icmp sgt i32 %102, %90
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %46, i64 0, i32 0
  call void @_ZN5blink15GraphicsContext25SetURLDestinationLocationERKN3WTF6StringERKNS_8IntPointE(%"class.blink::GraphicsContext"* %1, %"class.WTF::String"* dereferenceable(8) %105, %"class.blink::IntPoint"* nonnull dereferenceable(8) %5) #12
  br label %106

106:                                              ; preds = %85, %93, %97, %104, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %107

107:                                              ; preds = %77, %60, %106
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %46, i64 1
  %109 = icmp eq %"struct.WTF::KeyValuePair.2852"* %108, %23
  br i1 %109, label %44, label %110

110:                                              ; preds = %107, %114
  %111 = phi %"struct.WTF::KeyValuePair.2852"* [ %115, %114 ], [ %108, %107 ]
  %112 = bitcast %"struct.WTF::KeyValuePair.2852"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  switch i64 %113, label %117 [
    i64 -1, label %114
    i64 0, label %114
  ]

114:                                              ; preds = %110, %110
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %111, i64 1
  %116 = icmp eq %"struct.WTF::KeyValuePair.2852"* %115, %23
  br i1 %116, label %44, label %110

117:                                              ; preds = %110
  %118 = icmp eq %"struct.WTF::KeyValuePair.2852"* %111, %23
  br i1 %118, label %44, label %45
}

declare { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #3

declare void @_ZN5blink15GraphicsContext25SetURLDestinationLocationERKN3WTF6StringERKNS_8IntPointE(%"class.blink::GraphicsContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12PrintContext12PagePropertyEPNS_10LocalFrameEPKcj(%"class.blink::LocalFrame"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %class.scoped_refptr, align 8
  %7 = alloca %"class.blink::Length", align 4
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca { %"class.WTF::StringImpl"*, i8 }, align 8
  %10 = bitcast { %"class.WTF::StringImpl"*, i8 }* %9 to %"class.WTF::StringAppend.2990"*
  %11 = alloca %"class.WTF::StringAppend.2991", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %0) #12
  %14 = ptrtoint %"class.blink::LocalFrame"* %0 to i64
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12PrintContextEEEPhm(i64 72) #12
  %16 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12PrintContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = getelementptr inbounds i8, i8* %15, i64 33
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 17, i1 false) #12
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds i8, i8* %15, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 20, i1 false) #12
  %22 = getelementptr inbounds i8, i8* %15, i64 64
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %15, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = bitcast i8* %15 to %"class.blink::PrintContext"*
  %28 = bitcast i8* %15 to void (%"class.blink::PrintContext"*, float, float)***
  %29 = load void (%"class.blink::PrintContext"*, float, float)**, void (%"class.blink::PrintContext"*, float, float)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::PrintContext"*, float, float)*, void (%"class.blink::PrintContext"*, float, float)** %29, i64 4
  %31 = load void (%"class.blink::PrintContext"*, float, float)*, void (%"class.blink::PrintContext"*, float, float)** %30, align 8
  tail call void %31(%"class.blink::PrintContext"* %27, float 8.000000e+02, float 1.000000e+03) #12
  %32 = bitcast %class.scoped_refptr* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %34 = tail call %"class.blink::ComputedStyle"* @_ZN5blink8Document12StyleForPageEj(%"class.blink::Document"* %13, i32 %2) #12
  store %"class.blink::ComputedStyle"* %34, %"class.blink::ComputedStyle"** %33, align 8
  %35 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #13
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %60

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 7, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 10
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 10, i32 2
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %37
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #12
  br label %392

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %39, i64 0, i32 10, i32 3
  %47 = load i8, i8* %46, align 2, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.blink::Length"* %40 to float*
  %51 = load float, float* %50, align 4
  br label %56

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %40, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  br label %56

56:                                               ; preds = %49, %52
  %57 = phi float [ %51, %49 ], [ %55, %52 ]
  %58 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %57) #12
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  br label %392

60:                                               ; preds = %3
  %61 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)) #13
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %80

63:                                               ; preds = %60
  %64 = bitcast %"class.blink::Length"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %7, %"class.blink::ComputedStyle"* %34) #12
  %65 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  %66 = load i8, i8* %65, align 2, !range !4
  %67 = icmp eq i8 %66, 0
  %68 = bitcast %"class.blink::Length"* %7 to float*
  %69 = load float, float* %68, align 4
  %70 = bitcast float %69 to i32
  %71 = sitofp i32 %70 to float
  %72 = select i1 %67, float %71, float %69
  %73 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %72) #12
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 8
  br i1 %77, label %78, label %79

78:                                               ; preds = %63
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #12
  br label %79

79:                                               ; preds = %63, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  br label %392

80:                                               ; preds = %60
  %81 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #13
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %140

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %85, i64 0, i32 1, i32 0, i32 0
  %87 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %87, i64 0, i32 1, i32 0, i32 5
  %89 = load float, float* %88, align 4
  %90 = fadd float %89, 5.000000e-01
  %91 = fptosi float %90 to i32
  %92 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #12
  %93 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  %94 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %95 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %96 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 13
  %97 = icmp slt i32 %91, 0
  %98 = sub i32 0, %91
  %99 = select i1 %97, i32 %98, i32 %91
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 32, i1 false) #12
  store i8* %93, i8** %94, align 8
  %100 = urem i32 %99, 10
  %101 = udiv i32 %99, 10
  %102 = trunc i32 %100 to i8
  %103 = or i8 %102, 48
  store i8 %103, i8* %93, align 4
  %104 = icmp ugt i32 %99, 9
  br i1 %104, label %105, label %127

105:                                              ; preds = %83
  %106 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  store i8* %106, i8** %94, align 8
  %107 = urem i32 %101, 10
  %108 = trunc i32 %107 to i8
  %109 = or i8 %108, 48
  store i8 %109, i8* %106, align 1
  %110 = icmp ugt i32 %99, 99
  br i1 %110, label %111, label %127

111:                                              ; preds = %105
  %112 = udiv i32 %99, 100
  %113 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %113, i8** %94, align 8
  %114 = urem i32 %112, 10
  %115 = trunc i32 %114 to i8
  %116 = or i8 %115, 48
  store i8 %116, i8* %113, align 2
  %117 = icmp ugt i32 %99, 999
  br i1 %117, label %118, label %127

118:                                              ; preds = %111, %118
  %119 = phi i32 [ %121, %118 ], [ %112, %111 ]
  %120 = load i8*, i8** %94, align 8
  %121 = udiv i32 %119, 10
  %122 = getelementptr inbounds i8, i8* %120, i64 -1
  store i8* %122, i8** %94, align 8
  %123 = urem i32 %121, 10
  %124 = trunc i32 %123 to i8
  %125 = or i8 %124, 48
  store i8 %125, i8* %122, align 1
  %126 = icmp ugt i32 %119, 99
  br i1 %126, label %118, label %127

127:                                              ; preds = %118, %111, %105, %83
  br i1 %97, label %128, label %131

128:                                              ; preds = %127
  %129 = load i8*, i8** %94, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 -1
  store i8* %130, i8** %94, align 8
  store i8 45, i8* %130, align 1
  br label %131

131:                                              ; preds = %127, %128
  %132 = bitcast i8** %94 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = ptrtoint i8* %96 to i64
  %135 = sub i64 %134, %133
  %136 = trunc i64 %135 to i32
  store i32 %136, i32* %95, align 8
  %137 = inttoptr i64 %133 to i8*
  %138 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %137, i32 %136) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #12
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %139, align 8
  br label %392

140:                                              ; preds = %80
  %141 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #13
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %169

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %145, i64 0, i32 1, i32 0, i32 0
  %147 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %147, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %150, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %151, label %392, label %152

152:                                              ; preds = %143
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %392

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = zext i32 %159 to i33
  %161 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %160, i33 1) #12
  %162 = extractvalue { i33, i1 } %161, 1
  %163 = extractvalue { i33, i1 } %161, 0
  %164 = icmp slt i33 %163, 0
  %165 = or i1 %162, %164
  br i1 %165, label %166, label %167, !prof !3

166:                                              ; preds = %157
  tail call void @llvm.trap() #12
  unreachable

167:                                              ; preds = %157
  %168 = trunc i33 %163 to i32
  store i32 %168, i32* %158, align 4
  br label %392

169:                                              ; preds = %140
  %170 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #13
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %305

172:                                              ; preds = %169
  %173 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #12
  %174 = bitcast { %"class.WTF::StringImpl"*, i8 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #12
  %175 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 3, i32 0, i32 0
  %176 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %176, i64 0, i32 3, i32 0, i32 0
  %178 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %178, i64 0, i32 15, i32 0
  %180 = load float, float* %179, align 4
  %181 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %180) #12
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %227, label %183

183:                                              ; preds = %172
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %200

190:                                              ; preds = %183
  %191 = zext i32 %189 to i33
  %192 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %191, i33 1) #12
  %193 = extractvalue { i33, i1 } %192, 1
  %194 = extractvalue { i33, i1 } %192, 0
  %195 = icmp slt i33 %194, 0
  %196 = or i1 %193, %195
  br i1 %196, label %197, label %198, !prof !3

197:                                              ; preds = %190
  tail call void @llvm.trap() #12
  unreachable

198:                                              ; preds = %190
  %199 = trunc i33 %194 to i32
  store i32 %199, i32* %188, align 4
  br label %200

200:                                              ; preds = %183, %198
  %201 = phi i32 [ %199, %198 ], [ %189, %183 ]
  %202 = load atomic i32, i32* %184 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  br i1 %204, label %206, label %216

206:                                              ; preds = %200
  %207 = zext i32 %201 to i33
  %208 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %207, i33 1) #12
  %209 = extractvalue { i33, i1 } %208, 1
  %210 = extractvalue { i33, i1 } %208, 0
  %211 = icmp slt i33 %210, 0
  %212 = or i1 %209, %211
  br i1 %212, label %213, label %214, !prof !3

213:                                              ; preds = %206
  tail call void @llvm.trap() #12
  unreachable

214:                                              ; preds = %206
  %215 = trunc i33 %210 to i32
  store i32 %215, i32* %205, align 4
  br label %216

216:                                              ; preds = %214, %200
  %217 = phi i32 [ %215, %214 ], [ %201, %200 ]
  %218 = load atomic i32, i32* %184 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %216
  %222 = add i32 %217, -1
  store i32 %222, i32* %205, align 4
  br label %223

223:                                              ; preds = %221, %216
  %224 = phi i32 [ %222, %221 ], [ %217, %216 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #12
  br label %227

227:                                              ; preds = %172, %223, %226
  %228 = getelementptr inbounds { %"class.WTF::StringImpl"*, i8 }, { %"class.WTF::StringImpl"*, i8 }* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %181, %"class.WTF::StringImpl"** %228, align 8
  %229 = getelementptr inbounds { %"class.WTF::StringImpl"*, i8 }, { %"class.WTF::StringImpl"*, i8 }* %9, i64 0, i32 1
  store i8 32, i8* %229, align 8
  %230 = bitcast %class.scoped_refptr* %6 to %"class.blink::ComputedStyleBase"**
  %231 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %231, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %233, i64 0, i32 3, i32 0, i32 0
  %235 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %235, i64 0, i32 15, i32 1
  %237 = load float, float* %236, align 4
  %238 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %237) #12
  call void @_ZN3WTFplINS_6StringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend"* nonnull sret %8, %"class.WTF::StringAppend.2990"* nonnull dereferenceable(16) %10, %"class.WTF::StringImpl"* %238)
  %239 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %240 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %240, align 8
  %241 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %227
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #12
  br label %257

257:                                              ; preds = %256, %253, %227
  %258 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #12
  br label %274

274:                                              ; preds = %257, %270, %273
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #12
  br label %290

290:                                              ; preds = %274, %286, %289
  br i1 %182, label %304, label %291

291:                                              ; preds = %290
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #12
  br label %304

304:                                              ; preds = %290, %300, %303
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #12
  br label %392

305:                                              ; preds = %169
  %306 = bitcast %"class.WTF::StringAppend.2991"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %306) #12
  %307 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i64 34) #12
  %308 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %355, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %328

318:                                              ; preds = %311
  %319 = zext i32 %317 to i33
  %320 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %319, i33 1) #12
  %321 = extractvalue { i33, i1 } %320, 1
  %322 = extractvalue { i33, i1 } %320, 0
  %323 = icmp slt i33 %322, 0
  %324 = or i1 %321, %323
  br i1 %324, label %325, label %326, !prof !3

325:                                              ; preds = %318
  call void @llvm.trap() #12
  unreachable

326:                                              ; preds = %318
  %327 = trunc i33 %322 to i32
  store i32 %327, i32* %316, align 4
  br label %328

328:                                              ; preds = %311, %326
  %329 = phi i32 [ %327, %326 ], [ %317, %311 ]
  %330 = load atomic i32, i32* %312 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  br i1 %332, label %334, label %344

334:                                              ; preds = %328
  %335 = zext i32 %329 to i33
  %336 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %335, i33 1) #12
  %337 = extractvalue { i33, i1 } %336, 1
  %338 = extractvalue { i33, i1 } %336, 0
  %339 = icmp slt i33 %338, 0
  %340 = or i1 %337, %339
  br i1 %340, label %341, label %342, !prof !3

341:                                              ; preds = %334
  call void @llvm.trap() #12
  unreachable

342:                                              ; preds = %334
  %343 = trunc i33 %338 to i32
  store i32 %343, i32* %333, align 4
  br label %344

344:                                              ; preds = %342, %328
  %345 = phi i32 [ %343, %342 ], [ %329, %328 ]
  %346 = load atomic i32, i32* %312 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %351

349:                                              ; preds = %344
  %350 = add i32 %345, -1
  store i32 %350, i32* %333, align 4
  br label %351

351:                                              ; preds = %349, %344
  %352 = phi i32 [ %350, %349 ], [ %345, %344 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #12
  br label %355

355:                                              ; preds = %305, %351, %354
  %356 = getelementptr inbounds %"class.WTF::StringAppend.2991", %"class.WTF::StringAppend.2991"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %309, %"class.WTF::StringImpl"** %356, align 8
  %357 = getelementptr inbounds %"class.WTF::StringAppend.2991", %"class.WTF::StringAppend.2991"* %11, i64 0, i32 1
  store i8* %1, i8** %357, align 8
  %358 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2991"* nonnull %11)
  %359 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %358, %"class.WTF::StringImpl"** %359, align 8
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %355
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #12
  br label %375

375:                                              ; preds = %355, %371, %374
  %376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %377 = icmp eq %"class.WTF::StringImpl"* %376, null
  br i1 %377, label %391, label %378

378:                                              ; preds = %375
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load atomic i32, i32* %379 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 0
  %384 = load i32, i32* %383, align 4
  br i1 %382, label %385, label %387

385:                                              ; preds = %378
  %386 = add i32 %384, -1
  store i32 %386, i32* %383, align 4
  br label %387

387:                                              ; preds = %385, %378
  %388 = phi i32 [ %386, %385 ], [ %384, %378 ]
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %387
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %376) #12
  br label %391

391:                                              ; preds = %375, %387, %390
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %306) #12
  br label %392

392:                                              ; preds = %167, %152, %143, %391, %304, %131, %79, %56, %44
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  %393 = bitcast i8* %15 to void (%"class.blink::PrintContext"*)***
  %394 = load void (%"class.blink::PrintContext"*)**, void (%"class.blink::PrintContext"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %394, i64 5
  %396 = load void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %395, align 8
  call void %396(%"class.blink::PrintContext"* %27) #12
  %397 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  ret %"class.WTF::StringImpl"* %398
}

declare %"class.blink::ComputedStyle"* @_ZN5blink8Document12StyleForPageEj(%"class.blink::Document"*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float) local_unnamed_addr #3

declare void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* sret, %"class.blink::ComputedStyle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.2990"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2990", %"class.WTF::StringAppend.2990"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2990", %"class.WTF::StringAppend.2990"* %1, i64 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %46

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #12
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !3

42:                                               ; preds = %33
  tail call void @llvm.trap() #12
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %46

45:                                               ; preds = %24
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8 %26, %"class.WTF::StringImpl"* null)
  br label %58

46:                                               ; preds = %28, %43
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8 %26, %"class.WTF::StringImpl"* nonnull %2)
  %47 = load atomic i32, i32* %29 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %46
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i32 [ %53, %52 ], [ %51, %46 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %58

58:                                               ; preds = %45, %54, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  %14 = select i1 %13, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %12
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %109, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %9, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %109, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #12
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %32 = bitcast %"class.WTF::StringTypeAdapter.3174"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %5, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #12
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %26
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %26
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %39, %37
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter.3174"* %5 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %33, align 8
  store i32 %48, i32* %34, align 8
  %50 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false) #12
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %45
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %63

57:                                               ; preds = %45
  %58 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  %62 = bitcast %"class.WTF::StringImpl"* %61 to i8*
  br label %63

63:                                               ; preds = %55, %57
  %64 = phi i8* [ null, %55 ], [ %62, %57 ]
  %65 = phi i64 [ %56, %55 ], [ %58, %57 ]
  %66 = phi i32 [ 0, %55 ], [ %60, %57 ]
  %67 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i64*
  store i64 %65, i64* %67, align 8
  store i8* %64, i8** %51, align 8
  store i32 %66, i32* %52, align 8
  %68 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %69 = load i8, i8* %68, align 8
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %70, i8* %30) #12
  %71 = load i32, i32* %52, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %30, i64 %72
  store i8 %69, i8* %73, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  %74 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %5, i64 0, i32 0
  %75 = call i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.2990"* %31) #12
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %30, i64 %76
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %74, i8* %77) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  %78 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %78, label %193, label %79

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %96

86:                                               ; preds = %79
  %87 = zext i32 %85 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #12
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %86
  call void @llvm.trap() #12
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %84, align 4
  br label %96

96:                                               ; preds = %79, %94
  %97 = phi i32 [ %95, %94 ], [ %85, %79 ]
  %98 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %99 = load atomic i32, i32* %80 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %104 = add i32 %97, -1
  store i32 %104, i32* %103, align 4
  br label %105

105:                                              ; preds = %102, %96
  %106 = phi i32 [ %104, %102 ], [ %97, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %193

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %193

109:                                              ; preds = %19, %1
  %110 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %111 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %112 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %111, i16** nonnull dereferenceable(8) %7) #12
  %113 = load i16*, i16** %7, align 8
  %114 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %115 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #12
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 24, i1 false) #12
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %120, label %122

120:                                              ; preds = %109
  %121 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %128

122:                                              ; preds = %109
  %123 = ptrtoint %"class.WTF::StringImpl"* %118 to i64
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  %127 = bitcast %"class.WTF::StringImpl"* %126 to i8*
  br label %128

128:                                              ; preds = %122, %120
  %129 = phi i8* [ null, %120 ], [ %127, %122 ]
  %130 = phi i64 [ %121, %120 ], [ %123, %122 ]
  %131 = phi i32 [ 0, %120 ], [ %125, %122 ]
  %132 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i64*
  store i64 %130, i64* %132, align 8
  store i8* %129, i8** %116, align 8
  store i32 %131, i32* %117, align 8
  %133 = bitcast %"class.WTF::StringTypeAdapter.3174"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #12
  %134 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 24, i1 false) #12
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %128
  %139 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %146

140:                                              ; preds = %128
  %141 = ptrtoint %"class.WTF::StringImpl"* %136 to i64
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i8*
  br label %146

146:                                              ; preds = %138, %140
  %147 = phi i8* [ null, %138 ], [ %145, %140 ]
  %148 = phi i64 [ %139, %138 ], [ %141, %140 ]
  %149 = phi i32 [ 0, %138 ], [ %143, %140 ]
  %150 = bitcast %"class.WTF::StringTypeAdapter.3174"* %2 to i64*
  store i64 %148, i64* %150, align 8
  store i8* %147, i8** %134, align 8
  store i32 %149, i32* %135, align 8
  %151 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %152 = load i8, i8* %151, align 8
  %153 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %153, i16* %113) #12
  %154 = load i32, i32* %135, align 8
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i16, i16* %113, i64 %155
  %157 = zext i8 %152 to i16
  store i16 %157, i16* %156, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #12
  %158 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0
  %159 = call i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.2990"* %114) #12
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds i16, i16* %113, i64 %160
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %158, i16* %161) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #12
  %162 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %162, label %193, label %163

163:                                              ; preds = %146
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %180

170:                                              ; preds = %163
  %171 = zext i32 %169 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #12
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !3

177:                                              ; preds = %170
  call void @llvm.trap() #12
  unreachable

178:                                              ; preds = %170
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %168, align 4
  br label %180

180:                                              ; preds = %163, %178
  %181 = phi i32 [ %179, %178 ], [ %169, %163 ]
  %182 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %183 = load atomic i32, i32* %164 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %188 = add i32 %181, -1
  store i32 %188, i32* %187, align 4
  br label %189

189:                                              ; preds = %186, %180
  %190 = phi i32 [ %188, %186 ], [ %181, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #12
  br label %193

193:                                              ; preds = %192, %189, %146, %108, %105, %63
  %194 = phi i8* [ %27, %63 ], [ %27, %105 ], [ %27, %108 ], [ %110, %146 ], [ %110, %189 ], [ %110, %192 ]
  %195 = phi i64 [ 0, %63 ], [ %98, %105 ], [ %98, %108 ], [ 0, %146 ], [ %182, %189 ], [ %182, %192 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #12
  %196 = inttoptr i64 %195 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %196
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2991"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2991", %"class.WTF::StringAppend.2991"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.3177"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.WTF::StringAppend.2991", %"class.WTF::StringAppend.2991"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #12
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %6, i8* %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2991"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #12
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #12
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.3177"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #12
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %5, i8* %45) #12
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %46, i8* %25) #12
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3177"* nonnull %5, i8* %49) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #12
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %58
  call void @llvm.trap() #12
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2991"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #12
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.3174"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #12
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.3174"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.3177"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #12
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %3, i8* %105) #12
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %106, i16* %85) #12
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3177"* nonnull %3, i16* %109) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #12
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #12
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #12
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #12
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 -23
  %13 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 1
  %14 = bitcast %"class.base::RefCounted.732"* %13 to %"class.blink::StyleCachedData"**
  %15 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %14, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %14, align 8
  %16 = icmp eq %"class.blink::StyleCachedData"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %18, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %18, align 8
  %20 = icmp eq %"class.WTF::Vector.739"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %19) #12
  %22 = bitcast %"class.WTF::Vector.739"* %19 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %22) #12
  br label %23

23:                                               ; preds = %21, %17
  %24 = bitcast %"class.blink::StyleCachedData"* %15 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %23, %11
  %26 = bitcast %"class.base::RefCounted.732"* %12 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %26) #12
  %27 = bitcast %"class.base::RefCounted.732"* %12 to i8*
  tail call void @free(i8* %27) #12
  br label %28

28:                                               ; preds = %25, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12PrintContext16IsPageBoxVisibleEPNS_10LocalFrameEj(%"class.blink::LocalFrame"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %0) #12
  %4 = tail call zeroext i1 @_ZN5blink8Document16IsPageBoxVisibleEj(%"class.blink::Document"* %3, i32 %1) #12
  ret i1 %4
}

declare zeroext i1 @_ZN5blink8Document16IsPageBoxVisibleEj(%"class.blink::Document"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12PrintContext26PageSizeAndMarginsInPixelsEPNS_10LocalFrameEjiiiiii(%"class.blink::LocalFrame"*, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::StringAppend.2994", align 8
  %11 = alloca [7 x i8], align 1
  %12 = alloca [7 x i8], align 1
  %13 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %14 = alloca %"class.WTF::StringAppend.2996", align 8
  %15 = alloca [7 x i8], align 1
  %16 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %17 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %18 = alloca %"class.WTF::StringAppend.3000", align 8
  %19 = alloca %"struct.blink::WebPrintPageDescription", align 8
  %20 = alloca %"class.WTF::StringAppend.2992", align 8
  %21 = alloca %"class.WTF::StringAppend.2993", align 8
  %22 = alloca %"class.WTF::StringAppend.2994", align 8
  %23 = alloca %"class.WTF::StringAppend.2995", align 8
  %24 = alloca %"class.WTF::StringAppend.2996", align 8
  %25 = alloca %"class.WTF::StringAppend.2997", align 8
  %26 = alloca %"class.WTF::StringAppend.2998", align 8
  %27 = alloca %"class.WTF::StringAppend.2999", align 8
  %28 = alloca %"class.WTF::StringAppend.3000", align 8
  %29 = alloca %"class.WTF::StringAppend.3001", align 8
  %30 = bitcast %"struct.blink::WebPrintPageDescription"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"struct.blink::WebPrintPageDescription", %"struct.blink::WebPrintPageDescription"* %19, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.blink::WebPrintPageDescription", %"struct.blink::WebPrintPageDescription"* %19, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.blink::WebPrintPageDescription", %"struct.blink::WebPrintPageDescription"* %19, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.blink::WebPrintPageDescription", %"struct.blink::WebPrintPageDescription"* %19, i64 0, i32 2
  %35 = getelementptr inbounds %"struct.blink::WebPrintPageDescription", %"struct.blink::WebPrintPageDescription"* %19, i64 0, i32 3
  %36 = getelementptr inbounds %"struct.blink::WebPrintPageDescription", %"struct.blink::WebPrintPageDescription"* %19, i64 0, i32 4
  %37 = bitcast i32* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 -86, i64 24, i1 false)
  %38 = getelementptr inbounds %"struct.blink::WebPrintPageDescription", %"struct.blink::WebPrintPageDescription"* %19, i64 0, i32 5
  store i32 0, i32* %38, align 8
  %39 = sitofp i32 %2 to double
  %40 = sitofp i32 %3 to double
  store double %39, double* %31, align 8
  store double %40, double* %32, align 8
  store i32 %4, i32* %33, align 8
  store i32 %5, i32* %34, align 4
  store i32 %6, i32* %35, align 8
  store i32 %7, i32* %36, align 4
  %41 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %0) #12
  call void @_ZN5blink8Document18GetPageDescriptionEjPNS_23WebPrintPageDescriptionE(%"class.blink::Document"* %41, i32 %1, %"struct.blink::WebPrintPageDescription"* nonnull %19) #12
  %42 = bitcast %"class.WTF::StringAppend.2992"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %42) #12
  %43 = bitcast %"class.WTF::StringAppend.2993"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %43) #12
  %44 = bitcast %"class.WTF::StringAppend.2994"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %44) #12
  %45 = bitcast %"class.WTF::StringAppend.2995"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %45) #12
  %46 = bitcast %"class.WTF::StringAppend.2996"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %46) #12
  %47 = bitcast %"class.WTF::StringAppend.2997"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %47) #12
  %48 = bitcast %"class.WTF::StringAppend.2998"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #12
  %49 = bitcast %"class.WTF::StringAppend.2999"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #12
  %50 = bitcast %"class.WTF::StringAppend.3000"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #12
  %51 = bitcast %"class.WTF::StringAppend.3001"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  %52 = load double, double* %31, align 8
  %53 = call double @llvm.floor.f64(double %52)
  %54 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %53, i32 6) #12
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %131, label %56

56:                                               ; preds = %8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %73

63:                                               ; preds = %56
  %64 = zext i32 %62 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #12
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !3

70:                                               ; preds = %63
  call void @llvm.trap() #12
  unreachable

71:                                               ; preds = %63
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %61, align 4
  br label %73

73:                                               ; preds = %71, %56
  %74 = phi i32 [ %72, %71 ], [ %62, %56 ]
  %75 = load atomic i32, i32* %57 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %88

78:                                               ; preds = %73
  %79 = zext i32 %74 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #12
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !3

85:                                               ; preds = %78
  call void @llvm.trap() #12
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %61, align 4
  br label %88

88:                                               ; preds = %86, %73
  %89 = phi i32 [ %87, %86 ], [ %74, %73 ]
  %90 = load atomic i32, i32* %57 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = add i32 %89, -1
  store i32 %94, i32* %61, align 4
  br label %95

95:                                               ; preds = %93, %88
  %96 = phi i32 [ %94, %93 ], [ %89, %88 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %99

99:                                               ; preds = %95, %98
  %100 = load atomic i32, i32* %57 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %114

103:                                              ; preds = %99
  %104 = load i32, i32* %61, align 4
  %105 = zext i32 %104 to i33
  %106 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #12
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %112, !prof !3

111:                                              ; preds = %103
  call void @llvm.trap() #12
  unreachable

112:                                              ; preds = %103
  %113 = trunc i33 %108 to i32
  store i32 %113, i32* %61, align 4
  br label %114

114:                                              ; preds = %99, %112
  %115 = bitcast %"class.WTF::StringAppend.3001"* %29 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.7 to i64), i64* %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %116, align 8
  %117 = load atomic i32, i32* %57 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %135

120:                                              ; preds = %114
  %121 = load i32, i32* %61, align 4
  %122 = zext i32 %121 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #12
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %120
  call void @llvm.trap() #12
  unreachable

129:                                              ; preds = %120
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %61, align 4
  br label %135

131:                                              ; preds = %8
  %132 = bitcast %"class.WTF::StringAppend.3001"* %29 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.7 to i64), i64* %132, align 8
  %133 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %134, align 8
  br label %147

135:                                              ; preds = %129, %114
  %136 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %136, align 8
  %137 = load atomic i32, i32* %57 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = load i32, i32* %61, align 4
  br i1 %139, label %141, label %143

141:                                              ; preds = %135
  %142 = add i32 %140, -1
  store i32 %142, i32* %61, align 4
  br label %143

143:                                              ; preds = %141, %135
  %144 = phi i32 [ %142, %141 ], [ %140, %135 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %147

147:                                              ; preds = %131, %143, %146
  %148 = phi %"class.WTF::StringImpl"** [ %133, %131 ], [ %116, %143 ], [ %116, %146 ]
  %149 = load double, double* %32, align 8
  %150 = call double @llvm.floor.f64(double %149)
  %151 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %150, i32 6) #12
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3000"* nonnull sret %28, %"class.WTF::StringAppend.3001"* nonnull dereferenceable(24) %29, %"class.WTF::StringImpl"* %151)
  %152 = bitcast %"class.WTF::StringAppend.3000"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152)
  %153 = bitcast %"class.WTF::StringAppend.3000"* %28 to i64*
  %154 = load i64, i64* %153, align 8, !noalias !6
  %155 = bitcast %"class.WTF::StringAppend.3000"* %18 to i64*
  store i64 %154, i64* %155, align 8, !noalias !6
  %156 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8, !noalias !6
  %158 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %158, align 8, !noalias !6
  %159 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %159, label %177, label %160

160:                                              ; preds = %147
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %177

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #12
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !3

174:                                              ; preds = %165
  call void @llvm.trap() #12
  unreachable

175:                                              ; preds = %165
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %166, align 4
  br label %177

177:                                              ; preds = %175, %160, %147
  %178 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %18, i64 0, i32 0, i32 1
  %179 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %28, i64 0, i32 0, i32 1
  %180 = bitcast i8** %179 to i64*
  %181 = load i64, i64* %180, align 8, !noalias !6
  %182 = bitcast i8** %178 to i64*
  store i64 %181, i64* %182, align 8, !noalias !6
  %183 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %28, i64 0, i32 1, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8, !noalias !6
  %185 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %18, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %184, %"class.WTF::StringImpl"** %185, align 8, !noalias !6
  %186 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %186, label %204, label %187

187:                                              ; preds = %177
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %204

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i33
  %196 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %195, i33 1) #12
  %197 = extractvalue { i33, i1 } %196, 1
  %198 = extractvalue { i33, i1 } %196, 0
  %199 = icmp slt i33 %198, 0
  %200 = or i1 %197, %199
  br i1 %200, label %201, label %202, !prof !3

201:                                              ; preds = %192
  call void @llvm.trap() #12
  unreachable

202:                                              ; preds = %192
  %203 = trunc i33 %198 to i32
  store i32 %203, i32* %193, align 4
  br label %204

204:                                              ; preds = %177, %187, %202
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2999"* nonnull %27, %"class.WTF::StringAppend.3000"* nonnull byval(%"class.WTF::StringAppend.3000") align 8 %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %152)
  %205 = load i32, i32* %33, align 8
  %206 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %17, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %206) #12
  %207 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %17, i64 0, i32 0, i64 12
  %208 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %17, i64 0, i32 2
  %209 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %17, i64 0, i32 3
  %210 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %17, i64 0, i32 0, i64 13
  %211 = icmp slt i32 %205, 0
  %212 = sub i32 0, %205
  %213 = select i1 %211, i32 %212, i32 %205
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 -86, i64 32, i1 false) #12
  store i8* %207, i8** %208, align 8
  %214 = urem i32 %213, 10
  %215 = udiv i32 %213, 10
  %216 = trunc i32 %214 to i8
  %217 = or i8 %216, 48
  store i8 %217, i8* %207, align 4
  %218 = icmp ugt i32 %213, 9
  br i1 %218, label %219, label %241

219:                                              ; preds = %204
  %220 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %17, i64 0, i32 0, i64 11
  store i8* %220, i8** %208, align 8
  %221 = urem i32 %215, 10
  %222 = trunc i32 %221 to i8
  %223 = or i8 %222, 48
  store i8 %223, i8* %220, align 1
  %224 = icmp ugt i32 %213, 99
  br i1 %224, label %225, label %241

225:                                              ; preds = %219
  %226 = udiv i32 %213, 100
  %227 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %17, i64 0, i32 0, i64 10
  store i8* %227, i8** %208, align 8
  %228 = urem i32 %226, 10
  %229 = trunc i32 %228 to i8
  %230 = or i8 %229, 48
  store i8 %230, i8* %227, align 2
  %231 = icmp ugt i32 %213, 999
  br i1 %231, label %232, label %241

232:                                              ; preds = %225, %232
  %233 = phi i32 [ %235, %232 ], [ %226, %225 ]
  %234 = load i8*, i8** %208, align 8
  %235 = udiv i32 %233, 10
  %236 = getelementptr inbounds i8, i8* %234, i64 -1
  store i8* %236, i8** %208, align 8
  %237 = urem i32 %235, 10
  %238 = trunc i32 %237 to i8
  %239 = or i8 %238, 48
  store i8 %239, i8* %236, align 1
  %240 = icmp ugt i32 %233, 99
  br i1 %240, label %232, label %241

241:                                              ; preds = %232, %225, %219, %204
  br i1 %211, label %242, label %245

242:                                              ; preds = %241
  %243 = load i8*, i8** %208, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 -1
  store i8* %244, i8** %208, align 8
  store i8 45, i8* %244, align 1
  br label %245

245:                                              ; preds = %241, %242
  %246 = bitcast i8** %208 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = ptrtoint i8* %210 to i64
  %249 = sub i64 %248, %247
  %250 = trunc i64 %249 to i32
  store i32 %250, i32* %209, align 8
  %251 = inttoptr i64 %247 to i8*
  %252 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %251, i32 %250) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %206) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.2998"* nonnull sret %26, %"class.WTF::StringAppend.2999"* nonnull dereferenceable(40) %27, %"class.WTF::StringImpl"* %252)
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_cEENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.2997"* nonnull sret %25, %"class.WTF::StringAppend.2998"* nonnull dereferenceable(48) %26, i8 signext 32)
  %253 = load i32, i32* %34, align 4
  %254 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %16, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %254) #12
  %255 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %16, i64 0, i32 0, i64 12
  %256 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %16, i64 0, i32 2
  %257 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %16, i64 0, i32 3
  %258 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %16, i64 0, i32 0, i64 13
  %259 = icmp slt i32 %253, 0
  %260 = sub i32 0, %253
  %261 = select i1 %259, i32 %260, i32 %253
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 -86, i64 32, i1 false) #12
  store i8* %255, i8** %256, align 8
  %262 = urem i32 %261, 10
  %263 = udiv i32 %261, 10
  %264 = trunc i32 %262 to i8
  %265 = or i8 %264, 48
  store i8 %265, i8* %255, align 4
  %266 = icmp ugt i32 %261, 9
  br i1 %266, label %267, label %289

267:                                              ; preds = %245
  %268 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %16, i64 0, i32 0, i64 11
  store i8* %268, i8** %256, align 8
  %269 = urem i32 %263, 10
  %270 = trunc i32 %269 to i8
  %271 = or i8 %270, 48
  store i8 %271, i8* %268, align 1
  %272 = icmp ugt i32 %261, 99
  br i1 %272, label %273, label %289

273:                                              ; preds = %267
  %274 = udiv i32 %261, 100
  %275 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %16, i64 0, i32 0, i64 10
  store i8* %275, i8** %256, align 8
  %276 = urem i32 %274, 10
  %277 = trunc i32 %276 to i8
  %278 = or i8 %277, 48
  store i8 %278, i8* %275, align 2
  %279 = icmp ugt i32 %261, 999
  br i1 %279, label %280, label %289

280:                                              ; preds = %273, %280
  %281 = phi i32 [ %283, %280 ], [ %274, %273 ]
  %282 = load i8*, i8** %256, align 8
  %283 = udiv i32 %281, 10
  %284 = getelementptr inbounds i8, i8* %282, i64 -1
  store i8* %284, i8** %256, align 8
  %285 = urem i32 %283, 10
  %286 = trunc i32 %285 to i8
  %287 = or i8 %286, 48
  store i8 %287, i8* %284, align 1
  %288 = icmp ugt i32 %281, 99
  br i1 %288, label %280, label %289

289:                                              ; preds = %280, %273, %267, %245
  br i1 %259, label %290, label %293

290:                                              ; preds = %289
  %291 = load i8*, i8** %256, align 8
  %292 = getelementptr inbounds i8, i8* %291, i64 -1
  store i8* %292, i8** %256, align 8
  store i8 45, i8* %292, align 1
  br label %293

293:                                              ; preds = %289, %290
  %294 = bitcast i8** %256 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = ptrtoint i8* %258 to i64
  %297 = sub i64 %296, %295
  %298 = trunc i64 %297 to i32
  store i32 %298, i32* %257, align 8
  %299 = inttoptr i64 %295 to i8*
  %300 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %299, i32 %298) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %254) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSC_SD_(%"class.WTF::StringAppend.2996"* nonnull sret %24, %"class.WTF::StringAppend.2997"* nonnull dereferenceable(56) %25, %"class.WTF::StringImpl"* %300)
  %301 = getelementptr inbounds [7 x i8], [7 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %301)
  %302 = bitcast %"class.WTF::StringAppend.2996"* %24 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  %306 = icmp eq %"class.WTF::StringImpl"* %305, null
  br i1 %306, label %324, label %307

307:                                              ; preds = %293
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %324

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i33
  %316 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %315, i33 1) #12
  %317 = extractvalue { i33, i1 } %316, 1
  %318 = extractvalue { i33, i1 } %316, 0
  %319 = icmp slt i33 %318, 0
  %320 = or i1 %317, %319
  br i1 %320, label %321, label %322, !prof !3

321:                                              ; preds = %312
  call void @llvm.trap() #12
  unreachable

322:                                              ; preds = %312
  %323 = trunc i33 %318 to i32
  store i32 %323, i32* %313, align 4
  br label %324

324:                                              ; preds = %322, %307, %293
  %325 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %326 = bitcast i8** %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %348, label %331

331:                                              ; preds = %324
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %348

336:                                              ; preds = %331
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i33
  %340 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %339, i33 1) #12
  %341 = extractvalue { i33, i1 } %340, 1
  %342 = extractvalue { i33, i1 } %340, 0
  %343 = icmp slt i33 %342, 0
  %344 = or i1 %341, %343
  br i1 %344, label %345, label %346, !prof !3

345:                                              ; preds = %336
  call void @llvm.trap() #12
  unreachable

346:                                              ; preds = %336
  %347 = trunc i33 %342 to i32
  store i32 %347, i32* %337, align 4
  br label %348

348:                                              ; preds = %346, %331, %324
  %349 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %350 = bitcast i8** %349 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %372, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %372

360:                                              ; preds = %355
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = zext i32 %362 to i33
  %364 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %363, i33 1) #12
  %365 = extractvalue { i33, i1 } %364, 1
  %366 = extractvalue { i33, i1 } %364, 0
  %367 = icmp slt i33 %366, 0
  %368 = or i1 %365, %367
  br i1 %368, label %369, label %370, !prof !3

369:                                              ; preds = %360
  call void @llvm.trap() #12
  unreachable

370:                                              ; preds = %360
  %371 = trunc i33 %366 to i32
  store i32 %371, i32* %361, align 4
  br label %372

372:                                              ; preds = %370, %355, %348
  %373 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %24, i64 0, i32 0, i32 1
  %374 = load i8, i8* %373, align 8
  %375 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %24, i64 0, i32 1, i32 0, i32 0
  %376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %377 = icmp eq %"class.WTF::StringImpl"* %376, null
  br i1 %377, label %395, label %378

378:                                              ; preds = %372
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load atomic i32, i32* %379 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %395

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  %386 = zext i32 %385 to i33
  %387 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %386, i33 1) #12
  %388 = extractvalue { i33, i1 } %387, 1
  %389 = extractvalue { i33, i1 } %387, 0
  %390 = icmp slt i33 %389, 0
  %391 = or i1 %388, %390
  br i1 %391, label %392, label %393, !prof !3

392:                                              ; preds = %383
  call void @llvm.trap() #12
  unreachable

393:                                              ; preds = %383
  %394 = trunc i33 %389 to i32
  store i32 %394, i32* %384, align 4
  br label %395

395:                                              ; preds = %372, %378, %393
  %396 = bitcast %"class.WTF::StringAppend.2996"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %396) #12, !noalias !9
  %397 = bitcast %"class.WTF::StringAppend.2996"* %14 to i64*
  store i64 %303, i64* %397, align 8, !noalias !9
  %398 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %305, %"class.WTF::StringImpl"** %398, align 8, !noalias !9
  %399 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %400 = bitcast i8** %399 to i64*
  store i64 %327, i64* %400, align 8, !noalias !9
  %401 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %329, %"class.WTF::StringImpl"** %401, align 8, !noalias !9
  %402 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  %403 = bitcast i8** %402 to i64*
  store i64 %351, i64* %403, align 8, !noalias !9
  %404 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %353, %"class.WTF::StringImpl"** %404, align 8, !noalias !9
  %405 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %14, i64 0, i32 0, i32 1
  store i8 %374, i8* %405, align 8, !noalias !9
  %406 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %14, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %406, i8* nonnull align 1 %301, i64 7, i1 false), !noalias !9
  %407 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %14, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %376, %"class.WTF::StringImpl"** %407, align 8, !noalias !9
  %408 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 0
  %409 = bitcast %"class.WTF::StringAppend.2995"* %23 to i64*
  store i64 %303, i64* %409, align 8
  %410 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %305, %"class.WTF::StringImpl"** %410, align 8
  br i1 %306, label %430, label %411

411:                                              ; preds = %395
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %430

416:                                              ; preds = %411
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %418 = load i32, i32* %417, align 4
  %419 = zext i32 %418 to i33
  %420 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %419, i33 1) #12
  %421 = extractvalue { i33, i1 } %420, 1
  %422 = extractvalue { i33, i1 } %420, 0
  %423 = icmp slt i33 %422, 0
  %424 = or i1 %421, %423
  br i1 %424, label %425, label %426, !prof !3

425:                                              ; preds = %416
  call void @llvm.trap() #12
  unreachable

426:                                              ; preds = %416
  %427 = trunc i33 %422 to i32
  store i32 %427, i32* %417, align 4
  %428 = load i64, i64* %400, align 8
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  br label %430

430:                                              ; preds = %426, %411, %395
  %431 = phi %"class.WTF::StringImpl"* [ %429, %426 ], [ %329, %411 ], [ %329, %395 ]
  %432 = phi i64 [ %428, %426 ], [ %327, %411 ], [ %327, %395 ]
  %433 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %434 = bitcast i8** %433 to i64*
  store i64 %432, i64* %434, align 8
  %435 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %431, %"class.WTF::StringImpl"** %435, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %436, label %454, label %437

437:                                              ; preds = %430
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %454

442:                                              ; preds = %437
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  %445 = zext i32 %444 to i33
  %446 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %445, i33 1) #12
  %447 = extractvalue { i33, i1 } %446, 1
  %448 = extractvalue { i33, i1 } %446, 0
  %449 = icmp slt i33 %448, 0
  %450 = or i1 %447, %449
  br i1 %450, label %451, label %452, !prof !3

451:                                              ; preds = %442
  call void @llvm.trap() #12
  unreachable

452:                                              ; preds = %442
  %453 = trunc i33 %448 to i32
  store i32 %453, i32* %443, align 4
  br label %454

454:                                              ; preds = %452, %437, %430
  %455 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %456 = load i64, i64* %403, align 8
  %457 = bitcast i8** %455 to i64*
  store i64 %456, i64* %457, align 8
  %458 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %459 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %458, %"class.WTF::StringImpl"** %459, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %458, null
  br i1 %460, label %478, label %461

461:                                              ; preds = %454
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %478

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  %469 = zext i32 %468 to i33
  %470 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %469, i33 1) #12
  %471 = extractvalue { i33, i1 } %470, 1
  %472 = extractvalue { i33, i1 } %470, 0
  %473 = icmp slt i33 %472, 0
  %474 = or i1 %471, %473
  br i1 %474, label %475, label %476, !prof !3

475:                                              ; preds = %466
  call void @llvm.trap() #12
  unreachable

476:                                              ; preds = %466
  %477 = trunc i33 %472 to i32
  store i32 %477, i32* %467, align 4
  br label %478

478:                                              ; preds = %476, %461, %454
  %479 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 0, i32 0, i32 1
  %480 = load i8, i8* %405, align 8
  store i8 %480, i8* %479, align 8
  %481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %482 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %481, %"class.WTF::StringImpl"** %482, align 8
  %483 = icmp eq %"class.WTF::StringImpl"* %481, null
  br i1 %483, label %501, label %484

484:                                              ; preds = %478
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load atomic i32, i32* %485 monotonic, align 4
  %487 = and i32 %486, 2
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %501

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 0
  %491 = load i32, i32* %490, align 4
  %492 = zext i32 %491 to i33
  %493 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %492, i33 1) #12
  %494 = extractvalue { i33, i1 } %493, 1
  %495 = extractvalue { i33, i1 } %493, 0
  %496 = icmp slt i33 %495, 0
  %497 = or i1 %494, %496
  br i1 %497, label %498, label %499, !prof !3

498:                                              ; preds = %489
  call void @llvm.trap() #12
  unreachable

499:                                              ; preds = %489
  %500 = trunc i33 %495 to i32
  store i32 %500, i32* %490, align 4
  br label %501

501:                                              ; preds = %478, %484, %499
  %502 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %23, i64 0, i32 1
  store i8 32, i8* %502, align 8, !alias.scope !9
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %396) #12, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %301)
  %503 = load i32, i32* %35, align 8
  %504 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %504) #12
  %505 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 12
  %506 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 2
  %507 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 3
  %508 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 13
  %509 = icmp slt i32 %503, 0
  %510 = sub i32 0, %503
  %511 = select i1 %509, i32 %510, i32 %503
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %504, i8 -86, i64 32, i1 false) #12
  store i8* %505, i8** %506, align 8
  %512 = urem i32 %511, 10
  %513 = udiv i32 %511, 10
  %514 = trunc i32 %512 to i8
  %515 = or i8 %514, 48
  store i8 %515, i8* %505, align 4
  %516 = icmp ugt i32 %511, 9
  br i1 %516, label %517, label %539

517:                                              ; preds = %501
  %518 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 11
  store i8* %518, i8** %506, align 8
  %519 = urem i32 %513, 10
  %520 = trunc i32 %519 to i8
  %521 = or i8 %520, 48
  store i8 %521, i8* %518, align 1
  %522 = icmp ugt i32 %511, 99
  br i1 %522, label %523, label %539

523:                                              ; preds = %517
  %524 = udiv i32 %511, 100
  %525 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 10
  store i8* %525, i8** %506, align 8
  %526 = urem i32 %524, 10
  %527 = trunc i32 %526 to i8
  %528 = or i8 %527, 48
  store i8 %528, i8* %525, align 2
  %529 = icmp ugt i32 %511, 999
  br i1 %529, label %530, label %539

530:                                              ; preds = %523, %530
  %531 = phi i32 [ %533, %530 ], [ %524, %523 ]
  %532 = load i8*, i8** %506, align 8
  %533 = udiv i32 %531, 10
  %534 = getelementptr inbounds i8, i8* %532, i64 -1
  store i8* %534, i8** %506, align 8
  %535 = urem i32 %533, 10
  %536 = trunc i32 %535 to i8
  %537 = or i8 %536, 48
  store i8 %537, i8* %534, align 1
  %538 = icmp ugt i32 %531, 99
  br i1 %538, label %530, label %539

539:                                              ; preds = %530, %523, %517, %501
  br i1 %509, label %540, label %543

540:                                              ; preds = %539
  %541 = load i8*, i8** %506, align 8
  %542 = getelementptr inbounds i8, i8* %541, i64 -1
  store i8* %542, i8** %506, align 8
  store i8 45, i8* %542, align 1
  br label %543

543:                                              ; preds = %539, %540
  %544 = bitcast i8** %506 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = ptrtoint i8* %508 to i64
  %547 = sub i64 %546, %545
  %548 = trunc i64 %547 to i32
  store i32 %548, i32* %507, align 8
  %549 = inttoptr i64 %545 to i8*
  %550 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %549, i32 %548) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %504) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSE_SF_(%"class.WTF::StringAppend.2994"* nonnull sret %22, %"class.WTF::StringAppend.2995"* nonnull dereferenceable(72) %23, %"class.WTF::StringImpl"* %550)
  %551 = getelementptr inbounds [7 x i8], [7 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %551)
  %552 = getelementptr inbounds [7 x i8], [7 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %552)
  %553 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 0
  %554 = bitcast %"class.WTF::StringAppend.2994"* %22 to i64*
  %555 = load i64, i64* %554, align 8
  %556 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %556, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %557, null
  br i1 %558, label %576, label %559

559:                                              ; preds = %543
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load atomic i32, i32* %560 monotonic, align 4
  %562 = and i32 %561, 2
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %576

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = zext i32 %566 to i33
  %568 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %567, i33 1) #12
  %569 = extractvalue { i33, i1 } %568, 1
  %570 = extractvalue { i33, i1 } %568, 0
  %571 = icmp slt i33 %570, 0
  %572 = or i1 %569, %571
  br i1 %572, label %573, label %574, !prof !3

573:                                              ; preds = %564
  call void @llvm.trap() #12
  unreachable

574:                                              ; preds = %564
  %575 = trunc i33 %570 to i32
  store i32 %575, i32* %565, align 4
  br label %576

576:                                              ; preds = %574, %559, %543
  %577 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %578 = bitcast i8** %577 to i64*
  %579 = load i64, i64* %578, align 8
  %580 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %581 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %580, align 8
  %582 = icmp eq %"class.WTF::StringImpl"* %581, null
  br i1 %582, label %600, label %583

583:                                              ; preds = %576
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %600

588:                                              ; preds = %583
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %581, i64 0, i32 0
  %590 = load i32, i32* %589, align 4
  %591 = zext i32 %590 to i33
  %592 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %591, i33 1) #12
  %593 = extractvalue { i33, i1 } %592, 1
  %594 = extractvalue { i33, i1 } %592, 0
  %595 = icmp slt i33 %594, 0
  %596 = or i1 %593, %595
  br i1 %596, label %597, label %598, !prof !3

597:                                              ; preds = %588
  call void @llvm.trap() #12
  unreachable

598:                                              ; preds = %588
  %599 = trunc i33 %594 to i32
  store i32 %599, i32* %589, align 4
  br label %600

600:                                              ; preds = %598, %583, %576
  %601 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %602 = bitcast i8** %601 to i64*
  %603 = load i64, i64* %602, align 8
  %604 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %605 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %604, align 8
  %606 = icmp eq %"class.WTF::StringImpl"* %605, null
  br i1 %606, label %624, label %607

607:                                              ; preds = %600
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %609 = load atomic i32, i32* %608 monotonic, align 4
  %610 = and i32 %609, 2
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %624

612:                                              ; preds = %607
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 0
  %614 = load i32, i32* %613, align 4
  %615 = zext i32 %614 to i33
  %616 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %615, i33 1) #12
  %617 = extractvalue { i33, i1 } %616, 1
  %618 = extractvalue { i33, i1 } %616, 0
  %619 = icmp slt i33 %618, 0
  %620 = or i1 %617, %619
  br i1 %620, label %621, label %622, !prof !3

621:                                              ; preds = %612
  call void @llvm.trap() #12
  unreachable

622:                                              ; preds = %612
  %623 = trunc i33 %618 to i32
  store i32 %623, i32* %613, align 4
  br label %624

624:                                              ; preds = %622, %607, %600
  %625 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 0, i32 0, i32 1
  %626 = load i8, i8* %625, align 8
  %627 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %628 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %627, align 8
  %629 = icmp eq %"class.WTF::StringImpl"* %628, null
  br i1 %629, label %647, label %630

630:                                              ; preds = %624
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %628, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %632 = load atomic i32, i32* %631 monotonic, align 4
  %633 = and i32 %632, 2
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %647

635:                                              ; preds = %630
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %628, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  %638 = zext i32 %637 to i33
  %639 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %638, i33 1) #12
  %640 = extractvalue { i33, i1 } %639, 1
  %641 = extractvalue { i33, i1 } %639, 0
  %642 = icmp slt i33 %641, 0
  %643 = or i1 %640, %642
  br i1 %643, label %644, label %645, !prof !3

644:                                              ; preds = %635
  call void @llvm.trap() #12
  unreachable

645:                                              ; preds = %635
  %646 = trunc i33 %641 to i32
  store i32 %646, i32* %636, align 4
  br label %647

647:                                              ; preds = %624, %630, %645
  %648 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 0, i32 1
  %649 = load i8, i8* %648, align 8, !noalias !12
  %650 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %22, i64 0, i32 1, i32 0, i32 0
  %651 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %650, align 8, !noalias !12
  %652 = icmp eq %"class.WTF::StringImpl"* %651, null
  br i1 %652, label %670, label %653

653:                                              ; preds = %647
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %651, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = and i32 %655, 2
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %658, label %670

658:                                              ; preds = %653
  %659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %651, i64 0, i32 0
  %660 = load i32, i32* %659, align 4
  %661 = zext i32 %660 to i33
  %662 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %661, i33 1) #12
  %663 = extractvalue { i33, i1 } %662, 1
  %664 = extractvalue { i33, i1 } %662, 0
  %665 = icmp slt i33 %664, 0
  %666 = or i1 %663, %665
  br i1 %666, label %667, label %668, !prof !3

667:                                              ; preds = %658
  call void @llvm.trap() #12
  unreachable

668:                                              ; preds = %658
  %669 = trunc i33 %664 to i32
  store i32 %669, i32* %659, align 4
  br label %670

670:                                              ; preds = %647, %653, %668
  %671 = bitcast %"class.WTF::StringAppend.2994"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %671)
  %672 = bitcast %"class.WTF::StringAppend.2994"* %10 to i64*
  store i64 %555, i64* %672, align 8
  %673 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %557, %"class.WTF::StringImpl"** %673, align 8
  %674 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %675 = bitcast i8** %674 to i64*
  store i64 %579, i64* %675, align 8
  %676 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %581, %"class.WTF::StringImpl"** %676, align 8
  %677 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %678 = bitcast i8** %677 to i64*
  store i64 %603, i64* %678, align 8
  %679 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %605, %"class.WTF::StringImpl"** %679, align 8
  %680 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  store i8 %626, i8* %680, align 8
  %681 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %681, i8* nonnull align 1 %551, i64 7, i1 false)
  %682 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %628, %"class.WTF::StringImpl"** %682, align 8
  %683 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 1
  store i8 %649, i8* %683, align 8
  %684 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %684, i8* nonnull align 1 %552, i64 7, i1 false)
  %685 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %651, %"class.WTF::StringImpl"** %685, align 8
  %686 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 0
  %687 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %10, i64 0, i32 0, i32 0
  %688 = bitcast %"class.WTF::StringAppend.2993"* %21 to i64*
  store i64 %555, i64* %688, align 8
  %689 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %557, %"class.WTF::StringImpl"** %689, align 8
  br i1 %558, label %709, label %690

690:                                              ; preds = %670
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load atomic i32, i32* %691 monotonic, align 4
  %693 = and i32 %692, 2
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %695, label %709

695:                                              ; preds = %690
  %696 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %697 = load i32, i32* %696, align 4
  %698 = zext i32 %697 to i33
  %699 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %698, i33 1) #12
  %700 = extractvalue { i33, i1 } %699, 1
  %701 = extractvalue { i33, i1 } %699, 0
  %702 = icmp slt i33 %701, 0
  %703 = or i1 %700, %702
  br i1 %703, label %704, label %705, !prof !3

704:                                              ; preds = %695
  call void @llvm.trap() #12
  unreachable

705:                                              ; preds = %695
  %706 = trunc i33 %701 to i32
  store i32 %706, i32* %696, align 4
  %707 = load i64, i64* %675, align 8
  %708 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %676, align 8
  br label %709

709:                                              ; preds = %705, %690, %670
  %710 = phi %"class.WTF::StringImpl"* [ %708, %705 ], [ %581, %690 ], [ %581, %670 ]
  %711 = phi i64 [ %707, %705 ], [ %579, %690 ], [ %579, %670 ]
  %712 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %713 = bitcast i8** %712 to i64*
  store i64 %711, i64* %713, align 8
  %714 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %710, %"class.WTF::StringImpl"** %714, align 8
  %715 = icmp eq %"class.WTF::StringImpl"* %710, null
  br i1 %715, label %733, label %716

716:                                              ; preds = %709
  %717 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %710, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %718 = load atomic i32, i32* %717 monotonic, align 4
  %719 = and i32 %718, 2
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %733

721:                                              ; preds = %716
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %710, i64 0, i32 0
  %723 = load i32, i32* %722, align 4
  %724 = zext i32 %723 to i33
  %725 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %724, i33 1) #12
  %726 = extractvalue { i33, i1 } %725, 1
  %727 = extractvalue { i33, i1 } %725, 0
  %728 = icmp slt i33 %727, 0
  %729 = or i1 %726, %728
  br i1 %729, label %730, label %731, !prof !3

730:                                              ; preds = %721
  call void @llvm.trap() #12
  unreachable

731:                                              ; preds = %721
  %732 = trunc i33 %727 to i32
  store i32 %732, i32* %722, align 4
  br label %733

733:                                              ; preds = %731, %716, %709
  %734 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %735 = load i64, i64* %678, align 8
  %736 = bitcast i8** %734 to i64*
  store i64 %735, i64* %736, align 8
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %679, align 8
  %738 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %737, %"class.WTF::StringImpl"** %738, align 8
  %739 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %739, label %757, label %740

740:                                              ; preds = %733
  %741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %742 = load atomic i32, i32* %741 monotonic, align 4
  %743 = and i32 %742, 2
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %757

745:                                              ; preds = %740
  %746 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %747 = load i32, i32* %746, align 4
  %748 = zext i32 %747 to i33
  %749 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %748, i33 1) #12
  %750 = extractvalue { i33, i1 } %749, 1
  %751 = extractvalue { i33, i1 } %749, 0
  %752 = icmp slt i33 %751, 0
  %753 = or i1 %750, %752
  br i1 %753, label %754, label %755, !prof !3

754:                                              ; preds = %745
  call void @llvm.trap() #12
  unreachable

755:                                              ; preds = %745
  %756 = trunc i33 %751 to i32
  store i32 %756, i32* %746, align 4
  br label %757

757:                                              ; preds = %755, %740, %733
  %758 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %759 = load i8, i8* %680, align 8
  store i8 %759, i8* %758, align 8
  %760 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %682, align 8
  %761 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %760, %"class.WTF::StringImpl"** %761, align 8
  %762 = icmp eq %"class.WTF::StringImpl"* %760, null
  br i1 %762, label %780, label %763

763:                                              ; preds = %757
  %764 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %760, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %765 = load atomic i32, i32* %764 monotonic, align 4
  %766 = and i32 %765, 2
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %768, label %780

768:                                              ; preds = %763
  %769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %760, i64 0, i32 0
  %770 = load i32, i32* %769, align 4
  %771 = zext i32 %770 to i33
  %772 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %771, i33 1) #12
  %773 = extractvalue { i33, i1 } %772, 1
  %774 = extractvalue { i33, i1 } %772, 0
  %775 = icmp slt i33 %774, 0
  %776 = or i1 %773, %775
  br i1 %776, label %777, label %778, !prof !3

777:                                              ; preds = %768
  call void @llvm.trap() #12
  unreachable

778:                                              ; preds = %768
  %779 = trunc i33 %774 to i32
  store i32 %779, i32* %769, align 4
  br label %780

780:                                              ; preds = %757, %763, %778
  %781 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 0, i32 1
  %782 = load i8, i8* %683, align 8
  store i8 %782, i8* %781, align 8
  %783 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %685, align 8
  %784 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %783, %"class.WTF::StringImpl"** %784, align 8
  %785 = icmp eq %"class.WTF::StringImpl"* %783, null
  br i1 %785, label %786, label %788

786:                                              ; preds = %780
  %787 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 1
  store i8 32, i8* %787, align 8
  br label %824

788:                                              ; preds = %780
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %783, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %790 = load atomic i32, i32* %789 monotonic, align 4
  %791 = and i32 %790, 2
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %795, label %793

793:                                              ; preds = %788
  %794 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 1
  store i8 32, i8* %794, align 8
  br label %810

795:                                              ; preds = %788
  %796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %783, i64 0, i32 0
  %797 = load i32, i32* %796, align 4
  %798 = zext i32 %797 to i33
  %799 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %798, i33 1) #12
  %800 = extractvalue { i33, i1 } %799, 1
  %801 = extractvalue { i33, i1 } %799, 0
  %802 = icmp slt i33 %801, 0
  %803 = or i1 %800, %802
  br i1 %803, label %804, label %805, !prof !3

804:                                              ; preds = %795
  call void @llvm.trap() #12
  unreachable

805:                                              ; preds = %795
  %806 = trunc i33 %801 to i32
  store i32 %806, i32* %796, align 4
  %807 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %685, align 8
  %808 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %21, i64 0, i32 1
  store i8 32, i8* %808, align 8
  %809 = icmp eq %"class.WTF::StringImpl"* %807, null
  br i1 %809, label %824, label %810

810:                                              ; preds = %793, %805
  %811 = phi %"class.WTF::StringImpl"* [ %783, %793 ], [ %807, %805 ]
  %812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %811, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load atomic i32, i32* %812 monotonic, align 4
  %814 = and i32 %813, 2
  %815 = icmp eq i32 %814, 0
  %816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %811, i64 0, i32 0
  %817 = load i32, i32* %816, align 4
  br i1 %815, label %818, label %820

818:                                              ; preds = %810
  %819 = add i32 %817, -1
  store i32 %819, i32* %816, align 4
  br label %820

820:                                              ; preds = %818, %810
  %821 = phi i32 [ %819, %818 ], [ %817, %810 ]
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %823, label %824

823:                                              ; preds = %820
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %811) #12
  br label %824

824:                                              ; preds = %786, %805, %820, %823
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %687) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %671)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %551)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %552)
  %825 = load i32, i32* %36, align 4
  %826 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %826) #12
  %827 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  %828 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %829 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %830 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 13
  %831 = icmp slt i32 %825, 0
  %832 = sub i32 0, %825
  %833 = select i1 %831, i32 %832, i32 %825
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %826, i8 -86, i64 32, i1 false) #12
  store i8* %827, i8** %828, align 8
  %834 = urem i32 %833, 10
  %835 = udiv i32 %833, 10
  %836 = trunc i32 %834 to i8
  %837 = or i8 %836, 48
  store i8 %837, i8* %827, align 4
  %838 = icmp ugt i32 %833, 9
  br i1 %838, label %839, label %861

839:                                              ; preds = %824
  %840 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  store i8* %840, i8** %828, align 8
  %841 = urem i32 %835, 10
  %842 = trunc i32 %841 to i8
  %843 = or i8 %842, 48
  store i8 %843, i8* %840, align 1
  %844 = icmp ugt i32 %833, 99
  br i1 %844, label %845, label %861

845:                                              ; preds = %839
  %846 = udiv i32 %833, 100
  %847 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %847, i8** %828, align 8
  %848 = urem i32 %846, 10
  %849 = trunc i32 %848 to i8
  %850 = or i8 %849, 48
  store i8 %850, i8* %847, align 2
  %851 = icmp ugt i32 %833, 999
  br i1 %851, label %852, label %861

852:                                              ; preds = %845, %852
  %853 = phi i32 [ %855, %852 ], [ %846, %845 ]
  %854 = load i8*, i8** %828, align 8
  %855 = udiv i32 %853, 10
  %856 = getelementptr inbounds i8, i8* %854, i64 -1
  store i8* %856, i8** %828, align 8
  %857 = urem i32 %855, 10
  %858 = trunc i32 %857 to i8
  %859 = or i8 %858, 48
  store i8 %859, i8* %856, align 1
  %860 = icmp ugt i32 %853, 99
  br i1 %860, label %852, label %861

861:                                              ; preds = %852, %845, %839, %824
  br i1 %831, label %862, label %865

862:                                              ; preds = %861
  %863 = load i8*, i8** %828, align 8
  %864 = getelementptr inbounds i8, i8* %863, i64 -1
  store i8* %864, i8** %828, align 8
  store i8 45, i8* %864, align 1
  br label %865

865:                                              ; preds = %861, %862
  %866 = bitcast i8** %828 to i64*
  %867 = load i64, i64* %866, align 8
  %868 = ptrtoint i8* %830 to i64
  %869 = sub i64 %868, %867
  %870 = trunc i64 %869 to i32
  store i32 %870, i32* %829, align 8
  %871 = inttoptr i64 %867 to i8*
  %872 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %871, i32 %870) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %826) #12
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_EEcEES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSG_SH_(%"class.WTF::StringAppend.2992"* nonnull sret %20, %"class.WTF::StringAppend.2993"* nonnull dereferenceable(88) %21, %"class.WTF::StringImpl"* %872)
  %873 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_EcvS3_Ev(%"class.WTF::StringAppend.2992"* nonnull %20)
  %874 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %20, i64 0, i32 1, i32 0, i32 0
  %875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %874, align 8
  %876 = icmp eq %"class.WTF::StringImpl"* %875, null
  br i1 %876, label %890, label %877

877:                                              ; preds = %865
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %879 = load atomic i32, i32* %878 monotonic, align 4
  %880 = and i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 0
  %883 = load i32, i32* %882, align 4
  br i1 %881, label %884, label %886

884:                                              ; preds = %877
  %885 = add i32 %883, -1
  store i32 %885, i32* %882, align 4
  br label %886

886:                                              ; preds = %884, %877
  %887 = phi i32 [ %885, %884 ], [ %883, %877 ]
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %890

889:                                              ; preds = %886
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %875) #12
  br label %890

890:                                              ; preds = %889, %886, %865
  %891 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %892 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %891, align 8
  %893 = icmp eq %"class.WTF::StringImpl"* %892, null
  br i1 %893, label %907, label %894

894:                                              ; preds = %890
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %892, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %896 = load atomic i32, i32* %895 monotonic, align 4
  %897 = and i32 %896, 2
  %898 = icmp eq i32 %897, 0
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %892, i64 0, i32 0
  %900 = load i32, i32* %899, align 4
  br i1 %898, label %901, label %903

901:                                              ; preds = %894
  %902 = add i32 %900, -1
  store i32 %902, i32* %899, align 4
  br label %903

903:                                              ; preds = %901, %894
  %904 = phi i32 [ %902, %901 ], [ %900, %894 ]
  %905 = icmp eq i32 %904, 0
  br i1 %905, label %906, label %907

906:                                              ; preds = %903
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %892) #12
  br label %907

907:                                              ; preds = %890, %903, %906
  %908 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %908) #12
  %909 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %784, align 8
  %910 = icmp eq %"class.WTF::StringImpl"* %909, null
  br i1 %910, label %924, label %911

911:                                              ; preds = %907
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %913 = load atomic i32, i32* %912 monotonic, align 4
  %914 = and i32 %913, 2
  %915 = icmp eq i32 %914, 0
  %916 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 0
  %917 = load i32, i32* %916, align 4
  br i1 %915, label %918, label %920

918:                                              ; preds = %911
  %919 = add i32 %917, -1
  store i32 %919, i32* %916, align 4
  br label %920

920:                                              ; preds = %918, %911
  %921 = phi i32 [ %919, %918 ], [ %917, %911 ]
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %923, label %924

923:                                              ; preds = %920
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %909) #12
  br label %924

924:                                              ; preds = %907, %920, %923
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %686) #12
  %925 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %650, align 8
  %926 = icmp eq %"class.WTF::StringImpl"* %925, null
  br i1 %926, label %940, label %927

927:                                              ; preds = %924
  %928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %929 = load atomic i32, i32* %928 monotonic, align 4
  %930 = and i32 %929, 2
  %931 = icmp eq i32 %930, 0
  %932 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %925, i64 0, i32 0
  %933 = load i32, i32* %932, align 4
  br i1 %931, label %934, label %936

934:                                              ; preds = %927
  %935 = add i32 %933, -1
  store i32 %935, i32* %932, align 4
  br label %936

936:                                              ; preds = %934, %927
  %937 = phi i32 [ %935, %934 ], [ %933, %927 ]
  %938 = icmp eq i32 %937, 0
  br i1 %938, label %939, label %940

939:                                              ; preds = %936
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %925) #12
  br label %940

940:                                              ; preds = %924, %936, %939
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %553) #12
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %408) #12
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %24) #12
  %941 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  %942 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %941, align 8
  %943 = icmp eq %"class.WTF::StringImpl"* %942, null
  br i1 %943, label %957, label %944

944:                                              ; preds = %940
  %945 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %942, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %946 = load atomic i32, i32* %945 monotonic, align 4
  %947 = and i32 %946, 2
  %948 = icmp eq i32 %947, 0
  %949 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %942, i64 0, i32 0
  %950 = load i32, i32* %949, align 4
  br i1 %948, label %951, label %953

951:                                              ; preds = %944
  %952 = add i32 %950, -1
  store i32 %952, i32* %949, align 4
  br label %953

953:                                              ; preds = %951, %944
  %954 = phi i32 [ %952, %951 ], [ %950, %944 ]
  %955 = icmp eq i32 %954, 0
  br i1 %955, label %956, label %957

956:                                              ; preds = %953
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %942) #12
  br label %957

957:                                              ; preds = %956, %953, %940
  %958 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %959 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %958, align 8
  %960 = icmp eq %"class.WTF::StringImpl"* %959, null
  br i1 %960, label %974, label %961

961:                                              ; preds = %957
  %962 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %959, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %963 = load atomic i32, i32* %962 monotonic, align 4
  %964 = and i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %959, i64 0, i32 0
  %967 = load i32, i32* %966, align 4
  br i1 %965, label %968, label %970

968:                                              ; preds = %961
  %969 = add i32 %967, -1
  store i32 %969, i32* %966, align 4
  br label %970

970:                                              ; preds = %968, %961
  %971 = phi i32 [ %969, %968 ], [ %967, %961 ]
  %972 = icmp eq i32 %971, 0
  br i1 %972, label %973, label %974

973:                                              ; preds = %970
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %959) #12
  br label %974

974:                                              ; preds = %973, %970, %957
  %975 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %976 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %975, align 8
  %977 = icmp eq %"class.WTF::StringImpl"* %976, null
  br i1 %977, label %991, label %978

978:                                              ; preds = %974
  %979 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %976, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %980 = load atomic i32, i32* %979 monotonic, align 4
  %981 = and i32 %980, 2
  %982 = icmp eq i32 %981, 0
  %983 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %976, i64 0, i32 0
  %984 = load i32, i32* %983, align 4
  br i1 %982, label %985, label %987

985:                                              ; preds = %978
  %986 = add i32 %984, -1
  store i32 %986, i32* %983, align 4
  br label %987

987:                                              ; preds = %985, %978
  %988 = phi i32 [ %986, %985 ], [ %984, %978 ]
  %989 = icmp eq i32 %988, 0
  br i1 %989, label %990, label %991

990:                                              ; preds = %987
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %976) #12
  br label %991

991:                                              ; preds = %974, %987, %990
  %992 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %26, i64 0, i32 1, i32 0, i32 0
  %993 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %992, align 8
  %994 = icmp eq %"class.WTF::StringImpl"* %993, null
  br i1 %994, label %1008, label %995

995:                                              ; preds = %991
  %996 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %993, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %997 = load atomic i32, i32* %996 monotonic, align 4
  %998 = and i32 %997, 2
  %999 = icmp eq i32 %998, 0
  %1000 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %993, i64 0, i32 0
  %1001 = load i32, i32* %1000, align 4
  br i1 %999, label %1002, label %1004

1002:                                             ; preds = %995
  %1003 = add i32 %1001, -1
  store i32 %1003, i32* %1000, align 4
  br label %1004

1004:                                             ; preds = %1002, %995
  %1005 = phi i32 [ %1003, %1002 ], [ %1001, %995 ]
  %1006 = icmp eq i32 %1005, 0
  br i1 %1006, label %1007, label %1008

1007:                                             ; preds = %1004
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %993) #12
  br label %1008

1008:                                             ; preds = %1007, %1004, %991
  %1009 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1010 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1009, align 8
  %1011 = icmp eq %"class.WTF::StringImpl"* %1010, null
  br i1 %1011, label %1025, label %1012

1012:                                             ; preds = %1008
  %1013 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1010, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1014 = load atomic i32, i32* %1013 monotonic, align 4
  %1015 = and i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  %1017 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1010, i64 0, i32 0
  %1018 = load i32, i32* %1017, align 4
  br i1 %1016, label %1019, label %1021

1019:                                             ; preds = %1012
  %1020 = add i32 %1018, -1
  store i32 %1020, i32* %1017, align 4
  br label %1021

1021:                                             ; preds = %1019, %1012
  %1022 = phi i32 [ %1020, %1019 ], [ %1018, %1012 ]
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1024, label %1025

1024:                                             ; preds = %1021
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1010) #12
  br label %1025

1025:                                             ; preds = %1024, %1021, %1008
  %1026 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1027 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1026, align 8
  %1028 = icmp eq %"class.WTF::StringImpl"* %1027, null
  br i1 %1028, label %1042, label %1029

1029:                                             ; preds = %1025
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1027, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1031 = load atomic i32, i32* %1030 monotonic, align 4
  %1032 = and i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1027, i64 0, i32 0
  %1035 = load i32, i32* %1034, align 4
  br i1 %1033, label %1036, label %1038

1036:                                             ; preds = %1029
  %1037 = add i32 %1035, -1
  store i32 %1037, i32* %1034, align 4
  br label %1038

1038:                                             ; preds = %1036, %1029
  %1039 = phi i32 [ %1037, %1036 ], [ %1035, %1029 ]
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1041, label %1042

1041:                                             ; preds = %1038
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1027) #12
  br label %1042

1042:                                             ; preds = %1025, %1038, %1041
  %1043 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %27, i64 0, i32 0, i32 1, i32 0, i32 0
  %1044 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1043, align 8
  %1045 = icmp eq %"class.WTF::StringImpl"* %1044, null
  br i1 %1045, label %1059, label %1046

1046:                                             ; preds = %1042
  %1047 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1044, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1048 = load atomic i32, i32* %1047 monotonic, align 4
  %1049 = and i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1044, i64 0, i32 0
  %1052 = load i32, i32* %1051, align 4
  br i1 %1050, label %1053, label %1055

1053:                                             ; preds = %1046
  %1054 = add i32 %1052, -1
  store i32 %1054, i32* %1051, align 4
  br label %1055

1055:                                             ; preds = %1053, %1046
  %1056 = phi i32 [ %1054, %1053 ], [ %1052, %1046 ]
  %1057 = icmp eq i32 %1056, 0
  br i1 %1057, label %1058, label %1059

1058:                                             ; preds = %1055
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1044) #12
  br label %1059

1059:                                             ; preds = %1058, %1055, %1042
  %1060 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1061 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1060, align 8
  %1062 = icmp eq %"class.WTF::StringImpl"* %1061, null
  br i1 %1062, label %1076, label %1063

1063:                                             ; preds = %1059
  %1064 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1061, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1065 = load atomic i32, i32* %1064 monotonic, align 4
  %1066 = and i32 %1065, 2
  %1067 = icmp eq i32 %1066, 0
  %1068 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1061, i64 0, i32 0
  %1069 = load i32, i32* %1068, align 4
  br i1 %1067, label %1070, label %1072

1070:                                             ; preds = %1063
  %1071 = add i32 %1069, -1
  store i32 %1071, i32* %1068, align 4
  br label %1072

1072:                                             ; preds = %1070, %1063
  %1073 = phi i32 [ %1071, %1070 ], [ %1069, %1063 ]
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1075, label %1076

1075:                                             ; preds = %1072
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1061) #12
  br label %1076

1076:                                             ; preds = %1059, %1072, %1075
  %1077 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %1078 = icmp eq %"class.WTF::StringImpl"* %1077, null
  br i1 %1078, label %1092, label %1079

1079:                                             ; preds = %1076
  %1080 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1077, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1081 = load atomic i32, i32* %1080 monotonic, align 4
  %1082 = and i32 %1081, 2
  %1083 = icmp eq i32 %1082, 0
  %1084 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1077, i64 0, i32 0
  %1085 = load i32, i32* %1084, align 4
  br i1 %1083, label %1086, label %1088

1086:                                             ; preds = %1079
  %1087 = add i32 %1085, -1
  store i32 %1087, i32* %1084, align 4
  br label %1088

1088:                                             ; preds = %1086, %1079
  %1089 = phi i32 [ %1087, %1086 ], [ %1085, %1079 ]
  %1090 = icmp eq i32 %1089, 0
  br i1 %1090, label %1091, label %1092

1091:                                             ; preds = %1088
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1077) #12
  br label %1092

1092:                                             ; preds = %1091, %1088, %1076
  %1093 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %1094 = icmp eq %"class.WTF::StringImpl"* %1093, null
  br i1 %1094, label %1108, label %1095

1095:                                             ; preds = %1092
  %1096 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1093, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1097 = load atomic i32, i32* %1096 monotonic, align 4
  %1098 = and i32 %1097, 2
  %1099 = icmp eq i32 %1098, 0
  %1100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1093, i64 0, i32 0
  %1101 = load i32, i32* %1100, align 4
  br i1 %1099, label %1102, label %1104

1102:                                             ; preds = %1095
  %1103 = add i32 %1101, -1
  store i32 %1103, i32* %1100, align 4
  br label %1104

1104:                                             ; preds = %1102, %1095
  %1105 = phi i32 [ %1103, %1102 ], [ %1101, %1095 ]
  %1106 = icmp eq i32 %1105, 0
  br i1 %1106, label %1107, label %1108

1107:                                             ; preds = %1104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1093) #12
  br label %1108

1108:                                             ; preds = %1092, %1104, %1107
  %1109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %1110 = icmp eq %"class.WTF::StringImpl"* %1109, null
  br i1 %1110, label %1124, label %1111

1111:                                             ; preds = %1108
  %1112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1113 = load atomic i32, i32* %1112 monotonic, align 4
  %1114 = and i32 %1113, 2
  %1115 = icmp eq i32 %1114, 0
  %1116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1109, i64 0, i32 0
  %1117 = load i32, i32* %1116, align 4
  br i1 %1115, label %1118, label %1120

1118:                                             ; preds = %1111
  %1119 = add i32 %1117, -1
  store i32 %1119, i32* %1116, align 4
  br label %1120

1120:                                             ; preds = %1118, %1111
  %1121 = phi i32 [ %1119, %1118 ], [ %1117, %1111 ]
  %1122 = icmp eq i32 %1121, 0
  br i1 %1122, label %1123, label %1124

1123:                                             ; preds = %1120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1109) #12
  br label %1124

1124:                                             ; preds = %1108, %1120, %1123
  br i1 %55, label %1150, label %1125

1125:                                             ; preds = %1124
  %1126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1127 = load atomic i32, i32* %1126 monotonic, align 4
  %1128 = and i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %1131 = load i32, i32* %1130, align 4
  br i1 %1129, label %1132, label %1134

1132:                                             ; preds = %1125
  %1133 = add i32 %1131, -1
  store i32 %1133, i32* %1130, align 4
  br label %1134

1134:                                             ; preds = %1132, %1125
  %1135 = phi i32 [ %1133, %1132 ], [ %1131, %1125 ]
  %1136 = icmp eq i32 %1135, 0
  br i1 %1136, label %1137, label %1139

1137:                                             ; preds = %1134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  %1138 = load i32, i32* %1130, align 4
  br label %1139

1139:                                             ; preds = %1134, %1137
  %1140 = phi i32 [ %1135, %1134 ], [ %1138, %1137 ]
  %1141 = load atomic i32, i32* %1126 monotonic, align 4
  %1142 = and i32 %1141, 2
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1144, label %1146

1144:                                             ; preds = %1139
  %1145 = add i32 %1140, -1
  store i32 %1145, i32* %1130, align 4
  br label %1146

1146:                                             ; preds = %1144, %1139
  %1147 = phi i32 [ %1145, %1144 ], [ %1140, %1139 ]
  %1148 = icmp eq i32 %1147, 0
  br i1 %1148, label %1149, label %1150

1149:                                             ; preds = %1146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %1150

1150:                                             ; preds = %1124, %1146, %1149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #12
  ret %"class.WTF::StringImpl"* %873
}

declare void @_ZN5blink8Document18GetPageDescriptionEjPNS_23WebPrintPageDescriptionE(%"class.blink::Document"*, i32, %"struct.blink::WebPrintPageDescription"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_EEcEES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSG_SH_(%"class.WTF::StringAppend.2992"* noalias sret, %"class.WTF::StringAppend.2993"* dereferenceable(88), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2993", align 8
  %5 = bitcast %"class.WTF::StringAppend.2993"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2993"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #12
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  tail call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %29
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #12
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %71
  tail call void @llvm.trap() #12
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %56
  %84 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i8, i8* %85, align 8
  store i8 %86, i8* %84, align 8
  %87 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %89, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #12
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !3

105:                                              ; preds = %96
  tail call void @llvm.trap() #12
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %83, %91, %106
  %109 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 1
  %111 = load i8, i8* %110, align 8
  store i8 %111, i8* %109, align 8
  %112 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %114, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %115, label %133, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %133

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i33
  %125 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #12
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !3

130:                                              ; preds = %121
  tail call void @llvm.trap() #12
  unreachable

131:                                              ; preds = %121
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %122, align 4
  br label %133

133:                                              ; preds = %108, %116, %131
  %134 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %4, i64 0, i32 1
  %135 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 1
  %136 = load i8, i8* %135, align 8
  store i8 %136, i8* %134, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %137, label %155, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %156

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i33
  %147 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %146, i33 1) #12
  %148 = extractvalue { i33, i1 } %147, 1
  %149 = extractvalue { i33, i1 } %147, 0
  %150 = icmp slt i33 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %152, label %153, !prof !3

152:                                              ; preds = %143
  tail call void @llvm.trap() #12
  unreachable

153:                                              ; preds = %143
  %154 = trunc i33 %149 to i32
  store i32 %154, i32* %144, align 4
  br label %156

155:                                              ; preds = %133
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_EC2ESD_S3_(%"class.WTF::StringAppend.2992"* %0, %"class.WTF::StringAppend.2993"* nonnull byval(%"class.WTF::StringAppend.2993") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %168

156:                                              ; preds = %138, %153
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_EC2ESD_S3_(%"class.WTF::StringAppend.2992"* %0, %"class.WTF::StringAppend.2993"* nonnull byval(%"class.WTF::StringAppend.2993") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %157 = load atomic i32, i32* %139 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %156
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %156
  %165 = phi i32 [ %163, %162 ], [ %161, %156 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %168

168:                                              ; preds = %155, %164, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSE_SF_(%"class.WTF::StringAppend.2994"* noalias sret, %"class.WTF::StringAppend.2995"* dereferenceable(72), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2995", align 8
  %5 = alloca [7 x i8], align 1
  %6 = alloca [7 x i8], align 1
  %7 = bitcast %"class.WTF::StringAppend.2995"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %36, %29
  %54 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #12
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %65
  tail call void @llvm.trap() #12
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %75, %60, %53
  %78 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %1, i64 0, i32 0, i32 0, i32 1
  %79 = load i8, i8* %78, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #12
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #12
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %77, %83, %98
  %101 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %1, i64 0, i32 1
  %102 = load i8, i8* %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #12
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !3

118:                                              ; preds = %109
  tail call void @llvm.trap() #12
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %100, %104, %119
  %122 = bitcast %"class.WTF::StringAppend.2995"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %122)
  %123 = bitcast %"class.WTF::StringAppend.2995"* %4 to i64*
  store i64 %8, i64* %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = bitcast i8** %125 to i64*
  store i64 %32, i64* %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = bitcast i8** %128 to i64*
  store i64 %56, i64* %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0, i32 0, i32 1
  store i8 %79, i8* %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0, i32 0, i32 2, i64 0
  %133 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* nonnull align 1 %133, i64 7, i1 false)
  %134 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %134, align 8
  %135 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 1
  store i8 %102, i8* %135, align 8
  %136 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 2, i64 0
  %137 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %136, i8* nonnull align 1 %137, i64 7, i1 false)
  %138 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %4, i64 0, i32 0
  %139 = bitcast %"class.WTF::StringAppend.2994"* %0 to i64*
  store i64 %8, i64* %139, align 8
  %140 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %140, align 8
  br i1 %11, label %160, label %141

141:                                              ; preds = %121
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %160

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i33
  %150 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #12
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !3

155:                                              ; preds = %146
  tail call void @llvm.trap() #12
  unreachable

156:                                              ; preds = %146
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %147, align 4
  %158 = load i64, i64* %126, align 8
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  br label %160

160:                                              ; preds = %156, %141, %121
  %161 = phi %"class.WTF::StringImpl"* [ %159, %156 ], [ %34, %141 ], [ %34, %121 ]
  %162 = phi i64 [ %158, %156 ], [ %32, %141 ], [ %32, %121 ]
  %163 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = bitcast i8** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %165, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %166, label %184, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i33
  %176 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %175, i33 1) #12
  %177 = extractvalue { i33, i1 } %176, 1
  %178 = extractvalue { i33, i1 } %176, 0
  %179 = icmp slt i33 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %181, label %182, !prof !3

181:                                              ; preds = %172
  tail call void @llvm.trap() #12
  unreachable

182:                                              ; preds = %172
  %183 = trunc i33 %178 to i32
  store i32 %183, i32* %173, align 4
  br label %184

184:                                              ; preds = %182, %167, %160
  %185 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %186 = load i64, i64* %129, align 8
  %187 = bitcast i8** %185 to i64*
  store i64 %186, i64* %187, align 8
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %189 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %189, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %190, label %208, label %191

191:                                              ; preds = %184
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = zext i32 %198 to i33
  %200 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %199, i33 1) #12
  %201 = extractvalue { i33, i1 } %200, 1
  %202 = extractvalue { i33, i1 } %200, 0
  %203 = icmp slt i33 %202, 0
  %204 = or i1 %201, %203
  br i1 %204, label %205, label %206, !prof !3

205:                                              ; preds = %196
  tail call void @llvm.trap() #12
  unreachable

206:                                              ; preds = %196
  %207 = trunc i33 %202 to i32
  store i32 %207, i32* %197, align 4
  br label %208

208:                                              ; preds = %206, %191, %184
  %209 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %210 = load i8, i8* %131, align 8
  store i8 %210, i8* %209, align 8
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %212 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %212, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %213, label %231, label %214

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i33
  %223 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %222, i33 1) #12
  %224 = extractvalue { i33, i1 } %223, 1
  %225 = extractvalue { i33, i1 } %223, 0
  %226 = icmp slt i33 %225, 0
  %227 = or i1 %224, %226
  br i1 %227, label %228, label %229, !prof !3

228:                                              ; preds = %219
  tail call void @llvm.trap() #12
  unreachable

229:                                              ; preds = %219
  %230 = trunc i33 %225 to i32
  store i32 %230, i32* %220, align 4
  br label %231

231:                                              ; preds = %208, %214, %229
  %232 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 1
  %233 = load i8, i8* %135, align 8
  store i8 %233, i8* %232, align 8
  %234 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %234, align 8
  br i1 %103, label %263, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %252

242:                                              ; preds = %235
  %243 = zext i32 %241 to i33
  %244 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %243, i33 1) #12
  %245 = extractvalue { i33, i1 } %244, 1
  %246 = extractvalue { i33, i1 } %244, 0
  %247 = icmp slt i33 %246, 0
  %248 = or i1 %245, %247
  br i1 %248, label %249, label %250, !prof !3

249:                                              ; preds = %242
  tail call void @llvm.trap() #12
  unreachable

250:                                              ; preds = %242
  %251 = trunc i33 %246 to i32
  store i32 %251, i32* %240, align 4
  br label %252

252:                                              ; preds = %250, %235
  %253 = phi i32 [ %251, %250 ], [ %241, %235 ]
  %254 = load atomic i32, i32* %236 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %252
  %258 = add i32 %253, -1
  store i32 %258, i32* %240, align 4
  br label %259

259:                                              ; preds = %257, %252
  %260 = phi i32 [ %258, %257 ], [ %253, %252 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %259
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %264

263:                                              ; preds = %231
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %138) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %122)
  br label %275

264:                                              ; preds = %259, %262
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %138) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %122)
  %265 = load atomic i32, i32* %236 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = load i32, i32* %240, align 4
  br i1 %267, label %269, label %271

269:                                              ; preds = %264
  %270 = add i32 %268, -1
  store i32 %270, i32* %240, align 4
  br label %271

271:                                              ; preds = %269, %264
  %272 = phi i32 [ %270, %269 ], [ %268, %264 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %275

275:                                              ; preds = %263, %271, %274
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcS4_EENS1_INS1_IT_T0_EET1_EERKSC_SD_(%"class.WTF::StringAppend.2996"* noalias sret, %"class.WTF::StringAppend.2997"* dereferenceable(56), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2997", align 8
  %5 = bitcast %"class.WTF::StringAppend.2997"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2997"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #12
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  tail call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %29
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %4, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #12
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %71
  tail call void @llvm.trap() #12
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %56, %66, %81
  %84 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %4, i64 0, i32 1
  %85 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 1
  %86 = load i8, i8* %85, align 8
  store i8 %86, i8* %84, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %106

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #12
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %93
  tail call void @llvm.trap() #12
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %106

105:                                              ; preds = %83
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EC2ES9_S3_(%"class.WTF::StringAppend.2996"* %0, %"class.WTF::StringAppend.2997"* nonnull byval(%"class.WTF::StringAppend.2997") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %118

106:                                              ; preds = %88, %103
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EC2ES9_S3_(%"class.WTF::StringAppend.2996"* %0, %"class.WTF::StringAppend.2997"* nonnull byval(%"class.WTF::StringAppend.2997") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %107 = load atomic i32, i32* %89 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %106
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %106
  %115 = phi i32 [ %113, %112 ], [ %111, %106 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %118

118:                                              ; preds = %105, %114, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_cEENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.2997"* noalias sret, %"class.WTF::StringAppend.2998"* dereferenceable(48), i8 signext) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2998", align 8
  %5 = bitcast %"class.WTF::StringAppend.2998"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2998"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #12
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  tail call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %29
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %4, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #12
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %71
  tail call void @llvm.trap() #12
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %56, %66, %81
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEC2ES8_c(%"class.WTF::StringAppend.2997"* %0, %"class.WTF::StringAppend.2998"* nonnull byval(%"class.WTF::StringAppend.2998") align 8 %4, i8 signext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.2998"* noalias sret, %"class.WTF::StringAppend.2999"* dereferenceable(40), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2999", align 8
  %5 = bitcast %"class.WTF::StringAppend.2999"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2999"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %4, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #12
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %44
  tail call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %29, %39, %54
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %4, i64 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %1, i64 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %68
  tail call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %81

80:                                               ; preds = %56
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.2998"* %0, %"class.WTF::StringAppend.2999"* nonnull byval(%"class.WTF::StringAppend.2999") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %93

81:                                               ; preds = %63, %78
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.2998"* %0, %"class.WTF::StringAppend.2999"* nonnull byval(%"class.WTF::StringAppend.2999") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %81
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %81
  %90 = phi i32 [ %88, %87 ], [ %86, %81 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %93

93:                                               ; preds = %80, %89, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.3000"* noalias sret, %"class.WTF::StringAppend.3001"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.3001", align 8
  %5 = bitcast %"class.WTF::StringAppend.3001"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.3001"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #12
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.3000"* %0, %"class.WTF::StringAppend.3001"* nonnull byval(%"class.WTF::StringAppend.3001") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.3000"* %0, %"class.WTF::StringAppend.3001"* nonnull byval(%"class.WTF::StringAppend.3001") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_EcvS3_Ev(%"class.WTF::StringAppend.2992"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6Is8BitEv(%"class.WTF::StringAppend.2994"* %11) #12
  br i1 %12, label %13, label %114

13:                                               ; preds = %1
  %14 = icmp eq %"class.WTF::StringImpl"* %9, null
  %15 = select i1 %14, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %114, label %20

20:                                               ; preds = %13
  %21 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %22 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2992"* %0)
  %23 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %22, i8** nonnull dereferenceable(8) %6) #12
  %24 = load i8*, i8** %6, align 8
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0
  %26 = bitcast %"class.WTF::StringTypeAdapter.3174"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %5, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #12
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %20
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %20
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.3174"* %5 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 1
  %45 = load i8, i8* %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false) #12
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %39
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %61

55:                                               ; preds = %39
  %56 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  %60 = bitcast %"class.WTF::StringImpl"* %59 to i8*
  br label %61

61:                                               ; preds = %53, %55
  %62 = phi i8* [ null, %53 ], [ %60, %55 ]
  %63 = phi i64 [ %54, %53 ], [ %56, %55 ]
  %64 = phi i32 [ 0, %53 ], [ %58, %55 ]
  %65 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i64*
  store i64 %63, i64* %65, align 8
  store i8* %62, i8** %48, align 8
  store i32 %64, i32* %49, align 8
  %66 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i8, i8* %67, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E7WriteToEPh(%"class.WTF::StringAppend.2996"* %66, i8* %24) #12
  %69 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2996"* %66) #12
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %24, i64 %70
  store i8 %68, i8* %71, align 1
  %72 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0
  %73 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2995"* %46) #12
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %24, i64 %74
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %72, i8* %75) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  %76 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2994"* %11) #12
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %24, i64 %77
  store i8 %45, i8* %78, align 1
  %79 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %5, i64 0, i32 0
  %80 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2993"* %25) #12
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %24, i64 %81
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %79, i8* %82) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %83 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %83, label %210, label %84

84:                                               ; preds = %61
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %101

91:                                               ; preds = %84
  %92 = zext i32 %90 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #12
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !3

98:                                               ; preds = %91
  call void @llvm.trap() #12
  unreachable

99:                                               ; preds = %91
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %89, align 4
  br label %101

101:                                              ; preds = %84, %99
  %102 = phi i32 [ %100, %99 ], [ %90, %84 ]
  %103 = ptrtoint %"class.WTF::StringImpl"* %23 to i64
  %104 = load atomic i32, i32* %85 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %109 = add i32 %102, -1
  store i32 %109, i32* %108, align 4
  br label %110

110:                                              ; preds = %107, %101
  %111 = phi i32 [ %109, %107 ], [ %102, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %210

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #12
  br label %210

114:                                              ; preds = %13, %1
  %115 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %116 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2992"* %0)
  %117 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %116, i16** nonnull dereferenceable(8) %7) #12
  %118 = load i16*, i16** %7, align 8
  %119 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0
  %120 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #12
  %121 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 24, i1 false) #12
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %114
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %133

127:                                              ; preds = %114
  %128 = ptrtoint %"class.WTF::StringImpl"* %123 to i64
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 1
  %132 = bitcast %"class.WTF::StringImpl"* %131 to i8*
  br label %133

133:                                              ; preds = %125, %127
  %134 = phi i8* [ null, %125 ], [ %132, %127 ]
  %135 = phi i64 [ %126, %125 ], [ %128, %127 ]
  %136 = phi i32 [ 0, %125 ], [ %130, %127 ]
  %137 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i64*
  store i64 %135, i64* %137, align 8
  store i8* %134, i8** %121, align 8
  store i32 %136, i32* %122, align 8
  %138 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 1
  %139 = load i8, i8* %138, align 8
  %140 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.WTF::StringTypeAdapter.3174"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #12
  %142 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0, i32 0, i32 1
  %143 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0, i32 0, i32 2
  %144 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 24, i1 false) #12
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %147, label %149

147:                                              ; preds = %133
  %148 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %155

149:                                              ; preds = %133
  %150 = ptrtoint %"class.WTF::StringImpl"* %145 to i64
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 1
  %154 = bitcast %"class.WTF::StringImpl"* %153 to i8*
  br label %155

155:                                              ; preds = %147, %149
  %156 = phi i8* [ null, %147 ], [ %154, %149 ]
  %157 = phi i64 [ %148, %147 ], [ %150, %149 ]
  %158 = phi i32 [ 0, %147 ], [ %152, %149 ]
  %159 = bitcast %"class.WTF::StringTypeAdapter.3174"* %2 to i64*
  store i64 %157, i64* %159, align 8
  store i8* %156, i8** %142, align 8
  store i32 %158, i32* %143, align 8
  %160 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i8, i8* %161, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E7WriteToEPDs(%"class.WTF::StringAppend.2996"* %160, i16* %118) #12
  %163 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2996"* %160) #12
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds i16, i16* %118, i64 %164
  %166 = zext i8 %162 to i16
  store i16 %166, i16* %165, align 2
  %167 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %2, i64 0, i32 0
  %168 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2995"* %140) #12
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i16, i16* %118, i64 %169
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %167, i16* %170) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #12
  %171 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2994"* %11) #12
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds i16, i16* %118, i64 %172
  %174 = zext i8 %139 to i16
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0
  %176 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2993"* %119) #12
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i16, i16* %118, i64 %177
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %175, i16* %178) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #12
  %179 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %179, label %210, label %180

180:                                              ; preds = %155
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %197

187:                                              ; preds = %180
  %188 = zext i32 %186 to i33
  %189 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %188, i33 1) #12
  %190 = extractvalue { i33, i1 } %189, 1
  %191 = extractvalue { i33, i1 } %189, 0
  %192 = icmp slt i33 %191, 0
  %193 = or i1 %190, %192
  br i1 %193, label %194, label %195, !prof !3

194:                                              ; preds = %187
  call void @llvm.trap() #12
  unreachable

195:                                              ; preds = %187
  %196 = trunc i33 %191 to i32
  store i32 %196, i32* %185, align 4
  br label %197

197:                                              ; preds = %180, %195
  %198 = phi i32 [ %196, %195 ], [ %186, %180 ]
  %199 = ptrtoint %"class.WTF::StringImpl"* %117 to i64
  %200 = load atomic i32, i32* %181 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %205 = add i32 %198, -1
  store i32 %205, i32* %204, align 4
  br label %206

206:                                              ; preds = %203, %197
  %207 = phi i32 [ %205, %203 ], [ %198, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #12
  br label %210

210:                                              ; preds = %209, %206, %155, %113, %110, %61
  %211 = phi i8* [ %21, %61 ], [ %21, %110 ], [ %21, %113 ], [ %115, %155 ], [ %115, %206 ], [ %115, %209 ]
  %212 = phi i64 [ 0, %61 ], [ %103, %110 ], [ %103, %113 ], [ 0, %155 ], [ %199, %206 ], [ %199, %209 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #12
  %213 = inttoptr i64 %212 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %213
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %34, %31, %18
  %36 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #12
  br label %69

69:                                               ; preds = %52, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12PrintContext13NumberOfPagesEPNS_10LocalFrameERKNS_9FloatSizeE(%"class.blink::LocalFrame"*, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::FloatSize"*
  %5 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %0) #12
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %5, i32 19) #12
  %6 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = ptrtoint %"class.blink::LocalFrame"* %0 to i64
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12PrintContextEEEPhm(i64 72) #12
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12PrintContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = getelementptr inbounds i8, i8* %11, i64 33
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 17, i1 false) #12
  store i8 1, i8* %16, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #12
  %18 = getelementptr inbounds i8, i8* %11, i64 64
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = bitcast i8* %11 to %"class.blink::PrintContext"*
  %24 = bitcast i8* %11 to void (%"class.blink::PrintContext"*, float, float)***
  %25 = load void (%"class.blink::PrintContext"*, float, float)**, void (%"class.blink::PrintContext"*, float, float)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::PrintContext"*, float, float)*, void (%"class.blink::PrintContext"*, float, float)** %25, i64 4
  %27 = load void (%"class.blink::PrintContext"*, float, float)*, void (%"class.blink::PrintContext"*, float, float)** %26, align 8
  tail call void %27(%"class.blink::PrintContext"* %23, float %7, float %9) #12
  %28 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = bitcast i64* %3 to float*
  %30 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 1
  %31 = bitcast %"class.blink::FloatSize"* %1 to i64*
  %32 = load i64, i64* %31, align 4
  %33 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 11, i32 0, i32 0
  %34 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %33, align 8
  %35 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* %34) #12
  %36 = tail call i64 @_ZNK5blink24PaintLayerScrollableArea12ContentsSizeEv(%"class.blink::PaintLayerScrollableArea"* %35) #12
  %37 = trunc i64 %36 to i32
  %38 = sitofp i32 %37 to float
  %39 = fdiv float %38, %7
  %40 = trunc i64 %32 to i32
  %41 = bitcast i32 %40 to float
  %42 = fmul float %39, %41
  store float %42, float* %29, align 8
  %43 = lshr i64 %32, 32
  %44 = trunc i64 %43 to i32
  %45 = bitcast i32 %44 to float
  %46 = fmul float %39, %45
  store float %46, float* %30, align 4
  %47 = bitcast i8* %11 to void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)***
  %48 = load void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)**, void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)*, void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)** %48, i64 3
  %50 = load void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)*, void (%"class.blink::PrintContext"*, %"class.blink::FloatSize"*)** %49, align 8
  call void %50(%"class.blink::PrintContext"* %23, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4) #12
  %51 = getelementptr inbounds i8, i8* %11, i64 28
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  %54 = bitcast i8* %11 to void (%"class.blink::PrintContext"*)***
  %55 = load void (%"class.blink::PrintContext"*)**, void (%"class.blink::PrintContext"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %55, i64 5
  %57 = load void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %56, align 8
  call void %57(%"class.blink::PrintContext"* %23) #12
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12PrintContext5TraceEPNS_7VisitorE(%"class.blink::PrintContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.1857"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 6
  %15 = bitcast %"class.blink::HeapHashMap.2846"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast %"class.blink::HeapHashMap.2846"* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #12
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #12
  br label %29

29:                                               ; preds = %13, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12PrintContext19use_printing_layoutEv(%"class.blink::PrintContext"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::PrintContext", %"class.blink::PrintContext"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ScopedPrintContextC2EPNS_10LocalFrameE(%"class.blink::ScopedPrintContext"* nocapture, %"class.blink::LocalFrame"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::LocalFrame"* %1 to i64
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_12PrintContextEEEPhm(i64 72) #12
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12PrintContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = getelementptr inbounds i8, i8* %4, i64 33
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 17, i1 false) #12
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds i8, i8* %4, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #12
  %11 = getelementptr inbounds i8, i8* %4, i64 64
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = bitcast %"class.blink::ScopedPrintContext"* %0 to i8**
  store i8* %4, i8** %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ScopedPrintContextD2Ev(%"class.blink::ScopedPrintContext"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScopedPrintContext", %"class.blink::ScopedPrintContext"* %0, i64 0, i32 0
  %3 = load %"class.blink::PrintContext"*, %"class.blink::PrintContext"** %2, align 8
  %4 = bitcast %"class.blink::PrintContext"* %3 to void (%"class.blink::PrintContext"*)***
  %5 = load void (%"class.blink::PrintContext"*)**, void (%"class.blink::PrintContext"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %5, i64 5
  %7 = load void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %6, align 8
  tail call void %7(%"class.blink::PrintContext"* %3) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::IntRect"* @_ZNK3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1959"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1959", %"class.WTF::Vector.1959"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1959", %"class.WTF::Vector.1959"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %24, i64 %25
  ret %"class.blink::IntRect"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10LocalFrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalFrame"*
  tail call void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink10LocalFrame5TraceEPNS_7VisitorE(%"class.blink::LocalFrame"*, %"class.blink::Visitor"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #12
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #12
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #12
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #12
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #12
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #12
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #12
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #12
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #12
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #12
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #12
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #12
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #12
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #12
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #12
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #12
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #12
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #12
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #12
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #12
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #12
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #12
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #12
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #12
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #12
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #12
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #12
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #12
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #12
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #12
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #12
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #12
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #12
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %42, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %8
  br label %10

10:                                               ; preds = %5, %38
  %11 = phi %class.scoped_refptr* [ %39, %38 ], [ %7, %5 ]
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = icmp eq %"class.blink::ComputedStyle"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #12
  %18 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 -23
  %23 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 1
  %24 = bitcast %"class.base::RefCounted.732"* %23 to %"class.blink::StyleCachedData"**
  %25 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %24, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %24, align 8
  %26 = icmp eq %"class.blink::StyleCachedData"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %28, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %28, align 8
  %30 = icmp eq %"class.WTF::Vector.739"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %29) #12
  %32 = bitcast %"class.WTF::Vector.739"* %29 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %32) #12
  br label %33

33:                                               ; preds = %31, %27
  %34 = bitcast %"class.blink::StyleCachedData"* %25 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %21
  %36 = bitcast %"class.base::RefCounted.732"* %22 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %36) #12
  %37 = bitcast %"class.base::RefCounted.732"* %22 to i8*
  tail call void @free(i8* %37) #12
  br label %38

38:                                               ; preds = %15, %35, %10
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 1
  %40 = icmp eq %class.scoped_refptr* %39, %9
  br i1 %40, label %41, label %10

41:                                               ; preds = %38
  store i32 0, i32* %2, align 4
  br label %42

42:                                               ; preds = %1, %41
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = bitcast i8* %45 to %class.scoped_refptr*
  %47 = icmp eq %class.scoped_refptr* %44, %46
  br i1 %47, label %50, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3090"* %49, %class.scoped_refptr* %44) #12
  br label %50

50:                                               ; preds = %42, %48
  store %class.scoped_refptr* null, %class.scoped_refptr** %43, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3090"*, %class.scoped_refptr*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #12
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !2

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #12
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #12
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #12
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #12
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #12
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !2

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #12
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #12
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #12
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #12
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #12
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #12
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #12
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #12
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #12
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #12
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #12
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #12
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !3

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #12
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #12
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #12
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #12
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #12
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #12
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #12
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #12
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #12
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #12
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #12
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #12
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #12
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #12
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #12
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #12
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #12
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #12
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #12
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #12
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #12
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #12
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #12
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !3

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #12
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #12
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #12
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #12
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !2

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !3

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #12
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #12
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #12
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #12
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !3

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #12
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #12
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !3

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !2

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #12
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #12
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !2

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !3

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #12
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #12
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #12
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #12
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #12
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #12
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #12
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #12
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #12
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #12
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #12
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #12
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #12
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !2

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !3

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #12
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #12
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #12
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !2

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !3

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #12
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #12
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #12
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #12
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #12
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #12
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !2

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #12
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #12
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #12
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #12
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #12
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #12
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #12
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #12
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #12
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #12
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !2

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !3

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #12
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #12
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #12
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #12
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !2

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !3

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #12
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #12
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #12
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #12
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #12
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !2

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !3

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #12
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !2

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #12
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #12
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #12
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !2

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #12
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !2

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #12
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !2

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !3

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #12
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #12
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !2

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !3

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #12
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #12
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #12
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #12
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #12
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !2

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !2

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #12
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #12
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !2

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !2

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !2

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !2

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !2

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !2

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !3

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #12
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #12
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !2

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !2

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !3

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #12
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #12
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !2

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !2

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !3

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #12
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #12
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !2

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !2

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !3

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #12
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #12
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !2

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !2

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !3

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #12
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #12
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !2

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !2

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !3

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #12
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #12
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !2

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !3

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #12
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #12
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #12
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #12
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #12
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #12
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #12
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !4
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #12
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #12
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !3

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #12
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #12
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !3

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #12
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #12
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #12
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #12
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #12
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #12
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #12
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #12
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #12
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #12
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #12
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #12
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #12
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #12
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #12
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #12
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #12
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #12
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #12
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #12
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #12
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #12
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #12
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !2

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !3

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #12
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #12
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #12
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #12
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !2

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !3

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #12
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #12
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #12
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #12
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !2

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !3

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #12
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #12
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #12
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #12
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !2

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !3

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #12
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #12
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #12
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !2

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !3

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #12
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #12
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !2

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #12
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #12
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #12
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #12
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #12
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !3

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !2

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #12
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #12
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #12
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !2

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !3

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #12
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #12
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #12
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #12
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #12
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #12
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !2

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !3

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #12
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #12
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #12
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #12
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #12
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #12
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #12
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #12
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #12
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #12
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !3

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #12
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #12
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #12
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #12
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1959"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1959", %"class.WTF::Vector.1959"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1959", %"class.WTF::Vector.1959"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  %8 = icmp ugt %"class.blink::IntRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %7, i64 %10
  %12 = icmp ugt %"class.blink::IntRect"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1959", %"class.WTF::Vector.1959"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::IntRect"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1959"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::IntRect"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::IntRect"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::IntRect"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.1959"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.1959"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::IntRect"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::IntRect"* %1 to i64
  %56 = ptrtoint %"class.blink::IntRect"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.1959", %"class.WTF::Vector.1959"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::IntRect"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1959"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::IntRect"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::IntRect"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.1959"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.1959"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::IntRect"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::IntRect"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::IntRect"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::IntRect"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %100, i64 %103
  %105 = bitcast %"class.blink::IntRect"* %104 to i8*
  %106 = bitcast %"class.blink::IntRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #12
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2852"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.2850"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2852"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2852"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2850"* %0, %"struct.WTF::KeyValuePair.2852"* null)
  %9 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2852"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.2852"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.2852"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.2852"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.2852"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.2852"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.2852"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.2852"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #12
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #12
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.2852"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %79, i64 0, i32 1
  %120 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %121 = ptrtoint %"class.blink::Node"* %120 to i64
  %122 = bitcast %"class.blink::Member.318"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::Node"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #12
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #12
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !3

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #12
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.2852"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2850"* %0, %"struct.WTF::KeyValuePair.2852"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.2852"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.2852"*, i8 } undef, %"struct.WTF::KeyValuePair.2852"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.2852"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.2852"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2852"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.2850"*, %"struct.WTF::KeyValuePair.2852"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.2852"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.2850"* %0, i32 %35, %"struct.WTF::KeyValuePair.2852"* %1, i8* nonnull dereferenceable(1) %4) #12
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #12
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.2852"*
  %44 = call %"struct.WTF::KeyValuePair.2852"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2850"* %0, %"struct.WTF::KeyValuePair.2852"* %43, i32 %40, %"struct.WTF::KeyValuePair.2852"* %1) #12
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.2852"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.2852"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2852"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.2850"*, i32, %"struct.WTF::KeyValuePair.2852"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2852"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.2852"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #12
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #12
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.2852"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.2852"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.2850"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #12
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.2852"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.2852"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2850"* %0, %"struct.WTF::KeyValuePair.2852"* %42, i32 %1, %"struct.WTF::KeyValuePair.2852"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.2852"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.2852"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.2852"* %64, %"struct.WTF::KeyValuePair.2852"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.2852"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.2852"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #12
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.2852"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.318"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.318"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #12
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.2852"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2852"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2852"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.2850"*, %"struct.WTF::KeyValuePair.2852"*, i32, %"struct.WTF::KeyValuePair.2852"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2850", align 8
  %6 = bitcast %"class.WTF::HashTable.2850"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2850"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2852"* %1, %"struct.WTF::KeyValuePair.2852"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.2852"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.2852"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.2850"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.2852"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.2850"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #12
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.2850"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.2850"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #12
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.2852"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.2852"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.318"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #12
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.2852"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.2852"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.2852"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.2852"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.2852"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2850"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #12
  %101 = extractvalue { %"struct.WTF::KeyValuePair.2852"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.2852"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.318"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.318"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.2852"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.2852"* %101, %"struct.WTF::KeyValuePair.2852"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.2852"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.2852"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.18, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_4NodeEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_4NodeEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([368 x i8], [368 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #12
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #12
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_4NodeEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.2852"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_4NodeEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2852"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #12
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.2852"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.318"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.318"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2852"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_4NodeEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2850"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2852"*, %"struct.WTF::KeyValuePair.2852"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2850", %"class.WTF::HashTable.2850"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.2852"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.2852"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.2852"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.2852"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.2852"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.2852"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.2852"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.2852"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.2852"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.2852"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2852", %"struct.WTF::KeyValuePair.2852"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.2852"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.2852"*, i8 } undef, %"struct.WTF::KeyValuePair.2852"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.2852"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.2852"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %4, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  store i8 %2, i8* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %26, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %27, label %57, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %45

35:                                               ; preds = %28
  %36 = zext i32 %34 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #12
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !3

42:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

43:                                               ; preds = %35
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %33, align 4
  br label %45

45:                                               ; preds = %28, %43
  %46 = phi i32 [ %44, %43 ], [ %34, %28 ]
  %47 = load atomic i32, i32* %29 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %52 = add i32 %46, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %45
  %54 = phi i32 [ %52, %50 ], [ %46, %45 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %57

57:                                               ; preds = %24, %53, %56
  br i1 %6, label %71, label %58

58:                                               ; preds = %57
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %71

71:                                               ; preds = %57, %67, %70
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.2990"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.2990"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.2990"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2990", %"class.WTF::StringAppend.2990"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = add i32 %15, 1
  %17 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp eq i32 %15, -1
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %33, align 8
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp eq i32 %16, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %33, align 8
  br label %46

37:                                               ; preds = %31
  %38 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  %39 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %38, i8* %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %33, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  ret i32 %16
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2991"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2991", %"class.WTF::StringAppend.2991"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3177", %"class.WTF::StringTypeAdapter.3177"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2991", %"class.WTF::StringAppend.2991"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i8* %21) #12
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  ret i32 %23
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3177"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3177"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.3000"*, %"class.WTF::StringAppend.3001"* byval(%"class.WTF::StringAppend.3001") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.3001"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.3000"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.2999"*, %"class.WTF::StringAppend.3000"* byval(%"class.WTF::StringAppend.3000") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.3000"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2999"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #12
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.2998"*, %"class.WTF::StringAppend.2999"* byval(%"class.WTF::StringAppend.2999") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2999"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2998"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %28, %38, %53
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %1, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %92, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  tail call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %87 = add i32 %81, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i32 [ %87, %85 ], [ %81, %80 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %92

92:                                               ; preds = %55, %88, %91
  br i1 %37, label %106, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #12
  br label %106

106:                                              ; preds = %105, %102, %92
  br i1 %10, label %120, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %120

120:                                              ; preds = %106, %116, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEC2ES8_c(%"class.WTF::StringAppend.2997"*, %"class.WTF::StringAppend.2998"* byval(%"class.WTF::StringAppend.2998") align 8, i8 signext) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2998"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2997"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %0, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %1, i64 0, i32 1, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #12
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  tail call void @llvm.trap() #12
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %84

82:                                               ; preds = %55
  %83 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %0, i64 0, i32 1
  store i8 %2, i8* %83, align 8
  br label %97

84:                                               ; preds = %65, %80
  %85 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %0, i64 0, i32 1
  store i8 %2, i8* %85, align 8
  %86 = load atomic i32, i32* %66 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %97

97:                                               ; preds = %82, %96, %93
  br i1 %37, label %111, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #12
  br label %111

111:                                              ; preds = %110, %107, %97
  br i1 %10, label %125, label %112

112:                                              ; preds = %111
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %125

125:                                              ; preds = %111, %121, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EC2ES9_S3_(%"class.WTF::StringAppend.2996"*, %"class.WTF::StringAppend.2997"* byval(%"class.WTF::StringAppend.2997") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2997"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2996"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #12
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  tail call void @llvm.trap() #12
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %55, %65, %80
  %83 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %1, i64 0, i32 1
  %85 = load i8, i8* %84, align 8
  store i8 %85, i8* %83, align 8
  %86 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %86, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %87, label %117, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %105

95:                                               ; preds = %88
  %96 = zext i32 %94 to i33
  %97 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #12
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %95
  tail call void @llvm.trap() #12
  unreachable

103:                                              ; preds = %95
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %93, align 4
  br label %105

105:                                              ; preds = %88, %103
  %106 = phi i32 [ %104, %103 ], [ %94, %88 ]
  %107 = load atomic i32, i32* %89 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %112 = add i32 %106, -1
  store i32 %112, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %105
  %114 = phi i32 [ %112, %110 ], [ %106, %105 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %117

117:                                              ; preds = %82, %113, %116
  br i1 %64, label %131, label %118

118:                                              ; preds = %117
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %131

131:                                              ; preds = %130, %127, %117
  br i1 %37, label %145, label %132

132:                                              ; preds = %131
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #12
  br label %145

145:                                              ; preds = %144, %141, %131
  br i1 %10, label %159, label %146

146:                                              ; preds = %145
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %159

159:                                              ; preds = %145, %155, %158
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EC2ERKSA_(%"class.WTF::StringAppend.2996"*, %"class.WTF::StringAppend.2996"* dereferenceable(64)) unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.WTF::StringAppend.2996"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.WTF::StringAppend.2996"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast i8** %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #12
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #12
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %27
  %55 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8** %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #12
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  tail call void @llvm.trap() #12
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %54, %64, %79
  %82 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %1, i64 0, i32 0, i32 1
  %84 = load i8, i8* %83, align 8
  store i8 %84, i8* %82, align 8
  %85 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %1, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #12
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  tail call void @llvm.trap() #12
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %81, %89, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_EC2ESD_S3_(%"class.WTF::StringAppend.2992"*, %"class.WTF::StringAppend.2993"* byval(%"class.WTF::StringAppend.2993") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EC2ERKSA_(%"class.WTF::StringAppend.2996"* %4, %"class.WTF::StringAppend.2996"* nonnull dereferenceable(64) %5) #12
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8
  store i8 %8, i8* %6, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #12
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  call void @llvm.trap() #12
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %3, %13, %28
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %1, i64 0, i32 1
  %33 = load i8, i8* %32, align 8
  store i8 %33, i8* %31, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %65

65:                                               ; preds = %30, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12
  br label %81

81:                                               ; preds = %65, %77, %80
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_ED2Ev(%"class.WTF::StringAppend.2996"* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2992"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2992", %"class.WTF::StringAppend.2992"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2993"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2993"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6Is8BitEv(%"class.WTF::StringAppend.2994"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %9 = select i1 %7, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %6
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  %13 = select i1 %12, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #12
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i8* %18) #12
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %22 = bitcast %"class.WTF::StringTypeAdapter.3177"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #12
  %24 = load i8*, i8** %23, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %3, i8* %24) #12
  %25 = bitcast %"class.WTF::StringTypeAdapter.3177"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false) #12
  %27 = load i8*, i8** %26, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %2, i8* %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %32 = select i1 %30, %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"* %29
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  br i1 %36, label %37, label %38

37:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br label %62

38:                                               ; preds = %1
  %39 = icmp eq %"class.WTF::StringImpl"* %20, null
  %40 = select i1 %39, %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* %20
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br i1 %44, label %62, label %45

45:                                               ; preds = %38
  %46 = icmp eq %"class.WTF::StringImpl"* %15, null
  %47 = select i1 %46, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %15
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 1
  %61 = icmp ne i32 %60, 0
  br label %62

62:                                               ; preds = %52, %38, %37, %45, %57
  %63 = phi i1 [ false, %52 ], [ %61, %57 ], [ false, %45 ], [ false, %37 ], [ false, %38 ]
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2993"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2993", %"class.WTF::StringAppend.2993"* %0, i64 0, i32 0
  %9 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2994"* %8) #12
  %10 = add i32 %9, 1
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2994"* %8) #12
  %14 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ult i32 %10, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %12, align 8
  br label %26

17:                                               ; preds = %1
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #12
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %18, i8* %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %12, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %27 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* null, i8** %28, align 8
  br label %41

32:                                               ; preds = %26
  %33 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  %34 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %33, i8* %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* %36, i8** %28, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  br label %41

41:                                               ; preds = %31, %32, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2994"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2994", %"class.WTF::StringAppend.2994"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2995"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2995"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_EEcE6lengthEv(%"class.WTF::StringAppend.2995"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2995", %"class.WTF::StringAppend.2995"* %0, i64 0, i32 0
  %9 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2996"* %8) #12
  %10 = add i32 %9, 1
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2996"* %8) #12
  %14 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ult i32 %10, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %12, align 8
  br label %26

17:                                               ; preds = %1
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #12
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %18, i8* %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %12, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %27 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* null, i8** %28, align 8
  br label %41

32:                                               ; preds = %26
  %33 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  %34 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %33, i8* %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* %36, i8** %28, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  br label %41

41:                                               ; preds = %31, %32, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E6lengthEv(%"class.WTF::StringAppend.2996"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcE6lengthEv(%"class.WTF::StringAppend.2997"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcE6lengthEv(%"class.WTF::StringAppend.2997"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcE6lengthEv(%"class.WTF::StringAppend.2997"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2997", %"class.WTF::StringAppend.2997"* %0, i64 0, i32 0
  %9 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2998"* %8) #12
  %10 = add i32 %9, 1
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2998"* %8) #12
  %14 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ult i32 %10, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %12, align 8
  br label %26

17:                                               ; preds = %1
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #12
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %18, i8* %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %12, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  %27 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* null, i8** %28, align 8
  br label %41

32:                                               ; preds = %26
  %33 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  %34 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %33, i8* %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* %36, i8** %28, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  br label %41

41:                                               ; preds = %31, %32, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2998"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2998", %"class.WTF::StringAppend.2998"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2999"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2999"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2999"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3177", %"class.WTF::StringTypeAdapter.3177"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3000"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3000"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3000"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3000", %"class.WTF::StringAppend.3000"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3001"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3001"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3001"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3177", %"class.WTF::StringTypeAdapter.3177"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3002"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3002"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3002"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3177", %"class.WTF::StringTypeAdapter.3177"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.3002", %"class.WTF::StringAppend.3002"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.3002", %"class.WTF::StringAppend.3002"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E7WriteToEPh(%"class.WTF::StringAppend.2996"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %21
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %21
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %36, %38
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %31, align 8
  store i32 %47, i32* %32, align 8
  tail call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.2999"* %29, i8* %1) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0
  %50 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2999"* %29) #12
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %49, i8* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %53 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2998"* %26) #12
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  store i8 %28, i8* %55, align 1
  %56 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0
  %57 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcE6lengthEv(%"class.WTF::StringAppend.2997"* %5) #12
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %1, i64 %58
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %56, i8* %59) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.2999"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3001"* %10, i8* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3001"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %30, i8* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3000"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i8* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3001"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3177"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3177"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.3177"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3177", %"class.WTF::StringTypeAdapter.3177"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3177"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3175"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3002"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3177"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcEES3_E7WriteToEPDs(%"class.WTF::StringAppend.2996"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::StringAppend.2996", %"class.WTF::StringAppend.2996"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %21
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %21
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %36, %38
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %31, align 8
  store i32 %47, i32* %32, align 8
  tail call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.2999"* %29, i16* %1) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0
  %50 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.2999"* %29) #12
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %49, i16* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %53 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2998"* %26) #12
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i16, i16* %1, i64 %54
  %56 = zext i8 %28 to i16
  store i16 %56, i16* %55, align 2
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EEcE6lengthEv(%"class.WTF::StringAppend.2997"* %5) #12
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i16, i16* %1, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %57, i16* %60) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.2999"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.3177"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i8* %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2999", %"class.WTF::StringAppend.2999"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.3174"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3001"* %10, i16* %1) #12
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3001"* %10) #12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %30, i16* %33) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.3000"* %5) #12
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3177"* nonnull %4, i16* %36) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3001"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3174", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3177", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3177"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3177"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.3177"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3177", %"class.WTF::StringTypeAdapter.3177"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3177"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.3001", %"class.WTF::StringAppend.3001"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3174"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3177"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3174", %"class.WTF::StringTypeAdapter.3174"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3175"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3002"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3177"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12PrintContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12PrintContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12PrintContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12PrintContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PrintContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12PrintContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PrintContext"*
  %4 = bitcast i8* %1 to void (%"class.blink::PrintContext"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PrintContext"*, %"class.blink::Visitor"*)**, void (%"class.blink::PrintContext"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PrintContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::PrintContext"*, %"class.blink::Visitor"*)** %5, i64 6
  %7 = load void (%"class.blink::PrintContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::PrintContext"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PrintContext"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_12PrintContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::PrintContext"*
  %3 = bitcast i8* %0 to void (%"class.blink::PrintContext"*)***
  %4 = load void (%"class.blink::PrintContext"*)**, void (%"class.blink::PrintContext"*)*** %3, align 8
  %5 = load void (%"class.blink::PrintContext"*)*, void (%"class.blink::PrintContext"*)** %4, align 8
  tail call void %5(%"class.blink::PrintContext"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12PrintContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 4001, i32 4000000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_cEENS1_INS1_IT_T0_EET1_EERKSD_SE_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_cEENS1_INS1_IT_T0_EET1_EERKSD_SE_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_EEcEES4_cEENS1_INS1_IT_T0_EET1_EERKSF_SG_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_EEcEES4_EEcEES4_cEENS1_INS1_IT_T0_EET1_EERKSF_SG_"}
