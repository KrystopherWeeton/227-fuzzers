; ModuleID = '../../third_party/blink/renderer/core/layout/line/inline_text_box.cc'
source_filename = "../../third_party/blink/renderer/core/layout/line/inline_text_box.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::HashMap.1763" = type { %"class.WTF::HashTable.1764" }
%"class.WTF::HashTable.1764" = type <{ %"struct.WTF::KeyValuePair.1767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1767" = type { %"class.blink::InlineTextBox"*, %"class.blink::LayoutRect" }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1747" = type { %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1749" }
%"struct.std::__1::__compressed_pair_elem.1749" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1750", %"class.absl::optional.1755" }
%"class.absl::optional.1750" = type { %"class.absl::optional_internal::optional_data.1751" }
%"class.absl::optional_internal::optional_data.1751" = type { %"class.absl::optional_internal::optional_data_base.1752" }
%"class.absl::optional_internal::optional_data_base.1752" = type { %"class.absl::optional_internal::optional_data_dtor_base.1753" }
%"class.absl::optional_internal::optional_data_dtor_base.1753" = type { i8, %union.anon.1754 }
%union.anon.1754 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1755" = type { %"class.absl::optional_internal::optional_data.1756" }
%"class.absl::optional_internal::optional_data.1756" = type { %"class.absl::optional_internal::optional_data_base.1757" }
%"class.absl::optional_internal::optional_data_base.1757" = type { %"class.absl::optional_internal::optional_data_dtor_base.1758" }
%"class.absl::optional_internal::optional_data_dtor_base.1758" = type { i8, %union.anon.1759 }
%union.anon.1759 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2075 }
%class.scoped_refptr.2075 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2076", %"class.WTF::Vector.630", %"class.WTF::Vector.2078", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2076" = type { %"class.base::RefCounted.2077" }
%"class.base::RefCounted.2077" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2078" = type { %"class.WTF::VectorBuffer.2079" }
%"class.WTF::VectorBuffer.2079" = type { %"class.WTF::VectorBufferBase.2080" }
%"class.WTF::VectorBufferBase.2080" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2081 }
%union.anon.2081 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2061" }
%"class.blink::Member.2061" = type { %"class.blink::MemberBase.2062" }
%"class.blink::MemberBase.2062" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2063" }
%"class.blink::Member.2063" = type { %"class.blink::MemberBase.2064" }
%"class.blink::MemberBase.2064" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1603", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1605", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1610 }
%"class.WTF::RefCounted.1603" = type { %"class.base::RefCounted.1604" }
%"class.base::RefCounted.1604" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1605" = type { %"class.absl::optional_internal::optional_data.1606" }
%"class.absl::optional_internal::optional_data.1606" = type { %"class.absl::optional_internal::optional_data_base.1607" }
%"class.absl::optional_internal::optional_data_base.1607" = type { %"class.absl::optional_internal::optional_data_dtor_base.1608" }
%"class.absl::optional_internal::optional_data_dtor_base.1608" = type { i8, %union.anon.1609 }
%union.anon.1609 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1610 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1619", %"class.std::__1::map.1628"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1605" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1611", %"class.std::__1::__compressed_pair.1616" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1616" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1619" = type { %"class.std::__1::__tree.1620" }
%"class.std::__1::__tree.1620" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1621", %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1621" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1628" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1629" }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1632" }
%"class.WTF::Vector.1632" = type { %"class.WTF::VectorBuffer.1633" }
%"class.WTF::VectorBuffer.1633" = type { %"class.WTF::VectorBufferBase.1634" }
%"class.WTF::VectorBufferBase.1634" = type { %"class.mojo::StructPtr.1635"*, i32, i32 }
%"class.mojo::StructPtr.1635" = type { %"class.std::__1::unique_ptr.1636" }
%"class.std::__1::unique_ptr.1636" = type { %"class.std::__1::__compressed_pair.1637" }
%"class.std::__1::__compressed_pair.1637" = type { %"struct.std::__1::__compressed_pair_elem.1638" }
%"struct.std::__1::__compressed_pair_elem.1638" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1639", %"class.WTF::HashMap.1646", %"class.WTF::HashMap.1651", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1656", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1639" = type { %"class.std::__1::unique_ptr.1640" }
%"class.std::__1::unique_ptr.1640" = type { %"class.std::__1::__compressed_pair.1641" }
%"class.std::__1::__compressed_pair.1641" = type { %"struct.std::__1::__compressed_pair_elem.1642" }
%"struct.std::__1::__compressed_pair_elem.1642" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1646" = type { %"class.WTF::HashTable.1647" }
%"class.WTF::HashTable.1647" = type <{ %"struct.WTF::KeyValuePair.1650"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1650" = type opaque
%"class.WTF::HashMap.1651" = type { %"class.WTF::HashTable.1652" }
%"class.WTF::HashTable.1652" = type <{ %"struct.WTF::KeyValuePair.1655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1655" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1656" = type { %"class.std::__1::unique_ptr.1657" }
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1740" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1671", i32 }>
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1674", %"class.absl::optional.1675", %"class.absl::optional.1680", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1693", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1715", %"class.std::__1::map.1726", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1735", i8, %class.scoped_refptr.1685, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1736" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1674" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1675" = type { %"class.absl::optional_internal::optional_data.1676" }
%"class.absl::optional_internal::optional_data.1676" = type { %"class.absl::optional_internal::optional_data_base.1677" }
%"class.absl::optional_internal::optional_data_base.1677" = type { %"class.absl::optional_internal::optional_data_dtor_base.1678" }
%"class.absl::optional_internal::optional_data_dtor_base.1678" = type { i8, %union.anon.1679 }
%union.anon.1679 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1680" = type { %"class.absl::optional_internal::optional_data.1681" }
%"class.absl::optional_internal::optional_data.1681" = type { %"class.absl::optional_internal::optional_data_base.1682" }
%"class.absl::optional_internal::optional_data_base.1682" = type { %"class.absl::optional_internal::optional_data_dtor_base.1683" }
%"class.absl::optional_internal::optional_data_dtor_base.1683" = type { i8, %union.anon.1684 }
%union.anon.1684 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1685, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1686" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1686" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1691 }
%class.scoped_refptr.1691 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1746", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1685, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1746" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1692 }
%class.scoped_refptr.1692 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1693" = type { %"class.std::__1::__compressed_pair.1694" }
%"class.std::__1::__compressed_pair.1694" = type { %"struct.std::__1::__compressed_pair_elem.1695" }
%"struct.std::__1::__compressed_pair_elem.1695" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1696", %class.scoped_refptr.1697 }
%"class.base::RepeatingCallback.1696" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1697 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1698", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1698" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1702", %"class.std::__1::unique_ptr.1708", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1714" }
%"class.std::__1::unique_ptr.1702" = type { %"class.std::__1::__compressed_pair.1703" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1704" }
%"struct.std::__1::__compressed_pair_elem.1704" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1708" = type { %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.1710" }
%"struct.std::__1::__compressed_pair_elem.1710" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1714" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1715" = type { %"class.std::__1::__tree.1716" }
%"class.std::__1::__tree.1716" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1717", %"class.std::__1::__compressed_pair.1721" }
%"class.std::__1::__compressed_pair.1717" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"class.std::__1::__compressed_pair.1721" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1726" = type { %"class.std::__1::__tree.1727" }
%"class.std::__1::__tree.1727" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1728", %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1728" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1735" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1685 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1736" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1740" = type { %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2089 }
%class.scoped_refptr.2089 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2099" }
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2098" }
%"class.blink::MemberBase.2098" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2090", %"class.WTF::Vector.2090" }
%"class.WTF::Vector.2090" = type { %"class.WTF::VectorBuffer.2091" }
%"class.WTF::VectorBuffer.2091" = type { %"class.WTF::VectorBufferBase.2092" }
%"class.WTF::VectorBufferBase.2092" = type { %class.scoped_refptr.2089*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2065" }
%"class.WTF::Vector.2065" = type { %"class.WTF::VectorBuffer.2066" }
%"class.WTF::VectorBuffer.2066" = type { %"class.WTF::VectorBufferBase.2067" }
%"class.WTF::VectorBufferBase.2067" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2070", %"class.absl::optional.2070", %"class.absl::optional.2070" }
%"class.absl::optional.2070" = type { %"class.absl::optional_internal::optional_data.2071" }
%"class.absl::optional_internal::optional_data.2071" = type { %"class.absl::optional_internal::optional_data_base.2072" }
%"class.absl::optional_internal::optional_data_base.2072" = type { %"class.absl::optional_internal::optional_data_dtor_base.2073" }
%"class.absl::optional_internal::optional_data_dtor_base.2073" = type { i8, %union.anon.2074 }
%union.anon.2074 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2085" }
%"class.WTF::VectorBuffer.2085" = type { %"class.WTF::VectorBufferBase.2086", [32 x i8] }
%"class.WTF::VectorBufferBase.2086" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutBR" = type { %"class.blink::LayoutText" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2101 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2101 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1768, %"class.std::__1::unique_ptr.1769", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1768 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1824", i16, %class.scoped_refptr.1768 }
%"class.WTF::ThreadSafeRefCounted.1824" = type { %"class.base::RefCountedThreadSafe.1825" }
%"class.base::RefCountedThreadSafe.1825" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"class.WTF::Vector.1772"* }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774" }
%"class.WTF::VectorBufferBase.1774" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1775, %"class.WTF::Vector.1776", %"class.std::__1::unique_ptr.1781", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1802, %"class.blink::Persistent.1803" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1775 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1776" = type { %"class.WTF::VectorBuffer.1777" }
%"class.WTF::VectorBuffer.1777" = type { %"class.WTF::VectorBufferBase.1778", [8 x i8] }
%"class.WTF::VectorBufferBase.1778" = type { %class.scoped_refptr.1775*, i32, i32 }
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1784", %"class.absl::optional.1789", %"class.absl::optional.1794" }
%"class.absl::optional.1784" = type { %"class.absl::optional_internal::optional_data.1785" }
%"class.absl::optional_internal::optional_data.1785" = type { %"class.absl::optional_internal::optional_data_base.1786" }
%"class.absl::optional_internal::optional_data_base.1786" = type { %"class.absl::optional_internal::optional_data_dtor_base.1787" }
%"class.absl::optional_internal::optional_data_dtor_base.1787" = type { i8, %union.anon.1788 }
%union.anon.1788 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1789" = type { %"class.absl::optional_internal::optional_data.1790" }
%"class.absl::optional_internal::optional_data.1790" = type { %"class.absl::optional_internal::optional_data_base.1791" }
%"class.absl::optional_internal::optional_data_base.1791" = type { %"class.absl::optional_internal::optional_data_dtor_base.1792" }
%"class.absl::optional_internal::optional_data_dtor_base.1792" = type { i8, [3 x i8], %union.anon.1793 }
%union.anon.1793 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1794" = type { %"class.absl::optional_internal::optional_data.1795" }
%"class.absl::optional_internal::optional_data.1795" = type { %"class.absl::optional_internal::optional_data_base.1796" }
%"class.absl::optional_internal::optional_data_base.1796" = type { %"class.absl::optional_internal::optional_data_dtor_base.1797" }
%"class.absl::optional_internal::optional_data_dtor_base.1797" = type { i8, %union.anon.1798 }
%union.anon.1798 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1802 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1803" = type { %"class.blink::PersistentBase.1804" }
%"class.blink::PersistentBase.1804" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1807", %"struct.blink::PhysicalRect", %"class.blink::Member.1817" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1807" = type { %"class.std::__1::__compressed_pair.1808" }
%"class.std::__1::__compressed_pair.1808" = type { %"struct.std::__1::__compressed_pair_elem.1809" }
%"struct.std::__1::__compressed_pair_elem.1809" = type { %"class.WTF::HashSet.1810"* }
%"class.WTF::HashSet.1810" = type { %"class.WTF::HashTable.1811" }
%"class.WTF::HashTable.1811" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1817" = type { %"class.blink::MemberBase.1818" }
%"class.blink::MemberBase.1818" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1826, i32, i8, i8, [2 x i8] }>
%union.anon.1826 = type { %"class.WTF::Vector.1827" }
%"class.WTF::Vector.1827" = type { %"class.WTF::VectorBuffer.1828" }
%"class.WTF::VectorBuffer.1828" = type { %"class.WTF::VectorBufferBase.1829", [16 x i8] }
%"class.WTF::VectorBufferBase.1829" = type { i8*, i32, i32 }
%"class.blink::TextRun" = type <{ %union.anon.1837, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.1837 = type { i8* }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.2102, i16, i8, [5 x i8], %"class.blink::Persistent.2103", %"class.WTF::HashMap.2106", %"class.WTF::HashMap.2111", %"class.blink::FontDataCache", %"class.blink::Persistent.2131", float, [4 x i8] }>
%class.sk_sp.2102 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent.2103" = type { %"class.blink::PersistentBase.2104" }
%"class.blink::PersistentBase.2104" = type { %"class.blink::HeapHashSet.2105"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashSet.2105" = type opaque
%"class.WTF::HashMap.2106" = type { %"class.WTF::HashTable.2107" }
%"class.WTF::HashTable.2107" = type <{ %"struct.WTF::KeyValuePair.2110"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2110" = type opaque
%"class.WTF::HashMap.2111" = type { %"class.WTF::HashTable.2112" }
%"class.WTF::HashTable.2112" = type <{ %"struct.WTF::KeyValuePair.2115"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2115" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.2116", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.2116" = type { %"class.WTF::HashTable.2117" }
%"class.WTF::HashTable.2117" = type <{ %"struct.WTF::KeyValuePair.2120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2120" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2121", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2121" = type { %"class.WTF::HashTable.2122" }
%"class.WTF::HashTable.2122" = type <{ %"struct.WTF::KeyValuePair.2125"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2125" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2126", i32, i32 }
%"class.WTF::Vector.2126" = type { %"class.WTF::VectorBuffer.2127" }
%"class.WTF::VectorBuffer.2127" = type { %"class.WTF::VectorBufferBase.2128" }
%"class.WTF::VectorBufferBase.2128" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.2131" = type { %"class.blink::PersistentBase.2132" }
%"class.blink::PersistentBase.2132" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::HashSet.1838" = type opaque
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1839", i8, %"class.blink::Member.1841", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1845", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1855", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1845" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1847", %"class.blink::Member.1849", %"class.blink::Member.1851", %"class.blink::Member.1853", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1851" = type { %"class.blink::MemberBase.1852" }
%"class.blink::MemberBase.1852" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1853" = type { %"class.blink::MemberBase.1854" }
%"class.blink::MemberBase.1854" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1855" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1856", { i64, i64 } }
%"class.blink::WeakMember.1856" = type { %"class.blink::MemberBase.1840" }
%"class.blink::Member.1841" = type { %"class.blink::MemberBase.1842" }
%"class.blink::MemberBase.1842" = type { %"class.blink::HeapLinkedHashSet"* }
%"class.blink::HeapLinkedHashSet" = type opaque
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutRubyRun" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.2135", %"class.std::__1::unique_ptr.2145" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList.2134" }
%"class.blink::InlineBoxList.2134" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.2135" = type { %"class.blink::PersistentBase.2136" }
%"class.blink::PersistentBase.2136" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.2139", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.2139" = type { %"class.std::__1::__compressed_pair.2140" }
%"class.std::__1::__compressed_pair.2140" = type { %"struct.std::__1::__compressed_pair_elem.2141" }
%"struct.std::__1::__compressed_pair_elem.2141" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.2145" = type { %"class.std::__1::__compressed_pair.2146" }
%"class.std::__1::__compressed_pair.2146" = type { %"struct.std::__1::__compressed_pair_elem.2147" }
%"struct.std::__1::__compressed_pair_elem.2147" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.2148", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.2148" = type { %"class.WTF::HashTable.2151", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.2151" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.2154", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.2154" = type { %"class.std::__1::__compressed_pair.2155" }
%"class.std::__1::__compressed_pair.2155" = type { %"struct.std::__1::__compressed_pair_elem.2156" }
%"struct.std::__1::__compressed_pair_elem.2156" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.2160, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.2160 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::LayoutRubyText" = type { %"class.blink::LayoutBlockFlow" }
%"struct.blink::PaintInfo" = type <{ %"class.blink::GraphicsContext"*, i32, %"class.blink::CullRect", [4 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1932", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.2012", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1857, %class.scoped_refptr.1857, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1912", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1917", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1857 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1858", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1865" }
%"class.WTF::RefCounted.1858" = type { %"class.base::RefCounted.1859" }
%"class.base::RefCounted.1859" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1860", i32, [4 x i8] }>
%"class.WTF::Vector.1860" = type { %"class.WTF::VectorBuffer.1861" }
%"class.WTF::VectorBuffer.1861" = type { %"class.WTF::VectorBufferBase.1862" }
%"class.WTF::VectorBufferBase.1862" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1868", %"class.std::__1::unique_ptr.1884", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1868" = type { %"class.std::__1::__compressed_pair.1869" }
%"class.std::__1::__compressed_pair.1869" = type { %"struct.std::__1::__compressed_pair_elem.1870" }
%"struct.std::__1::__compressed_pair_elem.1870" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1871", %"class.WTF::Vector.1876", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1871" = type { %"class.WTF::VectorBuffer.1872" }
%"class.WTF::VectorBuffer.1872" = type { %"class.WTF::VectorBufferBase.1873" }
%"class.WTF::VectorBufferBase.1873" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1876" = type { %"class.WTF::VectorBuffer.1877" }
%"class.WTF::VectorBuffer.1877" = type { %"class.WTF::VectorBufferBase.1878" }
%"class.WTF::VectorBufferBase.1878" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1887", %"class.absl::optional.1887" }
%"class.absl::optional.1887" = type { %"class.absl::optional_internal::optional_data.1888" }
%"class.absl::optional_internal::optional_data.1888" = type { %"class.absl::optional_internal::optional_data_base.1889" }
%"class.absl::optional_internal::optional_data_base.1889" = type { %"class.absl::optional_internal::optional_data_dtor_base.1890" }
%"class.absl::optional_internal::optional_data_dtor_base.1890" = type { i8, [3 x i8], %union.anon.1891 }
%union.anon.1891 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1865"*, %"class.absl::optional.1897", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1897" = type { %"class.absl::optional_internal::optional_data.1898" }
%"class.absl::optional_internal::optional_data.1898" = type { %"class.absl::optional_internal::optional_data_base.1899" }
%"class.absl::optional_internal::optional_data_base.1899" = type { %"class.absl::optional_internal::optional_data_dtor_base.1900" }
%"class.absl::optional_internal::optional_data_dtor_base.1900" = type { i8, %union.anon.1901 }
%union.anon.1901 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1902", %"class.WTF::Vector.1907" }
%"class.WTF::Vector.1902" = type { %"class.WTF::VectorBuffer.1903" }
%"class.WTF::VectorBuffer.1903" = type { %"class.WTF::VectorBufferBase.1904", [128 x i8] }
%"class.WTF::VectorBufferBase.1904" = type { i32*, i32, i32 }
%"class.WTF::Vector.1907" = type { %"class.WTF::VectorBuffer.1908" }
%"class.WTF::VectorBuffer.1908" = type { %"class.WTF::VectorBufferBase.1909", [128 x i8] }
%"class.WTF::VectorBufferBase.1909" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1912" = type { %"class.WTF::VectorBuffer.1913" }
%"class.WTF::VectorBuffer.1913" = type { %"class.WTF::VectorBufferBase.1914" }
%"class.WTF::VectorBufferBase.1914" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1917" = type { %"class.WTF::HashTable.1918" }
%"class.WTF::HashTable.1918" = type <{ %"struct.WTF::KeyValuePair.1921"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1921" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1922", %"class.WTF::Vector.1927" }
%"class.WTF::HashMap.1922" = type { %"class.WTF::HashTable.1923" }
%"class.WTF::HashTable.1923" = type <{ %"struct.WTF::KeyValuePair.1926"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1926" = type opaque
%"class.WTF::Vector.1927" = type { %"class.WTF::VectorBuffer.1928" }
%"class.WTF::VectorBuffer.1928" = type { %"class.WTF::VectorBufferBase.1929" }
%"class.WTF::VectorBufferBase.1929" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.1932" = type { %"class.WTF::VectorBuffer.1933" }
%"class.WTF::VectorBuffer.1933" = type { %"class.WTF::VectorBufferBase.1934" }
%"class.WTF::VectorBufferBase.1934" = type { %"class.std::__1::unique_ptr.1935"*, i32, i32 }
%"class.std::__1::unique_ptr.1935" = type { %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.1937" }
%"struct.std::__1::__compressed_pair_elem.1937" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.1938, %class.sk_sp.1939, %class.sk_sp.1977, %class.sk_sp.1978, %class.sk_sp.1979, %class.sk_sp.817, i32, float, float, i32, %union.anon.1980, [4 x i8] }>
%class.sk_sp.1938 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1939 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.1940", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.1948, i32, %"class.absl::optional.1964", %"class.std::__1::vector.842", %"class.std::__1::vector.1969", %class.sk_sp.1976, %class.sk_sp.1945, i32, [4 x i8] }>
%"class.absl::optional.1940" = type { %"class.absl::optional_internal::optional_data.1941" }
%"class.absl::optional_internal::optional_data.1941" = type { %"class.absl::optional_internal::optional_data_base.1942" }
%"class.absl::optional_internal::optional_data_base.1942" = type { %"class.absl::optional_internal::optional_data_dtor_base.1943" }
%"class.absl::optional_internal::optional_data_dtor_base.1943" = type { i8, %union.anon.1944 }
%union.anon.1944 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.1945, %class.sk_sp.1948, %"class.gfx::Rect", i32, %class.sk_sp.1953, %class.sk_sp.1961, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1945, %class.scoped_refptr.1962 }
%class.sk_sp.1953 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.1954" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1946, i32, i32 }
%class.sk_sp.1946 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.1947, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.1947 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.1954" = type { %"class.std::__1::__vector_base.1955" }
%"class.std::__1::__vector_base.1955" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1956" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.1956" = type { %"struct.std::__1::__compressed_pair_elem.1957" }
%"struct.std::__1::__compressed_pair_elem.1957" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.1961 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.1962 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1963", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1963" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.1948 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.1949", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1949" = type { %"class.std::__1::__compressed_pair.1950" }
%"class.std::__1::__compressed_pair.1950" = type { %"struct.std::__1::__compressed_pair_elem.1951" }
%"struct.std::__1::__compressed_pair_elem.1951" = type { i8* }
%"class.absl::optional.1964" = type { %"class.absl::optional_internal::optional_data.1965" }
%"class.absl::optional_internal::optional_data.1965" = type { %"class.absl::optional_internal::optional_data_base.1966" }
%"class.absl::optional_internal::optional_data_base.1966" = type { %"class.absl::optional_internal::optional_data_dtor_base.1967" }
%"class.absl::optional_internal::optional_data_dtor_base.1967" = type { i8, %union.anon.1968 }
%union.anon.1968 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.1969" = type { %"class.std::__1::__vector_base.1970" }
%"class.std::__1::__vector_base.1970" = type { float*, float*, %"class.std::__1::__compressed_pair.1971" }
%"class.std::__1::__compressed_pair.1971" = type { %"struct.std::__1::__compressed_pair_elem.1972" }
%"struct.std::__1::__compressed_pair_elem.1972" = type { float* }
%class.sk_sp.1976 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%class.sk_sp.1945 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.1977 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1978 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1979 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.1980 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.1938 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.1986, %"class.std::__1::unique_ptr.1987" }
%class.scoped_refptr.1986 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.1987" = type { %"class.std::__1::__compressed_pair.1988" }
%"class.std::__1::__compressed_pair.1988" = type { %"struct.std::__1::__compressed_pair_elem.1989" }
%"struct.std::__1::__compressed_pair_elem.1989" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.1990", %struct.SkRect }
%"class.absl::optional.1990" = type { %"class.absl::optional_internal::optional_data.1991" }
%"class.absl::optional_internal::optional_data.1991" = type { %"class.absl::optional_internal::optional_data_base.1992" }
%"class.absl::optional_internal::optional_data_base.1992" = type { %"class.absl::optional_internal::optional_data_dtor_base.1993" }
%"class.absl::optional_internal::optional_data_dtor_base.1993" = type { i8, %union.anon.1994 }
%union.anon.1994 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1995, [384 x i64], %class.sk_sp.1996, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.1997", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.2003" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.1995 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1996 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.1997" = type { %"class.std::__1::__compressed_pair.1998" }
%"class.std::__1::__compressed_pair.1998" = type { %"struct.std::__1::__compressed_pair_elem.1999" }
%"struct.std::__1::__compressed_pair_elem.1999" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.2003" = type { %"class.std::__1::__compressed_pair.2004" }
%"class.std::__1::__compressed_pair.2004" = type { %"struct.std::__1::__compressed_pair_elem.2005" }
%"struct.std::__1::__compressed_pair_elem.2005" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.2012" = type { %"class.std::__1::__compressed_pair.2013" }
%"class.std::__1::__compressed_pair.2013" = type { %"struct.std::__1::__compressed_pair_elem.2014" }
%"struct.std::__1::__compressed_pair_elem.2014" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.2033", %"class.std::__1::unique_ptr.2038" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.2015", %"class.std::__1::unique_ptr.2015", %"class.std::__1::unique_ptr.2021", %"class.std::__1::unique_ptr.2027", %class.sk_sp.1978 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2015" = type { %"class.std::__1::__compressed_pair.2016" }
%"class.std::__1::__compressed_pair.2016" = type { %"struct.std::__1::__compressed_pair_elem.2017" }
%"struct.std::__1::__compressed_pair_elem.2017" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.2021" = type { %"class.std::__1::__compressed_pair.2022" }
%"class.std::__1::__compressed_pair.2022" = type { %"struct.std::__1::__compressed_pair_elem.2023" }
%"struct.std::__1::__compressed_pair_elem.2023" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.2027" = type { %"class.std::__1::__compressed_pair.2028" }
%"class.std::__1::__compressed_pair.2028" = type { %"struct.std::__1::__compressed_pair_elem.2029" }
%"struct.std::__1::__compressed_pair_elem.2029" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.2033" = type { %"class.absl::optional_internal::optional_data.2034" }
%"class.absl::optional_internal::optional_data.2034" = type { %"class.absl::optional_internal::optional_data_base.2035" }
%"class.absl::optional_internal::optional_data_base.2035" = type { %"class.absl::optional_internal::optional_data_dtor_base.2036" }
%"class.absl::optional_internal::optional_data_dtor_base.2036" = type { i8, %union.anon.2037 }
%union.anon.2037 = type { i32 }
%"class.std::__1::unique_ptr.2038" = type { %"class.std::__1::__compressed_pair.2039" }
%"class.std::__1::__compressed_pair.2039" = type { %"struct.std::__1::__compressed_pair_elem.2040" }
%"struct.std::__1::__compressed_pair_elem.2040" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::InlineTextBoxPainter" = type { %"class.blink::InlineTextBox"* }
%"class.blink::DocumentMarker" = type { i32 (...)**, i32, i32 }
%"class.blink::TextMarkerBase" = type opaque
%"class.WTF::Vector.2049" = type { %"class.WTF::VectorBuffer.2050" }
%"class.WTF::VectorBuffer.2050" = type { %"class.WTF::VectorBufferBase.2051" }
%"class.WTF::VectorBufferBase.2051" = type { float*, i32, i32 }
%"class.WTF::Vector.2054" = type { %"class.WTF::VectorBuffer.2055" }
%"class.WTF::VectorBuffer.2055" = type { %"class.WTF::VectorBufferBase.2056" }
%"class.WTF::VectorBufferBase.2056" = type { %"struct.blink::CharacterRange"*, i32, i32 }
%"struct.blink::CharacterRange" = type { float, float, float, float }
%"class.WTF::StringAppend.2059" = type { %"class.WTF::StringAppend.2060", %"class.WTF::String" }
%"class.WTF::StringAppend.2060" = type { %"class.WTF::String", i8* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2059", i8* }
%"class.WTF::StringTypeAdapter.2177" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2179" = type { %"class.WTF::StringTypeAdapter.2180" }
%"class.WTF::StringTypeAdapter.2180" = type { %"class.WTF::StringView" }

$_ZNK5blink14LineLayoutItem5StyleEb = comdat any

$_ZNK5blink14LineLayoutItem8StyleRefEb = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev = comdat any

$_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv = comdat any

$_ZNK5blink9InlineBox15IsInlineFlowBoxEv = comdat any

$_ZNK5blink9InlineBox15IsRootInlineBoxEv = comdat any

$_ZNK5blink9InlineBox18IsSVGInlineTextBoxEv = comdat any

$_ZNK5blink9InlineBox18IsSVGInlineFlowBoxEv = comdat any

$_ZNK5blink9InlineBox18IsSVGRootInlineBoxEv = comdat any

$_ZNK5blink9InlineBox20VirtualLogicalHeightEv = comdat any

$_ZN5blink9InlineBox14SetConstructedEv = comdat any

$_ZNK5blink9InlineBox6IsLeafEv = comdat any

$_ZN5blink17DisplayItemClientD2Ev = comdat any

$_ZN5blink13InlineTextBoxD0Ev = comdat any

$_ZNK5blink13InlineTextBox15IsInlineTextBoxEv = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPS2_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink14CharacterRangeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

@_ZN5blinkL26g_text_boxes_with_overflowE = internal unnamed_addr global %"class.WTF::HashMap.1763"* null, align 8
@.str = private unnamed_addr constant [29 x i8] c"start_pos <= string.length()\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"../../third_party/blink/renderer/core/layout/line/inline_text_box.cc\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"length <= string.length() - start_pos\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"InlineTextBox\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c" '\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@_ZTVN5blink13InlineTextBoxE = hidden unnamed_addr constant { [41 x i8*] } { [41 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DisplayItemClient"*)* @_ZN5blink17DisplayItemClientD2Ev to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBoxD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InlineTextBox"*)* @_ZNK5blink13InlineTextBox9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox7DestroyEv to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox10DeleteLineEv to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox11ExtractLineEv to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox10AttachLineEv to i8*), i8* bitcast (i1 (%"class.blink::InlineTextBox"*)* @_ZNK5blink13InlineTextBox11IsLineBreakEv to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*, %"class.blink::LayoutSize"*)* @_ZN5blink13InlineTextBox4MoveERKNS_10LayoutSizeE to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)* @_ZNK5blink13InlineTextBox5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetENS_10LayoutUnitES7_ to i8*), i8* bitcast (i1 (%"class.blink::InlineTextBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32, i32)* @_ZN5blink13InlineTextBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_10LayoutUnitES9_ to i8*), i8* bitcast (i8* (%"class.blink::InlineTextBox"*)* @_ZNK5blink13InlineTextBox7BoxNameEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox15IsInlineFlowBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineTextBox"*)* @_ZNK5blink13InlineTextBox15IsInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox15IsRootInlineBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox18IsSVGInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox18IsSVGInlineFlowBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox18IsSVGRootInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox20VirtualLogicalHeightEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox14SetConstructedEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox6IsLeafEv to i8*), i8* bitcast (i32 (%"class.blink::InlineTextBox"*, i32)* @_ZNK5blink13InlineTextBox16BaselinePositionENS_12FontBaselineE to i8*), i8* bitcast (i32 (%"class.blink::InlineTextBox"*)* @_ZNK5blink13InlineTextBox10LineHeightEv to i8*), i8* bitcast (i32 (%"class.blink::InlineTextBox"*)* @_ZNK5blink13InlineTextBox14CaretMinOffsetEv to i8*), i8* bitcast (i32 (%"class.blink::InlineTextBox"*)* @_ZNK5blink13InlineTextBox14CaretMaxOffsetEv to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox15ClearTruncationEv to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox9MarkDirtyEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox14DirtyLineBoxesEv to i8*), i8* bitcast (i1 (%"class.blink::InlineTextBox"*)* @_ZNK5blink13InlineTextBox10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*, i1, i32, i32)* @_ZNK5blink9InlineBox22CanAccommodateEllipsisEbNS_10LayoutUnitES1_ to i8*), i8* bitcast (i32 (%"class.blink::InlineTextBox"*, i1, i32, i32, i32, %"class.blink::LayoutUnit"*, %"class.blink::InlineBox"**, i32)* @_ZN5blink13InlineTextBox16PlaceEllipsisBoxEbNS_10LayoutUnitES1_S1_RS1_PPNS_9InlineBoxES1_ to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)* @_ZNK5blink13InlineTextBox18LocalSelectionRectEiib to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)* @_ZNK5blink13InlineTextBox19PaintDocumentMarkerERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14DocumentMarkerERKNS_13ComputedStyleERKNS_4FontEb to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)* @_ZNK5blink13InlineTextBox25PaintTextMarkerForegroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE to i8*), i8* bitcast (void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)* @_ZNK5blink13InlineTextBox25PaintTextMarkerBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE to i8*), i8* bitcast (i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)* @_ZNK5blink13InlineTextBox17OffsetForPositionENS_10LayoutUnitENS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE to i8*), i8* bitcast (i32 (%"class.blink::InlineTextBox"*, i32)* @_ZNK5blink13InlineTextBox17PositionForOffsetEi to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13InlineTextBoxENS2_10LayoutRectEEEEEPKcv = private unnamed_addr constant [114 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::InlineTextBox *, blink::LayoutRect>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIPKN5blink13InlineTextBoxENS2_10LayoutRectENS_7PtrHashIS4_EENS_10HashTraitsIS5_EENS9_IS6_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [259 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<const blink::InlineTextBox *, blink::LayoutRect, WTF::PtrHash<const blink::InlineTextBox>, WTF::HashTraits<const blink::InlineTextBox *>, WTF::HashTraits<blink::LayoutRect>, WTF::PartitionAllocator>]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.16 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind
declare void @_ZN5blink9InlineBoxdlEPv(i8*) local_unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox7DestroyEv(%"class.blink::InlineTextBox"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::InlineTextBox"*, align 8
  tail call void @_ZN5blink27LegacyAbstractInlineTextBox11WillDestroyEPNS_13InlineTextBoxE(%"class.blink::InlineTextBox"* %0) #12
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16384
  %7 = icmp eq i32 %6, 0
  %8 = load %"class.WTF::HashMap.1763"*, %"class.WTF::HashMap.1763"** @_ZN5blinkL26g_text_boxes_with_overflowE, align 8
  %9 = icmp ne %"class.WTF::HashMap.1763"* %8, null
  %10 = and i1 %9, %7
  br i1 %10, label %11, label %50

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::InlineTextBox"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %2, align 8
  %13 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %8, i64 0, i32 0
  %14 = call { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.1764"* %13, %"class.blink::InlineTextBox"** nonnull dereferenceable(8) %2) #12
  %15 = extractvalue { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %8, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %8, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %17, i64 %20
  %22 = icmp eq %"struct.WTF::KeyValuePair.1767"* %21, %15
  br i1 %22, label %49, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %15, i64 0, i32 0
  store %"class.blink::InlineTextBox"* inttoptr (i64 -1 to %"class.blink::InlineTextBox"*), %"class.blink::InlineTextBox"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %8, i64 0, i32 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, 1
  %28 = and i32 %27, 2147483647
  %29 = and i32 %26, -2147483648
  %30 = or i32 %28, %29
  store i32 %30, i32* %25, align 8
  %31 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %8, i64 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, -1
  store i32 %33, i32* %31, align 4
  %34 = mul i32 %33, 6
  %35 = load i32, i32* %18, align 8
  %36 = icmp ult i32 %34, %35
  %37 = icmp ugt i32 %35, 8
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %23
  %40 = lshr i32 %35, 1
  %41 = zext i32 %40 to i64
  %42 = mul nuw nsw i64 %41, 24
  %43 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %42, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13InlineTextBoxENS2_10LayoutRectEEEEEPKcv, i64 0, i64 0)) #12
  %44 = bitcast i8* %43 to %"struct.WTF::KeyValuePair.1767"*
  %45 = icmp eq i32 %40, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %39
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 %42, i1 false) #12
  br label %47

47:                                               ; preds = %46, %39
  %48 = call %"struct.WTF::KeyValuePair.1767"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.1764"* %13, %"struct.WTF::KeyValuePair.1767"* %44, i32 %40, %"struct.WTF::KeyValuePair.1767"* null) #12
  br label %49

49:                                               ; preds = %11, %23, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  br label %50

50:                                               ; preds = %1, %49
  call void @_ZN5blink9InlineBox7DestroyEv(%"class.blink::InlineBox"* %3) #12
  ret void
}

declare void @_ZN5blink27LegacyAbstractInlineTextBox11WillDestroyEPNS_13InlineTextBoxE(%"class.blink::InlineTextBox"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink9InlineBox7DestroyEv(%"class.blink::InlineBox"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox9OffsetRunEi(%"class.blink::InlineTextBox"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, %1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox9MarkDirtyEv(%"class.blink::InlineTextBox"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  store i16 0, i16* %2, align 4
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = or i32 %5, 256
  store i32 %6, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink13InlineTextBox19LogicalOverflowRectEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::InlineTextBox"*, align 8
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16384
  %7 = icmp eq i32 %6, 0
  %8 = load %"class.WTF::HashMap.1763"*, %"class.WTF::HashMap.1763"** @_ZN5blinkL26g_text_boxes_with_overflowE, align 8
  %9 = icmp ne %"class.WTF::HashMap.1763"* %8, null
  %10 = and i1 %9, %7
  br i1 %10, label %34, label %11

11:                                               ; preds = %1
  %12 = and i32 %5, 2048
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5
  %15 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %14, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %17 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %14, i64 0, i32 0, i32 0
  %19 = select i1 %13, i32* %18, i32* %16
  %20 = select i1 %13, i32* %17, i32* %15
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %19, align 4
  %23 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %3) #12
  %26 = zext i32 %22 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %21 to i64
  %29 = or i64 %27, %28
  %30 = zext i32 %25 to i64
  %31 = shl nuw i64 %30, 32
  %32 = zext i32 %24 to i64
  %33 = or i64 %31, %32
  br label %78

34:                                               ; preds = %1
  %35 = bitcast %"class.blink::InlineTextBox"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %2, align 8
  %36 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %8, i64 0, i32 0
  %37 = call { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.1764"* %36, %"class.blink::InlineTextBox"** nonnull dereferenceable(8) %2) #12
  %38 = extractvalue { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } %37, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  %39 = load %"class.WTF::HashMap.1763"*, %"class.WTF::HashMap.1763"** @_ZN5blinkL26g_text_boxes_with_overflowE, align 8
  %40 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %39, i64 0, i32 0, i32 0
  %41 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %39, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %41, i64 %44
  %46 = icmp eq %"struct.WTF::KeyValuePair.1767"* %38, %45
  br i1 %46, label %54, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %38, i64 0, i32 1
  %49 = bitcast %"class.blink::LayoutRect"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %38, i64 0, i32 1, i32 1
  %52 = bitcast %"class.blink::LayoutSize"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  br label %78

54:                                               ; preds = %34
  %55 = load i32, i32* %4, align 4
  %56 = and i32 %55, 2048
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5
  %59 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %58, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %61 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %62 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %58, i64 0, i32 0, i32 0
  %63 = select i1 %57, i32* %62, i32* %60
  %64 = select i1 %57, i32* %61, i32* %59
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* %63, align 4
  %67 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %3) #12
  %70 = zext i32 %66 to i64
  %71 = shl nuw i64 %70, 32
  %72 = zext i32 %65 to i64
  %73 = or i64 %71, %72
  %74 = zext i32 %69 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %68 to i64
  %77 = or i64 %75, %76
  br label %78

78:                                               ; preds = %47, %54, %11
  %79 = phi i64 [ %29, %11 ], [ %50, %47 ], [ %73, %54 ]
  %80 = phi i64 [ %33, %11 ], [ %53, %47 ], [ %77, %54 ]
  %81 = insertvalue { i64, i64 } undef, i64 %79, 0
  %82 = insertvalue { i64, i64 } %81, i64 %80, 1
  ret { i64, i64 } %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox22SetLogicalOverflowRectERKNS_10LayoutRectE(%"class.blink::InlineTextBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::InlineTextBox"*, align 8
  %4 = load %"class.WTF::HashMap.1763"*, %"class.WTF::HashMap.1763"** @_ZN5blinkL26g_text_boxes_with_overflowE, align 8
  %5 = icmp eq %"class.WTF::HashMap.1763"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([259 x i8], [259 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapIPKN5blink13InlineTextBoxENS2_10LayoutRectENS_7PtrHashIS4_EENS_10HashTraitsIS5_EENS9_IS6_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #12
  store i8* %7, i8** bitcast (%"class.WTF::HashMap.1763"** @_ZN5blinkL26g_text_boxes_with_overflowE to i8**), align 8
  %8 = bitcast i8* %7 to %"class.WTF::HashMap.1763"*
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.WTF::HashMap.1763"* [ %4, %2 ], [ %8, %6 ]
  %11 = bitcast %"class.blink::InlineTextBox"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %3, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %10, i64 0, i32 0
  %13 = call { %"struct.WTF::KeyValuePair.1767"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPS2_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.1764"* %12, %"class.blink::InlineTextBox"** nonnull dereferenceable(8) %3, %"class.blink::LayoutRect"* dereferenceable(16) %1) #12
  %14 = extractvalue { %"struct.WTF::KeyValuePair.1767"*, i8 } %13, 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %9
  %18 = extractvalue { %"struct.WTF::KeyValuePair.1767"*, i8 } %13, 0
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %18, i64 0, i32 1
  %20 = bitcast %"class.blink::LayoutRect"* %19 to i8*
  %21 = bitcast %"class.blink::LayoutRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 16, i1 false) #12
  br label %22

22:                                               ; preds = %9, %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink13InlineTextBox20PhysicalOverflowRectEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #1 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to { i64, i64 }*
  %4 = bitcast <2 x i64>* %2 to %"class.blink::LayoutRect"*
  %5 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = bitcast <2 x i64>* %2 to i32*
  %7 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %9 = bitcast i64* %8 to i32*
  %10 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 1, i32 0
  %11 = tail call { i64, i64 } @_ZNK5blink13InlineTextBox19LogicalOverflowRectEv(%"class.blink::InlineTextBox"* %0)
  %12 = getelementptr inbounds <2 x i64>, <2 x i64>* %2, i64 0, i64 0
  %13 = extractvalue { i64, i64 } %11, 0
  store i64 %13, i64* %12, align 16
  %14 = extractvalue { i64, i64 } %11, 1
  store i64 %14, i64* %8, align 8
  %15 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 2048
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %1
  %21 = insertelement <2 x i64> undef, i64 %13, i32 0
  %22 = insertelement <2 x i64> %21, i64 %14, i32 1
  %23 = lshr <2 x i64> %22, <i64 32, i64 32>
  %24 = shl <2 x i64> %22, <i64 32, i64 32>
  %25 = or <2 x i64> %24, %23
  store <2 x i64> %25, <2 x i64>* %2, align 16
  br label %26

26:                                               ; preds = %1, %20
  call void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"* %15, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #12
  %27 = load i32, i32* %6, align 16
  %28 = load i32, i32* %7, align 4
  %29 = load i32, i32* %9, align 8
  %30 = load i32, i32* %10, align 4
  %31 = zext i32 %28 to i64
  %32 = shl nuw i64 %31, 32
  %33 = zext i32 %27 to i64
  %34 = or i64 %32, %33
  %35 = insertvalue { i64, i64 } undef, i64 %34, 0
  %36 = zext i32 %30 to i64
  %37 = shl nuw i64 %36, 32
  %38 = zext i32 %29 to i64
  %39 = or i64 %37, %38
  %40 = insertvalue { i64, i64 } %35, i64 %39, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret { i64, i64 } %40
}

declare void @_ZNK5blink9InlineBox18FlipForWritingModeERNS_10LayoutRectE(%"class.blink::InlineBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox4MoveERKNS_10LayoutSizeE(%"class.blink::InlineTextBox"*, %"class.blink::LayoutSize"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::InlineTextBox"*, align 8
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink9InlineBox4MoveERKNS_10LayoutSizeE(%"class.blink::InlineBox"* %4, %"class.blink::LayoutSize"* dereferenceable(8) %1) #12
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 16384
  %8 = icmp eq i32 %7, 0
  %9 = load %"class.WTF::HashMap.1763"*, %"class.WTF::HashMap.1763"** @_ZN5blinkL26g_text_boxes_with_overflowE, align 8
  %10 = icmp ne %"class.WTF::HashMap.1763"* %9, null
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %62

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::InlineTextBox"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %3, align 8
  %14 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %9, i64 0, i32 0
  %15 = call { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.1764"* %14, %"class.blink::InlineTextBox"** nonnull dereferenceable(8) %3) #12
  %16 = extractvalue { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } %15, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %17 = load %"class.WTF::HashMap.1763"*, %"class.WTF::HashMap.1763"** @_ZN5blinkL26g_text_boxes_with_overflowE, align 8
  %18 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %17, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %17, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair.1767"* %16, %23
  br i1 %24, label %62, label %25

25:                                               ; preds = %12
  %26 = load i32, i32* %5, align 4
  %27 = and i32 %26, 2048
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::LayoutSize"* %1 to i64*
  %31 = load i64, i64* %30, align 4
  br label %41

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %1, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %1, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %34 to i64
  %40 = or i64 %38, %39
  br label %41

41:                                               ; preds = %32, %29
  %42 = phi i64 [ %31, %29 ], [ %40, %32 ]
  %43 = trunc i64 %42 to i32
  %44 = lshr i64 %42, 32
  %45 = trunc i64 %44 to i32
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %43, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %43) #12
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  store i32 %53, i32* %46, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %16, i64 0, i32 1, i32 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %45, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %45) #12
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  store i32 %61, i32* %54, align 4
  br label %62

62:                                               ; preds = %12, %41, %2
  ret void
}

declare void @_ZN5blink9InlineBox4MoveERKNS_10LayoutSizeE(%"class.blink::InlineBox"*, %"class.blink::LayoutSize"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox16BaselinePositionENS_12FontBaselineE(%"class.blink::InlineTextBox"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 131072
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %38, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 3
  %9 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %8, align 8
  %10 = icmp eq %"class.blink::InlineFlowBox"* %9, null
  br i1 %10, label %38, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %9, i64 0, i32 0, i32 4, i32 0
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 7
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %13, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %9, i64 0, i32 0
  %21 = bitcast %"class.blink::InlineFlowBox"* %9 to i32 (%"class.blink::InlineBox"*, i32)***
  %22 = load i32 (%"class.blink::InlineBox"*, i32)**, i32 (%"class.blink::InlineBox"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::InlineBox"*, i32)*, i32 (%"class.blink::InlineBox"*, i32)** %22, i64 23
  %24 = load i32 (%"class.blink::InlineBox"*, i32)*, i32 (%"class.blink::InlineBox"*, i32)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::InlineBox"* %20, i32 %1) #12
  br label %38

26:                                               ; preds = %11
  %27 = and i32 %4, 1
  %28 = icmp ne i32 %27, 0
  %29 = lshr i32 %4, 11
  %30 = and i32 %29, 1
  %31 = xor i32 %30, 1
  %32 = bitcast %"class.blink::LayoutObject"* %17 to %"class.blink::LayoutBoxModelObject"*
  %33 = bitcast %"class.blink::LayoutObject"* %17 to i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)**, i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)*, i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)** %34, i64 134
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)*, i32 (%"class.blink::LayoutBoxModelObject"*, i32, i1, i32, i32)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32, i32 %1, i1 zeroext %28, i32 %31, i32 0) #12
  br label %38

38:                                               ; preds = %2, %7, %26, %19
  %39 = phi i32 [ %25, %19 ], [ %37, %26 ], [ 0, %7 ], [ 0, %2 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox10LineHeightEv(%"class.blink::InlineTextBox"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 131072
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %59, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %59, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, i64 92
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* %8, i32 0) #12
  br i1 %17, label %18, label %30

18:                                               ; preds = %12
  %19 = bitcast %"class.blink::LayoutObject"** %7 to %"class.blink::LayoutBR"**
  %20 = load %"class.blink::LayoutBR"*, %"class.blink::LayoutBR"** %19, align 8
  %21 = load i32, i32* %2, align 4
  %22 = and i32 %21, 1
  %23 = icmp ne i32 %22, 0
  %24 = tail call i32 @_ZNK5blink8LayoutBR10LineHeightEb(%"class.blink::LayoutBR"* %20, i1 zeroext %23) #12
  %25 = icmp sgt i32 %24, 33554431
  br i1 %25, label %59, label %26

26:                                               ; preds = %18
  %27 = icmp slt i32 %24, -33554432
  %28 = shl i32 %24, 6
  %29 = select i1 %27, i32 -2147483648, i32 %28
  ret i32 %29

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 3
  %32 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %32, i64 0, i32 0, i32 4, i32 0
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 7
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = icmp eq %"class.blink::LayoutObject"* %34, %37
  br i1 %38, label %39, label %46

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %32, i64 0, i32 0
  %41 = bitcast %"class.blink::InlineFlowBox"* %32 to i32 (%"class.blink::InlineBox"*)***
  %42 = load i32 (%"class.blink::InlineBox"*)**, i32 (%"class.blink::InlineBox"*)*** %41, align 8
  %43 = getelementptr inbounds i32 (%"class.blink::InlineBox"*)*, i32 (%"class.blink::InlineBox"*)** %42, i64 24
  %44 = load i32 (%"class.blink::InlineBox"*)*, i32 (%"class.blink::InlineBox"*)** %43, align 8
  %45 = tail call i32 %44(%"class.blink::InlineBox"* %40) #12
  br label %59

46:                                               ; preds = %30
  %47 = load i32, i32* %2, align 4
  %48 = and i32 %47, 1
  %49 = icmp ne i32 %48, 0
  %50 = lshr i32 %47, 11
  %51 = and i32 %50, 1
  %52 = xor i32 %51, 1
  %53 = bitcast %"class.blink::LayoutObject"* %37 to %"class.blink::LayoutBoxModelObject"*
  %54 = bitcast %"class.blink::LayoutObject"* %37 to i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)***
  %55 = load i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)** %55, i64 133
  %57 = load i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBoxModelObject"*, i1, i32, i32)** %56, align 8
  %58 = tail call i32 %57(%"class.blink::LayoutBoxModelObject"* %53, i1 zeroext %49, i32 %52, i32 0) #12
  br label %59

59:                                               ; preds = %6, %1, %18, %46, %39
  %60 = phi i32 [ %45, %39 ], [ %58, %46 ], [ 0, %1 ], [ 0, %6 ], [ 2147483647, %18 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox8OffsetToENS_24FontVerticalPositionTypeENS_12FontBaselineE(%"class.blink::InlineTextBox"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::LineLayoutText", align 8
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 131072
  %9 = icmp ne i32 %8, 0
  %10 = or i32 %1, 1
  %11 = icmp eq i32 %10, 3
  %12 = and i1 %11, %9
  br i1 %12, label %13, label %63

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::LineLayoutText"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %16 = bitcast %"class.blink::LayoutObject"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::LineLayoutText"* %4 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %4, i64 0, i32 0
  %20 = and i32 %7, 1
  %21 = icmp ne i32 %20, 0
  %22 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %19, i1 zeroext %21)
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %26, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %28 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %27) #12
  %29 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %28, i64 0, i32 2
  %30 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %29, align 8
  %31 = icmp eq %"class.blink::SimpleFontData"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %27, i64 0, i32 0
  %34 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %28, %"class.blink::FontDescription"* dereferenceable(80) %33) #12
  store %"class.blink::SimpleFontData"* %34, %"class.blink::SimpleFontData"** %29, align 8
  %35 = icmp eq %"class.blink::SimpleFontData"* %34, null
  br i1 %35, label %63, label %36

36:                                               ; preds = %13, %32
  %37 = phi %"class.blink::SimpleFontData"* [ %34, %32 ], [ %30, %13 ]
  %38 = icmp eq i32 %2, 0
  %39 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %37, i64 0, i32 1, i32 9
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %47, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %37, i64 0, i32 1, i32 10
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, %40
  %45 = sdiv i32 %44, 2
  %46 = sub nsw i32 %44, %45
  br label %47

47:                                               ; preds = %36, %41
  %48 = phi i32 [ %46, %41 ], [ %40, %36 ]
  %49 = call i32 @_ZNK5blink14SimpleFontData16VerticalPositionENS_24FontVerticalPositionTypeENS_12FontBaselineE(%"class.blink::SimpleFontData"* nonnull %37, i32 %1, i32 %2) #12
  %50 = icmp sgt i32 %48, 33554431
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = icmp slt i32 %48, -33554432
  %53 = shl i32 %48, 6
  %54 = select i1 %52, i32 -2147483648, i32 %53
  br label %55

55:                                               ; preds = %51, %47
  %56 = phi i32 [ 2147483647, %47 ], [ %54, %51 ]
  %57 = icmp sgt i32 %49, -1
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %56, i32 %49) #12
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = select i1 %60, i32 %58, i32 %61, !prof !2
  br label %66

63:                                               ; preds = %32, %3
  switch i32 %1, label %66 [
    i32 3, label %64
    i32 1, label %64
  ]

64:                                               ; preds = %63, %63
  %65 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %5) #12
  br label %66

66:                                               ; preds = %63, %55, %64
  %67 = phi i32 [ %65, %64 ], [ %62, %55 ], [ 0, %63 ]
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #12
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

declare i32 @_ZNK5blink14SimpleFontData16VerticalPositionENS_24FontVerticalPositionTypeENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox16VerticalPositionENS_24FontVerticalPositionTypeENS_12FontBaselineE(%"class.blink::InlineTextBox"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 2048
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %9 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = select i1 %7, i32* %9, i32* %8
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @_ZNK5blink13InlineTextBox8OffsetToENS_24FontVerticalPositionTypeENS_12FontBaselineE(%"class.blink::InlineTextBox"* %0, i32 %1, i32 %2)
  %13 = icmp slt i32 %12, 0
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %12) #12
  %16 = extractvalue { i32, i1 } %15, 1
  %17 = extractvalue { i32, i1 } %15, 0
  %18 = select i1 %16, i32 %14, i32 %17, !prof !2
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13InlineTextBox27IsBoxEndIncludedInSelectionEv(%"class.blink::InlineTextBox"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::LineLayoutText", align 8
  %3 = bitcast %"class.blink::LineLayoutText"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %5 = bitcast %"class.blink::LayoutObject"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.blink::LineLayoutText"* %2 to i64*
  store i64 %6, i64* %7, align 8
  %8 = call { i64, i32 } @_ZNK5blink14LineLayoutText15SelectionStatusEv(%"class.blink::LineLayoutText"* nonnull %2) #12
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = extractvalue { i64, i32 } %8, 1
  %11 = trunc i64 %9 to i32
  %12 = lshr i64 %9, 32
  %13 = trunc i64 %12 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  %14 = or i64 %12, %9
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  %17 = icmp eq i32 %11, %13
  %18 = or i1 %17, %16
  br i1 %18, label %93, label %19

19:                                               ; preds = %1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %21 = bitcast %"class.blink::LayoutObject"* %20 to i1 (%"class.blink::LayoutObject"*, i32)***
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, i64 92
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, align 8
  %25 = call zeroext i1 %24(%"class.blink::LayoutObject"* %20, i32 0) #12
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  br label %84

29:                                               ; preds = %19
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = lshr i160 %35, 12
  %37 = trunc i160 %36 to i32
  %38 = and i32 %37, 127
  switch i32 %38, label %39 [
    i32 16, label %71
    i32 1, label %71
  ]

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %41 = load i16, i16* %40, align 4
  %42 = icmp eq i16 %41, 1
  br i1 %42, label %43, label %71

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 1, i32 4, i32 0, i64 4
  %45 = bitcast i8* %44 to %"class.WTF::StringImpl"**
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %71, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = icmp ugt i32 %50, %52
  br i1 %53, label %54, label %71

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 1
  br i1 %58, label %66, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.WTF::StringImpl"* %59 to i8*
  %62 = zext i32 %52 to i64
  %63 = getelementptr inbounds i8, i8* %61, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i16
  br label %77

66:                                               ; preds = %54
  %67 = bitcast %"class.WTF::StringImpl"* %59 to i16*
  %68 = zext i32 %52 to i64
  %69 = getelementptr inbounds i16, i16* %67, i64 %68
  %70 = load i16, i16* %69, align 2
  br label %77

71:                                               ; preds = %48, %39, %29, %29, %43
  %72 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %75 = load i16, i16* %74, align 4
  %76 = zext i16 %75 to i32
  br label %80

77:                                               ; preds = %60, %66
  %78 = phi i16 [ %65, %60 ], [ %70, %66 ]
  %79 = icmp eq i16 %78, 10
  br i1 %79, label %84, label %80

80:                                               ; preds = %71, %77
  %81 = phi i32 [ %76, %71 ], [ 1, %77 ]
  %82 = phi i32 [ %73, %71 ], [ %52, %77 ]
  %83 = add i32 %82, %81
  br label %84

84:                                               ; preds = %26, %77, %80
  %85 = phi i32 [ %83, %80 ], [ %52, %77 ], [ %28, %26 ]
  %86 = icmp ult i32 %85, %11
  %87 = icmp ugt i32 %85, %13
  %88 = or i1 %86, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = icmp ult i32 %85, %13
  %91 = icmp eq i32 %10, 0
  %92 = or i1 %91, %90
  ret i1 %92

93:                                               ; preds = %1, %84
  ret i1 false
}

declare { i64, i32 } @_ZNK5blink14LineLayoutText15SelectionStatusEv(%"class.blink::LineLayoutText"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13InlineTextBox11IsLineBreakEv(%"class.blink::InlineTextBox"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %5 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, i64 92
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutObject"* %3, i32 0) #12
  br i1 %8, label %54, label %9

9:                                                ; preds = %1
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = lshr i160 %15, 12
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 127
  switch i32 %18, label %19 [
    i32 16, label %54
    i32 1, label %54
  ]

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %21 = load i16, i16* %20, align 4
  %22 = icmp eq i16 %21, 1
  br i1 %22, label %23, label %54

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 1, i32 4, i32 0, i64 4
  %25 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %54, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp ugt i32 %30, %32
  br i1 %33, label %34, label %54

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 1
  br i1 %38, label %46, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  %42 = zext i32 %32 to i64
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  br label %51

46:                                               ; preds = %34
  %47 = bitcast %"class.WTF::StringImpl"* %39 to i16*
  %48 = zext i32 %32 to i64
  %49 = getelementptr inbounds i16, i16* %47, i64 %48
  %50 = load i16, i16* %49, align 2
  br label %51

51:                                               ; preds = %40, %46
  %52 = phi i16 [ %45, %40 ], [ %50, %46 ]
  %53 = icmp eq i16 %52, 10
  br label %54

54:                                               ; preds = %9, %9, %23, %19, %28, %51, %1
  %55 = phi i1 [ true, %1 ], [ false, %28 ], [ false, %19 ], [ false, %9 ], [ %53, %51 ], [ false, %23 ], [ false, %9 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13InlineTextBox10IsSelectedEv(%"class.blink::InlineTextBox"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::LineLayoutText", align 8
  %3 = bitcast %"class.blink::LineLayoutText"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %5 = bitcast %"class.blink::LayoutObject"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.blink::LineLayoutText"* %2 to i64*
  store i64 %6, i64* %7, align 8
  %8 = call { i64, i32 } @_ZNK5blink14LineLayoutText15SelectionStatusEv(%"class.blink::LineLayoutText"* nonnull %2) #12
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  %12 = or i64 %11, %9
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %1
  %16 = trunc i64 %11 to i32
  %17 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %18, %16
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %22 = load i16, i16* %21, align 4
  %23 = zext i16 %22 to i32
  %24 = add i32 %18, %23
  %25 = icmp ugt i32 %24, %10
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %15
  %27 = call zeroext i1 @_ZNK5blink13InlineTextBox27IsBoxEndIncludedInSelectionEv(%"class.blink::InlineTextBox"* %0)
  br label %28

28:                                               ; preds = %1, %20, %26
  %29 = phi i1 [ %27, %26 ], [ true, %20 ], [ false, %1 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13InlineTextBox26HasWrappedSelectionNewlineEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #1 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink13InlineTextBox27IsBoxEndIncludedInSelectionEv(%"class.blink::InlineTextBox"* %0)
  br i1 %2, label %3, label %45

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %4) #12
  %6 = bitcast %"class.blink::RootInlineBox"* %5 to %"class.blink::InlineFlowBox"*
  %7 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"* %6) #12
  %8 = icmp eq %"class.blink::InlineBox"* %7, %4
  br i1 %8, label %9, label %45

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  %14 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %4) #12
  br i1 %13, label %18, label %15

15:                                               ; preds = %9
  %16 = tail call %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox16FirstSelectedBoxEv(%"class.blink::RootInlineBox"* %14) #12
  %17 = icmp eq %"class.blink::InlineBox"* %16, %4
  br i1 %17, label %21, label %45

18:                                               ; preds = %9
  %19 = tail call %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox15LastSelectedBoxEv(%"class.blink::RootInlineBox"* %14) #12
  %20 = icmp eq %"class.blink::InlineBox"* %19, %4
  br i1 %20, label %21, label %45

21:                                               ; preds = %15, %18
  %22 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 2
  %23 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %22, align 8
  %24 = icmp eq %"class.blink::InlineTextBox"* %23, null
  br i1 %24, label %25, label %45

25:                                               ; preds = %21
  %26 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %4) #12
  %27 = tail call %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"* %26) #12
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = and i96 %30, 402653184
  %32 = icmp eq i96 %31, 134217728
  br i1 %32, label %33, label %44

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 2, i32 1, i32 1
  %35 = bitcast i8* %34 to %"class.blink::InlineBox"**
  %36 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %35, align 8
  %37 = icmp eq %"class.blink::InlineBox"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 1
  %40 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 2
  %41 = select i1 %13, %"class.blink::InlineBox"** %39, %"class.blink::InlineBox"** %40
  %42 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %41, align 8
  %43 = icmp eq %"class.blink::InlineBox"* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %25, %33, %38
  br label %45

45:                                               ; preds = %44, %38, %18, %15, %21, %3, %1
  %46 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %18 ], [ false, %15 ], [ true, %21 ], [ true, %44 ], [ false, %38 ]
  ret i1 %46
}

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #2

declare %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #2

declare %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox16FirstSelectedBoxEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #2

declare %"class.blink::InlineBox"* @_ZNK5blink13RootInlineBox15LastSelectedBoxEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #2

declare %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink13InlineTextBox17NewlineSpaceWidthEv(%"class.blink::InlineTextBox"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::LineLayoutText", align 8
  %3 = bitcast %"class.blink::LineLayoutText"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %5 = bitcast %"class.blink::LayoutObject"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.blink::LineLayoutText"* %2 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp ne i32 %11, 0
  %13 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %8, i1 zeroext %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %17, i64 0, i32 1
  %19 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %18) #12
  %20 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %19, i64 0, i32 2
  %21 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %20, align 8
  %22 = icmp eq %"class.blink::SimpleFontData"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %18, i64 0, i32 0
  %25 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %19, %"class.blink::FontDescription"* dereferenceable(80) %24) #12
  store %"class.blink::SimpleFontData"* %25, %"class.blink::SimpleFontData"** %20, align 8
  %26 = icmp eq %"class.blink::SimpleFontData"* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %23, %1
  %28 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %18) #12
  %29 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %28, i64 0, i32 2
  %30 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %29, align 8
  %31 = icmp eq %"class.blink::SimpleFontData"* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %18, i64 0, i32 0
  %34 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %28, %"class.blink::FontDescription"* dereferenceable(80) %33) #12
  store %"class.blink::SimpleFontData"* %34, %"class.blink::SimpleFontData"** %29, align 8
  br label %35

35:                                               ; preds = %32, %27
  %36 = phi %"class.blink::SimpleFontData"* [ %30, %27 ], [ %34, %32 ]
  %37 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %36, i64 0, i32 8
  %38 = load float, float* %37, align 4
  br label %39

39:                                               ; preds = %23, %35
  %40 = phi float [ %38, %35 ], [ 0.000000e+00, %23 ]
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %17, i64 0, i32 1, i32 0, i32 8
  %42 = load float, float* %41, align 8
  %43 = fadd float %40, %42
  ret float %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #12
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink13InlineTextBox18LocalSelectionRectEiib(%"class.blink::InlineTextBox"*, i32, i32, i1 zeroext) unnamed_addr #5 align 2 {
  %5 = alloca %"class.blink::LineLayoutText", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.blink::TextRun", align 8
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.blink::FloatPoint"*
  %10 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = sub nsw i32 %1, %11
  %13 = icmp sgt i32 %12, 0
  %14 = select i1 %13, i32 %12, i32 0
  %15 = sub nsw i32 %2, %11
  %16 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %17 = load i16, i16* %16, align 4
  %18 = zext i16 %17 to i32
  %19 = icmp sgt i32 %15, %18
  %20 = select i1 %19, i32 %18, i32 %15
  %21 = icmp sgt i32 %14, %20
  br i1 %21, label %300, label %22

22:                                               ; preds = %4
  %23 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %24 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 4
  %27 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %28 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %27) #12
  %29 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %28) #12
  %30 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %27) #12
  %31 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %30) #12
  %32 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %30) #12
  %33 = icmp sgt i32 %32, -1
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %32) #12
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = icmp sgt i32 %38, 0
  %40 = select i1 %39, i32 %38, i32 0
  %41 = bitcast %"class.blink::LineLayoutText"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %43 = bitcast %"class.blink::LayoutObject"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::LineLayoutText"* %5 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %5, i64 0, i32 0
  %47 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 1
  %50 = icmp ne i32 %49, 0
  %51 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %46, i1 zeroext %50)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %53, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %55, i64 0, i32 1
  %57 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %57) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 48, i1 false)
  %58 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %60 = bitcast %union.anon.1826* %59 to i8*
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %62, align 4
  %63 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %63, align 1
  %64 = load i16, i16* %16, align 4
  %65 = zext i16 %64 to i32
  %66 = icmp eq i32 %20, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %22
  %68 = load i32, i32* %47, align 4
  %69 = trunc i32 %68 to i16
  %70 = icmp slt i16 %69, 0
  %71 = select i1 %70, %"class.WTF::StringBuilder"* %6, %"class.WTF::StringBuilder"* null
  br label %72

72:                                               ; preds = %67, %22
  %73 = phi %"class.WTF::StringBuilder"* [ null, %22 ], [ %71, %67 ]
  %74 = bitcast %"class.blink::TextRun"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #12
  %75 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 3
  %76 = bitcast %"class.blink::TextRun"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %75, align 8
  %77 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %77, align 4
  %78 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 5
  store i16 -21846, i16* %78, align 8
  %79 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 0
  store i8 -86, i8* %79, align 2
  %80 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 1
  store i8 -86, i8* %80, align 1
  %81 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %81, align 4
  %82 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 1
  %83 = bitcast i8* %82 to i64*
  store i64 -6148914691236517206, i64* %83, align 4
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %7, %"class.blink::InlineTextBox"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %51, %"class.WTF::StringBuilder"* %73)
  %84 = load i32, i32* %47, align 4
  %85 = and i32 %84, 2048
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %89 = select i1 %86, i32* %88, i32* %87
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %12, 1
  br i1 %91, label %92, label %96

92:                                               ; preds = %72
  %93 = load i16, i16* %16, align 4
  %94 = zext i16 %93 to i32
  %95 = icmp eq i32 %20, %94
  br i1 %95, label %153, label %96

96:                                               ; preds = %92, %72
  %97 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #12
  %98 = sitofp i32 %90 to float
  %99 = fmul float %98, 1.562500e-02
  %100 = sitofp i32 %29 to float
  %101 = fmul float %100, 1.562500e-02
  %102 = insertelement <2 x float> undef, float %99, i32 0
  %103 = insertelement <2 x float> %102, float %101, i32 1
  store <2 x float> %103, <2 x float>* %8, align 8
  %104 = lshr i32 %40, 6
  %105 = sitofp i32 %104 to float
  %106 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"* %56, %"class.blink::TextRun"* nonnull dereferenceable(40) %7, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %9, float %105, i32 %14, i32 %20) #12
  %107 = extractvalue { <2 x float>, <2 x float> } %106, 0
  %108 = extractvalue { <2 x float>, <2 x float> } %106, 1
  %109 = extractelement <2 x float> %107, i32 0
  %110 = call float @llvm.floor.f32(float %109) #12
  %111 = fpext float %110 to double
  %112 = fcmp ult double %111, 0x41DFFFFFFFC00000
  br i1 %112, label %113, label %117

113:                                              ; preds = %96
  %114 = fcmp ugt float %110, 0xC1E0000000000000
  br i1 %114, label %115, label %117

115:                                              ; preds = %113
  %116 = fptosi float %110 to i32
  br label %117

117:                                              ; preds = %96, %113, %115
  %118 = phi i32 [ %116, %115 ], [ 2147483647, %96 ], [ -2147483648, %113 ]
  %119 = extractelement <2 x float> %108, i32 0
  %120 = fadd float %109, %119
  %121 = call float @llvm.ceil.f32(float %120) #12
  %122 = fpext float %121 to double
  %123 = fcmp ult double %122, 0x41DFFFFFFFC00000
  br i1 %123, label %124, label %128

124:                                              ; preds = %117
  %125 = fcmp ugt float %121, 0xC1E0000000000000
  br i1 %125, label %126, label %128

126:                                              ; preds = %124
  %127 = fptosi float %121 to i32
  br label %128

128:                                              ; preds = %117, %124, %126
  %129 = phi i32 [ %127, %126 ], [ 2147483647, %117 ], [ -2147483648, %124 ]
  %130 = icmp sgt i32 %118, -1
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %129, i32 %118) #12
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !2
  %136 = icmp sgt i32 %118, 33554431
  br i1 %136, label %141, label %137

137:                                              ; preds = %128
  %138 = icmp slt i32 %118, -33554432
  %139 = shl i32 %118, 6
  %140 = select i1 %138, i32 -2147483648, i32 %139
  br label %141

141:                                              ; preds = %137, %128
  %142 = phi i32 [ 2147483647, %128 ], [ %140, %137 ]
  %143 = icmp sgt i32 %135, 33554431
  br i1 %143, label %148, label %144

144:                                              ; preds = %141
  %145 = icmp slt i32 %135, -33554432
  %146 = shl i32 %135, 6
  %147 = select i1 %145, i32 -2147483648, i32 %146
  br label %148

148:                                              ; preds = %144, %141
  %149 = phi i32 [ 2147483647, %141 ], [ %147, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #12
  %150 = load i32, i32* %47, align 4
  %151 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %152 = load i32, i32* %151, align 8
  br label %182

153:                                              ; preds = %92
  %154 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = icmp slt i32 %90, -2147483584
  %157 = ashr i32 %90, 6
  %158 = select i1 %156, i32 -33554432, i32 %157, !prof !2
  %159 = icmp slt i32 %155, 0
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %155) #12
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !2
  %165 = icmp sgt i32 %164, 2147483583
  br i1 %165, label %173, label %166, !prof !2

166:                                              ; preds = %153
  %167 = icmp sgt i32 %164, -1
  br i1 %167, label %168, label %171

168:                                              ; preds = %166
  %169 = add nuw nsw i32 %164, 63
  %170 = sdiv i32 %169, 64
  br label %173

171:                                              ; preds = %166
  %172 = sdiv i32 %164, 64
  br label %173

173:                                              ; preds = %171, %168, %153
  %174 = phi i32 [ %170, %168 ], [ %172, %171 ], [ 33554431, %153 ]
  %175 = sub nsw i32 %174, %158
  %176 = shl nsw i32 %158, 6
  %177 = icmp sgt i32 %175, 33554431
  br i1 %177, label %182, label %178

178:                                              ; preds = %173
  %179 = icmp slt i32 %175, -33554432
  %180 = shl i32 %175, 6
  %181 = select i1 %179, i32 -2147483648, i32 %180
  br label %182

182:                                              ; preds = %173, %178, %148
  %183 = phi i32 [ %152, %148 ], [ %155, %173 ], [ %155, %178 ]
  %184 = phi i32 [ %150, %148 ], [ %84, %173 ], [ %84, %178 ]
  %185 = phi i32 [ %149, %148 ], [ 2147483647, %173 ], [ %181, %178 ]
  %186 = phi i32 [ %142, %148 ], [ %176, %173 ], [ %176, %178 ]
  %187 = and i32 %184, 2048
  %188 = icmp eq i32 %187, 0
  %189 = select i1 %188, i32* %88, i32* %87
  %190 = load i32, i32* %189, align 4
  %191 = icmp slt i32 %183, 0
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %190, i32 %183) #12
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !2
  %197 = icmp sgt i32 %186, %196
  br i1 %197, label %213, label %198

198:                                              ; preds = %182
  %199 = icmp slt i32 %185, 0
  %200 = select i1 %199, i32 -2147483648, i32 2147483647
  %201 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %186, i32 %185) #12
  %202 = extractvalue { i32, i1 } %201, 1
  %203 = extractvalue { i32, i1 } %201, 0
  %204 = select i1 %202, i32 %200, i32 %203, !prof !2
  %205 = icmp sgt i32 %204, %196
  br i1 %205, label %206, label %213

206:                                              ; preds = %198
  %207 = icmp sgt i32 %186, -1
  %208 = select i1 %207, i32 -2147483648, i32 2147483647
  %209 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %196, i32 %186) #12
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %208, i32 %211, !prof !2
  br label %213

213:                                              ; preds = %182, %198, %206
  %214 = phi i32 [ %212, %206 ], [ %185, %198 ], [ 0, %182 ]
  br i1 %188, label %249, label %215

215:                                              ; preds = %213
  br i1 %3, label %216, label %265

216:                                              ; preds = %215
  %217 = call zeroext i1 @_ZNK5blink13InlineTextBox26HasWrappedSelectionNewlineEv(%"class.blink::InlineTextBox"* %0)
  br i1 %217, label %218, label %265

218:                                              ; preds = %216
  %219 = load i32, i32* %47, align 4
  %220 = and i32 %219, 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %235, label %222

222:                                              ; preds = %218
  %223 = call float @_ZNK5blink13InlineTextBox17NewlineSpaceWidthEv(%"class.blink::InlineTextBox"* %0)
  %224 = sitofp i32 %186 to float
  %225 = fmul float %224, 1.562500e-02
  %226 = fsub float %225, %223
  %227 = fmul float %226, 6.400000e+01
  %228 = fcmp ult float %227, 0xC1E0000000000000
  %229 = fcmp ugt float %227, 0x41DFFFFFE0000000
  %230 = fcmp ogt float %227, 0xC1E0000000000000
  %231 = select i1 %230, float %227, float 0xC1E0000000000000
  %232 = fptosi float %231 to i32
  %233 = select i1 %228, i32 0, i32 2147483647
  %234 = select i1 %229, i32 %233, i32 %232
  br label %235

235:                                              ; preds = %222, %218
  %236 = phi i32 [ %186, %218 ], [ %234, %222 ]
  %237 = call float @_ZNK5blink13InlineTextBox17NewlineSpaceWidthEv(%"class.blink::InlineTextBox"* %0)
  %238 = sitofp i32 %214 to float
  %239 = fmul float %238, 1.562500e-02
  %240 = fadd float %239, %237
  %241 = fmul float %240, 6.400000e+01
  %242 = fcmp ult float %241, 0xC1E0000000000000
  %243 = fcmp ugt float %241, 0x41DFFFFFE0000000
  %244 = fcmp ogt float %241, 0xC1E0000000000000
  %245 = select i1 %244, float %241, float 0xC1E0000000000000
  %246 = fptosi float %245 to i32
  %247 = select i1 %242, i32 0, i32 2147483647
  %248 = select i1 %243, i32 %247, i32 %246
  br label %265

249:                                              ; preds = %213
  br i1 %3, label %250, label %265

250:                                              ; preds = %249
  %251 = call zeroext i1 @_ZNK5blink13InlineTextBox26HasWrappedSelectionNewlineEv(%"class.blink::InlineTextBox"* %0)
  br i1 %251, label %252, label %265

252:                                              ; preds = %250
  %253 = call float @_ZNK5blink13InlineTextBox17NewlineSpaceWidthEv(%"class.blink::InlineTextBox"* %0)
  %254 = sitofp i32 %214 to float
  %255 = fmul float %254, 1.562500e-02
  %256 = fadd float %255, %253
  %257 = fmul float %256, 6.400000e+01
  %258 = fcmp ult float %257, 0xC1E0000000000000
  %259 = fcmp ugt float %257, 0x41DFFFFFE0000000
  %260 = fcmp ogt float %257, 0xC1E0000000000000
  %261 = select i1 %260, float %257, float 0xC1E0000000000000
  %262 = fptosi float %261 to i32
  %263 = select i1 %258, i32 0, i32 2147483647
  %264 = select i1 %259, i32 %263, i32 %262
  br label %265

265:                                              ; preds = %249, %250, %252, %215, %216, %235
  %266 = phi i32 [ %29, %235 ], [ %29, %216 ], [ %29, %215 ], [ %186, %252 ], [ %186, %250 ], [ %186, %249 ]
  %267 = phi i32 [ %236, %235 ], [ %186, %216 ], [ %186, %215 ], [ %29, %252 ], [ %29, %250 ], [ %29, %249 ]
  %268 = phi i32 [ %248, %235 ], [ %214, %216 ], [ %214, %215 ], [ %40, %252 ], [ %40, %250 ], [ %40, %249 ]
  %269 = phi i32 [ %40, %235 ], [ %40, %216 ], [ %40, %215 ], [ %264, %252 ], [ %214, %250 ], [ %214, %249 ]
  %270 = zext i32 %266 to i64
  %271 = shl nuw i64 %270, 32
  %272 = zext i32 %267 to i64
  %273 = or i64 %271, %272
  %274 = zext i32 %269 to i64
  %275 = shl nuw i64 %274, 32
  %276 = zext i32 %268 to i64
  %277 = or i64 %275, %276
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #12
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %265
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #12
  br label %293

293:                                              ; preds = %265, %289, %292
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %57) #12
  %294 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %295 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %294, i64 0, i32 2
  %296 = load i32, i32* %295, align 4
  %297 = add nsw i32 %296, -1
  store i32 %297, i32* %295, align 4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %293
  call void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"* %294, i32 0) #12
  br label %300

300:                                              ; preds = %299, %293, %4
  %301 = phi i64 [ 0, %4 ], [ %277, %293 ], [ %277, %299 ]
  %302 = phi i64 [ 0, %4 ], [ %273, %293 ], [ %273, %299 ]
  %303 = insertvalue { i64, i64 } undef, i64 %302, 0
  %304 = insertvalue { i64, i64 } %303, i64 %301, 1
  ret { i64, i64 } %304
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* noalias sret, %"class.blink::InlineTextBox"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::StringBuilder"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 4, i32 0
  %13 = bitcast %"class.blink::LayoutObject"** %12 to %"class.blink::LayoutText"**
  %14 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %14, i64 0, i32 7, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #12
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %4, %18, %33
  %36 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 4
  %39 = load i16, i16* %38, align 4
  %40 = zext i16 %39 to i32
  %41 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %42, align 8
  br i1 %17, label %46, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %35, %43
  %47 = phi i32 [ %45, %43 ], [ 0, %35 ]
  %48 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ugt i32 %37, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %42, align 8
  br label %60

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %37) #12
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* %52, i8* %53) #12
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %42, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 649, %"class.logging::CheckOpResult"* nonnull %7) #12
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  %61 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  %62 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %62, align 8
  br i1 %17, label %66, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  br label %66

66:                                               ; preds = %60, %63
  %67 = phi i32 [ %65, %63 ], [ 0, %60 ]
  %68 = sub i32 %67, %37
  %69 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69)
  %70 = icmp ult i32 %68, %40
  br i1 %70, label %72, label %71

71:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69)
  store i8* null, i8** %62, align 8
  br label %81

72:                                               ; preds = %66
  %73 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %40) #12
  %74 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %68) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i8* %73, i8* %74) #12
  %75 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69)
  store i8* %76, i8** %62, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 650, %"class.logging::CheckOpResult"* nonnull %9) #12
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  br label %81

81:                                               ; preds = %71, %72, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  br i1 %17, label %101, label %83

83:                                               ; preds = %81
  store i32 %40, i32* %82, align 8
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  br i1 %88, label %95, label %90

90:                                               ; preds = %83
  %91 = bitcast %"class.WTF::StringImpl"* %89 to i8*
  %92 = zext i32 %37 to i64
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* %93, i8** %94, align 8
  br label %105

95:                                               ; preds = %83
  %96 = bitcast %"class.WTF::StringImpl"* %89 to i16*
  %97 = zext i32 %37 to i64
  %98 = getelementptr inbounds i16, i16* %96, i64 %97
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %100 = bitcast i8** %99 to i16**
  store i16* %98, i16** %100, align 8
  br label %105

101:                                              ; preds = %81
  store i32 0, i32* %82, align 8
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %102, align 8
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %104 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %103, i64* %104, align 8
  br label %105

105:                                              ; preds = %90, %95, %101
  %106 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %13, align 8
  %107 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %106, i64 0, i32 7, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  br label %113

113:                                              ; preds = %105, %110
  %114 = phi i32 [ %112, %110 ], [ 0, %105 ]
  %115 = sub i32 %114, %37
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEN3WTF10StringViewEiPNS4_13StringBuilderE(%"class.blink::TextRun"* sret %0, %"class.blink::InlineTextBox"* %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %11, i32 %115, %"class.WTF::StringBuilder"* %3)
  br i1 %17, label %129, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %129

129:                                              ; preds = %113, %125, %128
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.blink::FloatPoint"* dereferenceable(8), float, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox10DeleteLineEv(%"class.blink::InlineTextBox"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutText"**
  %4 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %3, align 8
  tail call void @_ZN5blink10LayoutText13RemoveTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"* %4, %"class.blink::InlineTextBox"* %0) #12
  tail call void @_ZN5blink13InlineTextBox7DestroyEv(%"class.blink::InlineTextBox"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox11ExtractLineEv(%"class.blink::InlineTextBox"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 512
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %8 = bitcast %"class.blink::LayoutObject"** %7 to %"class.blink::LayoutText"**
  %9 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %8, align 8
  tail call void @_ZN5blink10LayoutText14ExtractTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"* %9, %"class.blink::InlineTextBox"* %0) #12
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox10AttachLineEv(%"class.blink::InlineTextBox"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 512
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %8 = bitcast %"class.blink::LayoutObject"** %7 to %"class.blink::LayoutText"**
  %9 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %8, align 8
  tail call void @_ZN5blink10LayoutText13AttachTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"* %9, %"class.blink::InlineTextBox"* %0) #12
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox13SetTruncationEt(%"class.blink::InlineTextBox"* nocapture, i16 zeroext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 5
  %4 = load i16, i16* %3, align 2
  %5 = icmp eq i16 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i16 %1, i16* %3, align 2
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox15ClearTruncationEv(%"class.blink::InlineTextBox"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 5
  %3 = load i16, i16* %2, align 2
  %4 = icmp eq i16 %3, -1
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i16 -1, i16* %2, align 2
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13InlineTextBox16PlaceEllipsisBoxEbNS_10LayoutUnitES1_S1_RS1_PPNS_9InlineBoxES1_(%"class.blink::InlineTextBox"*, i1 zeroext, i32, i32, i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::InlineBox"** nocapture, i32) unnamed_addr #1 align 2 {
  %9 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %6, align 8
  %10 = icmp eq %"class.blink::InlineBox"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 5
  %13 = load i16, i16* %12, align 2
  %14 = icmp eq i16 %13, -2
  br i1 %14, label %283, label %15

15:                                               ; preds = %11
  store i16 -2, i16* %12, align 2
  br label %283

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 2048
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %24 = select i1 %21, i32* %23, i32* %22
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 0
  %27 = select i1 %26, i32 -2147483648, i32 2147483647
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 %25) #12
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !2
  br i1 %1, label %32, label %40

32:                                               ; preds = %16
  %33 = icmp sgt i32 %4, -1
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %4) #12
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = icmp sle i32 %38, %31
  br label %56

40:                                               ; preds = %16
  %41 = icmp slt i32 %4, 0
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %4) #12
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %48) #12
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !2
  %55 = icmp sgt i32 %46, %54
  br label %56

56:                                               ; preds = %32, %40
  %57 = phi i1 [ false, %40 ], [ %39, %32 ]
  %58 = phi i32 [ %46, %40 ], [ %38, %32 ]
  %59 = phi i1 [ %55, %40 ], [ false, %32 ]
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 5
  %63 = load i16, i16* %62, align 2
  %64 = icmp eq i16 %63, -2
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  store i16 -2, i16* %62, align 2
  br label %66

66:                                               ; preds = %61, %65
  store %"class.blink::InlineBox"* %17, %"class.blink::InlineBox"** %6, align 8
  br label %283

67:                                               ; preds = %56
  br i1 %1, label %68, label %78

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %70) #12
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !2
  %77 = icmp slt i32 %58, %76
  br label %80

78:                                               ; preds = %67
  %79 = icmp sgt i32 %58, %31
  br label %80

80:                                               ; preds = %68, %78
  %81 = phi i1 [ false, %78 ], [ %77, %68 ]
  %82 = phi i1 [ %79, %78 ], [ false, %68 ]
  %83 = or i1 %81, %82
  br i1 %83, label %84, label %272

84:                                               ; preds = %80
  store %"class.blink::InlineBox"* %17, %"class.blink::InlineBox"** %6, align 8
  %85 = icmp sgt i32 %7, -1
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %58, i32 %7) #12
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !2
  %91 = load i32, i32* %18, align 4
  %92 = and i32 %91, 4
  %93 = icmp eq i32 %92, 0
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = bitcast %"class.blink::InlineTextBox"* %0 to i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)***
  %97 = load i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)**, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*** %96, align 8
  %98 = getelementptr inbounds i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)** %97, i64 37
  %99 = load i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)** %98, align 8
  %100 = tail call i32 %99(%"class.blink::InlineTextBox"* %0, i32 %90, i32 %95, i32 0) #12
  %101 = icmp eq i32 %100, 0
  %102 = and i1 %101, %1
  %103 = xor i1 %102, true
  %104 = xor i1 %93, %1
  %105 = or i1 %104, %103
  br i1 %105, label %127, label %106

106:                                              ; preds = %84
  %107 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 5
  %108 = load i16, i16* %107, align 2
  %109 = icmp eq i16 %108, -2
  br i1 %109, label %111, label %110

110:                                              ; preds = %106
  store i16 -2, i16* %107, align 2
  br label %111

111:                                              ; preds = %106, %110
  %112 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp slt i32 %4, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %113, i32 %4) #12
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !2
  store i32 %119, i32* %112, align 4
  %120 = load i32, i32* %18, align 4
  %121 = and i32 %120, 2048
  %122 = icmp eq i32 %121, 0
  %123 = select i1 %122, i32* %23, i32* %22
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, %90
  %126 = select i1 %125, i32 %124, i32 %90
  br label %283

127:                                              ; preds = %84
  br i1 %104, label %128, label %156

128:                                              ; preds = %127
  %129 = load i32, i32* %18, align 4
  %130 = and i32 %129, 2048
  %131 = icmp eq i32 %130, 0
  %132 = select i1 %131, i32* %23, i32* %22
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %133, 0
  br i1 %134, label %135, label %156

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = icmp slt i32 %100, %137
  br i1 %138, label %156, label %139

139:                                              ; preds = %135
  %140 = bitcast %"class.blink::InlineTextBox"* %0 to i32 (%"class.blink::InlineTextBox"*, i32)***
  %141 = load i32 (%"class.blink::InlineTextBox"*, i32)**, i32 (%"class.blink::InlineTextBox"*, i32)*** %140, align 8
  %142 = getelementptr inbounds i32 (%"class.blink::InlineTextBox"*, i32)*, i32 (%"class.blink::InlineTextBox"*, i32)** %141, i64 38
  %143 = load i32 (%"class.blink::InlineTextBox"*, i32)*, i32 (%"class.blink::InlineTextBox"*, i32)** %142, align 8
  %144 = tail call i32 %143(%"class.blink::InlineTextBox"* %0, i32 %100) #12
  %145 = load i32, i32* %18, align 4
  %146 = and i32 %145, 2048
  %147 = icmp eq i32 %146, 0
  %148 = select i1 %147, i32* %23, i32* %22
  %149 = load i32, i32* %148, align 4
  %150 = icmp slt i32 %149, 0
  %151 = sub nsw i32 0, %149
  %152 = select i1 %150, i32 %151, i32 %149
  %153 = icmp slt i32 %144, %152
  %154 = zext i1 %153 to i32
  %155 = add nsw i32 %100, %154
  br label %156

156:                                              ; preds = %127, %128, %135, %139
  %157 = phi i32 [ %155, %139 ], [ %100, %135 ], [ %100, %128 ], [ %100, %127 ]
  %158 = trunc i32 %157 to i16
  %159 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 5
  %160 = load i16, i16* %159, align 2
  %161 = icmp eq i16 %160, %158
  br i1 %161, label %163, label %162

162:                                              ; preds = %156
  store i16 %158, i16* %159, align 2
  br label %163

163:                                              ; preds = %156, %162
  %164 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %165 = bitcast %"class.blink::LayoutObject"** %164 to %"class.blink::LayoutText"**
  %166 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %168 = load i32, i32* %167, align 8
  %169 = select i1 %104, i32 %157, i32 0
  %170 = add nsw i32 %168, %169
  br i1 %104, label %171, label %176

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %173 = load i16, i16* %172, align 4
  %174 = zext i16 %173 to i32
  %175 = sub nsw i32 %174, %157
  br label %176

176:                                              ; preds = %163, %171
  %177 = phi i32 [ %175, %171 ], [ %157, %163 ]
  %178 = load i32, i32* %18, align 4
  %179 = and i32 %178, 2048
  %180 = icmp eq i32 %179, 0
  %181 = select i1 %180, i32* %23, i32* %22
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %202, label %184

184:                                              ; preds = %176
  %185 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %17) #12
  %186 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %185, i64 0, i32 0, i32 0, i32 7, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = and i32 %187, 2048
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %185, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %191 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %185, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = load i32, i32* %190, align 4
  %194 = select i1 %189, i32 %192, i32 %193
  %195 = icmp sgt i32 %194, -1
  %196 = select i1 %195, i32 -2147483648, i32 2147483647
  %197 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %182, i32 %194) #12
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %196, i32 %199, !prof !2
  %201 = load i32, i32* %18, align 4
  br label %202

202:                                              ; preds = %176, %184
  %203 = phi i32 [ %201, %184 ], [ %178, %176 ]
  %204 = phi i32 [ %200, %184 ], [ 0, %176 ]
  %205 = xor i1 %1, true
  %206 = zext i1 %205 to i8
  %207 = and i32 %203, 1
  %208 = icmp ne i32 %207, 0
  %209 = lshr i32 %203, 18
  %210 = and i32 %209, 4095
  %211 = sitofp i32 %210 to float
  %212 = bitcast %"class.blink::LayoutText"* %166 to float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.1838"*, %"class.blink::FloatRect"*, float)***
  %213 = load float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.1838"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.1838"*, %"class.blink::FloatRect"*, float)*** %212, align 8
  %214 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.1838"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.1838"*, %"class.blink::FloatRect"*, float)** %213, i64 112
  %215 = load float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.1838"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.1838"*, %"class.blink::FloatRect"*, float)** %214, align 8
  %216 = tail call float %215(%"class.blink::LayoutText"* %166, i32 %170, i32 %177, i32 %204, i8 zeroext %206, i1 zeroext %208, %"class.WTF::HashSet.1838"* null, %"class.blink::FloatRect"* null, float %211) #12
  %217 = fmul float %216, 6.400000e+01
  %218 = fcmp ult float %217, 0xC1E0000000000000
  %219 = fcmp ugt float %217, 0x41DFFFFFE0000000
  %220 = fcmp ogt float %217, 0xC1E0000000000000
  %221 = select i1 %220, float %217, float 0xC1E0000000000000
  %222 = fptosi float %221 to i32
  %223 = select i1 %218, i32 0, i32 2147483647
  %224 = select i1 %219, i32 %223, i32 %222
  %225 = icmp slt i32 %4, 0
  %226 = select i1 %225, i32 -2147483648, i32 2147483647
  %227 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %224, i32 %4) #12
  %228 = extractvalue { i32, i1 } %227, 1
  %229 = extractvalue { i32, i1 } %227, 0
  %230 = select i1 %228, i32 %226, i32 %229, !prof !2
  %231 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = icmp slt i32 %230, 0
  %234 = select i1 %233, i32 -2147483648, i32 2147483647
  %235 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %232, i32 %230) #12
  %236 = extractvalue { i32, i1 } %235, 1
  %237 = extractvalue { i32, i1 } %235, 0
  %238 = select i1 %236, i32 %234, i32 %237, !prof !2
  store i32 %238, i32* %231, align 4
  %239 = load i32, i32* %18, align 4
  %240 = and i32 %239, 2048
  %241 = icmp eq i32 %240, 0
  %242 = select i1 %241, i32* %23, i32* %22
  %243 = load i32, i32* %242, align 4
  br i1 %1, label %244, label %251

244:                                              ; preds = %202
  %245 = icmp slt i32 %224, 0
  %246 = select i1 %245, i32 -2147483648, i32 2147483647
  %247 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %243, i32 %224) #12
  %248 = extractvalue { i32, i1 } %247, 1
  %249 = extractvalue { i32, i1 } %247, 0
  %250 = select i1 %248, i32 %246, i32 %249, !prof !2
  br label %283

251:                                              ; preds = %202
  %252 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %253 = load i32, i32* %252, align 8
  %254 = icmp slt i32 %253, 0
  %255 = select i1 %254, i32 -2147483648, i32 2147483647
  %256 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %243, i32 %253) #12
  %257 = extractvalue { i32, i1 } %256, 1
  %258 = extractvalue { i32, i1 } %256, 0
  %259 = select i1 %257, i32 %255, i32 %258, !prof !2
  %260 = icmp sgt i32 %224, -1
  %261 = select i1 %260, i32 -2147483648, i32 2147483647
  %262 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %259, i32 %224) #12
  %263 = extractvalue { i32, i1 } %262, 1
  %264 = extractvalue { i32, i1 } %262, 0
  %265 = select i1 %263, i32 %261, i32 %264, !prof !2
  %266 = icmp sgt i32 %4, -1
  %267 = select i1 %266, i32 -2147483648, i32 2147483647
  %268 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %265, i32 %4) #12
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  %271 = select i1 %269, i32 %267, i32 %270, !prof !2
  br label %283

272:                                              ; preds = %80
  %273 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %274 = load i32, i32* %273, align 8
  %275 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = icmp slt i32 %274, 0
  %278 = select i1 %277, i32 -2147483648, i32 2147483647
  %279 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %276, i32 %274) #12
  %280 = extractvalue { i32, i1 } %279, 1
  %281 = extractvalue { i32, i1 } %279, 0
  %282 = select i1 %280, i32 %278, i32 %281, !prof !2
  store i32 %282, i32* %275, align 4
  br label %283

283:                                              ; preds = %66, %111, %272, %251, %244, %15, %11
  %284 = phi i32 [ -64, %11 ], [ -64, %15 ], [ -64, %66 ], [ %126, %111 ], [ -64, %272 ], [ %250, %244 ], [ %271, %251 ]
  ret i32 %284
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox7TextPosEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 2048
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %8 = select i1 %5, i32* %7, i32* %6
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %13 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %12) #12
  %14 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %13, i64 0, i32 0, i32 0, i32 7, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 2048
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %13, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %13, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %18, align 4
  %22 = select i1 %17, i32 %20, i32 %21
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %22) #12
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  br label %29

29:                                               ; preds = %1, %11
  %30 = phi i32 [ %28, %11 ], [ 0, %1 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13InlineTextBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_10LayoutUnitES9_(%"class.blink::InlineTextBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32, i32) unnamed_addr #1 align 2 {
  %7 = alloca %"struct.blink::PhysicalRect", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::PhysicalOffset"*
  %10 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = bitcast %"class.blink::LayoutObject"* %11 to i1 (%"class.blink::LayoutObject"*, i32)***
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %11, i32 0) #12
  br i1 %16, label %183, label %17

17:                                               ; preds = %6
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = lshr i160 %23, 12
  %25 = trunc i160 %24 to i32
  %26 = and i32 %25, 127
  switch i32 %26, label %27 [
    i32 16, label %62
    i32 1, label %62
  ]

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %29 = load i16, i16* %28, align 4
  %30 = icmp eq i16 %29, 1
  br i1 %30, label %31, label %62

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 1, i32 4, i32 0, i64 4
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"**
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %62, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp ugt i32 %38, %40
  br i1 %41, label %42, label %62

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  br i1 %46, label %54, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.WTF::StringImpl"* %47 to i8*
  %50 = zext i32 %40 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  br label %59

54:                                               ; preds = %42
  %55 = bitcast %"class.WTF::StringImpl"* %47 to i16*
  %56 = zext i32 %40 to i64
  %57 = getelementptr inbounds i16, i16* %55, i64 %56
  %58 = load i16, i16* %57, align 2
  br label %59

59:                                               ; preds = %48, %54
  %60 = phi i16 [ %53, %48 ], [ %58, %54 ]
  %61 = icmp eq i16 %60, 10
  br i1 %61, label %183, label %62

62:                                               ; preds = %31, %17, %17, %27, %36, %59
  %63 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 5
  %64 = load i16, i16* %63, align 2
  %65 = icmp eq i16 %64, -2
  br i1 %65, label %183, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0
  %68 = tail call i64 @_ZNK5blink9InlineBox16PhysicalLocationEv(%"class.blink::InlineBox"* %67) #12
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, 0
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %73) #12
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 %75, i32 %78, !prof !2
  %80 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %81) #12
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !2
  %88 = zext i32 %87 to i64
  %89 = shl nuw i64 %88, 32
  %90 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 1, i32 0
  %93 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %94 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 16, i1 false)
  %95 = load i32, i32* %93, align 4
  %96 = and i32 %95, 2048
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %66
  %99 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %100 = load i32, i32* %99, align 8
  br label %104

101:                                              ; preds = %66
  %102 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %67) #12
  %103 = load i32, i32* %93, align 4
  br label %104

104:                                              ; preds = %101, %98
  %105 = phi i32 [ %95, %98 ], [ %103, %101 ]
  %106 = phi i32 [ %100, %98 ], [ %102, %101 ]
  %107 = and i32 %105, 2048
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %104
  %110 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %67) #12
  br label %114

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %113 = load i32, i32* %112, align 8
  br label %114

114:                                              ; preds = %109, %111
  %115 = phi i32 [ %110, %109 ], [ %113, %111 ]
  %116 = bitcast %"struct.blink::PhysicalRect"* %7 to i64*
  %117 = zext i32 %79 to i64
  %118 = or i64 %89, %117
  store i64 %118, i64* %116, align 8
  store i32 %106, i32* %91, align 8
  store i32 %115, i32* %92, align 4
  %119 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %119, i64 0, i32 5, i32 0
  %121 = bitcast %"class.blink::ComputedStyle"** %120 to %"class.blink::ComputedStyleBase"**
  %122 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %122, i64 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = and i160 %125, 3802951800684688204490109616128
  %127 = icmp eq i160 %126, 1267650600228229401496703205376
  br i1 %127, label %128, label %180

128:                                              ; preds = %114
  %129 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, 1024
  %132 = icmp ne i32 %131, 0
  %133 = and i160 %125, 16888498602639360
  %134 = icmp ne i160 %133, 0
  %135 = or i1 %134, %132
  br i1 %135, label %136, label %180

136:                                              ; preds = %128
  %137 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #12
  br i1 %137, label %138, label %180

138:                                              ; preds = %136
  %139 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %140 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #12
  %141 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = load i32, i32* %72, align 4
  %144 = icmp sgt i32 %143, -1
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %142, i32 %143) #12
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !2
  %150 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = load i32, i32* %80, align 4
  %153 = icmp sgt i32 %152, -1
  %154 = select i1 %153, i32 -2147483648, i32 2147483647
  %155 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %151, i32 %152) #12
  %156 = extractvalue { i32, i1 } %155, 1
  %157 = extractvalue { i32, i1 } %155, 0
  %158 = select i1 %156, i32 %154, i32 %157, !prof !2
  %159 = zext i32 %158 to i64
  %160 = shl nuw i64 %159, 32
  %161 = zext i32 %149 to i64
  %162 = or i64 %160, %161
  store i64 %162, i64* %8, align 8
  %163 = bitcast %"class.blink::LayoutObject"* %139 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  %164 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %164, i64 62
  %166 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %165, align 8
  call void %166(%"class.blink::LayoutObject"* %139, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #12
  %167 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %168 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %167, i64 0, i32 4
  %169 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %168 to i96*
  %170 = load i96, i96* %169, align 4
  %171 = and i96 %170, 16777216
  %172 = icmp eq i96 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %138
  %174 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %167, i64 0, i32 6, i32 0, i32 0
  %175 = load %"class.blink::Node"*, %"class.blink::Node"** %174, align 8
  br label %176

176:                                              ; preds = %138, %173
  %177 = phi %"class.blink::Node"* [ %175, %173 ], [ null, %138 ]
  %178 = call i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"* %1, %"class.blink::Node"* %177, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #12
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %181, label %180

180:                                              ; preds = %128, %114, %176, %136
  br label %181

181:                                              ; preds = %176, %180
  %182 = phi i1 [ false, %180 ], [ true, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #12
  br label %183

183:                                              ; preds = %6, %59, %62, %181
  %184 = phi i1 [ %182, %181 ], [ false, %62 ], [ false, %59 ], [ false, %6 ]
  ret i1 %184
}

declare i64 @_ZNK5blink9InlineBox16PhysicalLocationEv(%"class.blink::InlineBox"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"*, %"class.blink::Node"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13InlineTextBox23GetEmphasisMarkPositionERKNS_13ComputedStyleERNS_20TextEmphasisPositionE(%"class.blink::InlineTextBox"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %4 = tail call i32 @_ZNK5blink13ComputedStyle19GetTextEmphasisMarkEv(%"class.blink::ComputedStyle"* %1) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %44, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %8, i64 0, i32 23
  %10 = bitcast [5 x i8]* %9 to i40*
  %11 = load i40, i40* %10, align 8
  %12 = lshr i40 %11, 20
  %13 = trunc i40 %12 to i32
  %14 = and i32 %13, 3
  store i32 %14, i32* %2, align 4
  %15 = tail call i32 @_ZNK5blink13ComputedStyle30GetTextEmphasisLineLogicalSideEv(%"class.blink::ComputedStyle"* %1) #12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %44

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %19, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %21 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.blink::LayoutBlock"* %20 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %21, i32 41) #12
  br i1 %26, label %27, label %44

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %20, i64 0, i32 0, i32 0, i32 0, i32 7
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = bitcast %"class.blink::LayoutObject"* %29 to i1 (%"class.blink::LayoutObject"*, i32)***
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, i64 92
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* %29, i32 42) #12
  br i1 %34, label %35, label %44

35:                                               ; preds = %27
  %36 = bitcast %"class.blink::LayoutObject"** %28 to %"class.blink::LayoutRubyRun"**
  %37 = load %"class.blink::LayoutRubyRun"*, %"class.blink::LayoutRubyRun"** %36, align 8
  %38 = tail call %"class.blink::LayoutRubyText"* @_ZNK5blink13LayoutRubyRun8RubyTextEv(%"class.blink::LayoutRubyRun"* %37) #12
  %39 = icmp eq %"class.blink::LayoutRubyText"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::LayoutRubyText", %"class.blink::LayoutRubyText"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %41, align 8
  %43 = icmp eq %"class.blink::InlineFlowBox"* %42, null
  br label %44

44:                                               ; preds = %35, %17, %27, %40, %6, %3
  %45 = phi i1 [ false, %3 ], [ true, %6 ], [ true, %17 ], [ true, %27 ], [ true, %35 ], [ %43, %40 ]
  ret i1 %45
}

declare i32 @_ZNK5blink13ComputedStyle19GetTextEmphasisMarkEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle30GetTextEmphasisLineLogicalSideEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetENS_10LayoutUnitES7_(%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32, i32) unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::InlineTextBoxPainter", align 8
  %7 = bitcast %"class.blink::InlineTextBoxPainter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %6, i64 0, i32 0
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %8, align 8
  call void @_ZN5blink20InlineTextBoxPainter5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineTextBoxPainter"* nonnull %6, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %9 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %10 = bitcast %"class.blink::LayoutObject"** %9 to %"class.blink::LayoutText"**
  %11 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %10, align 8
  %12 = call i32 @_ZNK5blink10LayoutText28ContainsOnlyWhitespaceOrNbspEv(%"class.blink::LayoutText"* %11) #12
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %19, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %16 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %16, i64 0, i32 1
  %18 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %17, align 8
  call void @_ZN5blink15PaintController14SetTextPaintedEv(%"class.blink::PaintController"* %18) #12
  br label %19

19:                                               ; preds = %5, %14
  ret void
}

declare void @_ZN5blink20InlineTextBoxPainter5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineTextBoxPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink15PaintController14SetTextPaintedEv(%"class.blink::PaintController"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox17SelectionStartEndERiS1_(%"class.blink::InlineTextBox"* nocapture readonly, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::LineLayoutText", align 8
  %5 = bitcast %"class.blink::LineLayoutText"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %7 = bitcast %"class.blink::LayoutObject"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::LineLayoutText"* %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = call { i64, i32 } @_ZNK5blink14LineLayoutText15SelectionStatusEv(%"class.blink::LineLayoutText"* nonnull %4) #12
  %11 = extractvalue { i64, i32 } %10, 0
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %15 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = sub nsw i32 %12, %16
  %18 = icmp sgt i32 %17, 0
  %19 = select i1 %18, i32 %17, i32 0
  store i32 %19, i32* %1, align 4
  %20 = load i32, i32* %15, align 8
  %21 = sub nsw i32 %14, %20
  %22 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %23 = load i16, i16* %22, align 4
  %24 = zext i16 %23 to i32
  %25 = icmp sgt i32 %21, %24
  %26 = select i1 %25, i32 %24, i32 %21
  store i32 %26, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox19PaintDocumentMarkerERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14DocumentMarkerERKNS_13ComputedStyleERKNS_4FontEb(%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::DocumentMarker"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), i1 zeroext) unnamed_addr #1 align 2 {
  %8 = alloca %"class.blink::InlineTextBoxPainter", align 8
  %9 = bitcast %"class.blink::InlineTextBoxPainter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %8, i64 0, i32 0
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %10, align 8
  call void @_ZN5blink20InlineTextBoxPainter19PaintDocumentMarkerERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14DocumentMarkerERKNS_13ComputedStyleERKNS_4FontEb(%"class.blink::InlineTextBoxPainter"* nonnull %8, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"class.blink::DocumentMarker"* dereferenceable(16) %3, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5, i1 zeroext %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

declare void @_ZN5blink20InlineTextBoxPainter19PaintDocumentMarkerERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14DocumentMarkerERKNS_13ComputedStyleERKNS_4FontEb(%"class.blink::InlineTextBoxPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::DocumentMarker"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox25PaintTextMarkerForegroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88)) unnamed_addr #1 align 2 {
  %7 = alloca %"class.blink::InlineTextBoxPainter", align 8
  %8 = bitcast %"class.blink::InlineTextBoxPainter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %7, i64 0, i32 0
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %9, align 8
  call void @_ZN5blink20InlineTextBoxPainter25PaintTextMarkerForegroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBoxPainter"* nonnull %7, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"class.blink::TextMarkerBase"* %3, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

declare void @_ZN5blink20InlineTextBoxPainter25PaintTextMarkerForegroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBoxPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox25PaintTextMarkerBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88)) unnamed_addr #1 align 2 {
  %7 = alloca %"class.blink::InlineTextBoxPainter", align 8
  %8 = bitcast %"class.blink::InlineTextBoxPainter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %7, i64 0, i32 0
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %9, align 8
  call void @_ZN5blink20InlineTextBoxPainter25PaintTextMarkerBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBoxPainter"* nonnull %7, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"class.blink::TextMarkerBase"* %3, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret void
}

declare void @_ZN5blink20InlineTextBoxPainter25PaintTextMarkerBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBoxPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox14CaretMinOffsetEv(%"class.blink::InlineTextBox"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox14CaretMaxOffsetEv(%"class.blink::InlineTextBox"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %5 = load i16, i16* %4, align 4
  %6 = zext i16 %5 to i32
  %7 = add nsw i32 %3, %6
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox17OffsetForPositionENS_10LayoutUnitENS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::InlineTextBox"*, i32, i32, i32) unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::LineLayoutText", align 8
  %6 = alloca %"class.blink::TextRun", align 8
  %7 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8, i32 0) #12
  br i1 %13, label %121, label %14

14:                                               ; preds = %4
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = lshr i160 %20, 12
  %22 = trunc i160 %21 to i32
  %23 = and i32 %22, 127
  %24 = ptrtoint %"class.blink::LayoutObject"* %15 to i64
  switch i32 %23, label %25 [
    i32 16, label %60
    i32 1, label %60
  ]

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %27 = load i16, i16* %26, align 4
  %28 = icmp eq i16 %27, 1
  br i1 %28, label %29, label %60

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 1, i32 4, i32 0, i64 4
  %31 = bitcast i8* %30 to %"class.WTF::StringImpl"**
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %60, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = icmp ugt i32 %36, %38
  br i1 %39, label %40, label %60

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  br i1 %44, label %52, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.WTF::StringImpl"* %45 to i8*
  %48 = zext i32 %38 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  br label %57

52:                                               ; preds = %40
  %53 = bitcast %"class.WTF::StringImpl"* %45 to i16*
  %54 = zext i32 %38 to i64
  %55 = getelementptr inbounds i16, i16* %53, i64 %54
  %56 = load i16, i16* %55, align 2
  br label %57

57:                                               ; preds = %46, %52
  %58 = phi i16 [ %51, %46 ], [ %56, %52 ]
  %59 = icmp eq i16 %58, 10
  br i1 %59, label %121, label %60

60:                                               ; preds = %29, %14, %14, %25, %34, %57
  %61 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 2048
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %67 = select i1 %64, i32* %66, i32* %65
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, -1
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %68) #12
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !2
  %75 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %74, %76
  br i1 %77, label %78, label %85

78:                                               ; preds = %60
  %79 = and i32 %62, 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %121

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %83 = load i16, i16* %82, align 4
  %84 = zext i16 %83 to i32
  br label %121

85:                                               ; preds = %60
  %86 = icmp slt i32 %74, 0
  br i1 %86, label %87, label %94

87:                                               ; preds = %85
  %88 = and i32 %62, 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %121, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %92 = load i16, i16* %91, align 4
  %93 = zext i16 %92 to i32
  br label %121

94:                                               ; preds = %85
  %95 = bitcast %"class.blink::LineLayoutText"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #12
  %96 = bitcast %"class.blink::LineLayoutText"* %5 to i64*
  store i64 %24, i64* %96, align 8
  %97 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %5, i64 0, i32 0
  %98 = and i32 %62, 1
  %99 = icmp ne i32 %98, 0
  %100 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %97, i1 zeroext %99)
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %102, i64 0, i32 1, i32 0, i32 0
  %104 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %104, i64 0, i32 1
  %106 = bitcast %"class.blink::TextRun"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %106) #12
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %6, %"class.blink::InlineTextBox"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %100, %"class.WTF::StringBuilder"* null)
  %107 = load i32, i32* %61, align 4
  %108 = and i32 %107, 2048
  %109 = icmp eq i32 %108, 0
  %110 = select i1 %109, i32* %66, i32* %65
  %111 = load i32, i32* %110, align 4
  %112 = icmp sgt i32 %111, -1
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %111) #12
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  %118 = sitofp i32 %117 to float
  %119 = fmul float %118, 1.562500e-02
  %120 = call i32 @_ZNK5blink4Font17OffsetForPositionERKNS_7TextRunEfNS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::Font"* %105, %"class.blink::TextRun"* nonnull dereferenceable(40) %6, float %119, i32 %2, i32 %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #12
  br label %121

121:                                              ; preds = %4, %90, %87, %81, %78, %57, %94
  %122 = phi i32 [ %120, %94 ], [ 0, %57 ], [ %84, %81 ], [ 0, %78 ], [ %93, %90 ], [ 0, %87 ], [ 0, %4 ]
  ret i32 %122
}

declare i32 @_ZNK5blink4Font17OffsetForPositionERKNS_7TextRunEfNS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), float, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink13InlineTextBox17PositionForOffsetEi(%"class.blink::InlineTextBox"*, i32) unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::LineLayoutText", align 8
  %4 = alloca %"class.blink::TextRun", align 8
  %5 = alloca %"class.blink::FloatPoint", align 4
  %6 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* %7, i32 0) #12
  br i1 %12, label %59, label %13

13:                                               ; preds = %2
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = lshr i160 %19, 12
  %21 = trunc i160 %20 to i32
  %22 = and i32 %21, 127
  %23 = ptrtoint %"class.blink::LayoutObject"* %14 to i64
  switch i32 %22, label %24 [
    i32 16, label %68
    i32 1, label %68
  ]

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %26 = load i16, i16* %25, align 4
  %27 = icmp eq i16 %26, 1
  br i1 %27, label %28, label %68

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 1, i32 4, i32 0, i64 4
  %30 = bitcast i8* %29 to %"class.WTF::StringImpl"**
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp ugt i32 %35, %37
  br i1 %38, label %39, label %68

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  br i1 %43, label %51, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::StringImpl"* %44 to i8*
  %47 = zext i32 %37 to i64
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  br label %56

51:                                               ; preds = %39
  %52 = bitcast %"class.WTF::StringImpl"* %44 to i16*
  %53 = zext i32 %37 to i64
  %54 = getelementptr inbounds i16, i16* %52, i64 %53
  %55 = load i16, i16* %54, align 2
  br label %56

56:                                               ; preds = %45, %51
  %57 = phi i16 [ %50, %45 ], [ %55, %51 ]
  %58 = icmp eq i16 %57, 10
  br i1 %58, label %59, label %68

59:                                               ; preds = %2, %56
  %60 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 2048
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %66 = select i1 %63, i32* %65, i32* %64
  %67 = load i32, i32* %66, align 4
  br label %122

68:                                               ; preds = %28, %13, %13, %24, %33, %56
  %69 = bitcast %"class.blink::LineLayoutText"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #12
  %70 = bitcast %"class.blink::LineLayoutText"* %3 to i64*
  store i64 %23, i64* %70, align 8
  %71 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %3, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 1
  %75 = icmp ne i32 %74, 0
  %76 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %71, i1 zeroext %75)
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %78, i64 0, i32 1, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %80, i64 0, i32 1
  %82 = load i32, i32* %72, align 4
  %83 = and i32 %82, 4
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = sub nsw i32 %1, %86
  br i1 %84, label %92, label %88

88:                                               ; preds = %68
  %89 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %90 = load i16, i16* %89, align 4
  %91 = zext i16 %90 to i32
  br label %92

92:                                               ; preds = %68, %88
  %93 = phi i32 [ %87, %88 ], [ 0, %68 ]
  %94 = phi i32 [ %91, %88 ], [ %87, %68 ]
  %95 = bitcast %"class.blink::TextRun"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %95) #12
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %4, %"class.blink::InlineTextBox"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %76, %"class.WTF::StringBuilder"* null)
  %96 = bitcast %"class.blink::FloatPoint"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #12
  %97 = load i32, i32* %72, align 4
  %98 = and i32 %97, 2048
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %101 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 5, i32 1, i32 0
  %102 = select i1 %99, i32* %101, i32* %100
  %103 = load i32, i32* %102, align 4
  %104 = sdiv i32 %103, 64
  %105 = sitofp i32 %104 to float
  %106 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 0
  store float %105, float* %106, align 4
  %107 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %5, i64 0, i32 1
  store float 0.000000e+00, float* %107, align 4
  %108 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"* %81, %"class.blink::TextRun"* nonnull dereferenceable(40) %4, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %5, float 0.000000e+00, i32 %93, i32 %94) #12
  %109 = extractvalue { <2 x float>, <2 x float> } %108, 0
  %110 = extractvalue { <2 x float>, <2 x float> } %108, 1
  %111 = extractelement <2 x float> %109, i32 0
  %112 = extractelement <2 x float> %110, i32 0
  %113 = fadd float %111, %112
  %114 = fmul float %113, 6.400000e+01
  %115 = fcmp ult float %114, 0xC1E0000000000000
  %116 = fcmp ugt float %114, 0x41DFFFFFE0000000
  %117 = fcmp ogt float %114, 0xC1E0000000000000
  %118 = select i1 %117, float %114, float 0xC1E0000000000000
  %119 = fptosi float %118 to i32
  %120 = select i1 %115, i32 0, i32 2147483647
  %121 = select i1 %116, i32 %120, i32 %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %95) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #12
  br label %122

122:                                              ; preds = %92, %59
  %123 = phi i32 [ %67, %59 ], [ %121, %92 ]
  ret i32 %123
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13InlineTextBox19ContainsCaretOffsetEi(%"class.blink::InlineTextBox"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, %1
  br i1 %5, label %66, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %8 = load i16, i16* %7, align 4
  %9 = zext i16 %8 to i32
  %10 = add nsw i32 %4, %9
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %66, label %12

12:                                               ; preds = %6
  %13 = icmp slt i32 %10, %1
  br i1 %13, label %66, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = bitcast %"class.blink::LayoutObject"* %16 to i1 (%"class.blink::LayoutObject"*, i32)***
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, i64 92
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::LayoutObject"* %16, i32 0) #12
  br i1 %21, label %65, label %22

22:                                               ; preds = %14
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = lshr i160 %28, 12
  %30 = trunc i160 %29 to i32
  %31 = and i32 %30, 127
  switch i32 %31, label %32 [
    i32 16, label %66
    i32 1, label %66
  ]

32:                                               ; preds = %22
  %33 = load i16, i16* %7, align 4
  %34 = icmp eq i16 %33, 1
  br i1 %34, label %35, label %66

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 1, i32 4, i32 0, i64 4
  %37 = bitcast i8* %36 to %"class.WTF::StringImpl"**
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %66, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %3, align 8
  %44 = icmp ugt i32 %42, %43
  br i1 %44, label %45, label %66

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  br i1 %49, label %57, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  %53 = zext i32 %43 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  br label %62

57:                                               ; preds = %45
  %58 = bitcast %"class.WTF::StringImpl"* %50 to i16*
  %59 = zext i32 %43 to i64
  %60 = getelementptr inbounds i16, i16* %58, i64 %59
  %61 = load i16, i16* %60, align 2
  br label %62

62:                                               ; preds = %51, %57
  %63 = phi i16 [ %56, %51 ], [ %61, %57 ]
  %64 = icmp eq i16 %63, 10
  br i1 %64, label %65, label %66

65:                                               ; preds = %14, %62
  br label %66

66:                                               ; preds = %35, %22, %22, %32, %40, %65, %62, %6, %12, %2
  %67 = phi i1 [ false, %2 ], [ true, %6 ], [ false, %12 ], [ false, %65 ], [ true, %62 ], [ true, %40 ], [ true, %32 ], [ true, %22 ], [ true, %22 ], [ true, %35 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox15CharacterWidthsERN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::InlineTextBox"*, %"class.WTF::Vector.2049"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::LineLayoutText", align 8
  %4 = alloca %"class.blink::TextRun", align 8
  %5 = alloca %"class.WTF::Vector.2054", align 8
  %6 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %7 = load i16, i16* %6, align 4
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %135, label %9

9:                                                ; preds = %2
  %10 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %11 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 4
  %14 = bitcast %"class.blink::LineLayoutText"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %16 = bitcast %"class.blink::LayoutObject"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::LineLayoutText"* %3 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp ne i32 %22, 0
  %24 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %19, i1 zeroext %23)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %26, i64 0, i32 1, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %28, i64 0, i32 1
  %30 = bitcast %"class.blink::TextRun"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 3
  %32 = bitcast %"class.blink::TextRun"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %31, align 8
  %33 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %33, align 4
  %34 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 5
  store i16 -21846, i16* %34, align 8
  %35 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 6, i64 0
  store i8 -86, i8* %35, align 2
  %36 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 6, i64 1
  store i8 -86, i8* %36, align 1
  %37 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %37, align 4
  %38 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 7, i32 1
  %39 = bitcast i8* %38 to i64*
  store i64 -6148914691236517206, i64* %39, align 4
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %4, %"class.blink::InlineTextBox"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %24, %"class.WTF::StringBuilder"* null)
  %40 = bitcast %"class.WTF::Vector.2054"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"class.WTF::Vector.2054", %"class.WTF::Vector.2054"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::Vector.2054", %"class.WTF::Vector.2054"* %5, i64 0, i32 0, i32 0, i32 2
  %43 = bitcast %"class.WTF::Vector.2054"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink4Font25IndividualCharacterRangesERKNS_7TextRunE(%"class.WTF::Vector.2054"* nonnull sret %5, %"class.blink::Font"* %29, %"class.blink::TextRun"* nonnull dereferenceable(40) %4) #12
  %44 = load i32, i32* %42, align 4
  %45 = getelementptr inbounds %"class.WTF::Vector.2049", %"class.WTF::Vector.2049"* %1, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp ult i32 %46, %44
  br i1 %47, label %48, label %104

48:                                               ; preds = %9
  %49 = getelementptr inbounds %"class.WTF::Vector.2049", %"class.WTF::Vector.2049"* %1, i64 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp ult i32 %50, %44
  br i1 %51, label %52, label %91

52:                                               ; preds = %48
  %53 = lshr i32 %50, 2
  %54 = add nuw i32 %50, 1
  %55 = add i32 %54, %53
  %56 = icmp ugt i32 %55, 4
  %57 = select i1 %56, i32 %55, i32 4
  %58 = icmp ugt i32 %57, %44
  %59 = select i1 %58, i32 %57, i32 %44
  %60 = icmp ult i32 %50, %59
  br i1 %60, label %61, label %91, !prof !4

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.WTF::Vector.2049", %"class.WTF::Vector.2049"* %1, i64 0, i32 0, i32 0, i32 0
  %63 = load float*, float** %62, align 8
  %64 = icmp eq float* %63, null
  %65 = zext i32 %59 to i64
  %66 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %65) #12
  %67 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %66, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #12
  br i1 %64, label %68, label %73

68:                                               ; preds = %61
  %69 = ptrtoint i8* %67 to i64
  %70 = bitcast %"class.WTF::Vector.2049"* %1 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = lshr i64 %66, 2
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* %49, align 8
  br label %91

73:                                               ; preds = %61
  %74 = lshr i64 %66, 2
  %75 = ptrtoint i8* %67 to i64
  %76 = load float*, float** %62, align 8
  %77 = icmp ne i8* %67, null
  %78 = icmp ne float* %76, null
  %79 = and i1 %77, %78
  %80 = bitcast float* %76 to i8*
  br i1 %79, label %81, label %87, !prof !4

81:                                               ; preds = %73
  %82 = load i32, i32* %45, align 4
  %83 = zext i32 %82 to i64
  %84 = shl nuw nsw i64 %83, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* nonnull align 4 %80, i64 %84, i1 false) #12
  %85 = bitcast %"class.WTF::Vector.2049"* %1 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %81, %73
  %88 = phi i8* [ %86, %81 ], [ %80, %73 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %88) #12
  %89 = bitcast %"class.WTF::Vector.2049"* %1 to i64*
  store atomic i64 %75, i64* %89 monotonic, align 8
  %90 = trunc i64 %74 to i32
  store i32 %90, i32* %49, align 8
  br label %91

91:                                               ; preds = %87, %68, %52, %48
  %92 = getelementptr inbounds %"class.WTF::Vector.2049", %"class.WTF::Vector.2049"* %1, i64 0, i32 0, i32 0, i32 0
  %93 = load float*, float** %92, align 8
  %94 = load i32, i32* %45, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds float, float* %93, i64 %95
  %97 = zext i32 %44 to i64
  %98 = getelementptr inbounds float, float* %93, i64 %97
  %99 = bitcast float* %96 to i8*
  %100 = ptrtoint float* %98 to i64
  %101 = ptrtoint float* %96 to i64
  %102 = sub i64 %100, %101
  call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 %102, i1 false) #12
  %103 = load i32, i32* %42, align 4
  br label %104

104:                                              ; preds = %9, %91
  %105 = phi i32 [ %44, %9 ], [ %103, %91 ]
  store i32 %44, i32* %45, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %123

107:                                              ; preds = %123, %104
  %108 = phi i32 [ 0, %104 ], [ %133, %123 ]
  %109 = load %"struct.blink::CharacterRange"*, %"struct.blink::CharacterRange"** %41, align 8
  %110 = icmp eq %"struct.blink::CharacterRange"* %109, null
  %111 = bitcast %"struct.blink::CharacterRange"* %109 to i8*
  br i1 %110, label %116, label %112, !prof !4

112:                                              ; preds = %107
  %113 = icmp eq i32 %108, 0
  br i1 %113, label %115, label %114, !prof !2

114:                                              ; preds = %112
  store i32 0, i32* %42, align 4
  br label %115

115:                                              ; preds = %114, %112
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %111) #12
  store %"struct.blink::CharacterRange"* null, %"struct.blink::CharacterRange"** %41, align 8
  br label %116

116:                                              ; preds = %107, %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #12
  %117 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #12
  %118 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %117, i64 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, -1
  store i32 %120, i32* %118, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %135

122:                                              ; preds = %116
  call void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"* %117, i32 0) #12
  br label %135

123:                                              ; preds = %104, %123
  %124 = phi i32 [ %132, %123 ], [ 0, %104 ]
  %125 = call dereferenceable(16) %"struct.blink::CharacterRange"* @_ZN3WTF6VectorIN5blink14CharacterRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2054"* nonnull %5, i32 %124) #12
  %126 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %125, i64 0, i32 1
  %127 = load float, float* %126, align 4
  %128 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %125, i64 0, i32 0
  %129 = load float, float* %128, align 4
  %130 = fsub float %127, %129
  %131 = call dereferenceable(4) float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2049"* %1, i32 %124) #12
  store float %130, float* %131, align 4
  %132 = add nuw i32 %124, 1
  %133 = load i32, i32* %42, align 4
  %134 = icmp ult i32 %132, %133
  br i1 %134, label %123, label %107

135:                                              ; preds = %122, %116, %2
  ret void
}

declare void @_ZNK5blink4Font25IndividualCharacterRangesERKNS_7TextRunE(%"class.WTF::Vector.2054"* sret, %"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEN3WTF10StringViewEiPNS4_13StringBuilderE(%"class.blink::TextRun"* noalias sret, %"class.blink::InlineTextBox"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8, i32, %"class.WTF::StringBuilder"*) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = icmp eq %"class.WTF::StringBuilder"* %5, null
  br i1 %8, label %67, label %9

9:                                                ; preds = %6
  %10 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"* %2) #12
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %9, %16
  %20 = phi i32 [ %18, %16 ], [ 0, %9 ]
  %21 = add i32 %20, %12
  tail call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %5, i32 %21) #12
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  %22 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %27, i64* %28, align 8
  br label %36

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %35 = bitcast i8** %34 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %35, align 8
  br label %36

36:                                               ; preds = %25, %29
  %37 = phi i32 [ %32, %29 ], [ 0, %25 ]
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %37, i32* %38, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #12
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %44, align 8
  store i32 0, i32* %11, align 8
  br label %65

45:                                               ; preds = %36
  %46 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %46, i64* %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %52 = bitcast i8** %51 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %52, align 8
  store i32 %48, i32* %11, align 8
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %45
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %45
  %62 = phi i32 [ %60, %59 ], [ %58, %45 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #12
  br label %65

65:                                               ; preds = %41, %61, %64
  %66 = load i32, i32* %11, align 8
  br label %67

67:                                               ; preds = %6, %65
  %68 = phi i32 [ %66, %65 ], [ %4, %6 ]
  %69 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 1
  %71 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 2
  %72 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 3
  %73 = bitcast %"class.blink::TextRun"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %72, align 8
  %74 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %74, align 4
  %75 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 5
  store i16 -21846, i16* %75, align 8
  %76 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 6, i64 0
  store i8 -86, i8* %76, align 2
  %77 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 6, i64 1
  store i8 -86, i8* %77, align 1
  %78 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %78, align 4
  %79 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 7, i32 1
  %80 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 7, i32 0
  %81 = bitcast i8* %79 to i64*
  store i64 -6148914691236517206, i64* %81, align 4
  %82 = load i32, i32* %80, align 4
  %83 = and i32 %82, 2048
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 5, i32 0, i32 0
  %86 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 5, i32 1, i32 0
  %87 = select i1 %84, i32* %86, i32* %85
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %111, label %90

90:                                               ; preds = %67
  %91 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0
  %92 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %91) #12
  %93 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %92, i64 0, i32 0, i32 0, i32 7, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 2048
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %92, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %98 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %92, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = load i32, i32* %97, align 4
  %101 = select i1 %96, i32 %99, i32 %100
  %102 = icmp sgt i32 %101, -1
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %88, i32 %101) #12
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106, !prof !2
  %108 = sitofp i32 %107 to float
  %109 = fmul float %108, 1.562500e-02
  %110 = load i32, i32* %80, align 4
  br label %111

111:                                              ; preds = %67, %90
  %112 = phi i32 [ %110, %90 ], [ %82, %67 ]
  %113 = phi float [ %109, %90 ], [ 0.000000e+00, %67 ]
  %114 = lshr i32 %112, 18
  %115 = and i32 %114, 4095
  %116 = sitofp i32 %115 to float
  %117 = lshr i32 %112, 12
  %118 = and i32 %117, 2
  %119 = and i32 %112, 1073479680
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %127, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0
  %123 = call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"* %122) #12
  %124 = icmp ne %"class.blink::InlineBox"* %123, null
  %125 = zext i1 %124 to i32
  %126 = load i32, i32* %80, align 4
  br label %127

127:                                              ; preds = %111, %121
  %128 = phi i32 [ %112, %111 ], [ %126, %121 ]
  %129 = phi i32 [ 0, %111 ], [ %125, %121 ]
  %130 = or i32 %129, %118
  %131 = and i32 %128, 65536
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %140

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %135 = bitcast [20 x i8]* %134 to i160*
  %136 = load i160, i160* %135, align 8
  %137 = lshr i160 %136, 146
  %138 = trunc i160 %137 to i16
  %139 = and i16 %138, 32
  br label %140

140:                                              ; preds = %127, %133
  %141 = phi i16 [ 32, %127 ], [ %139, %133 ]
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %143 = load i32, i32* %142, align 8
  store i32 %143, i32* %70, align 8
  store i32 %143, i32* %71, align 4
  store float %113, float* %72, align 8
  store float %116, float* %74, align 4
  %144 = trunc i32 %130 to i16
  %145 = trunc i32 %128 to i16
  %146 = shl i16 %145, 2
  %147 = and i16 %146, 16
  %148 = or i16 %147, %144
  %149 = or i16 %148, %141
  %150 = or i16 %149, -22528
  store i16 %150, i16* %75, align 8
  store float 0.000000e+00, float* %78, align 4
  store i8 -85, i8* %79, align 4
  %151 = icmp eq i32 %143, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %140
  %153 = or i16 %149, -22524
  store i16 %153, i16* %75, align 8
  store i8* null, i8** %69, align 8
  br label %169

154:                                              ; preds = %140
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %162 = bitcast i8** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.blink::TextRun"* %0 to i64*
  store i64 %163, i64* %164, align 8
  br i1 %160, label %167, label %165

165:                                              ; preds = %154
  %166 = or i16 %149, -22524
  store i16 %166, i16* %75, align 8
  br label %169

167:                                              ; preds = %154
  %168 = and i16 %150, -973
  store i16 %168, i16* %75, align 8
  br label %169

169:                                              ; preds = %152, %165, %167
  %170 = phi i16 [ %153, %152 ], [ %166, %165 ], [ %168, %167 ]
  %171 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %172 = bitcast [20 x i8]* %171 to i160*
  %173 = load i160, i160* %172, align 8
  %174 = and i160 %173, 286720
  %175 = icmp ne i160 %174, 0
  %176 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %177 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %177, i64 0, i32 15
  %179 = bitcast %"struct.blink::TabSize"* %178 to i64*
  %180 = load i64, i64* %179, align 4
  %181 = zext i1 %175 to i16
  %182 = shl nuw nsw i16 %181, 3
  %183 = and i16 %170, -393
  %184 = or i16 %183, %182
  %185 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %0, i64 0, i32 7
  %186 = bitcast %"struct.blink::TabSize"* %185 to i40*
  %187 = trunc i64 %180 to i40
  store i40 %187, i40* %186, align 4
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %177, i64 0, i32 3, i32 0, i32 0
  %189 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %189, i64 0, i32 3
  %191 = load i8, i8* %190, align 2
  %192 = zext i8 %191 to i16
  %193 = shl nuw nsw i16 %192, 7
  %194 = and i16 %193, 384
  %195 = or i16 %194, %184
  store i16 %195, i16* %75, align 8
  store i32 %68, i32* %70, align 8
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13InlineTextBox28ConstructTextRunForInspectorERKNS_13ComputedStyleE(%"class.blink::TextRun"* noalias sret, %"class.blink::InlineTextBox"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1 align 2 {
  tail call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* sret %0, %"class.blink::InlineTextBox"* %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.WTF::StringBuilder"* null)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK5blink13InlineTextBox7BoxNameEv(%"class.blink::InlineTextBox"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13InlineTextBox9DebugNameEv(%"class.blink::InlineTextBox"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringAppend.2059", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::StringAppend.2059", align 8
  %5 = alloca %"class.WTF::StringAppend.2060", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  %8 = bitcast %"class.WTF::StringAppend.2059"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = bitcast %"class.WTF::StringAppend.2060"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = bitcast %"class.blink::InlineTextBox"* %0 to i8* (%"class.blink::InlineTextBox"*)***
  %12 = load i8* (%"class.blink::InlineTextBox"*)**, i8* (%"class.blink::InlineTextBox"*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%"class.blink::InlineTextBox"*)*, i8* (%"class.blink::InlineTextBox"*)** %12, i64 13
  %14 = load i8* (%"class.blink::InlineTextBox"*)*, i8* (%"class.blink::InlineTextBox"*)** %13, align 8
  %15 = tail call i8* %14(%"class.blink::InlineTextBox"* %0) #12
  %16 = icmp eq i8* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %1
  %18 = tail call i64 @strlen(i8* nonnull %15) #13
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi i64 [ %18, %17 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %15, i64 %20) #12
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %68, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %41

31:                                               ; preds = %24
  %32 = zext i32 %30 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #12
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %31
  call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %31
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %29, align 4
  br label %41

41:                                               ; preds = %24, %39
  %42 = phi i32 [ %40, %39 ], [ %30, %24 ]
  %43 = load atomic i32, i32* %25 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  br i1 %45, label %47, label %57

47:                                               ; preds = %41
  %48 = zext i32 %42 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #12
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %47
  call void @llvm.trap() #12
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %55, %41
  %58 = phi i32 [ %56, %55 ], [ %42, %41 ]
  %59 = load atomic i32, i32* %25 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %46, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #12
  br label %68

68:                                               ; preds = %19, %64, %67
  %69 = getelementptr inbounds %"class.WTF::StringAppend.2060", %"class.WTF::StringAppend.2060"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringAppend.2060", %"class.WTF::StringAppend.2060"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %72 = bitcast %"class.blink::LayoutObject"** %71 to %"class.blink::LayoutText"**
  %73 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %73, i64 0, i32 7
  %75 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %78 = load i16, i16* %77, align 4
  %79 = zext i16 %78 to i32
  %80 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %74, i32 %76, i32 %79) #12
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2059"* nonnull sret %4, %"class.WTF::StringAppend.2060"* nonnull dereferenceable(16) %5, %"class.WTF::StringImpl"* %80)
  %81 = bitcast %"class.WTF::StringAppend.2059"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81)
  %82 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8, !noalias !5
  %84 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %84, align 8, !noalias !5
  %85 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %68
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #12
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !2

100:                                              ; preds = %91
  call void @llvm.trap() #12
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %103

103:                                              ; preds = %101, %86, %68
  %104 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %2, i64 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %4, i64 0, i32 0, i32 1
  %106 = bitcast i8** %105 to i64*
  %107 = load i64, i64* %106, align 8, !noalias !5
  %108 = bitcast i8** %104 to i64*
  store i64 %107, i64* %108, align 8, !noalias !5
  %109 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %4, i64 0, i32 1, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8, !noalias !5
  %111 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %2, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %111, align 8, !noalias !5
  %112 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %112, label %130, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #12
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %118
  call void @llvm.trap() #12
  unreachable

128:                                              ; preds = %118
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %119, align 4
  br label %130

130:                                              ; preds = %103, %113, %128
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringAppend.2059"* nonnull byval(%"class.WTF::StringAppend.2059") align 8 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81)
  %131 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %3)
  %132 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #12
  br label %148

148:                                              ; preds = %147, %144, %130
  %149 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #12
  br label %165

165:                                              ; preds = %148, %161, %164
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #12
  br label %181

181:                                              ; preds = %180, %177, %165
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #12
  br label %197

197:                                              ; preds = %181, %193, %196
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #12
  br label %213

213:                                              ; preds = %197, %209, %212
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #12
  br label %229

229:                                              ; preds = %213, %225, %228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  ret %"class.WTF::StringImpl"* %131
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2059"* noalias sret, %"class.WTF::StringAppend.2060"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2060", %"class.WTF::StringAppend.2060"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2060", %"class.WTF::StringAppend.2060"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #12
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #12
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2059"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2059"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13InlineTextBox7GetTextEv(%"class.blink::InlineTextBox"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 4, i32 0
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutText"**
  %4 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %4, i64 0, i32 7
  %6 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  %9 = load i16, i16* %8, align 4
  %10 = zext i16 %9 to i32
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %5, i32 %7, i32 %10) #12
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2177", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2177", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2177", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2177", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter.2177"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #12
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"* nonnull %5, i8* %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = select i1 %16, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %15
  %18 = bitcast %"class.WTF::StringTypeAdapter.2177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #12
  %20 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"* nonnull %4, i8* %20) #12
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  br i1 %24, label %25, label %26

25:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  br label %75

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %12, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  br i1 %32, label %75, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #12
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.2177"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #12
  %40 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"* nonnull %3, i8* %40) #12
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2059"* %38, i8* %37) #12
  %41 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2059"* %38) #12
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2177"* nonnull %3, i8* %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #12
  %44 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #12
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !2

59:                                               ; preds = %52
  call void @llvm.trap() #12
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %117

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %117

75:                                               ; preds = %26, %25
  %76 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %78 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %77, i16** nonnull dereferenceable(8) %7) #12
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %81 = bitcast %"class.WTF::StringTypeAdapter.2177"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #12
  %82 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"* nonnull %2, i8* %82) #12
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2059"* %80, i16* %79) #12
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2059"* %80) #12
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %79, i64 %84
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2177"* nonnull %2, i16* %85) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #12
  %86 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %104

94:                                               ; preds = %87
  %95 = zext i32 %93 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #12
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %94
  call void @llvm.trap() #12
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %92, align 4
  br label %104

104:                                              ; preds = %87, %102
  %105 = phi i32 [ %103, %102 ], [ %93, %87 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %107 = load atomic i32, i32* %88 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %112 = add i32 %105, -1
  store i32 %112, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %104
  %114 = phi i32 [ %112, %110 ], [ %105, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #12
  br label %117

117:                                              ; preds = %116, %113, %75, %74, %71, %33
  %118 = phi i8* [ %34, %33 ], [ %34, %71 ], [ %34, %74 ], [ %76, %75 ], [ %76, %113 ], [ %76, %116 ]
  %119 = phi i64 [ 0, %33 ], [ %64, %71 ], [ %64, %74 ], [ 0, %75 ], [ %106, %113 ], [ %106, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #12
  %120 = inttoptr i64 %119 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %120
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13InlineTextBox34ManuallySetStartLenAndLogicalWidthEjjNS_10LayoutUnitE(%"class.blink::InlineTextBox"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::InlineTextBox"*, align 8
  %6 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  store i32 %1, i32* %6, align 8
  %7 = trunc i32 %2 to i16
  %8 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 4
  store i16 %7, i16* %8, align 4
  %9 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 6, i32 0
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 0, i32 7, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 16384
  %13 = icmp eq i32 %12, 0
  %14 = load %"class.WTF::HashMap.1763"*, %"class.WTF::HashMap.1763"** @_ZN5blinkL26g_text_boxes_with_overflowE, align 8
  %15 = icmp ne %"class.WTF::HashMap.1763"* %14, null
  %16 = and i1 %15, %13
  br i1 %16, label %17, label %56

17:                                               ; preds = %4
  %18 = bitcast %"class.blink::InlineTextBox"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store %"class.blink::InlineTextBox"* %0, %"class.blink::InlineTextBox"** %5, align 8
  %19 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %14, i64 0, i32 0
  %20 = call { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.1764"* %19, %"class.blink::InlineTextBox"** nonnull dereferenceable(8) %5) #12
  %21 = extractvalue { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } %20, 0
  %22 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %14, i64 0, i32 0, i32 0
  %23 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %14, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %23, i64 %26
  %28 = icmp eq %"struct.WTF::KeyValuePair.1767"* %27, %21
  br i1 %28, label %55, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %21, i64 0, i32 0
  store %"class.blink::InlineTextBox"* inttoptr (i64 -1 to %"class.blink::InlineTextBox"*), %"class.blink::InlineTextBox"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %14, i64 0, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, 1
  %34 = and i32 %33, 2147483647
  %35 = and i32 %32, -2147483648
  %36 = or i32 %34, %35
  store i32 %36, i32* %31, align 8
  %37 = getelementptr inbounds %"class.WTF::HashMap.1763", %"class.WTF::HashMap.1763"* %14, i64 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, -1
  store i32 %39, i32* %37, align 4
  %40 = mul i32 %39, 6
  %41 = load i32, i32* %24, align 8
  %42 = icmp ult i32 %40, %41
  %43 = icmp ugt i32 %41, 8
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %55

45:                                               ; preds = %29
  %46 = lshr i32 %41, 1
  %47 = zext i32 %46 to i64
  %48 = mul nuw nsw i64 %47, 24
  %49 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13InlineTextBoxENS2_10LayoutRectEEEEEPKcv, i64 0, i64 0)) #12
  %50 = bitcast i8* %49 to %"struct.WTF::KeyValuePair.1767"*
  %51 = icmp eq i32 %46, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %45
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 %48, i1 false) #12
  br label %53

53:                                               ; preds = %52, %45
  %54 = call %"struct.WTF::KeyValuePair.1767"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.1764"* %19, %"struct.WTF::KeyValuePair.1767"* %50, i32 %46, %"struct.WTF::KeyValuePair.1767"* null) #12
  br label %55

55:                                               ; preds = %17, %29, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %56

56:                                               ; preds = %4, %55
  ret void
}

declare i32 @_ZNK5blink9InlineBox11OwnerNodeIdEv(%"class.blink::InlineBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv(%"class.blink::DisplayItemClient"*) unnamed_addr #1 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox15IsInlineFlowBoxEv(%"class.blink::InlineBox"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox15IsRootInlineBoxEv(%"class.blink::InlineBox"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox18IsSVGInlineTextBoxEv(%"class.blink::InlineBox"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox18IsSVGInlineFlowBoxEv(%"class.blink::InlineBox"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox18IsSVGRootInlineBoxEv(%"class.blink::InlineBox"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9InlineBox20VirtualLogicalHeightEv(%"class.blink::InlineBox"*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9InlineBox14SetConstructedEv(%"class.blink::InlineBox"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 2
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox6IsLeafEv(%"class.blink::InlineBox"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink9InlineBox14DirtyLineBoxesEv(%"class.blink::InlineBox"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink9InlineBox22CanAccommodateEllipsisEbNS_10LayoutUnitES1_(%"class.blink::InlineBox"*, i1 zeroext, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DisplayItemClientD2Ev(%"class.blink::DisplayItemClient"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InlineTextBoxD0Ev(%"class.blink::InlineTextBox"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.blink::InlineTextBox"* %0 to i8*
  tail call void @_ZN5blink9InlineBoxdlEPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13InlineTextBox15IsInlineTextBoxEv(%"class.blink::InlineTextBox"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

declare i32 @_ZNK5blink8LayoutBR10LineHeightEb(%"class.blink::LayoutBR"*, i1 zeroext) local_unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #2

declare i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"*, i32) local_unnamed_addr #2

declare void @_ZN5blink10LayoutText13RemoveTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #2

declare void @_ZN5blink10LayoutText14ExtractTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #2

declare void @_ZN5blink10LayoutText13AttachTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #2

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare %"class.blink::LayoutRubyText"* @_ZNK5blink13LayoutRubyRun8RubyTextEv(%"class.blink::LayoutRubyRun"*) local_unnamed_addr #2

declare i32 @_ZNK5blink10LayoutText28ContainsOnlyWhitespaceOrNbspEv(%"class.blink::LayoutText"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1767"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.1764"*, %"struct.WTF::KeyValuePair.1767"*, i32, %"struct.WTF::KeyValuePair.1767"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1764", align 8
  %6 = bitcast %"class.WTF::HashTable.1764"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1764"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1767"* %1, %"struct.WTF::KeyValuePair.1767"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1767"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1764"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1764"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1767"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.1764"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1764"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1767"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.1767"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.1767"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.1767"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.1767"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.1767"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1764"* nonnull %5, %"class.blink::InlineTextBox"** dereferenceable(8) %53) #12
  %55 = extractvalue { %"struct.WTF::KeyValuePair.1767"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.1767"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.1767"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  %58 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.1767"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.1767"* %55, %"struct.WTF::KeyValuePair.1767"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.1767"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.1767"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.1767"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1767"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.1764"*, %"class.blink::InlineTextBox"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1767"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %32, i64 0, i32 0
  %35 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %34, align 8
  %36 = icmp eq %"class.blink::InlineTextBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::InlineTextBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1767"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.1767"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1767"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1767"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1767"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::InlineTextBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::InlineTextBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::InlineTextBox"* %63, inttoptr (i64 -1 to %"class.blink::InlineTextBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.1767"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %75, i64 0, i32 0
  %78 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %77, align 8
  %79 = icmp eq %"class.blink::InlineTextBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.1767"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.1767"*, i8 } undef, %"struct.WTF::KeyValuePair.1767"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.1767"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.1767"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.1764"*, %"class.blink::InlineTextBox"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1767"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %34, i64 0, i32 0
  %36 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::InlineTextBox"*
  %38 = icmp eq %"class.blink::InlineTextBox"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::InlineTextBox"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::InlineTextBox"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %63, i64 0, i32 0
  %65 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %64, align 8
  %66 = icmp eq %"class.blink::InlineTextBox"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.1767"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.1767"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.1767"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.1767"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } undef, %"struct.WTF::KeyValuePair.1767"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } %79, %"struct.WTF::KeyValuePair.1767"* %78, 1
  ret { %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"* } %80
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1767"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EEPS2_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.1764"*, %"class.blink::InlineTextBox"** dereferenceable(8), %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1767"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1767"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.1764"* %0, %"struct.WTF::KeyValuePair.1767"* null)
  %9 = load %"struct.WTF::KeyValuePair.1767"*, %"struct.WTF::KeyValuePair.1767"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1767"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %39, i64 0, i32 0
  %41 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %40, align 8
  %42 = icmp eq %"class.blink::InlineTextBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::InlineTextBox"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::InlineTextBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1767"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1767"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::InlineTextBox"* %59, %43
  br i1 %64, label %105, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::InlineTextBox"* %59, inttoptr (i64 -1 to %"class.blink::InlineTextBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1767"* %60, %"struct.WTF::KeyValuePair.1767"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %72, i64 0, i32 0
  %74 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %73, align 8
  %75 = icmp eq %"class.blink::InlineTextBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1767"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1767"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #12
  %80 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.1767"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.1767"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1767", %"struct.WTF::KeyValuePair.1767"* %89, i64 0, i32 1
  %92 = bitcast %"class.blink::LayoutRect"* %91 to i8*
  %93 = bitcast %"class.blink::LayoutRect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 16, i1 false) #12
  %94 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %87
  %104 = tail call %"struct.WTF::KeyValuePair.1767"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.1764"* %0, %"struct.WTF::KeyValuePair.1767"* %89)
  br label %105

105:                                              ; preds = %58, %87, %103
  %106 = phi i8 [ 1, %87 ], [ 1, %103 ], [ 0, %58 ]
  %107 = phi %"struct.WTF::KeyValuePair.1767"* [ %89, %87 ], [ %104, %103 ], [ %60, %58 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair.1767"*, i8 } undef, %"struct.WTF::KeyValuePair.1767"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair.1767"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair.1767"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1767"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.1764"*, %"struct.WTF::KeyValuePair.1767"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1764", %"class.WTF::HashTable.1764"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13InlineTextBoxENS2_10LayoutRectEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1767"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 %34, i1 false) #12
  br label %39

39:                                               ; preds = %31, %38
  %40 = call %"struct.WTF::KeyValuePair.1767"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NS1_10LayoutRectEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.1764"* %0, %"struct.WTF::KeyValuePair.1767"* %36, i32 %32, %"struct.WTF::KeyValuePair.1767"* %1) #12
  ret %"struct.WTF::KeyValuePair.1767"* %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2049"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2049", %"class.WTF::Vector.2049"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2049", %"class.WTF::Vector.2049"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::CharacterRange"* @_ZN3WTF6VectorIN5blink14CharacterRangeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2054"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2054", %"class.WTF::Vector.2054"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2054", %"class.WTF::Vector.2054"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CharacterRange"*, %"struct.blink::CharacterRange"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::CharacterRange", %"struct.blink::CharacterRange"* %24, i64 %25
  ret %"struct.blink::CharacterRange"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2059"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #12
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.2059"* byval(%"class.WTF::StringAppend.2059") align 8, i8*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #12
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #12
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %53, align 8
  br label %67

54:                                               ; preds = %35, %50
  %55 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #12
  br label %67

67:                                               ; preds = %52, %66, %63
  br i1 %7, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %81

81:                                               ; preds = %67, %77, %80
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2177", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2177", %"class.WTF::StringTypeAdapter.2177"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2177"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2059"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2059"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2059"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2060"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2060"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2060"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2177", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2060", %"class.WTF::StringAppend.2060"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2177", %"class.WTF::StringTypeAdapter.2177"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2060", %"class.WTF::StringAppend.2060"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2177"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"* nonnull %4, i8* %21) #12
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2177"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2059"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2179", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2177", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2179", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2179"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2179"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2179"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2179"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2179"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #12
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"* nonnull %4, i8* %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2180"* nonnull %49, i8* %1) #12
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2177"* nonnull %4, i8* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2060"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2180"* nonnull %53, i8* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2180"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2177"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2059"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2179", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2177", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2179", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2179"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2179"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2179"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2179"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2179"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2177"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2059", %"class.WTF::StringAppend.2059"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #12
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2177"* nonnull %4, i8* %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2180"* nonnull %49, i16* %1) #12
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2177"* nonnull %4, i16* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2179", %"class.WTF::StringTypeAdapter.2179"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2060"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2180"* nonnull %53, i16* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2180"*, i16*) local_unnamed_addr #2

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
