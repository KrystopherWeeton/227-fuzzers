; ModuleID = '../../components/payments/content/ssl_validity_checker.cc'
source_filename = "../../components/payments/content/ssl_validity_checker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.security_state::VisibleSecurityState" = type <{ %class.GURL, i32, [4 x i8], %"struct.security_state::SafetyTipInfo", i8, [7 x i8], %class.scoped_refptr, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.GURL* }
%"struct.security_state::SafetyTipInfo" = type { i32, %class.GURL }
%class.scoped_refptr = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.31", %"class.std::__1::vector.35" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::unique_ptr.31"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map.14", i64 }
%"class.std::__1::map.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }

@_ZN8payments6errors22kInvalidSslCertificateE = external constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"DANGEROUS\00", align 1
@_ZN8payments6errors43kDetailedInvalidSslCertificateMessageFormatE = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@_ZN8switches24kIgnoreCertificateErrorsE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments18SslValidityChecker36GetInvalidSslCertificateErrorMessageEPN7content11WebContentsE(%"class.std::__1::basic_string"* noalias sret, %"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq %"class.content::WebContents"* %1, null
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments6errors22kInvalidSslCertificateE, i64 0, i64 0)) #8
  %8 = icmp ugt i64 %7, -17
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %10) #9
  unreachable

11:                                               ; preds = %6
  %12 = icmp ult i64 %7, 23
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = add nuw i64 %7, 16
  %15 = and i64 %14, -16
  %16 = tail call i8* @_Znwm(i64 %15) #10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = or i64 %15, -9223372036854775808
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %7, i64* %20, align 8
  br label %27

21:                                               ; preds = %11
  %22 = trunc i64 %7 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %26 = icmp eq i64 %7, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %21, %13
  %28 = phi i8* [ %16, %13 ], [ %25, %21 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments6errors22kInvalidSslCertificateE, i64 0, i64 0), i64 %7, i1 false) #8
  br label %29

29:                                               ; preds = %21, %27
  %30 = phi i8* [ %25, %21 ], [ %28, %27 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %7
  store i8 0, i8* %31, align 1
  br label %125

32:                                               ; preds = %2
  %33 = tail call %"struct.security_state::VisibleSecurityState"* @_ZN14security_state23GetVisibleSecurityStateEPN7content11WebContentsE(%"class.content::WebContents"* nonnull %1) #8
  %34 = tail call i32 @_ZN14security_state16GetSecurityLevelERKNS_20VisibleSecurityStateEb(%"struct.security_state::VisibleSecurityState"* dereferenceable(296) %33, i1 zeroext false) #8
  %35 = icmp eq %"struct.security_state::VisibleSecurityState"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  tail call void @_ZN14security_state20VisibleSecurityStateD1Ev(%"struct.security_state::VisibleSecurityState"* nonnull %33) #8
  %37 = bitcast %"struct.security_state::VisibleSecurityState"* %33 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %32, %36
  %39 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #8
  switch i32 %34, label %41 [
    i32 3, label %43
    i32 4, label %43
    i32 0, label %47
    i32 6, label %52
    i32 5, label %56
    i32 7, label %60
  ]

41:                                               ; preds = %38
  %42 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %86

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 0, i8* %45, align 1
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %46, align 8
  br label %124

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  store i8 4, i8* %49, align 1
  %50 = bitcast %"class.std::__1::basic_string"* %3 to i32*
  store i32 1162760014, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %39, i64 4
  store i8 0, i8* %51, align 4
  br label %86

52:                                               ; preds = %38
  %53 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 7, i8* %54, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7, i1 false) #8
  %55 = getelementptr inbounds i8, i8* %39, i64 7
  store i8 0, i8* %55, align 1
  br label %86

56:                                               ; preds = %38
  %57 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 9, i8* %58, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9, i1 false) #8
  %59 = getelementptr inbounds i8, i8* %39, i64 9
  store i8 0, i8* %59, align 1
  br label %86

60:                                               ; preds = %38
  %61 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments6errors22kInvalidSslCertificateE, i64 0, i64 0)) #8
  %62 = icmp ugt i64 %61, -17
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %64) #9
  unreachable

65:                                               ; preds = %60
  %66 = icmp ult i64 %61, 23
  br i1 %66, label %75, label %67

67:                                               ; preds = %65
  %68 = add nuw i64 %61, 16
  %69 = and i64 %68, -16
  %70 = tail call i8* @_Znwm(i64 %69) #10
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %70, i8** %71, align 8
  %72 = or i64 %69, -9223372036854775808
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %61, i64* %74, align 8
  br label %81

75:                                               ; preds = %65
  %76 = trunc i64 %61 to i8
  %77 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  store i8 %76, i8* %78, align 1
  %79 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %80 = icmp eq i64 %61, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %75, %67
  %82 = phi i8* [ %70, %67 ], [ %79, %75 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments6errors22kInvalidSslCertificateE, i64 0, i64 0), i64 %61, i1 false) #8
  br label %83

83:                                               ; preds = %75, %81
  %84 = phi i8* [ %79, %75 ], [ %82, %81 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 %61
  store i8 0, i8* %85, align 1
  br label %124

86:                                               ; preds = %41, %56, %52, %47
  %87 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %41 ], [ %57, %56 ], [ %53, %52 ], [ %48, %47 ]
  %88 = phi i64 [ 0, %41 ], [ 9, %56 ], [ 7, %52 ], [ 4, %47 ]
  %89 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 24, i1 false) #8
  %92 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments6errors43kDetailedInvalidSslCertificateMessageFormatE, i64 0, i64 0)) #8
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %94 = call zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_S4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments6errors43kDetailedInvalidSslCertificateMessageFormatE, i64 0, i64 0), i64 %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1, i8* nonnull %39, i64 %88, %"class.std::__1::basic_string"* nonnull %4) #8
  %95 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  %96 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %95, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kIgnoreCertificateErrorsE, i64 0, i64 0)) #8
  br i1 %96, label %97, label %102

97:                                               ; preds = %86
  %98 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  store i8 0, i8* %99, align 1
  %100 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %100, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %112

102:                                              ; preds = %86
  %103 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* nonnull align 8 %89, i64 24, i1 false) #8
  br label %112

109:                                              ; preds = %102
  %110 = load i8*, i8** %90, align 8
  %111 = load i64, i64* %91, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %110, i64 %111) #8
  br label %112

112:                                              ; preds = %109, %107, %97
  %113 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %103, %109 ], [ %103, %107 ], [ %101, %97 ]
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  %118 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %118) #10
  br label %119

119:                                              ; preds = %117, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #8
  %120 = load i8, i8* %93, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %123) #10
  br label %124

124:                                              ; preds = %43, %83, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8
  br label %125

125:                                              ; preds = %124, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8payments18SslValidityChecker16GetSecurityLevelEPN7content11WebContentsE(%"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"struct.security_state::VisibleSecurityState"* @_ZN14security_state23GetVisibleSecurityStateEPN7content11WebContentsE(%"class.content::WebContents"* %0) #8
  %3 = tail call i32 @_ZN14security_state16GetSecurityLevelERKNS_20VisibleSecurityStateEb(%"struct.security_state::VisibleSecurityState"* dereferenceable(296) %2, i1 zeroext false) #8
  %4 = icmp eq %"struct.security_state::VisibleSecurityState"* %2, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN14security_state20VisibleSecurityStateD1Ev(%"struct.security_state::VisibleSecurityState"* nonnull %2) #8
  %6 = bitcast %"struct.security_state::VisibleSecurityState"* %2 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  ret i32 %3
}

declare zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_S4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i8*, i64, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8payments18SslValidityChecker33IsValidPageInPaymentHandlerWindowEPN7content11WebContentsE(%"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = icmp eq %"class.content::WebContents"* %0, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %1
  %5 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 120, i1 false)
  %6 = bitcast %"class.content::WebContents"* %0 to %class.GURL* (%"class.content::WebContents"*)***
  %7 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %6, align 8
  %8 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %7, i64 8
  %9 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %8, align 8
  %10 = tail call dereferenceable(120) %class.GURL* %9(%"class.content::WebContents"* nonnull %0) #8
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %2, %class.GURL* dereferenceable(120) %10) #8
  %11 = call zeroext i1 @_ZN8payments7UrlUtil32IsValidUrlInPaymentHandlerWindowERK4GURL(%class.GURL* nonnull dereferenceable(120) %2) #8
  br i1 %11, label %12, label %26

12:                                               ; preds = %4
  %13 = call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* nonnull %2) #8
  br i1 %13, label %14, label %26

14:                                               ; preds = %12
  %15 = call %"struct.security_state::VisibleSecurityState"* @_ZN14security_state23GetVisibleSecurityStateEPN7content11WebContentsE(%"class.content::WebContents"* nonnull %0) #8
  %16 = call i32 @_ZN14security_state16GetSecurityLevelERKNS_20VisibleSecurityStateEb(%"struct.security_state::VisibleSecurityState"* dereferenceable(296) %15, i1 zeroext false) #8
  %17 = icmp eq %"struct.security_state::VisibleSecurityState"* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  call void @_ZN14security_state20VisibleSecurityStateD1Ev(%"struct.security_state::VisibleSecurityState"* nonnull %15) #8
  %19 = bitcast %"struct.security_state::VisibleSecurityState"* %15 to i8*
  call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %14, %18
  %21 = add i32 %16, -3
  %22 = icmp ult i32 %21, 2
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  %25 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %24, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kIgnoreCertificateErrorsE, i64 0, i64 0)) #8
  br label %26

26:                                               ; preds = %12, %20, %23, %4
  %27 = phi i1 [ false, %4 ], [ true, %20 ], [ %25, %23 ], [ true, %12 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #8
  br label %28

28:                                               ; preds = %1, %26
  %29 = phi i1 [ %27, %26 ], [ false, %1 ]
  ret i1 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

declare zeroext i1 @_ZN8payments7UrlUtil32IsValidUrlInPaymentHandlerWindowERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare %"struct.security_state::VisibleSecurityState"* @_ZN14security_state23GetVisibleSecurityStateEPN7content11WebContentsE(%"class.content::WebContents"*) local_unnamed_addr #2

declare i32 @_ZN14security_state16GetSecurityLevelERKNS_20VisibleSecurityStateEb(%"struct.security_state::VisibleSecurityState"* dereferenceable(296), i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN14security_state20VisibleSecurityStateD1Ev(%"struct.security_state::VisibleSecurityState"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
