; ModuleID = '../../third_party/libjpeg_turbo/jcapimin.c'
source_filename = "../../third_party/libjpeg_turbo/jcapimin.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder*, %struct.jpeg_scan_info*, i32 }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_comp_master = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, i8***)* }
%struct.jpeg_marker_writer = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i32, i32)*, void (%struct.jpeg_compress_struct*, i32)* }
%struct.jpeg_color_converter = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_CreateCompress(%struct.jpeg_compress_struct*, i32, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  store %struct.jpeg_memory_mgr* null, %struct.jpeg_memory_mgr** %4, align 8
  %5 = icmp eq i32 %1, 62
  br i1 %5, label %18, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 5
  store i32 12, i32* %9, align 8
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 0
  store i32 62, i32* %11, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 1
  store i32 %1, i32* %13, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %15, align 8
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #4
  br label %18

18:                                               ; preds = %3, %6
  %19 = icmp eq i64 %2, 520
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %35

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %24 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %25 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %24, i64 0, i32 5
  store i32 21, i32* %25, align 8
  %26 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %27 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %26, i64 0, i32 6, i32 0, i64 0
  store i32 520, i32* %27, align 4
  %28 = trunc i64 %2 to i32
  %29 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %30 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %29, i64 0, i32 6, i32 0, i64 1
  store i32 %28, i32* %30, align 4
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %23, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i64 0, i32 0
  %33 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %32, align 8
  %34 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %33(%struct.jpeg_common_struct* %34) #4
  br label %35

35:                                               ; preds = %20, %22
  %36 = phi %struct.jpeg_common_struct* [ %21, %20 ], [ %34, %22 ]
  %37 = bitcast %struct.jpeg_compress_struct* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 3
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %43 = bitcast %struct.jpeg_memory_mgr** %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 0, i64 512, i1 false)
  store i64 %38, i64* %37, align 8
  store i64 %41, i64* %40, align 8
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 4
  store i32 0, i32* %44, align 8
  tail call void @jinit_memory_mgr(%struct.jpeg_common_struct* %36) #4
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  store %struct.jpeg_progress_mgr* null, %struct.jpeg_progress_mgr** %45, align 8
  %46 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  store %struct.jpeg_destination_mgr* null, %struct.jpeg_destination_mgr** %46, align 8
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 15
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 63
  store %struct.jpeg_scan_info* null, %struct.jpeg_scan_info** %48, align 8
  %49 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 11
  %50 = bitcast %struct.jpeg_component_info** %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 104, i1 false)
  store double 1.000000e+00, double* %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  store i32 100, i32* %51, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @jinit_memory_mgr(%struct.jpeg_common_struct*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_destroy_compress(%struct.jpeg_compress_struct*) local_unnamed_addr #0 {
  %2 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void @jpeg_destroy(%struct.jpeg_common_struct* %2) #4
  ret void
}

declare void @jpeg_destroy(%struct.jpeg_common_struct*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_abort_compress(%struct.jpeg_compress_struct*) local_unnamed_addr #0 {
  %2 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void @jpeg_abort(%struct.jpeg_common_struct* %2) #4
  ret void
}

declare void @jpeg_abort(%struct.jpeg_common_struct*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @jpeg_suppress_tables(%struct.jpeg_compress_struct* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 0
  %4 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %3, align 8
  %5 = icmp eq %struct.JQUANT_TBL* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %4, i64 0, i32 1
  store i32 %1, i32* %7, align 4
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 1
  %10 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %9, align 8
  %11 = icmp eq %struct.JQUANT_TBL* %10, null
  br i1 %11, label %59, label %57

12:                                               ; preds = %71
  %13 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %73, i64 0, i32 2
  store i32 %1, i32* %13, align 4
  br label %14

14:                                               ; preds = %71, %12
  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 0
  %16 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %15, align 8
  %17 = icmp eq %struct.JHUFF_TBL* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %16, i64 0, i32 2
  store i32 %1, i32* %19, align 4
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 1
  %22 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %21, align 8
  %23 = icmp eq %struct.JHUFF_TBL* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %22, i64 0, i32 2
  store i32 %1, i32* %25, align 4
  br label %26

26:                                               ; preds = %24, %20
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 1
  %28 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %27, align 8
  %29 = icmp eq %struct.JHUFF_TBL* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %28, i64 0, i32 2
  store i32 %1, i32* %31, align 4
  br label %32

32:                                               ; preds = %30, %26
  %33 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 2
  %34 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %33, align 8
  %35 = icmp eq %struct.JHUFF_TBL* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %34, i64 0, i32 2
  store i32 %1, i32* %37, align 4
  br label %38

38:                                               ; preds = %36, %32
  %39 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 2
  %40 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %39, align 8
  %41 = icmp eq %struct.JHUFF_TBL* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %40, i64 0, i32 2
  store i32 %1, i32* %43, align 4
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 3
  %46 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %45, align 8
  %47 = icmp eq %struct.JHUFF_TBL* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %46, i64 0, i32 2
  store i32 %1, i32* %49, align 4
  br label %50

50:                                               ; preds = %48, %44
  %51 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 3
  %52 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %51, align 8
  %53 = icmp eq %struct.JHUFF_TBL* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %52, i64 0, i32 2
  store i32 %1, i32* %55, align 4
  br label %56

56:                                               ; preds = %54, %50
  ret void

57:                                               ; preds = %8
  %58 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %10, i64 0, i32 1
  store i32 %1, i32* %58, align 4
  br label %59

59:                                               ; preds = %57, %8
  %60 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 2
  %61 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %60, align 8
  %62 = icmp eq %struct.JQUANT_TBL* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %61, i64 0, i32 1
  store i32 %1, i32* %64, align 4
  br label %65

65:                                               ; preds = %63, %59
  %66 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 16, i64 3
  %67 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %66, align 8
  %68 = icmp eq %struct.JQUANT_TBL* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %67, i64 0, i32 1
  store i32 %1, i32* %70, align 4
  br label %71

71:                                               ; preds = %69, %65
  %72 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 0
  %73 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %72, align 8
  %74 = icmp eq %struct.JHUFF_TBL* %73, null
  br i1 %74, label %14, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_finish_compress(%struct.jpeg_compress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %23 [
    i32 101, label %4
    i32 102, label %4
    i32 103, label %34
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %6, %8
  br i1 %9, label %10, label %18

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 5
  store i32 67, i32* %13, align 8
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %15, align 8
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #4
  br label %18

18:                                               ; preds = %10, %4
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %20 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %20, i64 0, i32 2
  %22 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %21, align 8
  tail call void %22(%struct.jpeg_compress_struct* %0) #4
  br label %34

23:                                               ; preds = %1
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 5
  store i32 20, i32* %26, align 8
  %27 = load i32, i32* %2, align 4
  %28 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %29 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %28, i64 0, i32 6, i32 0, i64 0
  store i32 %27, i32* %29, align 4
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %24, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 0
  %32 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %31, align 8
  %33 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %32(%struct.jpeg_common_struct* %33) #4
  br label %34

34:                                               ; preds = %1, %23, %18
  %35 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 54
  %36 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %35, align 8
  %37 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %36, i64 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %92

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 43
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 2
  %45 = bitcast %struct.jpeg_progress_mgr** %44 to void (%struct.jpeg_common_struct*)***
  %46 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %47 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 57
  %48 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %49

49:                                               ; preds = %42, %84
  %50 = phi %struct.jpeg_comp_master* [ %36, %42 ], [ %88, %84 ]
  %51 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %50, i64 0, i32 0
  %52 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %51, align 8
  tail call void %52(%struct.jpeg_compress_struct* %0) #4
  %53 = load i32, i32* %43, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %84, label %55

55:                                               ; preds = %49, %79
  %56 = phi i64 [ %80, %79 ], [ 0, %49 ]
  %57 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %44, align 8
  %58 = icmp eq %struct.jpeg_progress_mgr* %57, null
  br i1 %58, label %67, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %57, i64 0, i32 1
  store i64 %56, i64* %60, align 8
  %61 = load i32, i32* %43, align 8
  %62 = zext i32 %61 to i64
  %63 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %44, align 8
  %64 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %63, i64 0, i32 2
  store i64 %62, i64* %64, align 8
  %65 = load void (%struct.jpeg_common_struct*)**, void (%struct.jpeg_common_struct*)*** %45, align 8
  %66 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %65, align 8
  tail call void %66(%struct.jpeg_common_struct* %46) #4
  br label %67

67:                                               ; preds = %55, %59
  %68 = load %struct.jpeg_c_coef_controller*, %struct.jpeg_c_coef_controller** %47, align 8
  %69 = getelementptr inbounds %struct.jpeg_c_coef_controller, %struct.jpeg_c_coef_controller* %68, i64 0, i32 1
  %70 = load i32 (%struct.jpeg_compress_struct*, i8***)*, i32 (%struct.jpeg_compress_struct*, i8***)** %69, align 8
  %71 = tail call i32 %70(%struct.jpeg_compress_struct* %0, i8*** null) #4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %67
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i64 0, i32 5
  store i32 24, i32* %75, align 8
  %76 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %77 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %76, i64 0, i32 0
  %78 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %77, align 8
  tail call void %78(%struct.jpeg_common_struct* %46) #4
  br label %79

79:                                               ; preds = %67, %73
  %80 = add nuw nsw i64 %56, 1
  %81 = load i32, i32* %43, align 8
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %55, label %84

84:                                               ; preds = %79, %49
  %85 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %35, align 8
  %86 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %85, i64 0, i32 2
  %87 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %86, align 8
  tail call void %87(%struct.jpeg_compress_struct* %0) #4
  %88 = load %struct.jpeg_comp_master*, %struct.jpeg_comp_master** %35, align 8
  %89 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %88, i64 0, i32 4
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %49, label %92

92:                                               ; preds = %84, %40
  %93 = phi %struct.jpeg_common_struct* [ %41, %40 ], [ %46, %84 ]
  %94 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %95 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %94, align 8
  %96 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %95, i64 0, i32 3
  %97 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %96, align 8
  tail call void %97(%struct.jpeg_compress_struct* %0) #4
  %98 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %99 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %98, align 8
  %100 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %99, i64 0, i32 4
  %101 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %100, align 8
  tail call void %101(%struct.jpeg_compress_struct* %0) #4
  tail call void @jpeg_abort(%struct.jpeg_common_struct* %93) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_write_marker(%struct.jpeg_compress_struct*, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -101
  %12 = icmp ult i32 %11, 3
  br i1 %12, label %25, label %13

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %15 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %16 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %15, i64 0, i32 5
  store i32 20, i32* %16, align 8
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 6, i32 0, i64 0
  store i32 %18, i32* %20, align 4
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %14, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 0
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %22, align 8
  %24 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %23(%struct.jpeg_common_struct* %24) #4
  br label %25

25:                                               ; preds = %8, %13
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %27 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %26, align 8
  %28 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %27, i64 0, i32 5
  %29 = load void (%struct.jpeg_compress_struct*, i32, i32)*, void (%struct.jpeg_compress_struct*, i32, i32)** %28, align 8
  tail call void %29(%struct.jpeg_compress_struct* %0, i32 %1, i32 %3) #4
  %30 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %26, align 8
  %31 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %30, i64 0, i32 6
  %32 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %31, align 8
  %33 = icmp eq i32 %3, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %25, %34
  %35 = phi i32 [ %37, %34 ], [ %3, %25 ]
  %36 = phi i8* [ %40, %34 ], [ %2, %25 ]
  %37 = add i32 %35, -1
  %38 = load i8, i8* %36, align 1
  %39 = zext i8 %38 to i32
  tail call void %32(%struct.jpeg_compress_struct* %0, i32 %39) #4
  %40 = getelementptr inbounds i8, i8* %36, i64 1
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %42, label %34

42:                                               ; preds = %34, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_write_m_header(%struct.jpeg_compress_struct*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 39
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, -101
  %11 = icmp ult i32 %10, 3
  br i1 %11, label %24, label %12

12:                                               ; preds = %7, %3
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %13, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 5
  store i32 20, i32* %15, align 8
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %13, align 8
  %19 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %18, i64 0, i32 6, i32 0, i64 0
  store i32 %17, i32* %19, align 4
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %13, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 0
  %22 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %21, align 8
  %23 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %22(%struct.jpeg_common_struct* %23) #4
  br label %24

24:                                               ; preds = %7, %12
  %25 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %26 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %25, align 8
  %27 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %26, i64 0, i32 5
  %28 = load void (%struct.jpeg_compress_struct*, i32, i32)*, void (%struct.jpeg_compress_struct*, i32, i32)** %27, align 8
  tail call void %28(%struct.jpeg_compress_struct* %0, i32 %1, i32 %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_write_m_byte(%struct.jpeg_compress_struct*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %4 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %4, i64 0, i32 6
  %6 = load void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i32)** %5, align 8
  tail call void %6(%struct.jpeg_compress_struct* %0, i32 %1) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_write_tables(%struct.jpeg_compress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 100
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %18

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %9 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %9, i64 0, i32 5
  store i32 20, i32* %10, align 8
  %11 = load i32, i32* %2, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 6, i32 0, i64 0
  store i32 %11, i32* %13, align 4
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %8, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 0
  %16 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %15, align 8
  %17 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %16(%struct.jpeg_common_struct* %17) #4
  br label %18

18:                                               ; preds = %5, %7
  %19 = phi %struct.jpeg_common_struct* [ %6, %5 ], [ %17, %7 ]
  %20 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %20, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 4
  %23 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %22, align 8
  tail call void %23(%struct.jpeg_common_struct* %19) #4
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %25 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %24, align 8
  %26 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %25, i64 0, i32 2
  %27 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %26, align 8
  tail call void %27(%struct.jpeg_compress_struct* %0) #4
  tail call void @jinit_marker_writer(%struct.jpeg_compress_struct* %0) #4
  %28 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 58
  %29 = load %struct.jpeg_marker_writer*, %struct.jpeg_marker_writer** %28, align 8
  %30 = getelementptr inbounds %struct.jpeg_marker_writer, %struct.jpeg_marker_writer* %29, i64 0, i32 4
  %31 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %30, align 8
  tail call void %31(%struct.jpeg_compress_struct* %0) #4
  %32 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %24, align 8
  %33 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %32, i64 0, i32 4
  %34 = load void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)** %33, align 8
  tail call void %34(%struct.jpeg_compress_struct* %0) #4
  ret void
}

declare void @jinit_marker_writer(%struct.jpeg_compress_struct*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
