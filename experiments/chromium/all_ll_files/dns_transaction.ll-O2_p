; ModuleID = '../../net/dns/dns_transaction.cc'
source_filename = "../../net/dns/dns_transaction.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.7" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.38", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { float }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.43" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::basic_string"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.net::DnsTransactionFactory" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.net::DnsSession" = type { %"class.base::RefCounted", %"struct.net::DnsConfig", %"class.std::__1::unique_ptr.48", %"class.net::DnsUdpTracker", %"class.base::RepeatingCallback", %"class.net::NetLog"*, %"class.base::WeakPtrFactory.72" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.net::DnsConfig" = type { %"class.std::__1::vector", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.15", %"class.std::__1::unordered_map", i8, i8, i32, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.std::__1::vector.41", i32, i8, %"class.std::__1::vector.15" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.net::DnsSocketAllocator"* }
%"class.net::DnsSocketAllocator" = type { %"class.net::ClientSocketFactory"*, %"class.net::NetLog"*, %"class.std::__1::vector" }
%"class.net::ClientSocketFactory" = type opaque
%"class.net::DnsUdpTracker" = type { i8, %"class.base::circular_deque", %"class.base::circular_deque.68", %"class.base::circular_deque.68", %"class.base::TickClock"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.net::DnsUdpTracker::QueryData"*, i64 }
%"struct.net::DnsUdpTracker::QueryData" = type opaque
%"class.base::circular_deque.68" = type { %"class.base::internal::VectorBuffer.69", i64, i64 }
%"class.base::internal::VectorBuffer.69" = type { %"class.base::TimeTicks"*, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.71", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.71" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.51", %"class.std::__1::vector.58" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.53" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.60" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::WeakPtrFactory.72" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl" = type { %"class.net::DnsTransactionFactory", %class.scoped_refptr.73, %"class.std::__1::unique_ptr.74" }
%class.scoped_refptr.73 = type { %"class.net::DnsSession"* }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.net::OptRecordRdata"* }
%"class.net::OptRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector.77", %"class.std::__1::vector.84" }
%"class.net::RecordRdata" = type { i32 (...)** }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"*, %"class.std::__1::__compressed_pair.79" }
%"class.net::OptRecordRdata::Opt" = type { i16, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.net::OptRecordRdata::Opt"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { i8*, i8*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i8* }
%"class.net::DnsTransaction" = type { i32 (...)** }
%"class.base::OnceCallback.384" = type { %"class.base::internal::CallbackBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::ResolveContext" = type { %"class.base::CheckedObserver", %"class.net::URLRequestContext"*, %"class.std::__1::unique_ptr.304", %"class.base::TimeDelta", %"class.base::ObserverList.321", %"class.base::WeakPtr.333", i32, %"class.base::TimeDelta", %"class.std::__1::vector.334", %"class.std::__1::vector.334", %"class.net::IsolationInfo" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.97" }
%"class.base::WeakPtrFactory.97" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.297", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type { i32 (...)** }
%"class.net::ProxyDelegate" = type { i32 (...)** }
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.98", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.100" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr.105", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.15", %"class.base::MRUCache.177", %"class.base::flat_map.197", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.111" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.123", %"class.std::__1::map.130", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.169" }
%"class.std::__1::list.123" = type { %"class.std::__1::__list_imp.124" }
%"class.std::__1::__list_imp.124" = type { %"struct.std::__1::__list_node_base.125", %"class.std::__1::__compressed_pair.126" }
%"struct.std::__1::__list_node_base.125" = type { %"struct.std::__1::__list_node_base.125"*, %"struct.std::__1::__list_node_base.125"* }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.130" = type { %"class.std::__1::__tree.131" }
%"class.std::__1::__tree.131" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.141" }
%"class.std::__1::__tree.141" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.148" }
%"class.base::MRUCache.148" = type { %"class.base::MRUCacheBase.149" }
%"class.base::MRUCacheBase.149" = type { i32 (...)**, %"class.std::__1::list.150", %"class.std::__1::map.157", i64 }
%"class.std::__1::list.150" = type { %"class.std::__1::__list_imp.151" }
%"class.std::__1::__list_imp.151" = type { %"struct.std::__1::__list_node_base.152", %"class.std::__1::__compressed_pair.153" }
%"struct.std::__1::__list_node_base.152" = type { %"struct.std::__1::__list_node_base.152"*, %"struct.std::__1::__list_node_base.152"* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.157" = type { %"class.std::__1::__tree.158" }
%"class.std::__1::__tree.158" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::WeakPtrFactory.169" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.170" }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.172" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.std::__1::pair"* }
%"class.base::MRUCache.177" = type { %"class.base::MRUCacheBase.178" }
%"class.base::MRUCacheBase.178" = type { i32 (...)**, %"class.std::__1::list.179", %"class.std::__1::map.186", i64 }
%"class.std::__1::list.179" = type { %"class.std::__1::__list_imp.180" }
%"class.std::__1::__list_imp.180" = type { %"struct.std::__1::__list_node_base.181", %"class.std::__1::__compressed_pair.182" }
%"struct.std::__1::__list_node_base.181" = type { %"struct.std::__1::__list_node_base.181"*, %"struct.std::__1::__list_node_base.181"* }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::flat_map.197" = type { %"class.base::internal::flat_tree.198" }
%"class.base::internal::flat_tree.198" = type { %"class.std::__1::vector.199" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.std::__1::pair.201"*, %"struct.std::__1::pair.201"*, %"class.std::__1::__compressed_pair.202" }
%"struct.std::__1::pair.201" = type opaque
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::pair.201"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.166, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.168" }
%class.scoped_refptr.166 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.167" }>
%"class.base::RefCountedThreadSafe.167" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.168" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.207", %"class.std::__1::map.218", %"class.std::__1::map.227", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.250", i8, [7 x i8] }>
%"class.std::__1::map.207" = type { %"class.std::__1::__tree.208" }
%"class.std::__1::__tree.208" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.209", %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.218" = type { %"class.std::__1::__tree.219" }
%"class.std::__1::__tree.219" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.220", %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.227" = type { %"class.std::__1::__tree.228" }
%"class.std::__1::__tree.228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.238", %"struct.std::__1::less.247", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.238" = type { %"class.std::__1::__tree.239" }
%"class.std::__1::__tree.239" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::less.247" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.249" }
%"class.base::time_internal::TimeBase.249" = type { i64 }
%"class.std::__1::set.250" = type { %"class.std::__1::__tree.251" }
%"class.std::__1::__tree.251" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type opaque
%"class.net::URLRequestJobFactory" = type { i32 (...)**, %"class.std::__1::map.258" }
%"class.std::__1::map.258" = type { %"class.std::__1::__tree.259" }
%"class.std::__1::__tree.259" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.net::URLRequestThrottlerManager" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.267", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.273", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.280", %"class.std::__1::vector.290", %"class.std::__1::vector.290", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.273" = type { %"class.std::__1::__vector_base.274" }
%"class.std::__1::__vector_base.274" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.275" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.280" = type { %"class.std::__1::__tree.281" }
%"class.std::__1::__tree.281" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.282", %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { i32*, i32*, %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { i32* }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.std::__1::set.300"* }
%"class.std::__1::set.300" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.net::HostCache"* }
%"class.net::HostCache" = type { %"class.std::__1::map.307", i64, i32, i64, %"class.net::HostCache::PersistenceDelegate"*, %"class.base::TickClock"* }
%"class.std::__1::map.307" = type { %"class.std::__1::__tree.308" }
%"class.std::__1::__tree.308" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.net::HostCache::PersistenceDelegate" = type { i32 (...)** }
%"class.base::ObserverList.321" = type <{ %"class.std::__1::vector.322", %"class.base::LinkedList.330", i64, i32, [4 x i8] }>
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.325" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.324 }
%class.scoped_refptr.324 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.330" = type { %"class.base::LinkNode.331" }
%"class.base::LinkNode.331" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::WeakPtr.333" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.334" = type { %"class.std::__1::__vector_base.335" }
%"class.std::__1::__vector_base.335" = type { %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"*, %"class.std::__1::__compressed_pair.353" }
%"struct.net::ResolveContext::ServerStats" = type { i32, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.336" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.base::SampleVector"* }
%"class.base::SampleVector" = type { %"class.base::SampleVectorBase", %"class.std::__1::vector.343" }
%"class.base::SampleVectorBase" = type { %"class.base::HistogramSamples", %"struct.std::__1::atomic.339", %"class.base::BucketRanges"* }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"struct.std::__1::atomic.339" = type { %"struct.std::__1::__atomic_base.340" }
%"struct.std::__1::__atomic_base.340" = type { %"struct.std::__1::__cxx_atomic_impl.341" }
%"struct.std::__1::__cxx_atomic_impl.341" = type { %"struct.std::__1::__cxx_atomic_base_impl.342" }
%"struct.std::__1::__cxx_atomic_base_impl.342" = type { i32* }
%"class.base::BucketRanges" = type { %"class.std::__1::vector.343", i32, %"struct.std::__1::atomic" }
%"class.std::__1::vector.343" = type { %"class.std::__1::__vector_base.344" }
%"class.std::__1::__vector_base.344" = type { i32*, i32*, %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { i32* }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.net::ResolveContext::ServerStats"* }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional", %"class.absl::optional", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.369" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.359" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.359" = type { %"class.absl::optional_internal::optional_data.360" }
%"class.absl::optional_internal::optional_data.360" = type { %"class.absl::optional_internal::optional_data_base.361" }
%"class.absl::optional_internal::optional_data_base.361" = type { %"class.absl::optional_internal::optional_data_dtor_base.362" }
%"class.absl::optional_internal::optional_data_dtor_base.362" = type { i8, %union.anon.363 }
%union.anon.363 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.364", %"class.absl::optional.364" }
%"class.absl::optional.364" = type { %"class.absl::optional_internal::optional_data.365" }
%"class.absl::optional_internal::optional_data.365" = type { %"class.absl::optional_internal::optional_data_base.366" }
%"class.absl::optional_internal::optional_data_base.366" = type { %"class.absl::optional_internal::optional_data_dtor_base.367" }
%"class.absl::optional_internal::optional_data_dtor_base.367" = type { i8, %union.anon.368 }
%union.anon.368 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.absl::optional.369" = type { %"class.absl::optional_internal::optional_data.370" }
%"class.absl::optional_internal::optional_data.370" = type { %"class.absl::optional_internal::optional_data_base.371" }
%"class.absl::optional_internal::optional_data_base.371" = type { %"class.absl::optional_internal::optional_data_dtor_base.372" }
%"class.absl::optional_internal::optional_data_dtor_base.372" = type { i8, %union.anon.373 }
%union.anon.373 = type { %"class.std::__1::set.374" }
%"class.std::__1::set.374" = type { %"class.std::__1::__tree.375" }
%"class.std::__1::__tree.375" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::DnsProbeRunner" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::WeakPtr.777" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* }
%"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats" = type { %"class.std::__1::unique_ptr.783", %"class.std::__1::vector.396", %"class.base::WeakPtrFactory.789" }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.net::BackoffEntry"* }
%"class.net::BackoffEntry" = type { i32 (...)**, %"class.base::TimeTicks", i32, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"* }
%"class.std::__1::vector.396" = type { %"class.std::__1::__vector_base.397" }
%"class.std::__1::__vector_base.397" = type { %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"*, %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.net::(anonymous namespace)::DnsAttempt"* }
%"class.net::(anonymous namespace)::DnsAttempt" = type { i32 (...)**, i64 }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.std::__1::unique_ptr.398"* }
%"class.base::WeakPtrFactory.789" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.net::(anonymous namespace)::DnsTransactionImpl" = type <{ %"class.net::DnsTransaction", %"class.base::SupportsWeakPtr", %class.scoped_refptr.73, %"class.std::__1::basic_string", i16, [6 x i8], %"class.net::OptRecordRdata"*, i8, [3 x i8], i32, %"class.base::OnceCallback.384", i8, [7 x i8], %"class.net::NetLogWithSource", %"class.base::circular_deque.394", i64, %"class.std::__1::vector.396", i32, i8, [3 x i8], %"class.std::__1::unique_ptr.409", %"class.base::OneShotTimer", %"class.std::__1::unique_ptr.415", %"class.net::ResolveContext"*, i32, [4 x i8] }>
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::circular_deque.394" = type { %"class.base::internal::VectorBuffer.395", i64, i64 }
%"class.base::internal::VectorBuffer.395" = type { %"class.std::__1::basic_string"*, i64 }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.net::DnsServerIterator"* }
%"class.net::DnsServerIterator" = type { i32 (...)**, %"class.std::__1::vector.343", i32, i32, %"class.net::ResolveContext"*, i64, %"class.net::DnsSession"* }
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.base::ElapsedTimer"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.427" }
%"union.absl::variant_internal::DestructibleUnionImpl.427" = type { %"union.absl::variant_internal::DestructibleUnionImpl.428" }
%"union.absl::variant_internal::DestructibleUnionImpl.428" = type { %"union.absl::variant_internal::DestructibleUnionImpl.429" }
%"union.absl::variant_internal::DestructibleUnionImpl.429" = type { %"union.absl::variant_internal::DestructibleUnionImpl.430" }
%"union.absl::variant_internal::DestructibleUnionImpl.430" = type { %"class.std::__1::basic_string" }
%"class.base::WeakPtr.426" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.scoped_refptr.425 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.167", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.net::DnsResponse" = type { %class.scoped_refptr.459, i64, %"class.net::DnsRecordParser", i8, %"class.std::__1::vector.15", %"class.std::__1::vector.461" }
%class.scoped_refptr.459 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.460", i8* }
%"class.base::RefCountedThreadSafe.460" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::DnsRecordParser" = type { i8*, i64, i64, i64, i8* }
%"class.std::__1::vector.461" = type { %"class.std::__1::__vector_base.462" }
%"class.std::__1::__vector_base.462" = type { i16*, i16*, %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { i16* }
%"class.net::DnsQuery" = type { i64, %class.scoped_refptr.483, %"struct.net::dns_protocol::Header"* }
%class.scoped_refptr.483 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"struct.net::dns_protocol::Header" = type { i16, i16, i16, i16, i16, i16 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.474", [4 x i8] }>
%"struct.std::__1::atomic.474" = type { %"struct.std::__1::__atomic_base.475" }
%"struct.std::__1::__atomic_base.475" = type { %"struct.std::__1::__atomic_base.476" }
%"struct.std::__1::__atomic_base.476" = type { %"struct.std::__1::__cxx_atomic_impl.477" }
%"struct.std::__1::__cxx_atomic_impl.477" = type { %"struct.std::__1::__cxx_atomic_base_impl.478" }
%"struct.std::__1::__cxx_atomic_base_impl.478" = type { i32 }
%"class.absl::optional.758" = type { %"class.absl::optional_internal::optional_data.759" }
%"class.absl::optional_internal::optional_data.759" = type { %"class.absl::optional_internal::optional_data_base.760" }
%"class.absl::optional_internal::optional_data_base.760" = type { %"class.absl::optional_internal::optional_data_dtor_base.761" }
%"class.absl::optional_internal::optional_data_dtor_base.761" = type { i8, %union.anon.762 }
%union.anon.762 = type { %"class.std::__1::basic_string" }
%"class.base::OnceCallback.479" = type { %"class.base::internal::CallbackBase" }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.15" }
%"class.net::(anonymous namespace)::DnsUDPAttempt" = type { %"class.net::(anonymous namespace)::DnsAttempt", i32, %"class.base::TimeTicks", %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.480", %"class.net::DnsUdpTracker"*, %"class.std::__1::unique_ptr.500", %"class.base::OnceCallback.479" }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.net::DatagramClientSocket"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.net::DnsQuery"* }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.net::DnsResponse"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.487" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %class.GURL* }
%"class.std::__1::unordered_map.634" = type { %"class.std::__1::__hash_table.635" }
%"class.std::__1::__hash_table.635" = type <{ %"class.std::__1::unique_ptr.636", %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.651", %"class.std::__1::__compressed_pair.654", [4 x i8] }>
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638", %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"struct.std::__1::__hash_node_base.639"** }
%"struct.std::__1::__hash_node_base.639" = type { %"struct.std::__1::__hash_node_base.639"* }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.std::__1::__bucket_list_deallocator.641" }
%"class.std::__1::__bucket_list_deallocator.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.std::__1::__hash_node_base.639" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.538" }
%"class.std::__1::vector.538" = type { %"class.std::__1::__vector_base.539" }
%"class.std::__1::__vector_base.539" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.540" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.net::GrowableIOBuffer" = type { %"class.net::IOBuffer", %"class.std::__1::unique_ptr.497", i32, i32 }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.520", %"class.std::__1::unique_ptr.526", %"class.std::__1::vector.532", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.545", %"class.std::__1::vector.552", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.609", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback.622", %"class.base::RepeatingCallback.623", %"class.base::RepeatingCallback.623", i8, i8, i32, %"class.base::WeakPtrFactory.624" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.509", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.509" = type { %"class.std::__1::__tree.510" }
%"class.std::__1::__tree.510" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.511", %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.net::URLRequestJob"* }
%"class.net::URLRequestJob" = type opaque
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback.479", %"class.net::NetLogWithSource" }
%"class.std::__1::vector.532" = type { %"class.std::__1::__vector_base.533" }
%"class.std::__1::__vector_base.533" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"class.std::__1::vector.545" = type { %"class.std::__1::__vector_base.546" }
%"class.std::__1::__vector_base.546" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.547" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.552" = type { %"class.std::__1::__vector_base.553" }
%"class.std::__1::__vector_base.553" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.559" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.554", %"class.std::__1::basic_string", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.554" = type { %"class.absl::optional_internal::optional_data.555" }
%"class.absl::optional_internal::optional_data.555" = type { %"class.absl::optional_internal::optional_data_base.556" }
%"class.absl::optional_internal::optional_data_base.556" = type { %"class.absl::optional_internal::optional_data_dtor_base.557" }
%"class.absl::optional_internal::optional_data_dtor_base.557" = type { i8, %union.anon.558 }
%union.anon.558 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.564", %class.scoped_refptr.569, %"class.net::SSLInfo", %class.scoped_refptr.600, %"class.net::HttpVaryData", %"class.std::__1::vector.15" }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.564" = type { %"class.absl::optional_internal::optional_data.565" }
%"class.absl::optional_internal::optional_data.565" = type { %"class.absl::optional_internal::optional_data_base.566" }
%"class.absl::optional_internal::optional_data_base.566" = type { %"class.absl::optional_internal::optional_data_dtor_base.567" }
%"class.absl::optional_internal::optional_data_dtor_base.567" = type { i8, %union.anon.568 }
%union.anon.568 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.569 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.570, %class.scoped_refptr.570, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.583", %"class.std::__1::basic_string", %"class.std::__1::vector.591", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.570 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.571", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.572", %"class.std::__1::vector.576" }
%"class.base::RefCountedThreadSafe.571" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.15", %"class.std::__1::vector.15", %"class.std::__1::vector.15", %"class.std::__1::vector.15" }
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.576" = type { %"class.std::__1::__vector_base.577" }
%"class.std::__1::__vector_base.577" = type { %"class.std::__1::unique_ptr.572"*, %"class.std::__1::unique_ptr.572"*, %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.std::__1::unique_ptr.572"* }
%"class.std::__1::vector.583" = type { %"class.std::__1::__vector_base.584" }
%"class.std::__1::__vector_base.584" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.586" }
%"class.net::HashValue" = type { i32, %union.anon.585 }
%union.anon.585 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.591" = type { %"class.std::__1::__vector_base.592" }
%"class.std::__1::__vector_base.592" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.595" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.593, i32, [4 x i8] }>
%class.scoped_refptr.593 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.594", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.594" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.600 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.601", %"class.std::__1::vector.602", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.601" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.602" = type { %"class.std::__1::__vector_base.603" }
%"class.std::__1::__vector_base.603" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.604" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::UploadProgress" = type { i64, i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.609" = type { %"class.absl::optional_internal::optional_data.610" }
%"class.absl::optional_internal::optional_data.610" = type { %"class.absl::optional_internal::optional_data_base.611" }
%"class.absl::optional_internal::optional_data_base.611" = type { %"class.absl::optional_internal::optional_data_dtor_base.612" }
%"class.absl::optional_internal::optional_data_dtor_base.612" = type { i8, %union.anon.613 }
%union.anon.613 = type { %"class.base::internal::flat_tree.614" }
%"class.base::internal::flat_tree.614" = type { %"class.std::__1::vector.615" }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { i32*, i32*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { i32* }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback.622" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.623" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.624" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::UploadBytesElementReader" = type { %"class.net::UploadElementReader", i8*, i64, i64 }
%"class.net::UploadElementReader" = type { i32 (...)** }
%"class.net::(anonymous namespace)::DnsHTTPAttempt" = type { %"class.net::(anonymous namespace)::DnsAttempt", %"class.net::URLRequest::Delegate", %class.scoped_refptr.496, %"class.std::__1::unique_ptr.480", %"class.base::OnceCallback.479", %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.506", %"class.net::NetLogWithSource", %"class.base::WeakPtrFactory.628" }
%class.scoped_refptr.496 = type { %"class.net::GrowableIOBuffer"* }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.net::URLRequest"* }
%"class.base::WeakPtrFactory.628" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr.680" = type { %"class.base::internal::WeakPtrBase" }
%"struct.net::TransportInfo" = type opaque
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676", %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.639", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.677" }
%"struct.std::__1::pair.677" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.649"*, i8, [7 x i8] }>
%"class.std::__1::allocator.649" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::tuple.687" = type { %"struct.std::__1::__tuple_impl.688" }
%"struct.std::__1::__tuple_impl.688" = type { %"class.std::__1::__tuple_leaf.689", %"class.std::__1::__tuple_leaf.690", %"class.std::__1::__tuple_leaf.691", %"class.std::__1::__tuple_leaf.692" }
%"class.std::__1::__tuple_leaf.689" = type { %"class.base::internal::UnretainedWrapper" }
%"class.base::internal::UnretainedWrapper" = type { %"class.net::(anonymous namespace)::DnsTransactionImpl"* }
%"class.std::__1::__tuple_leaf.690" = type { i32 }
%"class.std::__1::__tuple_leaf.691" = type { i8 }
%"class.std::__1::__tuple_leaf.692" = type { %"class.base::TimeTicks" }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::(anonymous namespace)::DnsTCPAttempt" = type { %"class.net::(anonymous namespace)::DnsAttempt", i32, %"class.base::TimeTicks", %"class.std::__1::unique_ptr.702", %"class.std::__1::unique_ptr.480", %class.scoped_refptr.483, %class.scoped_refptr.708, i16, %"class.std::__1::unique_ptr.500", %"class.base::OnceCallback.479" }
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.net::StreamSocket"* }
%class.scoped_refptr.708 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.459, i32, i32 }
%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner" = type { %"class.net::DnsProbeRunner", %"class.base::WeakPtr.777", %"class.net::ResolveContext"*, %"class.std::__1::basic_string", %"class.std::__1::vector.778", %"class.base::WeakPtrFactory.798" }
%"class.std::__1::vector.778" = type { %"class.std::__1::__vector_base.779" }
%"class.std::__1::__vector_base.779" = type { %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"*, %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.std::__1::unique_ptr.780"* }
%"class.base::WeakPtrFactory.798" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr.805" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.806" = type { %"class.base::internal::WeakPtrBase" }
%"class.net::DnsResponseResultExtractor" = type { %"class.net::DnsResponse"* }
%"class.net::HostCache::Entry" = type <{ i32, [4 x i8], %"class.absl::optional.828", %"class.absl::optional.833", %"class.absl::optional.838", %"class.absl::optional.850", i32, i8, [3 x i8], %"class.base::TimeDelta", %"class.base::TimeTicks", i32, %"class.base::internal::ClampedNumeric.860", %"class.base::internal::ClampedNumeric.860", [4 x i8] }>
%"class.absl::optional.828" = type { %"class.absl::optional_internal::optional_data.829" }
%"class.absl::optional_internal::optional_data.829" = type { %"class.absl::optional_internal::optional_data_base.830" }
%"class.absl::optional_internal::optional_data_base.830" = type { %"class.absl::optional_internal::optional_data_dtor_base.831" }
%"class.absl::optional_internal::optional_data_dtor_base.831" = type { i8, %union.anon.832 }
%union.anon.832 = type { %"class.net::AddressList" }
%"class.net::AddressList" = type { %"class.std::__1::vector", %"class.std::__1::vector.15" }
%"class.absl::optional.833" = type { %"class.absl::optional_internal::optional_data.834" }
%"class.absl::optional_internal::optional_data.834" = type { %"class.absl::optional_internal::optional_data_base.835" }
%"class.absl::optional_internal::optional_data_base.835" = type { %"class.absl::optional_internal::optional_data_dtor_base.836" }
%"class.absl::optional_internal::optional_data_dtor_base.836" = type { i8, %union.anon.837 }
%union.anon.837 = type { %"class.std::__1::vector.15" }
%"class.absl::optional.838" = type { %"class.absl::optional_internal::optional_data.839" }
%"class.absl::optional_internal::optional_data.839" = type { %"class.absl::optional_internal::optional_data_base.840" }
%"class.absl::optional_internal::optional_data_base.840" = type { %"class.absl::optional_internal::optional_data_dtor_base.841" }
%"class.absl::optional_internal::optional_data_dtor_base.841" = type { i8, %union.anon.842 }
%union.anon.842 = type { %"class.std::__1::vector.843" }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"class.net::HostPortPair"*, %"class.net::HostPortPair"*, %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.net::HostPortPair"* }
%"class.absl::optional.850" = type { %"class.absl::optional_internal::optional_data.851" }
%"class.absl::optional_internal::optional_data.851" = type { %"class.absl::optional_internal::optional_data_base.852" }
%"class.absl::optional_internal::optional_data_base.852" = type { %"class.absl::optional_internal::optional_data_dtor_base.853" }
%"class.absl::optional_internal::optional_data_dtor_base.853" = type { i8, %union.anon.854 }
%union.anon.854 = type { %"class.std::__1::vector.855" }
%"class.std::__1::vector.855" = type { i64*, i64, %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::internal::ClampedNumeric.860" = type { i32 }

$_ZN3net14DnsTransactionD2Ev = comdat any

$_ZN3net14DnsTransactionD0Ev = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcS4_EEPKvE_8__invokeESL_SN_ = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__emplace_unique_implIJRA4_KcRS7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEEDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE16__construct_nodeIJRA4_KcRS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISR_EEEEEEDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS8_PvEE = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE28__node_insert_unique_prepareEmRS8_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZTVN3net14DnsTransactionE = comdat any

@_ZTVN3net21DnsTransactionFactoryE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::DnsTransactionFactory"*)* @_ZN3net21DnsTransactionFactoryD2Ev to i8*), i8* bitcast (void (%"class.net::DnsTransactionFactory"*)* @_ZN3net21DnsTransactionFactoryD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN3net12_GLOBAL__N_125DnsTransactionFactoryImplE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"*)* @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImplD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"*)* @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImplD0Ev to i8*), i8* bitcast (%"class.net::DnsTransaction"* (%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"*, %"class.std::__1::basic_string"*, i16, %"class.base::OnceCallback.384"*, %"class.net::NetLogWithSource"*, i1, i32, %"class.net::ResolveContext"*, i1)* @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImpl17CreateTransactionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEtN4base12OnceCallbackIFvPNS_14DnsTransactionEiPKNS_11DnsResponseEN4absl8optionalIS8_EEEEERKNS_16NetLogWithSourceEbNS_13SecureDnsModeEPNS_14ResolveContextEb to i8*), i8* bitcast (%"class.net::DnsProbeRunner"* (%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"*, %"class.net::ResolveContext"*)* @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImpl20CreateDohProbeRunnerEPNS_14ResolveContextE to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"*, %"class.net::OptRecordRdata::Opt"*)* @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImpl13AddEDNSOptionERKNS_14OptRecordRdata3OptE to i8*), i8* bitcast (i32 (%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"*)* @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImpl23GetSecureDnsModeForTestEv to i8*)] }, align 8
@_ZTVN3net12_GLOBAL__N_118DnsTransactionImplE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZN3net12_GLOBAL__N_118DnsTransactionImplD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZN3net12_GLOBAL__N_118DnsTransactionImplD0Ev to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZNK3net12_GLOBAL__N_118DnsTransactionImpl11GetHostnameEv to i8*), i8* bitcast (i16 (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZNK3net12_GLOBAL__N_118DnsTransactionImpl7GetTypeEv to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl5StartEv to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl18SetRequestPriorityENS_15RequestPriorityE to i8*)] }, align 8
@_ZTVN3net14DnsTransactionE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::DnsTransaction"*)* @_ZN3net14DnsTransactionD2Ev to i8*), i8* bitcast (void (%"class.net::DnsTransaction"*)* @_ZN3net14DnsTransactionD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"Start\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"../../net/dns/dns_transaction.cc\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"hostname\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"query_type\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"rcode\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"answer_count\00", align 1
@__const._ZN3net12_GLOBAL__N_118DnsTransactionImpl11MakeAttemptEv.config = private unnamed_addr constant { %"class.std::__1::vector", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.15", %"class.std::__1::unordered_map", i8, i8, [2 x i8], i32, %"class.base::TimeDelta", i32, i32, i8, i8, [6 x i8], %"class.std::__1::vector.41", i32, i8, [3 x i8], %"class.std::__1::vector.15" } { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.net::IPEndPoint"* inttoptr (i64 -6148914691236517206 to %"class.net::IPEndPoint"*), %"class.net::IPEndPoint"* inttoptr (i64 -6148914691236517206 to %"class.net::IPEndPoint"*), %"class.std::__1::__compressed_pair.7" { %"struct.std::__1::__compressed_pair_elem.8" { %"class.net::IPEndPoint"* inttoptr (i64 -6148914691236517206 to %"class.net::IPEndPoint"*) } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::vector.15" { %"class.std::__1::__vector_base.16" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } }, %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.22" { %"class.std::__1::__compressed_pair.23" { %"struct.std::__1::__compressed_pair_elem.24" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.25" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.26" { %"struct.std::__1::__compressed_pair_elem.27" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.31" { %"struct.std::__1::__compressed_pair_elem.32" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.36" { %"struct.std::__1::__compressed_pair_elem.27" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.38" { %"struct.std::__1::__compressed_pair_elem.39" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, %"class.base::TimeDelta" { i64 -6148914691236517206 }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::vector.41" { %"class.std::__1::__vector_base.42" { %"struct.net::DnsOverHttpsServerConfig"* inttoptr (i64 -6148914691236517206 to %"struct.net::DnsOverHttpsServerConfig"*), %"struct.net::DnsOverHttpsServerConfig"* inttoptr (i64 -6148914691236517206 to %"struct.net::DnsOverHttpsServerConfig"*), %"class.std::__1::__compressed_pair.43" { %"struct.std::__1::__compressed_pair_elem.44" { %"struct.net::DnsOverHttpsServerConfig"* inttoptr (i64 -6148914691236517206 to %"struct.net::DnsOverHttpsServerConfig"*) } } } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.std::__1::vector.15" { %"class.std::__1::__vector_base.16" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } } }, align 8
@.str.14 = private unnamed_addr constant [35 x i8] c"Net.DNS.DnsTransaction.AttemptType\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"MakeHTTPAttempt\00", align 1
@_ZTVN3net12_GLOBAL__N_114DnsHTTPAttemptE = internal unnamed_addr constant { [11 x i8*], [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*)* @_ZN3net12_GLOBAL__N_114DnsHTTPAttemptD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*)* @_ZN3net12_GLOBAL__N_114DnsHTTPAttemptD0Ev to i8*), i8* bitcast (i32 (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.base::OnceCallback.479"*)* @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt5StartEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (%"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*)* @_ZNK3net12_GLOBAL__N_114DnsHTTPAttempt8GetQueryEv to i8*), i8* bitcast (%"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*)* @_ZNK3net12_GLOBAL__N_114DnsHTTPAttempt11GetResponseEv to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*)* @_ZNK3net12_GLOBAL__N_114DnsHTTPAttempt15GetSocketNetLogEv to i8*), i8* bitcast (i1 (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*)* @_ZNK3net12_GLOBAL__N_114DnsHTTPAttempt9IsPendingEv to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)* @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt17OnResponseStartedEPNS_10URLRequestEi to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)* @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt15OnReadCompletedEPNS_10URLRequestEi to i8*)], [11 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (i32 (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"struct.net::TransportInfo"*, %"class.base::OnceCallback.479"*)* @_ZN3net10URLRequest8Delegate11OnConnectedEPS0_RKNS_13TransportInfoEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"struct.net::RedirectInfo"*, i8*)* @_ZN3net10URLRequest8Delegate18OnReceivedRedirectEPS0_RKNS_12RedirectInfoEPb to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::AuthChallengeInfo"*)* @_ZN3net10URLRequest8Delegate14OnAuthRequiredEPS0_RKNS_17AuthChallengeInfoE to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::SSLCertRequestInfo"*)* @_ZN3net10URLRequest8Delegate22OnCertificateRequestedEPS0_PNS_18SSLCertRequestInfoE to i8*), i8* bitcast (void (%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, i32, %"class.net::SSLInfo"*, i1)* @_ZN3net10URLRequest8Delegate21OnSSLCertificateErrorEPS0_iRKNS_7SSLInfoEb to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)* @_ZThn16_N3net12_GLOBAL__N_114DnsHTTPAttempt17OnResponseStartedEPNS_10URLRequestEi to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)* @_ZThn16_N3net12_GLOBAL__N_114DnsHTTPAttempt15OnReadCompletedEPNS_10URLRequestEi to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*)* @_ZThn16_N3net12_GLOBAL__N_114DnsHTTPAttemptD1Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*)* @_ZThn16_N3net12_GLOBAL__N_114DnsHTTPAttemptD0Ev to i8*)] }, align 8
@.str.16 = private unnamed_addr constant [4 x i8] c"dns\00", align 1
@_ZN3net18HttpRequestHeaders7kAcceptE = external constant [0 x i8], align 1
@_ZN3net12_GLOBAL__N_131kDnsOverHttpResponseContentTypeE = internal constant [24 x i8] c"application/dns-message\00", align 16
@.ref.tmp = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN3net12_GLOBAL__N_131kDnsOverHttpResponseContentTypeE, i32 0, i32 0), i64 23 }, align 8
@_ZN3net18HttpRequestHeaders15kAcceptLanguageE = external constant [0 x i8], align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.ref.tmp.18 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), i64 1 }, align 8
@_ZN3net18HttpRequestHeaders10kUserAgentE = external constant [0 x i8], align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"Chrome\00", align 1
@.ref.tmp.20 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i64 6 }, align 8
@_ZN3net18HttpRequestHeaders15kAcceptEncodingE = external constant [0 x i8], align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"identity\00", align 1
@.ref.tmp.22 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i64 8 }, align 8
@_ZN3net18HttpRequestHeaders12kContentTypeE = external constant [0 x i8], align 1
@.ref.tmp.26 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN3net12_GLOBAL__N_131kDnsOverHttpResponseContentTypeE, i32 0, i32 0), i64 23 }, align 8
@_ZN3net18HttpRequestHeaders14kContentLengthE = external constant [0 x i8], align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"OnReadCompleted\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"MakeClassicDnsAttempt\00", align 1
@_ZTVN3net12_GLOBAL__N_113DnsTCPAttemptE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)* @_ZN3net12_GLOBAL__N_113DnsTCPAttemptD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)* @_ZN3net12_GLOBAL__N_113DnsTCPAttemptD0Ev to i8*), i8* bitcast (i32 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*)* @_ZN3net12_GLOBAL__N_113DnsTCPAttempt5StartEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (%"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)* @_ZNK3net12_GLOBAL__N_113DnsTCPAttempt8GetQueryEv to i8*), i8* bitcast (%"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)* @_ZNK3net12_GLOBAL__N_113DnsTCPAttempt11GetResponseEv to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)* @_ZNK3net12_GLOBAL__N_113DnsTCPAttempt15GetSocketNetLogEv to i8*), i8* bitcast (i1 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)* @_ZNK3net12_GLOBAL__N_113DnsTCPAttempt9IsPendingEv to i8*)] }, align 8
@.str.31 = private unnamed_addr constant [26 x i8] c"STATE_NONE != next_state_\00", align 1
@_ZN3net12_GLOBAL__N_118kTrafficAnnotationE = internal constant %"struct.net::NetworkTrafficAnnotationTag" { i32 79227717 }, align 4
@_ZTVN3net12_GLOBAL__N_113DnsUDPAttemptE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)* @_ZN3net12_GLOBAL__N_113DnsUDPAttemptD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)* @_ZN3net12_GLOBAL__N_113DnsUDPAttemptD0Ev to i8*), i8* bitcast (i32 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*)* @_ZN3net12_GLOBAL__N_113DnsUDPAttempt5StartEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (%"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)* @_ZNK3net12_GLOBAL__N_113DnsUDPAttempt8GetQueryEv to i8*), i8* bitcast (%"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)* @_ZNK3net12_GLOBAL__N_113DnsUDPAttempt11GetResponseEv to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)* @_ZNK3net12_GLOBAL__N_113DnsUDPAttempt15GetSocketNetLogEv to i8*), i8* bitcast (i1 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)* @_ZNK3net12_GLOBAL__N_113DnsUDPAttempt9IsPendingEv to i8*)] }, align 8
@.str.32 = private unnamed_addr constant [18 x i8] c"StartTimeoutTimer\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"RetryUdpAttemptAsTcp\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"qname\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"???MALFORMED_NAME???\00", align 1
@.str.38 = private unnamed_addr constant [39 x i8] c"result.rv != OK || response != nullptr\00", align 1
@_ZTVN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*)* @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*)* @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerD0Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i1)* @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner5StartEb to i8*), i8* bitcast (i64 (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i64)* @_ZNK3net12_GLOBAL__N_123DnsOverHttpsProbeRunner29GetDelayUntilNextProbeForTestEm to i8*)] }, align 8
@_ZN3net12_GLOBAL__N_117kDoHProbeHostnameE = internal constant [16 x i8] c"www.gstatic.com\00", align 16
@.ref.tmp.39 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN3net12_GLOBAL__N_117kDoHProbeHostnameE, i32 0, i32 0), i64 15 }, align 8
@_ZN3net12_GLOBAL__N_119kProbeBackoffPolicyE = internal constant %"struct.net::BackoffEntry::Policy" { i32 0, i32 1000, double 1.500000e+00, double 2.000000e-01, i64 3600000, i64 -1, i8 0 }, align 8
@.str.40 = private unnamed_addr constant [14 x i8] c"ContinueProbe\00", align 1
@.str.41 = private unnamed_addr constant [40 x i8] c"Net.DNS.ProbeSequence.%s.%s.AttemptTime\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"NetworkChange\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"ConfigChange\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"Success\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"Failure\00", align 1
@_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net21DnsTransactionFactoryD1Ev = hidden unnamed_addr alias void (%"class.net::DnsTransactionFactory"*), void (%"class.net::DnsTransactionFactory"*)* @_ZN3net21DnsTransactionFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21DnsTransactionFactoryC2Ev(%"class.net::DnsTransactionFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsTransactionFactory", %"class.net::DnsTransactionFactory"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net21DnsTransactionFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::DnsTransactionFactory", %"class.net::DnsTransactionFactory"* %0, i64 0, i32 1, i32 0
  %4 = ptrtoint %"class.net::DnsTransactionFactory"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %3, i64 %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21DnsTransactionFactoryD2Ev(%"class.net::DnsTransactionFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DnsTransactionFactory", %"class.net::DnsTransactionFactory"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net21DnsTransactionFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::DnsTransactionFactory", %"class.net::DnsTransactionFactory"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #18
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net21DnsTransactionFactoryD0Ev(%"class.net::DnsTransactionFactory"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::DnsTransactionFactory"* @_ZN3net21DnsTransactionFactory13CreateFactoryEPNS_10DnsSessionE(%"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #20
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net21DnsTransactionFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to %"class.base::internal::WeakPtrFactoryBase"*
  %6 = ptrtoint i8* %2 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %5, i64 %6) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net12_GLOBAL__N_125DnsTransactionFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 24
  %8 = icmp eq %"class.net::DnsSession"* %0, null
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #18
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = bitcast i8* %7 to i64*
  store i64 0, i64* %10, align 8
  br label %25

11:                                               ; preds = %1
  %12 = bitcast i8* %7 to %"class.net::DnsSession"**
  %13 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #18
  %14 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %12, align 8
  %15 = ptrtoint %"class.net::DnsSession"* %0 to i64
  %16 = bitcast i8* %7 to i64*
  store i64 %15, i64* %16, align 8
  %17 = icmp eq %"class.net::DnsSession"* %14, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %14, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #18
  %20 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  tail call void @_ZN3net10DnsSessionD1Ev(%"class.net::DnsSession"* nonnull %14) #18
  %24 = bitcast %"class.net::DnsSession"* %14 to i8*
  tail call void @_ZdlPv(i8* %24) #20
  br label %25

25:                                               ; preds = %9, %11, %18, %23
  %26 = bitcast i8* %2 to %"class.net::DnsTransactionFactory"*
  ret %"class.net::DnsTransactionFactory"* %26
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImplD2Ev(%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net12_GLOBAL__N_125DnsTransactionFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"** %3, align 8
  store %"class.net::OptRecordRdata"* null, %"class.net::OptRecordRdata"** %3, align 8
  %5 = icmp eq %"class.net::OptRecordRdata"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::OptRecordRdata"* %4 to void (%"class.net::OptRecordRdata"*)***
  %8 = load void (%"class.net::OptRecordRdata"*)**, void (%"class.net::OptRecordRdata"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::OptRecordRdata"*)*, void (%"class.net::OptRecordRdata"*)** %8, i64 1
  %10 = load void (%"class.net::OptRecordRdata"*)*, void (%"class.net::OptRecordRdata"*)** %9, align 8
  tail call void %10(%"class.net::OptRecordRdata"* nonnull %4) #18
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %12, align 8
  %14 = icmp eq %"class.net::DnsSession"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %13, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #18
  %17 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %13, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  tail call void @_ZN3net10DnsSessionD1Ev(%"class.net::DnsSession"* nonnull %13) #18
  %21 = bitcast %"class.net::DnsSession"* %13 to i8*
  tail call void @_ZdlPv(i8* %21) #20
  br label %22

22:                                               ; preds = %11, %15, %20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net21DnsTransactionFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %23 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %23) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImplD0Ev(%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net12_GLOBAL__N_125DnsTransactionFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"** %3, align 8
  store %"class.net::OptRecordRdata"* null, %"class.net::OptRecordRdata"** %3, align 8
  %5 = icmp eq %"class.net::OptRecordRdata"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::OptRecordRdata"* %4 to void (%"class.net::OptRecordRdata"*)***
  %8 = load void (%"class.net::OptRecordRdata"*)**, void (%"class.net::OptRecordRdata"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::OptRecordRdata"*)*, void (%"class.net::OptRecordRdata"*)** %8, i64 1
  %10 = load void (%"class.net::OptRecordRdata"*)*, void (%"class.net::OptRecordRdata"*)** %9, align 8
  tail call void %10(%"class.net::OptRecordRdata"* nonnull %4) #18
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %12, align 8
  %14 = icmp eq %"class.net::DnsSession"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %13, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #18
  %17 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %13, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  tail call void @_ZN3net10DnsSessionD1Ev(%"class.net::DnsSession"* nonnull %13) #18
  %21 = bitcast %"class.net::DnsSession"* %13 to i8*
  tail call void @_ZdlPv(i8* %21) #20
  br label %22

22:                                               ; preds = %11, %15, %20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net21DnsTransactionFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %23 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %23) #18
  %24 = bitcast %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.net::DnsTransaction"* @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImpl17CreateTransactionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEtN4base12OnceCallbackIFvPNS_14DnsTransactionEiPKNS_11DnsResponseEN4absl8optionalIS8_EEEEERKNS_16NetLogWithSourceEbNS_13SecureDnsModeEPNS_14ResolveContextEb(%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i16 zeroext, %"class.base::OnceCallback.384"* nocapture, %"class.net::NetLogWithSource"* nocapture readonly dereferenceable(24), i1 zeroext, i32, %"class.net::ResolveContext"*, i1 zeroext) unnamed_addr #0 align 2 {
  %10 = alloca %"class.base::OnceCallback.384", align 8
  %11 = zext i1 %5 to i8
  %12 = ptrtoint %"class.net::ResolveContext"* %7 to i64
  %13 = zext i1 %8 to i8
  %14 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 1, i32 0
  %15 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = bitcast %"class.net::OptRecordRdata"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback.384"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = tail call i8* @_Znwm(i64 344) #20
  %21 = getelementptr inbounds %"class.base::OnceCallback.384", %"class.base::OnceCallback.384"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.384"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.384"* %10 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net14DnsTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %20, i64 8
  %27 = bitcast i8* %26 to %"class.base::internal::WeakReferenceOwner"*
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %27) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net12_GLOBAL__N_118DnsTransactionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %28 = getelementptr inbounds i8, i8* %20, i64 16
  %29 = bitcast i8* %28 to %"class.net::DnsSession"**
  store %"class.net::DnsSession"* %15, %"class.net::DnsSession"** %29, align 8
  %30 = icmp eq %"class.net::DnsSession"* %15, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %15, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #18
  br label %33

33:                                               ; preds = %31, %9
  %34 = getelementptr inbounds i8, i8* %20, i64 24
  %35 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %40, i64 24, i1 false) #18
  br label %47

41:                                               ; preds = %33
  %42 = bitcast i8* %34 to %"class.std::__1::basic_string"*
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %42, i8* %44, i64 %46) #18
  br label %47

47:                                               ; preds = %41, %39
  %48 = getelementptr inbounds i8, i8* %20, i64 48
  %49 = bitcast i8* %48 to i16*
  store i16 %2, i16* %49, align 8
  %50 = getelementptr inbounds i8, i8* %20, i64 56
  %51 = bitcast i8* %50 to i64*
  store i64 %18, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %20, i64 64
  store i8 %11, i8* %52, align 8
  %53 = getelementptr inbounds i8, i8* %20, i64 68
  %54 = bitcast i8* %53 to i32*
  store i32 %6, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %20, i64 72
  %56 = getelementptr inbounds %"class.base::OnceCallback.384", %"class.base::OnceCallback.384"* %10, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast i8* %55 to i64*
  store i64 %23, i64* %57, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %56, align 8
  %58 = getelementptr inbounds i8, i8* %20, i64 80
  store i8 %13, i8* %58, align 8
  %59 = getelementptr inbounds i8, i8* %20, i64 88
  %60 = bitcast %"class.net::NetLogWithSource"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #18
  %61 = getelementptr inbounds i8, i8* %20, i64 112
  %62 = getelementptr inbounds i8, i8* %20, i64 184
  %63 = bitcast i8* %62 to i64*
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds i8, i8* %20, i64 192
  %65 = bitcast i8* %64 to %"class.base::OneShotTimer"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 69, i1 false) #18
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %65) #18
  %66 = getelementptr inbounds i8, i8* %20, i64 320
  %67 = bitcast i8* %66 to i64*
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds i8, i8* %20, i64 328
  %69 = bitcast i8* %68 to i64*
  store i64 %12, i64* %69, align 8
  %70 = getelementptr inbounds i8, i8* %20, i64 336
  %71 = bitcast i8* %70 to i32*
  store i32 2, i32* %71, align 8
  %72 = getelementptr inbounds %"class.base::OnceCallback.384", %"class.base::OnceCallback.384"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %73 = bitcast i8* %20 to %"class.net::DnsTransaction"*
  ret %"class.net::DnsTransaction"* %73
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.net::DnsProbeRunner"* @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImpl20CreateDohProbeRunnerEPNS_14ResolveContextE(%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* nocapture readonly, %"class.net::ResolveContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr.777", align 8
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::WeakPtr.777", align 8
  %7 = ptrtoint %"class.net::ResolveContext"* %1 to i64
  %8 = bitcast %"class.base::WeakPtr.777"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 1, i32 0
  %10 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %9, align 8
  %11 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #18, !noalias !2
  %12 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %10, i64 0, i32 6, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %12) #18, !noalias !2
  %13 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %10, i64 0, i32 6, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !2
  %15 = getelementptr inbounds %"class.base::WeakPtr.777", %"class.base::WeakPtr.777"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %15, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %14) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #18, !noalias !2
  %16 = bitcast %"class.base::WeakPtr.777"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  %17 = call i8* @_Znwm(i64 96) #20
  %18 = getelementptr inbounds %"class.base::WeakPtr.777", %"class.base::WeakPtr.777"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.base::WeakPtr.777", %"class.base::WeakPtr.777"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #18
  %20 = getelementptr inbounds %"class.base::WeakPtr.777", %"class.base::WeakPtr.777"* %4, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::WeakPtr.777", %"class.base::WeakPtr.777"* %6, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %20, align 8
  %23 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 8
  %25 = bitcast i8* %24 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %25, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %18) #18
  %26 = getelementptr inbounds i8, i8* %17, i64 16
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %20, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %17, i64 24
  %30 = bitcast i8* %29 to i64*
  store i64 %7, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %17, i64 32
  %32 = bitcast i8* %31 to %"class.std::__1::basic_string"*
  %33 = getelementptr inbounds i8, i8* %17, i64 56
  %34 = getelementptr inbounds i8, i8* %17, i64 80
  %35 = bitcast i8* %34 to %"class.base::internal::WeakPtrFactoryBase"*
  %36 = ptrtoint i8* %17 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 48, i1 false) #18
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %35, i64 %36) #18
  %37 = call zeroext i1 @_ZN3net16DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.39, %"class.std::__1::basic_string"* %32) #18
  %38 = bitcast %"class.logging::CheckError"* %3 to i8*
  %39 = bitcast i8* %26 to %"class.net::DnsSession"**
  %40 = getelementptr inbounds i8, i8* %17, i64 64
  %41 = bitcast i8* %40 to %"class.std::__1::unique_ptr.780"**
  %42 = getelementptr inbounds i8, i8* %17, i64 72
  %43 = bitcast i8* %42 to %"class.std::__1::unique_ptr.780"**
  %44 = bitcast i8* %40 to i64*
  %45 = bitcast i8* %33 to i64*
  %46 = bitcast i8* %42 to i64*
  br label %47

47:                                               ; preds = %254, %2
  %48 = phi i64 [ 0, %2 ], [ %255, %254 ]
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %25) #18
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #18
  br label %52

52:                                               ; preds = %50, %47
  %53 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %25) #18
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %39, align 8
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi %"class.net::DnsSession"* [ %55, %54 ], [ null, %52 ]
  %58 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %57, i64 0, i32 1, i32 13
  %59 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %57, i64 0, i32 1, i32 13, i32 0, i32 1
  %60 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.41"* %58 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = ashr exact i64 %64, 5
  %66 = icmp ult i64 %48, %65
  br i1 %66, label %67, label %256

67:                                               ; preds = %56
  %68 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %41, align 8
  %69 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %43, align 8
  %70 = icmp ult %"class.std::__1::unique_ptr.780"* %68, %69
  %71 = ptrtoint %"class.std::__1::unique_ptr.780"* %69 to i64
  br i1 %70, label %72, label %76

72:                                               ; preds = %67
  %73 = bitcast %"class.std::__1::unique_ptr.780"* %68 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %68, i64 1
  %75 = ptrtoint %"class.std::__1::unique_ptr.780"* %74 to i64
  store i64 %75, i64* %44, align 8
  br label %254

76:                                               ; preds = %67
  %77 = ptrtoint %"class.std::__1::unique_ptr.780"* %68 to i64
  %78 = load i64, i64* %45, align 8
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = add nsw i64 %80, 1
  %82 = icmp ugt i64 %81, 2305843009213693951
  %83 = inttoptr i64 %78 to %"class.std::__1::unique_ptr.780"*
  br i1 %82, label %84, label %86

84:                                               ; preds = %76
  %85 = bitcast i8* %33 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %85) #19
  unreachable

86:                                               ; preds = %76
  %87 = sub i64 %71, %78
  %88 = ashr exact i64 %87, 3
  %89 = icmp ult i64 %88, 1152921504606846975
  br i1 %89, label %90, label %98

90:                                               ; preds = %86
  %91 = ashr exact i64 %87, 2
  %92 = icmp ult i64 %91, %81
  %93 = select i1 %92, i64 %81, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %90
  %96 = icmp ugt i64 %93, 2305843009213693951
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  call void @abort() #19
  unreachable

98:                                               ; preds = %95, %86
  %99 = phi i64 [ %93, %95 ], [ 2305843009213693951, %86 ]
  %100 = shl i64 %99, 3
  %101 = call i8* @_Znwm(i64 %100) #20
  %102 = bitcast i8* %101 to %"class.std::__1::unique_ptr.780"*
  br label %103

103:                                              ; preds = %98, %90
  %104 = phi i64 [ %99, %98 ], [ 0, %90 ]
  %105 = phi %"class.std::__1::unique_ptr.780"* [ %102, %98 ], [ null, %90 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %105, i64 %80
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %105, i64 %104
  %108 = ptrtoint %"class.std::__1::unique_ptr.780"* %107 to i64
  %109 = bitcast %"class.std::__1::unique_ptr.780"* %106 to i64*
  store i64 0, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %106, i64 1
  %111 = ptrtoint %"class.std::__1::unique_ptr.780"* %110 to i64
  %112 = icmp eq %"class.std::__1::unique_ptr.780"* %68, %83
  br i1 %112, label %140, label %113

113:                                              ; preds = %103
  %114 = getelementptr %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %68, i64 -1
  %115 = bitcast %"class.std::__1::unique_ptr.780"* %114 to i8*
  %116 = sub i64 0, %78
  %117 = getelementptr i8, i8* %115, i64 %116
  %118 = ptrtoint i8* %117 to i64
  %119 = lshr i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 7
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %135, label %123

123:                                              ; preds = %113, %123
  %124 = phi %"class.std::__1::unique_ptr.780"* [ %127, %123 ], [ %106, %113 ]
  %125 = phi %"class.std::__1::unique_ptr.780"* [ %128, %123 ], [ %68, %113 ]
  %126 = phi i64 [ %133, %123 ], [ %121, %113 ]
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %124, i64 -1
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %125, i64 -1
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr.780"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.780"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = add i64 %126, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %123, !llvm.loop !7

135:                                              ; preds = %123, %113
  %136 = phi %"class.std::__1::unique_ptr.780"* [ undef, %113 ], [ %127, %123 ]
  %137 = phi %"class.std::__1::unique_ptr.780"* [ %106, %113 ], [ %127, %123 ]
  %138 = phi %"class.std::__1::unique_ptr.780"* [ %68, %113 ], [ %128, %123 ]
  %139 = icmp ult i8* %117, inttoptr (i64 56 to i8*)
  br i1 %139, label %194, label %142

140:                                              ; preds = %103
  %141 = ptrtoint %"class.std::__1::unique_ptr.780"* %106 to i64
  store i64 %141, i64* %45, align 8
  store i64 %111, i64* %44, align 8
  store i64 %108, i64* %46, align 8
  br label %249

142:                                              ; preds = %135, %142
  %143 = phi %"class.std::__1::unique_ptr.780"* [ %187, %142 ], [ %137, %135 ]
  %144 = phi %"class.std::__1::unique_ptr.780"* [ %188, %142 ], [ %138, %135 ]
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %143, i64 -1
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %144, i64 -1
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr.780"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %147, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.780"* %145 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %143, i64 -2
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %144, i64 -2
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %152, i64 0, i32 0, i32 0, i32 0
  %154 = bitcast %"class.std::__1::unique_ptr.780"* %152 to i64*
  %155 = load i64, i64* %154, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %153, align 8
  %156 = bitcast %"class.std::__1::unique_ptr.780"* %151 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %143, i64 -3
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %144, i64 -3
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = bitcast %"class.std::__1::unique_ptr.780"* %158 to i64*
  %161 = load i64, i64* %160, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %159, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.780"* %157 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %143, i64 -4
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %144, i64 -4
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %164, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr.780"* %164 to i64*
  %167 = load i64, i64* %166, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %165, align 8
  %168 = bitcast %"class.std::__1::unique_ptr.780"* %163 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %143, i64 -5
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %144, i64 -5
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = bitcast %"class.std::__1::unique_ptr.780"* %170 to i64*
  %173 = load i64, i64* %172, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %171, align 8
  %174 = bitcast %"class.std::__1::unique_ptr.780"* %169 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %143, i64 -6
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %144, i64 -6
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %176, i64 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.std::__1::unique_ptr.780"* %176 to i64*
  %179 = load i64, i64* %178, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %177, align 8
  %180 = bitcast %"class.std::__1::unique_ptr.780"* %175 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %143, i64 -7
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %144, i64 -7
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.std::__1::unique_ptr.780"* %182 to i64*
  %185 = load i64, i64* %184, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %183, align 8
  %186 = bitcast %"class.std::__1::unique_ptr.780"* %181 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %143, i64 -8
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %144, i64 -8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = bitcast %"class.std::__1::unique_ptr.780"* %188 to i64*
  %191 = load i64, i64* %190, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %189, align 8
  %192 = bitcast %"class.std::__1::unique_ptr.780"* %187 to i64*
  store i64 %191, i64* %192, align 8
  %193 = icmp eq %"class.std::__1::unique_ptr.780"* %188, %83
  br i1 %193, label %194, label %142

194:                                              ; preds = %142, %135
  %195 = phi %"class.std::__1::unique_ptr.780"* [ %136, %135 ], [ %187, %142 ]
  %196 = load i64, i64* %45, align 8
  %197 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %41, align 8
  %198 = inttoptr i64 %196 to %"class.std::__1::unique_ptr.780"*
  %199 = ptrtoint %"class.std::__1::unique_ptr.780"* %195 to i64
  store i64 %199, i64* %45, align 8
  store i64 %111, i64* %44, align 8
  store i64 %108, i64* %46, align 8
  %200 = icmp eq %"class.std::__1::unique_ptr.780"* %197, %198
  br i1 %200, label %249, label %201

201:                                              ; preds = %194, %247
  %202 = phi %"class.std::__1::unique_ptr.780"* [ %203, %247 ], [ %197, %194 ]
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %202, i64 -1
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %204, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %204, align 8
  %206 = icmp eq %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %205, null
  br i1 %206, label %247, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %205, i64 0, i32 2, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %208) #18
  %209 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %205, i64 0, i32 1
  %210 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %210, align 8
  %212 = icmp eq %"class.std::__1::unique_ptr.398"* %211, null
  br i1 %212, label %236, label %213

213:                                              ; preds = %207
  %214 = bitcast %"class.std::__1::unique_ptr.398"* %211 to i8*
  %215 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %205, i64 0, i32 1, i32 0, i32 1
  %216 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %215, align 8
  %217 = icmp eq %"class.std::__1::unique_ptr.398"* %216, %211
  br i1 %217, label %234, label %218

218:                                              ; preds = %213, %229
  %219 = phi %"class.std::__1::unique_ptr.398"* [ %220, %229 ], [ %216, %213 ]
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %219, i64 -1
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %220, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %221, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %221, align 8
  %223 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %222, null
  br i1 %223, label %229, label %224

224:                                              ; preds = %218
  %225 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %222 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %226 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %226, i64 1
  %228 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %227, align 8
  call void %228(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %222) #18
  br label %229

229:                                              ; preds = %224, %218
  %230 = icmp eq %"class.std::__1::unique_ptr.398"* %220, %211
  br i1 %230, label %231, label %218

231:                                              ; preds = %229
  %232 = bitcast %"class.std::__1::vector.396"* %209 to i8**
  %233 = load i8*, i8** %232, align 8
  br label %234

234:                                              ; preds = %231, %213
  %235 = phi i8* [ %233, %231 ], [ %214, %213 ]
  store %"class.std::__1::unique_ptr.398"* %211, %"class.std::__1::unique_ptr.398"** %215, align 8
  call void @_ZdlPv(i8* %235) #20
  br label %236

236:                                              ; preds = %234, %207
  %237 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %205, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %237, align 8
  store %"class.net::BackoffEntry"* null, %"class.net::BackoffEntry"** %237, align 8
  %239 = icmp eq %"class.net::BackoffEntry"* %238, null
  br i1 %239, label %245, label %240

240:                                              ; preds = %236
  %241 = bitcast %"class.net::BackoffEntry"* %238 to void (%"class.net::BackoffEntry"*)***
  %242 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %241, align 8
  %243 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %242, i64 1
  %244 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %243, align 8
  call void %244(%"class.net::BackoffEntry"* nonnull %238) #18
  br label %245

245:                                              ; preds = %240, %236
  %246 = bitcast %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %205 to i8*
  call void @_ZdlPv(i8* %246) #20
  br label %247

247:                                              ; preds = %245, %201
  %248 = icmp eq %"class.std::__1::unique_ptr.780"* %203, %198
  br i1 %248, label %249, label %201

249:                                              ; preds = %247, %140, %194
  %250 = phi i64 [ %78, %140 ], [ %196, %194 ], [ %196, %247 ]
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %249
  %253 = inttoptr i64 %250 to i8*
  call void @_ZdlPv(i8* %253) #20
  br label %254

254:                                              ; preds = %252, %249, %72
  %255 = add i64 %48, 1
  br label %47

256:                                              ; preds = %56
  %257 = getelementptr inbounds %"class.base::WeakPtr.777", %"class.base::WeakPtr.777"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %257) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  %258 = bitcast i8* %17 to %"class.net::DnsProbeRunner"*
  ret %"class.net::DnsProbeRunner"* %258
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImpl13AddEDNSOptionERKNS_14OptRecordRdata3OptE(%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* nocapture, %"class.net::OptRecordRdata::Opt"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"** %4, align 8
  %6 = icmp eq %"class.net::OptRecordRdata"* %5, null
  br i1 %6, label %7, label %21

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 56) #20
  %9 = bitcast i8* %8 to %"class.net::OptRecordRdata"*
  tail call void @_ZN3net14OptRecordRdataC1Ev(%"class.net::OptRecordRdata"* nonnull %9) #18
  %10 = ptrtoint i8* %8 to i64
  %11 = load %"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.74"* %3 to i64*
  store i64 %10, i64* %12, align 8
  %13 = icmp eq %"class.net::OptRecordRdata"* %11, null
  %14 = bitcast i8* %8 to %"class.net::OptRecordRdata"*
  br i1 %13, label %21, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.net::OptRecordRdata"* %11 to void (%"class.net::OptRecordRdata"*)***
  %17 = load void (%"class.net::OptRecordRdata"*)**, void (%"class.net::OptRecordRdata"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::OptRecordRdata"*)*, void (%"class.net::OptRecordRdata"*)** %17, i64 1
  %19 = load void (%"class.net::OptRecordRdata"*)*, void (%"class.net::OptRecordRdata"*)** %18, align 8
  tail call void %19(%"class.net::OptRecordRdata"* nonnull %11) #18
  %20 = load %"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"** %4, align 8
  br label %21

21:                                               ; preds = %7, %15, %2
  %22 = phi %"class.net::OptRecordRdata"* [ %14, %7 ], [ %20, %15 ], [ %5, %2 ]
  tail call void @_ZN3net14OptRecordRdata6AddOptERKNS0_3OptE(%"class.net::OptRecordRdata"* %22, %"class.net::OptRecordRdata::Opt"* dereferenceable(32) %1) #18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN3net12_GLOBAL__N_125DnsTransactionFactoryImpl23GetSecureDnsModeForTestEv(%"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl", %"class.net::(anonymous namespace)::DnsTransactionFactoryImpl"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %2, align 8
  %4 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %3, i64 0, i32 1, i32 14
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net10DnsSessionD1Ev(%"class.net::DnsSession"*) unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118DnsTransactionImplD2Ev(%"class.net::(anonymous namespace)::DnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3net12_GLOBAL__N_118DnsTransactionImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 10, i32 0
  %4 = getelementptr inbounds %"class.base::internal::CallbackBase", %"class.base::internal::CallbackBase"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %8, i32 369, i32 -3) #18
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %11 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %10, align 8
  store %"class.base::ElapsedTimer"* null, %"class.base::ElapsedTimer"** %10, align 8
  %12 = icmp eq %"class.base::ElapsedTimer"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.base::ElapsedTimer"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #20
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 21
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %16) #18
  %17 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %18 = load %"class.net::DnsServerIterator"*, %"class.net::DnsServerIterator"** %17, align 8
  store %"class.net::DnsServerIterator"* null, %"class.net::DnsServerIterator"** %17, align 8
  %19 = icmp eq %"class.net::DnsServerIterator"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.net::DnsServerIterator"* %18 to void (%"class.net::DnsServerIterator"*)***
  %22 = load void (%"class.net::DnsServerIterator"*)**, void (%"class.net::DnsServerIterator"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.net::DnsServerIterator"*)*, void (%"class.net::DnsServerIterator"*)** %22, i64 1
  %24 = load void (%"class.net::DnsServerIterator"*)*, void (%"class.net::DnsServerIterator"*)** %23, align 8
  tail call void %24(%"class.net::DnsServerIterator"* nonnull %18) #18
  br label %25

25:                                               ; preds = %15, %20
  %26 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16
  %27 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.398"* %28, null
  br i1 %29, label %53, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::unique_ptr.398"* %28 to i8*
  %32 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 1
  %33 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %32, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr.398"* %33, %28
  br i1 %34, label %51, label %35

35:                                               ; preds = %30, %46
  %36 = phi %"class.std::__1::unique_ptr.398"* [ %37, %46 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %36, i64 -1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %38, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %38, align 8
  %40 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %39 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %43 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %43, i64 1
  %45 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %44, align 8
  tail call void %45(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %39) #18
  br label %46

46:                                               ; preds = %41, %35
  %47 = icmp eq %"class.std::__1::unique_ptr.398"* %37, %28
  br i1 %47, label %48, label %35

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.396"* %26 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %30
  %52 = phi i8* [ %50, %48 ], [ %31, %30 ]
  store %"class.std::__1::unique_ptr.398"* %28, %"class.std::__1::unique_ptr.398"** %32, align 8
  tail call void @_ZdlPv(i8* %52) #20
  br label %53

53:                                               ; preds = %25, %51
  %54 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14
  %55 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %58 = load i64, i64* %57, align 8
  tail call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13DestructRangeEmm(%"class.base::circular_deque.394"* %54, i64 %56, i64 %58) #18
  %59 = bitcast %"class.base::circular_deque.394"* %54 to i8**
  %60 = load i8*, i8** %59, align 8
  tail call void @free(i8* %60) #18
  %61 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %61) #18
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #18
  %62 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 3
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #20
  br label %70

70:                                               ; preds = %53, %67
  %71 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %72 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %71, align 8
  %73 = icmp eq %"class.net::DnsSession"* %72, null
  br i1 %73, label %81, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %72, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #18
  %76 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %72, i64 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %74
  tail call void @_ZN3net10DnsSessionD1Ev(%"class.net::DnsSession"* nonnull %72) #18
  %80 = bitcast %"class.net::DnsSession"* %72 to i8*
  tail call void @_ZdlPv(i8* %80) #20
  br label %81

81:                                               ; preds = %70, %74, %79
  %82 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %82) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118DnsTransactionImplD0Ev(%"class.net::(anonymous namespace)::DnsTransactionImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net12_GLOBAL__N_118DnsTransactionImplD2Ev(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0) #18
  %2 = bitcast %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3net12_GLOBAL__N_118DnsTransactionImpl11GetHostnameEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* readnone) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 3
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i16 @_ZNK3net12_GLOBAL__N_118DnsTransactionImpl7GetTypeEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 4
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl5StartEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.base::WeakPtr.426", align 8
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13, i32 1
  %14 = load %"class.net::NetLog"*, %"class.net::NetLog"** %13, align 8
  %15 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %14, i64 0, i32 3
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %39, label %18, !prof !9

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13, i32 0
  %20 = bitcast %"class.base::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #18
  %21 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 4
  %23 = load i16, i16* %22, align 8, !noalias !10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false) #18, !alias.scope !13
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %9, i8 zeroext 6) #18
  %24 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1, !noalias !16
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8, !noalias !16
  %30 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %31 = select i1 %27, i8* %29, i8* %30
  %32 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !16
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  %36 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8, i8* %31, i64 %35) #18
  %37 = zext i16 %23 to i32
  %38 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i64 10, i32 %37) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %14, i32 369, %"struct.net::NetLogSource"* dereferenceable(16) %19, i32 1, %"class.base::Value"* nonnull dereferenceable(32) %9) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #18
  br label %39

39:                                               ; preds = %1, %18
  %40 = call i8* @_Znwm(i64 8) #20
  %41 = bitcast i8* %40 to %"class.base::ElapsedTimer"*
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %41) #18
  %42 = ptrtoint i8* %40 to i64
  %43 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 22
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.415", %"class.std::__1::unique_ptr.415"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.415"* %43 to i64*
  store i64 %42, i64* %46, align 8
  %47 = icmp eq %"class.base::ElapsedTimer"* %45, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %39
  %49 = bitcast %"class.base::ElapsedTimer"* %45 to i8*
  call void @_ZdlPv(i8* %49) #20
  br label %50

50:                                               ; preds = %48, %39
  %51 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %52 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #18
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #18
  %56 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #18
  %57 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 3
  %58 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %66 = select i1 %62, i8* %64, i8* %65
  store i8* %66, i8** %58, align 8
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %68 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %61 to i64
  %71 = select i1 %62, i64 %69, i64 %70
  store i64 %71, i64* %67, align 8
  %72 = call zeroext i1 @_ZN3net16DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.std::__1::basic_string"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #18
  br i1 %72, label %75, label %73

73:                                               ; preds = %50
  %74 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %405

75:                                               ; preds = %50
  %76 = load i8, i8* %60, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %75
  %79 = load i8*, i8** %63, align 8
  %80 = load i64, i64* %68, align 8
  br label %83

81:                                               ; preds = %75
  %82 = zext i8 %76 to i64
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi i8* [ %79, %78 ], [ %65, %81 ]
  %85 = phi i64 [ %80, %78 ], [ %82, %81 ]
  %86 = getelementptr inbounds i8, i8* %84, i64 %85
  %87 = getelementptr inbounds i8, i8* %86, i64 -1
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 46
  br i1 %89, label %90, label %119

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.394"* %91, i64 1) #18
  %92 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %91, i64 0, i32 0
  %93 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %94 = load i64, i64* %93, align 8
  %95 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %92, i64 %94) #18
  %96 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %90
  %101 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* nonnull align 8 %53, i64 24, i1 false) #18
  br label %105

102:                                              ; preds = %90
  %103 = load i8*, i8** %54, align 8
  %104 = load i64, i64* %55, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %95, i8* %103, i64 %104) #18
  br label %105

105:                                              ; preds = %102, %100
  %106 = load i64, i64* %93, align 8
  %107 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, -1
  %110 = icmp eq i64 %106, %109
  br i1 %110, label %111, label %112

111:                                              ; preds = %105
  store i64 0, i64* %93, align 8
  br label %115

112:                                              ; preds = %105
  %113 = add i64 %106, 1
  store i64 %113, i64* %93, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112, %111
  br label %116

116:                                              ; preds = %115, %112
  %117 = phi i64 [ %109, %115 ], [ %106, %112 ]
  %118 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %92, i64 %117) #18
  br label %405

119:                                              ; preds = %83
  %120 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  %124 = load i64, i64* %55, align 8
  %125 = zext i8 %122 to i64
  %126 = select i1 %123, i64 %124, i64 %125
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %178, label %128

128:                                              ; preds = %119
  %129 = load i8*, i8** %54, align 8
  %130 = select i1 %123, i8* %129, i8* %53
  br label %131

131:                                              ; preds = %137, %128
  %132 = phi i64 [ 0, %128 ], [ %141, %137 ]
  %133 = phi i64 [ 0, %128 ], [ %138, %137 ]
  %134 = getelementptr inbounds i8, i8* %130, i64 %132
  %135 = load i8, i8* %134, align 1
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %143, label %137

137:                                              ; preds = %131
  %138 = add i64 %133, 1
  %139 = sext i8 %135 to i64
  %140 = add nuw i64 %132, 1
  %141 = add i64 %140, %139
  %142 = icmp ult i64 %141, %126
  br i1 %142, label %131, label %143

143:                                              ; preds = %137, %131
  %144 = phi i64 [ %133, %131 ], [ %138, %137 ]
  %145 = trunc i64 %144 to i32
  %146 = icmp sgt i32 %145, 1
  br i1 %146, label %147, label %178

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %52, i64 0, i32 1, i32 6
  %149 = load i8, i8* %148, align 1, !range !17
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %178

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.394"* %152, i64 1) #18
  %153 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %152, i64 0, i32 0
  %154 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %155 = load i64, i64* %154, align 8
  %156 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %153, i64 %155) #18
  %157 = load i8, i8* %121, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %151
  %160 = bitcast %"class.std::__1::basic_string"* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* nonnull align 8 %53, i64 24, i1 false) #18
  br label %164

161:                                              ; preds = %151
  %162 = load i8*, i8** %54, align 8
  %163 = load i64, i64* %55, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %156, i8* %162, i64 %163) #18
  br label %164

164:                                              ; preds = %161, %159
  %165 = load i64, i64* %154, align 8
  %166 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = add i64 %167, -1
  %169 = icmp eq i64 %165, %168
  br i1 %169, label %170, label %171

170:                                              ; preds = %164
  store i64 0, i64* %154, align 8
  br label %174

171:                                              ; preds = %164
  %172 = add i64 %165, 1
  store i64 %172, i64* %154, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171, %170
  br label %175

175:                                              ; preds = %174, %171
  %176 = phi i64 [ %168, %174 ], [ %165, %171 ]
  %177 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %153, i64 %176) #18
  br label %405

178:                                              ; preds = %147, %143, %119
  %179 = phi i1 [ true, %147 ], [ false, %143 ], [ false, %119 ]
  %180 = phi i32 [ %145, %147 ], [ %145, %143 ], [ 0, %119 ]
  %181 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %52, i64 0, i32 1, i32 7
  %182 = load i32, i32* %181, align 4
  %183 = icmp sgt i32 %180, %182
  br i1 %183, label %184, label %211

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.394"* %185, i64 1) #18
  %186 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %185, i64 0, i32 0
  %187 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %188 = load i64, i64* %187, align 8
  %189 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %186, i64 %188) #18
  %190 = load i8, i8* %121, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %184
  %193 = bitcast %"class.std::__1::basic_string"* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* nonnull align 8 %53, i64 24, i1 false) #18
  br label %197

194:                                              ; preds = %184
  %195 = load i8*, i8** %54, align 8
  %196 = load i64, i64* %55, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %189, i8* %195, i64 %196) #18
  br label %197

197:                                              ; preds = %194, %192
  %198 = load i64, i64* %187, align 8
  %199 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, -1
  %202 = icmp eq i64 %198, %201
  br i1 %202, label %203, label %204

203:                                              ; preds = %197
  store i64 0, i64* %187, align 8
  br label %207

204:                                              ; preds = %197
  %205 = add i64 %198, 1
  store i64 %205, i64* %187, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204, %203
  br label %208

208:                                              ; preds = %207, %204
  %209 = phi i64 [ %201, %207 ], [ %198, %204 ]
  %210 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %186, i64 %209) #18
  br label %211

211:                                              ; preds = %208, %178
  %212 = phi i8 [ 1, %208 ], [ 0, %178 ]
  %213 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #18
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 0, i64 24, i1 false) #18
  %216 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %52, i64 0, i32 1, i32 3
  %217 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %52, i64 0, i32 1, i32 3, i32 0, i32 1
  %218 = bitcast %"class.std::__1::basic_string"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.std::__1::vector.15"* %216 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = icmp eq i64 %219, %221
  br i1 %222, label %245, label %223

223:                                              ; preds = %211
  %224 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %225 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %226 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %230 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %216, i64 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %234 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %239 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14
  %242 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %241, i64 0, i32 0
  %243 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %244 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0, i32 1
  br label %250

245:                                              ; preds = %356, %211
  %246 = phi i8 [ %212, %211 ], [ %357, %356 ]
  %247 = and i8 %246, 1
  %248 = icmp eq i8 %247, 0
  %249 = and i1 %179, %248
  br i1 %249, label %364, label %391

250:                                              ; preds = %356, %223
  %251 = phi i64 [ 0, %223 ], [ %358, %356 ]
  %252 = phi i8 [ %212, %223 ], [ %357, %356 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 0, i64 24, i1 false) #18, !alias.scope !18
  %253 = load i8, i8* %60, align 1, !noalias !18
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %250
  %256 = load i64, i64* %68, align 8, !noalias !18
  %257 = load i8*, i8** %63, align 8, !noalias !18
  br label %260

258:                                              ; preds = %250
  %259 = zext i8 %253 to i64
  br label %260

260:                                              ; preds = %258, %255
  %261 = phi i64 [ %256, %255 ], [ %259, %258 ]
  %262 = phi i8* [ %257, %255 ], [ %65, %258 ]
  %263 = add i64 %261, 1
  %264 = icmp ugt i64 %263, -17
  br i1 %264, label %265, label %267

265:                                              ; preds = %260
  %266 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %266) #19
  unreachable

267:                                              ; preds = %260
  %268 = icmp ult i64 %263, 23
  br i1 %268, label %274, label %269

269:                                              ; preds = %267
  %270 = add nuw i64 %261, 17
  %271 = and i64 %270, -16
  %272 = call i8* @_Znwm(i64 %271) #20
  store i8* %272, i8** %227, align 8, !alias.scope !18
  %273 = or i64 %271, -9223372036854775808
  store i64 %273, i64* %229, align 8, !alias.scope !18
  store i64 %261, i64* %228, align 8, !alias.scope !18
  br label %277

274:                                              ; preds = %267
  %275 = trunc i64 %261 to i8
  store i8 %275, i8* %231, align 1, !alias.scope !18
  %276 = icmp eq i64 %261, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %274, %269
  %278 = phi i8* [ %272, %269 ], [ %226, %274 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %278, i8* align 1 %262, i64 %261, i1 false) #18
  br label %279

279:                                              ; preds = %277, %274
  %280 = phi i8* [ %226, %274 ], [ %278, %277 ]
  %281 = getelementptr inbounds i8, i8* %280, i64 %261
  store i8 0, i8* %281, align 1
  %282 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #18
  %283 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %232, align 8
  %284 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %283, i64 %251
  %285 = bitcast %"class.std::__1::basic_string"* %284 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %286 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %285, i64 0, i32 1, i32 0
  %287 = load i8, i8* %286, align 1, !noalias !21
  %288 = icmp slt i8 %287, 0
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8, !noalias !21
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %283, i64 %251, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %292 = load i64, i64* %291, align 8, !noalias !21
  %293 = bitcast %"class.std::__1::basic_string"* %284 to i8*
  %294 = zext i8 %287 to i64
  %295 = select i1 %288, i8* %290, i8* %293
  %296 = select i1 %288, i64 %292, i64 %294
  %297 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %295, i64 %296) #18, !noalias !21
  %298 = bitcast %"class.std::__1::basic_string"* %297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %225, i8* align 8 %298, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %298, i8 0, i64 24, i1 false) #18, !noalias !21
  %299 = load i8, i8* %235, align 1
  %300 = icmp slt i8 %299, 0
  %301 = load i8*, i8** %236, align 8
  %302 = select i1 %300, i8* %301, i8* %225
  store i8* %302, i8** %233, align 8
  %303 = load i64, i64* %238, align 8
  %304 = zext i8 %299 to i64
  %305 = select i1 %300, i64 %303, i64 %304
  store i64 %305, i64* %237, align 8
  %306 = call zeroext i1 @_ZN3net16DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, %"class.std::__1::basic_string"* nonnull %5) #18
  %307 = load i8, i8* %235, align 1
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %279
  %310 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %310) #20
  br label %311

311:                                              ; preds = %309, %279
  %312 = load i8, i8* %231, align 1
  %313 = icmp slt i8 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %311
  %315 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %315) #20
  br label %316

316:                                              ; preds = %314, %311
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #18
  br i1 %306, label %317, label %356

317:                                              ; preds = %316
  %318 = load i8, i8* %240, align 1
  %319 = icmp slt i8 %318, 0
  %320 = load i64, i64* %215, align 8
  %321 = zext i8 %318 to i64
  %322 = select i1 %319, i64 %320, i64 %321
  %323 = load i8, i8* %121, align 1
  %324 = icmp slt i8 %323, 0
  %325 = load i64, i64* %55, align 8
  %326 = zext i8 %323 to i64
  %327 = select i1 %324, i64 %325, i64 %326
  %328 = icmp eq i64 %322, %327
  br i1 %328, label %329, label %332

329:                                              ; preds = %317
  %330 = and i8 %252, 1
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %332, label %356

332:                                              ; preds = %329, %317
  %333 = phi i8 [ %252, %317 ], [ 1, %329 ]
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.394"* %241, i64 1) #18
  %334 = load i64, i64* %243, align 8
  %335 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %242, i64 %334) #18
  %336 = load i8, i8* %240, align 1
  %337 = icmp slt i8 %336, 0
  br i1 %337, label %340, label %338

338:                                              ; preds = %332
  %339 = bitcast %"class.std::__1::basic_string"* %335 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %339, i8* nonnull align 8 %213, i64 24, i1 false) #18
  br label %343

340:                                              ; preds = %332
  %341 = load i8*, i8** %214, align 8
  %342 = load i64, i64* %215, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %335, i8* %341, i64 %342) #18
  br label %343

343:                                              ; preds = %340, %338
  %344 = load i64, i64* %243, align 8
  %345 = load i64, i64* %244, align 8
  %346 = add i64 %345, -1
  %347 = icmp eq i64 %344, %346
  br i1 %347, label %348, label %349

348:                                              ; preds = %343
  store i64 0, i64* %243, align 8
  br label %352

349:                                              ; preds = %343
  %350 = add i64 %344, 1
  store i64 %350, i64* %243, align 8
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %349, %348
  br label %353

353:                                              ; preds = %352, %349
  %354 = phi i64 [ %346, %352 ], [ %344, %349 ]
  %355 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %242, i64 %354) #18
  br label %356

356:                                              ; preds = %353, %329, %316
  %357 = phi i8 [ %252, %316 ], [ %252, %329 ], [ %333, %353 ]
  %358 = add nuw i64 %251, 1
  %359 = load i64, i64* %218, align 8
  %360 = load i64, i64* %220, align 8
  %361 = sub i64 %359, %360
  %362 = sdiv exact i64 %361, 24
  %363 = icmp ult i64 %358, %362
  br i1 %363, label %250, label %245

364:                                              ; preds = %245
  %365 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.394"* %365, i64 1) #18
  %366 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %365, i64 0, i32 0
  %367 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %368 = load i64, i64* %367, align 8
  %369 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %366, i64 %368) #18
  %370 = load i8, i8* %121, align 1
  %371 = icmp slt i8 %370, 0
  br i1 %371, label %374, label %372

372:                                              ; preds = %364
  %373 = bitcast %"class.std::__1::basic_string"* %369 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %373, i8* nonnull align 8 %53, i64 24, i1 false) #18
  br label %377

374:                                              ; preds = %364
  %375 = load i8*, i8** %54, align 8
  %376 = load i64, i64* %55, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %369, i8* %375, i64 %376) #18
  br label %377

377:                                              ; preds = %374, %372
  %378 = load i64, i64* %367, align 8
  %379 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0, i32 1
  %380 = load i64, i64* %379, align 8
  %381 = add i64 %380, -1
  %382 = icmp eq i64 %378, %381
  br i1 %382, label %383, label %384

383:                                              ; preds = %377
  store i64 0, i64* %367, align 8
  br label %387

384:                                              ; preds = %377
  %385 = add i64 %378, 1
  store i64 %385, i64* %367, align 8
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %387, label %388

387:                                              ; preds = %384, %383
  br label %388

388:                                              ; preds = %387, %384
  %389 = phi i64 [ %381, %387 ], [ %378, %384 ]
  %390 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %366, i64 %389) #18
  br label %391

391:                                              ; preds = %388, %245
  %392 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 1
  %393 = load i64, i64* %392, align 8
  %394 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %395 = load i64, i64* %394, align 8
  %396 = icmp eq i64 %393, %395
  %397 = select i1 %396, i32 -805, i32 0
  %398 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %399 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %398, i64 0, i32 1, i32 0
  %400 = load i8, i8* %399, align 1
  %401 = icmp slt i8 %400, 0
  br i1 %401, label %402, label %404

402:                                              ; preds = %391
  %403 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %403) #20
  br label %404

404:                                              ; preds = %402, %391
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %213) #18
  br label %405

405:                                              ; preds = %404, %175, %116, %73
  %406 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %74, %73 ], [ %120, %175 ], [ %120, %404 ], [ %96, %116 ]
  %407 = phi i32 [ -4, %73 ], [ 0, %175 ], [ %397, %404 ], [ 0, %116 ]
  %408 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %406, i64 0, i32 1, i32 0
  %409 = load i8, i8* %408, align 1
  %410 = icmp slt i8 %409, 0
  br i1 %410, label %411, label %413

411:                                              ; preds = %405
  %412 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %412) #20
  br label %413

413:                                              ; preds = %405, %411
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #18
  %414 = icmp eq i32 %407, 0
  br i1 %414, label %415, label %438

415:                                              ; preds = %413
  %416 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 1
  %417 = load i64, i64* %416, align 8
  %418 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %419 = load i64, i64* %418, align 8
  %420 = icmp ult i64 %419, %417
  br i1 %420, label %423, label %421

421:                                              ; preds = %415
  %422 = sub i64 %419, %417
  br label %428

423:                                              ; preds = %415
  %424 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0, i32 1
  %425 = load i64, i64* %424, align 8
  %426 = sub i64 %419, %417
  %427 = add i64 %426, %425
  br label %428

428:                                              ; preds = %423, %421
  %429 = phi i64 [ %422, %421 ], [ %427, %423 ]
  %430 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 15
  store i64 %429, i64* %430, align 8
  %431 = call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl10StartQueryEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0)
  %432 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %431, 0
  %433 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %431, 1
  %434 = call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl20ProcessAttemptResultENS1_13AttemptResultE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i32 %432, %"class.net::(anonymous namespace)::DnsAttempt"* %433)
  %435 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %434, 0
  %436 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %434, 1
  %437 = icmp eq i32 %435, -1
  br i1 %437, label %546, label %438

438:                                              ; preds = %413, %428
  %439 = phi %"class.net::(anonymous namespace)::DnsAttempt"* [ %436, %428 ], [ null, %413 ]
  %440 = phi i32 [ %435, %428 ], [ %407, %413 ]
  %441 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16
  %442 = bitcast %"class.std::__1::vector.396"* %441 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 1
  %445 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %444, align 8
  %446 = inttoptr i64 %443 to %"class.std::__1::unique_ptr.398"*
  %447 = icmp eq %"class.std::__1::unique_ptr.398"* %445, %446
  br i1 %447, label %514, label %448

448:                                              ; preds = %438, %509
  %449 = phi %"class.std::__1::unique_ptr.398"* [ %512, %509 ], [ %446, %438 ]
  %450 = phi i64 [ %511, %509 ], [ %443, %438 ]
  %451 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %449, i64 0, i32 0, i32 0, i32 0
  %452 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %451, align 8
  %453 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %452 to i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %454 = load i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)**, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %453, align 8
  %455 = getelementptr inbounds i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)** %454, i64 6
  %456 = load i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)** %455, align 8
  %457 = call zeroext i1 %456(%"class.net::(anonymous namespace)::DnsAttempt"* %452) #18
  br i1 %457, label %458, label %505

458:                                              ; preds = %448
  %459 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %451, align 8
  %460 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %459, %439
  br i1 %460, label %505, label %461

461:                                              ; preds = %458
  %462 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %449, i64 1
  %463 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %444, align 8
  %464 = icmp eq %"class.std::__1::unique_ptr.398"* %462, %463
  br i1 %464, label %487, label %465

465:                                              ; preds = %461, %480
  %466 = phi %"class.std::__1::unique_ptr.398"* [ %482, %480 ], [ %449, %461 ]
  %467 = phi %"class.std::__1::unique_ptr.398"* [ %481, %480 ], [ %462, %461 ]
  %468 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %467, i64 0, i32 0, i32 0, i32 0
  %469 = bitcast %"class.std::__1::unique_ptr.398"* %467 to i64*
  %470 = load i64, i64* %469, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %468, align 8
  %471 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %466, i64 0, i32 0, i32 0, i32 0
  %472 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %471, align 8
  %473 = bitcast %"class.std::__1::unique_ptr.398"* %466 to i64*
  store i64 %470, i64* %473, align 8
  %474 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %472, null
  br i1 %474, label %480, label %475

475:                                              ; preds = %465
  %476 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %472 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %477 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %476, align 8
  %478 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %477, i64 1
  %479 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %478, align 8
  call void %479(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %472) #18
  br label %480

480:                                              ; preds = %475, %465
  %481 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %467, i64 1
  %482 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %466, i64 1
  %483 = icmp eq %"class.std::__1::unique_ptr.398"* %481, %463
  br i1 %483, label %484, label %465

484:                                              ; preds = %480
  %485 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %444, align 8
  %486 = icmp eq %"class.std::__1::unique_ptr.398"* %485, %482
  br i1 %486, label %503, label %487

487:                                              ; preds = %484, %461
  %488 = phi %"class.std::__1::unique_ptr.398"* [ %482, %484 ], [ %449, %461 ]
  %489 = phi %"class.std::__1::unique_ptr.398"* [ %485, %484 ], [ %462, %461 ]
  br label %490

490:                                              ; preds = %501, %487
  %491 = phi %"class.std::__1::unique_ptr.398"* [ %492, %501 ], [ %489, %487 ]
  %492 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %491, i64 -1
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %492, i64 0, i32 0, i32 0, i32 0
  %494 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %493, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %493, align 8
  %495 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %494, null
  br i1 %495, label %501, label %496

496:                                              ; preds = %490
  %497 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %494 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %498 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %497, align 8
  %499 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %498, i64 1
  %500 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %499, align 8
  call void %500(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %494) #18
  br label %501

501:                                              ; preds = %496, %490
  %502 = icmp eq %"class.std::__1::unique_ptr.398"* %492, %488
  br i1 %502, label %503, label %490

503:                                              ; preds = %501, %484
  %504 = phi %"class.std::__1::unique_ptr.398"* [ %482, %484 ], [ %488, %501 ]
  store %"class.std::__1::unique_ptr.398"* %504, %"class.std::__1::unique_ptr.398"** %444, align 8
  br label %509

505:                                              ; preds = %458, %448
  %506 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %449, i64 1
  %507 = ptrtoint %"class.std::__1::unique_ptr.398"* %506 to i64
  %508 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %444, align 8
  br label %509

509:                                              ; preds = %505, %503
  %510 = phi %"class.std::__1::unique_ptr.398"* [ %508, %505 ], [ %504, %503 ]
  %511 = phi i64 [ %507, %505 ], [ %450, %503 ]
  %512 = inttoptr i64 %511 to %"class.std::__1::unique_ptr.398"*
  %513 = icmp eq %"class.std::__1::unique_ptr.398"* %510, %512
  br i1 %513, label %514, label %448

514:                                              ; preds = %509, %438
  %515 = call dereferenceable(8) %class.scoped_refptr.425* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #18
  %516 = bitcast %class.scoped_refptr.425* %515 to %"class.base::TaskRunner"**
  %517 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %516, align 8
  %518 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %518) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1108) #18
  %519 = bitcast %"class.base::WeakPtr.426"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %519) #18
  %520 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 1
  %521 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %521) #18, !noalias !24
  %522 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %520, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %522) #18, !noalias !24
  %523 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %520, i64 -1
  %524 = getelementptr inbounds %"class.base::WeakPtr.426", %"class.base::WeakPtr.426"* %12, i64 0, i32 0
  %525 = ptrtoint %"class.base::SupportsWeakPtr"* %523 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %524, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %525) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %521) #18, !noalias !24
  %526 = call i8* @_Znwm(i64 80) #20, !noalias !27
  %527 = bitcast i8* %526 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %527, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS5_13AttemptResultEEJNS_7WeakPtrIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS4_13AttemptResultEEJNS_7WeakPtrIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS5_13AttemptResultEEJNS_7WeakPtrIS5_EES6_EEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE) #18, !noalias !27
  %528 = getelementptr inbounds i8, i8* %526, i64 32
  %529 = bitcast i8* %528 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, %"class.net::(anonymous namespace)::DnsAttempt"*)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl10DoCallbackENS1_13AttemptResultE to i64), i64 0>, <2 x i64>* %529, align 8, !noalias !27
  %530 = getelementptr inbounds i8, i8* %526, i64 48
  %531 = bitcast i8* %530 to %"class.base::internal::WeakReference"*
  %532 = getelementptr inbounds %"class.base::WeakPtr.426", %"class.base::WeakPtr.426"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %531, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %532) #18, !noalias !27
  %533 = getelementptr inbounds i8, i8* %526, i64 56
  %534 = bitcast i8* %533 to i64*
  %535 = getelementptr inbounds %"class.base::WeakPtr.426", %"class.base::WeakPtr.426"* %12, i64 0, i32 0, i32 1
  %536 = load i64, i64* %535, align 8, !noalias !27
  store i64 %536, i64* %534, align 8, !noalias !27
  %537 = getelementptr inbounds i8, i8* %526, i64 64
  %538 = bitcast i8* %537 to i32*
  store i32 %440, i32* %538, align 8, !noalias !27
  %539 = getelementptr inbounds i8, i8* %526, i64 68
  %540 = bitcast i8* %539 to i32*
  store i32 -1431655766, i32* %540, align 4, !noalias !27
  %541 = getelementptr inbounds i8, i8* %526, i64 72
  %542 = bitcast i8* %541 to %"class.net::(anonymous namespace)::DnsAttempt"**
  store %"class.net::(anonymous namespace)::DnsAttempt"* %439, %"class.net::(anonymous namespace)::DnsAttempt"** %542, align 8, !noalias !27
  %543 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %526, i8** %543, align 8, !alias.scope !27
  %544 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %517, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %11) #18
  %545 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %545) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %524) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %519) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %518) #18
  br label %546

546:                                              ; preds = %428, %514
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl18SetRequestPriorityENS_15RequestPriorityE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* nocapture, i32) unnamed_addr #11 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 24
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14DnsTransactionD2Ev(%"class.net::DnsTransaction"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14DnsTransactionD0Ev(%"class.net::DnsTransaction"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

declare void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13DestructRangeEmm(%"class.base::circular_deque.394"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer.395"* %7, %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"* %12)
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::basic_string"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer.395"* %7, %"class.std::__1::basic_string"* %15, %"class.std::__1::basic_string"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer.395"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::basic_string"*, align 8
  %6 = alloca %"class.std::__1::basic_string"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %5, align 8
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::basic_string"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcS4_EEPKvE_8__invokeESL_SN_) #18
  %17 = bitcast %"class.std::__1::basic_string"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcS4_EEPKvE_8__invokeESL_SN_) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #18
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #18
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %28 = icmp eq %"class.std::__1::basic_string"* %26, %27
  br i1 %28, label %46, label %29

29:                                               ; preds = %25, %41
  %30 = phi %"class.std::__1::basic_string"* [ %42, %41 ], [ %27, %25 ]
  %31 = phi %"class.std::__1::basic_string"* [ %44, %41 ], [ %26, %25 ]
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #20
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %"class.std::__1::basic_string"* [ %30, %29 ], [ %40, %36 ]
  %43 = phi %"class.std::__1::basic_string"* [ %31, %29 ], [ %39, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  store %"class.std::__1::basic_string"* %44, %"class.std::__1::basic_string"** %5, align 8
  %45 = icmp eq %"class.std::__1::basic_string"* %44, %42
  br i1 %45, label %46, label %29

46:                                               ; preds = %41, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 %1
  ret %"class.std::__1::basic_string"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #7

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcS4_EEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #18
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl20ProcessAttemptResultENS1_13AttemptResultE(%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, %"class.net::(anonymous namespace)::DnsAttempt"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = icmp eq i32 %1, -1
  br i1 %7, label %315, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13, i32 1
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13, i32 0
  %11 = bitcast %"class.base::Value"* %6 to i8*
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 18
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16
  %15 = bitcast %"class.std::__1::vector.396"* %14 to i64*
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 1
  %17 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 21
  %18 = getelementptr inbounds %"class.base::OneShotTimer", %"class.base::OneShotTimer"* %17, i64 0, i32 0
  %19 = bitcast %"class.base::Location"* %5 to i8*
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %21 = ptrtoint %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0 to i64
  %22 = bitcast %"class.base::OnceCallback"* %4 to i8**
  %23 = bitcast %"class.base::OneShotTimer"* %17 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %25 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 21, i32 0
  %26 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 23
  %27 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13
  %30 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14
  %31 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 1
  %32 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 2
  %33 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %30, i64 0, i32 0
  %34 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0, i32 1
  br label %35

35:                                               ; preds = %8, %310
  %36 = phi %"class.net::(anonymous namespace)::DnsAttempt"* [ %2, %8 ], [ %313, %310 ]
  %37 = phi i32 [ %1, %8 ], [ %312, %310 ]
  %38 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %36, null
  br i1 %38, label %71, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %36 to %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %41 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %41, i64 4
  %43 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %42, align 8
  %44 = call %"class.net::DnsResponse"* %43(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %36) #18
  %45 = icmp eq %"class.net::DnsResponse"* %44, null
  br i1 %45, label %71, label %46

46:                                               ; preds = %39
  %47 = load %"class.net::NetLog"*, %"class.net::NetLog"** %9, align 8
  %48 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %47, i64 0, i32 3
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %71, label %51, !prof !9

51:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #18, !alias.scope !32
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %6, i8 zeroext 6) #18
  %52 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %40, align 8, !noalias !37
  %53 = getelementptr inbounds %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %52, i64 4
  %54 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %53, align 8
  %55 = call %"class.net::DnsResponse"* %54(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %36) #18
  %56 = call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %55) #18
  %57 = zext i8 %56 to i32
  %58 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 5, i32 %57) #18
  %59 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %40, align 8, !noalias !37
  %60 = getelementptr inbounds %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %59, i64 4
  %61 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %60, align 8
  %62 = call %"class.net::DnsResponse"* %61(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %36) #18
  %63 = call i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"* %62) #18
  %64 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12, i32 %63) #18
  %65 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %36 to %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %66 = load %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %65, align 8, !noalias !37
  %67 = getelementptr inbounds %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %66, i64 5
  %68 = load %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %67, align 8
  %69 = call dereferenceable(24) %"class.net::NetLogWithSource"* %68(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %36) #18
  %70 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %69, i64 0, i32 0
  call void @_ZNK3net12NetLogSource20AddToEventParametersEPN4base5ValueE(%"struct.net::NetLogSource"* %70, %"class.base::Value"* nonnull %6) #18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %47, i32 373, %"struct.net::NetLogSource"* dereferenceable(16) %10, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %6) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #18
  br label %71

71:                                               ; preds = %35, %39, %46, %51
  switch i32 %37, label %263 [
    i32 0, label %72
    i32 -105, label %79
    i32 -102, label %105
    i32 -803, label %105
    i32 -801, label %148
    i32 -20, label %262
  ]

72:                                               ; preds = %71
  %73 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %26, align 8
  %74 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsAttempt", %"class.net::(anonymous namespace)::DnsAttempt"* %36, i64 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = load i8, i8* %27, align 8, !range !17
  %77 = icmp ne i8 %76, 0
  %78 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %13, align 8
  call void @_ZN3net14ResolveContext19RecordServerSuccessEmbPKNS_10DnsSessionE(%"class.net::ResolveContext"* %73, i64 %75, i1 zeroext %77, %"class.net::DnsSession"* %78) #18
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %29, i32 370, i32 0) #18
  br label %315

79:                                               ; preds = %71
  %80 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %26, align 8
  %81 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsAttempt", %"class.net::(anonymous namespace)::DnsAttempt"* %36, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = load i8, i8* %27, align 8, !range !17
  %84 = icmp ne i8 %83, 0
  %85 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %13, align 8
  call void @_ZN3net14ResolveContext19RecordServerSuccessEmbPKNS_10DnsSessionE(%"class.net::ResolveContext"* %80, i64 %82, i1 zeroext %84, %"class.net::DnsSession"* %85) #18
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %29, i32 370, i32 -105) #18
  %86 = load i64, i64* %31, align 8
  %87 = load i64, i64* %32, align 8
  %88 = icmp eq i64 %86, %87
  br i1 %88, label %315, label %89

89:                                               ; preds = %79
  %90 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %33, i64 %86) #18
  %91 = load i64, i64* %31, align 8
  %92 = add i64 %91, 1
  %93 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %33, i64 %92) #18
  call void @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer.395"* %33, %"class.std::__1::basic_string"* %90, %"class.std::__1::basic_string"* %93) #18
  %94 = load i64, i64* %31, align 8
  %95 = add i64 %94, 1
  %96 = load i64, i64* %34, align 8
  %97 = icmp eq i64 %95, %96
  %98 = select i1 %97, i64 0, i64 %95
  store i64 %98, i64* %31, align 8
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.394"* %30) #18
  %99 = load i64, i64* %31, align 8
  %100 = load i64, i64* %32, align 8
  %101 = icmp eq i64 %99, %100
  br i1 %101, label %315, label %102

102:                                              ; preds = %89
  %103 = call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl10StartQueryEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0)
  %104 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %103, 0
  br label %310

105:                                              ; preds = %71, %71
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %25) #18
  br i1 %38, label %113, label %106

106:                                              ; preds = %105
  %107 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %26, align 8
  %108 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsAttempt", %"class.net::(anonymous namespace)::DnsAttempt"* %36, i64 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = load i8, i8* %27, align 8, !range !17
  %111 = icmp ne i8 %110, 0
  %112 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %13, align 8
  call void @_ZN3net14ResolveContext19RecordServerFailureEmbiPKNS_10DnsSessionE(%"class.net::ResolveContext"* %107, i64 %109, i1 zeroext %111, i32 %37, %"class.net::DnsSession"* %112) #18
  br label %113

113:                                              ; preds = %105, %106
  %114 = load i8, i8* %12, align 4, !range !17
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %126

116:                                              ; preds = %113
  %117 = load %"class.net::DnsServerIterator"*, %"class.net::DnsServerIterator"** %28, align 8
  %118 = bitcast %"class.net::DnsServerIterator"* %117 to i1 (%"class.net::DnsServerIterator"*)***
  %119 = load i1 (%"class.net::DnsServerIterator"*)**, i1 (%"class.net::DnsServerIterator"*)*** %118, align 8
  %120 = getelementptr inbounds i1 (%"class.net::DnsServerIterator"*)*, i1 (%"class.net::DnsServerIterator"*)** %119, i64 3
  %121 = load i1 (%"class.net::DnsServerIterator"*)*, i1 (%"class.net::DnsServerIterator"*)** %120, align 8
  %122 = call zeroext i1 %121(%"class.net::DnsServerIterator"* %117) #18
  br i1 %122, label %123, label %126

123:                                              ; preds = %116
  %124 = call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl11MakeAttemptEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0)
  %125 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %124, 0
  br label %310

126:                                              ; preds = %113, %116
  %127 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 11
  %128 = load i8, i8* %127, align 8, !range !17
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %315

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 0
  %132 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %131, align 8
  %133 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %16, align 8
  %134 = icmp eq %"class.std::__1::unique_ptr.398"* %132, %133
  br i1 %134, label %315, label %137

135:                                              ; preds = %137
  %136 = icmp eq %"class.std::__1::unique_ptr.398"* %146, %133
  br i1 %136, label %315, label %137

137:                                              ; preds = %130, %135
  %138 = phi %"class.std::__1::unique_ptr.398"* [ %146, %135 ], [ %132, %130 ]
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %139, align 8
  %141 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %140 to i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %142 = load i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)**, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %141, align 8
  %143 = getelementptr inbounds i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)** %142, i64 6
  %144 = load i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)** %143, align 8
  %145 = call zeroext i1 %144(%"class.net::(anonymous namespace)::DnsAttempt"* %140) #18
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %138, i64 1
  br i1 %145, label %147, label %135

147:                                              ; preds = %137
  call fastcc void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl17StartTimeoutTimerEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0)
  br label %315

148:                                              ; preds = %71
  store i8 1, i8* %12, align 4
  %149 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsAttempt", %"class.net::(anonymous namespace)::DnsAttempt"* %36, i64 0, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %36 to %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %152 = load %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %151, align 8
  %153 = getelementptr inbounds %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %152, i64 3
  %154 = load %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %153, align 8
  %155 = call %"class.net::DnsQuery"* %154(%"class.net::(anonymous namespace)::DnsAttempt"* %36) #18
  %156 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %13, align 8
  %157 = call zeroext i16 @_ZNK3net10DnsSession11NextQueryIdEv(%"class.net::DnsSession"* %156) #18
  %158 = call %"class.net::DnsQuery"* @_ZNK3net8DnsQuery14CloneWithNewIdEt(%"class.net::DnsQuery"* %155, i16 zeroext %157) #18
  %159 = load i64, i64* %15, align 8
  %160 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %16, align 8
  %161 = inttoptr i64 %159 to %"class.std::__1::unique_ptr.398"*
  %162 = icmp eq %"class.std::__1::unique_ptr.398"* %160, %161
  br i1 %162, label %229, label %163

163:                                              ; preds = %148, %224
  %164 = phi %"class.std::__1::unique_ptr.398"* [ %227, %224 ], [ %161, %148 ]
  %165 = phi i64 [ %226, %224 ], [ %159, %148 ]
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %164, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %166, align 8
  %168 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %167 to i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %169 = load i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)**, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %168, align 8
  %170 = getelementptr inbounds i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)** %169, i64 6
  %171 = load i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)** %170, align 8
  %172 = call zeroext i1 %171(%"class.net::(anonymous namespace)::DnsAttempt"* %167) #18
  br i1 %172, label %173, label %220

173:                                              ; preds = %163
  %174 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %166, align 8
  %175 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %174, null
  br i1 %175, label %220, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %164, i64 1
  %178 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %16, align 8
  %179 = icmp eq %"class.std::__1::unique_ptr.398"* %177, %178
  br i1 %179, label %202, label %180

180:                                              ; preds = %176, %195
  %181 = phi %"class.std::__1::unique_ptr.398"* [ %197, %195 ], [ %164, %176 ]
  %182 = phi %"class.std::__1::unique_ptr.398"* [ %196, %195 ], [ %177, %176 ]
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.std::__1::unique_ptr.398"* %182 to i64*
  %185 = load i64, i64* %184, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %183, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %181, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %186, align 8
  %188 = bitcast %"class.std::__1::unique_ptr.398"* %181 to i64*
  store i64 %185, i64* %188, align 8
  %189 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %187, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %180
  %191 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %187 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %192 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %192, i64 1
  %194 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %193, align 8
  call void %194(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %187) #18
  br label %195

195:                                              ; preds = %190, %180
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %182, i64 1
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %181, i64 1
  %198 = icmp eq %"class.std::__1::unique_ptr.398"* %196, %178
  br i1 %198, label %199, label %180

199:                                              ; preds = %195
  %200 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %16, align 8
  %201 = icmp eq %"class.std::__1::unique_ptr.398"* %200, %197
  br i1 %201, label %218, label %202

202:                                              ; preds = %199, %176
  %203 = phi %"class.std::__1::unique_ptr.398"* [ %197, %199 ], [ %164, %176 ]
  %204 = phi %"class.std::__1::unique_ptr.398"* [ %200, %199 ], [ %177, %176 ]
  br label %205

205:                                              ; preds = %216, %202
  %206 = phi %"class.std::__1::unique_ptr.398"* [ %207, %216 ], [ %204, %202 ]
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %206, i64 -1
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %207, i64 0, i32 0, i32 0, i32 0
  %209 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %208, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %208, align 8
  %210 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %209, null
  br i1 %210, label %216, label %211

211:                                              ; preds = %205
  %212 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %209 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %213 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %212, align 8
  %214 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %213, i64 1
  %215 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %214, align 8
  call void %215(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %209) #18
  br label %216

216:                                              ; preds = %211, %205
  %217 = icmp eq %"class.std::__1::unique_ptr.398"* %207, %203
  br i1 %217, label %218, label %205

218:                                              ; preds = %216, %199
  %219 = phi %"class.std::__1::unique_ptr.398"* [ %197, %199 ], [ %203, %216 ]
  store %"class.std::__1::unique_ptr.398"* %219, %"class.std::__1::unique_ptr.398"** %16, align 8
  br label %224

220:                                              ; preds = %173, %163
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %164, i64 1
  %222 = ptrtoint %"class.std::__1::unique_ptr.398"* %221 to i64
  %223 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %16, align 8
  br label %224

224:                                              ; preds = %220, %218
  %225 = phi %"class.std::__1::unique_ptr.398"* [ %223, %220 ], [ %219, %218 ]
  %226 = phi i64 [ %222, %220 ], [ %165, %218 ]
  %227 = inttoptr i64 %226 to %"class.std::__1::unique_ptr.398"*
  %228 = icmp eq %"class.std::__1::unique_ptr.398"* %225, %227
  br i1 %228, label %229, label %163

229:                                              ; preds = %224, %148
  %230 = call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl14MakeTcpAttemptEmNSt3__110unique_ptrINS_8DnsQueryENS2_14default_deleteIS4_EEEE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 %150, %"class.net::DnsQuery"* %158) #18
  %231 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %230, 0
  %232 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %233 = inttoptr i64 %232 to %"class.base::HistogramBase"*
  %234 = icmp eq i64 %232, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %229
  %236 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #18
  %237 = ptrtoint %"class.base::HistogramBase"* %236 to i64
  store atomic i64 %237, i64* @_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %238

238:                                              ; preds = %235, %229
  %239 = phi %"class.base::HistogramBase"* [ %233, %229 ], [ %236, %235 ]
  %240 = bitcast %"class.base::HistogramBase"* %239 to void (%"class.base::HistogramBase"*, i32)***
  %241 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %241, i64 6
  %243 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %242, align 8
  call void %243(%"class.base::HistogramBase"* %239, i32 2) #18
  %244 = icmp eq i32 %231, -1
  br i1 %244, label %245, label %310

245:                                              ; preds = %238
  %246 = call i64 @_ZNK4base8internal9TimerBase15GetCurrentDelayEv(%"class.base::internal::TimerBase"* %18) #18
  %247 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %246, i64 2) #18
  %248 = extractvalue { i64, i1 } %247, 1
  %249 = extractvalue { i64, i1 } %247, 0
  %250 = icmp sgt i64 %246, -1
  %251 = select i1 %250, i64 9223372036854775807, i64 -9223372036854775808
  %252 = select i1 %248, i64 %251, i64 %249
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1348) #18
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  %253 = call i8* @_Znwm(i64 56) #20, !noalias !38
  %254 = bitcast i8* %253 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %254, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !38
  %255 = getelementptr inbounds i8, i8* %253, i64 32
  %256 = bitcast i8* %255 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl23OnFallbackPeriodExpiredEv to i64), i64 0>, <2 x i64>* %256, align 8, !noalias !38
  %257 = getelementptr inbounds i8, i8* %253, i64 48
  %258 = bitcast i8* %257 to i64*
  store i64 %21, i64* %258, align 8, !noalias !38
  store i8* %253, i8** %22, align 8, !alias.scope !38
  %259 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %23, align 8
  %260 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %259, i64 7
  %261 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %260, align 8
  call void %261(%"class.base::OneShotTimer"* %17, %"class.base::Location"* nonnull dereferenceable(32) %5, i64 %252, %"class.base::OnceCallback"* nonnull %4) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #18
  br label %310

262:                                              ; preds = %71
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %29, i32 370, i32 -20) #18
  br label %315

263:                                              ; preds = %71
  %264 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %16, align 8
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %264, i64 -1, i32 0, i32 0, i32 0
  %266 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %265, align 8
  %267 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %36, %266
  br i1 %267, label %268, label %293

268:                                              ; preds = %263
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %25) #18
  %269 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %26, align 8
  %270 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsAttempt", %"class.net::(anonymous namespace)::DnsAttempt"* %36, i64 0, i32 1
  %271 = load i64, i64* %270, align 8
  %272 = load i8, i8* %27, align 8, !range !17
  %273 = icmp ne i8 %272, 0
  %274 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %13, align 8
  call void @_ZN3net14ResolveContext19RecordServerFailureEmbiPKNS_10DnsSessionE(%"class.net::ResolveContext"* %269, i64 %271, i1 zeroext %273, i32 %37, %"class.net::DnsSession"* %274) #18
  %275 = load i8, i8* %12, align 4, !range !17
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %277, label %287

277:                                              ; preds = %268
  %278 = load %"class.net::DnsServerIterator"*, %"class.net::DnsServerIterator"** %28, align 8
  %279 = bitcast %"class.net::DnsServerIterator"* %278 to i1 (%"class.net::DnsServerIterator"*)***
  %280 = load i1 (%"class.net::DnsServerIterator"*)**, i1 (%"class.net::DnsServerIterator"*)*** %279, align 8
  %281 = getelementptr inbounds i1 (%"class.net::DnsServerIterator"*)*, i1 (%"class.net::DnsServerIterator"*)** %280, i64 3
  %282 = load i1 (%"class.net::DnsServerIterator"*)*, i1 (%"class.net::DnsServerIterator"*)** %281, align 8
  %283 = call zeroext i1 %282(%"class.net::DnsServerIterator"* %278) #18
  br i1 %283, label %284, label %287

284:                                              ; preds = %277
  %285 = call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl11MakeAttemptEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0)
  %286 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %285, 0
  br label %310

287:                                              ; preds = %268, %277
  %288 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 11
  %289 = load i8, i8* %288, align 8, !range !17
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %291, label %315

291:                                              ; preds = %287
  call fastcc void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl17StartTimeoutTimerEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0)
  %292 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %16, align 8
  br label %293

293:                                              ; preds = %263, %291
  %294 = phi %"class.std::__1::unique_ptr.398"* [ %292, %291 ], [ %264, %263 ]
  %295 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 0
  %296 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %295, align 8
  %297 = icmp eq %"class.std::__1::unique_ptr.398"* %296, %294
  br i1 %297, label %315, label %300

298:                                              ; preds = %300
  %299 = icmp eq %"class.std::__1::unique_ptr.398"* %309, %294
  br i1 %299, label %315, label %300

300:                                              ; preds = %293, %298
  %301 = phi %"class.std::__1::unique_ptr.398"* [ %309, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %301, i64 0, i32 0, i32 0, i32 0
  %303 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %302, align 8
  %304 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %303 to i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %305 = load i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)**, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %304, align 8
  %306 = getelementptr inbounds i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)** %305, i64 6
  %307 = load i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)*, i1 (%"class.net::(anonymous namespace)::DnsAttempt"*)** %306, align 8
  %308 = call zeroext i1 %307(%"class.net::(anonymous namespace)::DnsAttempt"* %303) #18
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %301, i64 1
  br i1 %308, label %315, label %298

310:                                              ; preds = %245, %238, %284, %123, %102
  %311 = phi { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } [ %285, %284 ], [ %124, %123 ], [ %103, %102 ], [ %230, %238 ], [ %230, %245 ]
  %312 = phi i32 [ %286, %284 ], [ %125, %123 ], [ %104, %102 ], [ %231, %238 ], [ %231, %245 ]
  %313 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %311, 1
  %314 = icmp eq i32 %312, -1
  br i1 %314, label %315, label %35

315:                                              ; preds = %79, %89, %310, %135, %298, %300, %3, %130, %293, %287, %126, %262, %147, %72
  %316 = phi %"class.net::(anonymous namespace)::DnsAttempt"* [ %36, %262 ], [ null, %147 ], [ %36, %72 ], [ %36, %126 ], [ %36, %287 ], [ %36, %293 ], [ %36, %130 ], [ %2, %3 ], [ %36, %298 ], [ null, %300 ], [ %36, %135 ], [ %36, %79 ], [ %36, %89 ], [ %313, %310 ]
  %317 = phi i32 [ -20, %262 ], [ -1, %147 ], [ 0, %72 ], [ %37, %126 ], [ %37, %287 ], [ %37, %293 ], [ %37, %130 ], [ -1, %3 ], [ %37, %298 ], [ -1, %300 ], [ %37, %135 ], [ -105, %79 ], [ -105, %89 ], [ -1, %310 ]
  %318 = insertvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } undef, i32 %317, 0
  %319 = insertvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %318, %"class.net::(anonymous namespace)::DnsAttempt"* %316, 1
  ret { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %319
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl10StartQueryEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional.758", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %5, i64 %7) #18
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  call void @_ZN3net17DnsDomainToStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.absl::optional.758"* nonnull sret %2, i8* %16, i64 %20, i1 zeroext false) #18
  %21 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13
  %22 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #18
  %23 = load i8, i8* %4, align 8, !range !17, !noalias !43
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !noalias !43
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %32, i64 24, i1 false) #18
  br label %42

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8, !noalias !43
  %36 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !43
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %35, i64 %37) #18
  br label %42

38:                                               ; preds = %1
  %39 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 20, i8* %40, align 1, !alias.scope !43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0), i64 20, i1 false) #18
  %41 = getelementptr inbounds i8, i8* %22, i64 20
  store i8 0, i8* %41, align 4
  br label %42

42:                                               ; preds = %31, %33, %38
  %43 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = select i1 %46, i8* %48, i8* %22
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %45 to i64
  %53 = select i1 %46, i64 %51, i64 %52
  call void @_ZNK3net16NetLogWithSource26BeginEventWithStringParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_(%"class.net::NetLogWithSource"* %21, i32 370, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), i64 5, i8* %49, i64 %53) #18
  %54 = load i8, i8* %44, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %42
  %57 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %57) #20
  br label %58

58:                                               ; preds = %42, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #18
  %59 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 0
  %60 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %59, align 8
  %61 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.398"* %62, %60
  br i1 %63, label %77, label %64

64:                                               ; preds = %58, %75
  %65 = phi %"class.std::__1::unique_ptr.398"* [ %66, %75 ], [ %62, %58 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %67, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %67, align 8
  %69 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %68 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %72 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %72, i64 1
  %74 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %73, align 8
  call void %74(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %68) #18
  br label %75

75:                                               ; preds = %70, %64
  %76 = icmp eq %"class.std::__1::unique_ptr.398"* %66, %60
  br i1 %76, label %77, label %64

77:                                               ; preds = %75, %58
  store %"class.std::__1::unique_ptr.398"* %60, %"class.std::__1::unique_ptr.398"** %61, align 8
  %78 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 18
  store i8 0, i8* %78, align 4
  %79 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 7
  %80 = load i8, i8* %79, align 8, !range !17
  %81 = icmp eq i8 %80, 0
  %82 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 23
  %83 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %82, align 8
  %84 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %85 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %84, align 8
  %86 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %85, i64 0, i32 1
  br i1 %81, label %101, label %87

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 9
  %89 = call %"class.net::DnsServerIterator"* @_ZN3net14ResolveContext14GetDohIteratorERKNS_9DnsConfigERKNS_13SecureDnsModeEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %83, %"struct.net::DnsConfig"* dereferenceable(208) %86, i32* dereferenceable(4) %88, %"class.net::DnsSession"* %85) #18
  %90 = ptrtoint %"class.net::DnsServerIterator"* %89 to i64
  %91 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 20
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.409"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.net::DnsServerIterator"*, %"class.net::DnsServerIterator"** %92, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.409"* %91 to i64*
  store i64 %90, i64* %94, align 8
  %95 = icmp eq %"class.net::DnsServerIterator"* %93, null
  br i1 %95, label %114, label %96

96:                                               ; preds = %87
  %97 = bitcast %"class.net::DnsServerIterator"* %93 to void (%"class.net::DnsServerIterator"*)***
  %98 = load void (%"class.net::DnsServerIterator"*)**, void (%"class.net::DnsServerIterator"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.net::DnsServerIterator"*)*, void (%"class.net::DnsServerIterator"*)** %98, i64 1
  %100 = load void (%"class.net::DnsServerIterator"*)*, void (%"class.net::DnsServerIterator"*)** %99, align 8
  call void %100(%"class.net::DnsServerIterator"* nonnull %93) #18
  br label %114

101:                                              ; preds = %77
  %102 = call %"class.net::DnsServerIterator"* @_ZN3net14ResolveContext21GetClassicDnsIteratorERKNS_9DnsConfigEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %83, %"struct.net::DnsConfig"* dereferenceable(208) %86, %"class.net::DnsSession"* %85) #18
  %103 = ptrtoint %"class.net::DnsServerIterator"* %102 to i64
  %104 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 20
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.409"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.net::DnsServerIterator"*, %"class.net::DnsServerIterator"** %105, align 8
  %107 = bitcast %"class.std::__1::unique_ptr.409"* %104 to i64*
  store i64 %103, i64* %107, align 8
  %108 = icmp eq %"class.net::DnsServerIterator"* %106, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %101
  %110 = bitcast %"class.net::DnsServerIterator"* %106 to void (%"class.net::DnsServerIterator"*)***
  %111 = load void (%"class.net::DnsServerIterator"*)**, void (%"class.net::DnsServerIterator"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.net::DnsServerIterator"*)*, void (%"class.net::DnsServerIterator"*)** %111, i64 1
  %113 = load void (%"class.net::DnsServerIterator"*)*, void (%"class.net::DnsServerIterator"*)** %112, align 8
  call void %113(%"class.net::DnsServerIterator"* nonnull %106) #18
  br label %114

114:                                              ; preds = %101, %109, %87, %96
  %115 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %116 = load %"class.net::DnsServerIterator"*, %"class.net::DnsServerIterator"** %115, align 8
  %117 = bitcast %"class.net::DnsServerIterator"* %116 to i1 (%"class.net::DnsServerIterator"*)***
  %118 = load i1 (%"class.net::DnsServerIterator"*)**, i1 (%"class.net::DnsServerIterator"*)*** %117, align 8
  %119 = getelementptr inbounds i1 (%"class.net::DnsServerIterator"*)*, i1 (%"class.net::DnsServerIterator"*)** %118, i64 3
  %120 = load i1 (%"class.net::DnsServerIterator"*)*, i1 (%"class.net::DnsServerIterator"*)** %119, align 8
  %121 = call zeroext i1 %120(%"class.net::DnsServerIterator"* %116) #18
  br i1 %121, label %122, label %126

122:                                              ; preds = %114
  %123 = call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl11MakeAttemptEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0)
  %124 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %123, 0
  %125 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %123, 1
  br label %126

126:                                              ; preds = %114, %122
  %127 = phi i32 [ %124, %122 ], [ -20, %114 ]
  %128 = phi %"class.net::(anonymous namespace)::DnsAttempt"* [ %125, %122 ], [ null, %114 ]
  %129 = load i8, i8* %4, align 8, !range !17
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %141, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %133 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #20
  br label %140

140:                                              ; preds = %137, %131
  store i8 0, i8* %4, align 8
  br label %141

141:                                              ; preds = %126, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #18
  %142 = insertvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } undef, i32 %127, 0
  %143 = insertvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %142, %"class.net::(anonymous namespace)::DnsAttempt"* %128, 1
  ret { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %143
}

declare dereferenceable(8) %class.scoped_refptr.425* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #7

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #7

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl10DoCallbackENS1_13AttemptResultE(%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, %"class.net::(anonymous namespace)::DnsAttempt"*) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.384", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca [7 x i8], align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.absl::optional.758", align 8
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 10
  %10 = getelementptr inbounds %"class.base::OnceCallback.384", %"class.base::OnceCallback.384"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = icmp eq %"class.base::internal::BindStateBase"* %11, null
  br i1 %12, label %100, label %13

13:                                               ; preds = %3
  %14 = icmp ne %"class.net::(anonymous namespace)::DnsAttempt"* %2, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %2 to %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %17 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %17, i64 4
  %19 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %18, align 8
  %20 = tail call %"class.net::DnsResponse"* %19(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %2) #18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi %"class.net::DnsResponse"* [ %20, %15 ], [ null, %13 ]
  %23 = icmp ne i32 %1, 0
  %24 = icmp ne %"class.net::DnsResponse"* %22, null
  %25 = or i1 %23, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1195, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.38, i64 0, i64 0)) #18
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #18
  br label %29

29:                                               ; preds = %21, %26
  %30 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 21, i32 0
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %30) #18
  %31 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %31, i32 369, i32 %1) #18
  %32 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %32)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 7, i1 false)
  %33 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 7
  %34 = load i8, i8* %33, align 8, !range !17
  %35 = icmp eq i8 %34, 0
  %36 = xor i1 %14, true
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 32, i1 false) #18
  br label %68

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsAttempt", %"class.net::(anonymous namespace)::DnsAttempt"* %2, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #18
  %44 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %45 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %44, align 8
  %46 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %45, i64 0, i32 1, i32 13, i32 0, i32 0
  %47 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %46, align 8
  %48 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %47, i64 %42
  call void @_ZN3net41GetDohProviderIdForHistogramFromDohConfigERKNS_24DnsOverHttpsServerConfigE(%"class.std::__1::basic_string"* nonnull sret %7, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32) %48) #18
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = bitcast i64* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %54, i64 7, i1 false)
  %55 = getelementptr inbounds i8, i8* %43, i64 23
  %56 = load i8, i8* %55, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #18
  %57 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 32, i1 false) #18
  %58 = icmp slt i8 %56, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %40
  %60 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %50, i8** %60, align 8
  %61 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %61, align 8
  %62 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %63 = bitcast i64* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %32, i64 7, i1 false)
  %64 = getelementptr inbounds i8, i8* %57, i64 31
  store i8 %56, i8* %64, align 1
  br label %67

65:                                               ; preds = %40
  %66 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %66, i8* %50, i64 %52) #18
  br label %67

67:                                               ; preds = %65, %59
  store i8 1, i8* %57, align 8
  br label %68

68:                                               ; preds = %38, %67
  %69 = phi i1 [ false, %38 ], [ true, %67 ]
  %70 = phi i8 [ 0, %38 ], [ %56, %67 ]
  %71 = phi i8* [ null, %38 ], [ %50, %67 ]
  %72 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 0
  %73 = bitcast %"class.base::OnceCallback.384"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #18
  %74 = bitcast %"class.base::OnceCallback.384"* %9 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::OnceCallback.384"* %4 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %77 = getelementptr inbounds %"class.base::OnceCallback.384", %"class.base::OnceCallback.384"* %4, i64 0, i32 0
  %78 = inttoptr i64 %75 to %"class.base::internal::BindStateBase"*
  %79 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %78, i64 0, i32 1
  %80 = bitcast void ()** %79 to void (%"class.base::internal::BindStateBase"*, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.758"*)**
  %81 = load void (%"class.base::internal::BindStateBase"*, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.758"*)*, void (%"class.base::internal::BindStateBase"*, %"class.net::DnsTransaction"*, i32, %"class.net::DnsResponse"*, %"class.absl::optional.758"*)** %80, align 8
  call void %81(%"class.base::internal::BindStateBase"* %78, %"class.net::DnsTransaction"* %72, i32 %1, %"class.net::DnsResponse"* %22, %"class.absl::optional.758"* nonnull dereferenceable(32) %8) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #18
  %82 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8, i8* %82, align 8, !range !17
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %68
  %86 = getelementptr inbounds %"class.absl::optional.758", %"class.absl::optional.758"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #20
  br label %94

94:                                               ; preds = %91, %85
  store i8 0, i8* %82, align 8
  br label %95

95:                                               ; preds = %68, %94
  %96 = icmp slt i8 %70, 0
  %97 = and i1 %69, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZdlPv(i8* %71) #20
  br label %99

99:                                               ; preds = %95, %98
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %32)
  br label %100

100:                                              ; preds = %3, %99
  ret void
}

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #8

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #7

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #7

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"*) unnamed_addr #7

declare zeroext i1 @_ZN3net16DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.394"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer.395"*
  %5 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #18
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 24) #18
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #18
  br i1 %37, label %38, label %39, !prof !46

38:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #18
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer.395"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer.395"* nonnull %4, i64* %5, i64* %7) #18
  %45 = bitcast %"class.base::circular_deque.394"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #18
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque.394"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #18
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer.395"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer.395"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %48

13:                                               ; preds = %6
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %0, i64 %1)
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %3, i64 0, i32 0
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %14 to i64
  %19 = icmp ult %"class.std::__1::basic_string"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  %22 = ptrtoint %"class.std::__1::basic_string"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #18
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #18
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !46

29:                                               ; preds = %20
  tail call void @llvm.trap() #18
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #18
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.std::__1::basic_string"* %14, %15
  br i1 %37, label %46, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"class.std::__1::basic_string"* [ %44, %38 ], [ %17, %36 ]
  %40 = phi %"class.std::__1::basic_string"* [ %43, %38 ], [ %14, %36 ]
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #18
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %45 = icmp eq %"class.std::__1::basic_string"* %43, %15
  br i1 %45, label %46, label %38

46:                                               ; preds = %38, %36
  %47 = sub i64 %2, %1
  br label %118

48:                                               ; preds = %6
  %49 = icmp ult i64 %2, %1
  br i1 %49, label %50, label %118

50:                                               ; preds = %48
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %0, i64 %1)
  %52 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %0, i64 %11)
  %53 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %3, i64 0, i32 0
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %53, align 8
  %55 = ptrtoint %"class.std::__1::basic_string"* %51 to i64
  %56 = icmp ult %"class.std::__1::basic_string"* %54, %52
  br i1 %56, label %57, label %73

57:                                               ; preds = %50
  %58 = ptrtoint %"class.std::__1::basic_string"* %54 to i64
  %59 = ptrtoint %"class.std::__1::basic_string"* %52 to i64
  %60 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %59, i64 %55) #18
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  %63 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %58, i64 %62) #18
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = or i1 %61, %64
  br i1 %65, label %66, label %67, !prof !46

66:                                               ; preds = %57
  tail call void @llvm.trap() #18
  unreachable

67:                                               ; preds = %57
  %68 = extractvalue { i64, i1 } %63, 0
  %69 = icmp ugt i64 %68, %55
  br i1 %69, label %70, label %73

70:                                               ; preds = %67
  %71 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #18
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #18
  br label %73

73:                                               ; preds = %70, %67, %50
  %74 = icmp eq %"class.std::__1::basic_string"* %51, %52
  br i1 %74, label %83, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"class.std::__1::basic_string"* [ %81, %75 ], [ %54, %73 ]
  %77 = phi %"class.std::__1::basic_string"* [ %80, %75 ], [ %51, %73 ]
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #18
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 1
  %82 = icmp eq %"class.std::__1::basic_string"* %80, %52
  br i1 %82, label %83, label %75

83:                                               ; preds = %75, %73
  %84 = sub i64 %11, %1
  %85 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %0, i64 0)
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %0, i64 %2)
  %87 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %3, i64 %84)
  %88 = ptrtoint %"class.std::__1::basic_string"* %85 to i64
  %89 = icmp ult %"class.std::__1::basic_string"* %87, %86
  br i1 %89, label %90, label %106

90:                                               ; preds = %83
  %91 = ptrtoint %"class.std::__1::basic_string"* %87 to i64
  %92 = ptrtoint %"class.std::__1::basic_string"* %86 to i64
  %93 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %92, i64 %88) #18
  %94 = extractvalue { i64, i1 } %93, 1
  %95 = extractvalue { i64, i1 } %93, 0
  %96 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %91, i64 %95) #18
  %97 = extractvalue { i64, i1 } %96, 1
  %98 = or i1 %94, %97
  br i1 %98, label %99, label %100, !prof !46

99:                                               ; preds = %90
  call void @llvm.trap() #18
  unreachable

100:                                              ; preds = %90
  %101 = extractvalue { i64, i1 } %96, 0
  %102 = icmp ugt i64 %101, %88
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #18
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #18
  br label %106

106:                                              ; preds = %103, %100, %83
  %107 = icmp eq %"class.std::__1::basic_string"* %85, %86
  br i1 %107, label %116, label %108

108:                                              ; preds = %106, %108
  %109 = phi %"class.std::__1::basic_string"* [ %114, %108 ], [ %87, %106 ]
  %110 = phi %"class.std::__1::basic_string"* [ %113, %108 ], [ %85, %106 ]
  %111 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %112 = bitcast %"class.std::__1::basic_string"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #18
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 1
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 1
  %115 = icmp eq %"class.std::__1::basic_string"* %113, %86
  br i1 %115, label %116, label %108

116:                                              ; preds = %108, %106
  %117 = add i64 %84, %2
  br label %118

118:                                              ; preds = %48, %116, %46
  %119 = phi i64 [ %117, %116 ], [ %47, %46 ], [ 0, %48 ]
  store i64 %119, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 %1
  ret %"class.std::__1::basic_string"* %25
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #15

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #16

declare void @_ZN3net14ResolveContext19RecordServerSuccessEmbPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i1 zeroext, %"class.net::DnsSession"*) local_unnamed_addr #7

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #7

declare void @_ZN3net14ResolveContext19RecordServerFailureEmbiPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i1 zeroext, i32, %"class.net::DnsSession"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl11MakeAttemptEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::OnceCallback.479", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::unique_ptr.398", align 8
  %8 = alloca %"class.base::OnceCallback.479", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = alloca %"struct.net::DnsConfig", align 8
  %13 = bitcast %"struct.net::DnsConfig"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %13) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ %"class.std::__1::vector", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.15", %"class.std::__1::unordered_map", i8, i8, [2 x i8], i32, %"class.base::TimeDelta", i32, i32, i8, i8, [6 x i8], %"class.std::__1::vector.41", i32, i8, [3 x i8], %"class.std::__1::vector.15" }* @__const._ZN3net12_GLOBAL__N_118DnsTransactionImpl11MakeAttemptEv.config to i8*), i64 208, i1 false)
  %14 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %15 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %16 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %15, i64 0, i32 1
  call void @_ZN3net9DnsConfigC1ERKS0_(%"struct.net::DnsConfig"* nonnull %12, %"struct.net::DnsConfig"* dereferenceable(208) %16) #18
  %17 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 7
  %18 = load i8, i8* %17, align 8, !range !17
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %137, label %20

20:                                               ; preds = %1
  %21 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %22 = inttoptr i64 %21 to %"class.base::HistogramBase"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #18
  %26 = ptrtoint %"class.base::HistogramBase"* %25 to i64
  store atomic i64 %26, i64* @_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %27

27:                                               ; preds = %20, %24
  %28 = phi %"class.base::HistogramBase"* [ %22, %20 ], [ %25, %24 ]
  %29 = bitcast %"class.base::HistogramBase"* %28 to void (%"class.base::HistogramBase"*, i32)***
  %30 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %30, i64 6
  %32 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %31, align 8
  call void %32(%"class.base::HistogramBase"* %28, i32 3) #18
  %33 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %34 = bitcast %"class.base::OnceCallback.479"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %36 = load %"class.net::DnsServerIterator"*, %"class.net::DnsServerIterator"** %35, align 8
  %37 = bitcast %"class.net::DnsServerIterator"* %36 to i64 (%"class.net::DnsServerIterator"*)***
  %38 = load i64 (%"class.net::DnsServerIterator"*)**, i64 (%"class.net::DnsServerIterator"*)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.net::DnsServerIterator"*)*, i64 (%"class.net::DnsServerIterator"*)** %38, i64 2
  %40 = load i64 (%"class.net::DnsServerIterator"*)*, i64 (%"class.net::DnsServerIterator"*)** %39, align 8
  %41 = call i64 %40(%"class.net::DnsServerIterator"* %36) #18
  %42 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16
  %43 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 1
  %44 = bitcast %"class.std::__1::unique_ptr.398"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.396"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = lshr exact i64 %48, 3
  %50 = trunc i64 %49 to i32
  %51 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %52 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0
  %53 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %52, i64 %54) #18
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %27
  %61 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %61, i64 24, i1 false) #18
  br label %67

62:                                               ; preds = %27
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %64, i64 %66) #18
  br label %67

67:                                               ; preds = %62, %60
  %68 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 4
  %69 = load i16, i16* %68, align 8
  %70 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 6
  %71 = load %"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"** %70, align 8
  %72 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 23
  %73 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %72, align 8
  %74 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %73, i64 0, i32 1
  %75 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %74, align 8
  %76 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %73, i64 0, i32 10
  %77 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 24
  %78 = load i32, i32* %77, align 8
  call fastcc void @_ZN3net12_GLOBAL__N_123ConstructDnsHTTPAttemptEPNS_10DnsSessionEmNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtPKNS_14OptRecordRdataEPNS3_6vectorINS3_10unique_ptrINS0_10DnsAttemptENS3_14default_deleteISF_EEEENS7_ISI_EEEEPNS_17URLRequestContextERKNS_13IsolationInfoENS_15RequestPriorityE(%"class.net::DnsSession"* %51, i64 %41, %"class.std::__1::basic_string"* nonnull %3, i16 zeroext %69, %"class.net::OptRecordRdata"* %71, %"class.std::__1::vector.396"* %42, %"class.net::URLRequestContext"* %75, %"class.net::IsolationInfo"* dereferenceable(496) %76, i32 %78) #18
  %79 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %67
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #20
  br label %86

86:                                               ; preds = %83, %67
  %87 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 17
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %87, align 8
  %90 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %43, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -1, i32 0, i32 0, i32 0
  %92 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %91, align 8
  %93 = ptrtoint %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0 to i64
  %94 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %95 = call i8* @_Znwm(i64 72) #20, !noalias !47
  %96 = bitcast i8* %95 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %96, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EEjbS6_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS4_EEjbS5_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !47
  %97 = getelementptr inbounds i8, i8* %95, i64 32
  %98 = bitcast i8* %97 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl17OnAttemptCompleteEjbN4base9TimeTicksEi to i64), i64 0>, <2 x i64>* %98, align 8, !noalias !47
  %99 = getelementptr inbounds i8, i8* %95, i64 48
  %100 = bitcast i8* %99 to i64*
  store i64 %93, i64* %100, align 8, !noalias !47
  %101 = getelementptr inbounds i8, i8* %95, i64 56
  %102 = bitcast i8* %101 to i32*
  store i32 %50, i32* %102, align 4, !noalias !47
  %103 = getelementptr inbounds i8, i8* %95, i64 60
  store i8 1, i8* %103, align 1, !noalias !47
  %104 = getelementptr inbounds i8, i8* %95, i64 64
  %105 = bitcast i8* %104 to i64*
  store i64 %94, i64* %105, align 8, !noalias !47
  %106 = bitcast %"class.base::OnceCallback.479"* %4 to i8**
  store i8* %95, i8** %106, align 8, !alias.scope !47
  %107 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %92 to i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)***
  %108 = load i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)**, i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)*** %107, align 8
  %109 = getelementptr inbounds i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)** %108, i64 2
  %110 = load i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)** %109, align 8
  %111 = call i32 %110(%"class.net::(anonymous namespace)::DnsAttempt"* %92, %"class.base::OnceCallback.479"* nonnull %4) #18
  %112 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %112) #18
  %113 = icmp eq i32 %111, -1
  br i1 %113, label %114, label %133

114:                                              ; preds = %86
  %115 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %72, align 8
  %116 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %117 = call i64 @_ZN3net14ResolveContext21NextDohFallbackPeriodEmPKNS_10DnsSessionE(%"class.net::ResolveContext"* %115, i64 %41, %"class.net::DnsSession"* %116) #18
  %118 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 21
  %119 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1318) #18
  %120 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #18
  %121 = call i8* @_Znwm(i64 56) #20, !noalias !52
  %122 = bitcast i8* %121 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %122, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !52
  %123 = getelementptr inbounds i8, i8* %121, i64 32
  %124 = bitcast i8* %123 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl23OnFallbackPeriodExpiredEv to i64), i64 0>, <2 x i64>* %124, align 8, !noalias !52
  %125 = getelementptr inbounds i8, i8* %121, i64 48
  %126 = bitcast i8* %125 to i64*
  store i64 %93, i64* %126, align 8, !noalias !52
  %127 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %121, i8** %127, align 8, !alias.scope !52
  %128 = bitcast %"class.base::OneShotTimer"* %118 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %129 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %129, i64 7
  %131 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %130, align 8
  call void %131(%"class.base::OneShotTimer"* %118, %"class.base::Location"* nonnull dereferenceable(32) %5, i64 %117, %"class.base::OnceCallback"* nonnull %2) #18
  %132 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %132) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #18
  br label %133

133:                                              ; preds = %86, %114
  %134 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %43, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %134, i64 -1, i32 0, i32 0, i32 0
  %136 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %135, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  br label %333

137:                                              ; preds = %1
  %138 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %139 = call zeroext i16 @_ZNK3net10DnsSession11NextQueryIdEv(%"class.net::DnsSession"* %138) #18
  %140 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16
  %141 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %140, i64 0, i32 0, i32 0
  %142 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %141, align 8
  %143 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 1
  %144 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %143, align 8
  %145 = icmp eq %"class.std::__1::unique_ptr.398"* %142, %144
  br i1 %145, label %146, label %172

146:                                              ; preds = %137
  %147 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 0
  %148 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 14, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer.395"* %147, i64 %149) #18
  %151 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 4
  %152 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 6
  %153 = call i8* @_Znwm(i64 24) #20
  %154 = bitcast i8* %153 to %"class.net::DnsQuery"*
  %155 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #18
  %156 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %157 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  %164 = select i1 %160, i8* %162, i8* %163
  store i8* %164, i8** %156, align 8
  %165 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = zext i8 %159 to i64
  %169 = select i1 %160, i64 %167, i64 %168
  store i64 %169, i64* %165, align 8
  %170 = load i16, i16* %151, align 2
  %171 = load %"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"** %152, align 8
  call void @_ZN3net8DnsQueryC1EtRKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtPKNS_14OptRecordRdataENS0_15PaddingStrategyE(%"class.net::DnsQuery"* nonnull %154, i16 zeroext %139, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9, i16 zeroext %170, %"class.net::OptRecordRdata"* %171, i32 0) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #18
  br label %181

172:                                              ; preds = %137
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %142, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %173, align 8
  %175 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %174 to %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %176 = load %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %175, align 8
  %177 = getelementptr inbounds %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %176, i64 3
  %178 = load %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %177, align 8
  %179 = call %"class.net::DnsQuery"* %178(%"class.net::(anonymous namespace)::DnsAttempt"* %174) #18
  %180 = call %"class.net::DnsQuery"* @_ZNK3net8DnsQuery14CloneWithNewIdEt(%"class.net::DnsQuery"* %179, i16 zeroext %139) #18
  br label %181

181:                                              ; preds = %172, %146
  %182 = phi %"class.net::DnsQuery"* [ %154, %146 ], [ %180, %172 ]
  %183 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %184 = load %"class.net::DnsServerIterator"*, %"class.net::DnsServerIterator"** %183, align 8
  %185 = bitcast %"class.net::DnsServerIterator"* %184 to i64 (%"class.net::DnsServerIterator"*)***
  %186 = load i64 (%"class.net::DnsServerIterator"*)**, i64 (%"class.net::DnsServerIterator"*)*** %185, align 8
  %187 = getelementptr inbounds i64 (%"class.net::DnsServerIterator"*)*, i64 (%"class.net::DnsServerIterator"*)** %186, i64 2
  %188 = load i64 (%"class.net::DnsServerIterator"*)*, i64 (%"class.net::DnsServerIterator"*)** %187, align 8
  %189 = call i64 %188(%"class.net::DnsServerIterator"* %184) #18
  %190 = bitcast %"class.std::__1::unique_ptr.398"** %143 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.std::__1::vector.396"* %140 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %191, %193
  %195 = lshr exact i64 %194, 3
  %196 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %197 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %196, i64 0, i32 3, i32 0
  %198 = load i8, i8* %197, align 8, !range !17
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %216, label %200

200:                                              ; preds = %181
  %201 = call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl14MakeTcpAttemptEmNSt3__110unique_ptrINS_8DnsQueryENS2_14default_deleteIS4_EEEE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 %189, %"class.net::DnsQuery"* %182) #18
  %202 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %201, 0
  %203 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %201, 1
  %204 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %205 = inttoptr i64 %204 to %"class.base::HistogramBase"*
  %206 = icmp eq i64 %204, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %200
  %208 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #18
  %209 = ptrtoint %"class.base::HistogramBase"* %208 to i64
  store atomic i64 %209, i64* @_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %210

210:                                              ; preds = %207, %200
  %211 = phi %"class.base::HistogramBase"* [ %205, %200 ], [ %208, %207 ]
  %212 = bitcast %"class.base::HistogramBase"* %211 to void (%"class.base::HistogramBase"*, i32)***
  %213 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %212, align 8
  %214 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %213, i64 6
  %215 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %214, align 8
  call void %215(%"class.base::HistogramBase"* %211, i32 1) #18
  br label %307

216:                                              ; preds = %181
  %217 = ptrtoint %"class.net::DnsQuery"* %182 to i64
  %218 = bitcast %"class.base::OnceCallback.479"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #18
  %219 = ashr exact i64 %194, 3
  %220 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #18
  store i32 0, i32* %6, align 4
  %221 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %196, i64 0, i32 2, i32 0, i32 0, i32 0
  %222 = load %"class.net::DnsSocketAllocator"*, %"class.net::DnsSocketAllocator"** %221, align 8
  %223 = call %"class.net::DatagramClientSocket"* @_ZN3net18DnsSocketAllocator24CreateConnectedUdpSocketEmPi(%"class.net::DnsSocketAllocator"* %222, i64 %189, i32* nonnull %6) #18
  %224 = ptrtoint %"class.net::DatagramClientSocket"* %223 to i64
  %225 = icmp eq %"class.net::DatagramClientSocket"* %223, null
  %226 = call i8* @_Znwm(i64 72) #20
  %227 = bitcast i8* %226 to %"class.net::(anonymous namespace)::DnsUDPAttempt"*
  %228 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %229 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %228, i64 0, i32 3
  %230 = bitcast i8* %226 to i32 (...)***
  %231 = getelementptr inbounds i8, i8* %226, i64 8
  %232 = bitcast i8* %231 to i64*
  store i64 %189, i64* %232, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net12_GLOBAL__N_113DnsUDPAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %230, align 8
  %233 = getelementptr inbounds i8, i8* %226, i64 16
  %234 = bitcast i8* %233 to i32*
  store i32 4, i32* %234, align 8
  %235 = getelementptr inbounds i8, i8* %226, i64 24
  %236 = bitcast i8* %235 to i64*
  store i64 0, i64* %236, align 8
  %237 = getelementptr inbounds i8, i8* %226, i64 32
  %238 = bitcast i8* %237 to i64*
  store i64 %224, i64* %238, align 8
  %239 = getelementptr inbounds i8, i8* %226, i64 40
  %240 = bitcast i8* %239 to i64*
  store i64 %217, i64* %240, align 8
  %241 = getelementptr inbounds i8, i8* %226, i64 48
  %242 = bitcast i8* %241 to %"class.net::DnsUdpTracker"**
  store %"class.net::DnsUdpTracker"* %229, %"class.net::DnsUdpTracker"** %242, align 8
  %243 = getelementptr inbounds i8, i8* %226, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 16, i1 false) #18
  %244 = bitcast %"class.std::__1::unique_ptr.398"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #18
  %245 = ptrtoint i8* %226 to i64
  %246 = bitcast %"class.std::__1::unique_ptr.398"* %7 to i64*
  store i64 %245, i64* %246, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN3net12_GLOBAL__N_110DnsAttemptENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE9push_backEOS7_(%"class.std::__1::vector.396"* %140, %"class.std::__1::unique_ptr.398"* nonnull dereferenceable(8) %7) #18
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %7, i64 0, i32 0, i32 0, i32 0
  %248 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %247, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %247, align 8
  %249 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %216
  %251 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %248 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %252 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %252, i64 1
  %254 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %253, align 8
  call void %254(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %248) #18
  br label %255

255:                                              ; preds = %250, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #18
  %256 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 17
  %257 = load i32, i32* %256, align 8
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %256, align 8
  br i1 %225, label %259, label %263

259:                                              ; preds = %255
  %260 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %261 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %260, i64 0, i32 3
  %262 = load i32, i32* %6, align 4
  call void @_ZN3net13DnsUdpTracker21RecordConnectionErrorEi(%"class.net::DnsUdpTracker"* %261, i32 %262) #18
  br label %292

263:                                              ; preds = %255
  %264 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13
  %265 = bitcast i8* %226 to %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)***
  %266 = load %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)**, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)*** %265, align 8
  %267 = getelementptr inbounds %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)*, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)** %266, i64 5
  %268 = load %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)*, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsUDPAttempt"*)** %267, align 8
  %269 = call dereferenceable(24) %"class.net::NetLogWithSource"* %268(%"class.net::(anonymous namespace)::DnsUDPAttempt"* nonnull %227) #18
  %270 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %269, i64 0, i32 0
  call void @_ZNK3net16NetLogWithSource25AddEventReferencingSourceENS_15NetLogEventTypeERKNS_12NetLogSourceE(%"class.net::NetLogWithSource"* %264, i32 371, %"struct.net::NetLogSource"* dereferenceable(16) %270) #18
  %271 = ptrtoint %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0 to i64
  %272 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %273 = call i8* @_Znwm(i64 80) #20, !noalias !57
  %274 = bitcast i8* %273 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %274, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EEmbS6_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS4_EEmbS5_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !57
  %275 = getelementptr inbounds i8, i8* %273, i64 32
  %276 = bitcast i8* %275 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl17OnAttemptCompleteEjbN4base9TimeTicksEi to i64), i64 0>, <2 x i64>* %276, align 8, !noalias !57
  %277 = getelementptr inbounds i8, i8* %273, i64 48
  %278 = bitcast i8* %277 to i64*
  store i64 %271, i64* %278, align 8, !noalias !57
  %279 = getelementptr inbounds i8, i8* %273, i64 56
  %280 = bitcast i8* %279 to i64*
  store i64 %219, i64* %280, align 8, !noalias !57
  %281 = getelementptr inbounds i8, i8* %273, i64 64
  store i8 1, i8* %281, align 1, !noalias !57
  %282 = getelementptr inbounds i8, i8* %273, i64 72
  %283 = bitcast i8* %282 to i64*
  store i64 %272, i64* %283, align 8, !noalias !57
  %284 = bitcast %"class.base::OnceCallback.479"* %8 to i8**
  store i8* %273, i8** %284, align 8, !alias.scope !57
  %285 = bitcast i8* %226 to i32 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*)***
  %286 = load i32 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*)**, i32 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*)*** %285, align 8
  %287 = getelementptr inbounds i32 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*)** %286, i64 2
  %288 = load i32 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*)** %287, align 8
  %289 = call i32 %288(%"class.net::(anonymous namespace)::DnsUDPAttempt"* nonnull %227, %"class.base::OnceCallback.479"* nonnull %8) #18
  %290 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %290) #18
  %291 = bitcast i8* %226 to %"class.net::(anonymous namespace)::DnsAttempt"*
  br label %292

292:                                              ; preds = %263, %259
  %293 = phi i32 [ -102, %259 ], [ %289, %263 ]
  %294 = phi %"class.net::(anonymous namespace)::DnsAttempt"* [ null, %259 ], [ %291, %263 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #18
  %295 = load atomic i64, i64* @_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %296 = inttoptr i64 %295 to %"class.base::HistogramBase"*
  %297 = icmp eq i64 %295, 0
  br i1 %297, label %298, label %301

298:                                              ; preds = %292
  %299 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #18
  %300 = ptrtoint %"class.base::HistogramBase"* %299 to i64
  store atomic i64 %300, i64* @_ZZN3net12_GLOBAL__N_118DnsTransactionImpl16RecordAttemptUmaENS1_14DnsAttemptTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %301

301:                                              ; preds = %298, %292
  %302 = phi %"class.base::HistogramBase"* [ %296, %292 ], [ %299, %298 ]
  %303 = bitcast %"class.base::HistogramBase"* %302 to void (%"class.base::HistogramBase"*, i32)***
  %304 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %304, i64 6
  %306 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %305, align 8
  call void %306(%"class.base::HistogramBase"* %302, i32 0) #18
  br label %307

307:                                              ; preds = %301, %210
  %308 = phi i32 [ %202, %210 ], [ %293, %301 ]
  %309 = phi %"class.net::(anonymous namespace)::DnsAttempt"* [ %203, %210 ], [ %294, %301 ]
  %310 = icmp eq i32 %308, -1
  br i1 %310, label %311, label %333

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 23
  %313 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %312, align 8
  %314 = trunc i64 %195 to i32
  %315 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %14, align 8
  %316 = call i64 @_ZN3net14ResolveContext25NextClassicFallbackPeriodEmiPKNS_10DnsSessionE(%"class.net::ResolveContext"* %313, i64 %189, i32 %314, %"class.net::DnsSession"* %315) #18
  %317 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 21
  %318 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %318) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1257) #18
  %319 = bitcast %"class.base::OnceCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #18
  %320 = ptrtoint %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0 to i64
  %321 = call i8* @_Znwm(i64 56) #20, !noalias !62
  %322 = bitcast i8* %321 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %322, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !62
  %323 = getelementptr inbounds i8, i8* %321, i64 32
  %324 = bitcast i8* %323 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl23OnFallbackPeriodExpiredEv to i64), i64 0>, <2 x i64>* %324, align 8, !noalias !62
  %325 = getelementptr inbounds i8, i8* %321, i64 48
  %326 = bitcast i8* %325 to i64*
  store i64 %320, i64* %326, align 8, !noalias !62
  %327 = bitcast %"class.base::OnceCallback"* %10 to i8**
  store i8* %321, i8** %327, align 8, !alias.scope !62
  %328 = bitcast %"class.base::OneShotTimer"* %317 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %329 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %328, align 8
  %330 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %329, i64 7
  %331 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %330, align 8
  call void %331(%"class.base::OneShotTimer"* %317, %"class.base::Location"* nonnull dereferenceable(32) %11, i64 %316, %"class.base::OnceCallback"* nonnull %10) #18
  %332 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %332) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %318) #18
  br label %333

333:                                              ; preds = %311, %307, %133
  %334 = phi i32 [ %111, %133 ], [ %308, %307 ], [ -1, %311 ]
  %335 = phi %"class.net::(anonymous namespace)::DnsAttempt"* [ %136, %133 ], [ %309, %307 ], [ %309, %311 ]
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %13) #18
  %336 = insertvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } undef, i32 %334, 0
  %337 = insertvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %336, %"class.net::(anonymous namespace)::DnsAttempt"* %335, 1
  ret { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %337
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl17StartTimeoutTimerEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !17
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 23
  %11 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %10, align 8
  br i1 %9, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 9
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %16 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %15, align 8
  %17 = tail call i64 @_ZN3net14ResolveContext24SecureTransactionTimeoutENS_13SecureDnsModeEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %11, i32 %14, %"class.net::DnsSession"* %16) #18
  br label %22

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %20 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %19, align 8
  %21 = tail call i64 @_ZN3net14ResolveContext25ClassicTransactionTimeoutEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %11, %"class.net::DnsSession"* %20) #18
  br label %22

22:                                               ; preds = %18, %12
  %23 = phi i64 [ %17, %12 ], [ %21, %18 ]
  store i64 %23, i64* %6, align 8
  %24 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %25 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %24, align 8
  %26 = tail call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* %25) #18
  %27 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %26) #18
  store i64 %27, i64* %6, align 8
  %28 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 21
  %29 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 1588) #18
  %30 = load i64, i64* %6, align 8
  %31 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  %32 = ptrtoint %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0 to i64
  %33 = call i8* @_Znwm(i64 56) #20, !noalias !67
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !67
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl9OnTimeoutEv to i64), i64 0>, <2 x i64>* %36, align 8, !noalias !67
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  %38 = bitcast i8* %37 to i64*
  store i64 %32, i64* %38, align 8, !noalias !67
  %39 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %33, i8** %39, align 8, !alias.scope !67
  %40 = bitcast %"class.base::OneShotTimer"* %28 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %41 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %41, i64 7
  %43 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %42, align 8
  call void %43(%"class.base::OneShotTimer"* %28, %"class.base::Location"* nonnull dereferenceable(32) %4, i64 %30, %"class.base::OnceCallback"* nonnull %2) #18
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  ret void
}

declare zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"*) local_unnamed_addr #7

declare i32 @_ZNK3net11DnsResponse12answer_countEv(%"class.net::DnsResponse"*) local_unnamed_addr #7

declare void @_ZNK3net12NetLogSource20AddToEventParametersEPN4base5ValueE(%"struct.net::NetLogSource"*, %"class.base::Value"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.394"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer.395"*
  %4 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #18
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 24) #18
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #18
  br i1 %31, label %32, label %33, !prof !46

32:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer.395", %"class.base::internal::VectorBuffer.395"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #18
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque.394", %"class.base::circular_deque.394"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer.395"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer.395"* nonnull %3, i64* %11, i64* %13) #18
  %39 = bitcast %"class.base::circular_deque.394"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #18
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque.394"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #18
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

declare void @_ZN3net9DnsConfigC1ERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"*) unnamed_addr #8

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_123ConstructDnsHTTPAttemptEPNS_10DnsSessionEmNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtPKNS_14OptRecordRdataEPNS3_6vectorINS3_10unique_ptrINS0_10DnsAttemptENS3_14default_deleteISF_EEEENS7_ISI_EEEEPNS_17URLRequestContextERKNS_13IsolationInfoENS_15RequestPriorityE(%"class.net::DnsSession"* nocapture readonly, i64, %"class.std::__1::basic_string"*, i16 zeroext, %"class.net::OptRecordRdata"*, %"class.std::__1::vector.396"*, %"class.net::URLRequestContext"*, %"class.net::IsolationInfo"* dereferenceable(496), i32) unnamed_addr #0 {
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::unordered_map.634", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.base::BasicStringPiece", align 8
  %15 = alloca %class.GURL, align 8
  %16 = alloca %"class.net::HttpRequestHeaders", align 8
  %17 = alloca %"class.base::BasicStringPiece", align 8
  %18 = alloca %"class.base::BasicStringPiece", align 8
  %19 = alloca %"class.base::BasicStringPiece", align 8
  %20 = alloca %"class.base::BasicStringPiece", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.base::BasicStringPiece", align 8
  %23 = alloca %"class.base::BasicStringPiece", align 8
  %24 = alloca %class.GURL, align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::unique_ptr.398", align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %5, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %5, i64 0, i32 0, i32 1
  %30 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %29, align 8
  %31 = icmp eq %"class.std::__1::unique_ptr.398"* %28, %30
  br i1 %31, label %32, label %50

32:                                               ; preds = %9
  %33 = tail call i8* @_Znwm(i64 24) #20
  %34 = bitcast i8* %33 to %"class.net::DnsQuery"*
  %35 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %44 = select i1 %40, i8* %42, i8* %43
  store i8* %44, i8** %36, align 8
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %39 to i64
  %49 = select i1 %40, i64 %47, i64 %48
  store i64 %49, i64* %45, align 8
  call void @_ZN3net8DnsQueryC1EtRKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtPKNS_14OptRecordRdataENS0_15PaddingStrategyE(%"class.net::DnsQuery"* nonnull %34, i16 zeroext 0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %23, i16 zeroext %3, %"class.net::OptRecordRdata"* %4, i32 1) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #18
  br label %60

50:                                               ; preds = %9
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %28, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %51, align 8
  %53 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %52 to %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %54 = load %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %54, i64 3
  %56 = load %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsQuery"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %55, align 8
  %57 = tail call %"class.net::DnsQuery"* %56(%"class.net::(anonymous namespace)::DnsAttempt"* %52) #18
  %58 = tail call i8* @_Znwm(i64 24) #20
  %59 = bitcast i8* %58 to %"class.net::DnsQuery"*
  tail call void @_ZN3net8DnsQueryC1ERKS0_(%"class.net::DnsQuery"* nonnull %59, %"class.net::DnsQuery"* dereferenceable(24) %57) #18
  br label %60

60:                                               ; preds = %50, %32
  %61 = phi i8* [ %33, %32 ], [ %58, %50 ]
  %62 = ptrtoint i8* %61 to i64
  %63 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %0, i64 0, i32 1, i32 13, i32 0, i32 0
  %64 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %63, align 8
  %65 = bitcast %class.GURL* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %65) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 120, i1 false)
  %66 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #18
  %67 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %64, i64 %1, i32 0
  call void @_ZN3net35GetURLFromTemplateWithoutParametersERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %25, %"class.std::__1::basic_string"* dereferenceable(24) %67) #18
  %68 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = select i1 %71, i8* %73, i8* %66
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %70 to i64
  %78 = select i1 %71, i64 %76, i64 %77
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %24, i8* %74, i64 %78) #18
  %79 = load i8, i8* %69, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %60
  %82 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %82) #20
  br label %83

83:                                               ; preds = %60, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #18
  %84 = bitcast %"class.std::__1::unique_ptr.398"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #18
  %85 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %64, i64 %1, i32 1
  %86 = call i8* @_Znwm(i64 104) #20
  %87 = load i8, i8* %85, align 1, !range !17
  %88 = icmp ne i8 %87, 0
  %89 = bitcast i8* %86 to i32 (...)***
  %90 = getelementptr inbounds i8, i8* %86, i64 8
  %91 = bitcast i8* %90 to i64*
  store i64 %1, i64* %91, align 8
  %92 = getelementptr inbounds i8, i8* %86, i64 16
  %93 = bitcast i8* %92 to %"class.net::URLRequest::Delegate"*
  %94 = bitcast i8* %92 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN3net12_GLOBAL__N_114DnsHTTPAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN3net12_GLOBAL__N_114DnsHTTPAttemptE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %86, i64 24
  %96 = bitcast i8* %95 to %"class.net::GrowableIOBuffer"**
  store %"class.net::GrowableIOBuffer"* null, %"class.net::GrowableIOBuffer"** %96, align 8
  %97 = getelementptr inbounds i8, i8* %86, i64 32
  %98 = bitcast i8* %97 to i64*
  store i64 %62, i64* %98, align 8
  %99 = getelementptr inbounds i8, i8* %86, i64 40
  %100 = getelementptr inbounds i8, i8* %86, i64 56
  %101 = bitcast i8* %100 to i64*
  %102 = getelementptr inbounds i8, i8* %86, i64 64
  %103 = bitcast i8* %102 to %"class.net::NetLogWithSource"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #18
  call void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"* %103) #18
  %104 = getelementptr inbounds i8, i8* %86, i64 88
  %105 = bitcast i8* %104 to %"class.base::internal::WeakPtrFactoryBase"*
  %106 = ptrtoint i8* %86 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %105, i64 %106) #18
  %107 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %107) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 120, i1 false) #18
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %10) #18
  br i1 %88, label %108, label %110

108:                                              ; preds = %83
  %109 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* nonnull %10, %class.GURL* nonnull dereferenceable(120) %24) #18
  br label %194

110:                                              ; preds = %83
  %111 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #18
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 24, i1 false) #18
  %114 = bitcast %"class.std::__1::unordered_map.634"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %114) #18
  %115 = getelementptr inbounds %"class.std::__1::unordered_map.634", %"class.std::__1::unordered_map.634"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.std::__1::unordered_map.634", %"class.std::__1::unordered_map.634"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::unordered_map.634", %"class.std::__1::unordered_map.634"* %12, i64 0, i32 0, i32 4, i64 0
  %118 = getelementptr inbounds %"class.std::__1::unordered_map.634", %"class.std::__1::unordered_map.634"* %12, i64 0, i32 0, i32 3
  %119 = bitcast %"class.std::__1::__compressed_pair.654"* %118 to i32*
  %120 = bitcast i8* %117 to i32*
  store i32 -1431655766, i32* %120, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 32, i1 false) #18
  store i32 1065353216, i32* %119, align 8
  %121 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 24, i1 false) #18
  %122 = bitcast %"class.base::BasicStringPiece"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #18
  %123 = bitcast i8* %97 to %"class.net::DnsQuery"**
  %124 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %123, align 8
  %125 = getelementptr inbounds %"class.net::DnsQuery", %"class.net::DnsQuery"* %124, i64 0, i32 1, i32 0
  %126 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %125, align 8
  %127 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %126, i64 0, i32 0, i32 2
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %126, i64 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = sext i32 %131 to i64
  %133 = bitcast %"class.base::BasicStringPiece"* %14 to i64*
  store i64 %129, i64* %133, align 8
  %134 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 1
  store i64 %132, i64* %134, align 8
  call void @_ZN4base15Base64UrlEncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_21Base64UrlEncodePolicyEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %14, i32 1, %"class.std::__1::basic_string"* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #18
  %135 = getelementptr inbounds %"class.std::__1::unordered_map.634", %"class.std::__1::unordered_map.634"* %12, i64 0, i32 0
  %136 = call { %"struct.std::__1::__hash_node_base.639"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__emplace_unique_implIJRA4_KcRS7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEEDpOT_(%"class.std::__1::__hash_table.635"* nonnull %135, [4 x i8]* nonnull dereferenceable(4) @.str.16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #18
  %137 = call zeroext i1 @_ZN12uri_template6ExpandERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_13unordered_mapIS6_S6_NS0_4hashIS6_EENS0_8equal_toIS6_EENS4_INS0_4pairIS7_S6_EEEEEEPS6_PNS0_3setIS6_NS0_4lessIS6_EENS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24) %67, %"class.std::__1::unordered_map.634"* nonnull dereferenceable(40) %12, %"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::set.250"* null) #18
  %138 = bitcast %class.GURL* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %138) #18
  %139 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  %143 = load i8*, i8** %112, align 8
  %144 = select i1 %142, i8* %143, i8* %111
  %145 = load i64, i64* %113, align 8
  %146 = zext i8 %141 to i64
  %147 = select i1 %142, i64 %145, i64 %146
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %15, i8* %144, i64 %147) #18
  %148 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %10, %class.GURL* nonnull dereferenceable(120) %15) #18
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %138) #18
  %149 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %110
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %155) #20
  br label %156

156:                                              ; preds = %153, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #18
  %157 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %116, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.639"* %157, null
  br i1 %158, label %183, label %159

159:                                              ; preds = %156, %180
  %160 = phi %"struct.std::__1::__hash_node_base.639"* [ %162, %180 ], [ %157, %156 ]
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %160, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %160, i64 2
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %160, i64 5
  %165 = bitcast %"struct.std::__1::__hash_node_base.639"* %164 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %159
  %170 = bitcast %"struct.std::__1::__hash_node_base.639"* %164 to i8**
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #20
  br label %172

172:                                              ; preds = %169, %159
  %173 = bitcast %"struct.std::__1::__hash_node_base.639"* %163 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = bitcast %"struct.std::__1::__hash_node_base.639"* %163 to i8**
  %179 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %179) #20
  br label %180

180:                                              ; preds = %177, %172
  %181 = bitcast %"struct.std::__1::__hash_node_base.639"* %160 to i8*
  call void @_ZdlPv(i8* %181) #20
  %182 = icmp eq %"struct.std::__1::__hash_node_base.639"* %162, null
  br i1 %182, label %183, label %159

183:                                              ; preds = %180, %156
  %184 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %115, align 8
  store %"struct.std::__1::__hash_node_base.639"** null, %"struct.std::__1::__hash_node_base.639"*** %115, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.639"** %184, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %183
  %187 = bitcast %"struct.std::__1::__hash_node_base.639"** %184 to i8*
  call void @_ZdlPv(i8* %187) #20
  br label %188

188:                                              ; preds = %186, %183
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %114) #18
  %189 = load i8, i8* %140, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %191, label %193

191:                                              ; preds = %188
  %192 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %192) #20
  br label %193

193:                                              ; preds = %191, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #18
  br label %194

194:                                              ; preds = %193, %108
  %195 = bitcast %"class.net::HttpRequestHeaders"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 24, i1 false) #18
  call void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"* nonnull %16) #18
  %196 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #18
  %197 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kAcceptE, i64 0, i64 0), i8** %197, align 8
  %198 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  %199 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kAcceptE, i64 0, i64 0)) #18
  store i64 %199, i64* %198, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* nonnull %16, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %17, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #18
  %200 = bitcast %"class.base::BasicStringPiece"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %200) #18
  %201 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders15kAcceptLanguageE, i64 0, i64 0), i8** %201, align 8
  %202 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 1
  %203 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders15kAcceptLanguageE, i64 0, i64 0)) #18
  store i64 %203, i64* %202, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* nonnull %16, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %18, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.18) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %200) #18
  %204 = bitcast %"class.base::BasicStringPiece"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #18
  %205 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders10kUserAgentE, i64 0, i64 0), i8** %205, align 8
  %206 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 1
  %207 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders10kUserAgentE, i64 0, i64 0)) #18
  store i64 %207, i64* %206, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* nonnull %16, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %19, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.20) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #18
  %208 = bitcast %"class.base::BasicStringPiece"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #18
  %209 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders15kAcceptEncodingE, i64 0, i64 0), i8** %209, align 8
  %210 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 0, i32 1
  %211 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders15kAcceptEncodingE, i64 0, i64 0)) #18
  store i64 %211, i64* %210, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* nonnull %16, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %20, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.22) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #18
  %212 = call %"class.net::URLRequest"* @_ZNK3net17URLRequestContext13CreateRequestERK4GURLNS_15RequestPriorityEPNS_10URLRequest8DelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLRequestContext"* %6, %class.GURL* nonnull dereferenceable(120) %10, i32 %8, %"class.net::URLRequest::Delegate"* %93, i32 79895226) #18
  %213 = ptrtoint %"class.net::URLRequest"* %212 to i64
  %214 = bitcast i8* %100 to %"class.net::URLRequest"**
  %215 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  store i64 %213, i64* %101, align 8
  %216 = icmp eq %"class.net::URLRequest"* %215, null
  br i1 %216, label %223, label %217

217:                                              ; preds = %194
  %218 = bitcast %"class.net::URLRequest"* %215 to void (%"class.net::URLRequest"*)***
  %219 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %219, i64 1
  %221 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %220, align 8
  call void %221(%"class.net::URLRequest"* nonnull %215) #18
  %222 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  br label %223

223:                                              ; preds = %217, %194
  %224 = phi %"class.net::URLRequest"* [ %222, %217 ], [ %212, %194 ]
  %225 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %224, i64 0, i32 2
  %226 = bitcast %"class.net::NetLogWithSource"* %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %226, i64 24, i1 false) #18
  br i1 %88, label %227, label %260

227:                                              ; preds = %223
  %228 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #18
  %229 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  store i8 4, i8* %230, align 1
  %231 = bitcast %"class.std::__1::basic_string"* %21 to i32*
  store i32 1414745936, i32* %231, align 8
  %232 = getelementptr inbounds i8, i8* %228, i64 4
  store i8 0, i8* %232, align 4
  call void @_ZN3net10URLRequest10set_methodERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"* %224, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #18
  %233 = load i8, i8* %230, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #20
  br label %238

238:                                              ; preds = %235, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #18
  %239 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  %240 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %239, i64 0, i32 50
  store i32 1, i32* %240, align 4
  %241 = bitcast i8* %97 to %"class.net::DnsQuery"**
  %242 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %241, align 8
  %243 = getelementptr inbounds %"class.net::DnsQuery", %"class.net::DnsQuery"* %242, i64 0, i32 1, i32 0
  %244 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %243, align 8
  %245 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %244, i64 0, i32 0, i32 2
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %244, i64 0, i32 1
  %248 = load i32, i32* %247, align 8
  %249 = call i8* @_Znwm(i64 32) #20
  %250 = bitcast i8* %249 to %"class.net::UploadBytesElementReader"*
  %251 = sext i32 %248 to i64
  call void @_ZN3net24UploadBytesElementReaderC1EPKcm(%"class.net::UploadBytesElementReader"* nonnull %250, i8* %246, i64 %251) #18
  %252 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  %253 = bitcast i8* %249 to %"class.net::UploadElementReader"*
  %254 = call %"class.net::UploadDataStream"* @_ZN3net24ElementsUploadDataStream16CreateWithReaderENSt3__110unique_ptrINS_19UploadElementReaderENS1_14default_deleteIS3_EEEEl(%"class.net::UploadElementReader"* nonnull %253, i64 0) #18
  call void @_ZN3net10URLRequest10set_uploadENSt3__110unique_ptrINS_16UploadDataStreamENS1_14default_deleteIS3_EEEE(%"class.net::URLRequest"* %252, %"class.net::UploadDataStream"* %254) #18
  %255 = bitcast %"class.base::BasicStringPiece"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #18
  %256 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %22, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders12kContentTypeE, i64 0, i64 0), i8** %256, align 8
  %257 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %22, i64 0, i32 1
  %258 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders12kContentTypeE, i64 0, i64 0)) #18
  store i64 %258, i64* %257, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* nonnull %16, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %22, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.26) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #18
  %259 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  br label %260

260:                                              ; preds = %223, %238
  %261 = phi %"class.net::URLRequest"* [ %224, %223 ], [ %259, %238 ]
  call void @_ZN3net10URLRequest22SetExtraRequestHeadersERKNS_18HttpRequestHeadersE(%"class.net::URLRequest"* %261, %"class.net::HttpRequestHeaders"* nonnull dereferenceable(24) %16) #18
  %262 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  call void @_ZN3net10URLRequest18SetSecureDnsPolicyENS_15SecureDnsPolicyE(%"class.net::URLRequest"* %262, i32 1) #18
  %263 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  %264 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %263, i64 0, i32 18
  %265 = load i32, i32* %264, align 8
  %266 = or i32 %265, 144
  call void @_ZN3net10URLRequest12SetLoadFlagsEi(%"class.net::URLRequest"* %263, i32 %266) #18
  %267 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  call void @_ZN3net10URLRequest21set_allow_credentialsEb(%"class.net::URLRequest"* %267, i1 zeroext false) #18
  %268 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %214, align 8
  %269 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %268, i64 0, i32 7
  %270 = call dereferenceable(496) %"class.net::IsolationInfo"* @_ZN3net13IsolationInfoaSERKS0_(%"class.net::IsolationInfo"* %269, %"class.net::IsolationInfo"* dereferenceable(496) %7) #18
  call void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"* nonnull %16) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #18
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %107) #18
  %271 = bitcast %"class.std::__1::unique_ptr.398"* %26 to i64*
  store i64 %106, i64* %271, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN3net12_GLOBAL__N_110DnsAttemptENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE9push_backEOS7_(%"class.std::__1::vector.396"* %5, %"class.std::__1::unique_ptr.398"* nonnull dereferenceable(8) %26)
  %272 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %26, i64 0, i32 0, i32 0, i32 0
  %273 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %272, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %272, align 8
  %274 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %273, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %260
  %276 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %273 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %277 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %277, i64 1
  %279 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %278, align 8
  call void %279(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %273) #18
  br label %280

280:                                              ; preds = %260, %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #18
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %65) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl17OnAttemptCompleteEjbN4base9TimeTicksEi(%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1 zeroext, i64, i32) #0 align 2 {
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %8, i64 %6, i32 0, i32 0, i32 0
  %10 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %9, align 8
  br i1 %2, label %11, label %30

11:                                               ; preds = %5
  %12 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %10 to %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %13 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %13, i64 4
  %15 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %14, align 8
  %16 = tail call %"class.net::DnsResponse"* %15(%"class.net::(anonymous namespace)::DnsAttempt"* %10) #18
  %17 = icmp eq %"class.net::DnsResponse"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 23
  %20 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %19, align 8
  %21 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsAttempt", %"class.net::(anonymous namespace)::DnsAttempt"* %10, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 7
  %24 = load i8, i8* %23, align 8, !range !17
  %25 = icmp ne i8 %24, 0
  %26 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %27 = sub nsw i64 %26, %3
  %28 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %29 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %28, align 8
  tail call void @_ZN3net14ResolveContext9RecordRttEmbN4base9TimeDeltaEiPKNS_10DnsSessionE(%"class.net::ResolveContext"* %20, i64 %22, i1 zeroext %25, i64 %27, i32 %4, %"class.net::DnsSession"* %29) #18
  br label %30

30:                                               ; preds = %11, %18, %5
  %31 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %32 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %31, align 8
  %33 = icmp eq %"class.base::internal::BindStateBase"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = tail call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl20ProcessAttemptResultENS1_13AttemptResultE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i32 %4, %"class.net::(anonymous namespace)::DnsAttempt"* %10)
  %36 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %35, 0
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %35, 1
  tail call void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl10DoCallbackENS1_13AttemptResultE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i32 %36, %"class.net::(anonymous namespace)::DnsAttempt"* %39)
  br label %40

40:                                               ; preds = %38, %34, %30
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

declare i64 @_ZN3net14ResolveContext21NextDohFallbackPeriodEmPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, %"class.net::DnsSession"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl23OnFallbackPeriodExpiredEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %7, i64 -1, i32 0, i32 0, i32 0
  %9 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %8, align 8
  %10 = tail call fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl20ProcessAttemptResultENS1_13AttemptResultE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i32 -803, %"class.net::(anonymous namespace)::DnsAttempt"* %9)
  %11 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %10, 0
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = extractvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %10, 1
  tail call void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl10DoCallbackENS1_13AttemptResultE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i32 %11, %"class.net::(anonymous namespace)::DnsAttempt"* %14)
  br label %15

15:                                               ; preds = %13, %5, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN3net35GetURLFromTemplateWithoutParametersERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN3net12_GLOBAL__N_110DnsAttemptENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE9push_backEOS7_(%"class.std::__1::vector.396"*, %"class.std::__1::unique_ptr.398"* nocapture dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %5, align 8
  %7 = icmp ult %"class.std::__1::unique_ptr.398"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.398"* %6 to i64
  br i1 %7, label %9, label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr.398"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %10, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.398"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %4, i64 1
  %15 = ptrtoint %"class.std::__1::unique_ptr.398"* %14 to i64
  %16 = bitcast %"class.std::__1::unique_ptr.398"** %3 to i64*
  store i64 %15, i64* %16, align 8
  br label %168

17:                                               ; preds = %2
  %18 = ptrtoint %"class.std::__1::unique_ptr.398"* %4 to i64
  %19 = bitcast %"class.std::__1::unique_ptr.398"** %3 to i64*
  %20 = bitcast %"class.std::__1::vector.396"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.396"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #19
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.std::__1::unique_ptr.398"** %5 to i64*
  %30 = sub i64 %8, %21
  %31 = ashr exact i64 %30, 3
  %32 = icmp ult i64 %31, 1152921504606846975
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 2
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #19
  unreachable

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %36, %38 ], [ 2305843009213693951, %28 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #20
  %45 = bitcast i8* %44 to %"class.std::__1::unique_ptr.398"*
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi %"class.std::__1::unique_ptr.398"* [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %48, i64 %23
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %48, i64 %47
  %51 = ptrtoint %"class.std::__1::unique_ptr.398"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %1, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr.398"* %1 to i64*
  %54 = load i64, i64* %53, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %52, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.398"* %49 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %49, i64 1
  %57 = ptrtoint %"class.std::__1::unique_ptr.398"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %58, align 8
  %60 = ptrtoint %"class.std::__1::unique_ptr.398"* %59 to i64
  %61 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %3, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr.398"* %61, %59
  br i1 %62, label %144, label %63

63:                                               ; preds = %46
  %64 = getelementptr %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %61, i64 -1, i32 0, i32 0, i32 0
  %65 = ptrtoint %"class.net::(anonymous namespace)::DnsAttempt"** %64 to i64
  %66 = sub i64 %65, %60
  %67 = lshr i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 7
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %83, label %71

71:                                               ; preds = %63, %71
  %72 = phi %"class.std::__1::unique_ptr.398"* [ %75, %71 ], [ %49, %63 ]
  %73 = phi %"class.std::__1::unique_ptr.398"* [ %76, %71 ], [ %61, %63 ]
  %74 = phi i64 [ %81, %71 ], [ %69, %63 ]
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %72, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %73, i64 -1
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::unique_ptr.398"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %77, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.398"* %75 to i64*
  store i64 %79, i64* %80, align 8
  %81 = add i64 %74, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %71, !llvm.loop !72

83:                                               ; preds = %71, %63
  %84 = phi %"class.std::__1::unique_ptr.398"* [ undef, %63 ], [ %75, %71 ]
  %85 = phi %"class.std::__1::unique_ptr.398"* [ %49, %63 ], [ %75, %71 ]
  %86 = phi %"class.std::__1::unique_ptr.398"* [ %61, %63 ], [ %76, %71 ]
  %87 = icmp ult i64 %66, 56
  br i1 %87, label %140, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::unique_ptr.398"* [ %133, %88 ], [ %85, %83 ]
  %90 = phi %"class.std::__1::unique_ptr.398"* [ %134, %88 ], [ %86, %83 ]
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %89, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -1
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.398"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.398"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %89, i64 -2
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -2
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.398"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.398"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %89, i64 -3
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -3
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.398"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.398"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %89, i64 -4
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.398"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.398"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %89, i64 -5
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.398"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.398"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %89, i64 -6
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -6
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.398"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.398"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %89, i64 -7
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -7
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr.398"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.398"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %89, i64 -8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %90, i64 -8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.398"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %135, align 8
  %138 = bitcast %"class.std::__1::unique_ptr.398"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = icmp eq %"class.std::__1::unique_ptr.398"* %134, %59
  br i1 %139, label %140, label %88

140:                                              ; preds = %88, %83
  %141 = phi %"class.std::__1::unique_ptr.398"* [ %84, %83 ], [ %133, %88 ]
  %142 = load i64, i64* %20, align 8
  %143 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %3, align 8
  br label %144

144:                                              ; preds = %46, %140
  %145 = phi %"class.std::__1::unique_ptr.398"* [ %143, %140 ], [ %59, %46 ]
  %146 = phi %"class.std::__1::unique_ptr.398"* [ %141, %140 ], [ %49, %46 ]
  %147 = phi i64 [ %142, %140 ], [ %60, %46 ]
  %148 = ptrtoint %"class.std::__1::unique_ptr.398"* %146 to i64
  store i64 %148, i64* %20, align 8
  store i64 %57, i64* %19, align 8
  store i64 %51, i64* %29, align 8
  %149 = inttoptr i64 %147 to %"class.std::__1::unique_ptr.398"*
  %150 = icmp eq %"class.std::__1::unique_ptr.398"* %145, %149
  br i1 %150, label %164, label %151

151:                                              ; preds = %144, %162
  %152 = phi %"class.std::__1::unique_ptr.398"* [ %153, %162 ], [ %145, %144 ]
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %152, i64 -1
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %154, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %154, align 8
  %156 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %151
  %158 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %155 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %159 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %159, i64 1
  %161 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %160, align 8
  tail call void %161(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %155) #18
  br label %162

162:                                              ; preds = %157, %151
  %163 = icmp eq %"class.std::__1::unique_ptr.398"* %153, %149
  br i1 %163, label %164, label %151

164:                                              ; preds = %162, %144
  %165 = icmp eq i64 %147, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %164
  %167 = inttoptr i64 %147 to i8*
  tail call void @_ZdlPv(i8* %167) #20
  br label %168

168:                                              ; preds = %166, %164, %9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #8

declare void @_ZN3net8DnsQueryC1EtRKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtPKNS_14OptRecordRdataENS0_15PaddingStrategyE(%"class.net::DnsQuery"*, i16 zeroext, %"class.base::BasicStringPiece"* dereferenceable(16), i16 zeroext, %"class.net::OptRecordRdata"*, i32) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net8DnsQueryD1Ev(%"class.net::DnsQuery"*) unnamed_addr #8

declare void @_ZN3net8DnsQueryC1ERKS0_(%"class.net::DnsQuery"*, %"class.net::DnsQuery"* dereferenceable(24)) unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #15

declare void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #7

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #7

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #7

declare void @_ZN4base15Base64UrlEncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_21Base64UrlEncodePolicyEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), i32, %"class.std::__1::basic_string"*) local_unnamed_addr #7

declare zeroext i1 @_ZN12uri_template6ExpandERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_13unordered_mapIS6_S6_NS0_4hashIS6_EENS0_8equal_toIS6_EENS4_INS0_4pairIS7_S6_EEEEEEPS6_PNS0_3setIS6_NS0_4lessIS6_EENS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::unordered_map.634"* dereferenceable(40), %"class.std::__1::basic_string"*, %"class.std::__1::set.250"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #8

declare void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #7

declare void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #7

declare %"class.net::URLRequest"* @_ZNK3net17URLRequestContext13CreateRequestERK4GURLNS_15RequestPriorityEPNS_10URLRequest8DelegateENS_27NetworkTrafficAnnotationTagE(%"class.net::URLRequestContext"*, %class.GURL* dereferenceable(120), i32, %"class.net::URLRequest::Delegate"*, i32) local_unnamed_addr #7

declare void @_ZN3net10URLRequest10set_methodERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequest"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7

declare void @_ZN3net10URLRequest10set_uploadENSt3__110unique_ptrINS_16UploadDataStreamENS1_14default_deleteIS3_EEEE(%"class.net::URLRequest"*, %"class.net::UploadDataStream"*) local_unnamed_addr #7

declare %"class.net::UploadDataStream"* @_ZN3net24ElementsUploadDataStream16CreateWithReaderENSt3__110unique_ptrINS_19UploadElementReaderENS1_14default_deleteIS3_EEEEl(%"class.net::UploadElementReader"*, i64) local_unnamed_addr #7

declare void @_ZN3net10URLRequest22SetExtraRequestHeadersERKNS_18HttpRequestHeadersE(%"class.net::URLRequest"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) local_unnamed_addr #7

declare void @_ZN3net10URLRequest18SetSecureDnsPolicyENS_15SecureDnsPolicyE(%"class.net::URLRequest"*, i32) local_unnamed_addr #7

declare void @_ZN3net10URLRequest12SetLoadFlagsEi(%"class.net::URLRequest"*, i32) local_unnamed_addr #7

declare void @_ZN3net10URLRequest21set_allow_credentialsEb(%"class.net::URLRequest"*, i1 zeroext) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_114DnsHTTPAttemptD2Ev(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN3net12_GLOBAL__N_114DnsHTTPAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTVN3net12_GLOBAL__N_114DnsHTTPAttemptE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #18
  %5 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 7
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %5) #18
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %6, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %6, align 8
  %8 = icmp eq %"class.net::URLRequest"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.net::URLRequest"* %7 to void (%"class.net::URLRequest"*)***
  %11 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %11, i64 1
  %13 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %12, align 8
  tail call void %13(%"class.net::URLRequest"* nonnull %7) #18
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %16 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %15, align 8
  store %"class.net::DnsResponse"* null, %"class.net::DnsResponse"** %15, align 8
  %17 = icmp eq %"class.net::DnsResponse"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  tail call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* nonnull %16) #18
  %19 = bitcast %"class.net::DnsResponse"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %21) #18
  %22 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %22, align 8
  store %"class.net::DnsQuery"* null, %"class.net::DnsQuery"** %22, align 8
  %24 = icmp eq %"class.net::DnsQuery"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  tail call void @_ZN3net8DnsQueryD1Ev(%"class.net::DnsQuery"* nonnull %23) #18
  %26 = bitcast %"class.net::DnsQuery"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #20
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 2, i32 0
  %29 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %28, align 8
  %30 = icmp eq %"class.net::GrowableIOBuffer"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %29, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe.460"* %37 to %"class.net::IOBuffer"*
  %39 = bitcast %"class.base::RefCountedThreadSafe.460"* %37 to void (%"class.net::IOBuffer"*)***
  %40 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %40, i64 1
  %42 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %41, align 8
  tail call void %42(%"class.net::IOBuffer"* nonnull %38) #18
  br label %43

43:                                               ; preds = %27, %31, %36
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_114DnsHTTPAttemptD0Ev(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*) unnamed_addr #4 align 2 {
  tail call void @_ZN3net12_GLOBAL__N_114DnsHTTPAttemptD2Ev(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0) #18
  %2 = bitcast %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt5StartEN4base12OnceCallbackIFviEEE(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.base::OnceCallback.479"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %3, %"class.base::internal::CallbackBase"* dereferenceable(8) %4) #18
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %6, align 8
  tail call void @_ZN3net10URLRequest5StartEv(%"class.net::URLRequest"* %7) #18
  ret i32 -1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.net::DnsQuery"* @_ZNK3net12_GLOBAL__N_114DnsHTTPAttempt8GetQueryEv(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %2, align 8
  ret %"class.net::DnsQuery"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.net::DnsResponse"* @_ZNK3net12_GLOBAL__N_114DnsHTTPAttempt11GetResponseEv(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %2, align 8
  %4 = icmp eq %"class.net::DnsResponse"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK3net11DnsResponse7IsValidEv(%"class.net::DnsResponse"* nonnull %3) #18
  %7 = select i1 %6, %"class.net::DnsResponse"* %3, %"class.net::DnsResponse"* null
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.net::DnsResponse"* [ null, %1 ], [ %7, %5 ]
  ret %"class.net::DnsResponse"* %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK3net12_GLOBAL__N_114DnsHTTPAttempt15GetSocketNetLogEv(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* readnone) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 7
  ret %"class.net::NetLogWithSource"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK3net12_GLOBAL__N_114DnsHTTPAttempt9IsPendingEv(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp ne %"class.base::internal::BindStateBase"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt17OnResponseStartedEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.479", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #18
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZN3net25IsHostnameResolutionErrorEi(i32 %2) #18
  %11 = select i1 %10, i32 -808, i32 %2
  tail call fastcc void @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt17ResponseCompletedEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i32 %11)
  br label %92

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %14 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %15 = tail call i32 @_ZNK3net10URLRequest15GetResponseCodeEv(%"class.net::URLRequest"* %14) #18
  %16 = icmp eq i32 %15, 200
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = tail call %"class.net::HttpResponseHeaders"* @_ZNK3net10URLRequest16response_headersEv(%"class.net::URLRequest"* %1) #18
  %19 = call zeroext i1 @_ZNK3net19HttpResponseHeaders11GetMimeTypeEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %18, %"class.std::__1::basic_string"* nonnull %5) #18
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN3net12_GLOBAL__N_131kDnsOverHttpResponseContentTypeE, i64 0, i64 0)) #18
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %20, %12, %17
  %24 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %13, align 8
  %25 = icmp eq %"class.net::URLRequest"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.net::URLRequest"* %24 to void (%"class.net::URLRequest"*)***
  %28 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %28, i64 1
  %30 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %29, align 8
  call void %30(%"class.net::URLRequest"* nonnull %24) #18
  br label %31

31:                                               ; preds = %23, %26
  %32 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 4
  %33 = bitcast %"class.base::OnceCallback.479"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  %34 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback.479"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback.479"* %4 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %4, i64 0, i32 0
  %39 = inttoptr i64 %36 to %"class.base::internal::BindStateBase"*
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %41 = bitcast void ()** %40 to void (%"class.base::internal::BindStateBase"*, i32)**
  %42 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %41, align 8
  call void %42(%"class.base::internal::BindStateBase"* %39, i32 -800) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  br label %92

43:                                               ; preds = %20
  %44 = call i8* @_Znwm(i64 40) #20
  %45 = bitcast i8* %44 to %"class.net::GrowableIOBuffer"*
  call void @_ZN3net16GrowableIOBufferC1Ev(%"class.net::GrowableIOBuffer"* nonnull %45) #18
  %46 = getelementptr inbounds i8, i8* %44, i64 8
  %47 = bitcast i8* %46 to i32*
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  %49 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 2
  %50 = ptrtoint i8* %44 to i64
  %51 = bitcast %class.scoped_refptr.496* %49 to i64*
  %52 = getelementptr inbounds %class.scoped_refptr.496, %class.scoped_refptr.496* %49, i64 0, i32 0
  %53 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %52, align 8
  store i64 %50, i64* %51, align 8
  %54 = icmp eq %"class.net::GrowableIOBuffer"* %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %53, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw sub i32* %57, i32 1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %67

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %56, i64 -2
  %62 = bitcast %"class.base::RefCountedThreadSafe.460"* %61 to %"class.net::IOBuffer"*
  %63 = bitcast %"class.base::RefCountedThreadSafe.460"* %61 to void (%"class.net::IOBuffer"*)***
  %64 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %64, i64 1
  %66 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %65, align 8
  call void %66(%"class.net::IOBuffer"* nonnull %62) #18
  br label %67

67:                                               ; preds = %43, %55, %60
  %68 = call %"class.net::HttpResponseHeaders"* @_ZNK3net10URLRequest16response_headersEv(%"class.net::URLRequest"* %1) #18
  %69 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders14kContentLengthE, i64 0, i64 0)) #18
  %70 = call zeroext i1 @_ZNK3net19HttpResponseHeaders9HasHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpResponseHeaders"* %68, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders14kContentLengthE, i64 0, i64 0), i64 %69) #18
  %71 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %52, align 8
  br i1 %70, label %72, label %78

72:                                               ; preds = %67
  %73 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %74 = call %"class.net::HttpResponseHeaders"* @_ZNK3net10URLRequest16response_headersEv(%"class.net::URLRequest"* %73) #18
  %75 = call i64 @_ZNK3net19HttpResponseHeaders16GetContentLengthEv(%"class.net::HttpResponseHeaders"* %74) #18
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, 1
  br label %78

78:                                               ; preds = %67, %72
  %79 = phi i32 [ %77, %72 ], [ 66560, %67 ]
  call void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"* %71, i32 %79) #18
  %80 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %81 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %52, align 8
  %82 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %81, i64 0, i32 0
  %83 = call i32 @_ZN3net16GrowableIOBuffer17RemainingCapacityEv(%"class.net::GrowableIOBuffer"* %81) #18
  %84 = call i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"* %80, %"class.net::IOBuffer"* %82, i32 %83) #18
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %92, label %86

86:                                               ; preds = %78
  %87 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %13, align 8
  %88 = bitcast %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0 to void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)***
  %89 = load void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)**, void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)** %89, i64 8
  %91 = load void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)** %90, align 8
  call void %91(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, %"class.net::URLRequest"* %87, i32 %84) #18
  br label %92

92:                                               ; preds = %86, %78, %31, %9
  %93 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %98) #20
  br label %99

99:                                               ; preds = %92, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt15OnReadCompletedEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr.680", align 8
  %8 = icmp slt i32 %2, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call fastcc void @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt17ResponseCompletedEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i32 %2)
  br label %73

10:                                               ; preds = %3
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %74, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 2, i32 0
  %14 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %13, align 8
  %15 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %14, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, %2
  tail call void @_ZN3net16GrowableIOBuffer10set_offsetEi(%"class.net::GrowableIOBuffer"* %14, i32 %17) #18
  %18 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %13, align 8
  %19 = tail call i32 @_ZN3net16GrowableIOBuffer17RemainingCapacityEv(%"class.net::GrowableIOBuffer"* %18) #18
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %12
  %22 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %13, align 8
  %23 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 16384
  tail call void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"* %22, i32 %25) #18
  br label %26

26:                                               ; preds = %21, %12
  %27 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %28 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %27, align 8
  %29 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %13, align 8
  %30 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %29, i64 0, i32 0
  %31 = tail call i32 @_ZN3net16GrowableIOBuffer17RemainingCapacityEv(%"class.net::GrowableIOBuffer"* %29) #18
  %32 = tail call i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"* %28, %"class.net::IOBuffer"* %30, i32 %31) #18
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %73, label %34

34:                                               ; preds = %26
  %35 = icmp slt i32 %32, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %34
  %37 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %27, align 8
  %38 = bitcast %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0 to void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)***
  %39 = load void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)**, void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)** %39, i64 8
  %41 = load void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)** %40, align 8
  tail call void %41(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, %"class.net::URLRequest"* %37, i32 %32) #18
  br label %73

42:                                               ; preds = %34
  %43 = tail call dereferenceable(8) %class.scoped_refptr.166* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #18
  %44 = bitcast %class.scoped_refptr.166* %43 to %"class.base::TaskRunner"**
  %45 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %44, align 8
  %46 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 514) #18
  %47 = bitcast %"class.base::WeakPtr.680"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #18
  %48 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #18, !noalias !73
  %49 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 8, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %49) #18, !noalias !73
  %50 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 8, i32 0, i32 1
  %51 = load i64, i64* %50, align 8, !noalias !73
  %52 = getelementptr inbounds %"class.base::WeakPtr.680", %"class.base::WeakPtr.680"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %52, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %51) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #18, !noalias !73
  %53 = bitcast %"class.net::URLRequest"** %27 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = call i8* @_Znwm(i64 80) #20, !noalias !76
  %56 = bitcast i8* %55 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %56, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS3_10URLRequestEiEJNS_7WeakPtrIS5_EES7_iEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS2_10URLRequestEiEJNS_7WeakPtrIS4_EES6_iEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS3_10URLRequestEiEJNS_7WeakPtrIS5_EES7_iEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #18, !noalias !76
  %57 = getelementptr inbounds i8, i8* %55, i64 32
  %58 = bitcast i8* %57 to <2 x i64>*
  store <2 x i64> <i64 65, i64 0>, <2 x i64>* %58, align 8, !noalias !76
  %59 = getelementptr inbounds i8, i8* %55, i64 48
  %60 = bitcast i8* %59 to %"class.base::internal::WeakReference"*
  %61 = getelementptr inbounds %"class.base::WeakPtr.680", %"class.base::WeakPtr.680"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %60, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %61) #18, !noalias !76
  %62 = getelementptr inbounds i8, i8* %55, i64 56
  %63 = bitcast i8* %62 to i64*
  %64 = getelementptr inbounds %"class.base::WeakPtr.680", %"class.base::WeakPtr.680"* %7, i64 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8, !noalias !76
  store i64 %65, i64* %63, align 8, !noalias !76
  %66 = getelementptr inbounds i8, i8* %55, i64 64
  %67 = bitcast i8* %66 to i64*
  store i64 %54, i64* %67, align 8, !noalias !76
  %68 = getelementptr inbounds i8, i8* %55, i64 72
  %69 = bitcast i8* %68 to i32*
  store i32 %32, i32* %69, align 4, !noalias !76
  %70 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %55, i8** %70, align 8, !alias.scope !76
  %71 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %45, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %6) #18
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %52) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #18
  br label %73

73:                                               ; preds = %74, %9, %36, %42, %26
  ret void

74:                                               ; preds = %10
  tail call fastcc void @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt17ResponseCompletedEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i32 0)
  br label %73
}

declare i32 @_ZN3net10URLRequest8Delegate11OnConnectedEPS0_RKNS_13TransportInfoEN4base12OnceCallbackIFviEEE(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"struct.net::TransportInfo"*, %"class.base::OnceCallback.479"*) unnamed_addr #7

declare void @_ZN3net10URLRequest8Delegate18OnReceivedRedirectEPS0_RKNS_12RedirectInfoEPb(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"struct.net::RedirectInfo"* dereferenceable(272), i8*) unnamed_addr #7

declare void @_ZN3net10URLRequest8Delegate14OnAuthRequiredEPS0_RKNS_17AuthChallengeInfoE(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::AuthChallengeInfo"* dereferenceable(184)) unnamed_addr #7

declare void @_ZN3net10URLRequest8Delegate22OnCertificateRequestedEPS0_PNS_18SSLCertRequestInfoE(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, %"class.net::SSLCertRequestInfo"*) unnamed_addr #7

declare void @_ZN3net10URLRequest8Delegate21OnSSLCertificateErrorEPS0_iRKNS_7SSLInfoEb(%"class.net::URLRequest::Delegate"*, %"class.net::URLRequest"*, i32, %"class.net::SSLInfo"* dereferenceable(128), i1 zeroext) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N3net12_GLOBAL__N_114DnsHTTPAttempt17OnResponseStartedEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 -1, i32 8
  %5 = bitcast %"class.base::WeakPtrFactory.628"* %4 to %"class.net::(anonymous namespace)::DnsHTTPAttempt"*
  tail call void @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt17OnResponseStartedEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %5, %"class.net::URLRequest"* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N3net12_GLOBAL__N_114DnsHTTPAttempt15OnReadCompletedEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 -1, i32 8
  %5 = bitcast %"class.base::WeakPtrFactory.628"* %4 to %"class.net::(anonymous namespace)::DnsHTTPAttempt"*
  tail call void @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt15OnReadCompletedEPNS_10URLRequestEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %5, %"class.net::URLRequest"* %1, i32 %2)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N3net12_GLOBAL__N_114DnsHTTPAttemptD1Ev(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 -1, i32 8
  %3 = bitcast %"class.base::WeakPtrFactory.628"* %2 to %"class.net::(anonymous namespace)::DnsHTTPAttempt"*
  tail call void @_ZN3net12_GLOBAL__N_114DnsHTTPAttemptD2Ev(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %3) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N3net12_GLOBAL__N_114DnsHTTPAttemptD0Ev(%"class.net::(anonymous namespace)::DnsHTTPAttempt"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 -1, i32 8
  %3 = bitcast %"class.base::WeakPtrFactory.628"* %2 to %"class.net::(anonymous namespace)::DnsHTTPAttempt"*
  tail call void @_ZN3net12_GLOBAL__N_114DnsHTTPAttemptD2Ev(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %3) #18
  %4 = bitcast %"class.base::WeakPtrFactory.628"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.639"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__emplace_unique_implIJRA4_KcRS7_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEEDpOT_(%"class.std::__1::__hash_table.635"*, [4 x i8]* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.674", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.674"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.674"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.674"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.674"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE16__construct_nodeIJRA4_KcRS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISR_EEEEEEDpOT_(%"class.std::__1::unique_ptr.674"* nonnull sret %4, %"class.std::__1::__hash_table.635"* %0, [4 x i8]* dereferenceable(4) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %9 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %6, align 8
  %10 = call { %"struct.std::__1::__hash_node_base.639"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS8_PvEE(%"class.std::__1::__hash_table.635"* %0, %"struct.std::__1::__hash_node"* %9)
  %11 = extractvalue { %"struct.std::__1::__hash_node_base.639"*, i8 } %10, 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %6, align 8
  br label %41

15:                                               ; preds = %3
  %16 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %6, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %6, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node"* %16, null
  br i1 %17, label %41, label %18

18:                                               ; preds = %15
  %19 = load i8, i8* %7, align 8, !range !17
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %39, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #20
  br label %31

31:                                               ; preds = %28, %21
  %32 = bitcast %"struct.std::__1::pair.677"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::pair.677", %"struct.std::__1::pair.677"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #20
  br label %39

39:                                               ; preds = %36, %31, %18
  %40 = bitcast %"struct.std::__1::__hash_node"* %16 to i8*
  call void @_ZdlPv(i8* %40) #20
  br label %41

41:                                               ; preds = %14, %15, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #18
  ret { %"struct.std::__1::__hash_node_base.639"*, i8 } %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE16__construct_nodeIJRA4_KcRS7_EEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISR_EEEEEEDpOT_(%"class.std::__1::unique_ptr.674"* noalias sret, %"class.std::__1::__hash_table.635"*, [4 x i8]* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.674"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.674"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.674"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 24, i1 false)
  %10 = tail call i8* @_Znwm(i64 64) #20
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast %"class.std::__1::unique_ptr.674"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = bitcast %"class.std::__1::allocator.649"** %7 to %"class.std::__1::__compressed_pair.646"**
  store %"class.std::__1::__compressed_pair.646"* %6, %"class.std::__1::__compressed_pair.646"** %13, align 8
  store i8 0, i8* %8, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 0
  %16 = tail call i64 @strlen(i8* %15) #18
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %4
  %19 = bitcast i8* %14 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %19) #19
  unreachable

20:                                               ; preds = %4
  %21 = icmp ult i64 %16, 23
  br i1 %21, label %32, label %22

22:                                               ; preds = %20
  %23 = add nuw i64 %16, 16
  %24 = and i64 %23, -16
  %25 = tail call i8* @_Znwm(i64 %24) #20
  %26 = bitcast i8* %14 to i8**
  store i8* %25, i8** %26, align 8
  %27 = or i64 %24, -9223372036854775808
  %28 = getelementptr inbounds i8, i8* %10, i64 32
  %29 = bitcast i8* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %10, i64 24
  %31 = bitcast i8* %30 to i64*
  store i64 %16, i64* %31, align 8
  br label %36

32:                                               ; preds = %20
  %33 = trunc i64 %16 to i8
  %34 = getelementptr inbounds i8, i8* %10, i64 39
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %32, %22
  %37 = phi i8* [ %25, %22 ], [ %14, %32 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %15, i64 %16, i1 false) #18
  br label %38

38:                                               ; preds = %36, %32
  %39 = phi i8* [ %14, %32 ], [ %37, %36 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %16
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %10, i64 40
  %42 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %47, i64 24, i1 false) #18
  br label %54

48:                                               ; preds = %38
  %49 = bitcast i8* %41 to %"class.std::__1::basic_string"*
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %49, i8* %51, i64 %53) #18
  br label %54

54:                                               ; preds = %46, %48
  store i8 1, i8* %8, align 8
  %55 = getelementptr inbounds i8, i8* %10, i64 16
  %56 = getelementptr inbounds i8, i8* %10, i64 39
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = bitcast i8* %55 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %10, i64 24
  %62 = bitcast i8* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %57 to i64
  %65 = select i1 %58, i8* %60, i8* %55
  %66 = select i1 %58, i64 %63, i64 %64
  %67 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %67) #18
  %68 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %5, i8* %65, i64 %66) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %67) #18
  %69 = getelementptr inbounds i8, i8* %10, i64 8
  %70 = bitcast i8* %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast i8* %10 to %"struct.std::__1::__hash_node_base.639"**
  store %"struct.std::__1::__hash_node_base.639"* null, %"struct.std::__1::__hash_node_base.639"** %71, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.639"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS8_PvEE(%"class.std::__1::__hash_table.635"*, %"struct.std::__1::__hash_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2
  %5 = bitcast %"struct.std::__1::__hash_value_type"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.std::__1::__hash_value_type"* %4 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #18
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %15, i64 %16) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #18
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 1
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0
  %21 = call %"struct.std::__1::__hash_node_base.639"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE28__node_insert_unique_prepareEmRS8_(%"class.std::__1::__hash_table.635"* %0, i64 %18, %"struct.std::__1::__hash_value_type"* dereferenceable(48) %4)
  %22 = icmp eq %"struct.std::__1::__hash_node_base.639"* %21, null
  br i1 %22, label %23, label %82

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %20, i64 1
  %25 = bitcast %"struct.std::__1::__hash_node_base.639"* %24 to i64*
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %25, align 8
  %29 = call i64 @llvm.ctpop.i64(i64 %27) #18, !range !81
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %23
  %32 = add i64 %27, -1
  %33 = and i64 %32, %28
  br label %38

34:                                               ; preds = %23
  %35 = icmp ult i64 %28, %27
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %28, %27
  br label %38

38:                                               ; preds = %36, %34, %31
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %28, %34 ]
  %40 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.639"* %43, null
  br i1 %44, label %45, label %71

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 1, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %46, i64 0, i32 0
  %48 = bitcast %"struct.std::__1::__hash_node_base.639"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 0, i32 0
  %51 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %49, i64* %51, align 8
  store %"struct.std::__1::__hash_node_base.639"* %20, %"struct.std::__1::__hash_node_base.639"** %47, align 8
  %52 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %40, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %52, i64 %39
  store %"struct.std::__1::__hash_node_base.639"* %46, %"struct.std::__1::__hash_node_base.639"** %53, align 8
  %54 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %50, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.639"* %54, null
  br i1 %55, label %78, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.639"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  br i1 %30, label %63, label %60

60:                                               ; preds = %56
  %61 = add i64 %27, -1
  %62 = and i64 %59, %61
  br label %67

63:                                               ; preds = %56
  %64 = icmp ult i64 %59, %27
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %59, %27
  br label %67

67:                                               ; preds = %65, %63, %60
  %68 = phi i64 [ %62, %60 ], [ %66, %65 ], [ %59, %63 ]
  %69 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %40, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %69, i64 %68
  br label %76

71:                                               ; preds = %38
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %43, i64 0, i32 0
  %73 = bitcast %"struct.std::__1::__hash_node_base.639"* %43 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.std::__1::__hash_node"* %1 to i64*
  store i64 %74, i64* %75, align 8
  br label %76

76:                                               ; preds = %71, %67
  %77 = phi %"struct.std::__1::__hash_node_base.639"** [ %70, %67 ], [ %72, %71 ]
  store %"struct.std::__1::__hash_node_base.639"* %20, %"struct.std::__1::__hash_node_base.639"** %77, align 8
  br label %78

78:                                               ; preds = %76, %45
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %78, %2
  %83 = phi i8 [ 1, %78 ], [ 0, %2 ]
  %84 = phi %"struct.std::__1::__hash_node_base.639"* [ %20, %78 ], [ %21, %2 ]
  %85 = insertvalue { %"struct.std::__1::__hash_node_base.639"*, i8 } undef, %"struct.std::__1::__hash_node_base.639"* %84, 0
  %86 = insertvalue { %"struct.std::__1::__hash_node_base.639"*, i8 } %85, i8 %83, 1
  ret { %"struct.std::__1::__hash_node_base.639"*, i8 } %86
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #4 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.639"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE28__node_insert_unique_prepareEmRS8_(%"class.std::__1::__hash_table.635"*, i64, %"struct.std::__1::__hash_value_type"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %100, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #18, !range !81
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %1
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %1
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %1, %5
  br label %17

17:                                               ; preds = %10, %13, %15
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %1, %13 ]
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.639"* %22, null
  br i1 %23, label %100, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.639"* %26, null
  br i1 %27, label %100, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  %30 = bitcast %"struct.std::__1::__hash_value_type"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = getelementptr inbounds %"struct.std::__1::__hash_value_type", %"struct.std::__1::__hash_value_type"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__hash_value_type"* %2 to i8*
  %41 = select i1 %33, i8* %39, i8* %40
  %42 = icmp eq i64 %37, 0
  br label %43

43:                                               ; preds = %28, %84
  %44 = phi %"struct.std::__1::__hash_node_base.639"* [ %26, %28 ], [ %86, %84 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %44, i64 1
  %46 = bitcast %"struct.std::__1::__hash_node_base.639"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  br i1 %9, label %50, label %48

48:                                               ; preds = %43
  %49 = and i64 %47, %29
  br label %54

50:                                               ; preds = %43
  %51 = icmp ult i64 %47, %5
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %47, %5
  br label %54

54:                                               ; preds = %48, %50, %52
  %55 = phi i64 [ %49, %48 ], [ %53, %52 ], [ %47, %50 ]
  %56 = icmp eq i64 %55, %18
  br i1 %56, label %57, label %100

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %44, i64 2
  %59 = bitcast %"struct.std::__1::__hash_node_base.639"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %44, i64 3
  %64 = bitcast %"struct.std::__1::__hash_node_base.639"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = zext i8 %61 to i64
  %67 = select i1 %62, i64 %65, i64 %66
  %68 = icmp eq i64 %67, %37
  br i1 %68, label %69, label %84

69:                                               ; preds = %57
  %70 = bitcast %"struct.std::__1::__hash_node_base.639"* %58 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %"struct.std::__1::__hash_node_base.639"* %58 to i8*
  %73 = select i1 %62, i8* %71, i8* %72
  br i1 %62, label %80, label %74

74:                                               ; preds = %69
  br i1 %42, label %124, label %75

75:                                               ; preds = %74
  %76 = ptrtoint i8* %71 to i64
  %77 = trunc i64 %76 to i8
  %78 = load i8, i8* %41, align 1
  %79 = icmp eq i8 %78, %77
  br i1 %79, label %88, label %84

80:                                               ; preds = %69
  br i1 %42, label %124, label %81

81:                                               ; preds = %80
  %82 = tail call i32 @bcmp(i8* %73, i8* %41, i64 %37) #18
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %124, label %84

84:                                               ; preds = %95, %75, %57, %81
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %44, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.639"* %86, null
  br i1 %87, label %100, label %43

88:                                               ; preds = %75, %95
  %89 = phi i64 [ %92, %95 ], [ %66, %75 ]
  %90 = phi i8* [ %93, %95 ], [ %72, %75 ]
  %91 = phi i8* [ %96, %95 ], [ %41, %75 ]
  %92 = add i64 %89, -1
  %93 = getelementptr inbounds i8, i8* %90, i64 1
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %124, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds i8, i8* %91, i64 1
  %97 = load i8, i8* %93, align 1
  %98 = load i8, i8* %96, align 1
  %99 = icmp eq i8 %97, %98
  br i1 %99, label %88, label %84

100:                                              ; preds = %84, %54, %24, %17, %3
  %101 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 2, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 1
  %104 = uitofp i64 %103 to float
  %105 = uitofp i64 %5 to float
  %106 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 3, i32 0, i32 0
  %107 = load float, float* %106, align 4
  %108 = fmul float %107, %105
  %109 = fcmp olt float %108, %104
  %110 = or i1 %6, %109
  br i1 %110, label %111, label %124

111:                                              ; preds = %100
  %112 = shl i64 %5, 1
  %113 = icmp ult i64 %5, 3
  %114 = tail call i64 @llvm.ctpop.i64(i64 %5) #18, !range !81
  %115 = icmp ugt i64 %114, 1
  %116 = or i1 %113, %115
  %117 = zext i1 %116 to i64
  %118 = or i64 %112, %117
  %119 = fdiv float %104, %107
  %120 = tail call float @llvm.ceil.f32(float %119) #18
  %121 = fptoui float %120 to i64
  %122 = icmp ult i64 %118, %121
  %123 = select i1 %122, i64 %121, i64 %118
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.635"* %0, i64 %123)
  br label %124

124:                                              ; preds = %74, %80, %81, %88, %111, %100
  %125 = phi %"struct.std::__1::__hash_node_base.639"* [ null, %100 ], [ null, %111 ], [ %44, %88 ], [ %44, %81 ], [ %44, %80 ], [ %44, %74 ]
  ret %"struct.std::__1::__hash_node_base.639"* %125
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.635"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !81
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #18
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.635"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #18, !range !81
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #18
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #18, !range !81
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #18
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.635"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.635"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #19
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #20
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.635"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.639"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.639"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #20
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.641", %"class.std::__1::__bucket_list_deallocator.641"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.639"* null, %"struct.std::__1::__hash_node_base.639"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !82

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.639"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.639"* null, %"struct.std::__1::__hash_node_base.639"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.639"* null, %"struct.std::__1::__hash_node_base.639"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.639"* null, %"struct.std::__1::__hash_node_base.639"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.639"* null, %"struct.std::__1::__hash_node_base.639"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.639"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #18, !range !81
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.639"* %36, %"struct.std::__1::__hash_node_base.639"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.639"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.639"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.639"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.639"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.639"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.639"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.639"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.639"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.639"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.639"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.639"* %82, %"struct.std::__1::__hash_node_base.639"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.639"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.639"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.639"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.639"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.639"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.639"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #18
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.639"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.639"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.639"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.639"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.639"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.639"* %80, %"struct.std::__1::__hash_node_base.639"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.639"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.639", %"struct.std::__1::__hash_node_base.639"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.639"*, %"struct.std::__1::__hash_node_base.639"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.639"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.635", %"class.std::__1::__hash_table.635"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.639"**, %"struct.std::__1::__hash_node_base.639"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.639"** null, %"struct.std::__1::__hash_node_base.639"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.639"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.639"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #20
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.641", %"class.std::__1::__bucket_list_deallocator.641"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

declare void @_ZN3net24UploadBytesElementReaderC1EPKcm(%"class.net::UploadBytesElementReader"*, i8*, i64) unnamed_addr #7

declare dereferenceable(496) %"class.net::IsolationInfo"* @_ZN3net13IsolationInfoaSERKS0_(%"class.net::IsolationInfo"*, %"class.net::IsolationInfo"* dereferenceable(496)) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"*) unnamed_addr #8

declare void @_ZN3net10URLRequest5StartEv(%"class.net::URLRequest"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #8

declare zeroext i1 @_ZNK3net11DnsResponse7IsValidEv(%"class.net::DnsResponse"*) local_unnamed_addr #7

declare zeroext i1 @_ZN3net25IsHostnameResolutionErrorEi(i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_114DnsHTTPAttempt17ResponseCompletedEi(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.479", align 8
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %4, align 8
  store %"class.net::URLRequest"* null, %"class.net::URLRequest"** %4, align 8
  %6 = icmp eq %"class.net::URLRequest"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.net::URLRequest"* %5 to void (%"class.net::URLRequest"*)***
  %9 = load void (%"class.net::URLRequest"*)**, void (%"class.net::URLRequest"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %9, i64 1
  %11 = load void (%"class.net::URLRequest"*)*, void (%"class.net::URLRequest"*)** %10, align 8
  tail call void %11(%"class.net::URLRequest"* nonnull %5) #18
  br label %12

12:                                               ; preds = %2, %7
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 4
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %15, label %63

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %class.scoped_refptr.496, %class.scoped_refptr.496* %16, i64 0, i32 0
  %18 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %17, align 8
  %19 = icmp eq %"class.net::GrowableIOBuffer"* %18, null
  br i1 %19, label %63, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %18, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %63, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %18, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  tail call void @_ZN3net16GrowableIOBuffer10set_offsetEi(%"class.net::GrowableIOBuffer"* nonnull %18, i32 0) #18
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %24
  %30 = add nsw i64 %27, 1
  %31 = tail call i8* @_Znwm(i64 112) #20
  %32 = bitcast i8* %31 to %"class.net::DnsResponse"*
  %33 = bitcast %class.scoped_refptr.496* %16 to %"class.net::IOBuffer"**
  %34 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %33, align 8
  %35 = icmp eq %"class.net::IOBuffer"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %36, %29
  tail call void @_ZN3net11DnsResponseC1E13scoped_refptrINS_8IOBufferEEm(%"class.net::DnsResponse"* nonnull %32, %"class.net::IOBuffer"* %34, i64 %30) #18
  %40 = ptrtoint i8* %31 to i64
  %41 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 5
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.500"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %42, align 8
  %44 = bitcast %"class.std::__1::unique_ptr.500"* %41 to i64*
  store i64 %40, i64* %44, align 8
  %45 = icmp eq %"class.net::DnsResponse"* %43, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  tail call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* nonnull %43) #18
  %47 = bitcast %"class.net::DnsResponse"* %43 to i8*
  tail call void @_ZdlPv(i8* %47) #20
  %48 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %42, align 8
  br label %49

49:                                               ; preds = %46, %39
  %50 = phi %"class.net::DnsResponse"* [ %48, %46 ], [ %32, %39 ]
  %51 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsHTTPAttempt", %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %51, align 8
  %53 = tail call zeroext i1 @_ZN3net11DnsResponse9InitParseEmRKNS_8DnsQueryE(%"class.net::DnsResponse"* %50, i64 %27, %"class.net::DnsQuery"* dereferenceable(24) %52) #18
  br i1 %53, label %54, label %63

54:                                               ; preds = %49
  %55 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %42, align 8
  %56 = tail call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %55) #18
  %57 = icmp eq i8 %56, 3
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %42, align 8
  %60 = tail call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %59) #18
  %61 = icmp eq i8 %60, 0
  %62 = select i1 %61, i32 0, i32 -802
  br label %63

63:                                               ; preds = %12, %15, %20, %24, %49, %54, %58
  %64 = phi i32 [ %1, %12 ], [ -800, %15 ], [ -800, %20 ], [ -800, %24 ], [ -800, %49 ], [ -105, %54 ], [ %62, %58 ]
  %65 = bitcast %"class.base::OnceCallback.479"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #18
  %66 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %13, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::OnceCallback.479"* %13 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.base::OnceCallback.479"* %3 to i64*
  store i64 %68, i64* %69, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %66, align 8
  %70 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %3, i64 0, i32 0
  %71 = inttoptr i64 %68 to %"class.base::internal::BindStateBase"*
  %72 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %71, i64 0, i32 1
  %73 = bitcast void ()** %72 to void (%"class.base::internal::BindStateBase"*, i32)**
  %74 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %73, align 8
  tail call void %74(%"class.base::internal::BindStateBase"* %71, i32 %64) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %70) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #18
  ret void
}

declare i32 @_ZNK3net10URLRequest15GetResponseCodeEv(%"class.net::URLRequest"*) local_unnamed_addr #7

declare %"class.net::HttpResponseHeaders"* @_ZNK3net10URLRequest16response_headersEv(%"class.net::URLRequest"*) local_unnamed_addr #7

declare zeroext i1 @_ZNK3net19HttpResponseHeaders11GetMimeTypeEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, %"class.std::__1::basic_string"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #8

declare zeroext i1 @_ZNK3net19HttpResponseHeaders9HasHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpResponseHeaders"*, i8*, i64) local_unnamed_addr #7

declare void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"*, i32) local_unnamed_addr #7

declare i64 @_ZNK3net19HttpResponseHeaders16GetContentLengthEv(%"class.net::HttpResponseHeaders"*) local_unnamed_addr #7

declare i32 @_ZN3net10URLRequest4ReadEPNS_8IOBufferEi(%"class.net::URLRequest"*, %"class.net::IOBuffer"*, i32) local_unnamed_addr #7

declare i32 @_ZN3net16GrowableIOBuffer17RemainingCapacityEv(%"class.net::GrowableIOBuffer"*) local_unnamed_addr #7

declare void @_ZN3net16GrowableIOBuffer10set_offsetEi(%"class.net::GrowableIOBuffer"*, i32) local_unnamed_addr #7

declare zeroext i1 @_ZN3net11DnsResponse9InitParseEmRKNS_8DnsQueryE(%"class.net::DnsResponse"*, i64, %"class.net::DnsQuery"* dereferenceable(24)) local_unnamed_addr #7

declare void @_ZN3net11DnsResponseC1E13scoped_refptrINS_8IOBufferEEm(%"class.net::DnsResponse"*, %"class.net::IOBuffer"*, i64) unnamed_addr #7

declare void @_ZN3net16GrowableIOBufferC1Ev(%"class.net::GrowableIOBuffer"*) unnamed_addr #7

declare dereferenceable(8) %class.scoped_refptr.166* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS3_10URLRequestEiEJNS_7WeakPtrIS5_EES7_iEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.net::URLRequest"**
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i32*
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #18
  br i1 %10, label %11, label %48

11:                                               ; preds = %1
  %12 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %"class.net::(anonymous namespace)::DnsHTTPAttempt"**
  %14 = load %"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::(anonymous namespace)::DnsHTTPAttempt"** %13, align 8
  %15 = icmp eq %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %14, null
  br i1 %15, label %48, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %20 = bitcast void ()** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #18
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  br label %26

26:                                               ; preds = %23, %16
  %27 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #18
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = select i1 %27, i8* %29, i8* null
  %31 = getelementptr inbounds i8, i8* %30, i64 %21
  %32 = bitcast i8* %31 to %"class.net::(anonymous namespace)::DnsHTTPAttempt"*
  %33 = and i64 %18, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %26
  %36 = bitcast i8* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = add i64 %18, -1
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = bitcast i8* %39 to void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)**
  %41 = load void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)*, void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)** %40, align 8
  br label %44

42:                                               ; preds = %26
  %43 = inttoptr i64 %18 to void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)*
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi void (%"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::URLRequest"*, i32)* [ %41, %35 ], [ %43, %42 ]
  %46 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %6, align 8
  %47 = load i32, i32* %8, align 4
  call void %45(%"class.net::(anonymous namespace)::DnsHTTPAttempt"* %32, %"class.net::URLRequest"* %46, i32 %47) #18
  br label %48

48:                                               ; preds = %1, %11, %44
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS2_10URLRequestEiEJNS_7WeakPtrIS4_EES6_iEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #20
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS3_10URLRequestEiEJNS_7WeakPtrIS5_EES7_iEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::(anonymous namespace)::DnsHTTPAttempt"**
  %9 = load %"class.net::(anonymous namespace)::DnsHTTPAttempt"*, %"class.net::(anonymous namespace)::DnsHTTPAttempt"** %8, align 8
  %10 = icmp ne %"class.net::(anonymous namespace)::DnsHTTPAttempt"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #7

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #8

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #8

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EEjbS6_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::tuple.687"*
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i32*
  %10 = getelementptr inbounds %"class.std::__1::tuple.687", %"class.std::__1::tuple.687"* %5, i64 0, i32 0, i32 2, i32 0
  %11 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 %15
  %17 = bitcast i8* %16 to %"class.net::(anonymous namespace)::DnsTransactionImpl"*
  %18 = and i64 %12, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %2
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %12, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)**
  %26 = load void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)*, void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)** %25, align 8
  br label %29

27:                                               ; preds = %2
  %28 = inttoptr i64 %12 to void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)*
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)* [ %26, %20 ], [ %28, %27 ]
  %31 = load i32, i32* %9, align 4
  %32 = load i8, i8* %10, align 1, !range !17
  %33 = icmp ne i8 %32, 0
  %34 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %35 = bitcast void (%"class.base::internal::BindStateBase"*)** %34 to i64*
  %36 = load i64, i64* %35, align 8
  tail call void %30(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %17, i32 %31, i1 zeroext %33, i64 %36, i32 %1) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS4_EEjbS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #7

declare void @_ZN3net14ResolveContext9RecordRttEmbN4base9TimeDeltaEiPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i1 zeroext, i64, i32, %"class.net::DnsSession"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::(anonymous namespace)::DnsTransactionImpl"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)**
  %21 = load void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)*, void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %12) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare zeroext i16 @_ZNK3net10DnsSession11NextQueryIdEv(%"class.net::DnsSession"*) local_unnamed_addr #7

declare %"class.net::DnsQuery"* @_ZNK3net8DnsQuery14CloneWithNewIdEt(%"class.net::DnsQuery"*, i16 zeroext) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } @_ZN3net12_GLOBAL__N_118DnsTransactionImpl14MakeTcpAttemptEmNSt3__110unique_ptrINS_8DnsQueryENS2_14default_deleteIS4_EEEE(%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i64, %"class.net::DnsQuery"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.398", align 8
  %5 = alloca %"class.base::OnceCallback.479", align 8
  %6 = ptrtoint %"class.net::DnsQuery"* %2 to i64
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 2, i32 0
  %8 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %7, align 8
  %9 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.net::DnsSocketAllocator"*, %"class.net::DnsSocketAllocator"** %9, align 8
  %11 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 13
  %12 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %11, i64 0, i32 0
  %13 = tail call %"class.net::StreamSocket"* @_ZN3net18DnsSocketAllocator15CreateTcpSocketEmRKNS_12NetLogSourceE(%"class.net::DnsSocketAllocator"* %10, i64 %1, %"struct.net::NetLogSource"* dereferenceable(16) %12) #18
  %14 = ptrtoint %"class.net::StreamSocket"* %13 to i64
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 16, i32 0, i32 1
  %17 = bitcast %"class.std::__1::unique_ptr.398"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.396"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = lshr exact i64 %21, 3
  %23 = trunc i64 %22 to i32
  %24 = tail call i8* @_Znwm(i64 88) #20
  %25 = bitcast i8* %24 to %"class.net::(anonymous namespace)::DnsTCPAttempt"*
  %26 = bitcast i8* %24 to i32 (...)***
  %27 = getelementptr inbounds i8, i8* %24, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %1, i64* %28, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net12_GLOBAL__N_113DnsTCPAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 16
  %30 = bitcast i8* %29 to i32*
  store i32 7, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %24, i64 24
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %24, i64 32
  %34 = bitcast i8* %33 to i64*
  store i64 %14, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %24, i64 40
  %36 = bitcast i8* %35 to i64*
  store i64 %6, i64* %36, align 8
  %37 = tail call i8* @_Znwm(i64 32) #20
  %38 = bitcast i8* %37 to %"class.net::IOBufferWithSize"*
  tail call void @_ZN3net16IOBufferWithSizeC1Em(%"class.net::IOBufferWithSize"* nonnull %38, i64 2) #18
  %39 = getelementptr inbounds i8, i8* %37, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  %42 = getelementptr inbounds i8, i8* %24, i64 48
  %43 = bitcast i8* %42 to i8**
  store i8* %37, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %24, i64 56
  %45 = bitcast i8* %44 to %"class.net::DrainableIOBuffer"**
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %45, align 8
  %46 = getelementptr inbounds i8, i8* %24, i64 64
  %47 = bitcast i8* %46 to i16*
  store i16 0, i16* %47, align 8
  %48 = getelementptr inbounds i8, i8* %24, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #18
  %49 = bitcast %"class.std::__1::unique_ptr.398"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #18
  %50 = ptrtoint i8* %24 to i64
  %51 = bitcast %"class.std::__1::unique_ptr.398"* %4 to i64*
  store i64 %50, i64* %51, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN3net12_GLOBAL__N_110DnsAttemptENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE9push_backEOS7_(%"class.std::__1::vector.396"* %15, %"class.std::__1::unique_ptr.398"* nonnull dereferenceable(8) %4)
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %52, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %52, align 8
  %54 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %3
  %56 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %53 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %57 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %57, i64 1
  %59 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %58, align 8
  tail call void %59(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %53) #18
  br label %60

60:                                               ; preds = %55, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #18
  %61 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 17
  %62 = load i32, i32* %61, align 8
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %61, align 8
  %64 = bitcast i8* %24 to %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)***
  %65 = load %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)**, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)*, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)** %65, i64 5
  %67 = load %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)*, %"class.net::NetLogWithSource"* (%"class.net::(anonymous namespace)::DnsTCPAttempt"*)** %66, align 8
  %68 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* %67(%"class.net::(anonymous namespace)::DnsTCPAttempt"* nonnull %25) #18
  %69 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %68, i64 0, i32 0
  tail call void @_ZNK3net16NetLogWithSource25AddEventReferencingSourceENS_15NetLogEventTypeERKNS_12NetLogSourceE(%"class.net::NetLogWithSource"* %11, i32 372, %"struct.net::NetLogSource"* dereferenceable(16) %69) #18
  %70 = ptrtoint %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0 to i64
  %71 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %72 = tail call i8* @_Znwm(i64 72) #20, !noalias !83
  %73 = bitcast i8* %72 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %73, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EEjbS6_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS4_EEjbS5_EE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !83
  %74 = getelementptr inbounds i8, i8* %72, i64 32
  %75 = bitcast i8* %74 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)* @_ZN3net12_GLOBAL__N_118DnsTransactionImpl17OnAttemptCompleteEjbN4base9TimeTicksEi to i64), i64 0>, <2 x i64>* %75, align 8, !noalias !83
  %76 = getelementptr inbounds i8, i8* %72, i64 48
  %77 = bitcast i8* %76 to i64*
  store i64 %70, i64* %77, align 8, !noalias !83
  %78 = getelementptr inbounds i8, i8* %72, i64 56
  %79 = bitcast i8* %78 to i32*
  store i32 %23, i32* %79, align 4, !noalias !83
  %80 = getelementptr inbounds i8, i8* %72, i64 60
  store i8 0, i8* %80, align 1, !noalias !83
  %81 = getelementptr inbounds i8, i8* %72, i64 64
  %82 = bitcast i8* %81 to i64*
  store i64 %71, i64* %82, align 8, !noalias !83
  %83 = bitcast %"class.base::OnceCallback.479"* %5 to i8**
  store i8* %72, i8** %83, align 8, !alias.scope !83
  %84 = bitcast i8* %24 to i32 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*)***
  %85 = load i32 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*)**, i32 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*)*** %84, align 8
  %86 = getelementptr inbounds i32 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*)** %85, i64 2
  %87 = load i32 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*)** %86, align 8
  %88 = call i32 %87(%"class.net::(anonymous namespace)::DnsTCPAttempt"* nonnull %25, %"class.base::OnceCallback.479"* nonnull %5) #18
  %89 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #18
  %90 = bitcast i8* %24 to %"class.net::(anonymous namespace)::DnsAttempt"*
  %91 = insertvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } undef, i32 %88, 0
  %92 = insertvalue { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %91, %"class.net::(anonymous namespace)::DnsAttempt"* %90, 1
  ret { i32, %"class.net::(anonymous namespace)::DnsAttempt"* } %92
}

declare i64 @_ZN3net14ResolveContext25NextClassicFallbackPeriodEmiPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i32, %"class.net::DnsSession"*) local_unnamed_addr #7

declare %"class.net::StreamSocket"* @_ZN3net18DnsSocketAllocator15CreateTcpSocketEmRKNS_12NetLogSourceE(%"class.net::DnsSocketAllocator"*, i64, %"struct.net::NetLogSource"* dereferenceable(16)) local_unnamed_addr #7

declare void @_ZNK3net16NetLogWithSource25AddEventReferencingSourceENS_15NetLogEventTypeERKNS_12NetLogSourceE(%"class.net::NetLogWithSource"*, i32, %"struct.net::NetLogSource"* dereferenceable(16)) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_113DnsTCPAttemptD2Ev(%"class.net::(anonymous namespace)::DnsTCPAttempt"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net12_GLOBAL__N_113DnsTCPAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #18
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %4, align 8
  store %"class.net::DnsResponse"* null, %"class.net::DnsResponse"** %4, align 8
  %6 = icmp eq %"class.net::DnsResponse"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* nonnull %5) #18
  %8 = bitcast %"class.net::DnsResponse"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #20
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 6, i32 0
  %11 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %10, align 8
  %12 = icmp eq %"class.net::DrainableIOBuffer"* %11, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %11, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %25

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %14, i64 -2
  %20 = bitcast %"class.base::RefCountedThreadSafe.460"* %19 to %"class.net::IOBuffer"*
  %21 = bitcast %"class.base::RefCountedThreadSafe.460"* %19 to void (%"class.net::IOBuffer"*)***
  %22 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %22, i64 1
  %24 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %23, align 8
  tail call void %24(%"class.net::IOBuffer"* nonnull %20) #18
  br label %25

25:                                               ; preds = %9, %13, %18
  %26 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 5, i32 0
  %27 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %26, align 8
  %28 = icmp eq %"class.net::IOBufferWithSize"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %27, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %30, i64 -2
  %36 = bitcast %"class.base::RefCountedThreadSafe.460"* %35 to %"class.net::IOBuffer"*
  %37 = bitcast %"class.base::RefCountedThreadSafe.460"* %35 to void (%"class.net::IOBuffer"*)***
  %38 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %38, i64 1
  %40 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %39, align 8
  tail call void %40(%"class.net::IOBuffer"* nonnull %36) #18
  br label %41

41:                                               ; preds = %25, %29, %34
  %42 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %42, align 8
  store %"class.net::DnsQuery"* null, %"class.net::DnsQuery"** %42, align 8
  %44 = icmp eq %"class.net::DnsQuery"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  tail call void @_ZN3net8DnsQueryD1Ev(%"class.net::DnsQuery"* nonnull %43) #18
  %46 = bitcast %"class.net::DnsQuery"* %43 to i8*
  tail call void @_ZdlPv(i8* %46) #20
  br label %47

47:                                               ; preds = %41, %45
  %48 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %48, align 8
  store %"class.net::StreamSocket"* null, %"class.net::StreamSocket"** %48, align 8
  %50 = icmp eq %"class.net::StreamSocket"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.net::StreamSocket"* %49 to void (%"class.net::StreamSocket"*)***
  %53 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %53, i64 1
  %55 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %54, align 8
  tail call void %55(%"class.net::StreamSocket"* nonnull %49) #18
  br label %56

56:                                               ; preds = %47, %51
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_113DnsTCPAttemptD0Ev(%"class.net::(anonymous namespace)::DnsTCPAttempt"*) unnamed_addr #4 align 2 {
  tail call void @_ZN3net12_GLOBAL__N_113DnsTCPAttemptD2Ev(%"class.net::(anonymous namespace)::DnsTCPAttempt"* %0) #18
  %2 = bitcast %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3net12_GLOBAL__N_113DnsTCPAttempt5StartEN4base12OnceCallbackIFviEEE(%"class.net::(anonymous namespace)::DnsTCPAttempt"*, %"class.base::OnceCallback.479"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.479", align 8
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 9, i32 0
  %5 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %1, i64 0, i32 0
  %6 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %4, %"class.base::internal::CallbackBase"* dereferenceable(8) %5) #18
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %10, align 8
  %12 = ptrtoint %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0 to i64
  %13 = tail call i8* @_Znwm(i64 56) #20, !noalias !88
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !88
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)* @_ZN3net12_GLOBAL__N_113DnsTCPAttempt12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !88
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %12, i64* %18, align 8, !noalias !88
  %19 = bitcast %"class.base::OnceCallback.479"* %3 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !88
  %20 = bitcast %"class.net::StreamSocket"* %11 to i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.479"*)***
  %21 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.479"*)**, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.479"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.479"*)** %21, i64 11
  %23 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback.479"*)** %22, align 8
  %24 = call i32 %23(%"class.net::StreamSocket"* %11, %"class.base::OnceCallback.479"* nonnull %3) #18
  %25 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #18
  %26 = icmp eq i32 %24, -1
  br i1 %26, label %29, label %27

27:                                               ; preds = %2
  %28 = call fastcc i32 @_ZN3net12_GLOBAL__N_113DnsTCPAttempt6DoLoopEi(%"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i32 %24)
  br label %29

29:                                               ; preds = %2, %27
  %30 = phi i32 [ %28, %27 ], [ -1, %2 ]
  ret i32 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.net::DnsQuery"* @_ZNK3net12_GLOBAL__N_113DnsTCPAttempt8GetQueryEv(%"class.net::(anonymous namespace)::DnsTCPAttempt"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %2, align 8
  ret %"class.net::DnsQuery"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.net::DnsResponse"* @_ZNK3net12_GLOBAL__N_113DnsTCPAttempt11GetResponseEv(%"class.net::(anonymous namespace)::DnsTCPAttempt"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %2, align 8
  %4 = icmp eq %"class.net::DnsResponse"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK3net11DnsResponse7IsValidEv(%"class.net::DnsResponse"* nonnull %3) #18
  %7 = select i1 %6, %"class.net::DnsResponse"* %3, %"class.net::DnsResponse"* null
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.net::DnsResponse"* [ null, %1 ], [ %7, %5 ]
  ret %"class.net::DnsResponse"* %9
}

; Function Attrs: nounwind ssp uwtable
define internal dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK3net12_GLOBAL__N_113DnsTCPAttempt15GetSocketNetLogEv(%"class.net::(anonymous namespace)::DnsTCPAttempt"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %2, align 8
  %4 = bitcast %"class.net::StreamSocket"* %3 to %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)***
  %5 = load %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)**, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)** %5, i64 18
  %7 = load %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)*, %"class.net::NetLogWithSource"* (%"class.net::StreamSocket"*)** %6, align 8
  %8 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* %7(%"class.net::StreamSocket"* %3) #18
  ret %"class.net::NetLogWithSource"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK3net12_GLOBAL__N_113DnsTCPAttempt9IsPendingEv(%"class.net::(anonymous namespace)::DnsTCPAttempt"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 7
  ret i1 %4
}

declare void @_ZN3net16IOBufferWithSizeC1Em(%"class.net::IOBufferWithSize"*, i64) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_113DnsTCPAttempt12OnIOCompleteEi(%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.479", align 8
  %4 = tail call fastcc i32 @_ZN3net12_GLOBAL__N_113DnsTCPAttempt6DoLoopEi(%"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i32 %1)
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 9
  %8 = bitcast %"class.base::OnceCallback.479"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.479"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.479"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %3, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i32)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14, i32 %4) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  br label %18

18:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3net12_GLOBAL__N_113DnsTCPAttempt6DoLoopEi(%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.479", align 8
  %4 = alloca %"class.base::OnceCallback.479", align 8
  %5 = alloca %"class.base::OnceCallback.479", align 8
  %6 = alloca %"class.base::OnceCallback.479", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #18
  store i32 7, i32* %9, align 4
  %14 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 1
  %15 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = load i32, i32* %14, align 4
  %17 = icmp eq i32 %16, 7
  br i1 %17, label %19, label %18

18:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #18
  br label %29

19:                                               ; preds = %2
  %20 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %13, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN3net12_GLOBAL__N_113DnsTCPAttempt5StateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #18
  %21 = bitcast i32* %14 to i8*
  %22 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN3net12_GLOBAL__N_113DnsTCPAttempt5StateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i64 0, i64 0), i8* %20, i8* %22) #18
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %24, i8** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #18
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 651, %"class.logging::CheckOpResult"* nonnull %8) #18
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #18
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #18
  %30 = load i32, i32* %14, align 8
  %31 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 6, i32 0
  %32 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = bitcast %"class.base::OnceCallback.479"* %3 to i8*
  %35 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = ptrtoint %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0 to i64
  %37 = bitcast %"class.base::OnceCallback.479"* %3 to i8**
  %38 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %3, i64 0, i32 0
  %39 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 6
  %40 = getelementptr inbounds %class.scoped_refptr.708, %class.scoped_refptr.708* %39, i64 0, i32 0
  %41 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 5, i32 0
  %42 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 7
  %43 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTCPAttempt", %"class.net::(anonymous namespace)::DnsTCPAttempt"* %0, i64 0, i32 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.500"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.500"* %43 to i64*
  %46 = bitcast %class.scoped_refptr.708* %39 to i64*
  %47 = bitcast %"class.base::OnceCallback.479"* %4 to i8*
  %48 = bitcast %"class.base::OnceCallback.479"* %4 to i8**
  %49 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %4, i64 0, i32 0
  %50 = bitcast %"class.base::OnceCallback.479"* %5 to i8*
  %51 = bitcast %"class.base::OnceCallback.479"* %5 to i8**
  %52 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %5, i64 0, i32 0
  %53 = bitcast %"class.base::OnceCallback.479"* %6 to i8*
  %54 = bitcast %"class.base::OnceCallback.479"* %6 to i8**
  %55 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %6, i64 0, i32 0
  br label %56

56:                                               ; preds = %365, %29
  %57 = phi i32 [ %366, %365 ], [ %30, %29 ]
  %58 = phi i32 [ %367, %365 ], [ %1, %29 ]
  store i32 7, i32* %14, align 8
  switch i32 %57, label %359 [
    i32 0, label %59
    i32 1, label %107
    i32 2, label %166
    i32 3, label %223
    i32 4, label %240
    i32 5, label %311
    i32 6, label %328
  ]

59:                                               ; preds = %56
  %60 = icmp slt i32 %58, 0
  br i1 %60, label %359, label %61

61:                                               ; preds = %59
  %62 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %33, align 8
  %63 = getelementptr inbounds %"class.net::DnsQuery", %"class.net::DnsQuery"* %62, i64 0, i32 1, i32 0
  %64 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %63, align 8
  %65 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp ult i32 %66, 65536
  br i1 %67, label %68, label %362

68:                                               ; preds = %61
  %69 = trunc i32 %66 to i16
  %70 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %41, align 8
  %71 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %70, i64 0, i32 0, i32 2
  %72 = load i8*, i8** %71, align 8
  %73 = trunc i32 %66 to i8
  %74 = getelementptr inbounds i8, i8* %72, i64 1
  store i8 %73, i8* %74, align 1
  %75 = lshr i16 %69, 8
  %76 = trunc i16 %75 to i8
  store i8 %76, i8* %72, align 1
  %77 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %41, align 8
  %78 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %77, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call i8* @_Znwm(i64 40) #20
  %81 = bitcast i8* %80 to %"class.net::DrainableIOBuffer"*
  %82 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %77, i64 0, i32 0
  %83 = icmp eq %"class.net::IOBufferWithSize"* %77, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %77, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 1 monotonic
  br label %87

87:                                               ; preds = %84, %68
  call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %81, %"class.net::IOBuffer"* %82, i32 %79) #18
  %88 = getelementptr inbounds i8, i8* %80, i64 8
  %89 = bitcast i8* %88 to i32*
  %90 = atomicrmw add i32* %89, i32 1 monotonic
  %91 = ptrtoint i8* %80 to i64
  %92 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  store i64 %91, i64* %46, align 8
  %93 = icmp eq %"class.net::DrainableIOBuffer"* %92, null
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %92, i64 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw sub i32* %96, i32 1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %106

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %95, i64 -2
  %101 = bitcast %"class.base::RefCountedThreadSafe.460"* %100 to %"class.net::IOBuffer"*
  %102 = bitcast %"class.base::RefCountedThreadSafe.460"* %100 to void (%"class.net::IOBuffer"*)***
  %103 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %103, i64 1
  %105 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %104, align 8
  call void %105(%"class.net::IOBuffer"* nonnull %101) #18
  br label %106

106:                                              ; preds = %99, %94, %87
  store i32 1, i32* %14, align 8
  br label %365

107:                                              ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %108 = icmp slt i32 %58, 0
  br i1 %108, label %164, label %109

109:                                              ; preds = %107
  %110 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %110, i32 %58) #18
  %111 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  %112 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %111) #18
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %131

114:                                              ; preds = %109
  store i32 1, i32* %14, align 8
  %115 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %35, align 8
  %116 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %115, i64 0, i32 0
  %117 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  %118 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %117, i64 0, i32 0
  %119 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %117) #18
  %120 = call i8* @_Znwm(i64 56) #20, !noalias !93
  %121 = bitcast i8* %120 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %121, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !93
  %122 = getelementptr inbounds i8, i8* %120, i64 32
  %123 = bitcast i8* %122 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)* @_ZN3net12_GLOBAL__N_113DnsTCPAttempt12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %123, align 8, !noalias !93
  %124 = getelementptr inbounds i8, i8* %120, i64 48
  %125 = bitcast i8* %124 to i64*
  store i64 %36, i64* %125, align 8, !noalias !93
  store i8* %120, i8** %54, align 8, !alias.scope !93
  %126 = bitcast %"class.net::StreamSocket"* %115 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)***
  %127 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*** %126, align 8
  %128 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %127, i64 5
  %129 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %128, align 8
  %130 = call i32 %129(%"class.net::Socket"* %116, %"class.net::IOBuffer"* %118, i32 %119, %"class.base::OnceCallback.479"* nonnull %6, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) @_ZN3net12_GLOBAL__N_118kTrafficAnnotationE) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #18
  br label %164

131:                                              ; preds = %109
  %132 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %33, align 8
  %133 = getelementptr inbounds %"class.net::DnsQuery", %"class.net::DnsQuery"* %132, i64 0, i32 1, i32 0
  %134 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %133, align 8
  %135 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %134, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = call i8* @_Znwm(i64 40) #20
  %138 = bitcast i8* %137 to %"class.net::DrainableIOBuffer"*
  %139 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %134, i64 0, i32 0
  %140 = icmp eq %"class.net::IOBufferWithSize"* %134, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %131
  %142 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %134, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 1 monotonic
  br label %144

144:                                              ; preds = %141, %131
  call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %138, %"class.net::IOBuffer"* %139, i32 %136) #18
  %145 = getelementptr inbounds i8, i8* %137, i64 8
  %146 = bitcast i8* %145 to i32*
  %147 = atomicrmw add i32* %146, i32 1 monotonic
  %148 = ptrtoint i8* %137 to i64
  %149 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  store i64 %148, i64* %46, align 8
  %150 = icmp eq %"class.net::DrainableIOBuffer"* %149, null
  br i1 %150, label %163, label %151

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %149, i64 0, i32 0, i32 1
  %153 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = atomicrmw sub i32* %153, i32 1 acq_rel
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %156, label %163

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %152, i64 -2
  %158 = bitcast %"class.base::RefCountedThreadSafe.460"* %157 to %"class.net::IOBuffer"*
  %159 = bitcast %"class.base::RefCountedThreadSafe.460"* %157 to void (%"class.net::IOBuffer"*)***
  %160 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %160, i64 1
  %162 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %161, align 8
  call void %162(%"class.net::IOBuffer"* nonnull %158) #18
  br label %163

163:                                              ; preds = %156, %151, %144
  store i32 2, i32* %14, align 8
  br label %164

164:                                              ; preds = %107, %114, %163
  %165 = phi i32 [ %130, %114 ], [ 0, %163 ], [ %58, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  br label %359

166:                                              ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %167 = icmp slt i32 %58, 0
  br i1 %167, label %221, label %168

168:                                              ; preds = %166
  %169 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %169, i32 %58) #18
  %170 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  %171 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %170) #18
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %190

173:                                              ; preds = %168
  store i32 2, i32* %14, align 8
  %174 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %35, align 8
  %175 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %174, i64 0, i32 0
  %176 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  %177 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %176, i64 0, i32 0
  %178 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %176) #18
  %179 = call i8* @_Znwm(i64 56) #20, !noalias !98
  %180 = bitcast i8* %179 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %180, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !98
  %181 = getelementptr inbounds i8, i8* %179, i64 32
  %182 = bitcast i8* %181 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)* @_ZN3net12_GLOBAL__N_113DnsTCPAttempt12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %182, align 8, !noalias !98
  %183 = getelementptr inbounds i8, i8* %179, i64 48
  %184 = bitcast i8* %183 to i64*
  store i64 %36, i64* %184, align 8, !noalias !98
  store i8* %179, i8** %51, align 8, !alias.scope !98
  %185 = bitcast %"class.net::StreamSocket"* %174 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)***
  %186 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*** %185, align 8
  %187 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %186, i64 5
  %188 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %187, align 8
  %189 = call i32 %188(%"class.net::Socket"* %175, %"class.net::IOBuffer"* %177, i32 %178, %"class.base::OnceCallback.479"* nonnull %5, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) @_ZN3net12_GLOBAL__N_118kTrafficAnnotationE) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #18
  br label %221

190:                                              ; preds = %168
  %191 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %41, align 8
  %192 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %191, i64 0, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = call i8* @_Znwm(i64 40) #20
  %195 = bitcast i8* %194 to %"class.net::DrainableIOBuffer"*
  %196 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %191, i64 0, i32 0
  %197 = icmp eq %"class.net::IOBufferWithSize"* %191, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %191, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = atomicrmw add i32* %199, i32 1 monotonic
  br label %201

201:                                              ; preds = %198, %190
  call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %195, %"class.net::IOBuffer"* %196, i32 %193) #18
  %202 = getelementptr inbounds i8, i8* %194, i64 8
  %203 = bitcast i8* %202 to i32*
  %204 = atomicrmw add i32* %203, i32 1 monotonic
  %205 = ptrtoint i8* %194 to i64
  %206 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  store i64 %205, i64* %46, align 8
  %207 = icmp eq %"class.net::DrainableIOBuffer"* %206, null
  br i1 %207, label %220, label %208

208:                                              ; preds = %201
  %209 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %206, i64 0, i32 0, i32 1
  %210 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = atomicrmw sub i32* %210, i32 1 acq_rel
  %212 = icmp eq i32 %211, 1
  br i1 %212, label %213, label %220

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %209, i64 -2
  %215 = bitcast %"class.base::RefCountedThreadSafe.460"* %214 to %"class.net::IOBuffer"*
  %216 = bitcast %"class.base::RefCountedThreadSafe.460"* %214 to void (%"class.net::IOBuffer"*)***
  %217 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %216, align 8
  %218 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %217, i64 1
  %219 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %218, align 8
  call void %219(%"class.net::IOBuffer"* nonnull %215) #18
  br label %220

220:                                              ; preds = %213, %208, %201
  store i32 3, i32* %14, align 8
  br label %221

221:                                              ; preds = %166, %173, %220
  %222 = phi i32 [ %189, %173 ], [ 0, %220 ], [ %58, %166 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  br label %359

223:                                              ; preds = %56
  store i32 4, i32* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  %224 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %35, align 8
  %225 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %224, i64 0, i32 0
  %226 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %31, align 8
  %227 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %226, i64 0, i32 0
  %228 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %226) #18
  %229 = call i8* @_Znwm(i64 56) #20, !noalias !103
  %230 = bitcast i8* %229 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %230, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !103
  %231 = getelementptr inbounds i8, i8* %229, i64 32
  %232 = bitcast i8* %231 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)* @_ZN3net12_GLOBAL__N_113DnsTCPAttempt12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %232, align 8, !noalias !103
  %233 = getelementptr inbounds i8, i8* %229, i64 48
  %234 = bitcast i8* %233 to i64*
  store i64 %36, i64* %234, align 8, !noalias !103
  store i8* %229, i8** %48, align 8, !alias.scope !103
  %235 = bitcast %"class.net::StreamSocket"* %224 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)***
  %236 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*** %235, align 8
  %237 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)** %236, i64 2
  %238 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)** %237, align 8
  %239 = call i32 %238(%"class.net::Socket"* %225, %"class.net::IOBuffer"* %227, i32 %228, %"class.base::OnceCallback.479"* nonnull %4) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %359

240:                                              ; preds = %56
  %241 = icmp slt i32 %58, 0
  br i1 %241, label %359, label %242

242:                                              ; preds = %240
  %243 = icmp eq i32 %58, 0
  br i1 %243, label %369, label %244

244:                                              ; preds = %242
  %245 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %245, i32 %58) #18
  %246 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  %247 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %246) #18
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %244
  store i32 3, i32* %14, align 8
  br label %365

250:                                              ; preds = %244
  %251 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %41, align 8
  %252 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %251, i64 0, i32 0, i32 2
  %253 = load i8*, i8** %252, align 8
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i16
  %256 = shl nuw i16 %255, 8
  %257 = getelementptr inbounds i8, i8* %253, i64 1
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i16
  %260 = or i16 %256, %259
  store i16 %260, i16* %42, align 2
  %261 = zext i16 %260 to i32
  %262 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %33, align 8
  %263 = getelementptr inbounds %"class.net::DnsQuery", %"class.net::DnsQuery"* %262, i64 0, i32 1, i32 0
  %264 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %263, align 8
  %265 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %264, i64 0, i32 1
  %266 = load i32, i32* %265, align 8
  %267 = icmp sgt i32 %266, %261
  br i1 %267, label %362, label %268

268:                                              ; preds = %250
  %269 = add nuw nsw i32 %261, 1
  %270 = call i8* @_Znwm(i64 112) #20
  %271 = bitcast i8* %270 to %"class.net::DnsResponse"*
  %272 = zext i32 %269 to i64
  call void @_ZN3net11DnsResponseC1Em(%"class.net::DnsResponse"* nonnull %271, i64 %272) #18
  %273 = ptrtoint i8* %270 to i64
  %274 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %44, align 8
  store i64 %273, i64* %45, align 8
  %275 = icmp eq %"class.net::DnsResponse"* %274, null
  br i1 %275, label %279, label %276

276:                                              ; preds = %268
  call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* nonnull %274) #18
  %277 = bitcast %"class.net::DnsResponse"* %274 to i8*
  call void @_ZdlPv(i8* %277) #20
  %278 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %44, align 8
  br label %279

279:                                              ; preds = %276, %268
  %280 = phi %"class.net::DnsResponse"* [ %278, %276 ], [ %271, %268 ]
  %281 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %280, i64 0, i32 0, i32 0
  %282 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %281, align 8
  %283 = call i8* @_Znwm(i64 40) #20
  %284 = bitcast i8* %283 to %"class.net::DrainableIOBuffer"*
  %285 = icmp eq %"class.net::IOBuffer"* %282, null
  br i1 %285, label %289, label %286

286:                                              ; preds = %279
  %287 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %282, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = atomicrmw add i32* %287, i32 1 monotonic
  br label %289

289:                                              ; preds = %286, %279
  %290 = load i16, i16* %42, align 2
  %291 = zext i16 %290 to i32
  call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %284, %"class.net::IOBuffer"* %282, i32 %291) #18
  %292 = getelementptr inbounds i8, i8* %283, i64 8
  %293 = bitcast i8* %292 to i32*
  %294 = atomicrmw add i32* %293, i32 1 monotonic
  %295 = ptrtoint i8* %283 to i64
  %296 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %40, align 8
  store i64 %295, i64* %46, align 8
  %297 = icmp eq %"class.net::DrainableIOBuffer"* %296, null
  br i1 %297, label %310, label %298

298:                                              ; preds = %289
  %299 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %296, i64 0, i32 0, i32 1
  %300 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %299, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = atomicrmw sub i32* %300, i32 1 acq_rel
  %302 = icmp eq i32 %301, 1
  br i1 %302, label %303, label %310

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.base::RefCountedThreadSafe.460", %"class.base::RefCountedThreadSafe.460"* %299, i64 -2
  %305 = bitcast %"class.base::RefCountedThreadSafe.460"* %304 to %"class.net::IOBuffer"*
  %306 = bitcast %"class.base::RefCountedThreadSafe.460"* %304 to void (%"class.net::IOBuffer"*)***
  %307 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %307, i64 1
  %309 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %308, align 8
  call void %309(%"class.net::IOBuffer"* nonnull %305) #18
  br label %310

310:                                              ; preds = %303, %298, %289
  store i32 5, i32* %14, align 8
  br label %365

311:                                              ; preds = %56
  store i32 6, i32* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  %312 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %35, align 8
  %313 = getelementptr inbounds %"class.net::StreamSocket", %"class.net::StreamSocket"* %312, i64 0, i32 0
  %314 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %31, align 8
  %315 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %314, i64 0, i32 0
  %316 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %314) #18
  %317 = call i8* @_Znwm(i64 56) #20, !noalias !108
  %318 = bitcast i8* %317 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %318, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !108
  %319 = getelementptr inbounds i8, i8* %317, i64 32
  %320 = bitcast i8* %319 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)* @_ZN3net12_GLOBAL__N_113DnsTCPAttempt12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %320, align 8, !noalias !108
  %321 = getelementptr inbounds i8, i8* %317, i64 48
  %322 = bitcast i8* %321 to i64*
  store i64 %36, i64* %322, align 8, !noalias !108
  store i8* %317, i8** %37, align 8, !alias.scope !108
  %323 = bitcast %"class.net::StreamSocket"* %312 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)***
  %324 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*** %323, align 8
  %325 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)** %324, i64 2
  %326 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)** %325, align 8
  %327 = call i32 %326(%"class.net::Socket"* %313, %"class.net::IOBuffer"* %315, i32 %316, %"class.base::OnceCallback.479"* nonnull %3) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  br label %359

328:                                              ; preds = %56
  %329 = icmp slt i32 %58, 0
  br i1 %329, label %359, label %330

330:                                              ; preds = %328
  %331 = icmp eq i32 %58, 0
  br i1 %331, label %369, label %332

332:                                              ; preds = %330
  %333 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %31, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %333, i32 %58) #18
  %334 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %31, align 8
  %335 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %334) #18
  %336 = icmp sgt i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %332
  store i32 5, i32* %14, align 8
  br label %365

338:                                              ; preds = %332
  %339 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %32, align 8
  %340 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %31, align 8
  %341 = call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* %340) #18
  %342 = sext i32 %341 to i64
  %343 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %33, align 8
  %344 = call zeroext i1 @_ZN3net11DnsResponse9InitParseEmRKNS_8DnsQueryE(%"class.net::DnsResponse"* %339, i64 %342, %"class.net::DnsQuery"* dereferenceable(24) %343) #18
  br i1 %344, label %345, label %362

345:                                              ; preds = %338
  %346 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %32, align 8
  %347 = call zeroext i16 @_ZNK3net11DnsResponse5flagsEv(%"class.net::DnsResponse"* %346) #18
  %348 = and i16 %347, 512
  %349 = icmp eq i16 %348, 0
  br i1 %349, label %350, label %362

350:                                              ; preds = %345
  %351 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %32, align 8
  %352 = call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %351) #18
  %353 = icmp eq i8 %352, 3
  br i1 %353, label %362, label %354

354:                                              ; preds = %350
  %355 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %32, align 8
  %356 = call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %355) #18
  %357 = icmp eq i8 %356, 0
  %358 = select i1 %357, i32 0, i32 -802
  br label %362

359:                                              ; preds = %328, %240, %59, %56, %311, %223, %221, %164
  %360 = phi i32 [ %58, %56 ], [ %327, %311 ], [ %239, %223 ], [ %222, %221 ], [ %165, %164 ], [ %58, %59 ], [ %58, %240 ], [ %58, %328 ]
  %361 = icmp eq i32 %360, -1
  br i1 %361, label %369, label %362

362:                                              ; preds = %359, %61, %250, %338, %345, %350, %354
  %363 = phi i32 [ -2, %61 ], [ -800, %250 ], [ -800, %338 ], [ -9, %345 ], [ -105, %350 ], [ %358, %354 ], [ %360, %359 ]
  %364 = load i32, i32* %14, align 8
  br label %365

365:                                              ; preds = %362, %337, %310, %249, %106
  %366 = phi i32 [ %364, %362 ], [ 5, %337 ], [ 5, %310 ], [ 3, %249 ], [ 1, %106 ]
  %367 = phi i32 [ %363, %362 ], [ 0, %337 ], [ 0, %310 ], [ 0, %249 ], [ 0, %106 ]
  %368 = icmp eq i32 %366, 7
  br i1 %368, label %369, label %56

369:                                              ; preds = %242, %330, %365, %359
  %370 = phi i32 [ %367, %365 ], [ -1, %359 ], [ -100, %330 ], [ -100, %242 ]
  ret i32 %370
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::(anonymous namespace)::DnsTCPAttempt"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)**
  %22 = load void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)*, void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::(anonymous namespace)::DnsTCPAttempt"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::(anonymous namespace)::DnsTCPAttempt"* %13, i32 %1) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN7logging15CheckOpValueStrIN3net12_GLOBAL__N_113DnsTCPAttempt5StateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8* nocapture readonly) #4 align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #18
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #7

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i32) unnamed_addr #7

declare void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #7

declare i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #7

declare void @_ZN3net11DnsResponseC1Em(%"class.net::DnsResponse"*, i64) unnamed_addr #7

declare i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #7

declare zeroext i16 @_ZNK3net11DnsResponse5flagsEv(%"class.net::DnsResponse"*) local_unnamed_addr #7

declare %"class.net::DatagramClientSocket"* @_ZN3net18DnsSocketAllocator24CreateConnectedUdpSocketEmPi(%"class.net::DnsSocketAllocator"*, i64, i32*) local_unnamed_addr #7

declare void @_ZN3net13DnsUdpTracker21RecordConnectionErrorEi(%"class.net::DnsUdpTracker"*, i32) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_113DnsUDPAttemptD2Ev(%"class.net::(anonymous namespace)::DnsUDPAttempt"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net12_GLOBAL__N_113DnsUDPAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #18
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %4, align 8
  store %"class.net::DnsResponse"* null, %"class.net::DnsResponse"** %4, align 8
  %6 = icmp eq %"class.net::DnsResponse"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* nonnull %5) #18
  %8 = bitcast %"class.net::DnsResponse"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #20
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %10, align 8
  store %"class.net::DnsQuery"* null, %"class.net::DnsQuery"** %10, align 8
  %12 = icmp eq %"class.net::DnsQuery"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  tail call void @_ZN3net8DnsQueryD1Ev(%"class.net::DnsQuery"* nonnull %11) #18
  %14 = bitcast %"class.net::DnsQuery"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #20
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %16, align 8
  store %"class.net::DatagramClientSocket"* null, %"class.net::DatagramClientSocket"** %16, align 8
  %18 = icmp eq %"class.net::DatagramClientSocket"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.net::DatagramClientSocket"* %17 to void (%"class.net::DatagramClientSocket"*)***
  %21 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %21, i64 1
  %23 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %22, align 8
  tail call void %23(%"class.net::DatagramClientSocket"* nonnull %17) #18
  br label %24

24:                                               ; preds = %15, %19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_113DnsUDPAttemptD0Ev(%"class.net::(anonymous namespace)::DnsUDPAttempt"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net12_GLOBAL__N_113DnsUDPAttemptE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #18
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %4, align 8
  store %"class.net::DnsResponse"* null, %"class.net::DnsResponse"** %4, align 8
  %6 = icmp eq %"class.net::DnsResponse"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* nonnull %5) #18
  %8 = bitcast %"class.net::DnsResponse"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #20
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %10, align 8
  store %"class.net::DnsQuery"* null, %"class.net::DnsQuery"** %10, align 8
  %12 = icmp eq %"class.net::DnsQuery"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  tail call void @_ZN3net8DnsQueryD1Ev(%"class.net::DnsQuery"* nonnull %11) #18
  %14 = bitcast %"class.net::DnsQuery"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #20
  br label %15

15:                                               ; preds = %13, %9
  %16 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %16, align 8
  store %"class.net::DatagramClientSocket"* null, %"class.net::DatagramClientSocket"** %16, align 8
  %18 = icmp eq %"class.net::DatagramClientSocket"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.net::DatagramClientSocket"* %17 to void (%"class.net::DatagramClientSocket"*)***
  %21 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %21, i64 1
  %23 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %22, align 8
  tail call void %23(%"class.net::DatagramClientSocket"* nonnull %17) #18
  br label %24

24:                                               ; preds = %15, %19
  %25 = bitcast %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3net12_GLOBAL__N_113DnsUDPAttempt5StartEN4base12OnceCallbackIFviEEE(%"class.net::(anonymous namespace)::DnsUDPAttempt"*, %"class.base::OnceCallback.479"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::IPEndPoint", align 2
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 7, i32 0
  %5 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %1, i64 0, i32 0
  %6 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %4, %"class.base::internal::CallbackBase"* dereferenceable(8) %5) #18
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %10) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %10, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %3) #18
  %11 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %11, align 8
  %13 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %12, i64 0, i32 0
  %14 = bitcast %"class.net::DatagramClientSocket"* %12 to i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)***
  %15 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %15, i64 4
  %17 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %16, align 8
  %18 = call i32 %17(%"class.net::DatagramSocket"* %13, %"class.net::IPEndPoint"* nonnull %3) #18
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 5
  %22 = load %"class.net::DnsUdpTracker"*, %"class.net::DnsUdpTracker"** %21, align 8
  %23 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %3, i64 0, i32 1
  %24 = load i16, i16* %23, align 2
  %25 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %25, align 8
  %27 = call zeroext i16 @_ZNK3net8DnsQuery2idEv(%"class.net::DnsQuery"* %26) #18
  call void @_ZN3net13DnsUdpTracker11RecordQueryEtt(%"class.net::DnsUdpTracker"* %22, i16 zeroext %24, i16 zeroext %27) #18
  br label %28

28:                                               ; preds = %20, %2
  %29 = call fastcc i32 @_ZN3net12_GLOBAL__N_113DnsUDPAttempt6DoLoopEi(%"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i32 0)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %10) #18
  ret i32 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.net::DnsQuery"* @_ZNK3net12_GLOBAL__N_113DnsUDPAttempt8GetQueryEv(%"class.net::(anonymous namespace)::DnsUDPAttempt"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %2, align 8
  ret %"class.net::DnsQuery"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.net::DnsResponse"* @_ZNK3net12_GLOBAL__N_113DnsUDPAttempt11GetResponseEv(%"class.net::(anonymous namespace)::DnsUDPAttempt"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %2, align 8
  %4 = icmp eq %"class.net::DnsResponse"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK3net11DnsResponse7IsValidEv(%"class.net::DnsResponse"* nonnull %3) #18
  %7 = select i1 %6, %"class.net::DnsResponse"* %3, %"class.net::DnsResponse"* null
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.net::DnsResponse"* [ null, %1 ], [ %7, %5 ]
  ret %"class.net::DnsResponse"* %9
}

; Function Attrs: nounwind ssp uwtable
define internal dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK3net12_GLOBAL__N_113DnsUDPAttempt15GetSocketNetLogEv(%"class.net::(anonymous namespace)::DnsUDPAttempt"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %2, align 8
  %4 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %3, i64 0, i32 0
  %5 = bitcast %"class.net::DatagramClientSocket"* %3 to %"class.net::NetLogWithSource"* (%"class.net::DatagramSocket"*)***
  %6 = load %"class.net::NetLogWithSource"* (%"class.net::DatagramSocket"*)**, %"class.net::NetLogWithSource"* (%"class.net::DatagramSocket"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.net::NetLogWithSource"* (%"class.net::DatagramSocket"*)*, %"class.net::NetLogWithSource"* (%"class.net::DatagramSocket"*)** %6, i64 8
  %8 = load %"class.net::NetLogWithSource"* (%"class.net::DatagramSocket"*)*, %"class.net::NetLogWithSource"* (%"class.net::DatagramSocket"*)** %7, align 8
  %9 = tail call dereferenceable(24) %"class.net::NetLogWithSource"* %8(%"class.net::DatagramSocket"* %4) #18
  ret %"class.net::NetLogWithSource"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK3net12_GLOBAL__N_113DnsUDPAttempt9IsPendingEv(%"class.net::(anonymous namespace)::DnsUDPAttempt"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 4
  ret i1 %4
}

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #7

declare void @_ZN3net13DnsUdpTracker11RecordQueryEtt(%"class.net::DnsUdpTracker"*, i16 zeroext, i16 zeroext) local_unnamed_addr #7

declare zeroext i16 @_ZNK3net8DnsQuery2idEv(%"class.net::DnsQuery"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3net12_GLOBAL__N_113DnsUDPAttempt6DoLoopEi(%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.479", align 8
  %4 = alloca %"class.base::OnceCallback.479", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #18
  store i32 4, i32* %7, align 4
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 1
  %13 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i32, i32* %12, align 4
  %15 = icmp eq i32 %14, 4
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #18
  br label %27

17:                                               ; preds = %2
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %11, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN3net12_GLOBAL__N_113DnsUDPAttempt5StateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #18
  %19 = bitcast i32* %12 to i8*
  %20 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN3net12_GLOBAL__N_113DnsUDPAttempt5StateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i64 0, i64 0), i8* %18, i8* %20) #18
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %22, i8** %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #18
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 232, %"class.logging::CheckOpResult"* nonnull %6) #18
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #18
  br label %27

27:                                               ; preds = %16, %17, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %28 = load i32, i32* %12, align 8
  %29 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 5
  %32 = bitcast %"class.base::OnceCallback.479"* %3 to i8*
  %33 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 6
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.500"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr.500"* %33 to i64*
  %36 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = ptrtoint %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0 to i64
  %38 = bitcast %"class.base::OnceCallback.479"* %3 to i8**
  %39 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %3, i64 0, i32 0
  %40 = bitcast %"class.base::OnceCallback.479"* %4 to i8*
  %41 = bitcast %"class.base::OnceCallback.479"* %4 to i8**
  %42 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %4, i64 0, i32 0
  br label %43

43:                                               ; preds = %149, %27
  %44 = phi i32 [ %150, %149 ], [ %28, %27 ]
  %45 = phi i32 [ %151, %149 ], [ %1, %27 ]
  store i32 4, i32* %12, align 8
  switch i32 %44, label %143 [
    i32 0, label %46
    i32 1, label %66
    i32 2, label %76
    i32 3, label %105
  ]

46:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  store i32 1, i32* %12, align 8
  %47 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %36, align 8
  %48 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %47, i64 0, i32 1
  %49 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %30, align 8
  %50 = getelementptr inbounds %"class.net::DnsQuery", %"class.net::DnsQuery"* %49, i64 0, i32 1, i32 0
  %51 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %50, align 8
  %52 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %51, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = call i8* @_Znwm(i64 56) #20, !noalias !113
  %56 = bitcast i8* %55 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %56, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !113
  %57 = getelementptr inbounds i8, i8* %55, i64 32
  %58 = bitcast i8* %57 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32)* @_ZN3net12_GLOBAL__N_113DnsUDPAttempt12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %58, align 8, !noalias !113
  %59 = getelementptr inbounds i8, i8* %55, i64 48
  %60 = bitcast i8* %59 to i64*
  store i64 %37, i64* %60, align 8, !noalias !113
  store i8* %55, i8** %41, align 8, !alias.scope !113
  %61 = bitcast %"class.net::Socket"* %48 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)***
  %62 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*** %61, align 8
  %63 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %62, i64 5
  %64 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %63, align 8
  %65 = call i32 %64(%"class.net::Socket"* %48, %"class.net::IOBuffer"* %52, i32 %54, %"class.base::OnceCallback.479"* nonnull %4, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) @_ZN3net12_GLOBAL__N_118kTrafficAnnotationE) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  br label %143

66:                                               ; preds = %43
  %67 = icmp slt i32 %45, 0
  br i1 %67, label %143, label %68

68:                                               ; preds = %66
  %69 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %30, align 8
  %70 = getelementptr inbounds %"class.net::DnsQuery", %"class.net::DnsQuery"* %69, i64 0, i32 1, i32 0
  %71 = load %"class.net::IOBufferWithSize"*, %"class.net::IOBufferWithSize"** %70, align 8
  %72 = getelementptr inbounds %"class.net::IOBufferWithSize", %"class.net::IOBufferWithSize"* %71, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, %45
  br i1 %74, label %75, label %146

75:                                               ; preds = %68
  store i32 2, i32* %12, align 8
  br label %149

76:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  store i32 3, i32* %12, align 8
  %77 = call i8* @_Znwm(i64 112) #20
  %78 = bitcast i8* %77 to %"class.net::DnsResponse"*
  call void @_ZN3net11DnsResponseC1Ev(%"class.net::DnsResponse"* nonnull %78) #18
  %79 = ptrtoint i8* %77 to i64
  %80 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %34, align 8
  store i64 %79, i64* %35, align 8
  %81 = icmp eq %"class.net::DnsResponse"* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %76
  call void @_ZN3net11DnsResponseD1Ev(%"class.net::DnsResponse"* nonnull %80) #18
  %83 = bitcast %"class.net::DnsResponse"* %80 to i8*
  call void @_ZdlPv(i8* %83) #20
  %84 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %34, align 8
  br label %85

85:                                               ; preds = %76, %82
  %86 = phi %"class.net::DnsResponse"* [ %84, %82 ], [ %78, %76 ]
  %87 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %36, align 8
  %88 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %87, i64 0, i32 1
  %89 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %86, i64 0, i32 0, i32 0
  %90 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %89, align 8
  %91 = getelementptr inbounds %"class.net::DnsResponse", %"class.net::DnsResponse"* %86, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %92 to i32
  %94 = call i8* @_Znwm(i64 56) #20, !noalias !118
  %95 = bitcast i8* %94 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %95, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #18, !noalias !118
  %96 = getelementptr inbounds i8, i8* %94, i64 32
  %97 = bitcast i8* %96 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32)* @_ZN3net12_GLOBAL__N_113DnsUDPAttempt12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %97, align 8, !noalias !118
  %98 = getelementptr inbounds i8, i8* %94, i64 48
  %99 = bitcast i8* %98 to i64*
  store i64 %37, i64* %99, align 8, !noalias !118
  store i8* %94, i8** %38, align 8, !alias.scope !118
  %100 = bitcast %"class.net::Socket"* %88 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)***
  %101 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)** %101, i64 2
  %103 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.479"*)** %102, align 8
  %104 = call i32 %103(%"class.net::Socket"* %88, %"class.net::IOBuffer"* %90, i32 %93, %"class.base::OnceCallback.479"* nonnull %3) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  br label %143

105:                                              ; preds = %43
  %106 = icmp slt i32 %45, 0
  br i1 %106, label %143, label %107

107:                                              ; preds = %105
  %108 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %29, align 8
  %109 = sext i32 %45 to i64
  %110 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %30, align 8
  %111 = call zeroext i1 @_ZN3net11DnsResponse9InitParseEmRKNS_8DnsQueryE(%"class.net::DnsResponse"* %108, i64 %109, %"class.net::DnsQuery"* dereferenceable(24) %110) #18
  %112 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %29, align 8
  %113 = call i32 @_ZNK3net11DnsResponse2idEv(%"class.net::DnsResponse"* %112) #18
  %114 = trunc i32 %113 to i8
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %128, label %116

116:                                              ; preds = %107
  %117 = load %"class.net::DnsUdpTracker"*, %"class.net::DnsUdpTracker"** %31, align 8
  %118 = load %"class.net::DnsQuery"*, %"class.net::DnsQuery"** %30, align 8
  %119 = call zeroext i16 @_ZNK3net8DnsQuery2idEv(%"class.net::DnsQuery"* %118) #18
  %120 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %29, align 8
  %121 = call i32 @_ZNK3net11DnsResponse2idEv(%"class.net::DnsResponse"* %120) #18
  %122 = trunc i32 %121 to i8
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %116
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #19
  unreachable

125:                                              ; preds = %116
  %126 = lshr i32 %121, 16
  %127 = trunc i32 %126 to i16
  call void @_ZN3net13DnsUdpTracker16RecordResponseIdEtt(%"class.net::DnsUdpTracker"* %117, i16 zeroext %119, i16 zeroext %127) #18
  br label %128

128:                                              ; preds = %125, %107
  br i1 %111, label %129, label %146

129:                                              ; preds = %128
  %130 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %29, align 8
  %131 = call zeroext i16 @_ZNK3net11DnsResponse5flagsEv(%"class.net::DnsResponse"* %130) #18
  %132 = and i16 %131, 512
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %129
  %135 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %29, align 8
  %136 = call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %135) #18
  %137 = icmp eq i8 %136, 3
  br i1 %137, label %146, label %138

138:                                              ; preds = %134
  %139 = load %"class.net::DnsResponse"*, %"class.net::DnsResponse"** %29, align 8
  %140 = call zeroext i8 @_ZNK3net11DnsResponse5rcodeEv(%"class.net::DnsResponse"* %139) #18
  %141 = icmp eq i8 %140, 0
  %142 = select i1 %141, i32 0, i32 -802
  br label %146

143:                                              ; preds = %105, %66, %43, %85, %46
  %144 = phi i32 [ %45, %43 ], [ %104, %85 ], [ %65, %46 ], [ %45, %66 ], [ %45, %105 ]
  %145 = icmp eq i32 %144, -1
  br i1 %145, label %153, label %146

146:                                              ; preds = %143, %68, %128, %129, %134, %138
  %147 = phi i32 [ -142, %68 ], [ -800, %128 ], [ -801, %129 ], [ -105, %134 ], [ %142, %138 ], [ %144, %143 ]
  %148 = load i32, i32* %12, align 8
  br label %149

149:                                              ; preds = %146, %75
  %150 = phi i32 [ %148, %146 ], [ 2, %75 ]
  %151 = phi i32 [ %147, %146 ], [ 0, %75 ]
  %152 = icmp eq i32 %150, 4
  br i1 %152, label %153, label %43

153:                                              ; preds = %149, %143
  %154 = phi i32 [ %151, %149 ], [ -1, %143 ]
  ret i32 %154
}

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN7logging15CheckOpValueStrIN3net12_GLOBAL__N_113DnsUDPAttempt5StateEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8* nocapture readonly) #4 align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_113DnsUDPAttempt12OnIOCompleteEi(%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.479", align 8
  %4 = tail call fastcc i32 @_ZN3net12_GLOBAL__N_113DnsUDPAttempt6DoLoopEi(%"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i32 %1)
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsUDPAttempt", %"class.net::(anonymous namespace)::DnsUDPAttempt"* %0, i64 0, i32 7
  %8 = bitcast %"class.base::OnceCallback.479"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.479"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.479"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %3, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i32)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14, i32 %4) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #18
  br label %18

18:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::(anonymous namespace)::DnsUDPAttempt"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32)**
  %22 = load void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32)*, void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::(anonymous namespace)::DnsUDPAttempt"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::(anonymous namespace)::DnsUDPAttempt"* %13, i32 %1) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN3net11DnsResponseC1Ev(%"class.net::DnsResponse"*) unnamed_addr #7

declare i32 @_ZNK3net11DnsResponse2idEv(%"class.net::DnsResponse"*) local_unnamed_addr #7

declare void @_ZN3net13DnsUdpTracker16RecordResponseIdEtt(%"class.net::DnsUdpTracker"*, i16 zeroext, i16 zeroext) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EEmbS6_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i64*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8*
  %11 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 %15
  %17 = bitcast i8* %16 to %"class.net::(anonymous namespace)::DnsTransactionImpl"*
  %18 = and i64 %12, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %2
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %12, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)**
  %26 = load void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)*, void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)** %25, align 8
  br label %29

27:                                               ; preds = %2
  %28 = inttoptr i64 %12 to void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)*
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, i1, i64, i32)* [ %26, %20 ], [ %28, %27 ]
  %31 = load i64, i64* %8, align 8
  %32 = trunc i64 %31 to i32
  %33 = load i8, i8* %10, align 1, !range !17
  %34 = icmp ne i8 %33, 0
  %35 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %36 = bitcast void (%"class.base::internal::BindStateBase"*)** %35 to i64*
  %37 = load i64, i64* %36, align 8
  tail call void %30(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %17, i32 %32, i1 zeroext %34, i64 %37, i32 %1) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS4_EEmbS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #20
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare i64 @_ZN3net14ResolveContext24SecureTransactionTimeoutENS_13SecureDnsModeEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i32, %"class.net::DnsSession"*) local_unnamed_addr #7

declare i64 @_ZN3net14ResolveContext25ClassicTransactionTimeoutEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, %"class.net::DnsSession"*) local_unnamed_addr #7

declare i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl9OnTimeoutEv(%"class.net::(anonymous namespace)::DnsTransactionImpl"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsTransactionImpl", %"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN3net12_GLOBAL__N_118DnsTransactionImpl10DoCallbackENS1_13AttemptResultE(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %0, i32 -803, %"class.net::(anonymous namespace)::DnsAttempt"* null)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #18
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !46
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #18
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* %26, i8* %27) #18
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #18
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #18
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #14

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #7

declare i64 @_ZNK4base8internal9TimerBase15GetCurrentDelayEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #14

declare void @_ZN3net17DnsDomainToStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.absl::optional.758"* sret, i8*, i64, i1 zeroext) local_unnamed_addr #7

declare void @_ZNK3net16NetLogWithSource26BeginEventWithStringParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_(%"class.net::NetLogWithSource"*, i32, i8*, i64, i8*, i64) local_unnamed_addr #7

declare %"class.net::DnsServerIterator"* @_ZN3net14ResolveContext14GetDohIteratorERKNS_9DnsConfigERKNS_13SecureDnsModeEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, %"struct.net::DnsConfig"* dereferenceable(208), i32* dereferenceable(4), %"class.net::DnsSession"*) local_unnamed_addr #7

declare %"class.net::DnsServerIterator"* @_ZN3net14ResolveContext21GetClassicDnsIteratorERKNS_9DnsConfigEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, %"struct.net::DnsConfig"* dereferenceable(208), %"class.net::DnsSession"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS5_13AttemptResultEEJNS_7WeakPtrIS5_EES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %6, label %7, label %48

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::(anonymous namespace)::DnsTransactionImpl"**
  %10 = load %"class.net::(anonymous namespace)::DnsTransactionImpl"*, %"class.net::(anonymous namespace)::DnsTransactionImpl"** %9, align 8
  %11 = icmp eq %"class.net::(anonymous namespace)::DnsTransactionImpl"* %10, null
  br i1 %11, label %48, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::(anonymous namespace)::DnsTransactionImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, %"class.net::(anonymous namespace)::DnsAttempt"*)**
  %37 = load void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, %"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, %"class.net::(anonymous namespace)::DnsAttempt"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, %"class.net::(anonymous namespace)::DnsAttempt"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::(anonymous namespace)::DnsTransactionImpl"*, i32, %"class.net::(anonymous namespace)::DnsAttempt"*)* [ %37, %31 ], [ %39, %38 ]
  %42 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %43 = bitcast void (%"class.base::internal::BindStateBase"*)** %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %46 = bitcast void (%"class.base::internal::BindStateBase"*)** %45 to %"class.net::(anonymous namespace)::DnsAttempt"**
  %47 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %46, align 8
  call void %41(%"class.net::(anonymous namespace)::DnsTransactionImpl"* %28, i32 %44, %"class.net::(anonymous namespace)::DnsAttempt"* %47) #18
  br label %48

48:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS4_13AttemptResultEEJNS_7WeakPtrIS4_EES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #20
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS5_13AttemptResultEEJNS_7WeakPtrIS5_EES6_EEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::(anonymous namespace)::DnsTransactionImpl"**
  %9 = load %"class.net::(anonymous namespace)::DnsTransactionImpl"*, %"class.net::(anonymous namespace)::DnsTransactionImpl"** %8, align 8
  %10 = icmp ne %"class.net::(anonymous namespace)::DnsTransactionImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN3net41GetDohProviderIdForHistogramFromDohConfigERKNS_24DnsOverHttpsServerConfigE(%"class.std::__1::basic_string"* sret, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32)) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerD2Ev(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #18
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::vector.778", %"class.std::__1::vector.778"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.780"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::vector.778", %"class.std::__1::vector.778"* %4, i64 0, i32 0
  tail call fastcc void @_ZNSt3__113__vector_baseINS_10unique_ptrIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner10ProbeStatsENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE5clearEv(%"class.std::__1::__vector_base.779"* %9) #18
  %10 = bitcast %"class.std::__1::vector.778"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #20
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 3
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %12, %18
  %22 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %22) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerD0Ev(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #18
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::vector.778", %"class.std::__1::vector.778"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.780"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::vector.778", %"class.std::__1::vector.778"* %4, i64 0, i32 0
  tail call fastcc void @_ZNSt3__113__vector_baseINS_10unique_ptrIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner10ProbeStatsENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE5clearEv(%"class.std::__1::__vector_base.779"* %9) #18
  %10 = bitcast %"class.std::__1::vector.778"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #20
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 3
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #20
  br label %21

21:                                               ; preds = %12, %18
  %22 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %22) #18
  %23 = bitcast %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner5StartEb(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::WeakPtr.805", align 8
  %6 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i64* %8 to %"class.net::DnsSession"**
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  %12 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %5, i64 0, i32 0
  br label %13

13:                                               ; preds = %102, %2
  %14 = phi i64 [ 0, %2 ], [ %103, %102 ]
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #18
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  br label %18

18:                                               ; preds = %16, %13
  %19 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #18
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %9, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi %"class.net::DnsSession"* [ %21, %20 ], [ null, %18 ]
  %24 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %23, i64 0, i32 1, i32 13
  %25 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %23, i64 0, i32 1, i32 13, i32 0, i32 1
  %26 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.41"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 5
  %32 = icmp ult i64 %14, %31
  br i1 %32, label %34, label %33

33:                                               ; preds = %22
  ret void

34:                                               ; preds = %22
  %35 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %10, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %35, i64 %14, i32 0, i32 0, i32 0
  %37 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %36, align 8
  %38 = icmp eq %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %37, null
  br i1 %38, label %39, label %102

39:                                               ; preds = %34
  %40 = call i8* @_Znwm(i64 48) #20
  %41 = call i8* @_Znwm(i64 40) #20
  %42 = bitcast i8* %41 to %"class.net::BackoffEntry"*
  call void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyE(%"class.net::BackoffEntry"* nonnull %42, %"struct.net::BackoffEntry::Policy"* nonnull @_ZN3net12_GLOBAL__N_119kProbeBackoffPolicyE) #18
  %43 = bitcast i8* %40 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #18
  %45 = getelementptr inbounds i8, i8* %40, i64 32
  %46 = bitcast i8* %45 to %"class.base::internal::WeakPtrFactoryBase"*
  %47 = ptrtoint i8* %40 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %46, i64 %47) #18
  %48 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %10, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %48, i64 %14
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %50, align 8
  %52 = bitcast %"class.std::__1::unique_ptr.780"* %49 to i64*
  store i64 %47, i64* %52, align 8
  %53 = icmp eq %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %51, null
  br i1 %53, label %94, label %54

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %51, i64 0, i32 2, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %55) #18
  %56 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %51, i64 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %57, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.398"* %58, null
  br i1 %59, label %83, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.std::__1::unique_ptr.398"* %58 to i8*
  %62 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %51, i64 0, i32 1, i32 0, i32 1
  %63 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %62, align 8
  %64 = icmp eq %"class.std::__1::unique_ptr.398"* %63, %58
  br i1 %64, label %81, label %65

65:                                               ; preds = %60, %76
  %66 = phi %"class.std::__1::unique_ptr.398"* [ %67, %76 ], [ %63, %60 ]
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %66, i64 -1
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %68, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %68, align 8
  %70 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %69 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %73 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %73, i64 1
  %75 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %74, align 8
  call void %75(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %69) #18
  br label %76

76:                                               ; preds = %71, %65
  %77 = icmp eq %"class.std::__1::unique_ptr.398"* %67, %58
  br i1 %77, label %78, label %65

78:                                               ; preds = %76
  %79 = bitcast %"class.std::__1::vector.396"* %56 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %60
  %82 = phi i8* [ %80, %78 ], [ %61, %60 ]
  store %"class.std::__1::unique_ptr.398"* %58, %"class.std::__1::unique_ptr.398"** %62, align 8
  call void @_ZdlPv(i8* %82) #20
  br label %83

83:                                               ; preds = %81, %54
  %84 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %84, align 8
  store %"class.net::BackoffEntry"* null, %"class.net::BackoffEntry"** %84, align 8
  %86 = icmp eq %"class.net::BackoffEntry"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.net::BackoffEntry"* %85 to void (%"class.net::BackoffEntry"*)***
  %89 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %89, i64 1
  %91 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %90, align 8
  call void %91(%"class.net::BackoffEntry"* nonnull %85) #18
  br label %92

92:                                               ; preds = %87, %83
  %93 = bitcast %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %51 to i8*
  call void @_ZdlPv(i8* %93) #20
  br label %94

94:                                               ; preds = %92, %39
  %95 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %10, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %95, i64 %14, i32 0, i32 0, i32 0
  %97 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %96, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #18, !noalias !123
  %98 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %97, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %98) #18, !noalias !123
  %99 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %97, i64 0, i32 2, i32 0, i32 1
  %100 = load i64, i64* %99, align 8, !noalias !123
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %100) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #18, !noalias !123
  %101 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  call void @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner13ContinueProbeEmN4base7WeakPtrINS1_10ProbeStatsEEEbNS2_9TimeTicksE(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 %14, %"class.base::WeakPtr.805"* nonnull %5, i1 zeroext %1, i64 %101)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #18
  br label %102

102:                                              ; preds = %34, %94
  %103 = add i64 %14, 1
  br label %13
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK3net12_GLOBAL__N_123DnsOverHttpsProbeRunner29GetDelayUntilNextProbeForTestEm(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.780"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.778"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ugt i64 %10, %1
  br i1 %11, label %12, label %21

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.780"*
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %13, i64 %1, i32 0, i32 0, i32 0
  %15 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %14, align 8
  %16 = icmp eq %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %18, align 8
  %20 = tail call i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"* %19) #18
  br label %21

21:                                               ; preds = %12, %2, %17
  %22 = phi i64 [ %20, %17 ], [ 0, %2 ], [ 0, %12 ]
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__113__vector_baseINS_10unique_ptrIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner10ProbeStatsENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE5clearEv(%"class.std::__1::__vector_base.779"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.779", %"class.std::__1::__vector_base.779"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__vector_base.779", %"class.std::__1::__vector_base.779"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.780"* %5, %3
  br i1 %6, label %55, label %7

7:                                                ; preds = %1, %53
  %8 = phi %"class.std::__1::unique_ptr.780"* [ %9, %53 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %10, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %10, align 8
  %12 = icmp eq %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %11, null
  br i1 %12, label %53, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %11, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %14) #18
  %15 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %11, i64 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.398"* %17, null
  br i1 %18, label %42, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::unique_ptr.398"* %17 to i8*
  %21 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %11, i64 0, i32 1, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %21, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr.398"* %22, %17
  br i1 %23, label %40, label %24

24:                                               ; preds = %19, %35
  %25 = phi %"class.std::__1::unique_ptr.398"* [ %26, %35 ], [ %22, %19 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %25, i64 -1
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %27, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %27, align 8
  %29 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %28 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %32 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %32, i64 1
  %34 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %33, align 8
  tail call void %34(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %28) #18
  br label %35

35:                                               ; preds = %30, %24
  %36 = icmp eq %"class.std::__1::unique_ptr.398"* %26, %17
  br i1 %36, label %37, label %24

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector.396"* %15 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %19
  %41 = phi i8* [ %39, %37 ], [ %20, %19 ]
  store %"class.std::__1::unique_ptr.398"* %17, %"class.std::__1::unique_ptr.398"** %21, align 8
  tail call void @_ZdlPv(i8* %41) #20
  br label %42

42:                                               ; preds = %40, %13
  %43 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %43, align 8
  store %"class.net::BackoffEntry"* null, %"class.net::BackoffEntry"** %43, align 8
  %45 = icmp eq %"class.net::BackoffEntry"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.net::BackoffEntry"* %44 to void (%"class.net::BackoffEntry"*)***
  %48 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %48, i64 1
  %50 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %49, align 8
  tail call void %50(%"class.net::BackoffEntry"* nonnull %44) #18
  br label %51

51:                                               ; preds = %46, %42
  %52 = bitcast %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %11 to i8*
  tail call void @_ZdlPv(i8* %52) #20
  br label %53

53:                                               ; preds = %51, %7
  %54 = icmp eq %"class.std::__1::unique_ptr.780"* %9, %3
  br i1 %54, label %55, label %7

55:                                               ; preds = %53, %1
  store %"class.std::__1::unique_ptr.780"* %3, %"class.std::__1::unique_ptr.780"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner13ContinueProbeEmN4base7WeakPtrINS1_10ProbeStatsEEEbNS2_9TimeTicksE(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i64, %"class.base::WeakPtr.805"*, i1 zeroext, i64) #0 align 2 {
  %6 = alloca %"class.base::internal::WeakReference", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.base::internal::WeakReference", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.base::Location", align 8
  %14 = alloca %"class.base::OnceCallback", align 8
  %15 = alloca %"class.base::WeakPtr.806", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.base::OnceCallback.479", align 8
  %18 = alloca %"class.base::WeakPtr.806", align 8
  %19 = zext i1 %3 to i8
  %20 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %20) #18
  br i1 %21, label %22, label %27

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast i64* %23 to %"class.net::DnsSession"**
  %25 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %24, align 8
  %26 = icmp eq %"class.net::DnsSession"* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %22, %5
  %28 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 4, i32 0
  tail call fastcc void @_ZNSt3__113__vector_baseINS_10unique_ptrIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner10ProbeStatsENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE5clearEv(%"class.std::__1::__vector_base.779"* %28) #18
  br label %268

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %2, i64 0, i32 0, i32 0
  %31 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %31, label %32, label %268

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %2, i64 0, i32 0, i32 1
  %34 = bitcast i64* %33 to %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"**
  %35 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %34, align 8
  %36 = icmp eq %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %35, null
  br i1 %36, label %268, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 2
  %39 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %38, align 8
  %40 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %20) #18
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %24, align 8
  br label %43

43:                                               ; preds = %37, %41
  %44 = phi %"class.net::DnsSession"* [ %42, %41 ], [ null, %37 ]
  %45 = tail call zeroext i1 @_ZNK3net14ResolveContext24GetDohServerAvailabilityEmPKNS_10DnsSessionE(%"class.net::ResolveContext"* %39, i64 %1, %"class.net::DnsSession"* %44) #18
  br i1 %45, label %46, label %92

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 4, i32 0, i32 0
  %48 = load %"class.std::__1::unique_ptr.780"*, %"class.std::__1::unique_ptr.780"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.780"* %48, i64 %1, i32 0, i32 0, i32 0
  %50 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %49, align 8
  store %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* null, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %49, align 8
  %51 = icmp eq %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %50, null
  br i1 %51, label %268, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %50, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %53) #18
  %54 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %50, i64 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::vector.396", %"class.std::__1::vector.396"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %55, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr.398"* %56, null
  br i1 %57, label %81, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.std::__1::unique_ptr.398"* %56 to i8*
  %60 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %50, i64 0, i32 1, i32 0, i32 1
  %61 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %60, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr.398"* %61, %56
  br i1 %62, label %79, label %63

63:                                               ; preds = %58, %74
  %64 = phi %"class.std::__1::unique_ptr.398"* [ %65, %74 ], [ %61, %58 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %64, i64 -1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %66, align 8
  store %"class.net::(anonymous namespace)::DnsAttempt"* null, %"class.net::(anonymous namespace)::DnsAttempt"** %66, align 8
  %68 = icmp eq %"class.net::(anonymous namespace)::DnsAttempt"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %67 to void (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %71 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)**, void (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %71, i64 1
  %73 = load void (%"class.net::(anonymous namespace)::DnsAttempt"*)*, void (%"class.net::(anonymous namespace)::DnsAttempt"*)** %72, align 8
  tail call void %73(%"class.net::(anonymous namespace)::DnsAttempt"* nonnull %67) #18
  br label %74

74:                                               ; preds = %69, %63
  %75 = icmp eq %"class.std::__1::unique_ptr.398"* %65, %56
  br i1 %75, label %76, label %63

76:                                               ; preds = %74
  %77 = bitcast %"class.std::__1::vector.396"* %54 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %58
  %80 = phi i8* [ %78, %76 ], [ %59, %58 ]
  store %"class.std::__1::unique_ptr.398"* %56, %"class.std::__1::unique_ptr.398"** %60, align 8
  tail call void @_ZdlPv(i8* %80) #20
  br label %81

81:                                               ; preds = %79, %52
  %82 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %82, align 8
  store %"class.net::BackoffEntry"* null, %"class.net::BackoffEntry"** %82, align 8
  %84 = icmp eq %"class.net::BackoffEntry"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.net::BackoffEntry"* %83 to void (%"class.net::BackoffEntry"*)***
  %87 = load void (%"class.net::BackoffEntry"*)**, void (%"class.net::BackoffEntry"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %87, i64 1
  %89 = load void (%"class.net::BackoffEntry"*)*, void (%"class.net::BackoffEntry"*)** %88, align 8
  tail call void %89(%"class.net::BackoffEntry"* nonnull %83) #18
  br label %90

90:                                               ; preds = %85, %81
  %91 = bitcast %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %50 to i8*
  tail call void @_ZdlPv(i8* %91) #20
  br label %268

92:                                               ; preds = %43
  %93 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %93, label %97, label %94

94:                                               ; preds = %92
  %95 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #18
  br label %97

97:                                               ; preds = %94, %92
  %98 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %98, label %99, label %101

99:                                               ; preds = %97
  %100 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %34, align 8
  br label %101

101:                                              ; preds = %97, %99
  %102 = phi %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* [ %100, %99 ], [ null, %97 ]
  %103 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %103, align 8
  call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %104, i1 zeroext false) #18
  %105 = call dereferenceable(8) %class.scoped_refptr.166* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #18
  %106 = getelementptr inbounds %class.scoped_refptr.166, %class.scoped_refptr.166* %105, i64 0, i32 0
  %107 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %106, align 8
  %108 = bitcast %"class.base::SequencedTaskRunner"* %107 to %"class.base::TaskRunner"*
  %109 = bitcast %"class.base::Location"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #18
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 949) #18
  %110 = bitcast %"class.base::WeakPtr.806"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #18
  %111 = bitcast %"class.base::internal::WeakReference"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #18, !noalias !126
  %112 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %11, %"class.base::internal::WeakReferenceOwner"* %112) #18, !noalias !126
  %113 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 5, i32 0, i32 1
  %114 = load i64, i64* %113, align 8, !noalias !126
  %115 = getelementptr inbounds %"class.base::WeakPtr.806", %"class.base::WeakPtr.806"* %15, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %115, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %11, i64 %114) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #18, !noalias !126
  %116 = call i8* @_Znwm(i64 104) #20, !noalias !129
  %117 = bitcast i8* %116 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %117, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksEEJNS6_IS5_EEmS8_bS9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS4_10ProbeStatsEEEbNS_9TimeTicksEEJNS5_IS4_EEmS7_bS8_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksEEJNS6_IS5_EEmS8_bS9_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #18, !noalias !129
  %118 = getelementptr inbounds i8, i8* %116, i64 32
  %119 = bitcast i8* %118 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i64, %"class.base::WeakPtr.805"*, i1, i64)* @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner13ContinueProbeEmN4base7WeakPtrINS1_10ProbeStatsEEEbNS2_9TimeTicksE to i64), i64 0>, <2 x i64>* %119, align 8, !noalias !129
  %120 = getelementptr inbounds i8, i8* %116, i64 48
  %121 = bitcast i8* %120 to %"class.base::internal::WeakReference"*
  %122 = getelementptr inbounds %"class.base::WeakPtr.806", %"class.base::WeakPtr.806"* %15, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %121, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %122) #18, !noalias !129
  %123 = getelementptr inbounds i8, i8* %116, i64 56
  %124 = bitcast i8* %123 to i64*
  %125 = getelementptr inbounds %"class.base::WeakPtr.806", %"class.base::WeakPtr.806"* %15, i64 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8, !noalias !129
  store i64 %126, i64* %124, align 8, !noalias !129
  %127 = getelementptr inbounds i8, i8* %116, i64 64
  %128 = bitcast i8* %127 to i64*
  store i64 %1, i64* %128, align 8, !noalias !129
  %129 = getelementptr inbounds i8, i8* %116, i64 72
  %130 = bitcast i8* %129 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %130, %"class.base::internal::WeakReference"* dereferenceable(8) %30) #18, !noalias !129
  %131 = getelementptr inbounds i8, i8* %116, i64 80
  %132 = bitcast i8* %131 to i64*
  %133 = load i64, i64* %33, align 8, !noalias !129
  store i64 %133, i64* %132, align 8, !noalias !129
  %134 = getelementptr inbounds i8, i8* %116, i64 88
  store i8 %19, i8* %134, align 1, !noalias !129
  %135 = getelementptr inbounds i8, i8* %116, i64 96
  %136 = bitcast i8* %135 to i64*
  store i64 %4, i64* %136, align 8, !noalias !129
  %137 = bitcast %"class.base::OnceCallback"* %14 to i8**
  store i8* %116, i8** %137, align 8, !alias.scope !129
  %138 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %138, label %142, label %139

139:                                              ; preds = %101
  %140 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #18
  br label %142

142:                                              ; preds = %139, %101
  %143 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %143, label %144, label %146

144:                                              ; preds = %142
  %145 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %34, align 8
  br label %146

146:                                              ; preds = %142, %144
  %147 = phi %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* [ %145, %144 ], [ null, %142 ]
  %148 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %147, i64 0, i32 0, i32 0, i32 0, i32 0
  %149 = load %"class.net::BackoffEntry"*, %"class.net::BackoffEntry"** %148, align 8
  %150 = call i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"* %149) #18
  %151 = bitcast %"class.base::SequencedTaskRunner"* %107 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %152 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %151, align 8
  %153 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %152, align 8
  %154 = call zeroext i1 %153(%"class.base::TaskRunner"* %108, %"class.base::Location"* nonnull dereferenceable(32) %13, %"class.base::OnceCallback"* nonnull %14, i64 %150) #18
  %155 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %155) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %115) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #18
  %156 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %156, label %160, label %157

157:                                              ; preds = %146
  %158 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %159 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #18
  br label %160

160:                                              ; preds = %157, %146
  %161 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %161, label %162, label %164

162:                                              ; preds = %160
  %163 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %34, align 8
  br label %164

164:                                              ; preds = %160, %162
  %165 = phi %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* [ %163, %162 ], [ null, %160 ]
  %166 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %165, i64 0, i32 1
  %167 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %165, i64 0, i32 1, i32 0, i32 1
  %168 = bitcast %"class.std::__1::unique_ptr.398"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.std::__1::vector.396"* %166 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 %169, %171
  %173 = lshr exact i64 %172, 3
  %174 = trunc i64 %173 to i32
  %175 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %20) #18
  br i1 %175, label %176, label %178

176:                                              ; preds = %164
  %177 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %24, align 8
  br label %178

178:                                              ; preds = %164, %176
  %179 = phi %"class.net::DnsSession"* [ %177, %176 ], [ null, %164 ]
  %180 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 3
  %181 = bitcast %"class.std::__1::basic_string"* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %178
  %186 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %187 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %186, i8* align 8 %187, i64 24, i1 false) #18
  br label %193

188:                                              ; preds = %178
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %16, i8* %190, i64 %192) #18
  br label %193

193:                                              ; preds = %185, %188
  %194 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %194, label %198, label %195

195:                                              ; preds = %193
  %196 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %197 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #18
  br label %198

198:                                              ; preds = %195, %193
  %199 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %199, label %200, label %202

200:                                              ; preds = %198
  %201 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %34, align 8
  br label %202

202:                                              ; preds = %198, %200
  %203 = phi %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* [ %201, %200 ], [ null, %198 ]
  %204 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %203, i64 0, i32 1
  %205 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %38, align 8
  %206 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %205, i64 0, i32 1
  %207 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %206, align 8
  %208 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %205, i64 0, i32 10
  call fastcc void @_ZN3net12_GLOBAL__N_123ConstructDnsHTTPAttemptEPNS_10DnsSessionEmNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEtPKNS_14OptRecordRdataEPNS3_6vectorINS3_10unique_ptrINS0_10DnsAttemptENS3_14default_deleteISF_EEEENS7_ISI_EEEEPNS_17URLRequestContextERKNS_13IsolationInfoENS_15RequestPriorityE(%"class.net::DnsSession"* %179, i64 %1, %"class.std::__1::basic_string"* nonnull %16, i16 zeroext 1, %"class.net::OptRecordRdata"* null, %"class.std::__1::vector.396"* %204, %"class.net::URLRequestContext"* %207, %"class.net::IsolationInfo"* dereferenceable(496) %208, i32 2)
  %209 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %202
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %215) #20
  br label %216

216:                                              ; preds = %202, %213
  %217 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %217, label %221, label %218

218:                                              ; preds = %216
  %219 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %220 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #18
  br label %221

221:                                              ; preds = %218, %216
  %222 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %30) #18
  br i1 %222, label %223, label %225

223:                                              ; preds = %221
  %224 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %34, align 8
  br label %225

225:                                              ; preds = %221, %223
  %226 = phi %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* [ %224, %223 ], [ null, %221 ]
  %227 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %226, i64 0, i32 1, i32 0, i32 1
  %228 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %227, align 8
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %228, i64 -1, i32 0, i32 0, i32 0
  %230 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %229, align 8
  %231 = bitcast %"class.base::WeakPtr.806"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #18
  %232 = bitcast %"class.base::internal::WeakReference"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #18, !noalias !134
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %6, %"class.base::internal::WeakReferenceOwner"* %112) #18, !noalias !134
  %233 = load i64, i64* %113, align 8, !noalias !134
  %234 = getelementptr inbounds %"class.base::WeakPtr.806", %"class.base::WeakPtr.806"* %18, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %234, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %6, i64 %233) #18
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #18, !noalias !134
  %235 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %236 = call i8* @_Znwm(i64 120) #20, !noalias !137
  %237 = bitcast i8* %236 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %237, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksES9_iEJNS6_IS5_EEjmS8_bS9_S9_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS4_10ProbeStatsEEEbNS_9TimeTicksES8_iEJNS5_IS4_EEjmS7_bS8_S8_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksES9_iEJNS6_IS5_EEjmS8_bS9_S9_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #18, !noalias !137
  %238 = getelementptr inbounds i8, i8* %236, i64 32
  %239 = bitcast i8* %238 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i32, i64, %"class.base::WeakPtr.805"*, i1, i64, i64, i32)* @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner13ProbeCompleteEjmN4base7WeakPtrINS1_10ProbeStatsEEEbNS2_9TimeTicksES6_i to i64), i64 0>, <2 x i64>* %239, align 8, !noalias !137
  %240 = getelementptr inbounds i8, i8* %236, i64 48
  %241 = bitcast i8* %240 to %"class.base::internal::WeakReference"*
  %242 = getelementptr inbounds %"class.base::WeakPtr.806", %"class.base::WeakPtr.806"* %18, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %241, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %242) #18, !noalias !137
  %243 = getelementptr inbounds i8, i8* %236, i64 56
  %244 = bitcast i8* %243 to i64*
  %245 = getelementptr inbounds %"class.base::WeakPtr.806", %"class.base::WeakPtr.806"* %18, i64 0, i32 0, i32 1
  %246 = load i64, i64* %245, align 8, !noalias !137
  store i64 %246, i64* %244, align 8, !noalias !137
  %247 = getelementptr inbounds i8, i8* %236, i64 64
  %248 = bitcast i8* %247 to i32*
  store i32 %174, i32* %248, align 4, !noalias !137
  %249 = getelementptr inbounds i8, i8* %236, i64 72
  %250 = bitcast i8* %249 to i64*
  store i64 %1, i64* %250, align 8, !noalias !137
  %251 = getelementptr inbounds i8, i8* %236, i64 80
  %252 = bitcast i8* %251 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %252, %"class.base::internal::WeakReference"* dereferenceable(8) %30) #18, !noalias !137
  %253 = getelementptr inbounds i8, i8* %236, i64 88
  %254 = bitcast i8* %253 to i64*
  %255 = load i64, i64* %33, align 8, !noalias !137
  store i64 %255, i64* %254, align 8, !noalias !137
  %256 = getelementptr inbounds i8, i8* %236, i64 96
  store i8 %19, i8* %256, align 1, !noalias !137
  %257 = getelementptr inbounds i8, i8* %236, i64 104
  %258 = bitcast i8* %257 to i64*
  store i64 %4, i64* %258, align 8, !noalias !137
  %259 = getelementptr inbounds i8, i8* %236, i64 112
  %260 = bitcast i8* %259 to i64*
  store i64 %235, i64* %260, align 8, !noalias !137
  %261 = bitcast %"class.base::OnceCallback.479"* %17 to i8**
  store i8* %236, i8** %261, align 8, !alias.scope !137
  %262 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %230 to i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)***
  %263 = load i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)**, i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)*** %262, align 8
  %264 = getelementptr inbounds i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)** %263, i64 2
  %265 = load i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)*, i32 (%"class.net::(anonymous namespace)::DnsAttempt"*, %"class.base::OnceCallback.479"*)** %264, align 8
  %266 = call i32 %265(%"class.net::(anonymous namespace)::DnsAttempt"* %230, %"class.base::OnceCallback.479"* nonnull %17) #18
  %267 = getelementptr inbounds %"class.base::OnceCallback.479", %"class.base::OnceCallback.479"* %17, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %267) #18
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %234) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231) #18
  br label %268

268:                                              ; preds = %32, %29, %90, %46, %225, %27
  ret void
}

declare void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyE(%"class.net::BackoffEntry"*, %"struct.net::BackoffEntry::Policy"*) unnamed_addr #7

declare zeroext i1 @_ZNK3net14ResolveContext24GetDohServerAvailabilityEmPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, %"class.net::DnsSession"*) local_unnamed_addr #7

declare void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"*, i1 zeroext) local_unnamed_addr #7

declare i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner13ProbeCompleteEjmN4base7WeakPtrINS1_10ProbeStatsEEEbNS2_9TimeTicksES6_i(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i32, i64, %"class.base::WeakPtr.805"*, i1 zeroext, i64, i64, i32) #0 align 2 {
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.net::DnsResponseResultExtractor", align 8
  %11 = alloca %"class.net::HostCache::Entry", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = icmp eq i32 %7, 0
  br i1 %13, label %14, label %84

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %3, i64 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %15) #18
  br i1 %16, label %17, label %84

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %3, i64 0, i32 0, i32 1
  %19 = bitcast i64* %18 to %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"**
  %20 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %19, align 8
  %21 = icmp eq %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %20, null
  br i1 %21, label %84, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %23) #18
  br i1 %24, label %25, label %84

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = bitcast i64* %26 to %"class.net::DnsSession"**
  %28 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %27, align 8
  %29 = icmp eq %"class.net::DnsSession"* %28, null
  br i1 %29, label %84, label %30

30:                                               ; preds = %25
  %31 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %15) #18
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #18
  br label %35

35:                                               ; preds = %32, %30
  %36 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %15) #18
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = load %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"*, %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"** %19, align 8
  br label %39

39:                                               ; preds = %35, %37
  %40 = phi %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* [ %38, %37 ], [ null, %35 ]
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats", %"struct.net::(anonymous namespace)::DnsOverHttpsProbeRunner::ProbeStats"* %40, i64 0, i32 1, i32 0, i32 0
  %43 = load %"class.std::__1::unique_ptr.398"*, %"class.std::__1::unique_ptr.398"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.398"* %43, i64 %41, i32 0, i32 0, i32 0
  %45 = load %"class.net::(anonymous namespace)::DnsAttempt"*, %"class.net::(anonymous namespace)::DnsAttempt"** %44, align 8
  %46 = bitcast %"class.net::(anonymous namespace)::DnsAttempt"* %45 to %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)***
  %47 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)**, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %47, i64 4
  %49 = load %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)*, %"class.net::DnsResponse"* (%"class.net::(anonymous namespace)::DnsAttempt"*)** %48, align 8
  %50 = call %"class.net::DnsResponse"* %49(%"class.net::(anonymous namespace)::DnsAttempt"* %45) #18
  %51 = icmp eq %"class.net::DnsResponse"* %50, null
  br i1 %51, label %84, label %52

52:                                               ; preds = %39
  %53 = bitcast %"class.net::DnsResponseResultExtractor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #18
  %54 = getelementptr inbounds %"class.net::DnsResponseResultExtractor", %"class.net::DnsResponseResultExtractor"* %10, i64 0, i32 0
  store %"class.net::DnsResponse"* inttoptr (i64 -6148914691236517206 to %"class.net::DnsResponse"*), %"class.net::DnsResponse"** %54, align 8
  call void @_ZN3net26DnsResponseResultExtractorC1EPKNS_11DnsResponseE(%"class.net::DnsResponseResultExtractor"* nonnull %10, %"class.net::DnsResponse"* nonnull %50) #18
  %55 = bitcast %"class.net::HostCache::Entry"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %55) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 200, i1 false)
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %11, i32 -2, i32 0, i8 0, i64 undef) #18
  %56 = call i32 @_ZNK3net26DnsResponseResultExtractor17ExtractDnsResultsENS_12DnsQueryTypeEPNS_9HostCache5EntryE(%"class.net::DnsResponseResultExtractor"* nonnull %10, i32 1, %"class.net::HostCache::Entry"* nonnull %11) #18
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %86

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 8, !range !17
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %86, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %63, align 8
  %65 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %66 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %65, align 8
  %67 = icmp eq %"class.net::IPEndPoint"* %64, %66
  br i1 %67, label %86, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner", %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %0, i64 0, i32 2
  %70 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %69, align 8
  %71 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %23) #18
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %27, align 8
  br label %74

74:                                               ; preds = %68, %72
  %75 = phi %"class.net::DnsSession"* [ %73, %72 ], [ null, %68 ]
  call void @_ZN3net14ResolveContext19RecordServerSuccessEmbPKNS_10DnsSessionE(%"class.net::ResolveContext"* %70, i64 %2, i1 zeroext true, %"class.net::DnsSession"* %75) #18
  %76 = load %"class.net::ResolveContext"*, %"class.net::ResolveContext"** %69, align 8
  %77 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %78 = sub nsw i64 %77, %6
  %79 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %23) #18
  br i1 %79, label %80, label %82

80:                                               ; preds = %74
  %81 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %27, align 8
  br label %82

82:                                               ; preds = %74, %80
  %83 = phi %"class.net::DnsSession"* [ %81, %80 ], [ null, %74 ]
  call void @_ZN3net14ResolveContext9RecordRttEmbN4base9TimeDeltaEiPKNS_10DnsSessionE(%"class.net::ResolveContext"* %76, i64 %2, i1 zeroext true, i64 %78, i32 0, %"class.net::DnsSession"* %83) #18
  br label %86

84:                                               ; preds = %25, %17, %8, %39, %14, %22
  %85 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  br label %89

86:                                               ; preds = %58, %52, %62, %82
  %87 = phi [8 x i8]* [ @.str.45, %62 ], [ @.str.44, %82 ], [ @.str.45, %58 ], [ @.str.45, %52 ]
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %55) #18
  call void @_ZN3net26DnsResponseResultExtractorD1Ev(%"class.net::DnsResponseResultExtractor"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #18
  %88 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  br label %89

89:                                               ; preds = %86, %84
  %90 = phi i8* [ %88, %86 ], [ %85, %84 ]
  %91 = phi [8 x i8]* [ %87, %86 ], [ @.str.45, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #18
  %92 = select i1 %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i64 0, i64 0)
  %93 = getelementptr inbounds [8 x i8], [8 x i8]* %91, i64 0, i64 0
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.41, i64 0, i64 0), i8* %92, i8* %93) #18
  %94 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %95 = sub nsw i64 %94, %5
  call void @_ZN4base21UmaHistogramLongTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i64 %95) #18
  %96 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #20
  br label %103

103:                                              ; preds = %89, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksEEJNS6_IS5_EEmS8_bS9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::WeakPtr.805", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 5
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8*
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #18
  br i1 %11, label %12, label %62

12:                                               ; preds = %1
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"**
  %15 = load %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"** %14, align 8
  %16 = icmp eq %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %15, null
  br i1 %16, label %62, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::WeakPtr.805"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #18
  %24 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #18
  br i1 %24, label %28, label %25

25:                                               ; preds = %17
  %26 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #18
  br label %28

28:                                               ; preds = %25, %17
  %29 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #18
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = select i1 %29, i8* %31, i8* null
  %33 = getelementptr inbounds i8, i8* %32, i64 %22
  %34 = bitcast i8* %33 to %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*
  %35 = and i64 %19, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %28
  %38 = bitcast i8* %33 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = add i64 %19, -1
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = bitcast i8* %41 to void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i64, %"class.base::WeakPtr.805"*, i1, i64)**
  %43 = load void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i64, %"class.base::WeakPtr.805"*, i1, i64)*, void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i64, %"class.base::WeakPtr.805"*, i1, i64)** %42, align 8
  br label %46

44:                                               ; preds = %28
  %45 = inttoptr i64 %19 to void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i64, %"class.base::WeakPtr.805"*, i1, i64)*
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i64, %"class.base::WeakPtr.805"*, i1, i64)* [ %43, %37 ], [ %45, %44 ]
  %48 = load i64, i64* %7, align 8
  %49 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %3, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 3
  %51 = bitcast void (%"class.base::internal::BindStateBase"*)** %50 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %49, %"class.base::internal::WeakReference"* dereferenceable(8) %51) #18
  %52 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %3, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 4
  %54 = bitcast void (%"class.base::internal::BindStateBase"*)** %53 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  %56 = load i8, i8* %9, align 1, !range !17
  %57 = icmp ne i8 %56, 0
  %58 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 6
  %59 = bitcast void (%"class.base::internal::BindStateBase"*)** %58 to i64*
  %60 = load i64, i64* %59, align 8
  call void %47(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %34, i64 %48, %"class.base::WeakPtr.805"* nonnull %3, i1 zeroext %57, i64 %60) #18
  %61 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %61) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #18
  br label %62

62:                                               ; preds = %1, %12, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS4_10ProbeStatsEEEbNS_9TimeTicksEEJNS5_IS4_EEmS7_bS8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %7) #18
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #20
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksEEJNS6_IS5_EEmS8_bS9_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"**
  %9 = load %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"** %8, align 8
  %10 = icmp ne %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksES9_iEJNS6_IS5_EEjmS8_bS9_S9_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr.805", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i32*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 3
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i64*
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 6
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i8*
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakReference"*
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #18
  br i1 %14, label %15, label %69

15:                                               ; preds = %2
  %16 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %17 = bitcast void (%"class.base::internal::BindStateBase"*)** %16 to %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"**
  %18 = load %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"** %17, align 8
  %19 = icmp eq %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %18, null
  br i1 %19, label %69, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %24 = bitcast void ()** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::WeakPtr.805"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #18
  %27 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #18
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #18
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #18
  br label %31

31:                                               ; preds = %28, %20
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #18
  %33 = bitcast void (%"class.base::internal::BindStateBase"*)** %16 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = select i1 %32, i8* %34, i8* null
  %36 = getelementptr inbounds i8, i8* %35, i64 %25
  %37 = bitcast i8* %36 to %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*
  %38 = and i64 %22, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %31
  %41 = bitcast i8* %36 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = add i64 %22, -1
  %44 = getelementptr i8, i8* %42, i64 %43
  %45 = bitcast i8* %44 to void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i32, i64, %"class.base::WeakPtr.805"*, i1, i64, i64, i32)**
  %46 = load void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i32, i64, %"class.base::WeakPtr.805"*, i1, i64, i64, i32)*, void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i32, i64, %"class.base::WeakPtr.805"*, i1, i64, i64, i32)** %45, align 8
  br label %49

47:                                               ; preds = %31
  %48 = inttoptr i64 %22 to void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i32, i64, %"class.base::WeakPtr.805"*, i1, i64, i64, i32)*
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi void (%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, i32, i64, %"class.base::WeakPtr.805"*, i1, i64, i64, i32)* [ %46, %40 ], [ %48, %47 ]
  %51 = load i32, i32* %8, align 4
  %52 = load i64, i64* %10, align 8
  %53 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %4, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 4
  %55 = bitcast void (%"class.base::internal::BindStateBase"*)** %54 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %53, %"class.base::internal::WeakReference"* dereferenceable(8) %55) #18
  %56 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %4, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 5
  %58 = bitcast void (%"class.base::internal::BindStateBase"*)** %57 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = load i8, i8* %12, align 1, !range !17
  %61 = icmp ne i8 %60, 0
  %62 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 7
  %63 = bitcast void (%"class.base::internal::BindStateBase"*)** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 8
  %66 = bitcast void (%"class.base::internal::BindStateBase"*)** %65 to i64*
  %67 = load i64, i64* %66, align 8
  call void %50(%"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %37, i32 %51, i64 %52, %"class.base::WeakPtr.805"* nonnull %4, i1 zeroext %61, i64 %64, i64 %67, i32 %1) #18
  %68 = getelementptr inbounds %"class.base::WeakPtr.805", %"class.base::WeakPtr.805"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %68) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #18
  br label %69

69:                                               ; preds = %2, %15, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS4_10ProbeStatsEEEbNS_9TimeTicksES8_iEJNS5_IS4_EEjmS7_bS8_S8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #18
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %7) #18
  %8 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #20
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksES9_iEJNS6_IS5_EEjmS8_bS9_S9_EEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #18
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"**
  %9 = load %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"*, %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"** %8, align 8
  %10 = icmp ne %"class.net::(anonymous namespace)::DnsOverHttpsProbeRunner"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #18
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN3net26DnsResponseResultExtractorC1EPKNS_11DnsResponseE(%"class.net::DnsResponseResultExtractor"*, %"class.net::DnsResponse"*) unnamed_addr #7

declare void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"*, i32, i32, i8, i64) unnamed_addr #7

declare i32 @_ZNK3net26DnsResponseResultExtractor17ExtractDnsResultsENS_12DnsQueryTypeEPNS_9HostCache5EntryE(%"class.net::DnsResponseResultExtractor"*, i32, %"class.net::HostCache::Entry"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3net26DnsResponseResultExtractorD1Ev(%"class.net::DnsResponseResultExtractor"*) unnamed_addr #8

declare void @_ZN4base21UmaHistogramLongTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #7

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #7

declare void @_ZN3net14OptRecordRdata6AddOptERKNS0_3OptE(%"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata::Opt"* dereferenceable(32)) local_unnamed_addr #7

declare void @_ZN3net14OptRecordRdataC1Ev(%"class.net::OptRecordRdata"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN3net10DnsSessionEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN3net10DnsSessionEE10GetWeakPtrEv"}
!5 = distinct !{!5, !6, !"_ZN3net10DnsSession10GetWeakPtrEv: argument 0"}
!6 = distinct !{!6, !"_ZN3net10DnsSession10GetWeakPtrEv"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZZN3net12_GLOBAL__N_118DnsTransactionImpl5StartEvENKUlvE_clEv: argument 0"}
!12 = distinct !{!12, !"_ZZN3net12_GLOBAL__N_118DnsTransactionImpl5StartEvENKUlvE_clEv"}
!13 = !{!14, !11}
!14 = distinct !{!14, !15, !"_ZN3net12_GLOBAL__N_117NetLogStartParamsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt: argument 0"}
!15 = distinct !{!15, !"_ZN3net12_GLOBAL__N_117NetLogStartParamsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt"}
!16 = !{!14}
!17 = !{i8 0, i8 2}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN4base15SupportsWeakPtrIN3net12_GLOBAL__N_118DnsTransactionImplEE9AsWeakPtrEv: argument 0"}
!26 = distinct !{!26, !"_ZN4base15SupportsWeakPtrIN3net12_GLOBAL__N_118DnsTransactionImplEE9AsWeakPtrEv"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS5_13AttemptResultEEJNS_7WeakPtrIS5_EERS6_EEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS5_13AttemptResultEEJNS_7WeakPtrIS5_EERS6_EEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS3_13AttemptResultEEJNS_7WeakPtrIS3_EERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_118DnsTransactionImplEFvNS3_13AttemptResultEEJNS_7WeakPtrIS3_EERS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZNK3net12_GLOBAL__N_110DnsAttempt20NetLogResponseParamsEv: argument 0"}
!34 = distinct !{!34, !"_ZNK3net12_GLOBAL__N_110DnsAttempt20NetLogResponseParamsEv"}
!35 = distinct !{!35, !36, !"_ZZN3net12_GLOBAL__N_118DnsTransactionImpl11LogResponseEPKNS0_10DnsAttemptEENKUlvE_clEv: argument 0"}
!36 = distinct !{!36, !"_ZZN3net12_GLOBAL__N_118DnsTransactionImpl11LogResponseEPKNS0_10DnsAttemptEENKUlvE_clEv"}
!37 = !{!33}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!41 = distinct !{!41, !42, !"_ZN4base8BindOnceIRMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8BindOnceIRMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNKR4absl8optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8value_orIRA21_KcEES7_OT_: argument 0"}
!45 = distinct !{!45, !"_ZNKR4absl8optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8value_orIRA21_KcEES7_OT_"}
!46 = !{!"branch_weights", i32 1, i32 2000}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EERjbS6_EEEDcOT0_DpOT1_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EERjbS6_EEEDcOT0_DpOT1_"}
!50 = distinct !{!50, !51, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS_8internal17UnretainedWrapperIS3_EERjbS4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS_8internal17UnretainedWrapperIS3_EERjbS4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!54 = distinct !{!54, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!55 = distinct !{!55, !56, !"_ZN4base8BindOnceIRMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!56 = distinct !{!56, !"_ZN4base8BindOnceIRMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!57 = !{!58, !60}
!58 = distinct !{!58, !59, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EERmbS6_EEEDcOT0_DpOT1_: argument 0"}
!59 = distinct !{!59, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EERmbS6_EEEDcOT0_DpOT1_"}
!60 = distinct !{!60, !61, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS_8internal17UnretainedWrapperIS3_EERmbS4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!61 = distinct !{!61, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS_8internal17UnretainedWrapperIS3_EERmbS4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!62 = !{!63, !65}
!63 = distinct !{!63, !64, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!64 = distinct !{!64, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!65 = distinct !{!65, !66, !"_ZN4base8BindOnceIRMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!66 = distinct !{!66, !"_ZN4base8BindOnceIRMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!67 = !{!68, !70}
!68 = distinct !{!68, !69, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!69 = distinct !{!69, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!70 = distinct !{!70, !71, !"_ZN4base8BindOnceIRMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!71 = distinct !{!71, !"_ZN4base8BindOnceIRMN3net12_GLOBAL__N_118DnsTransactionImplEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!72 = distinct !{!72, !8}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_114DnsHTTPAttemptEE10GetWeakPtrEv: argument 0"}
!75 = distinct !{!75, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_114DnsHTTPAttemptEE10GetWeakPtrEv"}
!76 = !{!77, !79}
!77 = distinct !{!77, !78, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS3_10URLRequestEiEJNS_7WeakPtrIS5_EES7_RiEEEDcOT0_DpOT1_: argument 0"}
!78 = distinct !{!78, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS3_10URLRequestEiEJNS_7WeakPtrIS5_EES7_RiEEEDcOT0_DpOT1_"}
!79 = distinct !{!79, !80, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS1_10URLRequestEiEJNS_7WeakPtrIS3_EES5_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!80 = distinct !{!80, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_114DnsHTTPAttemptEFvPNS1_10URLRequestEiEJNS_7WeakPtrIS3_EES5_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!81 = !{i64 0, i64 65}
!82 = distinct !{!82, !8}
!83 = !{!84, !86}
!84 = distinct !{!84, !85, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EERjbS6_EEEDcOT0_DpOT1_: argument 0"}
!85 = distinct !{!85, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS0_17UnretainedWrapperIS5_EERjbS6_EEEDcOT0_DpOT1_"}
!86 = distinct !{!86, !87, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS_8internal17UnretainedWrapperIS3_EERjbS4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!87 = distinct !{!87, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_118DnsTransactionImplEFvjbNS_9TimeTicksEiEJNS_8internal17UnretainedWrapperIS3_EERjbS4_EEENS_12OnceCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!88 = !{!89, !91}
!89 = distinct !{!89, !90, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!90 = distinct !{!90, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!91 = distinct !{!91, !92, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!92 = distinct !{!92, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!93 = !{!94, !96}
!94 = distinct !{!94, !95, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!95 = distinct !{!95, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!96 = distinct !{!96, !97, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!97 = distinct !{!97, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!98 = !{!99, !101}
!99 = distinct !{!99, !100, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!100 = distinct !{!100, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!101 = distinct !{!101, !102, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!102 = distinct !{!102, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!103 = !{!104, !106}
!104 = distinct !{!104, !105, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!105 = distinct !{!105, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!106 = distinct !{!106, !107, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!107 = distinct !{!107, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!108 = !{!109, !111}
!109 = distinct !{!109, !110, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!110 = distinct !{!110, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!111 = distinct !{!111, !112, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!112 = distinct !{!112, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsTCPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!113 = !{!114, !116}
!114 = distinct !{!114, !115, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!115 = distinct !{!115, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!116 = distinct !{!116, !117, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!117 = distinct !{!117, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!118 = !{!119, !121}
!119 = distinct !{!119, !120, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!120 = distinct !{!120, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!121 = distinct !{!121, !122, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!122 = distinct !{!122, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_113DnsUDPAttemptEFviEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner10ProbeStatsEE10GetWeakPtrEv: argument 0"}
!125 = distinct !{!125, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunner10ProbeStatsEE10GetWeakPtrEv"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEE10GetWeakPtrEv: argument 0"}
!128 = distinct !{!128, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEE10GetWeakPtrEv"}
!129 = !{!130, !132}
!130 = distinct !{!130, !131, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksEEJNS6_IS5_EERmRS8_RbRS9_EEEDcOT0_DpOT1_: argument 0"}
!131 = distinct !{!131, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksEEJNS6_IS5_EERmRS8_RbRS9_EEEDcOT0_DpOT1_"}
!132 = distinct !{!132, !133, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS3_10ProbeStatsEEEbNS_9TimeTicksEEJNS4_IS3_EERmRS6_RbRS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!133 = distinct !{!133, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvmNS_7WeakPtrINS3_10ProbeStatsEEEbNS_9TimeTicksEEJNS4_IS3_EERmRS6_RbRS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEE10GetWeakPtrEv: argument 0"}
!136 = distinct !{!136, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEE10GetWeakPtrEv"}
!137 = !{!138, !140}
!138 = distinct !{!138, !139, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksES9_iEJNS6_IS5_EERjRmS8_RbRS9_S9_EEEDcOT0_DpOT1_: argument 0"}
!139 = distinct !{!139, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS5_10ProbeStatsEEEbNS_9TimeTicksES9_iEJNS6_IS5_EERjRmS8_RbRS9_S9_EEEDcOT0_DpOT1_"}
!140 = distinct !{!140, !141, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS3_10ProbeStatsEEEbNS_9TimeTicksES7_iEJNS4_IS3_EERjRmS6_RbRS7_S7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!141 = distinct !{!141, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_123DnsOverHttpsProbeRunnerEFvjmNS_7WeakPtrINS3_10ProbeStatsEEEbNS_9TimeTicksES7_iEJNS4_IS3_EERjRmS6_RbRS7_S7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
