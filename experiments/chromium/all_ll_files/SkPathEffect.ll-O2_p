; ModuleID = '../../third_party/skia/src/core/SkPathEffect.cpp'
source_filename = "../../third_party/skia/src/core/SkPathEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.SkPathEffectBase = type { %class.SkPathEffect.base, [4 x i8] }
%class.SkPathEffect.base = type { %class.SkFlattenable.base }
%"class.SkPathEffectBase::PointData" = type { i32, %struct.SkPoint*, i32, %struct.SkPoint, %struct.SkRect, [4 x i8], %class.SkPath, %class.SkPath, %class.SkPath }
%class.SkMatrix = type { [9 x float], i32 }
%"struct.SkPathEffect::DashInfo" = type { float*, i32, float }
%class.sk_sp.17 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.14*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.17*, %class.SkReadBuffer*)* }
%class.sk_sp.14 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.14*, i8*, i64, i8*)*, i8* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.18 = type { %class.SkPathEffect* }
%class.SkPairPathEffect = type { %class.SkPathEffectBase.base, %class.sk_sp.18, %class.sk_sp.18 }
%class.SkPathEffectBase.base = type { %class.SkPathEffect.base }
%class.SkComposePathEffect = type { %class.SkPairPathEffect }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.19*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.19*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.19*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.19 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.20, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.20 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.21, i32, i32 }
%class.sk_sp.21 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.22, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.22 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkSumPathEffect = type { %class.SkPairPathEffect }

$_ZN16SkPairPathEffectD2Ev = comdat any

$_ZN19SkComposePathEffectD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK19SkComposePathEffect10getFactoryEv = comdat any

$_ZNK19SkComposePathEffect11getTypeNameEv = comdat any

$_ZNK16SkPairPathEffect7flattenER13SkWriteBuffer = comdat any

$_ZNK16SkPathEffectBase18getFlattenableTypeEv = comdat any

$_ZNK19SkComposePathEffect12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect = comdat any

$_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect = comdat any

$_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE = comdat any

$_ZNK19SkComposePathEffect17computeFastBoundsEP6SkRect = comdat any

$_ZN16SkPairPathEffectD0Ev = comdat any

$_ZN15SkSumPathEffectD0Ev = comdat any

$_ZNK15SkSumPathEffect10getFactoryEv = comdat any

$_ZNK15SkSumPathEffect11getTypeNameEv = comdat any

$_ZNK15SkSumPathEffect12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect = comdat any

$_ZNK15SkSumPathEffect17computeFastBoundsEP6SkRect = comdat any

$_ZTV19SkComposePathEffect = comdat any

$_ZTV16SkPairPathEffect = comdat any

$_ZTV15SkSumPathEffect = comdat any

@.str = private unnamed_addr constant [20 x i8] c"SkComposePathEffect\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"SkSumPathEffect\00", align 1
@_ZTV19SkComposePathEffect = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPairPathEffect*)* @_ZN16SkPairPathEffectD2Ev to i8*), i8* bitcast (void (%class.SkComposePathEffect*)* @_ZN19SkComposePathEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.17*, %class.SkReadBuffer*)* (%class.SkComposePathEffect*)* @_ZNK19SkComposePathEffect10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkComposePathEffect*)* @_ZNK19SkComposePathEffect11getTypeNameEv to i8*), i8* bitcast (void (%class.SkPairPathEffect*, %class.SkWriteBuffer*)* @_ZNK16SkPairPathEffect7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkComposePathEffect*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)* @_ZNK19SkComposePathEffect12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (i1 (%class.SkComposePathEffect*, %struct.SkRect*)* @_ZNK19SkComposePathEffect17computeFastBoundsEP6SkRect to i8*)] }, comdat, align 8
@_ZTV16SkPairPathEffect = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPairPathEffect*)* @_ZN16SkPairPathEffectD2Ev to i8*), i8* bitcast (void (%class.SkPairPathEffect*)* @_ZN16SkPairPathEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkPairPathEffect*, %class.SkWriteBuffer*)* @_ZNK16SkPairPathEffect7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV15SkSumPathEffect = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPairPathEffect*)* @_ZN16SkPairPathEffectD2Ev to i8*), i8* bitcast (void (%class.SkSumPathEffect*)* @_ZN15SkSumPathEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.17*, %class.SkReadBuffer*)* (%class.SkSumPathEffect*)* @_ZNK15SkSumPathEffect10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkSumPathEffect*)* @_ZNK15SkSumPathEffect11getTypeNameEv to i8*), i8* bitcast (void (%class.SkPairPathEffect*, %class.SkWriteBuffer*)* @_ZNK16SkPairPathEffect7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkSumPathEffect*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)* @_ZNK15SkSumPathEffect12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (i1 (%class.SkSumPathEffect*, %struct.SkRect*)* @_ZNK15SkSumPathEffect17computeFastBoundsEP6SkRect to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkPath, align 8
  %7 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %6) #8
  %9 = icmp eq %class.SkPath* %1, %2
  %10 = select i1 %9, %class.SkPath* %6, %class.SkPath* %1
  %11 = bitcast %class.SkPathEffect* %0 to %class.SkPathEffectBase*
  %12 = bitcast %class.SkPathEffect* %0 to i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)***
  %13 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %13, i64 7
  %15 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %14, align 8
  %16 = call zeroext i1 %15(%class.SkPathEffectBase* %11, %class.SkPath* %10, %class.SkPath* dereferenceable(16) %2, %class.SkStrokeRec* %3, %struct.SkRect* %4) #8
  %17 = and i1 %9, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %5
  %19 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* nonnull dereferenceable(16) %6) #8
  br label %20

20:                                               ; preds = %5, %18
  %21 = phi i1 [ true, %18 ], [ %16, %5 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16SkPathEffectBase8asPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect(%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %7 = bitcast %class.SkPathEffectBase* %0 to i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)***
  %8 = load i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)** %8, i64 8
  %10 = load i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SkPathEffectBase* %0, %"class.SkPathEffectBase::PointData"* %1, %class.SkPath* dereferenceable(16) %2, %class.SkStrokeRec* dereferenceable(16) %3, %class.SkMatrix* dereferenceable(40) %4, %struct.SkRect* %5) #8
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12SkPathEffect7asADashEPNS_8DashInfoE(%class.SkPathEffect*, %"struct.SkPathEffect::DashInfo"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkPathEffect* %0 to %class.SkPathEffectBase*
  %4 = bitcast %class.SkPathEffect* %0 to i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)***
  %5 = load i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)**, i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)*, i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)** %5, i64 9
  %7 = load i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)*, i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)** %6, align 8
  %8 = tail call i32 %7(%class.SkPathEffectBase* %3, %"struct.SkPathEffect::DashInfo"* %1) #8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkComposePathEffect10CreateProcER12SkReadBuffer(%class.sk_sp.17* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 5) #8, !noalias !2
  %4 = ptrtoint %class.SkFlattenable* %3 to i64
  %5 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 5) #8, !noalias !7
  %6 = ptrtoint %class.SkFlattenable* %5 to i64
  %7 = icmp eq %class.SkFlattenable* %3, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %class.sk_sp.17* %0 to i64*
  store i64 %6, i64* %9, align 8
  br label %58

10:                                               ; preds = %2
  %11 = icmp eq %class.SkFlattenable* %5, null
  br i1 %11, label %45, label %12

12:                                               ; preds = %10
  %13 = tail call i8* @_Znwm(i64 32) #9, !noalias !12
  %14 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic, !noalias !12
  %16 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !12
  %18 = atomicrmw add i32* %14, i32 1 monotonic, !noalias !12
  %19 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !12
  %20 = getelementptr inbounds i8, i8* %13, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4, !noalias !12
  %22 = bitcast i8* %13 to i32 (...)***
  %23 = getelementptr inbounds i8, i8* %13, i64 16
  %24 = bitcast i8* %23 to i64*
  store i64 %4, i64* %24, align 8, !noalias !12
  %25 = getelementptr inbounds i8, i8* %13, i64 24
  %26 = bitcast i8* %25 to i64*
  store i64 %6, i64* %26, align 8, !noalias !12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV19SkComposePathEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8, !noalias !12
  %27 = ptrtoint i8* %13 to i64
  %28 = atomicrmw add i32* %16, i32 -1 acq_rel, !noalias !12
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %12
  %31 = bitcast %class.SkFlattenable* %5 to %class.SkRefCntBase*
  %32 = bitcast %class.SkFlattenable* %5 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8, !noalias !12
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8, !noalias !12
  tail call void %35(%class.SkRefCntBase* nonnull %31) #8, !noalias !12
  br label %36

36:                                               ; preds = %30, %12
  %37 = atomicrmw add i32* %14, i32 -1 acq_rel, !noalias !12
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %36
  %40 = bitcast %class.SkFlattenable* %3 to %class.SkRefCntBase*
  %41 = bitcast %class.SkFlattenable* %3 to void (%class.SkRefCntBase*)***
  %42 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %41, align 8, !noalias !12
  %43 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, i64 2
  %44 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, align 8, !noalias !12
  tail call void %44(%class.SkRefCntBase* nonnull %40) #8, !noalias !12
  br label %47

45:                                               ; preds = %10
  %46 = bitcast %class.sk_sp.17* %0 to i64*
  store i64 %4, i64* %46, align 8
  br label %70

47:                                               ; preds = %39, %36
  %48 = bitcast %class.sk_sp.17* %0 to i64*
  store i64 %27, i64* %48, align 8
  %49 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %47
  %53 = bitcast %class.SkFlattenable* %5 to %class.SkRefCntBase*
  %54 = bitcast %class.SkFlattenable* %5 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #8
  br label %58

58:                                               ; preds = %8, %47, %52
  %59 = icmp eq %class.SkFlattenable* %3, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkFlattenable* %3 to %class.SkRefCntBase*
  %66 = bitcast %class.SkFlattenable* %3 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  tail call void %69(%class.SkRefCntBase* nonnull %65) #8
  br label %70

70:                                               ; preds = %45, %58, %60, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkSumPathEffect10CreateProcER12SkReadBuffer(%class.sk_sp.17* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 5) #8, !noalias !15
  %4 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 5) #8, !noalias !20
  %5 = icmp eq %class.SkFlattenable* %3, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %2, %6
  %10 = icmp eq %class.SkFlattenable* %4, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  br label %14

14:                                               ; preds = %9, %11
  %15 = ptrtoint %class.SkFlattenable* %4 to i64
  %16 = ptrtoint %class.SkFlattenable* %3 to i64
  br i1 %5, label %74, label %17

17:                                               ; preds = %14
  br i1 %10, label %51, label %18

18:                                               ; preds = %17
  %19 = tail call i8* @_Znwm(i64 32) #9, !noalias !25
  %20 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !25
  %22 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !25
  %24 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !25
  %25 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !25
  %26 = getelementptr inbounds i8, i8* %19, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4, !noalias !25
  %28 = bitcast i8* %19 to i32 (...)***
  %29 = getelementptr inbounds i8, i8* %19, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %16, i64* %30, align 8, !noalias !25
  %31 = getelementptr inbounds i8, i8* %19, i64 24
  %32 = bitcast i8* %31 to i64*
  store i64 %15, i64* %32, align 8, !noalias !25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15SkSumPathEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !noalias !25
  %33 = ptrtoint i8* %19 to i64
  %34 = atomicrmw add i32* %22, i32 -1 acq_rel, !noalias !25
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %18
  %37 = bitcast %class.SkFlattenable* %4 to %class.SkRefCntBase*
  %38 = bitcast %class.SkFlattenable* %4 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8, !noalias !25
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8, !noalias !25
  tail call void %41(%class.SkRefCntBase* nonnull %37) #8, !noalias !25
  br label %42

42:                                               ; preds = %36, %18
  %43 = atomicrmw add i32* %20, i32 -1 acq_rel, !noalias !25
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  %46 = bitcast %class.SkFlattenable* %3 to %class.SkRefCntBase*
  %47 = bitcast %class.SkFlattenable* %3 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8, !noalias !25
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8, !noalias !25
  tail call void %50(%class.SkRefCntBase* nonnull %46) #8, !noalias !25
  br label %53

51:                                               ; preds = %17
  %52 = bitcast %class.sk_sp.17* %0 to i64*
  store i64 %16, i64* %52, align 8
  br label %87

53:                                               ; preds = %45, %42
  %54 = bitcast %class.sk_sp.17* %0 to i64*
  store i64 %33, i64* %54, align 8
  %55 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = bitcast %class.SkFlattenable* %4 to %class.SkRefCntBase*
  %60 = bitcast %class.SkFlattenable* %4 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  tail call void %63(%class.SkRefCntBase* nonnull %59) #8
  br label %64

64:                                               ; preds = %58, %53
  %65 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = bitcast %class.SkFlattenable* %3 to %class.SkRefCntBase*
  %70 = bitcast %class.SkFlattenable* %3 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  tail call void %73(%class.SkRefCntBase* nonnull %69) #8
  br label %76

74:                                               ; preds = %14
  %75 = bitcast %class.sk_sp.17* %0 to i64*
  store i64 %15, i64* %75, align 8
  br i1 %10, label %97, label %76

76:                                               ; preds = %68, %64, %74
  %77 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %86

80:                                               ; preds = %76
  %81 = bitcast %class.SkFlattenable* %4 to %class.SkRefCntBase*
  %82 = bitcast %class.SkFlattenable* %4 to void (%class.SkRefCntBase*)***
  %83 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, i64 2
  %85 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %84, align 8
  tail call void %85(%class.SkRefCntBase* nonnull %81) #8
  br label %86

86:                                               ; preds = %76, %80
  br i1 %5, label %97, label %87

87:                                               ; preds = %51, %86
  %88 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkFlattenable* %3 to %class.SkRefCntBase*
  %93 = bitcast %class.SkFlattenable* %3 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  tail call void %96(%class.SkRefCntBase* nonnull %92) #8
  br label %97

97:                                               ; preds = %74, %86, %87, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkPathEffect7MakeSumE5sk_spIS_ES1_(%class.sk_sp.18* noalias nocapture sret, %class.sk_sp.18* nocapture, %class.sk_sp.18* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.18* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %2, i64 0, i32 0
  %8 = bitcast %class.sk_sp.18* %2 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %7, align 8
  %10 = inttoptr i64 %6 to %class.SkPathEffect*
  %11 = icmp eq i64 %6, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %class.sk_sp.18* %0 to i64*
  store i64 %9, i64* %13, align 8, !alias.scope !28
  br label %73

14:                                               ; preds = %3
  %15 = inttoptr i64 %9 to %class.SkPathEffect*
  %16 = icmp eq i64 %9, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %14
  %18 = tail call i8* @_Znwm(i64 32) #9, !noalias !28
  %19 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !28
  %21 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic, !noalias !28
  %23 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !28
  %24 = atomicrmw add i32* %21, i32 1 monotonic, !noalias !28
  %25 = getelementptr inbounds i8, i8* %18, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 1, i32* %26, align 4, !noalias !28
  %27 = bitcast i8* %18 to i32 (...)***
  %28 = getelementptr inbounds i8, i8* %18, i64 16
  %29 = bitcast i8* %28 to i64*
  store i64 %6, i64* %29, align 8, !noalias !28
  %30 = getelementptr inbounds i8, i8* %18, i64 24
  %31 = bitcast i8* %30 to i64*
  store i64 %9, i64* %31, align 8, !noalias !28
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15SkSumPathEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8, !noalias !28
  %32 = bitcast %class.sk_sp.18* %0 to i8**
  store i8* %18, i8** %32, align 8, !alias.scope !28
  %33 = atomicrmw add i32* %21, i32 -1 acq_rel, !noalias !28
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %17
  %36 = inttoptr i64 %9 to %class.SkRefCntBase*
  %37 = inttoptr i64 %9 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8, !noalias !28
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8, !noalias !28
  tail call void %40(%class.SkRefCntBase* nonnull %36) #8, !noalias !28
  br label %41

41:                                               ; preds = %35, %17
  %42 = atomicrmw add i32* %19, i32 -1 acq_rel, !noalias !28
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %52

44:                                               ; preds = %41
  %45 = inttoptr i64 %6 to %class.SkRefCntBase*
  %46 = inttoptr i64 %6 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8, !noalias !28
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8, !noalias !28
  tail call void %49(%class.SkRefCntBase* nonnull %45) #8, !noalias !28
  br label %52

50:                                               ; preds = %14
  %51 = bitcast %class.sk_sp.18* %0 to i64*
  store i64 %6, i64* %51, align 8, !alias.scope !28
  br label %73

52:                                               ; preds = %41, %44
  %53 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = inttoptr i64 %9 to %class.SkRefCntBase*
  %58 = inttoptr i64 %9 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  tail call void %61(%class.SkRefCntBase* nonnull %57) #8
  br label %62

62:                                               ; preds = %56, %52
  %63 = inttoptr i64 %6 to %class.SkPathEffect*
  %64 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %63, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %62
  %68 = inttoptr i64 %6 to %class.SkRefCntBase*
  %69 = inttoptr i64 %6 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  tail call void %72(%class.SkRefCntBase* nonnull %68) #8
  br label %73

73:                                               ; preds = %50, %12, %62, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkPathEffect11MakeComposeE5sk_spIS_ES1_(%class.sk_sp.18* noalias nocapture sret, %class.sk_sp.18* nocapture, %class.sk_sp.18* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.18* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %2, i64 0, i32 0
  %8 = bitcast %class.sk_sp.18* %2 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %7, align 8
  %10 = inttoptr i64 %6 to %class.SkPathEffect*
  %11 = icmp eq i64 %6, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %class.sk_sp.18* %0 to i64*
  store i64 %9, i64* %13, align 8, !alias.scope !31
  br label %73

14:                                               ; preds = %3
  %15 = inttoptr i64 %9 to %class.SkPathEffect*
  %16 = icmp eq i64 %9, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %14
  %18 = tail call i8* @_Znwm(i64 32) #9, !noalias !31
  %19 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !31
  %21 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic, !noalias !31
  %23 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !31
  %24 = atomicrmw add i32* %21, i32 1 monotonic, !noalias !31
  %25 = getelementptr inbounds i8, i8* %18, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 1, i32* %26, align 4, !noalias !31
  %27 = bitcast i8* %18 to i32 (...)***
  %28 = getelementptr inbounds i8, i8* %18, i64 16
  %29 = bitcast i8* %28 to i64*
  store i64 %6, i64* %29, align 8, !noalias !31
  %30 = getelementptr inbounds i8, i8* %18, i64 24
  %31 = bitcast i8* %30 to i64*
  store i64 %9, i64* %31, align 8, !noalias !31
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV19SkComposePathEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8, !noalias !31
  %32 = bitcast %class.sk_sp.18* %0 to i8**
  store i8* %18, i8** %32, align 8, !alias.scope !31
  %33 = atomicrmw add i32* %21, i32 -1 acq_rel, !noalias !31
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %17
  %36 = inttoptr i64 %9 to %class.SkRefCntBase*
  %37 = inttoptr i64 %9 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8, !noalias !31
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8, !noalias !31
  tail call void %40(%class.SkRefCntBase* nonnull %36) #8, !noalias !31
  br label %41

41:                                               ; preds = %35, %17
  %42 = atomicrmw add i32* %19, i32 -1 acq_rel, !noalias !31
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %52

44:                                               ; preds = %41
  %45 = inttoptr i64 %6 to %class.SkRefCntBase*
  %46 = inttoptr i64 %6 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8, !noalias !31
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8, !noalias !31
  tail call void %49(%class.SkRefCntBase* nonnull %45) #8, !noalias !31
  br label %52

50:                                               ; preds = %14
  %51 = bitcast %class.sk_sp.18* %0 to i64*
  store i64 %6, i64* %51, align 8, !alias.scope !31
  br label %73

52:                                               ; preds = %41, %44
  %53 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = inttoptr i64 %9 to %class.SkRefCntBase*
  %58 = inttoptr i64 %9 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  tail call void %61(%class.SkRefCntBase* nonnull %57) #8
  br label %62

62:                                               ; preds = %56, %52
  %63 = inttoptr i64 %6 to %class.SkPathEffect*
  %64 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %63, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %62
  %68 = inttoptr i64 %6 to %class.SkRefCntBase*
  %69 = inttoptr i64 %6 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  tail call void %72(%class.SkRefCntBase* nonnull %68) #8
  br label %73

73:                                               ; preds = %50, %12, %62, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkPathEffectBase20RegisterFlattenablesEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.17*, %class.SkReadBuffer*)* nonnull @_ZN19SkComposePathEffect10CreateProcER12SkReadBuffer) #8
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.17*, %class.SkReadBuffer*)* nonnull @_ZN15SkSumPathEffect10CreateProcER12SkReadBuffer) #8
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.17*, %class.SkReadBuffer*)*) local_unnamed_addr #2

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkPairPathEffectD2Ev(%class.SkPairPathEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPairPathEffect, %class.SkPairPathEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV16SkPairPathEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPairPathEffect, %class.SkPairPathEffect* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkPathEffect*, %class.SkPathEffect** %3, align 8
  %5 = icmp eq %class.SkPathEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPathEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPathEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.SkPairPathEffect, %class.SkPairPathEffect* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkPathEffect*, %class.SkPathEffect** %17, align 8
  %19 = icmp eq %class.SkPathEffect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkPathEffect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkPathEffect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #8
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkComposePathEffectD0Ev(%class.SkComposePathEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkComposePathEffect, %class.SkComposePathEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV16SkPairPathEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkComposePathEffect, %class.SkComposePathEffect* %0, i64 0, i32 0, i32 2, i32 0
  %4 = load %class.SkPathEffect*, %class.SkPathEffect** %3, align 8
  %5 = icmp eq %class.SkPathEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPathEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPathEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.SkComposePathEffect, %class.SkComposePathEffect* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkPathEffect*, %class.SkPathEffect** %17, align 8
  %19 = icmp eq %class.SkPathEffect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkPathEffect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkPathEffect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #8
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %class.SkComposePathEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.17*, %class.SkReadBuffer*)* @_ZNK19SkComposePathEffect10getFactoryEv(%class.SkComposePathEffect*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.17*, %class.SkReadBuffer*)* @_ZN19SkComposePathEffect10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK19SkComposePathEffect11getTypeNameEv(%class.SkComposePathEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK16SkPairPathEffect7flattenER13SkWriteBuffer(%class.SkPairPathEffect*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkPairPathEffect, %class.SkPairPathEffect* %0, i64 0, i32 1, i32 0
  %4 = bitcast %class.SkPathEffect** %3 to %class.SkFlattenable**
  %5 = load %class.SkFlattenable*, %class.SkFlattenable** %4, align 8
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  %7 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %7, i64 11
  %9 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, %class.SkFlattenable* %5) #8
  %10 = getelementptr inbounds %class.SkPairPathEffect, %class.SkPairPathEffect* %0, i64 0, i32 2, i32 0
  %11 = bitcast %class.SkPathEffect** %10 to %class.SkFlattenable**
  %12 = load %class.SkFlattenable*, %class.SkFlattenable** %11, align 8
  %13 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %6, align 8
  %14 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %13, i64 11
  %15 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %14, align 8
  tail call void %15(%class.SkWriteBuffer* %1, %class.SkFlattenable* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkPathEffectBase18getFlattenableTypeEv(%class.SkPathEffectBase*) unnamed_addr #0 comdat align 2 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK19SkComposePathEffect12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkComposePathEffect*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.SkPath, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = alloca %class.SkPath, align 8
  %9 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %8) #8
  %11 = getelementptr inbounds %class.SkComposePathEffect, %class.SkComposePathEffect* %0, i64 0, i32 0, i32 2, i32 0
  %12 = load %class.SkPathEffect*, %class.SkPathEffect** %11, align 8
  %13 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #8
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %6) #8
  %14 = icmp eq %class.SkPath* %8, %2
  %15 = select i1 %14, %class.SkPath* %6, %class.SkPath* %8
  %16 = bitcast %class.SkPathEffect* %12 to %class.SkPathEffectBase*
  %17 = bitcast %class.SkPathEffect* %12 to i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)***
  %18 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %18, i64 7
  %20 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %19, align 8
  %21 = call zeroext i1 %20(%class.SkPathEffectBase* %16, %class.SkPath* nonnull %15, %class.SkPath* dereferenceable(16) %2, %class.SkStrokeRec* %3, %struct.SkRect* %4) #8
  %22 = and i1 %14, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %5
  %24 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %2, %class.SkPath* nonnull dereferenceable(16) %6) #8
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  br label %26

25:                                               ; preds = %5
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  br i1 %21, label %26, label %27

26:                                               ; preds = %23, %25
  br label %27

27:                                               ; preds = %25, %26
  %28 = phi %class.SkPath* [ %8, %26 ], [ %2, %25 ]
  %29 = getelementptr inbounds %class.SkComposePathEffect, %class.SkComposePathEffect* %0, i64 0, i32 0, i32 1, i32 0
  %30 = load %class.SkPathEffect*, %class.SkPathEffect** %29, align 8
  %31 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false) #8
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #8
  %32 = icmp eq %class.SkPath* %28, %1
  %33 = select i1 %32, %class.SkPath* %7, %class.SkPath* %1
  %34 = bitcast %class.SkPathEffect* %30 to %class.SkPathEffectBase*
  %35 = bitcast %class.SkPathEffect* %30 to i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)***
  %36 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %36, i64 7
  %38 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %37, align 8
  %39 = call zeroext i1 %38(%class.SkPathEffectBase* %34, %class.SkPath* %33, %class.SkPath* dereferenceable(16) %28, %class.SkStrokeRec* %3, %struct.SkRect* %4) #8
  %40 = and i1 %32, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %27
  %42 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* nonnull dereferenceable(16) %7) #8
  br label %43

43:                                               ; preds = %27, %41
  %44 = phi i1 [ true, %41 ], [ %39, %27 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect(%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE(%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK19SkComposePathEffect17computeFastBoundsEP6SkRect(%class.SkComposePathEffect*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkComposePathEffect, %class.SkComposePathEffect* %0, i64 0, i32 0, i32 2
  %4 = bitcast %class.sk_sp.18* %3 to %class.SkPathEffectBase**
  %5 = load %class.SkPathEffectBase*, %class.SkPathEffectBase** %4, align 8
  %6 = bitcast %class.SkPathEffectBase* %5 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %7 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %7, i64 10
  %9 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkPathEffectBase* %5, %struct.SkRect* %1) #8
  br i1 %10, label %11, label %20

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkComposePathEffect, %class.SkComposePathEffect* %0, i64 0, i32 0, i32 1
  %13 = bitcast %class.sk_sp.18* %12 to %class.SkPathEffectBase**
  %14 = load %class.SkPathEffectBase*, %class.SkPathEffectBase** %13, align 8
  %15 = bitcast %class.SkPathEffectBase* %14 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %16 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %16, i64 10
  %18 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.SkPathEffectBase* %14, %struct.SkRect* %1) #8
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi i1 [ false, %2 ], [ %19, %11 ]
  ret i1 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkPairPathEffectD0Ev(%class.SkPairPathEffect*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkSumPathEffectD0Ev(%class.SkSumPathEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSumPathEffect, %class.SkSumPathEffect* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV16SkPairPathEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSumPathEffect, %class.SkSumPathEffect* %0, i64 0, i32 0, i32 2, i32 0
  %4 = load %class.SkPathEffect*, %class.SkPathEffect** %3, align 8
  %5 = icmp eq %class.SkPathEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPathEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPathEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.SkSumPathEffect, %class.SkSumPathEffect* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %class.SkPathEffect*, %class.SkPathEffect** %17, align 8
  %19 = icmp eq %class.SkPathEffect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkPathEffect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkPathEffect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #8
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %class.SkSumPathEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.17*, %class.SkReadBuffer*)* @_ZNK15SkSumPathEffect10getFactoryEv(%class.SkSumPathEffect*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.17*, %class.SkReadBuffer*)* @_ZN15SkSumPathEffect10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK15SkSumPathEffect11getTypeNameEv(%class.SkSumPathEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK15SkSumPathEffect12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkSumPathEffect*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.SkPath, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = getelementptr inbounds %class.SkSumPathEffect, %class.SkSumPathEffect* %0, i64 0, i32 0, i32 1, i32 0
  %9 = load %class.SkPathEffect*, %class.SkPathEffect** %8, align 8
  %10 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #8
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %6) #8
  %11 = icmp eq %class.SkPath* %1, %2
  %12 = select i1 %11, %class.SkPath* %6, %class.SkPath* %1
  %13 = bitcast %class.SkPathEffect* %9 to %class.SkPathEffectBase*
  %14 = bitcast %class.SkPathEffect* %9 to i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)***
  %15 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %15, i64 7
  %17 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %16, align 8
  %18 = call zeroext i1 %17(%class.SkPathEffectBase* %13, %class.SkPath* %12, %class.SkPath* dereferenceable(16) %2, %class.SkStrokeRec* %3, %struct.SkRect* %4) #8
  %19 = and i1 %11, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %5
  %21 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* nonnull dereferenceable(16) %6) #8
  br label %22

22:                                               ; preds = %5, %20
  %23 = phi i1 [ true, %20 ], [ %18, %5 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  %24 = getelementptr inbounds %class.SkSumPathEffect, %class.SkSumPathEffect* %0, i64 0, i32 0, i32 2, i32 0
  %25 = load %class.SkPathEffect*, %class.SkPathEffect** %24, align 8
  %26 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #8
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #8
  %27 = select i1 %11, %class.SkPath* %7, %class.SkPath* %1
  %28 = bitcast %class.SkPathEffect* %25 to %class.SkPathEffectBase*
  %29 = bitcast %class.SkPathEffect* %25 to i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)***
  %30 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %30, i64 7
  %32 = load i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)** %31, align 8
  %33 = call zeroext i1 %32(%class.SkPathEffectBase* %28, %class.SkPath* %27, %class.SkPath* dereferenceable(16) %2, %class.SkStrokeRec* %3, %struct.SkRect* %4) #8
  %34 = and i1 %11, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* nonnull dereferenceable(16) %7) #8
  br label %37

37:                                               ; preds = %22, %35
  %38 = phi i1 [ true, %35 ], [ %33, %22 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  %39 = or i1 %23, %38
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK15SkSumPathEffect17computeFastBoundsEP6SkRect(%class.SkSumPathEffect*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSumPathEffect, %class.SkSumPathEffect* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.18* %3 to %class.SkPathEffectBase**
  %5 = load %class.SkPathEffectBase*, %class.SkPathEffectBase** %4, align 8
  %6 = bitcast %class.SkPathEffectBase* %5 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %7 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %7, i64 10
  %9 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkPathEffectBase* %5, %struct.SkRect* %1) #8
  br i1 %10, label %11, label %20

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkSumPathEffect, %class.SkSumPathEffect* %0, i64 0, i32 0, i32 2
  %13 = bitcast %class.sk_sp.18* %12 to %class.SkPathEffectBase**
  %14 = load %class.SkPathEffectBase*, %class.SkPathEffectBase** %13, align 8
  %15 = bitcast %class.SkPathEffectBase* %14 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %16 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %16, i64 10
  %18 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.SkPathEffectBase* %14, %struct.SkRect* %1) #8
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi i1 [ false, %2 ], [ %19, %11 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev: argument 0"}
!4 = distinct !{!4, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev"}
!5 = distinct !{!5, !6, !"_ZN12SkReadBuffer14readPathEffectEv: argument 0"}
!6 = distinct !{!6, !"_ZN12SkReadBuffer14readPathEffectEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev: argument 0"}
!9 = distinct !{!9, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev"}
!10 = distinct !{!10, !11, !"_ZN12SkReadBuffer14readPathEffectEv: argument 0"}
!11 = distinct !{!11, !"_ZN12SkReadBuffer14readPathEffectEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN19SkComposePathEffect4MakeE5sk_spI12SkPathEffectES2_: argument 0"}
!14 = distinct !{!14, !"_ZN19SkComposePathEffect4MakeE5sk_spI12SkPathEffectES2_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev: argument 0"}
!17 = distinct !{!17, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev"}
!18 = distinct !{!18, !19, !"_ZN12SkReadBuffer14readPathEffectEv: argument 0"}
!19 = distinct !{!19, !"_ZN12SkReadBuffer14readPathEffectEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev: argument 0"}
!22 = distinct !{!22, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev"}
!23 = distinct !{!23, !24, !"_ZN12SkReadBuffer14readPathEffectEv: argument 0"}
!24 = distinct !{!24, !"_ZN12SkReadBuffer14readPathEffectEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN15SkSumPathEffect4MakeE5sk_spI12SkPathEffectES2_: argument 0"}
!27 = distinct !{!27, !"_ZN15SkSumPathEffect4MakeE5sk_spI12SkPathEffectES2_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN15SkSumPathEffect4MakeE5sk_spI12SkPathEffectES2_: argument 0"}
!30 = distinct !{!30, !"_ZN15SkSumPathEffect4MakeE5sk_spI12SkPathEffectES2_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN19SkComposePathEffect4MakeE5sk_spI12SkPathEffectES2_: argument 0"}
!33 = distinct !{!33, !"_ZN19SkComposePathEffect4MakeE5sk_spI12SkPathEffectES2_"}
