; ModuleID = '../../chrome/browser/enterprise/util/affiliation.cc'
source_filename = "../../chrome/browser/enterprise/util/affiliation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.BrowserProcess = type { i32 (...)** }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.7", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.24" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::basic_string"* }
%"class.policy::ProfilePolicyConnector" = type { %"class.std::__1::unique_ptr.42", %"class.policy::ConfigurationPolicyProvider"*, %"class.policy::CloudPolicyStore"*, %"class.policy::ConfigurationPolicyProvider"*, %"class.std::__1::vector.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.policy::ConfigurationPolicyProvider"* }
%"class.policy::CloudPolicyStore" = type opaque
%"class.policy::ConfigurationPolicyProvider" = type opaque
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.policy::ConfigurationPolicyProvider"**, %"class.policy::ConfigurationPolicyProvider"**, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.policy::ConfigurationPolicyProvider"** }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.policy::PolicyService"* }
%"class.policy::PolicyService" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { i8* }
%"class.policy::ChromeBrowserPolicyConnector" = type { %"class.policy::BrowserPolicyConnector", %"class.policy::ConfigurationPolicyProvider"*, %"class.std::__1::unique_ptr.153", %"class.policy::MachineLevelUserCloudPolicyManager"*, %"class.policy::ConfigurationPolicyProvider"* }
%"class.policy::BrowserPolicyConnector" = type { %"class.policy::BrowserPolicyConnectorBase", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147" }
%"class.policy::BrowserPolicyConnectorBase" = type { i32 (...)**, i8, %"class.std::__1::unique_ptr.67", %"class.policy::CombinedSchemaRegistry", %"class.std::__1::vector.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::vector.134" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.policy::ConfigurationPolicyHandlerList"* }
%"class.policy::ConfigurationPolicyHandlerList" = type <{ %"class.std::__1::vector.70", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.80", i8, [7 x i8] }>
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.std::__1::unique_ptr.72"*, %"class.std::__1::unique_ptr.72"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::unique_ptr.72" = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::unique_ptr.72"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.78 }
%class.scoped_refptr.78 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.79", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.79" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.80" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.policy::CombinedSchemaRegistry" = type { %"class.policy::SchemaRegistry.base", %"class.policy::SchemaRegistry::Observer", %"class.policy::SchemaRegistry::InternalObserver", %"class.std::__1::set", %class.scoped_refptr.84 }
%"class.policy::SchemaRegistry.base" = type <{ i32 (...)**, %class.scoped_refptr.84, %"class.base::ObserverList.97", %"class.base::ObserverList.108", [3 x i8] }>
%"class.base::ObserverList.97" = type <{ %"class.std::__1::vector.98", %"class.base::LinkedList.105", i64, i32, [4 x i8] }>
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.100" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.105" = type { %"class.base::LinkNode.106" }
%"class.base::LinkNode.106" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.108" = type <{ %"class.std::__1::vector.98", %"class.base::LinkedList.109", i64, i32, [4 x i8] }>
%"class.base::LinkedList.109" = type { %"class.base::LinkNode.110" }
%"class.base::LinkNode.110" = type { %"class.base::internal::LinkNodeBase" }
%"class.policy::SchemaRegistry::Observer" = type { i32 (...)** }
%"class.policy::SchemaRegistry::InternalObserver" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree.112" }
%"class.std::__1::__tree.112" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.84 = type { %"class.policy::SchemaMap"* }
%"class.policy::SchemaMap" = type { %"class.base::RefCountedThreadSafe.85", %"class.std::__1::map.86" }
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::map.86" = type { %"class.std::__1::__tree.87" }
%"class.std::__1::__tree.87" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"class.std::__1::unique_ptr.42"*, %"class.std::__1::unique_ptr.42"*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.std::__1::unique_ptr.42"* }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.policy::PolicyServiceImpl"* }
%"class.policy::PolicyServiceImpl" = type opaque
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.136" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.base::OnceCallback"* }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.policy::PolicyStatisticsCollector"* }
%"class.policy::PolicyStatisticsCollector" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.policy::DeviceManagementService"* }
%"class.policy::DeviceManagementService" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.policy::ChromeBrowserCloudManagementController"* }
%"class.policy::ChromeBrowserCloudManagementController" = type opaque
%"class.policy::MachineLevelUserCloudPolicyManager" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@g_browser_process = external local_unnamed_addr global %class.BrowserProcess*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6chrome15enterprise_util19IsProfileAffiliatedEP7Profile(%class.Profile*) local_unnamed_addr #0 {
  %2 = alloca %"class.base::internal::flat_tree", align 8
  %3 = alloca %"class.base::internal::flat_tree", align 8
  %4 = bitcast %"class.base::internal::flat_tree"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = bitcast %class.Profile* %0 to %"class.policy::ProfilePolicyConnector"* (%class.Profile*)***
  %6 = load %"class.policy::ProfilePolicyConnector"* (%class.Profile*)**, %"class.policy::ProfilePolicyConnector"* (%class.Profile*)*** %5, align 8
  %7 = getelementptr inbounds %"class.policy::ProfilePolicyConnector"* (%class.Profile*)*, %"class.policy::ProfilePolicyConnector"* (%class.Profile*)** %6, i64 56
  %8 = load %"class.policy::ProfilePolicyConnector"* (%class.Profile*)*, %"class.policy::ProfilePolicyConnector"* (%class.Profile*)** %7, align 8
  %9 = tail call %"class.policy::ProfilePolicyConnector"* %8(%class.Profile* %0) #4
  call void @_ZNK6policy22ProfilePolicyConnector20user_affiliation_idsEv(%"class.base::internal::flat_tree"* nonnull sret %2, %"class.policy::ProfilePolicyConnector"* %9) #4
  %10 = bitcast %"class.base::internal::flat_tree"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #4
  %11 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %12 = bitcast %class.BrowserProcess* %11 to %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)***
  %13 = load %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)**, %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)*** %12, align 8
  %14 = getelementptr inbounds %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)*, %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)** %13, i64 17
  %15 = load %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)*, %"class.policy::ChromeBrowserPolicyConnector"* (%class.BrowserProcess*)** %14, align 8
  %16 = call %"class.policy::ChromeBrowserPolicyConnector"* %15(%class.BrowserProcess* %11) #4
  %17 = bitcast %"class.policy::ChromeBrowserPolicyConnector"* %16 to void (%"class.base::internal::flat_tree"*, %"class.policy::ChromeBrowserPolicyConnector"*)***
  %18 = load void (%"class.base::internal::flat_tree"*, %"class.policy::ChromeBrowserPolicyConnector"*)**, void (%"class.base::internal::flat_tree"*, %"class.policy::ChromeBrowserPolicyConnector"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::internal::flat_tree"*, %"class.policy::ChromeBrowserPolicyConnector"*)*, void (%"class.base::internal::flat_tree"*, %"class.policy::ChromeBrowserPolicyConnector"*)** %18, i64 8
  %20 = load void (%"class.base::internal::flat_tree"*, %"class.policy::ChromeBrowserPolicyConnector"*)*, void (%"class.base::internal::flat_tree"*, %"class.policy::ChromeBrowserPolicyConnector"*)** %19, align 8
  call void %20(%"class.base::internal::flat_tree"* nonnull sret %3, %"class.policy::ChromeBrowserPolicyConnector"* %16) #4
  %21 = call zeroext i1 @_ZN6policy12IsAffiliatedERKN4base8internal9flat_treeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS0_8identityENS3_4lessIvEENS3_6vectorIS9_NS7_IS9_EEEEEESI_(%"class.base::internal::flat_tree"* nonnull dereferenceable(24) %2, %"class.base::internal::flat_tree"* nonnull dereferenceable(24) %3) #4
  %22 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = icmp eq %"class.std::__1::basic_string"* %23, null
  br i1 %24, label %47, label %25

25:                                               ; preds = %1
  %26 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %27 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %3, i64 0, i32 0, i32 0, i32 1
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %23
  br i1 %29, label %45, label %30

30:                                               ; preds = %25, %40
  %31 = phi %"class.std::__1::basic_string"* [ %32, %40 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 -1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #5
  br label %40

40:                                               ; preds = %37, %30
  %41 = icmp eq %"class.std::__1::basic_string"* %32, %23
  br i1 %41, label %42, label %30

42:                                               ; preds = %40
  %43 = bitcast %"class.base::internal::flat_tree"* %3 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %25
  %46 = phi i8* [ %44, %42 ], [ %26, %25 ]
  store %"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"** %27, align 8
  call void @_ZdlPv(i8* %46) #5
  br label %47

47:                                               ; preds = %1, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #4
  %48 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %50 = icmp eq %"class.std::__1::basic_string"* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %53 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0, i32 0, i32 1
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %53, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %49
  br i1 %55, label %71, label %56

56:                                               ; preds = %51, %66
  %57 = phi %"class.std::__1::basic_string"* [ %58, %66 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 -1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #5
  br label %66

66:                                               ; preds = %63, %56
  %67 = icmp eq %"class.std::__1::basic_string"* %58, %49
  br i1 %67, label %68, label %56

68:                                               ; preds = %66
  %69 = bitcast %"class.base::internal::flat_tree"* %2 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %51
  %72 = phi i8* [ %70, %68 ], [ %52, %51 ]
  store %"class.std::__1::basic_string"* %49, %"class.std::__1::basic_string"** %53, align 8
  call void @_ZdlPv(i8* %72) #5
  br label %73

73:                                               ; preds = %47, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  ret i1 %21
}

declare zeroext i1 @_ZN6policy12IsAffiliatedERKN4base8internal9flat_treeINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS0_8identityENS3_4lessIvEENS3_6vectorIS9_NS7_IS9_EEEEEESI_(%"class.base::internal::flat_tree"* dereferenceable(24), %"class.base::internal::flat_tree"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK6policy22ProfilePolicyConnector20user_affiliation_idsEv(%"class.base::internal::flat_tree"* sret, %"class.policy::ProfilePolicyConnector"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
