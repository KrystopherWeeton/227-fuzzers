; ModuleID = '../../ui/gl/gl_context.cc'
source_filename = "../../ui/gl/gl_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gl::GLContext::ScopedReleaseCurrent" = type { i8 }
%"struct.gl::GLContextAttribs" = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.34", %"class.gl::RealGLApi"*, %class.scoped_refptr.51, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.45", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type { %"class.gl::GLApi", %"class.gl::GLApi"* }
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type { %"class.gl::GLApi", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.gl::RealGLApi" = type { %"class.gl::GLApiBase", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.gl::GLWorkarounds", %"class.std::__1::unique_ptr.45" }
%"class.gl::GLApiBase" = type { %"class.gl::GLApi", %"struct.gl::DriverGL"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::basic_string"* }
%class.scoped_refptr.51 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.52", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.52" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.gl::GLVersionInfo"* }
%"class.gl::GLContextReal" = type <{ %"class.gl::GLContext.base", [7 x i8], %"class.std::__1::unique_ptr.76", %"class.std::__1::basic_string", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.gl::GLContext.base" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.34", %"class.gl::RealGLApi"*, %class.scoped_refptr.51, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.45", i8 }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.gl::GPUTiming"* }
%"class.gl::GPUTiming" = type { i32 (...)** }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.69" }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.71" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::BasicStringPiece"* }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.67", %"class.base::SupportsWeakPtr.68" }
%"class.base::RefCounted.67" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.68" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.gl::YUVToRGBConverter" = type opaque
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gl::GPUTimingClient" = type { i32 (...)**, %"class.base::RefCounted.83", %"class.gl::GPUTimingImpl"*, i32, i32 }
%"class.base::RefCounted.83" = type { %"class.base::subtle::RefCountedBase" }
%"class.gl::GPUTimingImpl" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree.87" }
%"class.std::__1::__tree.87" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.59" }

$_ZN2gl9GLContext13SetVisibilityEb = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC2ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEE = comdat any

$_ZZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing = comdat any

$_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing = comdat any

$_ZZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging = comdat any

$_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging = comdat any

@_ZN2gl9GLContext18total_gl_contexts_E = hidden global i32 0, align 4
@_ZN2gl9GLContext26switchable_gpus_supported_E = hidden local_unnamed_addr global i8 0, align 1
@_ZN2gl9GLContext22forced_gpu_preference_E = hidden local_unnamed_addr global i32 0, align 4
@_ZTVN2gl9GLContextE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContext23SetSafeToForceGpuSwitchEv to i8*), i8* bitcast (i1 (%"class.gl::GLContext"*)* @_ZN2gl9GLContext22ForceGpuSwitchIfNeededEv to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContext25SetUnbindFboOnMakeCurrentEv to i8*), i8* bitcast (void (%"class.gl::GLContext"*, i1)* @_ZN2gl9GLContext13SetVisibilityEb to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)* @_ZN2gl9GLContext12GetGLVersionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)* @_ZN2gl9GLContext13GetGLRendererEv to i8*), i8* bitcast (%"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)* @_ZN2gl9GLContext20GetYUVToRGBConverterERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContext28ForceReleaseVirtuallyCurrentEv to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContextD2Ev to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContextD0Ev to i8*), i8* bitcast (%"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)* @_ZN2gl9GLContext11CreateGLApiEPNS_8DriverGLE to i8*), i8* bitcast (void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)* @_ZN2gl9GLContext10SetCurrentEPNS_9GLSurfaceE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.gl::GLContext"*)* @_ZN2gl9GLContext34CheckStickyGraphicsResetStatusImplEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN2gl12_GLOBAL__N_116current_context_E = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN2gl12_GLOBAL__N_121current_real_context_E = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [26 x i8] c"../../ui/gl/gl_context.cc\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Could not make GLSurface current.\00", align 1
@_ZTVN2gl13GLContextRealE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.gl::GPUTimingClient"* (%"class.gl::GLContextReal"*)* @_ZN2gl13GLContextReal21CreateGPUTimingClientEv to i8*), i8* bitcast (%"class.base::internal::flat_tree"* (%"class.gl::GLContextReal"*)* @_ZN2gl13GLContextReal13GetExtensionsEv to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContext23SetSafeToForceGpuSwitchEv to i8*), i8* bitcast (i1 (%"class.gl::GLContext"*)* @_ZN2gl9GLContext22ForceGpuSwitchIfNeededEv to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContext25SetUnbindFboOnMakeCurrentEv to i8*), i8* bitcast (void (%"class.gl::GLContext"*, i1)* @_ZN2gl9GLContext13SetVisibilityEb to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)* @_ZN2gl9GLContext12GetGLVersionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)* @_ZN2gl9GLContext13GetGLRendererEv to i8*), i8* bitcast (%"class.gl::YUVToRGBConverter"* (%"class.gl::GLContext"*, %"class.gfx::ColorSpace"*)* @_ZN2gl9GLContext20GetYUVToRGBConverterERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLContext"*)* @_ZN2gl9GLContext28ForceReleaseVirtuallyCurrentEv to i8*), i8* bitcast (void (%"class.gl::GLContextReal"*)* @_ZN2gl13GLContextRealD2Ev to i8*), i8* bitcast (void (%"class.gl::GLContextReal"*)* @_ZN2gl13GLContextRealD0Ev to i8*), i8* bitcast (%"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)* @_ZN2gl9GLContext11CreateGLApiEPNS_8DriverGLE to i8*), i8* bitcast (void (%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*)* @_ZN2gl13GLContextReal10SetCurrentEPNS_9GLSurfaceE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.gl::GLContext"*)* @_ZN2gl9GLContext34CheckStickyGraphicsResetStatusImplEv to i8*), i8* bitcast (void (%"class.gl::GLContextReal"*)* @_ZN2gl13GLContextReal15ResetExtensionsEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing = linkonce_odr hidden global i64 0, comdat, align 8
@_ZN8switches24kEnableGPUServiceTracingE = external constant [0 x i8], align 1
@_ZZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging = linkonce_odr hidden local_unnamed_addr global i8 0, comdat, align 1
@_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging = linkonce_odr hidden global i64 0, comdat, align 8
@_ZN8switches24kEnableGPUServiceLoggingE = external constant [0 x i8], align 1
@_ZTVN2gl10TraceGLApiE = external unnamed_addr constant { [508 x i8*] }, align 8

@_ZN2gl9GLContext20ScopedReleaseCurrentC1Ev = hidden unnamed_addr alias void (%"class.gl::GLContext::ScopedReleaseCurrent"*), void (%"class.gl::GLContext::ScopedReleaseCurrent"*)* @_ZN2gl9GLContext20ScopedReleaseCurrentC2Ev
@_ZN2gl9GLContext20ScopedReleaseCurrentD1Ev = hidden unnamed_addr alias void (%"class.gl::GLContext::ScopedReleaseCurrent"*), void (%"class.gl::GLContext::ScopedReleaseCurrent"*)* @_ZN2gl9GLContext20ScopedReleaseCurrentD2Ev
@_ZN2gl16GLContextAttribsC1Ev = hidden unnamed_addr alias void (%"struct.gl::GLContextAttribs"*), void (%"struct.gl::GLContextAttribs"*)* @_ZN2gl16GLContextAttribsC2Ev
@_ZN2gl16GLContextAttribsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.gl::GLContextAttribs"*, %"struct.gl::GLContextAttribs"*), void (%"struct.gl::GLContextAttribs"*, %"struct.gl::GLContextAttribs"*)* @_ZN2gl16GLContextAttribsC2ERKS0_
@_ZN2gl16GLContextAttribsC1EOS0_ = hidden unnamed_addr alias void (%"struct.gl::GLContextAttribs"*, %"struct.gl::GLContextAttribs"*), void (%"struct.gl::GLContextAttribs"*, %"struct.gl::GLContextAttribs"*)* @_ZN2gl16GLContextAttribsC2EOS0_
@_ZN2gl16GLContextAttribsD1Ev = hidden unnamed_addr alias void (%"struct.gl::GLContextAttribs"*), void (%"struct.gl::GLContextAttribs"*)* @_ZN2gl16GLContextAttribsD2Ev
@_ZN2gl9GLContextD1Ev = hidden unnamed_addr alias void (%"class.gl::GLContext"*), void (%"class.gl::GLContext"*)* @_ZN2gl9GLContextD2Ev
@_ZN2gl13GLContextRealD1Ev = hidden unnamed_addr alias void (%"class.gl::GLContextReal"*), void (%"class.gl::GLContextReal"*)* @_ZN2gl13GLContextRealD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9GLContext20ScopedReleaseCurrentC2Ev(%"class.gl::GLContext::ScopedReleaseCurrent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext::ScopedReleaseCurrent", %"class.gl::GLContext::ScopedReleaseCurrent"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext20ScopedReleaseCurrentD2Ev(%"class.gl::GLContext::ScopedReleaseCurrent"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext::ScopedReleaseCurrent", %"class.gl::GLContext::ScopedReleaseCurrent"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %37

5:                                                ; preds = %1
  %6 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  %7 = icmp ugt i64 %6, 1
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0)) #15
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E to i8*)) #15
  br label %13

11:                                               ; preds = %8
  %12 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  br label %13

13:                                               ; preds = %5, %10, %11
  %14 = phi i64 [ %6, %5 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), %10 ], [ %12, %11 ]
  %15 = inttoptr i64 %14 to %"class.base::ThreadLocalPointer"*
  %16 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %15, i64 0, i32 0
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #15
  %18 = icmp eq i8* %17, null
  br i1 %18, label %37, label %19

19:                                               ; preds = %13
  %20 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0)) #15
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E to i8*)) #15
  br label %27

25:                                               ; preds = %22
  %26 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  br label %27

27:                                               ; preds = %19, %24, %25
  %28 = phi i64 [ %20, %19 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), %24 ], [ %26, %25 ]
  %29 = inttoptr i64 %28 to %"class.base::ThreadLocalPointer"*
  %30 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %29, i64 0, i32 0
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #15
  %32 = bitcast i8* %31 to %"class.gl::GLContext"*
  %33 = bitcast i8* %31 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %34 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %34, i64 1
  %36 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %35, align 8
  tail call void %36(%"class.gl::GLContext"* %32, %"class.gl::GLSurface"* null) #15
  br label %37

37:                                               ; preds = %13, %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() local_unnamed_addr #1 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0)) #15
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E to i8*)) #15
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.base::ThreadLocalPointer"*
  %11 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %10, i64 0, i32 0
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #15
  %13 = bitcast i8* %12 to %"class.gl::GLContext"*
  ret %"class.gl::GLContext"* %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9GLContext20ScopedReleaseCurrent6CancelEv(%"class.gl::GLContext::ScopedReleaseCurrent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext::ScopedReleaseCurrent", %"class.gl::GLContext::ScopedReleaseCurrent"* %0, i64 0, i32 0
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl16GLContextAttribsC2Ev(%"struct.gl::GLContextAttribs"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 7
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 5, i1 false)
  store i32 3, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 8
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 9
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 10
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 11
  store i8 0, i8* %9, align 2
  %10 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 12
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.gl::GLContextAttribs", %"struct.gl::GLContextAttribs"* %0, i64 0, i32 13
  store i32 1, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLContextAttribsC2ERKS0_(%"struct.gl::GLContextAttribs"* nocapture, %"struct.gl::GLContextAttribs"* nocapture readonly dereferenceable(28)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.gl::GLContextAttribs"* %0 to i8*
  %4 = bitcast %"struct.gl::GLContextAttribs"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 28, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLContextAttribsC2EOS0_(%"struct.gl::GLContextAttribs"* nocapture, %"struct.gl::GLContextAttribs"* nocapture readonly dereferenceable(28)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.gl::GLContextAttribs"* %0 to i8*
  %4 = bitcast %"struct.gl::GLContextAttribs"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 28, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl16GLContextAttribsD2Ev(%"struct.gl::GLContextAttribs"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(28) %"struct.gl::GLContextAttribs"* @_ZN2gl16GLContextAttribsaSERKS0_(%"struct.gl::GLContextAttribs"* returned, %"struct.gl::GLContextAttribs"* nocapture readonly dereferenceable(28)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.gl::GLContextAttribs"* %0 to i8*
  %4 = bitcast %"struct.gl::GLContextAttribs"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 28, i1 false)
  ret %"struct.gl::GLContextAttribs"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(28) %"struct.gl::GLContextAttribs"* @_ZN2gl16GLContextAttribsaSEOS0_(%"struct.gl::GLContextAttribs"* returned, %"struct.gl::GLContextAttribs"* nocapture readonly dereferenceable(28)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.gl::GLContextAttribs"* %0 to i8*
  %4 = bitcast %"struct.gl::GLContextAttribs"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 28, i1 false)
  ret %"struct.gl::GLContextAttribs"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContextC2EPNS_12GLShareGroupE(%"class.gl::GLContext"*, %"class.gl::GLShareGroup"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %4) #15
  %5 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN2gl9GLContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 4, i32 0
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 4, i32 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 10
  %10 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 14
  %11 = getelementptr inbounds %class.scoped_refptr.51, %class.scoped_refptr.51* %10, i64 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 26, i1 false)
  %13 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  store %"class.gl::GLShareGroup"* %1, %"class.gl::GLShareGroup"** %11, align 8
  %14 = icmp eq %"class.gl::GLShareGroup"* %1, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.gl::GLShareGroup", %"class.gl::GLShareGroup"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #15
  %17 = load %"class.gl::GLShareGroup"*, %"class.gl::GLShareGroup"** %11, align 8
  %18 = icmp eq %"class.gl::GLShareGroup"* %17, null
  %19 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 15
  store %"class.gl::GLContext"* null, %"class.gl::GLContext"** %19, align 8
  %20 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 16
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 18
  %22 = bitcast %"class.std::__1::unique_ptr.61"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 17, i1 false)
  br i1 %18, label %28, label %43

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 15
  store %"class.gl::GLContext"* null, %"class.gl::GLContext"** %24, align 8
  %25 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 16
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 18
  %27 = bitcast %"class.std::__1::unique_ptr.61"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 17, i1 false)
  br label %28

28:                                               ; preds = %23, %15
  %29 = tail call i8* @_Znwm(i64 40) #16
  %30 = bitcast i8* %29 to %"class.gl::GLShareGroup"*
  tail call void @_ZN2gl12GLShareGroupC1Ev(%"class.gl::GLShareGroup"* nonnull %30) #15
  %31 = bitcast i8* %29 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %31) #15
  %32 = ptrtoint i8* %29 to i64
  %33 = bitcast %class.scoped_refptr.51* %10 to i64*
  %34 = load %"class.gl::GLShareGroup"*, %"class.gl::GLShareGroup"** %11, align 8
  store i64 %32, i64* %33, align 8
  %35 = icmp eq %"class.gl::GLShareGroup"* %34, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.gl::GLShareGroup", %"class.gl::GLShareGroup"* %34, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #15
  %38 = getelementptr inbounds %"class.gl::GLShareGroup", %"class.gl::GLShareGroup"* %34, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  tail call void @_ZN2gl12GLShareGroupD1Ev(%"class.gl::GLShareGroup"* nonnull %34) #15
  %42 = bitcast %"class.gl::GLShareGroup"* %34 to i8*
  tail call void @_ZdlPv(i8* %42) #16
  br label %43

43:                                               ; preds = %41, %36, %28, %15
  %44 = load %"class.gl::GLShareGroup"*, %"class.gl::GLShareGroup"** %11, align 8
  tail call void @_ZN2gl12GLShareGroup10AddContextEPNS_9GLContextE(%"class.gl::GLShareGroup"* %44, %"class.gl::GLContext"* %0) #15
  %45 = atomicrmw volatile add i32* @_ZN2gl9GLContext18total_gl_contexts_E, i32 1 monotonic
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN2gl12GLShareGroupC1Ev(%"class.gl::GLShareGroup"*) unnamed_addr #5

declare void @_ZN2gl12GLShareGroup10AddContextEPNS_9GLContextE(%"class.gl::GLShareGroup"*, %"class.gl::GLContext"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContextD2Ev(%"class.gl::GLContext"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN2gl9GLContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 14, i32 0
  %4 = load %"class.gl::GLShareGroup"*, %"class.gl::GLShareGroup"** %3, align 8
  tail call void @_ZN2gl12GLShareGroup13RemoveContextEPNS_9GLContextE(%"class.gl::GLShareGroup"* %4, %"class.gl::GLContext"* %0) #15
  %5 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0)) #15
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E to i8*)) #15
  br label %12

10:                                               ; preds = %7
  %11 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  br label %12

12:                                               ; preds = %1, %9, %10
  %13 = phi i64 [ %5, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), %9 ], [ %11, %10 ]
  %14 = inttoptr i64 %13 to %"class.base::ThreadLocalPointer"*
  %15 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %14, i64 0, i32 0
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #15
  %17 = bitcast i8* %16 to %"class.gl::GLContext"*
  %18 = icmp eq %"class.gl::GLContext"* %17, %0
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = bitcast %"class.gl::GLContext"* %0 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %21 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %21, i64 17
  %23 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %22, align 8
  tail call void %23(%"class.gl::GLContext"* %0, %"class.gl::GLSurface"* null) #15
  tail call void @_ZN2gl12SetCurrentGLEPNS_9CurrentGLE(%"struct.gl::CurrentGL"* null) #15
  br label %24

24:                                               ; preds = %19, %12
  %25 = atomicrmw volatile add i32* @_ZN2gl9GLContext18total_gl_contexts_E, i32 -1 monotonic
  %26 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %27 = load %"struct.gl::GLVersionInfo"*, %"struct.gl::GLVersionInfo"** %26, align 8
  store %"struct.gl::GLVersionInfo"* null, %"struct.gl::GLVersionInfo"** %26, align 8
  %28 = icmp eq %"struct.gl::GLVersionInfo"* %27, null
  br i1 %28, label %49, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %27, i64 0, i32 15
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #16
  br label %38

38:                                               ; preds = %35, %29
  %39 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %27, i64 0, i32 14
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #16
  br label %47

47:                                               ; preds = %44, %38
  %48 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %27, i64 0, i32 0
  tail call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %24, %47
  %50 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %51 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %50, align 8
  store %"class.gl::GLStateRestorer"* null, %"class.gl::GLStateRestorer"** %50, align 8
  %52 = icmp eq %"class.gl::GLStateRestorer"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.gl::GLStateRestorer"* %51 to void (%"class.gl::GLStateRestorer"*)***
  %55 = load void (%"class.gl::GLStateRestorer"*)**, void (%"class.gl::GLStateRestorer"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %55, i64 1
  %57 = load void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %56, align 8
  tail call void %57(%"class.gl::GLStateRestorer"* nonnull %51) #15
  br label %58

58:                                               ; preds = %49, %53
  %59 = load %"class.gl::GLShareGroup"*, %"class.gl::GLShareGroup"** %3, align 8
  %60 = icmp eq %"class.gl::GLShareGroup"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.gl::GLShareGroup", %"class.gl::GLShareGroup"* %59, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #15
  %63 = getelementptr inbounds %"class.gl::GLShareGroup", %"class.gl::GLShareGroup"* %59, i64 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  tail call void @_ZN2gl12GLShareGroupD1Ev(%"class.gl::GLShareGroup"* nonnull %59) #15
  %67 = bitcast %"class.gl::GLShareGroup"* %59 to i8*
  tail call void @_ZdlPv(i8* %67) #16
  br label %68

68:                                               ; preds = %58, %61, %66
  %69 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %70 = load %"struct.gl::CurrentGL"*, %"struct.gl::CurrentGL"** %69, align 8
  store %"struct.gl::CurrentGL"* null, %"struct.gl::CurrentGL"** %69, align 8
  %71 = icmp eq %"struct.gl::CurrentGL"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = bitcast %"struct.gl::CurrentGL"* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #16
  br label %74

74:                                               ; preds = %68, %72
  %75 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %76 = load %"class.gl::GLImplementationWrapper"*, %"class.gl::GLImplementationWrapper"** %75, align 8
  store %"class.gl::GLImplementationWrapper"* null, %"class.gl::GLImplementationWrapper"** %75, align 8
  %77 = icmp eq %"class.gl::GLImplementationWrapper"* %76, null
  br i1 %77, label %107, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %76, i64 0, i32 2, i32 0, i32 0, i32 0
  %80 = load %"class.gl::LogGLApi"*, %"class.gl::LogGLApi"** %79, align 8
  store %"class.gl::LogGLApi"* null, %"class.gl::LogGLApi"** %79, align 8
  %81 = icmp eq %"class.gl::LogGLApi"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.gl::LogGLApi"* %80 to void (%"class.gl::LogGLApi"*)***
  %84 = load void (%"class.gl::LogGLApi"*)**, void (%"class.gl::LogGLApi"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.gl::LogGLApi"*)*, void (%"class.gl::LogGLApi"*)** %84, i64 1
  %86 = load void (%"class.gl::LogGLApi"*)*, void (%"class.gl::LogGLApi"*)** %85, align 8
  tail call void %86(%"class.gl::LogGLApi"* nonnull %80) #15
  br label %87

87:                                               ; preds = %82, %78
  %88 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %76, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.gl::TraceGLApi"*, %"class.gl::TraceGLApi"** %88, align 8
  store %"class.gl::TraceGLApi"* null, %"class.gl::TraceGLApi"** %88, align 8
  %90 = icmp eq %"class.gl::TraceGLApi"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.gl::TraceGLApi"* %89 to void (%"class.gl::TraceGLApi"*)***
  %93 = load void (%"class.gl::TraceGLApi"*)**, void (%"class.gl::TraceGLApi"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.gl::TraceGLApi"*)*, void (%"class.gl::TraceGLApi"*)** %93, i64 1
  %95 = load void (%"class.gl::TraceGLApi"*)*, void (%"class.gl::TraceGLApi"*)** %94, align 8
  tail call void %95(%"class.gl::TraceGLApi"* nonnull %89) #15
  br label %96

96:                                               ; preds = %91, %87
  %97 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %97, align 8
  store %"class.gl::GLApi"* null, %"class.gl::GLApi"** %97, align 8
  %99 = icmp eq %"class.gl::GLApi"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = bitcast %"class.gl::GLApi"* %98 to void (%"class.gl::GLApi"*)***
  %102 = load void (%"class.gl::GLApi"*)**, void (%"class.gl::GLApi"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.gl::GLApi"*)*, void (%"class.gl::GLApi"*)** %102, i64 1
  %104 = load void (%"class.gl::GLApi"*)*, void (%"class.gl::GLApi"*)** %103, align 8
  tail call void %104(%"class.gl::GLApi"* nonnull %98) #15
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.gl::GLImplementationWrapper"* %76 to i8*
  tail call void @_ZdlPv(i8* %106) #16
  br label %107

107:                                              ; preds = %74, %105
  %108 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %109 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %108, align 8
  store %"struct.gl::DriverGL"* null, %"struct.gl::DriverGL"** %108, align 8
  %110 = icmp eq %"struct.gl::DriverGL"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  %112 = bitcast %"struct.gl::DriverGL"* %109 to i8*
  tail call void @_ZdlPv(i8* %112) #16
  br label %113

113:                                              ; preds = %107, %111
  %114 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 6
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #16
  br label %122

122:                                              ; preds = %113, %119
  %123 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %123) #15
  ret void
}

declare void @_ZN2gl12GLShareGroup13RemoveContextEPNS_9GLContextE(%"class.gl::GLShareGroup"*, %"class.gl::GLContext"*) local_unnamed_addr #5

declare void @_ZN2gl12SetCurrentGLEPNS_9CurrentGLE(%"struct.gl::CurrentGL"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2gl9GLContextD0Ev(%"class.gl::GLContext"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2gl9GLContext15TotalGLContextsEv() local_unnamed_addr #8 align 2 {
  %1 = load atomic i32, i32* @_ZN2gl9GLContext18total_gl_contexts_E monotonic, align 4
  ret i32 %1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl9GLContext23SwitchableGPUsSupportedEv() local_unnamed_addr #9 align 2 {
  %1 = load i8, i8* @_ZN2gl9GLContext26switchable_gpus_supported_E, align 1, !range !2
  %2 = icmp ne i8 %1, 0
  ret i1 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9GLContext26SetSwitchableGPUsSupportedEv() local_unnamed_addr #0 align 2 {
  store i8 1, i8* @_ZN2gl9GLContext26switchable_gpus_supported_E, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9GLContext22SetForcedGpuPreferenceENS_13GpuPreferenceE(i32) local_unnamed_addr #0 align 2 {
  store i32 %0, i32* @_ZN2gl9GLContext22forced_gpu_preference_E, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2gl9GLContext19AdjustGpuPreferenceENS_13GpuPreferenceE(i32) local_unnamed_addr #9 align 2 {
  %2 = load i32, i32* @_ZN2gl9GLContext22forced_gpu_preference_E, align 4
  switch i32 %2, label %4 [
    i32 0, label %5
    i32 1, label %3
    i32 2, label %3
  ]

3:                                                ; preds = %1, %1
  br label %5

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %4, %3
  %6 = phi i32 [ 0, %4 ], [ %2, %3 ], [ %0, %1 ]
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 20
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = bitcast %"class.gl::GLContext"* %0 to i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %8 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %8, i64 18
  %10 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.gl::GLContext"* %0, %"class.gl::GLSurface"* %1) #15
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ %11, %6 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLApi"* @_ZN2gl9GLContext11CreateGLApiEPNS_8DriverGLE(%"class.gl::GLContext"*, %"struct.gl::DriverGL"*) unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 104) #16
  %4 = bitcast i8* %3 to %"class.gl::RealGLApi"*
  tail call void @_ZN2gl9RealGLApiC1Ev(%"class.gl::RealGLApi"* nonnull %4) #15
  %5 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 13
  %6 = bitcast %"class.gl::RealGLApi"** %5 to i8**
  store i8* %3, i8** %6, align 8
  %7 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 4
  tail call void @_ZN2gl9RealGLApi18set_gl_workaroundsERKNS_13GLWorkaroundsE(%"class.gl::RealGLApi"* nonnull %4, %"struct.gl::GLWorkarounds"* dereferenceable(2) %7) #15
  %8 = load %"class.gl::RealGLApi"*, %"class.gl::RealGLApi"** %5, align 8
  %9 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 6
  %10 = bitcast %"class.gl::RealGLApi"* %8 to void (%"class.gl::RealGLApi"*, %"class.std::__1::basic_string"*)***
  %11 = load void (%"class.gl::RealGLApi"*, %"class.std::__1::basic_string"*)**, void (%"class.gl::RealGLApi"*, %"class.std::__1::basic_string"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gl::RealGLApi"*, %"class.std::__1::basic_string"*)*, void (%"class.gl::RealGLApi"*, %"class.std::__1::basic_string"*)** %11, i64 2
  %13 = load void (%"class.gl::RealGLApi"*, %"class.std::__1::basic_string"*)*, void (%"class.gl::RealGLApi"*, %"class.std::__1::basic_string"*)** %12, align 8
  tail call void %13(%"class.gl::RealGLApi"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %9) #15
  %14 = load %"class.gl::RealGLApi"*, %"class.gl::RealGLApi"** %5, align 8
  tail call void @_ZN2gl9RealGLApi10InitializeEPNS_8DriverGLE(%"class.gl::RealGLApi"* %14, %"struct.gl::DriverGL"* %1) #15
  %15 = bitcast %"class.gl::RealGLApi"** %5 to %"class.gl::GLApi"**
  %16 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %15, align 8
  ret %"class.gl::GLApi"* %16
}

declare void @_ZN2gl9RealGLApiC1Ev(%"class.gl::RealGLApi"*) unnamed_addr #5

declare void @_ZN2gl9RealGLApi18set_gl_workaroundsERKNS_13GLWorkaroundsE(%"class.gl::RealGLApi"*, %"struct.gl::GLWorkarounds"* dereferenceable(2)) local_unnamed_addr #5

declare void @_ZN2gl9RealGLApi10InitializeEPNS_8DriverGLE(%"class.gl::RealGLApi"*, %"struct.gl::DriverGL"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl9GLContext23SetSafeToForceGpuSwitchEv(%"class.gl::GLContext"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl9GLContext22ForceGpuSwitchIfNeededEv(%"class.gl::GLContext"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl9GLContext25SetUnbindFboOnMakeCurrentEv(%"class.gl::GLContext"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext12GetGLVersionEv(%"class.std::__1::basic_string"* noalias sret, %"class.gl::GLContext"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLImplementationWrapper"*, %"class.gl::GLImplementationWrapper"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %4, i64 0, i32 3
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = bitcast %"class.gl::GLApi"* %6 to i8* (%"class.gl::GLApi"*, i32)***
  %8 = load i8* (%"class.gl::GLApi"*, i32)**, i8* (%"class.gl::GLApi"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i8* (%"class.gl::GLApi"*, i32)*, i8* (%"class.gl::GLApi"*, i32)** %8, i64 242
  %10 = load i8* (%"class.gl::GLApi"*, i32)*, i8* (%"class.gl::GLApi"*, i32)** %9, align 8
  %11 = tail call i8* %10(%"class.gl::GLApi"* %6, i32 7938) #15
  %12 = icmp eq i8* %11, null
  %13 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %11
  %14 = tail call i64 @strlen(i8* %13) #15
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %17) #17
  unreachable

18:                                               ; preds = %2
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  br label %34

28:                                               ; preds = %18
  %29 = trunc i64 %14 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %28, %20
  %35 = phi i8* [ %23, %20 ], [ %32, %28 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %13, i64 %14, i1 false) #15
  br label %36

36:                                               ; preds = %28, %34
  %37 = phi i8* [ %32, %28 ], [ %35, %34 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %14
  store i8 0, i8* %38, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext13GetGLRendererEv(%"class.std::__1::basic_string"* noalias sret, %"class.gl::GLContext"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLImplementationWrapper"*, %"class.gl::GLImplementationWrapper"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %4, i64 0, i32 3
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = bitcast %"class.gl::GLApi"* %6 to i8* (%"class.gl::GLApi"*, i32)***
  %8 = load i8* (%"class.gl::GLApi"*, i32)**, i8* (%"class.gl::GLApi"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i8* (%"class.gl::GLApi"*, i32)*, i8* (%"class.gl::GLApi"*, i32)** %8, i64 242
  %10 = load i8* (%"class.gl::GLApi"*, i32)*, i8* (%"class.gl::GLApi"*, i32)** %9, align 8
  %11 = tail call i8* %10(%"class.gl::GLApi"* %6, i32 7937) #15
  %12 = icmp eq i8* %11, null
  %13 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %11
  %14 = tail call i64 @strlen(i8* %13) #15
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %17) #17
  unreachable

18:                                               ; preds = %2
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  br label %34

28:                                               ; preds = %18
  %29 = trunc i64 %14 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %28, %20
  %35 = phi i8* [ %23, %20 ], [ %32, %28 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %13, i64 %14, i1 false) #15
  br label %36

36:                                               ; preds = %28, %34
  %37 = phi i8* [ %32, %28 ], [ %35, %34 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %14
  store i8 0, i8* %38, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.gl::YUVToRGBConverter"* @_ZN2gl9GLContext20GetYUVToRGBConverterERKN3gfx10ColorSpaceE(%"class.gl::GLContext"* nocapture readnone, %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68)) unnamed_addr #3 align 2 {
  ret %"class.gl::YUVToRGBConverter"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.gl::CurrentGL"* @_ZN2gl9GLContext12GetCurrentGLEv(%"class.gl::GLContext"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %92

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 4128) #16
  %7 = bitcast i8* %6 to %"struct.gl::DriverGL"*
  tail call void @_ZN2gl8DriverGL13ClearBindingsEv(%"struct.gl::DriverGL"* nonnull %7) #15
  %8 = ptrtoint i8* %6 to i64
  %9 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 10
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %8, i64* %12, align 8
  %13 = icmp eq %"struct.gl::DriverGL"* %11, null
  %14 = bitcast i8* %6 to %"struct.gl::DriverGL"*
  br i1 %13, label %18, label %15

15:                                               ; preds = %5
  %16 = bitcast %"struct.gl::DriverGL"* %11 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  %17 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %10, align 8
  br label %18

18:                                               ; preds = %15, %5
  %19 = phi %"struct.gl::DriverGL"* [ %17, %15 ], [ %14, %5 ]
  tail call void @_ZN2gl8DriverGL24InitializeStaticBindingsEv(%"struct.gl::DriverGL"* %19) #15
  %20 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %10, align 8
  %21 = bitcast %"class.gl::GLContext"* %0 to %"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)***
  %22 = load %"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)**, %"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)*, %"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)** %22, i64 16
  %24 = load %"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)*, %"class.gl::GLApi"* (%"class.gl::GLContext"*, %"struct.gl::DriverGL"*)** %23, align 8
  %25 = tail call %"class.gl::GLApi"* %24(%"class.gl::GLContext"* %0, %"struct.gl::DriverGL"* %20) #15
  %26 = tail call i8* @_Znwm(i64 32) #16
  %27 = bitcast i8* %26 to %"class.gl::GLImplementationWrapper"*
  tail call void @_ZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC2ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEE(%"class.gl::GLImplementationWrapper"* nonnull %27, %"class.gl::GLApi"* %25) #15
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 11
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.gl::GLImplementationWrapper"*, %"class.gl::GLImplementationWrapper"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.10"* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %"class.gl::GLImplementationWrapper"* %31, null
  br i1 %33, label %63, label %34

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %31, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.gl::LogGLApi"*, %"class.gl::LogGLApi"** %35, align 8
  store %"class.gl::LogGLApi"* null, %"class.gl::LogGLApi"** %35, align 8
  %37 = icmp eq %"class.gl::LogGLApi"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.gl::LogGLApi"* %36 to void (%"class.gl::LogGLApi"*)***
  %40 = load void (%"class.gl::LogGLApi"*)**, void (%"class.gl::LogGLApi"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.gl::LogGLApi"*)*, void (%"class.gl::LogGLApi"*)** %40, i64 1
  %42 = load void (%"class.gl::LogGLApi"*)*, void (%"class.gl::LogGLApi"*)** %41, align 8
  tail call void %42(%"class.gl::LogGLApi"* nonnull %36) #15
  br label %43

43:                                               ; preds = %38, %34
  %44 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %31, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.gl::TraceGLApi"*, %"class.gl::TraceGLApi"** %44, align 8
  store %"class.gl::TraceGLApi"* null, %"class.gl::TraceGLApi"** %44, align 8
  %46 = icmp eq %"class.gl::TraceGLApi"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.gl::TraceGLApi"* %45 to void (%"class.gl::TraceGLApi"*)***
  %49 = load void (%"class.gl::TraceGLApi"*)**, void (%"class.gl::TraceGLApi"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.gl::TraceGLApi"*)*, void (%"class.gl::TraceGLApi"*)** %49, i64 1
  %51 = load void (%"class.gl::TraceGLApi"*)*, void (%"class.gl::TraceGLApi"*)** %50, align 8
  tail call void %51(%"class.gl::TraceGLApi"* nonnull %45) #15
  br label %52

52:                                               ; preds = %47, %43
  %53 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %53, align 8
  store %"class.gl::GLApi"* null, %"class.gl::GLApi"** %53, align 8
  %55 = icmp eq %"class.gl::GLApi"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.gl::GLApi"* %54 to void (%"class.gl::GLApi"*)***
  %58 = load void (%"class.gl::GLApi"*)**, void (%"class.gl::GLApi"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.gl::GLApi"*)*, void (%"class.gl::GLApi"*)** %58, i64 1
  %60 = load void (%"class.gl::GLApi"*)*, void (%"class.gl::GLApi"*)** %59, align 8
  tail call void %60(%"class.gl::GLApi"* nonnull %54) #15
  br label %61

61:                                               ; preds = %56, %52
  %62 = bitcast %"class.gl::GLImplementationWrapper"* %31 to i8*
  tail call void @_ZdlPv(i8* %62) #16
  br label %63

63:                                               ; preds = %61, %18
  %64 = tail call i8* @_Znwm(i64 24) #16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #15
  %65 = ptrtoint i8* %64 to i64
  %66 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 12
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"struct.gl::CurrentGL"*, %"struct.gl::CurrentGL"** %67, align 8
  %69 = bitcast %"class.std::__1::unique_ptr.34"* %66 to i64*
  store i64 %65, i64* %69, align 8
  %70 = icmp eq %"struct.gl::CurrentGL"* %68, null
  %71 = bitcast i8* %64 to %"struct.gl::CurrentGL"*
  br i1 %70, label %75, label %72

72:                                               ; preds = %63
  %73 = bitcast %"struct.gl::CurrentGL"* %68 to i8*
  tail call void @_ZdlPv(i8* %73) #16
  %74 = load %"struct.gl::CurrentGL"*, %"struct.gl::CurrentGL"** %67, align 8
  br label %75

75:                                               ; preds = %63, %72
  %76 = phi %"struct.gl::CurrentGL"* [ %71, %63 ], [ %74, %72 ]
  %77 = load i64, i64* %12, align 8
  %78 = getelementptr inbounds %"struct.gl::CurrentGL", %"struct.gl::CurrentGL"* %76, i64 0, i32 1
  %79 = bitcast %"struct.gl::DriverGL"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.gl::GLImplementationWrapper"*, %"class.gl::GLImplementationWrapper"** %30, align 8
  %81 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %80, i64 0, i32 3
  %82 = bitcast %"class.gl::GLApi"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.34"* %66 to i64**
  %85 = load i64*, i64** %84, align 8
  store i64 %83, i64* %85, align 8
  %86 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %87 = bitcast %"struct.gl::GLVersionInfo"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = load %"struct.gl::CurrentGL"*, %"struct.gl::CurrentGL"** %67, align 8
  %90 = getelementptr inbounds %"struct.gl::CurrentGL", %"struct.gl::CurrentGL"* %89, i64 0, i32 2
  %91 = bitcast %"struct.gl::GLVersionInfo"** %90 to i64*
  store i64 %88, i64* %91, align 8
  store i8 1, i8* %2, align 8
  br label %92

92:                                               ; preds = %1, %75
  %93 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %94 = load %"struct.gl::CurrentGL"*, %"struct.gl::CurrentGL"** %93, align 8
  ret %"struct.gl::CurrentGL"* %94
}

declare void @_ZN2gl8DriverGL24InitializeStaticBindingsEv(%"struct.gl::DriverGL"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext27ReinitializeDynamicBindingsEv(%"class.gl::GLContext"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 8
  store i8 0, i8* %2, align 1
  %3 = bitcast %"class.gl::GLContext"* %0 to void (%"class.gl::GLContext"*)***
  %4 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %4, i64 20
  %6 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %5, align 8
  tail call void %6(%"class.gl::GLContext"* %0) #15
  tail call void @_ZN2gl9GLContext25InitializeDynamicBindingsEv(%"class.gl::GLContext"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext25InitializeDynamicBindingsEv(%"class.gl::GLContext"*) local_unnamed_addr #1 align 2 {
  %2 = tail call %"struct.gl::CurrentGL"* @_ZN2gl9GLContext12GetCurrentGLEv(%"class.gl::GLContext"* %0) #15
  tail call void @_ZN2gl12SetCurrentGLEPNS_9CurrentGLE(%"struct.gl::CurrentGL"* %2) #15
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %61

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 13
  %8 = load %"class.gl::RealGLApi"*, %"class.gl::RealGLApi"** %7, align 8
  %9 = icmp eq %"class.gl::RealGLApi"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  tail call void @_ZN2gl9RealGLApi23ClearCachedGLExtensionsEv(%"class.gl::RealGLApi"* nonnull %8) #15
  %11 = load %"class.gl::RealGLApi"*, %"class.gl::RealGLApi"** %7, align 8
  %12 = tail call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext21GenerateGLVersionInfoEv(%"class.gl::GLContext"* %0)
  tail call void @_ZN2gl9RealGLApi11set_versionENSt3__110unique_ptrINS_13GLVersionInfoENS1_14default_deleteIS3_EEEE(%"class.gl::RealGLApi"* %11, %"struct.gl::GLVersionInfo"* nonnull %12) #15
  br label %13

13:                                               ; preds = %6, %10
  %14 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 19
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.gl::GLVersionInfo"*, %"struct.gl::GLVersionInfo"** %17, align 8
  %19 = icmp eq %"struct.gl::GLVersionInfo"* %18, null
  br i1 %19, label %20, label %54

20:                                               ; preds = %13
  %21 = tail call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext21GenerateGLVersionInfoEv(%"class.gl::GLContext"* %0) #15
  %22 = ptrtoint %"struct.gl::GLVersionInfo"* %21 to i64
  %23 = load %"struct.gl::GLVersionInfo"*, %"struct.gl::GLVersionInfo"** %17, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.45"* %16 to i64*
  store i64 %22, i64* %24, align 8
  %25 = icmp eq %"struct.gl::GLVersionInfo"* %23, null
  br i1 %25, label %46, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %23, i64 0, i32 15
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #16
  br label %35

35:                                               ; preds = %32, %26
  %36 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %23, i64 0, i32 14
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %23, i64 0, i32 0
  tail call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %44, %20
  %47 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %48 = load %"struct.gl::CurrentGL"*, %"struct.gl::CurrentGL"** %47, align 8
  %49 = icmp eq %"struct.gl::CurrentGL"* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = load i64, i64* %24, align 8
  %52 = getelementptr inbounds %"struct.gl::CurrentGL", %"struct.gl::CurrentGL"* %48, i64 0, i32 2
  %53 = bitcast %"struct.gl::GLVersionInfo"** %52 to i64*
  store i64 %51, i64* %53, align 8
  br label %54

54:                                               ; preds = %13, %46, %50
  %55 = load %"struct.gl::GLVersionInfo"*, %"struct.gl::GLVersionInfo"** %17, align 8
  %56 = bitcast %"class.gl::GLContext"* %0 to %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)***
  %57 = load %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)**, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)** %57, i64 5
  %59 = load %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)** %58, align 8
  %60 = tail call dereferenceable(24) %"class.base::internal::flat_tree"* %59(%"class.gl::GLContext"* %0) #15
  tail call void @_ZN2gl8DriverGL25InitializeDynamicBindingsEPKNS_13GLVersionInfoERKN4base8internal9flat_treeINS4_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS4_8identityENS8_4lessIvEENS8_6vectorISB_NS8_9allocatorISB_EEEEEE(%"struct.gl::DriverGL"* %15, %"struct.gl::GLVersionInfo"* %55, %"class.base::internal::flat_tree"* dereferenceable(24) %60) #15
  store i8 1, i8* %3, align 1
  br label %61

61:                                               ; preds = %1, %54
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl9GLContext28ForceReleaseVirtuallyCurrentEv(%"class.gl::GLContext"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9GLContext24DirtyVirtualContextStateEv(%"class.gl::GLContext"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 15
  store %"class.gl::GLContext"* null, %"class.gl::GLContext"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"*, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = bitcast %"class.gl::GLContext"* %0 to %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)***
  %6 = load %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)**, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)** %6, i64 5
  %8 = load %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)** %7, align 8
  %9 = tail call dereferenceable(24) %"class.base::internal::flat_tree"* %8(%"class.gl::GLContext"* %0) #15
  %10 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %13 = icmp eq i8* %1, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = tail call i64 @strlen(i8* nonnull %1) #15
  store i64 %15, i64* %12, align 8
  br label %19

16:                                               ; preds = %2
  store i64 0, i64* %12, align 8
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %14, %16
  %20 = call zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24) %9, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret i1 %20
}

declare zeroext i1 @_ZN3gfx12HasExtensionERKN4base8internal9flat_treeINS0_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8identityENS4_4lessIvEENS4_6vectorIS7_NS4_9allocatorIS7_EEEEEERKS7_(%"class.base::internal::flat_tree"* dereferenceable(24), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 19
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.gl::GLVersionInfo"*, %"struct.gl::GLVersionInfo"** %3, align 8
  %5 = icmp eq %"struct.gl::GLVersionInfo"* %4, null
  br i1 %5, label %6, label %40

6:                                                ; preds = %1
  %7 = tail call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext21GenerateGLVersionInfoEv(%"class.gl::GLContext"* %0)
  %8 = ptrtoint %"struct.gl::GLVersionInfo"* %7 to i64
  %9 = load %"struct.gl::GLVersionInfo"*, %"struct.gl::GLVersionInfo"** %3, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.45"* %2 to i64*
  store i64 %8, i64* %10, align 8
  %11 = icmp eq %"struct.gl::GLVersionInfo"* %9, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %9, i64 0, i32 15
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #16
  br label %21

21:                                               ; preds = %18, %12
  %22 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %9, i64 0, i32 14
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #16
  br label %30

30:                                               ; preds = %27, %21
  %31 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %9, i64 0, i32 0
  tail call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %30, %6
  %33 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %34 = load %"struct.gl::CurrentGL"*, %"struct.gl::CurrentGL"** %33, align 8
  %35 = icmp eq %"struct.gl::CurrentGL"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = load i64, i64* %10, align 8
  %38 = getelementptr inbounds %"struct.gl::CurrentGL", %"struct.gl::CurrentGL"* %34, i64 0, i32 2
  %39 = bitcast %"struct.gl::GLVersionInfo"** %38 to i64*
  store i64 %37, i64* %39, align 8
  br label %40

40:                                               ; preds = %32, %1, %36
  %41 = load %"struct.gl::GLVersionInfo"*, %"struct.gl::GLVersionInfo"** %3, align 8
  ret %"struct.gl::GLVersionInfo"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext21GenerateGLVersionInfoEv(%"class.gl::GLContext"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = bitcast %"class.gl::GLContext"* %0 to void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)***
  %6 = load void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)**, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)** %6, i64 10
  %8 = load void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)** %7, align 8
  call void %8(%"class.std::__1::basic_string"* nonnull sret %2, %"class.gl::GLContext"* %0) #15
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %4
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #15
  %17 = load void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)**, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*** %5, align 8
  %18 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)** %17, i64 11
  %19 = load void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)*, void (%"class.std::__1::basic_string"*, %"class.gl::GLContext"*)** %18, align 8
  call void %19(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gl::GLContext"* %0) #15
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* %16
  %27 = bitcast %"class.gl::GLContext"* %0 to %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)***
  %28 = load %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)**, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)** %28, i64 5
  %30 = load %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)*, %"class.base::internal::flat_tree"* (%"class.gl::GLContext"*)** %29, align 8
  %31 = call dereferenceable(24) %"class.base::internal::flat_tree"* %30(%"class.gl::GLContext"* %0) #15
  %32 = call i8* @_Znwm(i64 72) #16
  %33 = bitcast i8* %32 to %"struct.gl::GLVersionInfo"*
  call void @_ZN2gl13GLVersionInfoC1EPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE(%"struct.gl::GLVersionInfo"* nonnull %33, i8* %15, i8* %26, %"class.base::internal::flat_tree"* dereferenceable(24) %31) #15
  %34 = load i8, i8* %21, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %1
  %37 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %37) #16
  br label %38

38:                                               ; preds = %1, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #15
  %39 = load i8, i8* %10, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %42) #16
  br label %43

43:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret %"struct.gl::GLVersionInfo"* %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gl::GLShareGroup"* @_ZN2gl9GLContext11share_groupEv(%"class.gl::GLContext"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 14, i32 0
  %3 = load %"class.gl::GLShareGroup"*, %"class.gl::GLShareGroup"** %2, align 8
  ret %"class.gl::GLShareGroup"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl9GLContext29LosesAllContextsOnContextLostEv() local_unnamed_addr #1 align 2 {
  %1 = tail call i32 @_ZN2gl19GetGLImplementationEv() #15
  %2 = add i32 %1, -1
  %3 = icmp ult i32 %2, 9
  br i1 %3, label %4, label %9

4:                                                ; preds = %0
  %5 = trunc i32 %2 to i9
  %6 = lshr i9 -106, %5
  %7 = and i9 %6, 1
  %8 = icmp ne i9 %7, 0
  ret i1 %8

9:                                                ; preds = %0
  ret i1 true
}

declare i32 @_ZN2gl19GetGLImplementationEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLContext"* @_ZN2gl9GLContext14GetRealCurrentEv() local_unnamed_addr #1 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0)) #15
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E to i8*)) #15
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.base::ThreadLocalPointer"*
  %11 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %10, i64 0, i32 0
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #15
  %13 = bitcast i8* %12 to %"class.gl::GLContext"*
  ret %"class.gl::GLContext"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext10SetCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*) unnamed_addr #1 align 2 {
  %3 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0)) #15
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E to i8*)) #15
  br label %10

8:                                                ; preds = %5
  %9 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 0) acquire, align 8
  br label %10

10:                                               ; preds = %2, %7, %8
  %11 = phi i64 [ %3, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_116current_context_E, i64 0, i32 1, i64 0) to i64), %7 ], [ %9, %8 ]
  %12 = inttoptr i64 %11 to %"class.base::ThreadLocalPointer"*
  %13 = icmp ne %"class.gl::GLSurface"* %1, null
  %14 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %12, i64 0, i32 0
  %15 = bitcast %"class.gl::GLContext"* %0 to i8*
  %16 = select i1 %13, i8* %15, i8* null
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %16) #15
  br i1 %13, label %17, label %22

17:                                               ; preds = %10
  %18 = bitcast %"class.gl::GLSurface"* %1 to void (%"class.gl::GLSurface"*)***
  %19 = load void (%"class.gl::GLSurface"*)**, void (%"class.gl::GLSurface"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %19, i64 56
  %21 = load void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %20, align 8
  tail call void %21(%"class.gl::GLSurface"* nonnull %1) #15
  br label %29

22:                                               ; preds = %10
  tail call void @_ZN2gl9GLSurface12ClearCurrentEv() #15
  %23 = tail call i32 @_ZN2gl19GetGLImplementationEv() #15
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @_ZN2gl19GetGLImplementationEv() #15
  %27 = icmp eq i32 %26, 7
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  tail call void @_ZN2gl12SetCurrentGLEPNS_9CurrentGLE(%"struct.gl::CurrentGL"* null) #15
  br label %29

29:                                               ; preds = %17, %25, %22, %28
  ret void
}

declare void @_ZN2gl9GLSurface12ClearCurrentEv() local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext16SetGLWorkaroundsERKNS_13GLWorkaroundsE(%"class.gl::GLContext"* nocapture, %"struct.gl::GLWorkarounds"* nocapture readonly dereferenceable(2)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 4, i32 0
  %4 = bitcast %"struct.gl::GLWorkarounds"* %1 to i16*
  %5 = bitcast i8* %3 to i16*
  %6 = load i16, i16* %4, align 1
  store i16 %6, i16* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext23SetDisabledGLExtensionsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::GLContext"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 6
  %4 = icmp eq %"class.std::__1::basic_string"* %3, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #15
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #15
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #15
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.gl::GLStateRestorer"* @_ZN2gl9GLContext18GetGLStateRestorerEv(%"class.gl::GLContext"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %2, align 8
  ret %"class.gl::GLStateRestorer"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext18SetGLStateRestorerEPNS_15GLStateRestorerE(%"class.gl::GLContext"* nocapture, %"class.gl::GLStateRestorer"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.gl::GLStateRestorer"* %1 to i64
  %4 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 18
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.61"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.gl::GLStateRestorer"* %6, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.gl::GLStateRestorer"* %6 to void (%"class.gl::GLStateRestorer"*)***
  %11 = load void (%"class.gl::GLStateRestorer"*)**, void (%"class.gl::GLStateRestorer"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %11, i64 1
  %13 = load void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %12, align 8
  tail call void %13(%"class.gl::GLStateRestorer"* nonnull %6) #15
  br label %14

14:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl9GLContext30CheckStickyGraphicsResetStatusEv(%"class.gl::GLContext"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.gl::GLContext"* %0 to i32 (%"class.gl::GLContext"*)***
  %3 = load i32 (%"class.gl::GLContext"*)**, i32 (%"class.gl::GLContext"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.gl::GLContext"*)*, i32 (%"class.gl::GLContext"*)** %3, i64 19
  %5 = load i32 (%"class.gl::GLContext"*)*, i32 (%"class.gl::GLContext"*)** %4, align 8
  %6 = tail call i32 %5(%"class.gl::GLContext"* %0) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 20
  store i8 1, i8* %9, align 8
  br label %10

10:                                               ; preds = %1, %8
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl9GLContext34CheckStickyGraphicsResetStatusImplEv(%"class.gl::GLContext"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext9BindGLApiEv(%"class.gl::GLContext"*) local_unnamed_addr #1 align 2 {
  %2 = tail call %"struct.gl::CurrentGL"* @_ZN2gl9GLContext12GetCurrentGLEv(%"class.gl::GLContext"* %0)
  tail call void @_ZN2gl12SetCurrentGLEPNS_9CurrentGLE(%"struct.gl::CurrentGL"* %2) #15
  ret void
}

declare void @_ZN2gl9RealGLApi23ClearCachedGLExtensionsEv(%"class.gl::RealGLApi"*) local_unnamed_addr #5

declare void @_ZN2gl9RealGLApi11set_versionENSt3__110unique_ptrINS_13GLVersionInfoENS1_14default_deleteIS3_EEEE(%"class.gl::RealGLApi"*, %"struct.gl::GLVersionInfo"*) local_unnamed_addr #5

declare void @_ZN2gl8DriverGL25InitializeDynamicBindingsEPKNS_13GLVersionInfoERKN4base8internal9flat_treeINS4_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS4_8identityENS8_4lessIvEENS8_6vectorISB_NS8_9allocatorISB_EEEEEE(%"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"*, %"class.base::internal::flat_tree"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl9GLContext20MakeVirtuallyCurrentEPS0_PNS_9GLSurfaceE(%"class.gl::GLContext"*, %"class.gl::GLContext"*, %"class.gl::GLSurface"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = bitcast %"class.gl::GLContext"* %0 to i1 (%"class.gl::GLContext"*)***
  %6 = load i1 (%"class.gl::GLContext"*)**, i1 (%"class.gl::GLContext"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.gl::GLContext"*)*, i1 (%"class.gl::GLContext"*)** %6, i64 7
  %8 = load i1 (%"class.gl::GLContext"*)*, i1 (%"class.gl::GLContext"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.gl::GLContext"* %0) #15
  br i1 %9, label %10, label %116

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 20
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %116

14:                                               ; preds = %10
  %15 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0)) #15
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E to i8*)) #15
  br label %22

20:                                               ; preds = %17
  %21 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  br label %22

22:                                               ; preds = %14, %19, %20
  %23 = phi i64 [ %15, %14 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), %19 ], [ %21, %20 ]
  %24 = inttoptr i64 %23 to %"class.base::ThreadLocalPointer"*
  %25 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %24, i64 0, i32 0
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #15
  %27 = bitcast i8* %26 to %"class.gl::GLContext"*
  %28 = icmp ne %"class.gl::GLContext"* %27, %0
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.gl::GLSurface"* %2 to i1 (%"class.gl::GLSurface"*)***
  %31 = load i1 (%"class.gl::GLSurface"*)**, i1 (%"class.gl::GLSurface"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.gl::GLSurface"*)*, i1 (%"class.gl::GLSurface"*)** %31, i64 57
  %33 = load i1 (%"class.gl::GLSurface"*)*, i1 (%"class.gl::GLSurface"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.gl::GLSurface"* %2) #15
  br i1 %34, label %57, label %35

35:                                               ; preds = %29, %22
  %36 = tail call %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() #15
  %37 = xor i1 %28, true
  %38 = icmp ne %"class.gl::GLSurface"* %36, null
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = bitcast %"class.gl::GLContext"* %1 to i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %42 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %42, i64 2
  %44 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.gl::GLContext"* %1, %"class.gl::GLSurface"* %2) #15
  br i1 %45, label %56, label %46

46:                                               ; preds = %35, %40
  %47 = load i8, i8* %11, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %46
  %50 = bitcast %"class.gl::GLContext"* %0 to i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %51 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %51, i64 18
  %53 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.gl::GLContext"* %0, %"class.gl::GLSurface"* %2) #15
  br i1 %54, label %56, label %55

55:                                               ; preds = %46, %49
  store i8 1, i8* %11, align 8
  br label %116

56:                                               ; preds = %49, %40
  br i1 %28, label %61, label %57

57:                                               ; preds = %29, %56
  %58 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 15
  %59 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %58, align 8
  %60 = icmp eq %"class.gl::GLContext"* %59, %1
  br i1 %60, label %98, label %61

61:                                               ; preds = %57, %56
  %62 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %1, i64 0, i32 18, i32 0, i32 0, i32 0
  %63 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %62, align 8
  %64 = bitcast %"class.gl::GLStateRestorer"* %63 to i1 (%"class.gl::GLStateRestorer"*)***
  %65 = load i1 (%"class.gl::GLStateRestorer"*)**, i1 (%"class.gl::GLStateRestorer"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.gl::GLStateRestorer"*)*, i1 (%"class.gl::GLStateRestorer"*)** %65, i64 2
  %67 = load i1 (%"class.gl::GLStateRestorer"*)*, i1 (%"class.gl::GLStateRestorer"*)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.gl::GLStateRestorer"* %63) #15
  br i1 %68, label %69, label %96

69:                                               ; preds = %61
  %70 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %62, align 8
  %71 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 15
  %72 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %71, align 8
  %73 = icmp eq %"class.gl::GLContext"* %72, null
  br i1 %73, label %83, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %72, i64 0, i32 18, i32 0, i32 0, i32 0
  %76 = load %"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"** %75, align 8
  %77 = icmp eq %"class.gl::GLStateRestorer"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.gl::GLStateRestorer"* %76 to void (%"class.gl::GLStateRestorer"*)***
  %80 = load void (%"class.gl::GLStateRestorer"*)**, void (%"class.gl::GLStateRestorer"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %80, i64 12
  %82 = load void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %81, align 8
  tail call void %82(%"class.gl::GLStateRestorer"* nonnull %76) #15
  br label %83

83:                                               ; preds = %74, %69, %78
  %84 = phi i1 [ true, %78 ], [ false, %74 ], [ false, %69 ]
  %85 = phi %"class.gl::GLStateRestorer"* [ %76, %78 ], [ null, %74 ], [ null, %69 ]
  %86 = bitcast %"class.gl::GLStateRestorer"* %70 to void (%"class.gl::GLStateRestorer"*)***
  %87 = load void (%"class.gl::GLStateRestorer"*)**, void (%"class.gl::GLStateRestorer"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %87, i64 13
  %89 = load void (%"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*)** %88, align 8
  tail call void %89(%"class.gl::GLStateRestorer"* %70) #15
  %90 = select i1 %28, %"class.gl::GLStateRestorer"* null, %"class.gl::GLStateRestorer"* %85
  %91 = select i1 %84, %"class.gl::GLStateRestorer"* %90, %"class.gl::GLStateRestorer"* null
  %92 = bitcast %"class.gl::GLStateRestorer"* %70 to void (%"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"*)***
  %93 = load void (%"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"*)**, void (%"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"*)** %93, i64 3
  %95 = load void (%"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"*)*, void (%"class.gl::GLStateRestorer"*, %"class.gl::GLStateRestorer"*)** %94, align 8
  tail call void %95(%"class.gl::GLStateRestorer"* %70, %"class.gl::GLStateRestorer"* %91) #15
  br label %96

96:                                               ; preds = %83, %61
  %97 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 15
  store %"class.gl::GLContext"* %1, %"class.gl::GLContext"** %97, align 8
  br label %98

98:                                               ; preds = %57, %96
  %99 = bitcast %"class.gl::GLContext"* %1 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %100 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %100, i64 17
  %102 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %101, align 8
  tail call void %102(%"class.gl::GLContext"* %1, %"class.gl::GLSurface"* %2) #15
  %103 = bitcast %"class.gl::GLSurface"* %2 to i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)***
  %104 = load i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)**, i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)*, i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)** %104, i64 22
  %106 = load i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)*, i1 (%"class.gl::GLSurface"*, %"class.gl::GLContext"*)** %105, align 8
  %107 = tail call zeroext i1 %106(%"class.gl::GLSurface"* %2, %"class.gl::GLContext"* %1) #15
  br i1 %107, label %116, label %108

108:                                              ; preds = %98
  %109 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %109, label %110, label %115

110:                                              ; preds = %108
  %111 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %111) #15
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 468, i32 2) #15
  %112 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %113 = bitcast %"class.std::__1::basic_ostringstream"* %112 to %"class.std::__1::basic_ostream"*
  %114 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %113, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 33) #15
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %111) #15
  br label %115

115:                                              ; preds = %108, %110
  store i8 1, i8* %11, align 8
  br label %116

116:                                              ; preds = %115, %55, %98, %10, %3
  %117 = phi i1 [ false, %3 ], [ false, %10 ], [ false, %115 ], [ false, %55 ], [ true, %98 ]
  ret i1 %117
}

declare %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() local_unnamed_addr #5

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #5

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl9GLContext25OnReleaseVirtuallyCurrentEPS0_(%"class.gl::GLContext"* nocapture, %"class.gl::GLContext"* readnone) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 15
  %4 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %3, align 8
  %5 = icmp eq %"class.gl::GLContext"* %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store %"class.gl::GLContext"* null, %"class.gl::GLContext"** %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLContextRealC2EPNS_12GLShareGroupE(%"class.gl::GLContextReal"*, %"class.gl::GLShareGroup"*) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gl::GLContextReal"* %0 to %"class.gl::GLContext"*
  tail call void @_ZN2gl9GLContextC2EPNS_12GLShareGroupE(%"class.gl::GLContext"* %3, %"class.gl::GLShareGroup"* %1)
  %4 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN2gl13GLContextRealE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::unique_ptr.76"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 57, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GPUTimingClient"* @_ZN2gl13GLContextReal21CreateGPUTimingClientEv(%"class.gl::GLContextReal"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.gl::GPUTiming"*, %"class.gl::GPUTiming"** %2, align 8
  %4 = icmp eq %"class.gl::GPUTiming"* %3, null
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = tail call %"class.gl::GPUTiming"* @_ZN2gl9GPUTiming15CreateGPUTimingEPNS_13GLContextRealE(%"class.gl::GLContextReal"* %0) #15
  %7 = load %"class.gl::GPUTiming"*, %"class.gl::GPUTiming"** %2, align 8
  store %"class.gl::GPUTiming"* %6, %"class.gl::GPUTiming"** %2, align 8
  %8 = icmp eq %"class.gl::GPUTiming"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.gl::GPUTiming"* %7 to void (%"class.gl::GPUTiming"*)***
  %11 = load void (%"class.gl::GPUTiming"*)**, void (%"class.gl::GPUTiming"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.gl::GPUTiming"*)*, void (%"class.gl::GPUTiming"*)** %11, i64 1
  %13 = load void (%"class.gl::GPUTiming"*)*, void (%"class.gl::GPUTiming"*)** %12, align 8
  tail call void %13(%"class.gl::GPUTiming"* nonnull %7) #15
  %14 = load %"class.gl::GPUTiming"*, %"class.gl::GPUTiming"** %2, align 8
  br label %15

15:                                               ; preds = %1, %9, %5
  %16 = phi %"class.gl::GPUTiming"* [ %3, %1 ], [ %14, %9 ], [ %6, %5 ]
  %17 = bitcast %"class.gl::GPUTiming"* %16 to %"class.gl::GPUTimingClient"* (%"class.gl::GPUTiming"*)***
  %18 = load %"class.gl::GPUTimingClient"* (%"class.gl::GPUTiming"*)**, %"class.gl::GPUTimingClient"* (%"class.gl::GPUTiming"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.gl::GPUTimingClient"* (%"class.gl::GPUTiming"*)*, %"class.gl::GPUTimingClient"* (%"class.gl::GPUTiming"*)** %18, i64 2
  %20 = load %"class.gl::GPUTimingClient"* (%"class.gl::GPUTiming"*)*, %"class.gl::GPUTimingClient"* (%"class.gl::GPUTiming"*)** %19, align 8
  %21 = tail call %"class.gl::GPUTimingClient"* %20(%"class.gl::GPUTiming"* %16) #15
  ret %"class.gl::GPUTimingClient"* %21
}

declare %"class.gl::GPUTiming"* @_ZN2gl9GPUTiming15CreateGPUTimingEPNS_13GLContextRealE(%"class.gl::GLContextReal"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.base::internal::flat_tree"* @_ZN2gl13GLContextReal13GetExtensionsEv(%"class.gl::GLContextReal"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::internal::flat_tree", align 16
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %63

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.gl::GLImplementationWrapper"*, %"class.gl::GLImplementationWrapper"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %10, i64 0, i32 3
  %12 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %11, align 8
  call void @_ZN2gl33GetGLExtensionsFromCurrentContextEPNS_5GLApiE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gl::GLApi"* %12) #15
  %13 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 3
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #16
  br label %21

21:                                               ; preds = %18, %8
  %22 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %23, i64 24, i1 false) #15
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 0, i8* %25, align 1
  store i8 0, i8* %23, align 8
  %26 = bitcast %"class.base::internal::flat_tree"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  %27 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %29 = load i8, i8* %15, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = select i1 %30, i8* %32, i8* %22
  store i8* %33, i8** %28, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %35 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %29 to i64
  %38 = select i1 %30, i64 %36, i64 %37
  store i64 %38, i64* %34, align 8
  call void @_ZN3gfx16MakeExtensionSetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::internal::flat_tree"* nonnull sret %2, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3) #15
  %39 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4
  %40 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %40, align 8
  %42 = icmp eq %"class.base::BasicStringPiece"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %21
  %44 = ptrtoint %"class.base::BasicStringPiece"* %41 to i64
  %45 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %46 = bitcast %"class.base::BasicStringPiece"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"class.base::BasicStringPiece"* %41 to i8*
  call void @_ZdlPv(i8* %47) #16
  %48 = bitcast %"class.base::internal::flat_tree"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #15
  br label %49

49:                                               ; preds = %21, %43
  %50 = bitcast %"class.base::internal::flat_tree"* %2 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 16
  %52 = bitcast %"class.base::internal::flat_tree"* %39 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %52, align 8
  %53 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.base::BasicStringPiece"** %53 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"class.base::BasicStringPiece"** %56 to i64*
  store i64 %55, i64* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #15
  store i8 1, i8* %5, align 8
  %58 = load i8, i8* %25, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #16
  br label %63

63:                                               ; preds = %60, %49, %1
  %64 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4
  ret %"class.base::internal::flat_tree"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLContextReal23SetExtensionsFromStringENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::GLContextReal"*, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::internal::flat_tree", align 16
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #16
  br label %13

13:                                               ; preds = %2, %10
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #15
  %16 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 0, i8* %17, align 1
  store i8 0, i8* %15, align 1
  %18 = bitcast %"class.base::internal::flat_tree"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  %19 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %21 = load i8, i8* %7, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = select i1 %22, i8* %24, i8* %14
  store i8* %25, i8** %20, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %27 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %21 to i64
  %30 = select i1 %22, i64 %28, i64 %29
  store i64 %30, i64* %26, align 8
  call void @_ZN3gfx16MakeExtensionSetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::internal::flat_tree"* nonnull sret %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #15
  %31 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4
  %32 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %32, align 8
  %34 = icmp eq %"class.base::BasicStringPiece"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %13
  %36 = ptrtoint %"class.base::BasicStringPiece"* %33 to i64
  %37 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %38 = bitcast %"class.base::BasicStringPiece"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.base::BasicStringPiece"* %33 to i8*
  call void @_ZdlPv(i8* %39) #16
  %40 = bitcast %"class.base::internal::flat_tree"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #15
  br label %41

41:                                               ; preds = %35, %13
  %42 = bitcast %"class.base::internal::flat_tree"* %3 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 16
  %44 = bitcast %"class.base::internal::flat_tree"* %31 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  %45 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.base::BasicStringPiece"** %45 to i64*
  %47 = load i64, i64* %46, align 16
  %48 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.base::BasicStringPiece"** %48 to i64*
  store i64 %47, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #15
  %50 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 5
  store i8 1, i8* %50, align 8
  ret void
}

declare void @_ZN2gl33GetGLExtensionsFromCurrentContextEPNS_5GLApiE(%"class.std::__1::basic_string"* sret, %"class.gl::GLApi"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLContextRealD2Ev(%"class.gl::GLContextReal"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN2gl13GLContextRealE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0)) #15
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E to i8*)) #15
  br label %10

8:                                                ; preds = %5
  %9 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  br label %10

10:                                               ; preds = %1, %7, %8
  %11 = phi i64 [ %3, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), %7 ], [ %9, %8 ]
  %12 = inttoptr i64 %11 to %"class.base::ThreadLocalPointer"*
  %13 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %12, i64 0, i32 0
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #15
  %15 = bitcast %"class.gl::GLContextReal"* %0 to %"class.gl::GLContext"*
  %16 = bitcast %"class.gl::GLContextReal"* %0 to i8*
  %17 = icmp eq i8* %14, %16
  br i1 %17, label %18, label %30

18:                                               ; preds = %10
  %19 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0)) #15
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E to i8*)) #15
  br label %26

24:                                               ; preds = %21
  %25 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  br label %26

26:                                               ; preds = %18, %23, %24
  %27 = phi i64 [ %19, %18 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), %23 ], [ %25, %24 ]
  %28 = inttoptr i64 %27 to %"class.base::ThreadLocalPointer"*
  %29 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %28, i64 0, i32 0
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* null) #15
  br label %30

30:                                               ; preds = %26, %10
  %31 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %31, align 8
  %33 = icmp eq %"class.base::BasicStringPiece"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"class.base::BasicStringPiece"* %32 to i64
  %36 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %37 = bitcast %"class.base::BasicStringPiece"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.base::BasicStringPiece"* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #16
  br label %39

39:                                               ; preds = %30, %34
  %40 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 3
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #16
  br label %48

48:                                               ; preds = %39, %45
  %49 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %"class.gl::GPUTiming"*, %"class.gl::GPUTiming"** %49, align 8
  store %"class.gl::GPUTiming"* null, %"class.gl::GPUTiming"** %49, align 8
  %51 = icmp eq %"class.gl::GPUTiming"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.gl::GPUTiming"* %50 to void (%"class.gl::GPUTiming"*)***
  %54 = load void (%"class.gl::GPUTiming"*)**, void (%"class.gl::GPUTiming"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.gl::GPUTiming"*)*, void (%"class.gl::GPUTiming"*)** %54, i64 1
  %56 = load void (%"class.gl::GPUTiming"*)*, void (%"class.gl::GPUTiming"*)** %55, align 8
  tail call void %56(%"class.gl::GPUTiming"* nonnull %50) #15
  br label %57

57:                                               ; preds = %48, %52
  tail call void @_ZN2gl9GLContextD2Ev(%"class.gl::GLContext"* %15) #15
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2gl13GLContextRealD0Ev(%"class.gl::GLContextReal"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLContextReal10SetCurrentEPNS_9GLSurfaceE(%"class.gl::GLContextReal"*, %"class.gl::GLSurface"*) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gl::GLContextReal"* %0 to %"class.gl::GLContext"*
  tail call void @_ZN2gl9GLContext10SetCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"* %3, %"class.gl::GLSurface"* %1)
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0)) #15
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #15
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E to i8*)) #15
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %2, %8, %9
  %12 = phi i64 [ %4, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN2gl12_GLOBAL__N_121current_real_context_E, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.base::ThreadLocalPointer"*
  %14 = icmp eq %"class.gl::GLSurface"* %1, null
  %15 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %13, i64 0, i32 0
  %16 = bitcast %"class.gl::GLContextReal"* %0 to i8*
  %17 = select i1 %14, i8* null, i8* %16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %17) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLContext"* @_ZN2gl19InitializeGLContextE13scoped_refptrINS_9GLContextEEPNS_9GLSurfaceERKNS_16GLContextAttribsE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"* dereferenceable(28)) local_unnamed_addr #1 {
  %4 = ptrtoint %"class.gl::GLContext"* %0 to i64
  %5 = bitcast %"class.gl::GLContext"* %0 to i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"*)***
  %6 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"*)**, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"*)*** %5, align 8
  %7 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*, %"struct.gl::GLContextAttribs"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.gl::GLContext"* %0, %"class.gl::GLSurface"* %1, %"struct.gl::GLContextAttribs"* dereferenceable(28) %2) #15
  br i1 %8, label %24, label %9

9:                                                ; preds = %3
  %10 = icmp eq %"class.gl::GLContext"* %0, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %13) #15
  %14 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 -2
  %19 = bitcast %"class.base::RefCounted"* %18 to %"class.gl::GLContext"*
  %20 = bitcast %"class.base::RefCounted"* %18 to void (%"class.gl::GLContext"*)***
  %21 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %21, i64 15
  %23 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %22, align 8
  tail call void %23(%"class.gl::GLContext"* nonnull %19) #15
  br label %24

24:                                               ; preds = %3, %9, %11, %17
  %25 = phi i64 [ 0, %9 ], [ 0, %11 ], [ 0, %17 ], [ %4, %3 ]
  %26 = inttoptr i64 %25 to %"class.gl::GLContext"*
  ret %"class.gl::GLContext"* %26
}

declare void @_ZN3gfx16MakeExtensionSetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::internal::flat_tree"* sret, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13GLContextReal15ResetExtensionsEv(%"class.gl::GLContextReal"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4
  %3 = bitcast %"class.base::internal::flat_tree"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %6 = bitcast %"class.base::BasicStringPiece"** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %15, align 8
  br label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  store i8 0, i8* %17, align 1
  store i8 0, i8* %9, align 1
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.gl::GLContextReal", %"class.gl::GLContextReal"* %0, i64 0, i32 5
  store i8 0, i8* %19, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLContext13SetVisibilityEb(%"class.gl::GLContext"*, i1 zeroext) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #15
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2gl12GLShareGroupD1Ev(%"class.gl::GLShareGroup"*) unnamed_addr #10

declare void @_ZN2gl8DriverGL13ClearBindingsEv(%"struct.gl::DriverGL"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC2ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEE(%"class.gl::GLImplementationWrapper"*, %"class.gl::GLApi"*) unnamed_addr #1 comdat align 2 {
  %3 = ptrtoint %"class.gl::GLApi"* %1 to i64
  %4 = bitcast %"class.gl::GLImplementationWrapper"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.19"* %5 to i64*
  %7 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr.25"* %7 to i64*
  %9 = getelementptr inbounds %"class.gl::GLImplementationWrapper", %"class.gl::GLImplementationWrapper"* %0, i64 0, i32 3
  %10 = bitcast %"class.gl::GLApi"** %9 to i64*
  %11 = bitcast %"class.std::__1::unique_ptr.19"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store i64 %3, i64* %10, align 8
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21, !prof !3

14:                                               ; preds = %2
  %15 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing) #15
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #15
  %19 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %18, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kEnableGPUServiceTracingE, i64 0, i64 0)) #15
  %20 = zext i1 %19 to i8
  store i8 %20, i8* @_ZZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing) #15
  br label %21

21:                                               ; preds = %14, %17, %2
  %22 = load i8, i8* @_ZZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_tracing, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %21
  %25 = tail call i8* @_Znwm(i64 16) #16
  %26 = load i64, i64* %10, align 8
  %27 = bitcast i8* %25 to %"class.gl::GLApi"*
  tail call void @_ZN2gl5GLApiC2Ev(%"class.gl::GLApi"* nonnull %27) #15
  %28 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [508 x i8*] }, { [508 x i8*] }* @_ZTVN2gl10TraceGLApiE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 8
  %30 = bitcast i8* %29 to i64*
  store i64 %26, i64* %30, align 8
  %31 = ptrtoint i8* %25 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.gl::TraceGLApi"*, %"class.gl::TraceGLApi"** %32, align 8
  store i64 %31, i64* %6, align 8
  %34 = icmp eq %"class.gl::TraceGLApi"* %33, null
  %35 = bitcast i8* %25 to %"class.gl::TraceGLApi"*
  br i1 %34, label %42, label %36

36:                                               ; preds = %24
  %37 = bitcast %"class.gl::TraceGLApi"* %33 to void (%"class.gl::TraceGLApi"*)***
  %38 = load void (%"class.gl::TraceGLApi"*)**, void (%"class.gl::TraceGLApi"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.gl::TraceGLApi"*)*, void (%"class.gl::TraceGLApi"*)** %38, i64 1
  %40 = load void (%"class.gl::TraceGLApi"*)*, void (%"class.gl::TraceGLApi"*)** %39, align 8
  tail call void %40(%"class.gl::TraceGLApi"* nonnull %33) #15
  %41 = load %"class.gl::TraceGLApi"*, %"class.gl::TraceGLApi"** %32, align 8
  br label %42

42:                                               ; preds = %36, %24
  %43 = phi %"class.gl::TraceGLApi"* [ %41, %36 ], [ %35, %24 ]
  %44 = getelementptr inbounds %"class.gl::TraceGLApi", %"class.gl::TraceGLApi"* %43, i64 0, i32 0
  store %"class.gl::GLApi"* %44, %"class.gl::GLApi"** %9, align 8
  br label %45

45:                                               ; preds = %21, %42
  %46 = load atomic i8, i8* bitcast (i64* @_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging to i8*) acquire, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %55, !prof !3

48:                                               ; preds = %45
  %49 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging) #15
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #15
  %53 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %52, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kEnableGPUServiceLoggingE, i64 0, i64 0)) #15
  %54 = zext i1 %53 to i8
  store i8 %54, i8* @_ZZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging) #15
  br label %55

55:                                               ; preds = %48, %51, %45
  %56 = load i8, i8* @_ZZN2gl23GLImplementationWrapperINS_5GLApiENS_10TraceGLApiENS_8LogGLApiEEC1ENSt3__110unique_ptrIS1_NS5_14default_deleteIS1_EEEEE14enable_logging, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %76, label %58

58:                                               ; preds = %55
  %59 = tail call i8* @_Znwm(i64 16) #16
  %60 = bitcast i8* %59 to %"class.gl::LogGLApi"*
  %61 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %9, align 8
  tail call void @_ZN2gl8LogGLApiC1EPNS_5GLApiE(%"class.gl::LogGLApi"* nonnull %60, %"class.gl::GLApi"* %61) #15
  %62 = ptrtoint i8* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %7, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.gl::LogGLApi"*, %"class.gl::LogGLApi"** %63, align 8
  store i64 %62, i64* %8, align 8
  %65 = icmp eq %"class.gl::LogGLApi"* %64, null
  %66 = bitcast i8* %59 to %"class.gl::LogGLApi"*
  br i1 %65, label %73, label %67

67:                                               ; preds = %58
  %68 = bitcast %"class.gl::LogGLApi"* %64 to void (%"class.gl::LogGLApi"*)***
  %69 = load void (%"class.gl::LogGLApi"*)**, void (%"class.gl::LogGLApi"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.gl::LogGLApi"*)*, void (%"class.gl::LogGLApi"*)** %69, i64 1
  %71 = load void (%"class.gl::LogGLApi"*)*, void (%"class.gl::LogGLApi"*)** %70, align 8
  tail call void %71(%"class.gl::LogGLApi"* nonnull %64) #15
  %72 = load %"class.gl::LogGLApi"*, %"class.gl::LogGLApi"** %63, align 8
  br label %73

73:                                               ; preds = %67, %58
  %74 = phi %"class.gl::LogGLApi"* [ %72, %67 ], [ %66, %58 ]
  %75 = getelementptr inbounds %"class.gl::LogGLApi", %"class.gl::LogGLApi"* %74, i64 0, i32 0
  store %"class.gl::GLApi"* %75, %"class.gl::GLApi"** %9, align 8
  br label %76

76:                                               ; preds = %73, %55
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #14

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #5

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #14

declare void @_ZN2gl5GLApiC2Ev(%"class.gl::GLApi"*) unnamed_addr #5

declare void @_ZN2gl8LogGLApiC1EPNS_5GLApiE(%"class.gl::LogGLApi"*, %"class.gl::GLApi"*) unnamed_addr #5

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #5

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #5

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #5

declare void @_ZN2gl13GLVersionInfoC1EPKcS2_RKN4base8internal9flat_treeINS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS3_8identityENS7_4lessIvEENS7_6vectorISA_NS7_9allocatorISA_EEEEEE(%"struct.gl::GLVersionInfo"*, i8*, i8*, %"class.base::internal::flat_tree"* dereferenceable(24)) unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
