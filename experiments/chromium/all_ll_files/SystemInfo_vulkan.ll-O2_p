; ModuleID = '../../third_party/angle/src/gpu_info_util/SystemInfo_vulkan.cpp'
source_filename = "../../third_party/angle/src/gpu_info_util/SystemInfo_vulkan.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.angle::SystemInfo" = type { %"class.std::__1::vector.3", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"*, %"class.std::__1::__compressed_pair.5" }
%"struct.angle::GPUDeviceInfo" = type { i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.angle::VersionInfo" }
%"struct.angle::VersionInfo" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.angle::GPUDeviceInfo"* }
%"class.angle::VulkanLibrary" = type { %"class.angle::Library"*, %struct.VkInstance_T* }
%"class.angle::Library" = type { i32 (...)** }
%struct.VkInstance_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5angle13VulkanLibrary17getVulkanInstanceEv = comdat any

$_ZNSt3__16vectorIN5angle13GPUDeviceInfoENS_9allocatorIS2_EEE8__appendEm = comdat any

@.str = private unnamed_addr constant [13 x i8] c"libvulkan.so\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"libvulkan.so.1\00", align 1
@kLibVulkanNames = hidden local_unnamed_addr global [2 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0)], align 16
@.str.2 = private unnamed_addr constant [27 x i8] c"vkEnumeratePhysicalDevices\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"vkGetPhysicalDeviceProperties\00", align 1
@__const._ZN5angle19GetSystemInfoVulkanEPNS_10SystemInfoE.properties = private unnamed_addr constant { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [256 x i8] cx i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [4 x i8] c"\AA\AA\AA\AA", { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, [2 x i32] [i32 -1431655766, i32 -1431655766], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %struct.VkPhysicalDeviceSparseProperties { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@.str.4 = private unnamed_addr constant [28 x i8] c"Advanced Micro Devices, Inc\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"0x%x\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Arm Holdings\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Imagination Technologies Limited\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"Intel Corporation\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"Kazan Software\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"NVIDIA Corporation\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"Qualcomm Technologies, Inc\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"%d.%d.%d\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"VeriSilicon\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"Vivante\00", align 1
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"vkEnumerateInstanceVersion\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"vkCreateInstance\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"vkDestroyInstance\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* noalias sret, i8*, ...) local_unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #2
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %8 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #2
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #2
  %11 = call i64 @_Z22FormatStringIntoVectorPKcP13__va_list_tagRNSt3__16vectorIcNS3_9allocatorIcEEEE(i8* %1, %struct.__va_list_tag* nonnull %6, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #2
  call void @llvm.va_end(i8* nonnull %5)
  %12 = load i8*, i8** %9, align 8
  %13 = icmp ugt i64 %11, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %15) #8
  unreachable

16:                                               ; preds = %2
  %17 = icmp ult i64 %11, 23
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %11, 16
  %20 = and i64 %19, -16
  %21 = call i8* @_Znwm(i64 %20) #9
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %25, align 8
  br label %32

26:                                               ; preds = %16
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %31 = icmp eq i64 %11, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %26, %18
  %33 = phi i8* [ %21, %18 ], [ %30, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %12, i64 %11, i1 false) #2
  br label %34

34:                                               ; preds = %26, %32
  %35 = phi i8* [ %30, %26 ], [ %33, %32 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %11
  store i8 0, i8* %36, align 1
  %37 = icmp eq i8* %12, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = ptrtoint i8* %12 to i64
  %40 = bitcast i8** %10 to i64*
  store i64 %39, i64* %40, align 8
  call void @_ZdlPv(i8* nonnull %12) #9
  br label %41

41:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

declare i64 @_Z22FormatStringIntoVectorPKcP13__va_list_tagRNSt3__16vectorIcNS3_9allocatorIcEEEE(i8*, %struct.__va_list_tag*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5angle19GetSystemInfoVulkanEPNS_10SystemInfoE(%"struct.angle::SystemInfo"*) local_unnamed_addr #0 {
  %2 = alloca %"class.angle::VulkanLibrary", align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.VkPhysicalDeviceProperties, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = bitcast %"class.angle::VulkanLibrary"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #2
  %17 = getelementptr inbounds %"class.angle::VulkanLibrary", %"class.angle::VulkanLibrary"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.angle::VulkanLibrary", %"class.angle::VulkanLibrary"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #2
  %19 = call %struct.VkInstance_T* @_ZN5angle13VulkanLibrary17getVulkanInstanceEv(%"class.angle::VulkanLibrary"* nonnull %2)
  %20 = icmp eq %struct.VkInstance_T* %19, null
  br i1 %20, label %431, label %21

21:                                               ; preds = %1
  %22 = load %"class.angle::Library"*, %"class.angle::Library"** %17, align 8
  %23 = bitcast %"class.angle::Library"* %22 to i8* (%"class.angle::Library"*, i8*)***
  %24 = load i8* (%"class.angle::Library"*, i8*)**, i8* (%"class.angle::Library"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.angle::Library"* %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #2
  %28 = bitcast i8* %27 to i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*
  %29 = load %"class.angle::Library"*, %"class.angle::Library"** %17, align 8
  %30 = bitcast %"class.angle::Library"* %29 to i8* (%"class.angle::Library"*, i8*)***
  %31 = load i8* (%"class.angle::Library"*, i8*)**, i8* (%"class.angle::Library"*, i8*)*** %30, align 8
  %32 = getelementptr inbounds i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %31, i64 2
  %33 = load i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %32, align 8
  %34 = call i8* %33(%"class.angle::Library"* %29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0)) #2
  %35 = bitcast i8* %34 to void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*
  %36 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #2
  store i32 0, i32* %3, align 4
  %37 = icmp ne i8* %27, null
  %38 = icmp ne i8* %34, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %429

40:                                               ; preds = %21
  %41 = call i32 %28(%struct.VkInstance_T* nonnull %19, i32* nonnull %3, %struct.VkPhysicalDevice_T** null) #2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %429

43:                                               ; preds = %40
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp eq i32 %44, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %43
  %48 = shl nuw nsw i64 %45, 3
  %49 = call i8* @_Znwm(i64 %48) #9
  %50 = bitcast i8* %49 to %struct.VkPhysicalDevice_T**
  %51 = ptrtoint i8* %49 to i64
  %52 = add nsw i64 %45, -1
  %53 = getelementptr %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %50, i64 %52
  %54 = ptrtoint %struct.VkPhysicalDevice_T** %53 to i64
  %55 = sub i64 8, %51
  %56 = add i64 %55, %54
  %57 = and i64 %56, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 %57, i1 false) #2
  br label %58

58:                                               ; preds = %43, %47
  %59 = phi i8* [ null, %43 ], [ %49, %47 ]
  %60 = phi %struct.VkPhysicalDevice_T** [ null, %43 ], [ %50, %47 ]
  %61 = call i32 %28(%struct.VkInstance_T* nonnull %19, i32* nonnull %3, %struct.VkPhysicalDevice_T** %60) #2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %425

63:                                               ; preds = %58
  %64 = load i32, i32* %3, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %67 = bitcast %"struct.angle::GPUDeviceInfo"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"struct.angle::SystemInfo"* %0 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = sdiv exact i64 %71, 104
  %73 = icmp ult i64 %72, %65
  %74 = inttoptr i64 %70 to %"struct.angle::GPUDeviceInfo"*
  %75 = inttoptr i64 %68 to %"struct.angle::GPUDeviceInfo"*
  br i1 %73, label %76, label %79

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %0, i64 0, i32 0
  %78 = sub nsw i64 %65, %72
  call void @_ZNSt3__16vectorIN5angle13GPUDeviceInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.3"* %77, i64 %78) #2
  br label %89

79:                                               ; preds = %63
  %80 = icmp ugt i64 %72, %65
  br i1 %80, label %81, label %89

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %74, i64 %65
  %83 = icmp eq %"struct.angle::GPUDeviceInfo"* %82, %75
  br i1 %83, label %88, label %84

84:                                               ; preds = %81, %84
  %85 = phi %"struct.angle::GPUDeviceInfo"* [ %86, %84 ], [ %75, %81 ]
  %86 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %85, i64 -1
  call void @_ZN5angle13GPUDeviceInfoD1Ev(%"struct.angle::GPUDeviceInfo"* %86) #2
  %87 = icmp eq %"struct.angle::GPUDeviceInfo"* %86, %82
  br i1 %87, label %88, label %84

88:                                               ; preds = %84, %81
  store %"struct.angle::GPUDeviceInfo"* %82, %"struct.angle::GPUDeviceInfo"** %66, align 8
  br label %89

89:                                               ; preds = %76, %79, %88
  %90 = load i32, i32* %3, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %425, label %92

92:                                               ; preds = %89
  %93 = bitcast %struct.VkPhysicalDeviceProperties* %4 to i8*
  %94 = getelementptr inbounds %"struct.angle::SystemInfo", %"struct.angle::SystemInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %4, i64 0, i32 2
  %96 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %4, i64 0, i32 3
  %97 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %98 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %4, i64 0, i32 1
  %99 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %100 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %101 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %102 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %103 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %105 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %107 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %108 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %109

109:                                              ; preds = %92, %418
  %110 = phi i64 [ 0, %92 ], [ %420, %418 ]
  call void @llvm.lifetime.start.p0i8(i64 824, i8* nonnull %93) #2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 bitcast ({ i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] }* @__const._ZN5angle19GetSystemInfoVulkanEPNS_10SystemInfoE.properties to i8*), i64 824, i1 false)
  %111 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %60, i64 %110
  %112 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %111, align 8
  call void %35(%struct.VkPhysicalDevice_T* %112, %struct.VkPhysicalDeviceProperties* nonnull %4) #2
  %113 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %94, align 8
  %114 = load i32, i32* %95, align 8
  %115 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 0
  store i32 %114, i32* %115, align 8
  %116 = load i32, i32* %96, align 4
  %117 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 1
  store i32 %116, i32* %117, align 4
  %118 = load i32, i32* %95, align 8
  switch i32 %118, label %424 [
    i32 4098, label %119
    i32 5045, label %135
    i32 5348, label %163
    i32 4112, label %192
    i32 32902, label %208
    i32 65539, label %236
    i32 4318, label %264
    i32 20803, label %308
    i32 65538, label %350
    i32 65537, label %378
  ]

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %121 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %120, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i64 27) #2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #2
  %122 = load i32, i32* %98, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %122)
  %123 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %124 = bitcast %"class.std::__1::basic_string"* %123 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #9
  br label %131

131:                                              ; preds = %128, %119
  %132 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* nonnull align 8 %108, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #2
  %133 = load i32, i32* %98, align 4
  %134 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %133, i32* %134, align 8
  br label %406

135:                                              ; preds = %109
  %136 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %137 = bitcast %"class.std::__1::basic_string"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %145

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 12, i64* %142, align 8
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  br label %147

145:                                              ; preds = %135
  store i8 12, i8* %138, align 1
  %146 = bitcast %"class.std::__1::basic_string"* %136 to i8*
  br label %147

147:                                              ; preds = %141, %145
  %148 = phi i8* [ %144, %141 ], [ %146, %145 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %148, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i64 12, i1 false) #2
  %149 = getelementptr inbounds i8, i8* %148, i64 12
  store i8 0, i8* %149, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #2
  %150 = load i32, i32* %98, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %150)
  %151 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %152 = bitcast %"class.std::__1::basic_string"* %151 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #9
  br label %159

159:                                              ; preds = %156, %147
  %160 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* nonnull align 8 %107, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #2
  %161 = load i32, i32* %98, align 4
  %162 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %161, i32* %162, align 8
  br label %406

163:                                              ; preds = %109
  %164 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %165 = bitcast %"class.std::__1::basic_string"* %164 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 8, i64* %170, align 8
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8
  br label %175

173:                                              ; preds = %163
  store i8 8, i8* %166, align 1
  %174 = bitcast %"class.std::__1::basic_string"* %164 to i8*
  br label %175

175:                                              ; preds = %169, %173
  %176 = phi i8* [ %172, %169 ], [ %174, %173 ]
  %177 = bitcast i8* %176 to i64*
  store i64 7885630755331600962, i64* %177, align 1
  %178 = getelementptr inbounds i8, i8* %176, i64 8
  store i8 0, i8* %178, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #2
  %179 = load i32, i32* %98, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %179)
  %180 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %181 = bitcast %"class.std::__1::basic_string"* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %175
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #9
  br label %188

188:                                              ; preds = %185, %175
  %189 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* nonnull align 8 %106, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #2
  %190 = load i32, i32* %98, align 4
  %191 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %190, i32* %191, align 8
  br label %406

192:                                              ; preds = %109
  %193 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %194 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %193, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i64 32) #2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #2
  %195 = load i32, i32* %98, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %195)
  %196 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %197 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %192
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #9
  br label %204

204:                                              ; preds = %201, %192
  %205 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* nonnull align 8 %105, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #2
  %206 = load i32, i32* %98, align 4
  %207 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %206, i32* %207, align 8
  br label %406

208:                                              ; preds = %109
  %209 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %218

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 17, i64* %215, align 8
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  br label %220

218:                                              ; preds = %208
  store i8 17, i8* %211, align 1
  %219 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  br label %220

220:                                              ; preds = %214, %218
  %221 = phi i8* [ %217, %214 ], [ %219, %218 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %221, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i64 17, i1 false) #2
  %222 = getelementptr inbounds i8, i8* %221, i64 17
  store i8 0, i8* %222, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #2
  %223 = load i32, i32* %98, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %223)
  %224 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %225 = bitcast %"class.std::__1::basic_string"* %224 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %220
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %231) #9
  br label %232

232:                                              ; preds = %229, %220
  %233 = bitcast %"class.std::__1::basic_string"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* nonnull align 8 %104, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #2
  %234 = load i32, i32* %98, align 4
  %235 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %234, i32* %235, align 8
  br label %406

236:                                              ; preds = %109
  %237 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %238 = bitcast %"class.std::__1::basic_string"* %237 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %246

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 14, i64* %243, align 8
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  br label %248

246:                                              ; preds = %236
  store i8 14, i8* %239, align 1
  %247 = bitcast %"class.std::__1::basic_string"* %237 to i8*
  br label %248

248:                                              ; preds = %242, %246
  %249 = phi i8* [ %245, %242 ], [ %247, %246 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %249, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14, i1 false) #2
  %250 = getelementptr inbounds i8, i8* %249, i64 14
  store i8 0, i8* %250, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #2
  %251 = load i32, i32* %98, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %251)
  %252 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %253 = bitcast %"class.std::__1::basic_string"* %252 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %254 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %253, i64 0, i32 1, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %248
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %252, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #9
  br label %260

260:                                              ; preds = %257, %248
  %261 = bitcast %"class.std::__1::basic_string"* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 8 %103, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #2
  %262 = load i32, i32* %98, align 4
  %263 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %262, i32* %263, align 8
  br label %406

264:                                              ; preds = %109
  %265 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %266 = bitcast %"class.std::__1::basic_string"* %265 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %266, i64 0, i32 1, i32 0
  %268 = load i8, i8* %267, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %270, label %274

270:                                              ; preds = %264
  %271 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 18, i64* %271, align 8
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %265, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load i8*, i8** %272, align 8
  br label %276

274:                                              ; preds = %264
  store i8 18, i8* %267, align 1
  %275 = bitcast %"class.std::__1::basic_string"* %265 to i8*
  br label %276

276:                                              ; preds = %270, %274
  %277 = phi i8* [ %273, %270 ], [ %275, %274 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %277, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i64 18, i1 false) #2
  %278 = getelementptr inbounds i8, i8* %277, i64 18
  store i8 0, i8* %278, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #2
  %279 = load i32, i32* %98, align 4
  %280 = lshr i32 %279, 22
  %281 = lshr i32 %279, 14
  %282 = and i32 %281, 255
  %283 = lshr i32 %279, 6
  %284 = and i32 %283, 255
  %285 = and i32 %279, 63
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i32 %280, i32 %282, i32 %284, i32 %285)
  %286 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %287 = bitcast %"class.std::__1::basic_string"* %286 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %288 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %287, i64 0, i32 1, i32 0
  %289 = load i8, i8* %288, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %294

291:                                              ; preds = %276
  %292 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %286, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load i8*, i8** %292, align 8
  call void @_ZdlPv(i8* %293) #9
  br label %294

294:                                              ; preds = %291, %276
  %295 = bitcast %"class.std::__1::basic_string"* %286 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %295, i8* nonnull align 8 %102, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #2
  %296 = load i32, i32* %98, align 4
  %297 = lshr i32 %296, 22
  %298 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %297, i32* %298, align 8
  %299 = lshr i32 %296, 14
  %300 = and i32 %299, 255
  %301 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 1
  store i32 %300, i32* %301, align 4
  %302 = load i32, i32* %98, align 4
  %303 = lshr i32 %302, 6
  %304 = and i32 %303, 255
  %305 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 2
  store i32 %304, i32* %305, align 8
  %306 = and i32 %302, 63
  %307 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 3
  store i32 %306, i32* %307, align 4
  br label %406

308:                                              ; preds = %109
  %309 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %310 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %309, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i64 26) #2
  %311 = load i32, i32* %98, align 4
  %312 = icmp slt i32 %311, 0
  br i1 %312, label %313, label %337

313:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #2
  %314 = lshr i32 %311, 22
  %315 = lshr i32 %311, 12
  %316 = and i32 %315, 1023
  %317 = and i32 %311, 4095
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i32 %314, i32 %316, i32 %317)
  %318 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %319 = bitcast %"class.std::__1::basic_string"* %318 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %319, i64 0, i32 1, i32 0
  %321 = load i8, i8* %320, align 1
  %322 = icmp slt i8 %321, 0
  br i1 %322, label %323, label %326

323:                                              ; preds = %313
  %324 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %318, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load i8*, i8** %324, align 8
  call void @_ZdlPv(i8* %325) #9
  br label %326

326:                                              ; preds = %323, %313
  %327 = bitcast %"class.std::__1::basic_string"* %318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* nonnull align 8 %101, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #2
  %328 = load i32, i32* %98, align 4
  %329 = lshr i32 %328, 22
  %330 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %329, i32* %330, align 8
  %331 = lshr i32 %328, 12
  %332 = and i32 %331, 1023
  %333 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 1
  store i32 %332, i32* %333, align 4
  %334 = load i32, i32* %98, align 4
  %335 = and i32 %334, 4095
  %336 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 2
  store i32 %335, i32* %336, align 8
  br label %406

337:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #2
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %311)
  %338 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %339 = bitcast %"class.std::__1::basic_string"* %338 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %338, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #9
  br label %346

346:                                              ; preds = %343, %337
  %347 = bitcast %"class.std::__1::basic_string"* %338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %347, i8* nonnull align 8 %100, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #2
  %348 = load i32, i32* %98, align 4
  %349 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %348, i32* %349, align 8
  br label %406

350:                                              ; preds = %109
  %351 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %352 = bitcast %"class.std::__1::basic_string"* %351 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %353 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %352, i64 0, i32 1, i32 0
  %354 = load i8, i8* %353, align 1
  %355 = icmp slt i8 %354, 0
  br i1 %355, label %356, label %360

356:                                              ; preds = %350
  %357 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 11, i64* %357, align 8
  %358 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %351, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load i8*, i8** %358, align 8
  br label %362

360:                                              ; preds = %350
  store i8 11, i8* %353, align 1
  %361 = bitcast %"class.std::__1::basic_string"* %351 to i8*
  br label %362

362:                                              ; preds = %356, %360
  %363 = phi i8* [ %359, %356 ], [ %361, %360 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %363, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11, i1 false) #2
  %364 = getelementptr inbounds i8, i8* %363, i64 11
  store i8 0, i8* %364, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #2
  %365 = load i32, i32* %98, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %365)
  %366 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %367 = bitcast %"class.std::__1::basic_string"* %366 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %368 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %367, i64 0, i32 1, i32 0
  %369 = load i8, i8* %368, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %362
  %372 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %366, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load i8*, i8** %372, align 8
  call void @_ZdlPv(i8* %373) #9
  br label %374

374:                                              ; preds = %371, %362
  %375 = bitcast %"class.std::__1::basic_string"* %366 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %375, i8* nonnull align 8 %99, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #2
  %376 = load i32, i32* %98, align 4
  %377 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %376, i32* %377, align 8
  br label %406

378:                                              ; preds = %109
  %379 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3
  %380 = bitcast %"class.std::__1::basic_string"* %379 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %381 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %380, i64 0, i32 1, i32 0
  %382 = load i8, i8* %381, align 1
  %383 = icmp slt i8 %382, 0
  br i1 %383, label %384, label %388

384:                                              ; preds = %378
  %385 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 7, i64* %385, align 8
  %386 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %379, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  br label %390

388:                                              ; preds = %378
  store i8 7, i8* %381, align 1
  %389 = bitcast %"class.std::__1::basic_string"* %379 to i8*
  br label %390

390:                                              ; preds = %384, %388
  %391 = phi i8* [ %387, %384 ], [ %389, %388 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %391, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7, i1 false) #2
  %392 = getelementptr inbounds i8, i8* %391, i64 7
  store i8 0, i8* %392, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #2
  %393 = load i32, i32* %98, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN5angle12FormatStringEPKcz(%"class.std::__1::basic_string"* nonnull sret %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %393)
  %394 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 4
  %395 = bitcast %"class.std::__1::basic_string"* %394 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %395, i64 0, i32 1, i32 0
  %397 = load i8, i8* %396, align 1
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %402

399:                                              ; preds = %390
  %400 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %394, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load i8*, i8** %400, align 8
  call void @_ZdlPv(i8* %401) #9
  br label %402

402:                                              ; preds = %399, %390
  %403 = bitcast %"class.std::__1::basic_string"* %394 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %403, i8* nonnull align 8 %97, i64 24, i1 false) #2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #2
  %404 = load i32, i32* %98, align 4
  %405 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 6, i32 0
  store i32 %404, i32* %405, align 8
  br label %406

406:                                              ; preds = %326, %346, %402, %374, %294, %260, %232, %204, %188, %159, %131
  %407 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 5
  %408 = bitcast %"class.std::__1::basic_string"* %407 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %409 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %408, i64 0, i32 1, i32 0
  %410 = load i8, i8* %409, align 1
  %411 = icmp slt i8 %410, 0
  br i1 %411, label %412, label %416

412:                                              ; preds = %406
  %413 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %113, i64 %110, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %413, align 8
  %414 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load i8*, i8** %414, align 8
  br label %418

416:                                              ; preds = %406
  store i8 0, i8* %409, align 1
  %417 = bitcast %"class.std::__1::basic_string"* %407 to i8*
  br label %418

418:                                              ; preds = %412, %416
  %419 = phi i8* [ %415, %412 ], [ %417, %416 ]
  store i8 0, i8* %419, align 1
  call void @llvm.lifetime.end.p0i8(i64 824, i8* nonnull %93) #2
  %420 = add nuw nsw i64 %110, 1
  %421 = load i32, i32* %3, align 4
  %422 = zext i32 %421 to i64
  %423 = icmp ult i64 %420, %422
  br i1 %423, label %109, label %425

424:                                              ; preds = %109
  call void @llvm.lifetime.end.p0i8(i64 824, i8* nonnull %93) #2
  br label %425

425:                                              ; preds = %418, %89, %424, %58
  %426 = phi i1 [ false, %58 ], [ false, %424 ], [ true, %89 ], [ true, %418 ]
  %427 = icmp eq %struct.VkPhysicalDevice_T** %60, null
  br i1 %427, label %429, label %428

428:                                              ; preds = %425
  call void @_ZdlPv(i8* %59) #9
  br label %429

429:                                              ; preds = %428, %425, %21, %40
  %430 = phi i1 [ false, %40 ], [ false, %21 ], [ %426, %425 ], [ %426, %428 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #2
  br label %431

431:                                              ; preds = %1, %429
  %432 = phi i1 [ %430, %429 ], [ false, %1 ]
  %433 = load %struct.VkInstance_T*, %struct.VkInstance_T** %18, align 8
  %434 = icmp eq %struct.VkInstance_T* %433, null
  br i1 %434, label %446, label %435

435:                                              ; preds = %431
  %436 = load %"class.angle::Library"*, %"class.angle::Library"** %17, align 8
  %437 = bitcast %"class.angle::Library"* %436 to i8* (%"class.angle::Library"*, i8*)***
  %438 = load i8* (%"class.angle::Library"*, i8*)**, i8* (%"class.angle::Library"*, i8*)*** %437, align 8
  %439 = getelementptr inbounds i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %438, i64 2
  %440 = load i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %439, align 8
  %441 = call i8* %440(%"class.angle::Library"* %436, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0)) #2
  %442 = icmp eq i8* %441, null
  br i1 %442, label %446, label %443

443:                                              ; preds = %435
  %444 = bitcast i8* %441 to void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*
  %445 = load %struct.VkInstance_T*, %struct.VkInstance_T** %18, align 8
  call void %444(%struct.VkInstance_T* %445, %struct.VkAllocationCallbacks* null) #2
  br label %446

446:                                              ; preds = %443, %435, %431
  %447 = load %"class.angle::Library"*, %"class.angle::Library"** %17, align 8
  %448 = icmp eq %"class.angle::Library"* %447, null
  br i1 %448, label %454, label %449

449:                                              ; preds = %446
  %450 = bitcast %"class.angle::Library"* %447 to void (%"class.angle::Library"*)***
  %451 = load void (%"class.angle::Library"*)**, void (%"class.angle::Library"*)*** %450, align 8
  %452 = getelementptr inbounds void (%"class.angle::Library"*)*, void (%"class.angle::Library"*)** %451, i64 1
  %453 = load void (%"class.angle::Library"*)*, void (%"class.angle::Library"*)** %452, align 8
  call void %453(%"class.angle::Library"* nonnull %447) #2
  br label %454

454:                                              ; preds = %446, %449
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #2
  ret i1 %432
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.VkInstance_T* @_ZN5angle13VulkanLibrary17getVulkanInstanceEv(%"class.angle::VulkanLibrary"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.VkApplicationInfo, align 8
  %4 = alloca %struct.VkInstanceCreateInfo, align 8
  %5 = getelementptr inbounds %"class.angle::VulkanLibrary", %"class.angle::VulkanLibrary"* %0, i64 0, i32 0
  %6 = load i8*, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @kLibVulkanNames, i64 0, i64 0), align 16
  %7 = tail call %"class.angle::Library"* @_ZN5angle30OpenSharedLibraryWithExtensionEPKc(i8* %6) #2
  store %"class.angle::Library"* %7, %"class.angle::Library"** %5, align 8
  %8 = icmp eq %"class.angle::Library"* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.angle::Library"* %7 to i8* (%"class.angle::Library"*)***
  %11 = load i8* (%"class.angle::Library"*)**, i8* (%"class.angle::Library"*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.angle::Library"*)*, i8* (%"class.angle::Library"*)** %11, i64 3
  %13 = load i8* (%"class.angle::Library"*)*, i8* (%"class.angle::Library"*)** %12, align 8
  %14 = tail call i8* %13(%"class.angle::Library"* nonnull %7) #2
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %9
  %17 = load %"class.angle::Library"*, %"class.angle::Library"** %5, align 8
  %18 = icmp eq %"class.angle::Library"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.angle::Library"* %17 to void (%"class.angle::Library"*)***
  %21 = load void (%"class.angle::Library"*)**, void (%"class.angle::Library"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.angle::Library"*)*, void (%"class.angle::Library"*)** %21, i64 1
  %23 = load void (%"class.angle::Library"*)*, void (%"class.angle::Library"*)** %22, align 8
  tail call void %23(%"class.angle::Library"* nonnull %17) #2
  br label %24

24:                                               ; preds = %16, %19
  store %"class.angle::Library"* null, %"class.angle::Library"** %5, align 8
  br label %25

25:                                               ; preds = %1, %24
  %26 = load i8*, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @kLibVulkanNames, i64 0, i64 1), align 8
  %27 = tail call %"class.angle::Library"* @_ZN5angle30OpenSharedLibraryWithExtensionEPKc(i8* %26) #2
  store %"class.angle::Library"* %27, %"class.angle::Library"** %5, align 8
  %28 = icmp eq %"class.angle::Library"* %27, null
  br i1 %28, label %82, label %84

29:                                               ; preds = %84, %9
  %30 = load %"class.angle::Library"*, %"class.angle::Library"** %5, align 8
  %31 = icmp eq %"class.angle::Library"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %29
  %33 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #2
  store i32 4194304, i32* %2, align 4
  %34 = bitcast %"class.angle::Library"* %30 to i8* (%"class.angle::Library"*, i8*)***
  %35 = load i8* (%"class.angle::Library"*, i8*)**, i8* (%"class.angle::Library"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %35, i64 2
  %37 = load i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %36, align 8
  %38 = tail call i8* %37(%"class.angle::Library"* nonnull %30, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0)) #2
  %39 = icmp eq i8* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %32
  %41 = bitcast i8* %38 to i32 (i32*)*
  %42 = call i32 %41(i32* nonnull %2) #2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = load i32, i32* %2, align 4
  br label %47

46:                                               ; preds = %40, %32
  store i32 4194304, i32* %2, align 4
  br label %47

47:                                               ; preds = %44, %46
  %48 = phi i32 [ %45, %44 ], [ 4194304, %46 ]
  %49 = bitcast %struct.VkApplicationInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %49) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 32, i1 false)
  %50 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %3, i64 0, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %3, i64 0, i32 1
  %52 = bitcast i8** %51 to <2 x i8*>*
  store <2 x i8*> <i8* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0)>, <2 x i8*>* %52, align 8
  %53 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %3, i64 0, i32 3
  store i32 1, i32* %53, align 8
  %54 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %3, i64 0, i32 4
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %3, i64 0, i32 5
  store i32 1, i32* %55, align 8
  %56 = getelementptr inbounds %struct.VkApplicationInfo, %struct.VkApplicationInfo* %3, i64 0, i32 6
  store i32 %48, i32* %56, align 4
  %57 = bitcast %struct.VkInstanceCreateInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %57) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 56, i1 false)
  %58 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 0
  store i32 1, i32* %58, align 8
  %59 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 1
  store i8* null, i8** %59, align 8
  %60 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 2
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 3
  store %struct.VkApplicationInfo* %3, %struct.VkApplicationInfo** %61, align 8
  %62 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 4
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 5
  store i8** null, i8*** %63, align 8
  %64 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 6
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %4, i64 0, i32 7
  store i8** null, i8*** %65, align 8
  %66 = load %"class.angle::Library"*, %"class.angle::Library"** %5, align 8
  %67 = bitcast %"class.angle::Library"* %66 to i8* (%"class.angle::Library"*, i8*)***
  %68 = load i8* (%"class.angle::Library"*, i8*)**, i8* (%"class.angle::Library"*, i8*)*** %67, align 8
  %69 = getelementptr inbounds i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %68, i64 2
  %70 = load i8* (%"class.angle::Library"*, i8*)*, i8* (%"class.angle::Library"*, i8*)** %69, align 8
  %71 = call i8* %70(%"class.angle::Library"* %66, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0)) #2
  %72 = icmp eq i8* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %47
  %74 = bitcast i8* %71 to i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*
  %75 = getelementptr inbounds %"class.angle::VulkanLibrary", %"class.angle::VulkanLibrary"* %0, i64 0, i32 1
  %76 = call i32 %74(%struct.VkInstanceCreateInfo* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkInstance_T** %75) #2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = load %struct.VkInstance_T*, %struct.VkInstance_T** %75, align 8
  br label %80

80:                                               ; preds = %47, %73, %78
  %81 = phi %struct.VkInstance_T* [ %79, %78 ], [ null, %73 ], [ null, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %57) #2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %49) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #2
  br label %82

82:                                               ; preds = %99, %25, %29, %80
  %83 = phi %struct.VkInstance_T* [ %81, %80 ], [ null, %29 ], [ null, %25 ], [ null, %99 ]
  ret %struct.VkInstance_T* %83

84:                                               ; preds = %25
  %85 = bitcast %"class.angle::Library"* %27 to i8* (%"class.angle::Library"*)***
  %86 = load i8* (%"class.angle::Library"*)**, i8* (%"class.angle::Library"*)*** %85, align 8
  %87 = getelementptr inbounds i8* (%"class.angle::Library"*)*, i8* (%"class.angle::Library"*)** %86, i64 3
  %88 = load i8* (%"class.angle::Library"*)*, i8* (%"class.angle::Library"*)** %87, align 8
  %89 = tail call i8* %88(%"class.angle::Library"* nonnull %27) #2
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %29

91:                                               ; preds = %84
  %92 = load %"class.angle::Library"*, %"class.angle::Library"** %5, align 8
  %93 = icmp eq %"class.angle::Library"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.angle::Library"* %92 to void (%"class.angle::Library"*)***
  %96 = load void (%"class.angle::Library"*)**, void (%"class.angle::Library"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.angle::Library"*)*, void (%"class.angle::Library"*)** %96, i64 1
  %98 = load void (%"class.angle::Library"*)*, void (%"class.angle::Library"*)** %97, align 8
  tail call void %98(%"class.angle::Library"* nonnull %92) #2
  br label %99

99:                                               ; preds = %94, %91
  store %"class.angle::Library"* null, %"class.angle::Library"** %5, align 8
  br label %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.angle::Library"* @_ZN5angle30OpenSharedLibraryWithExtensionEPKc(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5angle13GPUDeviceInfoENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.3"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.angle::GPUDeviceInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.angle::GPUDeviceInfo"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 104
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.angle::GPUDeviceInfo"*
  %14 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %22, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.angle::GPUDeviceInfo"* %14 to i64
  br label %22

18:                                               ; preds = %12, %18
  %19 = phi %"struct.angle::GPUDeviceInfo"* [ %20, %18 ], [ %13, %12 ]
  tail call void @_ZN5angle13GPUDeviceInfoC1Ev(%"struct.angle::GPUDeviceInfo"* %19) #2
  %20 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %19, i64 1
  %21 = icmp eq %"struct.angle::GPUDeviceInfo"* %20, %14
  br i1 %21, label %16, label %18

22:                                               ; preds = %12, %16
  %23 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %23, i64* %7, align 8
  br label %90

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %8, %26
  %28 = sdiv exact i64 %27, 104
  %29 = add i64 %28, %1
  %30 = icmp ugt i64 %29, 177372539170284150
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #8
  unreachable

33:                                               ; preds = %24
  %34 = sub i64 %5, %26
  %35 = sdiv exact i64 %34, 104
  %36 = icmp ult i64 %35, 88686269585142075
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %29
  %40 = select i1 %39, i64 %29, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %33, %37
  %43 = phi i64 [ %40, %37 ], [ 177372539170284150, %33 ]
  %44 = mul i64 %43, 104
  %45 = tail call i8* @_Znwm(i64 %44) #9
  %46 = bitcast i8* %45 to %"struct.angle::GPUDeviceInfo"*
  br label %47

47:                                               ; preds = %37, %42
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %"struct.angle::GPUDeviceInfo"* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %49, i64 %28
  %51 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %49, i64 %48
  %52 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %50, i64 %1
  br label %53

53:                                               ; preds = %47, %53
  %54 = phi %"struct.angle::GPUDeviceInfo"* [ %55, %53 ], [ %50, %47 ]
  tail call void @_ZN5angle13GPUDeviceInfoC1Ev(%"struct.angle::GPUDeviceInfo"* %54) #2
  %55 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %54, i64 1
  %56 = icmp eq %"struct.angle::GPUDeviceInfo"* %52, %55
  br i1 %56, label %57, label %53

57:                                               ; preds = %53
  %58 = ptrtoint %"struct.angle::GPUDeviceInfo"* %51 to i64
  %59 = ptrtoint %"struct.angle::GPUDeviceInfo"* %52 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 0
  %61 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %60, align 8
  %62 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %6, align 8
  %63 = icmp eq %"struct.angle::GPUDeviceInfo"* %62, %61
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = ptrtoint %"struct.angle::GPUDeviceInfo"* %61 to i64
  br label %75

66:                                               ; preds = %57, %66
  %67 = phi %"struct.angle::GPUDeviceInfo"* [ %69, %66 ], [ %50, %57 ]
  %68 = phi %"struct.angle::GPUDeviceInfo"* [ %70, %66 ], [ %62, %57 ]
  %69 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %67, i64 -1
  %70 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %68, i64 -1
  tail call void @_ZN5angle13GPUDeviceInfoC1ERKS0_(%"struct.angle::GPUDeviceInfo"* %69, %"struct.angle::GPUDeviceInfo"* dereferenceable(104) %70) #2
  %71 = icmp eq %"struct.angle::GPUDeviceInfo"* %70, %61
  br i1 %71, label %72, label %66

72:                                               ; preds = %66
  %73 = load i64, i64* %25, align 8
  %74 = load %"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"** %6, align 8
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %"struct.angle::GPUDeviceInfo"* [ %61, %64 ], [ %74, %72 ]
  %77 = phi %"struct.angle::GPUDeviceInfo"* [ %50, %64 ], [ %69, %72 ]
  %78 = phi i64 [ %65, %64 ], [ %73, %72 ]
  %79 = ptrtoint %"struct.angle::GPUDeviceInfo"* %77 to i64
  store i64 %79, i64* %25, align 8
  store i64 %59, i64* %7, align 8
  store i64 %58, i64* %4, align 8
  %80 = inttoptr i64 %78 to %"struct.angle::GPUDeviceInfo"*
  %81 = icmp eq %"struct.angle::GPUDeviceInfo"* %76, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %75, %82
  %83 = phi %"struct.angle::GPUDeviceInfo"* [ %84, %82 ], [ %76, %75 ]
  %84 = getelementptr inbounds %"struct.angle::GPUDeviceInfo", %"struct.angle::GPUDeviceInfo"* %83, i64 -1
  tail call void @_ZN5angle13GPUDeviceInfoD1Ev(%"struct.angle::GPUDeviceInfo"* %84) #2
  %85 = icmp eq %"struct.angle::GPUDeviceInfo"* %84, %80
  br i1 %85, label %86, label %82

86:                                               ; preds = %82, %75
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %78 to i8*
  tail call void @_ZdlPv(i8* %89) #9
  br label %90

90:                                               ; preds = %88, %86, %22
  ret void
}

declare void @_ZN5angle13GPUDeviceInfoC1Ev(%"struct.angle::GPUDeviceInfo"*) unnamed_addr #3

declare void @_ZN5angle13GPUDeviceInfoC1ERKS0_(%"struct.angle::GPUDeviceInfo"*, %"struct.angle::GPUDeviceInfo"* dereferenceable(104)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5angle13GPUDeviceInfoD1Ev(%"struct.angle::GPUDeviceInfo"*) unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
