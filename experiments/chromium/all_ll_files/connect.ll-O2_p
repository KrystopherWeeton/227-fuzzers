; ModuleID = '../../third_party/boringssl/src/crypto/bio/connect.c'
source_filename = "../../third_party/boringssl/src/crypto/bio/connect.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_connect_st = type { i32, i8*, i8*, i32, i16, %struct.sockaddr_storage, i32, i32 (%struct.bio_st*, i32, i32)* }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }

@methods_connectp = internal constant %struct.bio_method_st { i32 1292, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 (%struct.bio_st*, i8*, i32)* @conn_write, i32 (%struct.bio_st*, i8*, i32)* @conn_read, i32 (%struct.bio_st*, i8*)* null, i32 (%struct.bio_st*, i8*, i32)* null, i64 (%struct.bio_st*, i32, i64, i8*)* @conn_ctrl, i32 (%struct.bio_st*)* @conn_new, i32 (%struct.bio_st*)* @conn_free, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* @conn_callback_ctrl }, align 8
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"socket connect\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"../../third_party/boringssl/src/crypto/bio/connect.c\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"host=\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c":\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.bio_st* @BIO_new_connect(i8*) local_unnamed_addr #0 {
  %2 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* nonnull @methods_connectp) #8
  %3 = icmp eq %struct.bio_st* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = tail call i64 @BIO_ctrl(%struct.bio_st* nonnull %2, i32 100, i64 0, i8* %0) #8
  %6 = trunc i64 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 @BIO_free(%struct.bio_st* nonnull %2) #8
  br label %10

10:                                               ; preds = %4, %1, %8
  %11 = phi %struct.bio_st* [ null, %8 ], [ null, %1 ], [ %2, %4 ]
  ret %struct.bio_st* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.bio_method_st* @BIO_s_connect() local_unnamed_addr #3 {
  ret %struct.bio_method_st* @methods_connectp
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_set_conn_hostname(%struct.bio_st*, i8*) local_unnamed_addr #0 {
  %3 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 100, i64 0, i8* %1) #8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

declare i32 @BIO_free(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @BIO_ctrl(%struct.bio_st*, i32, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_set_conn_port(%struct.bio_st*, i8*) local_unnamed_addr #0 {
  %3 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 100, i64 1, i8* %1) #8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_set_conn_int_port(%struct.bio_st*, i32* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca [13 x i8], align 1
  %4 = getelementptr inbounds [13 x i8], [13 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 13, i1 false)
  %5 = load i32, i32* %1, align 4
  %6 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %4, i64 13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %5) #8
  %7 = call i64 @BIO_ctrl(%struct.bio_st* %0, i32 100, i64 1, i8* nonnull %4) #8
  %8 = trunc i64 %7 to i32
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %4) #8
  ret i32 %8
}

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_set_nbio(%struct.bio_st*, i32) local_unnamed_addr #0 {
  %3 = sext i32 %1 to i64
  %4 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 102, i64 %3, i8* null) #8
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_do_connect(%struct.bio_st*) local_unnamed_addr #0 {
  %2 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 101, i64 0, i8* null) #8
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @conn_write(%struct.bio_st*, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = bitcast i8** %4 to %struct.bio_connect_st**
  %6 = load %struct.bio_connect_st*, %struct.bio_connect_st** %5, align 8
  %7 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = tail call fastcc i32 @conn_state(%struct.bio_st* %0, %struct.bio_connect_st* %6)
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %24, label %13

13:                                               ; preds = %3, %10
  tail call void @bio_clear_socket_error() #8
  %14 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %2 to i64
  %17 = tail call i64 @send(i32 %15, i8* %1, i64 %16, i32 0) #8
  %18 = trunc i64 %17 to i32
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #8
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %13
  %21 = tail call i32 @bio_fd_should_retry(i32 %18) #8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @BIO_set_retry_write(%struct.bio_st* %0) #8
  br label %24

24:                                               ; preds = %13, %23, %20, %10
  %25 = phi i32 [ %11, %10 ], [ %18, %20 ], [ %18, %23 ], [ %18, %13 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @conn_read(%struct.bio_st*, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = bitcast i8** %4 to %struct.bio_connect_st**
  %6 = load %struct.bio_connect_st*, %struct.bio_connect_st** %5, align 8
  %7 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = tail call fastcc i32 @conn_state(%struct.bio_st* %0, %struct.bio_connect_st* %6)
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %24, label %13

13:                                               ; preds = %3, %10
  tail call void @bio_clear_socket_error() #8
  %14 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %2 to i64
  %17 = tail call i64 @recv(i32 %15, i8* %1, i64 %16, i32 0) #8
  %18 = trunc i64 %17 to i32
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #8
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %13
  %21 = tail call i32 @bio_fd_should_retry(i32 %18) #8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @BIO_set_retry_read(%struct.bio_st* %0) #8
  br label %24

24:                                               ; preds = %13, %23, %20, %10
  %25 = phi i32 [ %11, %10 ], [ %18, %20 ], [ %18, %23 ], [ %18, %13 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @conn_ctrl(%struct.bio_st*, i32, i64, i8*) #0 {
  %5 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %6 = bitcast i8** %5 to %struct.bio_connect_st**
  %7 = load %struct.bio_connect_st*, %struct.bio_connect_st** %6, align 8
  switch i32 %1, label %79 [
    i32 1, label %8
    i32 101, label %26
    i32 100, label %33
    i32 102, label %49
    i32 105, label %52
    i32 8, label %66
    i32 9, label %70
    i32 10, label %73
    i32 13, label %73
    i32 11, label %80
    i32 15, label %74
  ]

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %7, i64 0, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %24, label %13

13:                                               ; preds = %8
  %14 = load %struct.bio_connect_st*, %struct.bio_connect_st** %6, align 8
  %15 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = tail call i32 @shutdown(i32 %11, i32 2) #8
  %20 = load i32, i32* %10, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi i32 [ %20, %18 ], [ %11, %13 ]
  %23 = tail call i32 @close(i32 %22) #8
  store i32 -1, i32* %10, align 8
  br label %24

24:                                               ; preds = %8, %21
  %25 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 3
  store i32 0, i32* %25, align 8
  br label %80

26:                                               ; preds = %4
  %27 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %7, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %80, label %30

30:                                               ; preds = %26
  %31 = tail call fastcc i32 @conn_state(%struct.bio_st* %0, %struct.bio_connect_st* %7)
  %32 = sext i32 %31 to i64
  br label %80

33:                                               ; preds = %4
  %34 = icmp eq i8* %3, null
  br i1 %34, label %80, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  store i32 1, i32* %36, align 8
  switch i64 %2, label %80 [
    i64 0, label %37
    i64 1, label %43
  ]

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %7, i64 0, i32 1
  %39 = load i8*, i8** %38, align 8
  tail call void @OPENSSL_free(i8* %39) #8
  %40 = tail call i8* @OPENSSL_strdup(i8* nonnull %3) #8
  store i8* %40, i8** %38, align 8
  %41 = icmp ne i8* %40, null
  %42 = zext i1 %41 to i64
  ret i64 %42

43:                                               ; preds = %35
  %44 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %7, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  tail call void @OPENSSL_free(i8* %45) #8
  %46 = tail call i8* @OPENSSL_strdup(i8* nonnull %3) #8
  store i8* %46, i8** %44, align 8
  %47 = icmp ne i8* %46, null
  %48 = zext i1 %47 to i64
  br label %80

49:                                               ; preds = %4
  %50 = trunc i64 %2 to i32
  %51 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %7, i64 0, i32 3
  store i32 %50, i32* %51, align 8
  br label %80

52:                                               ; preds = %4
  %53 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %80, label %56

56:                                               ; preds = %52
  %57 = icmp eq i8* %3, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %56
  %59 = bitcast i8* %3 to i32*
  %60 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %59, align 4
  br label %62

62:                                               ; preds = %56, %58
  %63 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  br label %80

66:                                               ; preds = %4
  %67 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  br label %80

70:                                               ; preds = %4
  %71 = trunc i64 %2 to i32
  %72 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 %71, i32* %72, align 4
  br label %80

73:                                               ; preds = %4, %4
  br label %80

74:                                               ; preds = %4
  %75 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %7, i64 0, i32 7
  %76 = bitcast i32 (%struct.bio_st*, i32, i32)** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast i8* %3 to i64*
  store i64 %77, i64* %78, align 8
  br label %80

79:                                               ; preds = %4
  br label %80

80:                                               ; preds = %43, %52, %35, %26, %33, %62, %30, %79, %74, %4, %73, %70, %66, %49, %24
  %81 = phi i64 [ 0, %79 ], [ 1, %74 ], [ 1, %4 ], [ 0, %73 ], [ 1, %70 ], [ %69, %66 ], [ %65, %62 ], [ 1, %49 ], [ 1, %33 ], [ %32, %30 ], [ 0, %24 ], [ 1, %26 ], [ %48, %43 ], [ 0, %35 ], [ -1, %52 ]
  ret i64 %81
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @conn_new(%struct.bio_st* nocapture) #0 {
  %2 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 3
  store i32 0, i32* %4, align 8
  %5 = tail call i8* @OPENSSL_malloc(i64 176) #8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast i8* %5 to %struct.bio_connect_st*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 176, i1 false) #8
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi %struct.bio_connect_st* [ %8, %7 ], [ null, %1 ]
  %11 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %12 = bitcast i8** %11 to %struct.bio_connect_st**
  store %struct.bio_connect_st* %10, %struct.bio_connect_st** %12, align 8
  %13 = icmp ne %struct.bio_connect_st* %10, null
  %14 = zext i1 %13 to i32
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @conn_free(%struct.bio_st*) #0 {
  %2 = icmp eq %struct.bio_st* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %13 = bitcast i8** %12 to %struct.bio_connect_st**
  %14 = load %struct.bio_connect_st*, %struct.bio_connect_st** %13, align 8
  %15 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = tail call i32 @shutdown(i32 %9, i32 2) #8
  %20 = load i32, i32* %8, align 8
  br label %21

21:                                               ; preds = %18, %11
  %22 = phi i32 [ %20, %18 ], [ %9, %11 ]
  %23 = tail call i32 @close(i32 %22) #8
  store i32 -1, i32* %8, align 8
  br label %24

24:                                               ; preds = %21, %7, %3
  %25 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %26 = bitcast i8** %25 to %struct.bio_connect_st**
  %27 = load %struct.bio_connect_st*, %struct.bio_connect_st** %26, align 8
  %28 = icmp eq %struct.bio_connect_st* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %27, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8
  tail call void @OPENSSL_free(i8* %31) #8
  %32 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %27, i64 0, i32 2
  %33 = load i8*, i8** %32, align 8
  tail call void @OPENSSL_free(i8* %33) #8
  %34 = bitcast %struct.bio_connect_st* %27 to i8*
  tail call void @OPENSSL_free(i8* nonnull %34) #8
  br label %35

35:                                               ; preds = %29, %24, %1
  %36 = phi i32 [ 0, %1 ], [ 1, %24 ], [ 1, %29 ]
  ret i32 %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @conn_callback_ctrl(%struct.bio_st* nocapture readonly, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*) #4 {
  %4 = icmp eq i32 %1, 14
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %7 = bitcast i8** %6 to %struct.bio_connect_st**
  %8 = load %struct.bio_connect_st*, %struct.bio_connect_st** %7, align 8
  %9 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %8, i64 0, i32 7
  %10 = bitcast i32 (%struct.bio_st*, i32, i32)** %9 to i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)**
  store i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)* %2, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)** %10, align 8
  br label %11

11:                                               ; preds = %3, %5
  %12 = phi i64 [ 1, %5 ], [ 0, %3 ]
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @conn_state(%struct.bio_st*, %struct.bio_connect_st*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %1, i64 0, i32 7
  %6 = load i32 (%struct.bio_st*, i32, i32)*, i32 (%struct.bio_st*, i32, i32)** %5, align 8
  %7 = icmp eq i32 (%struct.bio_st*, i32, i32)* %6, null
  %8 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %1, i64 0, i32 0
  %9 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %10 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %1, i64 0, i32 1
  %11 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %1, i64 0, i32 2
  %12 = bitcast i8** %11 to i64*
  %13 = bitcast i8** %10 to i64*
  %14 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %1, i64 0, i32 5
  %15 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %1, i64 0, i32 6
  %16 = getelementptr inbounds %struct.bio_connect_st, %struct.bio_connect_st* %1, i64 0, i32 3
  %17 = bitcast %struct.sockaddr_storage* %14 to %struct.sockaddr*
  br label %18

18:                                               ; preds = %129, %2
  %19 = phi i32 [ -1, %2 ], [ %130, %129 ]
  %20 = load i32, i32* %8, align 8
  switch i32 %20, label %134 [
    i32 0, label %21
    i32 1, label %115
    i32 2, label %135
  ]

21:                                               ; preds = %18
  %22 = load i8*, i8** %10, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @ERR_put_error(i32 17, i32 0, i32 108, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 184) #8
  br label %135

25:                                               ; preds = %21
  %26 = load i8*, i8** %11, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %77

28:                                               ; preds = %25
  %29 = load i8, i8* %22, align 1
  %30 = icmp eq i8 %29, 91
  br i1 %30, label %31, label %43

31:                                               ; preds = %28
  %32 = call i8* @strchr(i8* nonnull %22, i32 93) #9
  %33 = icmp eq i8* %32, null
  br i1 %33, label %74, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds i8, i8* %22, i64 1
  %36 = ptrtoint i8* %32 to i64
  %37 = ptrtoint i8* %35 to i64
  %38 = sub i64 %36, %37
  %39 = getelementptr inbounds i8, i8* %32, i64 1
  %40 = load i8, i8* %39, align 1
  switch i8 %40, label %74 [
    i8 58, label %41
    i8 0, label %56
  ]

41:                                               ; preds = %34
  %42 = getelementptr inbounds i8, i8* %32, i64 2
  br label %56

43:                                               ; preds = %28
  %44 = call i8* @strchr(i8* nonnull %22, i32 58) #9
  %45 = icmp eq i8* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  %48 = call i8* @strchr(i8* %47, i32 58) #9
  %49 = icmp eq i8* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46, %43
  %51 = call i64 @strlen(i8* nonnull %22) #9
  br label %56

52:                                               ; preds = %46
  %53 = ptrtoint i8* %44 to i64
  %54 = ptrtoint i8* %22 to i64
  %55 = sub i64 %53, %54
  br label %56

56:                                               ; preds = %52, %50, %41, %34
  %57 = phi i8* [ %22, %52 ], [ %22, %50 ], [ %35, %41 ], [ %35, %34 ]
  %58 = phi i8* [ %47, %52 ], [ null, %50 ], [ %42, %41 ], [ null, %34 ]
  %59 = phi i64 [ %55, %52 ], [ %51, %50 ], [ %38, %41 ], [ %38, %34 ]
  %60 = call i8* @OPENSSL_strndup(i8* %57, i64 %59) #8
  %61 = ptrtoint i8* %60 to i64
  %62 = icmp eq i8* %60, null
  %63 = icmp eq i8* %58, null
  %64 = or i1 %63, %62
  br i1 %64, label %74, label %65

65:                                               ; preds = %56
  %66 = call i8* @OPENSSL_strdup(i8* nonnull %58) #8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @OPENSSL_free(i8* nonnull %60) #8
  br label %74

69:                                               ; preds = %65
  %70 = ptrtoint i8* %66 to i64
  %71 = load i8*, i8** %11, align 8
  call void @OPENSSL_free(i8* %71) #8
  store i64 %70, i64* %12, align 8
  %72 = load i8*, i8** %10, align 8
  call void @OPENSSL_free(i8* %72) #8
  store i64 %61, i64* %13, align 8
  %73 = load i8*, i8** %11, align 8
  br label %77

74:                                               ; preds = %31, %34, %56, %68
  %75 = phi i8* [ null, %68 ], [ null, %31 ], [ null, %34 ], [ %60, %56 ]
  call void @OPENSSL_free(i8* %75) #8
  call void @OPENSSL_free(i8* null) #8
  call void @ERR_put_error(i32 17, i32 0, i32 109, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 194) #8
  %76 = load i8*, i8** %10, align 8
  call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %76) #8
  br label %135

77:                                               ; preds = %69, %25
  %78 = phi i8* [ %73, %69 ], [ %26, %25 ]
  %79 = phi i8* [ %60, %69 ], [ %22, %25 ]
  %80 = call i32 @bio_ip_and_port_to_socket_and_addr(i32* %9, %struct.sockaddr_storage* %14, i32* %15, i8* nonnull %79, i8* %78) #8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  call void @ERR_put_error(i32 17, i32 0, i32 113, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 208) #8
  %83 = load i8*, i8** %10, align 8
  %84 = load i8*, i8** %11, align 8
  call void (i32, ...) @ERR_add_error_data(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* %84) #8
  br label %135

85:                                               ; preds = %77
  %86 = load i32, i32* %16, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %85
  %89 = load i32, i32* %9, align 8
  %90 = call i32 @bio_socket_nbio(i32 %89, i32 1) #8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  call void @ERR_put_error(i32 17, i32 0, i32 103, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 215) #8
  %93 = load i8*, i8** %10, align 8
  %94 = load i8*, i8** %11, align 8
  call void (i32, ...) @ERR_add_error_data(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* %94) #8
  br label %135

95:                                               ; preds = %88, %85
  store i32 1, i32* %3, align 4
  %96 = load i32, i32* %9, align 8
  %97 = call i32 @setsockopt(i32 %96, i32 1, i32 9, i8* nonnull %4, i32 4) #8
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %95
  call void @ERR_put_error(i32 2, i32 0, i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 226) #8
  call void @ERR_put_error(i32 17, i32 0, i32 106, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 227) #8
  %100 = load i8*, i8** %10, align 8
  %101 = load i8*, i8** %11, align 8
  call void (i32, ...) @ERR_add_error_data(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* %101) #8
  br label %135

102:                                              ; preds = %95
  call void @BIO_clear_retry_flags(%struct.bio_st* %0) #8
  %103 = load i32, i32* %9, align 8
  %104 = load i32, i32* %15, align 8
  %105 = call i32 @connect(i32 %103, %struct.sockaddr* %17, i32 %104) #8
  %106 = icmp slt i32 %105, 0
  br i1 %106, label %107, label %127

107:                                              ; preds = %102
  %108 = call i32 @bio_fd_should_retry(i32 %105) #8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  call void @BIO_set_flags(%struct.bio_st* %0, i32 12) #8
  store i32 1, i32* %8, align 8
  %111 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 4
  store i32 2, i32* %111, align 4
  br label %135

112:                                              ; preds = %107
  call void @ERR_put_error(i32 2, i32 0, i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 240) #8
  call void @ERR_put_error(i32 17, i32 0, i32 102, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 241) #8
  %113 = load i8*, i8** %10, align 8
  %114 = load i8*, i8** %11, align 8
  call void (i32, ...) @ERR_add_error_data(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %113, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* %114) #8
  br label %135

115:                                              ; preds = %18
  %116 = load i32, i32* %9, align 8
  %117 = call i32 @bio_sock_error(i32 %116) #8
  store i32 %117, i32* %3, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %127, label %119

119:                                              ; preds = %115
  %120 = call i32 @bio_fd_should_retry(i32 %19) #8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  call void @BIO_set_flags(%struct.bio_st* %0, i32 12) #8
  store i32 1, i32* %8, align 8
  %123 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 4
  store i32 2, i32* %123, align 4
  br label %135

124:                                              ; preds = %119
  call void @BIO_clear_retry_flags(%struct.bio_st* %0) #8
  call void @ERR_put_error(i32 2, i32 0, i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 261) #8
  call void @ERR_put_error(i32 17, i32 0, i32 107, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 262) #8
  %125 = load i8*, i8** %10, align 8
  %126 = load i8*, i8** %11, align 8
  call void (i32, ...) @ERR_add_error_data(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* %126) #8
  br label %135

127:                                              ; preds = %115, %102
  %128 = phi i32 [ %105, %102 ], [ %19, %115 ]
  store i32 2, i32* %8, align 8
  br i1 %7, label %129, label %131

129:                                              ; preds = %127, %131
  %130 = phi i32 [ %132, %131 ], [ %128, %127 ]
  br label %18

131:                                              ; preds = %127
  %132 = call i32 %6(%struct.bio_st* %0, i32 2, i32 %128) #8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %140, label %129

134:                                              ; preds = %18
  br label %135

135:                                              ; preds = %18, %134, %74, %122, %124, %110, %112, %99, %92, %82, %24
  %136 = phi i32 [ -1, %122 ], [ 0, %124 ], [ %19, %24 ], [ %19, %74 ], [ %97, %99 ], [ %105, %110 ], [ %105, %112 ], [ %19, %92 ], [ %19, %82 ], [ %19, %134 ], [ 1, %18 ]
  br i1 %7, label %140, label %137

137:                                              ; preds = %135
  %138 = load i32, i32* %8, align 8
  %139 = call i32 %6(%struct.bio_st* %0, i32 %138, i32 %136) #8
  br label %140

140:                                              ; preds = %131, %137, %135
  %141 = phi i32 [ %139, %137 ], [ %136, %135 ], [ 0, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret i32 %141
}

declare void @bio_clear_socket_error() local_unnamed_addr #2

declare i64 @send(i32, i8*, i64, i32) local_unnamed_addr #2

declare void @BIO_clear_retry_flags(%struct.bio_st*) local_unnamed_addr #2

declare i32 @bio_fd_should_retry(i32) local_unnamed_addr #2

declare void @BIO_set_retry_write(%struct.bio_st*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #2

declare i32 @bio_ip_and_port_to_socket_and_addr(i32*, %struct.sockaddr_storage*, i32*, i8*, i8*) local_unnamed_addr #2

declare i32 @bio_socket_nbio(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) local_unnamed_addr #5

declare i32 @connect(i32, %struct.sockaddr*, i32) local_unnamed_addr #2

declare void @BIO_set_flags(%struct.bio_st*, i32) local_unnamed_addr #2

declare i32 @bio_sock_error(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare i8* @OPENSSL_strndup(i8*, i64) local_unnamed_addr #2

declare i8* @OPENSSL_strdup(i8*) local_unnamed_addr #2

declare i64 @recv(i32, i8*, i64, i32) local_unnamed_addr #2

declare void @BIO_set_retry_read(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @shutdown(i32, i32) local_unnamed_addr #5

declare i32 @close(i32) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
