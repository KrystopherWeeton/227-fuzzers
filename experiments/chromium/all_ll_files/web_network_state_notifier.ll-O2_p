; ModuleID = '../../third_party/blink/renderer/platform/exported/web_network_state_notifier.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_network_state_notifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NetworkStateNotifier" = type <{ %"class.WTF::Mutex", %"struct.blink::NetworkStateNotifier::NetworkState", i8, [7 x i8], %"struct.blink::NetworkStateNotifier::NetworkState", %"class.WTF::HashMap", %"class.WTF::HashMap", i8, [7 x i8] }>
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.blink::NetworkStateNotifier::NetworkState" = type <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.0", i8, [3 x i8], %"class.absl::optional.5", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { double }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::NetworkStateNotifier::ObserverList"* }
%"struct.blink::NetworkStateNotifier::ObserverList" = type { i8, %"class.WTF::Vector", %"class.WTF::Vector.13" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, i32, i32 }
%"class.blink::NetworkStateNotifier::NetworkStateObserver" = type { i32 (...)** }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { i32*, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WebNetworkStateNotifier9SetOnLineEb(i1 zeroext) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #2
  tail call void @_ZN5blink20NetworkStateNotifier9SetOnLineEb(%"class.blink::NetworkStateNotifier"* %2, i1 zeroext %0) #2
  ret void
}

declare dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() local_unnamed_addr #1

declare void @_ZN5blink20NetworkStateNotifier9SetOnLineEb(%"class.blink::NetworkStateNotifier"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WebNetworkStateNotifier16SetWebConnectionENS_17WebConnectionTypeEd(i32, double) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #2
  tail call void @_ZN5blink20NetworkStateNotifier16SetWebConnectionENS_17WebConnectionTypeEd(%"class.blink::NetworkStateNotifier"* %3, i32 %0, double %1) #2
  ret void
}

declare void @_ZN5blink20NetworkStateNotifier16SetWebConnectionENS_17WebConnectionTypeEd(%"class.blink::NetworkStateNotifier"*, i32, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WebNetworkStateNotifier17SetNetworkQualityENS_26WebEffectiveConnectionTypeEN4base9TimeDeltaES3_i(i32, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #2
  tail call void @_ZN5blink20NetworkStateNotifier17SetNetworkQualityENS_26WebEffectiveConnectionTypeEN4base9TimeDeltaES3_i(%"class.blink::NetworkStateNotifier"* %5, i32 %0, i64 %1, i64 %2, i32 %3) #2
  ret void
}

declare void @_ZN5blink20NetworkStateNotifier17SetNetworkQualityENS_26WebEffectiveConnectionTypeEN4base9TimeDeltaES3_i(%"class.blink::NetworkStateNotifier"*, i32, i64, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WebNetworkStateNotifier28SetNetworkQualityWebHoldbackENS_26WebEffectiveConnectionTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #2
  tail call void @_ZN5blink20NetworkStateNotifier28SetNetworkQualityWebHoldbackENS_26WebEffectiveConnectionTypeE(%"class.blink::NetworkStateNotifier"* %2, i32 %0) #2
  ret void
}

declare void @_ZN5blink20NetworkStateNotifier28SetNetworkQualityWebHoldbackENS_26WebEffectiveConnectionTypeE(%"class.blink::NetworkStateNotifier"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WebNetworkStateNotifier18SetSaveDataEnabledEb(i1 zeroext) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #2
  tail call void @_ZN5blink20NetworkStateNotifier18SetSaveDataEnabledEb(%"class.blink::NetworkStateNotifier"* %2, i1 zeroext %0) #2
  ret void
}

declare void @_ZN5blink20NetworkStateNotifier18SetSaveDataEnabledEb(%"class.blink::NetworkStateNotifier"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23WebNetworkStateNotifier15SaveDataEnabledEv() local_unnamed_addr #0 align 2 {
  %1 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #2
  %2 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %2) #2
  %3 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1, i64 0, i32 4
  %7 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %1, i64 0, i32 1
  %8 = select i1 %5, %"struct.blink::NetworkStateNotifier::NetworkState"* %7, %"struct.blink::NetworkStateNotifier::NetworkState"* %6
  %9 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %8, i64 0, i32 11
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %2) #2
  ret i1 %11
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
