; ModuleID = '../../ui/views/painter.cc'
source_filename = "../../ui/views/painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintFlags" = type <{ %class.sk_sp.842, %class.sk_sp.843, %class.sk_sp.867, %class.sk_sp.868, %class.sk_sp.869, %class.sk_sp.86, i32, float, float, i32, %union.anon.870, [4 x i8] }>
%class.sk_sp.842 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.843 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.844", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.370, i32, %"class.absl::optional.854", %"class.std::__1::vector.530", %"class.std::__1::vector.859", %class.sk_sp.866, %class.sk_sp.849, i32, [4 x i8] }>
%"class.absl::optional.844" = type { %"class.absl::optional_internal::optional_data.845" }
%"class.absl::optional_internal::optional_data.845" = type { %"class.absl::optional_internal::optional_data_base.846" }
%"class.absl::optional_internal::optional_data_base.846" = type { %"class.absl::optional_internal::optional_data_dtor_base.847" }
%"class.absl::optional_internal::optional_data_dtor_base.847" = type { i8, %union.anon.848 }
%union.anon.848 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.849, %class.sk_sp.370, %"class.gfx::Rect", i32, %class.sk_sp.850, %class.sk_sp.851, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.849, %class.scoped_refptr.852 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.850 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.851 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.852 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.853", [4 x i8] }>
%"class.base::RefCountedThreadSafe.853" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.370 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.371", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { i8* }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, %union.anon.858 }
%union.anon.858 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { i32*, i32*, %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { i32* }
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { float*, float*, %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { float* }
%class.sk_sp.866 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.343", [7 x i8] }>
%"struct.std::__1::atomic.343" = type { %"struct.std::__1::__atomic_base.344" }
%"struct.std::__1::__atomic_base.344" = type { %"struct.std::__1::__cxx_atomic_impl.345" }
%"struct.std::__1::__cxx_atomic_impl.345" = type { %"struct.std::__1::__cxx_atomic_base_impl.346" }
%"struct.std::__1::__cxx_atomic_base_impl.346" = type { i8 }
%class.sk_sp.849 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.867 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.868 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.869 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.86 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.87, i32, %"class.absl::optional.88", i8, i32 }
%class.sk_sp.87 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, %union.anon.92 }
%union.anon.92 = type { %struct.SkRect }
%union.anon.870 = type { i32 }
%"class.ui::PaintContext" = type <{ %"class.cc::DisplayItemList"*, float, %"class.gfx::Rect", %"class.gfx::Vector2d", i8, [3 x i8] }>
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.871", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.93", %"class.std::__1::vector.940", %"class.std::__1::vector.947", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.871" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.872", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.872" = type { %"class.std::__1::__vector_base.873" }
%"class.std::__1::__vector_base.873" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.879", %"class.std::__1::vector.889", %"class.base::flat_map.903", i8, i8, [6 x i8], %"class.cc::RTree.913", %"class.std::__1::vector.932" }
%"class.base::flat_map.879" = type { %"class.base::internal::flat_tree.880" }
%"class.base::internal::flat_tree.880" = type { %"class.std::__1::vector.881" }
%"class.std::__1::vector.881" = type { %"class.std::__1::__vector_base.882" }
%"class.std::__1::__vector_base.882" = type { %"struct.std::__1::pair.883"*, %"struct.std::__1::pair.883"*, %"class.std::__1::__compressed_pair.884" }
%"struct.std::__1::pair.883" = type opaque
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.std::__1::pair.883"* }
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.898" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.891", i32, i32 }
%"class.std::__1::vector.891" = type { %"class.std::__1::__vector_base.892" }
%"class.std::__1::__vector_base.892" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.893" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.903" = type { %"class.base::internal::flat_tree.904" }
%"class.base::internal::flat_tree.904" = type { %"class.std::__1::vector.905" }
%"class.std::__1::vector.905" = type { %"class.std::__1::__vector_base.906" }
%"class.std::__1::__vector_base.906" = type { %"struct.std::__1::pair.907"*, %"struct.std::__1::pair.907"*, %"class.std::__1::__compressed_pair.908" }
%"struct.std::__1::pair.907" = type { i32, i32 }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"struct.std::__1::pair.907"* }
%"class.cc::RTree.913" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.924", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.914", %"class.absl::optional.919", float, [4 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional.914" = type { %"class.absl::optional_internal::optional_data.915" }
%"class.absl::optional_internal::optional_data.915" = type { %"class.absl::optional_internal::optional_data_base.916" }
%"class.absl::optional_internal::optional_data_base.916" = type { %"class.absl::optional_internal::optional_data_dtor_base.917" }
%"class.absl::optional_internal::optional_data_dtor_base.917" = type { i8, %union.anon.918 }
%union.anon.918 = type { i64 }
%"class.absl::optional.919" = type { %"class.absl::optional_internal::optional_data.920" }
%"class.absl::optional_internal::optional_data.920" = type { %"class.absl::optional_internal::optional_data_base.921" }
%"class.absl::optional_internal::optional_data_base.921" = type { %"class.absl::optional_internal::optional_data_dtor_base.922" }
%"class.absl::optional_internal::optional_data_dtor_base.922" = type { i8, %union.anon.923 }
%union.anon.923 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.924" = type { %"class.std::__1::__vector_base.925" }
%"class.std::__1::__vector_base.925" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.932" = type { %"class.std::__1::__vector_base.933" }
%"class.std::__1::__vector_base.933" = type { %"struct.std::__1::pair.934"*, %"struct.std::__1::pair.934"*, %"class.std::__1::__compressed_pair.935" }
%"struct.std::__1::pair.934" = type opaque
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::pair.934"* }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.940" = type { %"class.std::__1::__vector_base.941" }
%"class.std::__1::__vector_base.941" = type { i64*, i64*, %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { i64* }
%"class.std::__1::vector.947" = type { %"class.std::__1::__vector_base.948" }
%"class.std::__1::__vector_base.948" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.949" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.gfx::Vector2d" = type { i32, i32 }
%class.scoped_refptr.954 = type { %"class.cc::DisplayItemList"* }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.13 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.14 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%union.anon = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.ui::PaintCache" = type <{ %class.sk_sp.370, float, [4 x i8] }>
%"class.views::Painter" = type { i32 (...)** }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional", %"class.absl::optional.8", %"class.cc::PaintCanvas"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, [7 x i8], %union.anon.12 }
%union.anon.12 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.320", i8, [3 x i8], %"class.absl::optional.327", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.332", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.347", %"class.absl::optional.353", i8, [7 x i8], %"class.std::__1::unique_ptr.358", %"class.std::__1::unique_ptr.364", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.375", i8, i8, [3 x i8], %"class.std::__1::vector.217", %"class.std::__1::unique_ptr.380", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.386", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.399", %"class.base::ObserverList.405", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.32", %"class.ui::Layer"*, %"class.base::ObserverList.284" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type { %"class.ui::LayerAnimationDelegate", %"class.cc::ContentLayerClient", %"class.cc::TextureLayerClient", i32, %"class.ui::Compositor"*, %"class.ui::Layer"*, %"class.std::__1::vector.217", %"class.std::__1::vector.224", %"class.ui::Layer"*, %"class.base::internal::flat_tree.232", i8, i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.233", i8, i8, i8, i8, %"class.cc::Region", %"class.cc::Region", float, float, float, float, i8, float, %"class.ui::Layer"*, %"class.ui::Layer"*, float, i32, %"class.std::__1::unique_ptr.239", %"class.std::__1::basic_string", %"class.ui::LayerDelegate"*, %"class.base::ObserverList.245", %"class.ui::LayerOwner"*, %class.scoped_refptr.249, %class.scoped_refptr.250, %class.scoped_refptr.251, %class.scoped_refptr.252, %class.scoped_refptr.253, %class.scoped_refptr.254, %class.scoped_refptr.255, %"class.cc::Layer"*, float, %"class.gfx::ImageSkia", %"class.gfx::Rect", %"struct.viz::TransferableResource", %"class.base::OnceCallback", %"class.gfx::Size", i32, i32, float, i32, %"class.base::WeakPtrFactory.280" }
%"class.ui::LayerAnimationDelegate" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.ui::Compositor" = type { %"class.cc::LayerTreeHostClient", %"class.cc::LayerTreeHostSingleThreadClient", %"class.viz::HostFrameSinkClient", %"class.ui::ThroughputTrackerHost", %"class.gfx::Size", %"class.ui::ContextFactory"*, %"class.viz::mojom::DisplayPrivate"*, %"class.viz::mojom::ExternalBeginFrameController"*, %"class.std::__1::unique_ptr.35", %"class.ui::Layer"*, %"class.base::ObserverList", %"class.base::ObserverList.44", i32, i32, float, [4 x i8], %"class.std::__1::unordered_set", i8, i8, %"class.viz::FrameSinkId", %class.scoped_refptr, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.base::WeakPtr", %class.scoped_refptr.162, %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i8, i8, float, %"class.ui::LayerAnimatorCollection", %class.scoped_refptr.172, %"class.std::__1::unique_ptr.173", %class.SkMatrix44, %"class.gfx::DisplayColorSpaces", i8, i8, %"class.ui::CompositorLockManager", %"class.std::__1::unique_ptr.200", i8, i64, %"class.base::flat_map.206", %"class.base::WeakPtrFactory.216", %"class.base::WeakPtrFactory.216" }
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSingleThreadClient" = type { i32 (...)** }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.ui::ThroughputTrackerHost" = type { i32 (...)** }
%"class.ui::ContextFactory" = type { i32 (...)** }
%"class.viz::mojom::DisplayPrivate" = type opaque
%"class.viz::mojom::ExternalBeginFrameController" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.ui::PendingBeginFrameArgs"* }
%"struct.ui::PendingBeginFrameArgs" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.41" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.44" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.45", i64, i32, [4 x i8] }>
%"class.base::LinkedList.45" = type { %"class.base::LinkNode.46" }
%"class.base::LinkNode.46" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i64 }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { float }
%"class.viz::FrameSinkId" = type { i32, i32 }
%class.scoped_refptr = type { %"class.cc::Layer"* }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.cc::AnimationHost"* }
%"class.cc::AnimationHost" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.cc::LayerTreeHost"* }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.417", %class.scoped_refptr.418, %"class.std::__1::unique_ptr.419", i32, %"class.std::__1::unique_ptr.425", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.437", i32, %"class.std::__1::unique_ptr.443", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.467", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.482", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.630, %"class.base::flat_map.631", %"class.base::internal::flat_tree.641", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.672", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.698", %"class.std::__1::unordered_map.706", %"class.std::__1::vector.730", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.739", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.760", %"class.std::__1::vector.766", %"class.base::flat_map.774", %"class.base::WeakPtrFactory.784" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.409", %class.scoped_refptr.162 }
%"class.std::__1::vector.409" = type { %"class.std::__1::__vector_base.410" }
%"class.std::__1::__vector_base.410" = type { %"class.std::__1::unique_ptr.411"*, %"class.std::__1::unique_ptr.411"*, %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::unique_ptr.411" = type opaque
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.std::__1::unique_ptr.411"* }
%"class.base::WeakPtr.417" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.161", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.161" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%class.scoped_refptr.418 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.163" }>
%"class.base::RefCountedThreadSafe.163" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.162, %class.scoped_refptr.162 }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.449", %"class.std::__1::set.457" }
%"class.std::__1::vector.449" = type { %"class.std::__1::__vector_base.450" }
%"class.std::__1::__vector_base.450" = type { %"class.std::__1::unique_ptr.451"*, %"class.std::__1::unique_ptr.451"*, %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.std::__1::unique_ptr.451"* }
%"class.std::__1::set.457" = type { %"class.std::__1::__tree.458" }
%"class.std::__1::__tree.458" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.470, %class.scoped_refptr.471, %class.scoped_refptr.162, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.472", i64, %"class.base::WeakPtrFactory.478" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.470 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.471 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory.478" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.199 }
%class.scoped_refptr.199 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.488", %"class.base::flat_map.488", %"class.base::flat_map.488", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.488" = type { %"class.base::internal::flat_tree.489" }
%"class.base::internal::flat_tree.489" = type { %"class.std::__1::vector.490" }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.std::__1::pair.492"*, %"struct.std::__1::pair.492"*, %"class.std::__1::__compressed_pair.493" }
%"struct.std::__1::pair.492" = type opaque
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.std::__1::pair.492"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"class.std::__1::vector.519" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.498", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.500" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { i32*, i32*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { i32* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.514" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.521" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.526", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.565" }
%"class.cc::PropertyTree.526" = type { i32 (...)**, %"class.std::__1::vector.527", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.527" = type { %"class.std::__1::__vector_base.528" }
%"class.std::__1::__vector_base.528" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.537" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.105", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.84" }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.100" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.86, [20 x float], i32, [4 x i8], %"class.std::__1::vector.93", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.105" = type { %"class.absl::optional_internal::optional_data.106" }
%"class.absl::optional_internal::optional_data.106" = type { %"class.absl::optional_internal::optional_data_base.107" }
%"class.absl::optional_internal::optional_data_base.107" = type { %"class.absl::optional_internal::optional_data_dtor_base.108" }
%"class.absl::optional_internal::optional_data_dtor_base.108" = type { i8, %union.anon.109 }
%union.anon.109 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.529" }
%"class.base::internal::flat_tree.529" = type { %"class.std::__1::vector.530" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.542" }
%"class.std::__1::__hash_table.542" = type <{ %"class.std::__1::unique_ptr.543", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.560", [4 x i8] }>
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545", %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.std::__1::__hash_node_base.546"** }
%"struct.std::__1::__hash_node_base.546" = type { %"struct.std::__1::__hash_node_base.546"* }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.std::__1::__bucket_list_deallocator.548" }
%"class.std::__1::__bucket_list_deallocator.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.std::__1::__hash_node_base.546" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::vector.565" = type { %"class.std::__1::__vector_base.566" }
%"class.std::__1::__vector_base.566" = type { %"class.std::__1::unique_ptr.567"*, %"class.std::__1::unique_ptr.567"*, %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.std::__1::unique_ptr.567"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.578" }
%"class.cc::PropertyTree.578" = type { i32 (...)**, %"class.std::__1::vector.579", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.579" = type { %"class.std::__1::__vector_base.580" }
%"class.std::__1::__vector_base.580" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.581" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.586", i32, %"class.base::flat_map.594", %"class.base::flat_map.604", %"class.base::WeakPtr.614" }
%"class.cc::PropertyTree.586" = type { i32 (...)**, %"class.std::__1::vector.587", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.587" = type { %"class.std::__1::__vector_base.588" }
%"class.std::__1::__vector_base.588" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.589" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.594" = type { %"class.base::internal::flat_tree.595" }
%"class.base::internal::flat_tree.595" = type { %"class.std::__1::vector.596" }
%"class.std::__1::vector.596" = type { %"class.std::__1::__vector_base.597" }
%"class.std::__1::__vector_base.597" = type { %"struct.std::__1::pair.598"*, %"struct.std::__1::pair.598"*, %"class.std::__1::__compressed_pair.599" }
%"struct.std::__1::pair.598" = type opaque
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::pair.598"* }
%"class.base::flat_map.604" = type { %"class.base::internal::flat_tree.605" }
%"class.base::internal::flat_tree.605" = type { %"class.std::__1::vector.606" }
%"class.std::__1::vector.606" = type { %"class.std::__1::__vector_base.607" }
%"class.std::__1::__vector_base.607" = type { %"struct.std::__1::pair.608"*, %"struct.std::__1::pair.608"*, %"class.std::__1::__compressed_pair.609" }
%"struct.std::__1::pair.608" = type opaque
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::pair.608"* }
%"class.base::WeakPtr.614" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.615", %"class.std::__1::vector.622" }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.617" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.622" = type { %"class.std::__1::__vector_base.623" }
%"class.std::__1::__vector_base.623" = type { %"class.std::__1::vector.624"*, %"class.std::__1::vector.624"*, %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::vector.624" = type opaque
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.std::__1::vector.624"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.630 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.631" = type { %"class.base::internal::flat_tree.632" }
%"class.base::internal::flat_tree.632" = type { %"class.std::__1::vector.633" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"struct.std::__1::pair.635"*, %"struct.std::__1::pair.635"*, %"class.std::__1::__compressed_pair.636" }
%"struct.std::__1::pair.635" = type opaque
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"struct.std::__1::pair.635"* }
%"class.base::internal::flat_tree.641" = type { %"class.std::__1::vector.642" }
%"class.std::__1::vector.642" = type { %"class.std::__1::__vector_base.643" }
%"class.std::__1::__vector_base.643" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.649" }
%"class.std::__1::__hash_table.649" = type <{ %"class.std::__1::unique_ptr.650", %"class.std::__1::__compressed_pair.660", %"class.std::__1::__compressed_pair.665", %"class.std::__1::__compressed_pair.668", [4 x i8] }>
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652", %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"struct.std::__1::__hash_node_base.653"** }
%"struct.std::__1::__hash_node_base.653" = type { %"struct.std::__1::__hash_node_base.653"* }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::__bucket_list_deallocator.655" }
%"class.std::__1::__bucket_list_deallocator.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"struct.std::__1::__hash_node_base.653" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::unordered_map.672" = type { %"class.std::__1::__hash_table.673" }
%"class.std::__1::__hash_table.673" = type <{ %"class.std::__1::unique_ptr.674", %"class.std::__1::__compressed_pair.684", %"class.std::__1::__compressed_pair.689", %"class.std::__1::__compressed_pair.692", [4 x i8] }>
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676", %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"struct.std::__1::__hash_node_base.677"** }
%"struct.std::__1::__hash_node_base.677" = type { %"struct.std::__1::__hash_node_base.677"* }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.std::__1::__bucket_list_deallocator.679" }
%"class.std::__1::__bucket_list_deallocator.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"struct.std::__1::__hash_node_base.677" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { %"struct.std::__1::pair.700"*, %"struct.std::__1::pair.700"*, %"class.std::__1::__compressed_pair.701" }
%"struct.std::__1::pair.700" = type opaque
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"struct.std::__1::pair.700"* }
%"class.std::__1::unordered_map.706" = type { %"class.std::__1::__hash_table.707" }
%"class.std::__1::__hash_table.707" = type <{ %"class.std::__1::unique_ptr.708", %"class.std::__1::__compressed_pair.718", %"class.std::__1::__compressed_pair.723", %"class.std::__1::__compressed_pair.726", [4 x i8] }>
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710", %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.711"** }
%"struct.std::__1::__hash_node_base.711" = type { %"struct.std::__1::__hash_node_base.711"* }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.std::__1::__bucket_list_deallocator.713" }
%"class.std::__1::__bucket_list_deallocator.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"struct.std::__1::__hash_node_base.711" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::vector.730" = type { %"class.std::__1::__vector_base.731" }
%"class.std::__1::__vector_base.731" = type { %"class.base::OnceCallback.732"*, %"class.base::OnceCallback.732"*, %"class.std::__1::__compressed_pair.733" }
%"class.base::OnceCallback.732" = type opaque
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.base::OnceCallback.732"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.738" }
%"class.base::OnceCallback.738" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.745", %"class.std::__1::vector.752" }
%"class.std::__1::vector.745" = type { %"class.std::__1::__vector_base.746" }
%"class.std::__1::__vector_base.746" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.747" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.752" = type { %"class.std::__1::__vector_base.753" }
%"class.std::__1::__vector_base.753" = type { %"class.std::__1::unique_ptr.754"*, %"class.std::__1::unique_ptr.754"*, %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.829", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.829" = type { %"class.absl::optional_internal::optional_data.830" }
%"class.absl::optional_internal::optional_data.830" = type { %"class.absl::optional_internal::optional_data_base.831" }
%"class.absl::optional_internal::optional_data_base.831" = type { %"class.absl::optional_internal::optional_data_dtor_base.832" }
%"class.absl::optional_internal::optional_data_dtor_base.832" = type { i8, %union.anon.833 }
%union.anon.833 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.std::__1::unique_ptr.754"* }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.766" = type { %"class.std::__1::__vector_base.767" }
%"class.std::__1::__vector_base.767" = type { %"class.std::__1::unique_ptr.768"*, %"class.std::__1::unique_ptr.768"*, %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::unique_ptr.768" = type opaque
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.std::__1::unique_ptr.768"* }
%"class.base::flat_map.774" = type { %"class.base::internal::flat_tree.775" }
%"class.base::internal::flat_tree.775" = type { %"class.std::__1::vector.776" }
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"struct.std::__1::pair.778"*, %"struct.std::__1::pair.778"*, %"class.std::__1::__compressed_pair.779" }
%"struct.std::__1::pair.778" = type opaque
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"struct.std::__1::pair.778"* }
%"class.base::WeakPtrFactory.784" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.162 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LayerAnimatorCollection" = type { %"class.ui::CompositorAnimationObserver", %"class.ui::Compositor"*, %"class.base::TimeTicks", %"class.std::__1::set" }
%"class.ui::CompositorAnimationObserver" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%class.scoped_refptr.172 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.ui::ScopedAnimationDurationScaleMode"* }
%"class.ui::ScopedAnimationDurationScaleMode" = type opaque
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.179" }
%"class.absl::optional.179" = type { %"class.absl::optional_internal::optional_data.180" }
%"class.absl::optional_internal::optional_data.180" = type { %"class.absl::optional_internal::optional_data_base.181" }
%"class.absl::optional_internal::optional_data_base.181" = type { %"class.absl::optional_internal::optional_data_dtor_base.182" }
%"class.absl::optional_internal::optional_data_dtor_base.182" = type { i8, %union.anon.183 }
%union.anon.183 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.ui::CompositorLockManager" = type { %class.scoped_refptr.162, %"class.base::TimeTicks", i8, %"class.std::__1::vector.184", %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"**, %"class.std::__1::__compressed_pair.194" }
%"class.ui::CompositorLock" = type { %"class.ui::CompositorLockClient"*, %"class.std::__1::unique_ptr.186", %"class.base::WeakPtr.193" }
%"class.ui::CompositorLockClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type { %"class.base::WeakPtr.189" }
%"class.base::WeakPtr.189" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.193" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.ui::CompositorLock"** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.ui::ScrollInputHandler"* }
%"class.ui::ScrollInputHandler" = type opaque
%"class.base::flat_map.206" = type { %"class.base::internal::flat_tree.207" }
%"class.base::internal::flat_tree.207" = type { %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.std::__1::pair.210"*, %"struct.std::__1::pair.210"*, %"class.std::__1::__compressed_pair.211" }
%"struct.std::__1::pair.210" = type opaque
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::pair.210"* }
%"class.base::WeakPtrFactory.216" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"class.std::__1::unique_ptr.226"*, %"class.std::__1::unique_ptr.226"*, %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::unique_ptr.226" = type opaque
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::unique_ptr.226"* }
%"class.base::internal::flat_tree.232" = type { %"class.std::__1::vector.217" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.ui::Layer::SubpixelPositionOffsetCache"* }
%"class.ui::Layer::SubpixelPositionOffsetCache" = type opaque
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.std::__1::vector.93"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.127 }
%union.anon.127 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList.245" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.246", i64, i32, [4 x i8] }>
%"class.base::LinkedList.246" = type { %"class.base::LinkNode.247" }
%"class.base::LinkNode.247" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.249 = type { %"class.ui::LayerAnimator"* }
%"class.ui::LayerAnimator" = type opaque
%class.scoped_refptr.250 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.251 = type { %"class.cc::MirrorLayer"* }
%"class.cc::MirrorLayer" = type opaque
%class.scoped_refptr.252 = type { %"class.cc::NinePatchLayer"* }
%"class.cc::NinePatchLayer" = type opaque
%class.scoped_refptr.253 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%class.scoped_refptr.254 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%class.scoped_refptr.255 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.256", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.262", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.81", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.122" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.67", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.scoped_refptr* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.76" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.105", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.111" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"class.std::__1::unique_ptr.113"*, %"class.std::__1::unique_ptr.113"*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::unique_ptr.113" = type opaque
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::unique_ptr.113"* }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.131", %"class.std::__1::vector.131", %"class.std::__1::vector.138" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { i8**, i8**, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i8** }
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.140" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.base::RepeatingCallback.256" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.257", %"class.viz::SurfaceId" }
%"class.absl::optional.257" = type { %"class.absl::optional_internal::optional_data.258" }
%"class.absl::optional_internal::optional_data.258" = type { %"class.absl::optional_internal::optional_data_base.259" }
%"class.absl::optional_internal::optional_data_base.259" = type { %"class.absl::optional_internal::optional_data_dtor_base.260" }
%"class.absl::optional_internal::optional_data_dtor_base.260" = type { i8, %union.anon.261 }
%union.anon.261 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.absl::optional.262" = type { %"class.absl::optional_internal::optional_data.263" }
%"class.absl::optional_internal::optional_data.263" = type { %"class.absl::optional_internal::optional_data_base.264" }
%"class.absl::optional_internal::optional_data_base.264" = type { %"class.absl::optional_internal::optional_data_dtor_base.265" }
%"class.absl::optional_internal::optional_data_dtor_base.265" = type { i8, %union.anon.266 }
%union.anon.266 = type { i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.267 }
%class.scoped_refptr.267 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.270", i8, i32, i8, [7 x i8], %"class.absl::optional.275" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.268", i64 }
%"class.util::IdType.268" = type { %"class.base::StrongAlias.269" }
%"class.base::StrongAlias.269" = type { i64 }
%"class.absl::optional.270" = type { %"class.absl::optional_internal::optional_data.271" }
%"class.absl::optional_internal::optional_data.271" = type { %"class.absl::optional_internal::optional_data_base.272" }
%"class.absl::optional_internal::optional_data_base.272" = type { %"class.absl::optional_internal::optional_data_dtor_base.273" }
%"class.absl::optional_internal::optional_data_dtor_base.273" = type { i8, %union.anon.274 }
%union.anon.274 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.275" = type { %"class.absl::optional_internal::optional_data.276" }
%"class.absl::optional_internal::optional_data.276" = type { %"class.absl::optional_internal::optional_data_base.277" }
%"class.absl::optional_internal::optional_data_base.277" = type { %"class.absl::optional_internal::optional_data_dtor_base.278" }
%"class.absl::optional_internal::optional_data_dtor_base.278" = type { i8, [7 x i8], %union.anon.279 }
%union.anon.279 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.280" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.284" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.285", i64, i32, [4 x i8] }>
%"class.base::LinkedList.285" = type { %"class.base::LinkNode.286" }
%"class.base::LinkNode.286" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.288", %"class.std::__1::vector.295", %"class.ui::EventHandler"* }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.290" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.302" }
%"class.std::__1::__tree.302" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.311" }
%"class.std::__1::map.311" = type { %"class.std::__1::__tree.312" }
%"class.std::__1::__tree.312" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.views::View"** }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::vector.320"* }
%class.SkPath = type <{ %class.sk_sp.338, i32, %"struct.std::__1::atomic.2", %"struct.std::__1::atomic.2", i8, i8 }>
%class.sk_sp.338 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.339, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.340, %class.SkTDArray.341, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.339 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.340 = type { i8*, i32, i32 }
%class.SkTDArray.341 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.342 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.342 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.343", [3 x i8] }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.353" = type { %"class.absl::optional_internal::optional_data.354" }
%"class.absl::optional_internal::optional_data.354" = type { %"class.absl::optional_internal::optional_data_base.355" }
%"class.absl::optional_internal::optional_data_base.355" = type { %"class.absl::optional_internal::optional_data_dtor_base.356" }
%"class.absl::optional_internal::optional_data_dtor_base.356" = type { i8, %union.anon.357 }
%union.anon.357 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::NativeTheme" = type opaque
%"class.absl::optional.375" = type { %"class.absl::optional_internal::optional_data.376" }
%"class.absl::optional_internal::optional_data.376" = type { %"class.absl::optional_internal::optional_data_base.377" }
%"class.absl::optional_internal::optional_data_base.377" = type { %"class.absl::optional_internal::optional_data_dtor_base.378" }
%"class.absl::optional_internal::optional_data_dtor_base.378" = type { i8, %union.anon.379 }
%union.anon.379 = type { i8 }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.std::__1::vector.389"* }
%"class.std::__1::vector.389" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.405" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.406", i64, i32, [4 x i8] }>
%"class.base::LinkedList.406" = type { %"class.base::LinkNode.407" }
%"class.base::LinkNode.407" = type { %"class.base::internal::LinkNodeBase" }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.gfx::NineImagePainter" = type { [9 x %"class.gfx::ImageSkia"] }
%"class.gfx::InsetsF" = type { float, float, float, float }
%"class.views::(anonymous namespace)::SolidRoundRectPainter" = type <{ %"class.views::Painter", i32, i32, float, %"class.gfx::Insets", i32, i8, [7 x i8] }>
%"class.gfx::ScopedCanvas" = type { i32 (...)**, %"class.gfx::Canvas"* }
%"class.views::(anonymous namespace)::ImagePainter" = type { %"class.views::Painter", %"class.std::__1::unique_ptr.800" }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.gfx::NineImagePainter"* }
%"class.views::(anonymous namespace)::SolidFocusPainter" = type { %"class.views::Painter", i32, i32, %"class.gfx::InsetsF" }
%"class.views::(anonymous namespace)::PaintedLayer" = type { %"class.ui::LayerOwner", %"class.ui::LayerDelegate", %"class.std::__1::unique_ptr.785" }
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.views::Painter"* }
%"class.ui::PaintRecorder" = type { %"class.ui::PaintContext"*, %class.scoped_refptr.954, %"class.cc::RecordPaintCanvas", %"class.gfx::Canvas", %"class.ui::PaintCache"*, %"class.gfx::Size" }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.955", %struct.SkRect }
%"class.absl::optional.955" = type { %"class.absl::optional_internal::optional_data.956" }
%"class.absl::optional_internal::optional_data.956" = type { %"class.absl::optional_internal::optional_data_base.957" }
%"class.absl::optional_internal::optional_data_base.957" = type { %"class.absl::optional_internal::optional_data_dtor_base.958" }
%"class.absl::optional_internal::optional_data_dtor_base.958" = type { i8, %union.anon.959 }
%union.anon.959 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }

@_ZTVN5views7PainterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Painter"*)* @_ZN5views7PainterD2Ev to i8*), i8* bitcast (void (%"class.views::Painter"*)* @_ZN5views7PainterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5views12_GLOBAL__N_121SolidRoundRectPainterE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Painter"*)* @_ZN5views7PainterD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::SolidRoundRectPainter"*)* @_ZN5views12_GLOBAL__N_121SolidRoundRectPainterD0Ev to i8*), i8* bitcast (i64 (%"class.views::(anonymous namespace)::SolidRoundRectPainter"*)* @_ZNK5views12_GLOBAL__N_121SolidRoundRectPainter14GetMinimumSizeEv to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::SolidRoundRectPainter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)* @_ZN5views12_GLOBAL__N_121SolidRoundRectPainter5PaintEPN3gfx6CanvasERKNS2_4SizeE to i8*)] }, align 8
@__const._ZN5views12_GLOBAL__N_121SolidRoundRectPainter5PaintEPN3gfx6CanvasERKNS2_4SizeE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.842 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.843 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.867 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.868 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.869 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.86 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.870 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5views12_GLOBAL__N_112ImagePainterE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::(anonymous namespace)::ImagePainter"*)* @_ZN5views12_GLOBAL__N_112ImagePainterD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::ImagePainter"*)* @_ZN5views12_GLOBAL__N_112ImagePainterD0Ev to i8*), i8* bitcast (i64 (%"class.views::(anonymous namespace)::ImagePainter"*)* @_ZNK5views12_GLOBAL__N_112ImagePainter14GetMinimumSizeEv to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::ImagePainter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)* @_ZN5views12_GLOBAL__N_112ImagePainter5PaintEPN3gfx6CanvasERKNS2_4SizeE to i8*)] }, align 8
@_ZTVN5views12_GLOBAL__N_117SolidFocusPainterE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Painter"*)* @_ZN5views7PainterD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::SolidFocusPainter"*)* @_ZN5views12_GLOBAL__N_117SolidFocusPainterD0Ev to i8*), i8* bitcast (i64 (%"class.views::(anonymous namespace)::SolidFocusPainter"*)* @_ZNK5views12_GLOBAL__N_117SolidFocusPainter14GetMinimumSizeEv to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::SolidFocusPainter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)* @_ZN5views12_GLOBAL__N_117SolidFocusPainter5PaintEPN3gfx6CanvasERKNS2_4SizeE to i8*)] }, align 8
@_ZTVN5views12_GLOBAL__N_112PaintedLayerE = internal unnamed_addr constant { [9 x i8*], [12 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::(anonymous namespace)::PaintedLayer"*)* @_ZN5views12_GLOBAL__N_112PaintedLayerD2Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::PaintedLayer"*)* @_ZN5views12_GLOBAL__N_112PaintedLayerD0Ev to i8*), i8* bitcast (%"class.ui::Layer"* (%"class.ui::LayerOwner"*)* @_ZN2ui10LayerOwner12ReleaseLayerEv to i8*), i8* bitcast (%"class.ui::Layer"* (%"class.ui::LayerOwner"*)* @_ZN2ui10LayerOwner13RecreateLayerEv to i8*), i8* bitcast (void (%"class.ui::LayerOwner"*, %"class.ui::Layer"*)* @_ZN2ui10LayerOwner8SetLayerENSt3__110unique_ptrINS_5LayerENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::PaintedLayer"*, %"class.ui::PaintContext"*)* @_ZN5views12_GLOBAL__N_112PaintedLayer12OnPaintLayerERKN2ui12PaintContextE to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::PaintedLayer"*, float, float)* @_ZN5views12_GLOBAL__N_112PaintedLayer26OnDeviceScaleFactorChangedEff to i8*)], [12 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.views::(anonymous namespace)::PaintedLayer"*, %"class.ui::PaintContext"*)* @_ZThn80_N5views12_GLOBAL__N_112PaintedLayer12OnPaintLayerERKN2ui12PaintContextE to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::PaintedLayer"*, float, float)* @_ZThn80_N5views12_GLOBAL__N_112PaintedLayer26OnDeviceScaleFactorChangedEff to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, %"class.gfx::Rect"*, i32)* @_ZN2ui13LayerDelegate20OnLayerBoundsChangedERKN3gfx4RectENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, %"class.gfx::Transform"*, i32)* @_ZN2ui13LayerDelegate18OnLayerTransformedERKN3gfx9TransformENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, i32)* @_ZN2ui13LayerDelegate21OnLayerOpacityChangedENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*)* @_ZN2ui13LayerDelegate24OnLayerAlphaShapeChangedEv to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, i32)* @_ZN2ui13LayerDelegate33OnLayerFillsBoundsOpaquelyChangedENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*)* @_ZN2ui13LayerDelegate17UpdateVisualStateEv to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::PaintedLayer"*)* @_ZThn80_N5views12_GLOBAL__N_112PaintedLayerD1Ev to i8*), i8* bitcast (void (%"class.views::(anonymous namespace)::PaintedLayer"*)* @_ZThn80_N5views12_GLOBAL__N_112PaintedLayerD0Ev to i8*)] }, align 8
@__const._ZN5views12_GLOBAL__N_112PaintedLayer12OnPaintLayerERKN2ui12PaintContextE.recorder = private unnamed_addr constant { %"class.ui::PaintContext"*, %class.scoped_refptr.954, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } } } } }, %struct.SkRect }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* }, %"class.ui::PaintCache"*, %"class.gfx::Size" } { %"class.ui::PaintContext"* inttoptr (i64 -6148914691236517206 to %"class.ui::PaintContext"*), %class.scoped_refptr.954 { %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*) }, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } } } } }, %struct.SkRect } { %"class.cc::PaintCanvas" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*) }, %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*), { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } } } } } { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } } } } { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } } } { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.13 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.14 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.16" { %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } } } } } } } } }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.0 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.7 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } } } } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } } { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> <{ %"class.cc::PaintCanvas" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*) }, %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.0 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.7 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, %"class.std::__1::unique_ptr.22" { %"class.std::__1::__compressed_pair.23" { %"struct.std::__1::__compressed_pair_elem.24" { %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*) } } }, %"class.cc::ImageProvider"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider"*), { i8, [3 x i8], i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } } } } }, %"class.cc::PaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintCanvas"*) }, %"class.ui::PaintCache"* inttoptr (i64 -6148914691236517206 to %"class.ui::PaintCache"*), %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, align 8

@_ZN5views7PainterD1Ev = hidden unnamed_addr alias void (%"class.views::Painter"*), void (%"class.views::Painter"*)* @_ZN5views7PainterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views7PainterC2Ev(%"class.views::Painter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::Painter", %"class.views::Painter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views7PainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5views7PainterD0Ev(%"class.views::Painter"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views7Painter14PaintPainterAtEPN3gfx6CanvasEPS0_RKNS1_4RectE(%"class.gfx::Canvas"*, %"class.views::Painter"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Vector2d"*
  tail call void @_ZN3gfx6Canvas4SaveEv(%"class.gfx::Canvas"* %0) #13
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i32 %8 to i64
  %14 = or i64 %12, %13
  store i64 %14, i64* %4, align 8
  call void @_ZN3gfx6Canvas9TranslateERKNS_8Vector2dE(%"class.gfx::Canvas"* %0, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %16 = bitcast %"class.views::Painter"* %1 to void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)***
  %17 = load void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)**, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)** %17, i64 3
  %19 = load void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)** %18, align 8
  call void %19(%"class.views::Painter"* %1, %"class.gfx::Canvas"* %0, %"class.gfx::Size"* dereferenceable(8) %15) #13
  call void @_ZN3gfx6Canvas7RestoreEv(%"class.gfx::Canvas"* %0) #13
  ret void
}

declare void @_ZN3gfx6Canvas4SaveEv(%"class.gfx::Canvas"*) local_unnamed_addr #4

declare void @_ZN3gfx6Canvas9TranslateERKNS_8Vector2dE(%"class.gfx::Canvas"*, %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN3gfx6Canvas7RestoreEv(%"class.gfx::Canvas"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views7Painter17PaintFocusPainterEPNS_4ViewEPN3gfx6CanvasEPS0_(%"class.views::View"*, %"class.gfx::Canvas"*, %"class.views::Painter"*) local_unnamed_addr #3 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = icmp eq %"class.views::Painter"* %2, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.views::View"* %0 to i1 (%"class.views::View"*)***
  %9 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %9, i64 62
  %11 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.views::View"* %0) #13
  br i1 %12, label %13, label %27

13:                                               ; preds = %7
  %14 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = tail call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %0) #13
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %17 = extractvalue { i64, i64 } %15, 0
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %19 = extractvalue { i64, i64 } %15, 1
  store i64 %19, i64* %18, align 8
  %20 = bitcast i64* %4 to %"class.gfx::Vector2d"*
  tail call void @_ZN3gfx6Canvas4SaveEv(%"class.gfx::Canvas"* %1) #13
  %21 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  store i64 %17, i64* %4, align 8
  call void @_ZN3gfx6Canvas9TranslateERKNS_8Vector2dE(%"class.gfx::Canvas"* %1, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %22 = bitcast i64* %18 to %"class.gfx::Size"*
  %23 = bitcast %"class.views::Painter"* %2 to void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)***
  %24 = load void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)**, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)** %24, i64 3
  %26 = load void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)** %25, align 8
  call void %26(%"class.views::Painter"* nonnull %2, %"class.gfx::Canvas"* %1, %"class.gfx::Size"* dereferenceable(8) %22) #13
  call void @_ZN3gfx6Canvas7RestoreEv(%"class.gfx::Canvas"* %1) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br label %27

27:                                               ; preds = %3, %13, %7
  ret void
}

declare { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Painter"* @_ZN5views7Painter27CreateSolidRoundRectPainterEjfRKN3gfx6InsetsE11SkBlendModeb(i32, float, %"class.gfx::Insets"* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %6 = zext i1 %4 to i8
  %7 = tail call i8* @_Znwm(i64 48) #14
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views12_GLOBAL__N_121SolidRoundRectPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to float*
  store float %1, float* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 20
  %16 = bitcast %"class.gfx::Insets"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 16, i1 false) #13
  %17 = getelementptr inbounds i8, i8* %7, i64 36
  %18 = bitcast i8* %17 to i32*
  store i32 %3, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %7, i64 40
  store i8 %6, i8* %19, align 8
  %20 = bitcast i8* %7 to %"class.views::Painter"*
  ret %"class.views::Painter"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Painter"* @_ZN5views7Painter35CreateRoundRectWith1PxBorderPainterEjjf11SkBlendModeb(i32, i32, float, i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %6 = zext i1 %4 to i8
  %7 = tail call i8* @_Znwm(i64 48) #14
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views12_GLOBAL__N_121SolidRoundRectPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 %1, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to float*
  store float %2, float* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 20
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 16, i1 false)
  %16 = getelementptr inbounds i8, i8* %7, i64 36
  %17 = bitcast i8* %16 to i32*
  store i32 %3, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %7, i64 40
  store i8 %6, i8* %18, align 8
  %19 = bitcast i8* %7 to %"class.views::Painter"*
  ret %"class.views::Painter"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Painter"* @_ZN5views7Painter18CreateImagePainterERKN3gfx9ImageSkiaERKNS1_6InsetsE(%"class.gfx::ImageSkia"* dereferenceable(8), %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #14
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views12_GLOBAL__N_112ImagePainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = tail call i8* @_Znwm(i64 72) #14
  %7 = bitcast i8* %6 to %"class.gfx::NineImagePainter"*
  tail call void @_ZN3gfx16NineImagePainterC1ERKNS_9ImageSkiaERKNS_6InsetsE(%"class.gfx::NineImagePainter"* nonnull %7, %"class.gfx::ImageSkia"* dereferenceable(8) %0, %"class.gfx::Insets"* dereferenceable(16) %1) #13
  %8 = ptrtoint i8* %6 to i64
  %9 = bitcast i8* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast i8* %3 to %"class.views::Painter"*
  ret %"class.views::Painter"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Painter"* @_ZN5views7Painter22CreateImageGridPainterEPKi(i32*) local_unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #14
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views12_GLOBAL__N_112ImagePainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call %"class.gfx::NineImagePainter"* @_ZN2ui22CreateNineImagePainterEPKi(i32* %0) #13
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to %"class.gfx::NineImagePainter"**
  store %"class.gfx::NineImagePainter"* %4, %"class.gfx::NineImagePainter"** %6, align 8
  %7 = bitcast i8* %2 to %"class.views::Painter"*
  ret %"class.views::Painter"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Painter"* @_ZN5views7Painter23CreateSolidFocusPainterEjRKN3gfx6InsetsE(i32, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.gfx::Insets"* %1 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %6 = bitcast i32* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = trunc i64 %4 to i32
  %9 = lshr i64 %4, 32
  %10 = trunc i64 %9 to i32
  %11 = trunc i64 %7 to i32
  %12 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 -1)
  %13 = extractvalue { i32, i1 } %12, 1
  %14 = extractvalue { i32, i1 } %12, 0
  %15 = select i1 %13, i32 -2147483648, i32 %14, !prof !2
  %16 = icmp sgt i32 %8, 0
  %17 = icmp sgt i32 %15, 0
  %18 = and i1 %16, %17
  %19 = sub nuw nsw i32 2147483647, %8
  %20 = icmp ult i32 %19, %15
  %21 = and i1 %20, %18
  br i1 %21, label %29, label %22

22:                                               ; preds = %2
  %23 = and i32 %15, %8
  %24 = icmp slt i32 %23, 0
  %25 = sub nsw i32 -2147483648, %8
  %26 = icmp sgt i32 %25, %15
  %27 = and i1 %26, %24
  %28 = select i1 %27, i32 %25, i32 %15
  br label %29

29:                                               ; preds = %22, %2
  %30 = phi i32 [ %28, %22 ], [ %19, %2 ]
  %31 = lshr i64 %7, 32
  %32 = trunc i64 %31 to i32
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 -1)
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 -2147483648, i32 %35, !prof !2
  %37 = icmp sgt i32 %10, 0
  %38 = icmp sgt i32 %36, 0
  %39 = and i1 %37, %38
  %40 = sub nuw nsw i32 2147483647, %10
  %41 = icmp ult i32 %40, %36
  %42 = and i1 %41, %39
  br i1 %42, label %50, label %43

43:                                               ; preds = %29
  %44 = and i32 %36, %10
  %45 = icmp slt i32 %44, 0
  %46 = sub nsw i32 -2147483648, %10
  %47 = icmp sgt i32 %46, %36
  %48 = and i1 %47, %45
  %49 = select i1 %48, i32 %46, i32 %36
  br label %50

50:                                               ; preds = %43, %29
  %51 = phi i32 [ %49, %43 ], [ %40, %29 ]
  %52 = tail call i8* @_Znwm(i64 32) #14
  %53 = sitofp i32 %8 to float
  %54 = sitofp i32 %10 to float
  %55 = sitofp i32 %30 to float
  %56 = sitofp i32 %51 to float
  %57 = insertelement <2 x float> undef, float %53, i32 0
  %58 = insertelement <2 x float> %57, float %54, i32 1
  %59 = insertelement <2 x float> undef, float %55, i32 0
  %60 = insertelement <2 x float> %59, float %56, i32 1
  %61 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views12_GLOBAL__N_117SolidFocusPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds i8, i8* %52, i64 8
  %63 = bitcast i8* %62 to i32*
  store i32 %0, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %52, i64 12
  %65 = bitcast i8* %64 to i32*
  store i32 1, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %52, i64 16
  %67 = bitcast i8* %66 to <2 x float>*
  store <2 x float> %58, <2 x float>* %67, align 8
  %68 = getelementptr inbounds i8, i8* %52, i64 24
  %69 = bitcast i8* %68 to <2 x float>*
  store <2 x float> %60, <2 x float>* %69, align 8
  %70 = bitcast i8* %52 to %"class.views::Painter"*
  ret %"class.views::Painter"* %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::Painter"* @_ZN5views7Painter23CreateSolidFocusPainterEjiRKN3gfx7InsetsFE(i32, i32, %"class.gfx::InsetsF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %4 = tail call i8* @_Znwm(i64 32) #14
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views12_GLOBAL__N_117SolidFocusPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %0, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 %1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  %11 = bitcast %"class.gfx::InsetsF"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 16, i1 false) #13
  %12 = bitcast i8* %4 to %"class.views::Painter"*
  ret %"class.views::Painter"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::LayerOwner"* @_ZN5views7Painter18CreatePaintedLayerENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.views::Painter"*) local_unnamed_addr #3 align 2 {
  %2 = ptrtoint %"class.views::Painter"* %0 to i64
  %3 = tail call i8* @_Znwm(i64 96) #14
  %4 = bitcast i8* %3 to %"class.ui::LayerOwner"*
  tail call void @_ZN2ui10LayerOwnerC2ENSt3__110unique_ptrINS_5LayerENS1_14default_deleteIS3_EEEE(%"class.ui::LayerOwner"* nonnull %4, %"class.ui::Layer"* null) #13
  %5 = getelementptr inbounds i8, i8* %3, i64 80
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 88
  %9 = bitcast i8* %8 to i64*
  store i64 %2, i64* %9, align 8
  %10 = tail call i8* @_Znwm(i64 768) #14
  %11 = bitcast i8* %10 to %"class.ui::Layer"*
  tail call void @_ZN2ui5LayerC1ENS_9LayerTypeE(%"class.ui::Layer"* nonnull %11, i32 1) #13
  %12 = bitcast i8* %3 to void (%"class.ui::LayerOwner"*, %"class.ui::Layer"*)***
  %13 = load void (%"class.ui::LayerOwner"*, %"class.ui::Layer"*)**, void (%"class.ui::LayerOwner"*, %"class.ui::Layer"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.ui::LayerOwner"*, %"class.ui::Layer"*)*, void (%"class.ui::LayerOwner"*, %"class.ui::Layer"*)** %13, i64 4
  %15 = load void (%"class.ui::LayerOwner"*, %"class.ui::Layer"*)*, void (%"class.ui::LayerOwner"*, %"class.ui::Layer"*)** %14, align 8
  tail call void %15(%"class.ui::LayerOwner"* nonnull %4, %"class.ui::Layer"* nonnull %11) #13
  %16 = getelementptr inbounds i8, i8* %3, i64 16
  %17 = bitcast i8* %16 to %"class.ui::Layer"**
  %18 = load %"class.ui::Layer"*, %"class.ui::Layer"** %17, align 8
  %19 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %18, i64 0, i32 32
  %20 = bitcast %"class.ui::LayerDelegate"** %19 to i8**
  store i8* %5, i8** %20, align 8
  ret %"class.ui::LayerOwner"* %4
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views7PainterD2Ev(%"class.views::Painter"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_121SolidRoundRectPainterD0Ev(%"class.views::(anonymous namespace)::SolidRoundRectPainter"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.views::(anonymous namespace)::SolidRoundRectPainter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZNK5views12_GLOBAL__N_121SolidRoundRectPainter14GetMinimumSizeEv(%"class.views::(anonymous namespace)::SolidRoundRectPainter"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_121SolidRoundRectPainter5PaintEPN3gfx6CanvasERKNS2_4SizeE(%"class.views::(anonymous namespace)::SolidRoundRectPainter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #3 align 2 {
  %4 = alloca %"class.gfx::ScopedCanvas", align 8
  %5 = alloca %"class.gfx::Rect", align 8
  %6 = alloca %"class.gfx::RectF", align 4
  %7 = alloca %"class.gfx::RectF", align 4
  %8 = alloca %"class.cc::PaintFlags", align 8
  %9 = alloca <4 x float>, align 16
  %10 = bitcast <4 x float>* %9 to %"class.gfx::InsetsF"*
  %11 = bitcast %"class.gfx::ScopedCanvas"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #13
  %12 = bitcast %"class.gfx::ScopedCanvas"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %4, %"class.gfx::Canvas"* %1) #13
  %13 = call float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"* %1) #13
  %14 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  store i32 0, i32* %15, align 8
  store i32 0, i32* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1
  %19 = bitcast %"class.gfx::Size"* %2 to i64*
  %20 = bitcast %"class.gfx::Size"* %18 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidRoundRectPainter", %"class.views::(anonymous namespace)::SolidRoundRectPainter"* %0, i64 0, i32 4
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %5, %"class.gfx::Insets"* dereferenceable(16) %22) #13
  %23 = bitcast %"class.gfx::RectF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 1
  %28 = fcmp oeq float %13, 1.000000e+00
  %29 = bitcast %"class.gfx::RectF"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -1, i64 16, i1 false)
  br i1 %28, label %30, label %37

30:                                               ; preds = %3
  %31 = bitcast %"class.gfx::Rect"* %5 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = load i64, i64* %20, align 8
  br label %93

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %39 = load i32, i32* %15, align 8
  %40 = sitofp i32 %39 to float
  %41 = fmul float %13, %40
  %42 = call float @llvm.floor.f32(float %41) #13
  %43 = fptosi float %42 to i32
  %44 = load i32, i32* %16, align 4
  %45 = sitofp i32 %44 to float
  %46 = fmul float %13, %45
  %47 = call float @llvm.floor.f32(float %46) #13
  %48 = fptosi float %47 to i32
  %49 = load i32, i32* %38, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %37
  %52 = add nsw i32 %49, %39
  %53 = sitofp i32 %52 to float
  %54 = fmul float %13, %53
  %55 = call float @llvm.ceil.f32(float %54) #13
  %56 = fptosi float %55 to i32
  br label %57

57:                                               ; preds = %51, %37
  %58 = phi i32 [ %56, %51 ], [ %43, %37 ]
  %59 = load i32, i32* %17, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %67, label %61

61:                                               ; preds = %57
  %62 = add nsw i32 %59, %44
  %63 = sitofp i32 %62 to float
  %64 = fmul float %13, %63
  %65 = call float @llvm.ceil.f32(float %64) #13
  %66 = fptosi float %65 to i32
  br label %67

67:                                               ; preds = %61, %57
  %68 = phi i32 [ %66, %61 ], [ %48, %57 ]
  %69 = sub nsw i32 %58, %43
  %70 = sub nsw i32 %68, %48
  %71 = icmp sgt i32 %43, 0
  %72 = icmp sgt i32 %69, 0
  %73 = and i1 %71, %72
  %74 = sub nuw nsw i32 2147483647, %43
  %75 = icmp ult i32 %74, %69
  %76 = and i1 %75, %73
  %77 = select i1 %76, i32 %74, i32 %69
  %78 = icmp sgt i32 %48, 0
  %79 = icmp sgt i32 %70, 0
  %80 = and i1 %78, %79
  %81 = sub nuw nsw i32 2147483647, %48
  %82 = icmp ult i32 %81, %70
  %83 = and i1 %82, %80
  %84 = select i1 %83, i32 %81, i32 %70
  %85 = icmp sgt i32 %77, 0
  %86 = select i1 %85, i32 %77, i32 0
  %87 = zext i32 %86 to i64
  %88 = icmp sgt i32 %84, 0
  %89 = select i1 %88, i32 %84, i32 0
  %90 = zext i32 %89 to i64
  %91 = shl nuw nsw i64 %90, 32
  %92 = or i64 %91, %87
  br label %93

93:                                               ; preds = %30, %67
  %94 = phi i32 [ %35, %30 ], [ %48, %67 ]
  %95 = phi i32 [ %33, %30 ], [ %43, %67 ]
  %96 = phi i64 [ %36, %30 ], [ %92, %67 ]
  %97 = sitofp i32 %95 to float
  %98 = sitofp i32 %94 to float
  %99 = trunc i64 %96 to i32
  %100 = lshr i64 %96, 32
  %101 = trunc i64 %100 to i32
  store float %97, float* %24, align 4
  store float %98, float* %25, align 4
  %102 = icmp sgt i32 %99, 0
  %103 = select i1 %102, i32 %99, i32 0
  %104 = sitofp i32 %103 to float
  store float %104, float* %26, align 4
  %105 = icmp sgt i32 %101, 0
  %106 = select i1 %105, i32 %101, i32 0
  %107 = sitofp i32 %106 to float
  store float %107, float* %27, align 4
  %108 = bitcast %"class.gfx::RectF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %108, i8* nonnull align 4 %23, i64 16, i1 false)
  %109 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidRoundRectPainter", %"class.views::(anonymous namespace)::SolidRoundRectPainter"* %0, i64 0, i32 3
  %110 = load float, float* %109, align 8
  %111 = fmul float %13, %110
  %112 = bitcast %"class.cc::PaintFlags"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %112) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5views12_GLOBAL__N_121SolidRoundRectPainter5PaintEPN3gfx6CanvasERKNS2_4SizeE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %8) #13
  %113 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidRoundRectPainter", %"class.views::(anonymous namespace)::SolidRoundRectPainter"* %0, i64 0, i32 5
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %8, i64 0, i32 9
  store i32 %114, i32* %115, align 4
  %116 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidRoundRectPainter", %"class.views::(anonymous namespace)::SolidRoundRectPainter"* %0, i64 0, i32 6
  %117 = load i8, i8* %116, align 8, !range !3
  %118 = icmp eq i8 %117, 0
  %119 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %8, i64 0, i32 10
  %120 = bitcast %union.anon.870* %119 to i16*
  %121 = load i16, i16* %120, align 8
  br i1 %118, label %124, label %122

122:                                              ; preds = %93
  %123 = or i16 %121, 1
  store i16 %123, i16* %120, align 8
  br label %124

124:                                              ; preds = %93, %122
  %125 = phi i16 [ %123, %122 ], [ %121, %93 ]
  %126 = and i16 %125, -193
  store i16 %126, i16* %120, align 8
  %127 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidRoundRectPainter", %"class.views::(anonymous namespace)::SolidRoundRectPainter"* %0, i64 0, i32 1
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %8, i64 0, i32 6
  store i32 %128, i32* %129, align 8
  call void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::RectF"* nonnull dereferenceable(16) %6, float %111, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %8) #13
  %130 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidRoundRectPainter", %"class.views::(anonymous namespace)::SolidRoundRectPainter"* %0, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %141, label %133

133:                                              ; preds = %124
  %134 = bitcast <4 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #13
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %9, align 16
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %7, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #13
  %135 = fadd float %111, -5.000000e-01
  %136 = load i16, i16* %120, align 8
  %137 = and i16 %136, -193
  %138 = or i16 %137, 64
  store i16 %138, i16* %120, align 8
  %139 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %8, i64 0, i32 7
  store float 1.000000e+00, float* %139, align 4
  %140 = load i32, i32* %130, align 4
  store i32 %140, i32* %129, align 8
  call void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::RectF"* nonnull dereferenceable(16) %7, float %135, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %8) #13
  br label %141

141:                                              ; preds = %124, %133
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %112) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"*, %"class.gfx::Canvas"*) unnamed_addr #4

declare float @_ZN3gfx6Canvas21UndoDeviceScaleFactorEv(%"class.gfx::Canvas"*) local_unnamed_addr #4

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #4

declare void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::RectF"* dereferenceable(16), float, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"*, %"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"*) unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare void @_ZN3gfx16NineImagePainterC1ERKNS_9ImageSkiaERKNS_6InsetsE(%"class.gfx::NineImagePainter"*, %"class.gfx::ImageSkia"* dereferenceable(8), %"class.gfx::Insets"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_112ImagePainterD2Ev(%"class.views::(anonymous namespace)::ImagePainter"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::ImagePainter", %"class.views::(anonymous namespace)::ImagePainter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views12_GLOBAL__N_112ImagePainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::ImagePainter", %"class.views::(anonymous namespace)::ImagePainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::NineImagePainter"*, %"class.gfx::NineImagePainter"** %3, align 8
  store %"class.gfx::NineImagePainter"* null, %"class.gfx::NineImagePainter"** %3, align 8
  %5 = icmp eq %"class.gfx::NineImagePainter"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3gfx16NineImagePainterD1Ev(%"class.gfx::NineImagePainter"* nonnull %4) #13
  %7 = bitcast %"class.gfx::NineImagePainter"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_112ImagePainterD0Ev(%"class.views::(anonymous namespace)::ImagePainter"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::ImagePainter", %"class.views::(anonymous namespace)::ImagePainter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views12_GLOBAL__N_112ImagePainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::ImagePainter", %"class.views::(anonymous namespace)::ImagePainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::NineImagePainter"*, %"class.gfx::NineImagePainter"** %3, align 8
  store %"class.gfx::NineImagePainter"* null, %"class.gfx::NineImagePainter"** %3, align 8
  %5 = icmp eq %"class.gfx::NineImagePainter"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3gfx16NineImagePainterD1Ev(%"class.gfx::NineImagePainter"* nonnull %4) #13
  %7 = bitcast %"class.gfx::NineImagePainter"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.views::(anonymous namespace)::ImagePainter"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK5views12_GLOBAL__N_112ImagePainter14GetMinimumSizeEv(%"class.views::(anonymous namespace)::ImagePainter"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::ImagePainter", %"class.views::(anonymous namespace)::ImagePainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::NineImagePainter"*, %"class.gfx::NineImagePainter"** %2, align 8
  %4 = tail call i64 @_ZNK3gfx16NineImagePainter14GetMinimumSizeEv(%"class.gfx::NineImagePainter"* %3) #13
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_112ImagePainter5PaintEPN3gfx6CanvasERKNS2_4SizeE(%"class.views::(anonymous namespace)::ImagePainter"* nocapture readonly, %"class.gfx::Canvas"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #3 align 2 {
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = getelementptr inbounds %"class.views::(anonymous namespace)::ImagePainter", %"class.views::(anonymous namespace)::ImagePainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.gfx::NineImagePainter"*, %"class.gfx::NineImagePainter"** %5, align 8
  %7 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %11 = bitcast %"class.gfx::Size"* %2 to i64*
  %12 = bitcast %"class.gfx::Size"* %10 to i64*
  %13 = load i64, i64* %11, align 4
  store i64 %13, i64* %12, align 4
  call void @_ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectE(%"class.gfx::NineImagePainter"* %6, %"class.gfx::Canvas"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx16NineImagePainterD1Ev(%"class.gfx::NineImagePainter"*) unnamed_addr #9

declare i64 @_ZNK3gfx16NineImagePainter14GetMinimumSizeEv(%"class.gfx::NineImagePainter"*) local_unnamed_addr #4

declare void @_ZN3gfx16NineImagePainter5PaintEPNS_6CanvasERKNS_4RectE(%"class.gfx::NineImagePainter"*, %"class.gfx::Canvas"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

declare %"class.gfx::NineImagePainter"* @_ZN2ui22CreateNineImagePainterEPKi(i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_117SolidFocusPainterD0Ev(%"class.views::(anonymous namespace)::SolidFocusPainter"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.views::(anonymous namespace)::SolidFocusPainter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZNK5views12_GLOBAL__N_117SolidFocusPainter14GetMinimumSizeEv(%"class.views::(anonymous namespace)::SolidFocusPainter"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_117SolidFocusPainter5PaintEPN3gfx6CanvasERKNS2_4SizeE(%"class.views::(anonymous namespace)::SolidFocusPainter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #11 align 2 {
  %4 = alloca %"class.gfx::RectF", align 8
  %5 = bitcast %"class.gfx::RectF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 1
  %10 = bitcast %"class.gfx::Size"* %2 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = trunc i64 %11 to i32
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  store float 0.000000e+00, float* %6, align 8
  store float 0.000000e+00, float* %7, align 4
  %15 = icmp sgt i32 %12, 0
  %16 = select i1 %15, i32 %12, i32 0
  %17 = sitofp i32 %16 to float
  store float %17, float* %8, align 8
  %18 = icmp sgt i32 %14, 0
  %19 = select i1 %18, i32 %14, i32 0
  %20 = sitofp i32 %19 to float
  store float %20, float* %9, align 4
  %21 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidFocusPainter", %"class.views::(anonymous namespace)::SolidFocusPainter"* %0, i64 0, i32 3
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %4, %"class.gfx::InsetsF"* dereferenceable(16) %21) #13
  %22 = bitcast %"class.gfx::RectF"* %4 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 8
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1
  %25 = bitcast %"class.gfx::SizeF"* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 8
  %27 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidFocusPainter", %"class.views::(anonymous namespace)::SolidFocusPainter"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.views::(anonymous namespace)::SolidFocusPainter", %"class.views::(anonymous namespace)::SolidFocusPainter"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  call void @_ZN3gfx6Canvas18DrawSolidFocusRectENS_5RectFEji(%"class.gfx::Canvas"* %1, <2 x float> %23, <2 x float> %26, i32 %28, i32 %30) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret void
}

declare void @_ZN3gfx6Canvas18DrawSolidFocusRectENS_5RectFEji(%"class.gfx::Canvas"*, <2 x float>, <2 x float>, i32, i32) local_unnamed_addr #4

declare void @_ZN2ui10LayerOwnerC2ENSt3__110unique_ptrINS_5LayerENS1_14default_deleteIS3_EEEE(%"class.ui::LayerOwner"*, %"class.ui::Layer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_112PaintedLayerD2Ev(%"class.views::(anonymous namespace)::PaintedLayer"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.views::Painter"*, %"class.views::Painter"** %4, align 8
  store %"class.views::Painter"* null, %"class.views::Painter"** %4, align 8
  %6 = icmp eq %"class.views::Painter"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.views::Painter"* %5 to void (%"class.views::Painter"*)***
  %9 = load void (%"class.views::Painter"*)**, void (%"class.views::Painter"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %9, i64 1
  %11 = load void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %10, align 8
  tail call void %11(%"class.views::Painter"* nonnull %5) #13
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 0
  tail call void @_ZN2ui10LayerOwnerD2Ev(%"class.ui::LayerOwner"* %13) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_112PaintedLayerD0Ev(%"class.views::(anonymous namespace)::PaintedLayer"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.views::Painter"*, %"class.views::Painter"** %4, align 8
  store %"class.views::Painter"* null, %"class.views::Painter"** %4, align 8
  %6 = icmp eq %"class.views::Painter"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.views::Painter"* %5 to void (%"class.views::Painter"*)***
  %9 = load void (%"class.views::Painter"*)**, void (%"class.views::Painter"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %9, i64 1
  %11 = load void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %10, align 8
  tail call void %11(%"class.views::Painter"* nonnull %5) #13
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 0
  tail call void @_ZN2ui10LayerOwnerD2Ev(%"class.ui::LayerOwner"* %13) #13
  %14 = bitcast %"class.views::(anonymous namespace)::PaintedLayer"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  ret void
}

declare %"class.ui::Layer"* @_ZN2ui10LayerOwner12ReleaseLayerEv(%"class.ui::LayerOwner"*) unnamed_addr #4

declare %"class.ui::Layer"* @_ZN2ui10LayerOwner13RecreateLayerEv(%"class.ui::LayerOwner"*) unnamed_addr #4

declare void @_ZN2ui10LayerOwner8SetLayerENSt3__110unique_ptrINS_5LayerENS1_14default_deleteIS3_EEEE(%"class.ui::LayerOwner"*, %"class.ui::Layer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_112PaintedLayer12OnPaintLayerERKN2ui12PaintContextE(%"class.views::(anonymous namespace)::PaintedLayer"* nocapture readonly, %"class.ui::PaintContext"* dereferenceable(40)) unnamed_addr #3 align 2 {
  %3 = alloca %"class.ui::PaintRecorder", align 8
  %4 = bitcast %"class.ui::PaintRecorder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3536, i8* nonnull %4) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ %"class.ui::PaintContext"*, %class.scoped_refptr.954, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } } } } }, %struct.SkRect }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* }, %"class.ui::PaintCache"*, %"class.gfx::Size" }* @__const._ZN5views12_GLOBAL__N_112PaintedLayer12OnPaintLayerERKN2ui12PaintContextE.recorder to i8*), i64 3536, i1 false)
  %5 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.ui::Layer"*, %"class.ui::Layer"** %5, align 8
  %7 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %6, i64 0, i32 12, i32 1
  call void @_ZN2ui13PaintRecorderC1ERKNS_12PaintContextERKN3gfx4SizeE(%"class.ui::PaintRecorder"* nonnull %3, %"class.ui::PaintContext"* dereferenceable(40) %1, %"class.gfx::Size"* dereferenceable(8) %7) #13
  %8 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.views::Painter"*, %"class.views::Painter"** %8, align 8
  %10 = getelementptr inbounds %"class.ui::PaintRecorder", %"class.ui::PaintRecorder"* %3, i64 0, i32 3
  %11 = load %"class.ui::Layer"*, %"class.ui::Layer"** %5, align 8
  %12 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %11, i64 0, i32 12, i32 1
  %13 = bitcast %"class.views::Painter"* %9 to void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)***
  %14 = load void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)**, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)** %14, i64 3
  %16 = load void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)** %15, align 8
  call void %16(%"class.views::Painter"* %9, %"class.gfx::Canvas"* %10, %"class.gfx::Size"* dereferenceable(8) %12) #13
  call void @_ZN2ui13PaintRecorderD1Ev(%"class.ui::PaintRecorder"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 3536, i8* nonnull %4) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_112PaintedLayer26OnDeviceScaleFactorChangedEff(%"class.views::(anonymous namespace)::PaintedLayer"* nocapture, float, float) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn80_N5views12_GLOBAL__N_112PaintedLayer12OnPaintLayerERKN2ui12PaintContextE(%"class.views::(anonymous namespace)::PaintedLayer"* nocapture readonly, %"class.ui::PaintContext"* dereferenceable(40)) unnamed_addr #3 align 2 {
  %3 = alloca %"class.ui::PaintRecorder", align 8
  %4 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 -1, i32 0, i32 2
  %5 = bitcast %"class.ui::PaintRecorder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3536, i8* nonnull %5) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.ui::PaintContext"*, %class.scoped_refptr.954, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" } } } } } } } }, %struct.SkRect }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* }, %"class.ui::PaintCache"*, %"class.gfx::Size" }* @__const._ZN5views12_GLOBAL__N_112PaintedLayer12OnPaintLayerERKN2ui12PaintContextE.recorder to i8*), i64 3536, i1 false) #13
  %6 = getelementptr inbounds %"class.ui::Layer"*, %"class.ui::Layer"** %4, i64 2
  %7 = load %"class.ui::Layer"*, %"class.ui::Layer"** %6, align 8
  %8 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %7, i64 0, i32 12, i32 1
  call void @_ZN2ui13PaintRecorderC1ERKNS_12PaintContextERKN3gfx4SizeE(%"class.ui::PaintRecorder"* nonnull %3, %"class.ui::PaintContext"* dereferenceable(40) %1, %"class.gfx::Size"* dereferenceable(8) %8) #13
  %9 = getelementptr inbounds %"class.ui::Layer"*, %"class.ui::Layer"** %4, i64 11
  %10 = bitcast %"class.ui::Layer"** %9 to %"class.views::Painter"**
  %11 = load %"class.views::Painter"*, %"class.views::Painter"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::PaintRecorder", %"class.ui::PaintRecorder"* %3, i64 0, i32 3
  %13 = load %"class.ui::Layer"*, %"class.ui::Layer"** %6, align 8
  %14 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %13, i64 0, i32 12, i32 1
  %15 = bitcast %"class.views::Painter"* %11 to void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)***
  %16 = load void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)**, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)** %16, i64 3
  %18 = load void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)*, void (%"class.views::Painter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)** %17, align 8
  call void %18(%"class.views::Painter"* %11, %"class.gfx::Canvas"* %12, %"class.gfx::Size"* dereferenceable(8) %14) #13
  call void @_ZN2ui13PaintRecorderD1Ev(%"class.ui::PaintRecorder"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 3536, i8* nonnull %5) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZThn80_N5views12_GLOBAL__N_112PaintedLayer26OnDeviceScaleFactorChangedEff(%"class.views::(anonymous namespace)::PaintedLayer"* nocapture, float, float) unnamed_addr #7 align 2 {
  ret void
}

declare void @_ZN2ui13LayerDelegate20OnLayerBoundsChangedERKN3gfx4RectENS_20PropertyChangeReasonE(%"class.ui::LayerDelegate"*, %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #4

declare void @_ZN2ui13LayerDelegate18OnLayerTransformedERKN3gfx9TransformENS_20PropertyChangeReasonE(%"class.ui::LayerDelegate"*, %"class.gfx::Transform"* dereferenceable(68), i32) unnamed_addr #4

declare void @_ZN2ui13LayerDelegate21OnLayerOpacityChangedENS_20PropertyChangeReasonE(%"class.ui::LayerDelegate"*, i32) unnamed_addr #4

declare void @_ZN2ui13LayerDelegate24OnLayerAlphaShapeChangedEv(%"class.ui::LayerDelegate"*) unnamed_addr #4

declare void @_ZN2ui13LayerDelegate33OnLayerFillsBoundsOpaquelyChangedENS_20PropertyChangeReasonE(%"class.ui::LayerDelegate"*, i32) unnamed_addr #4

declare void @_ZN2ui13LayerDelegate17UpdateVisualStateEv(%"class.ui::LayerDelegate"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn80_N5views12_GLOBAL__N_112PaintedLayerD1Ev(%"class.views::(anonymous namespace)::PaintedLayer"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 -1, i32 0, i32 2
  %3 = bitcast %"class.ui::Layer"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::Layer"*, %"class.ui::Layer"** %2, i64 10
  %5 = bitcast %"class.ui::Layer"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.ui::Layer"*, %"class.ui::Layer"** %2, i64 11
  %7 = bitcast %"class.ui::Layer"** %6 to %"class.views::Painter"**
  %8 = load %"class.views::Painter"*, %"class.views::Painter"** %7, align 8
  store %"class.views::Painter"* null, %"class.views::Painter"** %7, align 8
  %9 = icmp eq %"class.views::Painter"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.views::Painter"* %8 to void (%"class.views::Painter"*)***
  %12 = load void (%"class.views::Painter"*)**, void (%"class.views::Painter"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %12, i64 1
  %14 = load void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %13, align 8
  tail call void %14(%"class.views::Painter"* nonnull %8) #13
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.ui::Layer"** %2 to %"class.ui::LayerOwner"*
  tail call void @_ZN2ui10LayerOwnerD2Ev(%"class.ui::LayerOwner"* %16) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn80_N5views12_GLOBAL__N_112PaintedLayerD0Ev(%"class.views::(anonymous namespace)::PaintedLayer"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.views::(anonymous namespace)::PaintedLayer", %"class.views::(anonymous namespace)::PaintedLayer"* %0, i64 -1, i32 0, i32 2
  %3 = bitcast %"class.ui::Layer"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::Layer"*, %"class.ui::Layer"** %2, i64 10
  %5 = bitcast %"class.ui::Layer"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [12 x i8*] }, { [9 x i8*], [12 x i8*] }* @_ZTVN5views12_GLOBAL__N_112PaintedLayerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.ui::Layer"*, %"class.ui::Layer"** %2, i64 11
  %7 = bitcast %"class.ui::Layer"** %6 to %"class.views::Painter"**
  %8 = load %"class.views::Painter"*, %"class.views::Painter"** %7, align 8
  store %"class.views::Painter"* null, %"class.views::Painter"** %7, align 8
  %9 = icmp eq %"class.views::Painter"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.views::Painter"* %8 to void (%"class.views::Painter"*)***
  %12 = load void (%"class.views::Painter"*)**, void (%"class.views::Painter"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %12, i64 1
  %14 = load void (%"class.views::Painter"*)*, void (%"class.views::Painter"*)** %13, align 8
  tail call void %14(%"class.views::Painter"* nonnull %8) #13
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.ui::Layer"** %2 to %"class.ui::LayerOwner"*
  tail call void @_ZN2ui10LayerOwnerD2Ev(%"class.ui::LayerOwner"* %16) #13
  %17 = bitcast %"class.ui::Layer"** %2 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  ret void
}

declare void @_ZN2ui5LayerC1ENS_9LayerTypeE(%"class.ui::Layer"*, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui10LayerOwnerD2Ev(%"class.ui::LayerOwner"*) unnamed_addr #9

declare void @_ZN2ui13PaintRecorderC1ERKNS_12PaintContextERKN3gfx4SizeE(%"class.ui::PaintRecorder"*, %"class.ui::PaintContext"* dereferenceable(40), %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui13PaintRecorderD1Ev(%"class.ui::PaintRecorder"*) unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
